

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Jan 29 13:18:13 2024

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F46K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1
    87                           	psect	text72,global,reloc=2,class=CODE,delta=1
    88                           	psect	text73,global,reloc=2,class=CODE,delta=1
    89                           	psect	text74,global,reloc=2,class=CODE,delta=1
    90                           	psect	text75,global,reloc=2,class=CODE,delta=1
    91                           	psect	text76,global,reloc=2,class=CODE,delta=1
    92                           	psect	text77,global,reloc=2,class=CODE,delta=1
    93                           	psect	text78,global,reloc=2,class=CODE,delta=1
    94                           	psect	text79,global,reloc=2,class=CODE,delta=1
    95                           	psect	text80,global,reloc=2,class=CODE,delta=1
    96                           	psect	text81,global,reloc=2,class=CODE,delta=1
    97                           	psect	text82,global,reloc=4,class=CODE,delta=1
    98                           	psect	text83,global,reloc=2,class=CODE,delta=1
    99                           	psect	text84,global,reloc=4,class=CODE,delta=1
   100                           	psect	text85,global,reloc=2,class=CODE,delta=1
   101                           	psect	text86,global,reloc=2,class=CODE,delta=1
   102                           	psect	text87,global,reloc=2,class=CODE,delta=1
   103                           	psect	text88,global,reloc=2,class=CODE,delta=1
   104                           	psect	text89,global,reloc=2,class=CODE,delta=1
   105                           	psect	text90,global,reloc=4,class=CODE,delta=1
   106                           	psect	text91,global,reloc=2,class=CODE,delta=1
   107                           	psect	text92,global,reloc=2,class=CODE,delta=1
   108                           	psect	text93,global,reloc=2,class=CODE,delta=1
   109                           	psect	text94,global,reloc=4,class=CODE,delta=1
   110                           	psect	text95,global,reloc=4,class=CODE,delta=1
   111                           	psect	text96,global,reloc=2,class=CODE,delta=1
   112                           	psect	text97,global,reloc=4,class=CODE,delta=1
   113                           	psect	text98,global,reloc=2,class=CODE,delta=1
   114                           	psect	text99,global,reloc=4,class=CODE,delta=1
   115                           	psect	text100,global,reloc=2,class=CODE,delta=1
   116                           	psect	text101,global,reloc=2,class=CODE,delta=1
   117                           	psect	text102,global,reloc=2,class=CODE,delta=1
   118                           	psect	text103,global,reloc=2,class=CODE,delta=1
   119                           	psect	text104,global,reloc=4,class=CODE,delta=1
   120                           	psect	text105,global,reloc=4,class=CODE,delta=1
   121                           	psect	text106,global,reloc=4,class=CODE,delta=1
   122                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   123                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   124                           	psect	text107,global,reloc=4,class=CODE,delta=1
   125                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   126                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   127                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   128  0000                     
   129                           ; Version 2.20
   130                           ; Generated 05/05/2020 GMT
   131                           ; 
   132                           ; Copyright © 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   133                           ; All rights reserved.
   134                           ; 
   135                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   136                           ; 
   137                           ; Redistribution and use in source and binary forms, with or without modification, are
   138                           ; permitted provided that the following conditions are met:
   139                           ; 
   140                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   141                           ;        conditions and the following disclaimer.
   142                           ; 
   143                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   144                           ;        of conditions and the following disclaimer in the documentation and/or other
   145                           ;        materials provided with the distribution.
   146                           ; 
   147                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   148                           ;        software without specific prior written permission.
   149                           ; 
   150                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   151                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   152                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   153                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   154                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   155                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   156                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   157                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   158                           ; 
   159                           ; 
   160                           ; Code-generator required, PIC18F46K42 Definitions
   161                           ; 
   162                           ; SFR Addresses
   163  0000                     
   164                           	psect	nvCOMRAM
   165  00004C                     __pnvCOMRAM:
   166                           	callstack 0
   167  00004C                     _uart1TxBufferRemaining:
   168                           	callstack 0
   169  00004C                     	ds	1
   170                           
   171                           	psect	nvBANK1
   172  00018E                     __pnvBANK1:
   173                           	callstack 0
   174  00018E                     _TMR4_InterruptHandler:
   175                           	callstack 0
   176  00018E                     	ds	2
   177  000190                     _timer3ReloadVal:
   178                           	callstack 0
   179  000190                     	ds	2
   180  000192                     _TMR5_GateInterruptHandler:
   181                           	callstack 0
   182  000192                     	ds	2
   183  000194                     _timer5ReloadVal:
   184                           	callstack 0
   185  000194                     	ds	2
   186  000196                     _CCP4_CallBack:
   187                           	callstack 0
   188  000196                     	ds	2
   189  000198                     _CCP3_CallBack:
   190                           	callstack 0
   191  000198                     	ds	2
   192  00019A                     _UART1_ErrorHandler:
   193                           	callstack 0
   194  00019A                     	ds	2
   195  00019C                     _UART1_OverrunErrorHandler:
   196                           	callstack 0
   197  00019C                     	ds	2
   198  00019E                     _UART1_FramingErrorHandler:
   199                           	callstack 0
   200  00019E                     	ds	2
   201  0001A0                     _UART1_TxInterruptHandler:
   202                           	callstack 0
   203  0001A0                     	ds	2
   204  0001A2                     _UART1_RxInterruptHandler:
   205                           	callstack 0
   206  0001A2                     	ds	2
   207  0000                     _PIR4bits	set	14756
   208  0000                     _PIR1bits	set	14753
   209  0000                     _PIE1bits	set	14737
   210  0000                     _PIE7bits	set	14743
   211  0000                     _PIR7bits	set	14759
   212  0000                     _PIR6bits	set	14758
   213  0000                     _PIE8bits	set	14744
   214  0000                     _PIR8bits	set	14760
   215  0000                     _PIE10bits	set	14746
   216  0000                     _PIR10bits	set	14762
   217  0000                     _PIE9bits	set	14745
   218  0000                     _PIR9bits	set	14761
   219  0000                     _IPR9bits	set	14729
   220  0000                     _IPR7bits	set	14727
   221  0000                     _IPR8bits	set	14728
   222  0000                     _IPR10bits	set	14730
   223  0000                     _IPR1bits	set	14721
   224  0000                     _IPR3bits	set	14723
   225  0000                     _PIE3bits	set	14739
   226  0000                     _PMD7	set	14791
   227  0000                     _PMD6	set	14790
   228  0000                     _PMD5	set	14789
   229  0000                     _PMD4	set	14788
   230  0000                     _PMD3	set	14787
   231  0000                     _PMD2	set	14786
   232  0000                     _PMD1	set	14785
   233  0000                     _PMD0	set	14784
   234  0000                     _OSCTUNE	set	14814
   235  0000                     _OSCFRQ	set	14815
   236  0000                     _OSCEN	set	14813
   237  0000                     _OSCCON3	set	14811
   238  0000                     _OSCCON1	set	14809
   239  0000                     _CCP4PPS	set	15056
   240  0000                     _SMT1SIGPPS	set	15058
   241  0000                     _CLCIN2PPS	set	15067
   242  0000                     _RB3PPS	set	14859
   243  0000                     _RA3PPS	set	14851
   244  0000                     _SMT1WINPPS	set	15057
   245  0000                     _CLCIN0PPS	set	15065
   246  0000                     _RA4PPS	set	14852
   247  0000                     _T5GPPS	set	15049
   248  0000                     _RA0PPS	set	14848
   249  0000                     _U1RXPPS	set	15077
   250  0000                     _RA1PPS	set	14849
   251  0000                     _CLCIN3PPS	set	15068
   252  0000                     _CCP3PPS	set	15055
   253  0000                     _INLVLE	set	14980
   254  0000                     _INLVLD	set	14964
   255  0000                     _INLVLC	set	14948
   256  0000                     _INLVLB	set	14932
   257  0000                     _INLVLA	set	14916
   258  0000                     _SLRCONE	set	14979
   259  0000                     _SLRCOND	set	14963
   260  0000                     _SLRCONC	set	14947
   261  0000                     _SLRCONB	set	14931
   262  0000                     _SLRCONA	set	14915
   263  0000                     _ODCOND	set	14962
   264  0000                     _ODCONC	set	14946
   265  0000                     _ODCONB	set	14930
   266  0000                     _ODCONA	set	14914
   267  0000                     _ODCONE	set	14978
   268  0000                     _RD1I2C	set	14971
   269  0000                     _RD0I2C	set	14970
   270  0000                     _RC4I2C	set	14955
   271  0000                     _RC3I2C	set	14954
   272  0000                     _RB2I2C	set	14939
   273  0000                     _RB1I2C	set	14938
   274  0000                     _WPUC	set	14945
   275  0000                     _WPUA	set	14913
   276  0000                     _WPUB	set	14929
   277  0000                     _WPUE	set	14977
   278  0000                     _WPUD	set	14961
   279  0000                     _ANSELA	set	14912
   280  0000                     _ANSELE	set	14976
   281  0000                     _ANSELB	set	14928
   282  0000                     _ANSELC	set	14944
   283  0000                     _ANSELD	set	14960
   284  0000                     _CLC3CON	set	15456
   285  0000                     _CLC3GLS3	set	15465
   286  0000                     _CLC3GLS2	set	15464
   287  0000                     _CLC3GLS1	set	15463
   288  0000                     _CLC3GLS0	set	15462
   289  0000                     _CLC3SEL3	set	15461
   290  0000                     _CLC3SEL2	set	15460
   291  0000                     _CLC3SEL1	set	15459
   292  0000                     _CLC3SEL0	set	15458
   293  0000                     _CLC3POL	set	15457
   294  0000                     _CLC3CONbits	set	15456
   295  0000                     _U1RXB	set	15848
   296  0000                     _U1TXB	set	15850
   297  0000                     _U1ERRIRbits	set	15865
   298  0000                     _U1ERRIE	set	15866
   299  0000                     _U1ERRIR	set	15865
   300  0000                     _U1UIR	set	15864
   301  0000                     _U1FIFO	set	15863
   302  0000                     _U1BRGH	set	15862
   303  0000                     _U1BRGL	set	15861
   304  0000                     _U1CON2	set	15860
   305  0000                     _U1CON1	set	15859
   306  0000                     _U1CON0	set	15858
   307  0000                     _U1P3H	set	15857
   308  0000                     _U1P3L	set	15856
   309  0000                     _U1P2H	set	15855
   310  0000                     _U1P2L	set	15854
   311  0000                     _U1P1H	set	15853
   312  0000                     _U1P1L	set	15852
   313  0000                     _ADCON1bits	set	16121
   314  0000                     _ADERRL	set	16098
   315  0000                     _ADERRH	set	16099
   316  0000                     _ADPREVL	set	16109
   317  0000                     _ADPREVH	set	16110
   318  0000                     _ADFLTRL	set	16102
   319  0000                     _ADFLTRH	set	16103
   320  0000                     _ADSTATbits	set	16124
   321  0000                     _ADACCL	set	16104
   322  0000                     _ADACCH	set	16105
   323  0000                     _ADCON2bits	set	16122
   324  0000                     _ADCNT	set	16107
   325  0000                     _ADCON3bits	set	16123
   326  0000                     _ADRESL	set	16111
   327  0000                     _ADRESH	set	16112
   328  0000                     _ADCON0bits	set	16120
   329  0000                     _ADCON0	set	16120
   330  0000                     _ADCLK	set	16127
   331  0000                     _ADACT	set	16126
   332  0000                     _ADREF	set	16125
   333  0000                     _ADSTAT	set	16124
   334  0000                     _ADCON3	set	16123
   335  0000                     _ADCON2	set	16122
   336  0000                     _ADCON1	set	16121
   337  0000                     _ADPREH	set	16119
   338  0000                     _ADPREL	set	16118
   339  0000                     _ADCAP	set	16117
   340  0000                     _ADACQH	set	16116
   341  0000                     _ADACQL	set	16115
   342  0000                     _ADPCH	set	16113
   343  0000                     _ADRPT	set	16108
   344  0000                     _ADACCU	set	16106
   345  0000                     _ADSTPTH	set	16101
   346  0000                     _ADSTPTL	set	16100
   347  0000                     _ADUTHH	set	16097
   348  0000                     _ADUTHL	set	16096
   349  0000                     _ADLTHH	set	16095
   350  0000                     _ADLTHL	set	16094
   351  0000                     _SMT1TMR	set	16146
   352  0000                     _SMT1CPR	set	16149
   353  0000                     _SMT1CPW	set	16152
   354  0000                     _SMT1PR	set	16155
   355  0000                     _SMT1STATbits	set	16160
   356  0000                     _SMT1CON0bits	set	16158
   357  0000                     _SMT1CON1bits	set	16159
   358  0000                     _SMT1PRL	set	16155
   359  0000                     _SMT1PRH	set	16156
   360  0000                     _SMT1PRU	set	16157
   361  0000                     _SMT1SIG	set	16162
   362  0000                     _SMT1WIN	set	16163
   363  0000                     _SMT1CLK	set	16161
   364  0000                     _SMT1STAT	set	16160
   365  0000                     _SMT1CON1	set	16159
   366  0000                     _SMT1CON0	set	16158
   367  0000                     _CCPTMRS1bits	set	16223
   368  0000                     _CCPTMRS0bits	set	16222
   369  0000                     _PORTBbits	set	16331
   370  0000                     _PR2	set	16299
   371  0000                     _TMR2	set	16298
   372  0000                     _T2CONbits	set	16300
   373  0000                     _T2RSTbits	set	16303
   374  0000                     _T2HLTbits	set	16301
   375  0000                     _T2CON	set	16300
   376  0000                     _T2TMR	set	16298
   377  0000                     _T2PR	set	16299
   378  0000                     _T2RST	set	16303
   379  0000                     _T2HLT	set	16301
   380  0000                     _T2CLKCON	set	16302
   381  0000                     _PWM6DCL	set	16232
   382  0000                     _PWM6DCH	set	16233
   383  0000                     _PWM6CON	set	16234
   384  0000                     _PWM5DCL	set	16236
   385  0000                     _PWM5DCH	set	16237
   386  0000                     _PWM5CON	set	16238
   387  0000                     _PWM8DCL	set	16224
   388  0000                     _PWM8DCH	set	16225
   389  0000                     _PWM8CON	set	16226
   390  0000                     _PWM7DCL	set	16228
   391  0000                     _PWM7DCH	set	16229
   392  0000                     _PWM7CON	set	16230
   393  0000                     _PR4	set	16287
   394  0000                     _TMR4	set	16286
   395  0000                     _T4CONbits	set	16288
   396  0000                     _T4RSTbits	set	16291
   397  0000                     _T4HLTbits	set	16289
   398  0000                     _T4CON	set	16288
   399  0000                     _T4TMR	set	16286
   400  0000                     _T4PR	set	16287
   401  0000                     _T4RST	set	16291
   402  0000                     _T4HLT	set	16289
   403  0000                     _T4CLKCON	set	16290
   404  0000                     _T3GCONbits	set	16295
   405  0000                     _T3CONbits	set	16294
   406  0000                     _T3CON	set	16294
   407  0000                     _TMR3L	set	16292
   408  0000                     _TMR3H	set	16293
   409  0000                     _T3CLK	set	16297
   410  0000                     _T3GATE	set	16296
   411  0000                     _T3GCON	set	16295
   412  0000                     _T5GCONbits	set	16283
   413  0000                     _T5CONbits	set	16282
   414  0000                     _T5CON	set	16282
   415  0000                     _TMR5L	set	16280
   416  0000                     _TMR5H	set	16281
   417  0000                     _T5CLK	set	16285
   418  0000                     _T5GATE	set	16284
   419  0000                     _T5GCON	set	16283
   420  0000                     _CCPR4L	set	16240
   421  0000                     _CCPR4H	set	16241
   422  0000                     _CCP4CAP	set	16243
   423  0000                     _CCP4CON	set	16242
   424  0000                     _CCPR3L	set	16244
   425  0000                     _CCPR3H	set	16245
   426  0000                     _CCP3CAP	set	16247
   427  0000                     _CCP3CON	set	16246
   428  0000                     _PORTDbits	set	16333
   429  0000                     _IVTBASEL	set	16341
   430  0000                     _IVTBASEH	set	16342
   431  0000                     _IVTBASEU	set	16343
   432  0000                     _IVTLOCKbits	set	16340
   433  0000                     _IVTLOCK	set	16340
   434  0000                     _INTCON0bits	set	16338
   435  0000                     _TRISD	set	16325
   436  0000                     _TRISC	set	16324
   437  0000                     _TRISB	set	16323
   438  0000                     _TRISA	set	16322
   439  0000                     _TRISE	set	16326
   440  0000                     _LATC	set	16316
   441  0000                     _LATB	set	16315
   442  0000                     _LATA	set	16314
   443  0000                     _LATD	set	16317
   444  0000                     _LATE	set	16318
   445  0000                     _GIE	set	130711
   446                           
   447                           	psect	smallconst
   448  001000                     __psmallconst:
   449                           	callstack 0
   450  001000  00                 	db	0
   451  001001                     STR_4:
   452                           
   453                           ; BSR set to: 1
   454  001001  43                 	db	67	;'C'
   455  001002  75                 	db	117	;'u'
   456  001003  72                 	db	114	;'r'
   457  001004  76                 	db	118	;'v'
   458  001005  65                 	db	101	;'e'
   459  001006  4C                 	db	76	;'L'
   460  001007  65                 	db	101	;'e'
   461  001008  66                 	db	102	;'f'
   462  001009  74                 	db	116	;'t'
   463  00100A  43                 	db	67	;'C'
   464  00100B  6F                 	db	111	;'o'
   465  00100C  75                 	db	117	;'u'
   466  00100D  6E                 	db	110	;'n'
   467  00100E  74                 	db	116	;'t'
   468  00100F  3A                 	db	58	;':'
   469  001010  20                 	db	32
   470  001011  25                 	db	37
   471  001012  75                 	db	117	;'u'
   472  001013  20                 	db	32
   473  001014  20                 	db	32
   474  001015  20                 	db	32
   475  001016  7C                 	db	124
   476  001017  20                 	db	32
   477  001018  20                 	db	32
   478  001019  20                 	db	32
   479  00101A  00                 	db	0
   480  00101B                     STR_3:
   481                           
   482                           ; BSR set to: 1
   483  00101B  52                 	db	82	;'R'
   484  00101C  65                 	db	101	;'e'
   485  00101D  73                 	db	115	;'s'
   486  00101E  65                 	db	101	;'e'
   487  00101F  74                 	db	116	;'t'
   488  001020  20                 	db	32
   489  001021  43                 	db	67	;'C'
   490  001022  75                 	db	117	;'u'
   491  001023  72                 	db	114	;'r'
   492  001024  76                 	db	118	;'v'
   493  001025  65                 	db	101	;'e'
   494  001026  43                 	db	67	;'C'
   495  001027  6F                 	db	111	;'o'
   496  001028  75                 	db	117	;'u'
   497  001029  6E                 	db	110	;'n'
   498  00102A  74                 	db	116	;'t'
   499  00102B  21                 	db	33
   500  00102C  20                 	db	32
   501  00102D  20                 	db	32
   502  00102E  7C                 	db	124
   503  00102F  20                 	db	32
   504  001030  20                 	db	32
   505  001031  20                 	db	32
   506  001032  00                 	db	0
   507  001033                     STR_6:
   508                           
   509                           ; BSR set to: 1
   510  001033  52                 	db	82	;'R'
   511  001034  6F                 	db	111	;'o'
   512  001035  75                 	db	117	;'u'
   513  001036  6E                 	db	110	;'n'
   514  001037  64                 	db	100	;'d'
   515  001038  54                 	db	84	;'T'
   516  001039  69                 	db	105	;'i'
   517  00103A  6D                 	db	109	;'m'
   518  00103B  65                 	db	101	;'e'
   519  00103C  43                 	db	67	;'C'
   520  00103D  6F                 	db	111	;'o'
   521  00103E  75                 	db	117	;'u'
   522  00103F  6E                 	db	110	;'n'
   523  001040  74                 	db	116	;'t'
   524  001041  3A                 	db	58	;':'
   525  001042  20                 	db	32
   526  001043  25                 	db	37
   527  001044  66                 	db	102	;'f'
   528  001045  0A                 	db	10
   529  001046  0A                 	db	10
   530  001047  00                 	db	0
   531  001048                     STR_5:
   532                           
   533                           ; BSR set to: 1
   534  001048  43                 	db	67	;'C'
   535  001049  75                 	db	117	;'u'
   536  00104A  72                 	db	114	;'r'
   537  00104B  76                 	db	118	;'v'
   538  00104C  65                 	db	101	;'e'
   539  00104D  52                 	db	82	;'R'
   540  00104E  69                 	db	105	;'i'
   541  00104F  67                 	db	103	;'g'
   542  001050  68                 	db	104	;'h'
   543  001051  74                 	db	116	;'t'
   544  001052  43                 	db	67	;'C'
   545  001053  6F                 	db	111	;'o'
   546  001054  75                 	db	117	;'u'
   547  001055  6E                 	db	110	;'n'
   548  001056  74                 	db	116	;'t'
   549  001057  3A                 	db	58	;':'
   550  001058  20                 	db	32
   551  001059  25                 	db	37
   552  00105A  75                 	db	117	;'u'
   553  00105B  0A                 	db	10
   554  00105C  00                 	db	0
   555  00105D                     STR_2:
   556                           
   557                           ; BSR set to: 1
   558  00105D  73                 	db	115	;'s'
   559  00105E  74                 	db	116	;'t'
   560  00105F  61                 	db	97	;'a'
   561  001060  72                 	db	114	;'r'
   562  001061  41                 	db	65	;'A'
   563  001062  63                 	db	99	;'c'
   564  001063  63                 	db	99	;'c'
   565  001064  65                 	db	101	;'e'
   566  001065  6C                 	db	108	;'l'
   567  001066  50                 	db	80	;'P'
   568  001067  6F                 	db	111	;'o'
   569  001068  77                 	db	119	;'w'
   570  001069  65                 	db	101	;'e'
   571  00106A  72                 	db	114	;'r'
   572  00106B  3A                 	db	58	;':'
   573  00106C  20                 	db	32
   574  00106D  25                 	db	37
   575  00106E  64                 	db	100	;'d'
   576  00106F  00                 	db	0
   577  001070                     STR_9:
   578                           
   579                           ; BSR set to: 1
   580  001070  53                 	db	83	;'S'
   581  001071  74                 	db	116	;'t'
   582  001072  6F                 	db	111	;'o'
   583  001073  70                 	db	112	;'p'
   584  001074  20                 	db	32
   585  001075  52                 	db	82	;'R'
   586  001076  65                 	db	101	;'e'
   587  001077  76                 	db	118	;'v'
   588  001078  65                 	db	101	;'e'
   589  001079  72                 	db	114	;'r'
   590  00107A  73                 	db	115	;'s'
   591  00107B  65                 	db	101	;'e'
   592  00107C  0A                 	db	10
   593  00107D  00                 	db	0
   594  00107E                     STR_7:
   595                           
   596                           ; BSR set to: 1
   597  00107E  52                 	db	82	;'R'
   598  00107F  65                 	db	101	;'e'
   599  001080  76                 	db	118	;'v'
   600  001081  65                 	db	101	;'e'
   601  001082  72                 	db	114	;'r'
   602  001083  73                 	db	115	;'s'
   603  001084  65                 	db	101	;'e'
   604  001085  52                 	db	82	;'R'
   605  001086  69                 	db	105	;'i'
   606  001087  67                 	db	103	;'g'
   607  001088  74                 	db	116	;'t'
   608  001089  68                 	db	104	;'h'
   609  00108A  0A                 	db	10
   610  00108B  00                 	db	0
   611  00108C                     STR_8:
   612                           
   613                           ; BSR set to: 1
   614  00108C  52                 	db	82	;'R'
   615  00108D  65                 	db	101	;'e'
   616  00108E  76                 	db	118	;'v'
   617  00108F  65                 	db	101	;'e'
   618  001090  72                 	db	114	;'r'
   619  001091  73                 	db	115	;'s'
   620  001092  65                 	db	101	;'e'
   621  001093  4C                 	db	76	;'L'
   622  001094  65                 	db	101	;'e'
   623  001095  66                 	db	102	;'f'
   624  001096  74                 	db	116	;'t'
   625  001097  0A                 	db	10
   626  001098  00                 	db	0
   627  001099                     STR_1:
   628                           
   629                           ; BSR set to: 1
   630  001099  42                 	db	66	;'B'
   631  00109A  56                 	db	86	;'V'
   632  00109B  6F                 	db	111	;'o'
   633  00109C  6C                 	db	108	;'l'
   634  00109D  74                 	db	116	;'t'
   635  00109E  3A                 	db	58	;':'
   636  00109F  20                 	db	32
   637  0010A0  25                 	db	37
   638  0010A1  75                 	db	117	;'u'
   639  0010A2  0A                 	db	10
   640  0010A3  00                 	db	0
   641  0010A4                     STR_10:
   642                           
   643                           ; BSR set to: 1
   644  0010A4  49                 	db	73	;'I'
   645  0010A5  4E                 	db	78	;'N'
   646  0010A6  46                 	db	70	;'F'
   647  0010A7  00                 	db	0
   648  0010A8                     STR_14:
   649                           
   650                           ; BSR set to: 1
   651  0010A8  4E                 	db	78	;'N'
   652  0010A9  41                 	db	65	;'A'
   653  0010AA  4E                 	db	78	;'N'
   654  0010AB  00                 	db	0
   655  0010AC                     STR_11:
   656                           
   657                           ; BSR set to: 1
   658  0010AC  69                 	db	105	;'i'
   659  0010AD  6E                 	db	110	;'n'
   660  0010AE  66                 	db	102	;'f'
   661  0010AF  00                 	db	0
   662  0010B0                     STR_15:
   663                           
   664                           ; BSR set to: 1
   665  0010B0  6E                 	db	110	;'n'
   666  0010B1  61                 	db	97	;'a'
   667  0010B2  6E                 	db	110	;'n'
   668  0010B3  00                 	db	0
   669  0010B4                     STR_18:
   670                           
   671                           ; BSR set to: 1
   672  0010B4  6C                 	db	108	;'l'
   673  0010B5  66                 	db	102	;'f'
   674  0010B6  00                 	db	0
   675  0010B7  00                 	db	0	; dummy byte at the end
   676  0000                     
   677                           ; #config settings
   678                           
   679                           	psect	cinit
   680  005D12                     __pcinit:
   681                           	callstack 0
   682  005D12                     start_initialization:
   683                           	callstack 0
   684  005D12                     __initialization:
   685                           	callstack 0
   686                           
   687                           ; Clear objects allocated to BANK1 (142 bytes)
   688  005D12  EE00  F100         	lfsr	0,__pbssBANK1
   689  005D16  0E8E               	movlw	142
   690  005D18                     clear_0:
   691  005D18  6AEE               	clrf	postinc0,c
   692  005D1A  06E8               	decf	wreg,f,c
   693  005D1C  E1FD               	bnz	clear_0
   694                           
   695                           ; Clear objects allocated to BANK0 (20 bytes)
   696  005D1E  EE00  F0EB         	lfsr	0,__pbssBANK0
   697  005D22  0E14               	movlw	20
   698  005D24                     clear_1:
   699  005D24  6AEE               	clrf	postinc0,c
   700  005D26  06E8               	decf	wreg,f,c
   701  005D28  E1FD               	bnz	clear_1
   702                           
   703                           ; Clear objects allocated to COMRAM (18 bytes)
   704  005D2A  EE00  F03A         	lfsr	0,__pbssCOMRAM
   705  005D2E  0E12               	movlw	18
   706  005D30                     clear_2:
   707  005D30  6AEE               	clrf	postinc0,c
   708  005D32  06E8               	decf	wreg,f,c
   709  005D34  E1FD               	bnz	clear_2
   710                           
   711                           ;
   712                           ; Setup IVTBASE
   713                           ;
   714  005D36  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   715  005D38  6ED5               	movwf	213,c
   716  005D3A  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   717  005D3C  6ED6               	movwf	214,c
   718  005D3E  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   719  005D40  6ED7               	movwf	215,c
   720  005D42                     end_of_initialization:
   721                           	callstack 0
   722  005D42                     __end_of__initialization:
   723                           	callstack 0
   724  005D42  0100               	movlb	0
   725  005D44  EFBD  F030         	goto	_main	;jump to C main() function
   726                           
   727                           	psect	bssCOMRAM
   728  00003A                     __pbssCOMRAM:
   729                           	callstack 0
   730  00003A                     _width:
   731                           	callstack 0
   732  00003A                     	ds	2
   733  00003C                     _prec:
   734                           	callstack 0
   735  00003C                     	ds	2
   736  00003E                     _flags:
   737                           	callstack 0
   738  00003E                     	ds	2
   739  000040                     _delay:
   740                           	callstack 0
   741  000040                     	ds	1
   742  000041                     _curveMode:
   743                           	callstack 0
   744  000041                     	ds	1
   745  000042                     _uart1RxLastError:
   746                           	callstack 0
   747  000042                     	ds	1
   748  000043                     _uart1RxCount:
   749                           	callstack 0
   750  000043                     	ds	1
   751  000044                     _uart1RxTail:
   752                           	callstack 0
   753  000044                     	ds	1
   754  000045                     _uart1RxHead:
   755                           	callstack 0
   756  000045                     	ds	1
   757  000046                     _uart1TxTail:
   758                           	callstack 0
   759  000046                     	ds	1
   760  000047                     _uart1TxHead:
   761                           	callstack 0
   762  000047                     	ds	1
   763  000048                     _smtPeriod:
   764                           	callstack 0
   765  000048                     	ds	4
   766                           
   767                           	psect	bssBANK0
   768  0000EB                     __pbssBANK0:
   769                           	callstack 0
   770  0000EB                     _BatteryVolt:
   771                           	callstack 0
   772  0000EB                     	ds	2
   773  0000ED                     _actMotorPow:
   774                           	callstack 0
   775  0000ED                     	ds	2
   776  0000EF                     _currentSpeed:
   777                           	callstack 0
   778  0000EF                     	ds	2
   779  0000F1                     _setSpeed:
   780                           	callstack 0
   781  0000F1                     	ds	2
   782  0000F3                     TMR4_ISR@CountCallBack:
   783                           	callstack 0
   784  0000F3                     	ds	2
   785  0000F5                     _distRight:
   786                           	callstack 0
   787  0000F5                     	ds	2
   788  0000F7                     _distLeft:
   789                           	callstack 0
   790  0000F7                     	ds	2
   791  0000F9                     _curveRightCount:
   792                           	callstack 0
   793  0000F9                     	ds	1
   794  0000FA                     _curveLeftCount:
   795                           	callstack 0
   796  0000FA                     	ds	1
   797  0000FB                     _cycle10ms:
   798                           	callstack 0
   799  0000FB                     	ds	1
   800  0000FC                     _driveMode:
   801                           	callstack 0
   802  0000FC                     	ds	1
   803  0000FD                     _distFront:
   804                           	callstack 0
   805  0000FD                     	ds	2
   806                           
   807                           	psect	bssBANK1
   808  000100                     __pbssBANK1:
   809                           	callstack 0
   810  000100                     _uart1RxStatusBuffer:
   811                           	callstack 0
   812  000100                     	ds	8
   813  000108                     _uart1RxBuffer:
   814                           	callstack 0
   815  000108                     	ds	8
   816  000110                     _uart1TxBuffer:
   817                           	callstack 0
   818  000110                     	ds	8
   819  000118                     floorf@F527:
   820                           	callstack 0
   821  000118                     	ds	4
   822  00011C                     ___fpclassifyf@F465:
   823                           	callstack 0
   824  00011C                     	ds	4
   825  000120                     _smtWay:
   826                           	callstack 0
   827  000120                     	ds	4
   828  000124                     _smtDuty:
   829                           	callstack 0
   830  000124                     	ds	4
   831  000128                     _nout:
   832                           	callstack 0
   833  000128                     	ds	2
   834  00012A                     _roundTimeCount:
   835                           	callstack 0
   836  00012A                     	ds	2
   837  00012C                     _reverseTime:
   838                           	callstack 0
   839  00012C                     	ds	2
   840  00012E                     _oldSpeed:
   841                           	callstack 0
   842  00012E                     	ds	2
   843  000130                     _motPow:
   844                           	callstack 0
   845  000130                     	ds	2
   846  000132                     _battCheckCount:
   847                           	callstack 0
   848  000132                     	ds	2
   849  000134                     _oldDistRight:
   850                           	callstack 0
   851  000134                     	ds	2
   852  000136                     _oldDistLeft:
   853                           	callstack 0
   854  000136                     	ds	2
   855  000138                     _reverseCount:
   856                           	callstack 0
   857  000138                     	ds	2
   858  00013A                     _distRightM:
   859                           	callstack 0
   860  00013A                     	ds	2
   861  00013C                     _distLeftM:
   862                           	callstack 0
   863  00013C                     	ds	2
   864  00013E                     _dbuf:
   865                           	callstack 0
   866  00013E                     	ds	80
   867                           
   868                           	psect	cstackBANK1
   869  0001A4                     __pcstackBANK1:
   870                           	callstack 0
   871  0001A4                     ?_vfprintf:
   872                           	callstack 0
   873  0001A4                     vfprintf@fp:
   874                           	callstack 0
   875                           
   876                           ; 2 bytes @ 0x0
   877  0001A4                     	ds	2
   878  0001A6                     vfprintf@fmt:
   879                           	callstack 0
   880                           
   881                           ; 2 bytes @ 0x2
   882  0001A6                     	ds	2
   883  0001A8                     vfprintf@ap:
   884                           	callstack 0
   885                           
   886                           ; 2 bytes @ 0x4
   887  0001A8                     	ds	2
   888  0001AA                     vfprintf@cfmt:
   889                           	callstack 0
   890                           
   891                           ; 2 bytes @ 0x6
   892  0001AA                     	ds	2
   893  0001AC                     ?_printf:
   894                           	callstack 0
   895  0001AC                     printf@fmt:
   896                           	callstack 0
   897                           
   898                           ; 2 bytes @ 0x8
   899  0001AC                     	ds	6
   900  0001B2                     printf@ap:
   901                           	callstack 0
   902                           
   903                           ; 2 bytes @ 0xE
   904  0001B2                     	ds	2
   905  0001B4                     startAccell@i:
   906                           	callstack 0
   907  0001B4                     checkCurveCount@roundTime:
   908                           	callstack 0
   909                           
   910                           ; 4 bytes @ 0x10
   911  0001B4                     	ds	4
   912                           
   913                           	psect	cstackBANK0
   914  000060                     __pcstackBANK0:
   915                           	callstack 0
   916  000060                     ?_dtoa:
   917                           	callstack 0
   918  000060                     ?_utoa:
   919                           	callstack 0
   920  000060                     ___flmul@sign:
   921                           	callstack 0
   922  000060                     dtoa@fp:
   923                           	callstack 0
   924  000060                     utoa@fp:
   925                           	callstack 0
   926  000060                     ___fldiv@rem:
   927                           	callstack 0
   928                           
   929                           ; 4 bytes @ 0x0
   930  000060                     	ds	1
   931  000061                     ___flmul@aexp:
   932                           	callstack 0
   933                           
   934                           ; 1 bytes @ 0x1
   935  000061                     	ds	1
   936  000062                     ___flmul@grs:
   937                           	callstack 0
   938  000062                     dtoa@d:
   939                           	callstack 0
   940  000062                     utoa@d:
   941                           	callstack 0
   942                           
   943                           ; 8 bytes @ 0x2
   944  000062                     	ds	2
   945  000064                     ___fldiv@sign:
   946                           	callstack 0
   947                           
   948                           ; 1 bytes @ 0x4
   949  000064                     	ds	1
   950  000065                     ___fldiv@new_exp:
   951                           	callstack 0
   952                           
   953                           ; 2 bytes @ 0x5
   954  000065                     	ds	1
   955  000066                     ___flmul@bexp:
   956                           	callstack 0
   957                           
   958                           ; 1 bytes @ 0x6
   959  000066                     	ds	1
   960  000067                     ___fldiv@grs:
   961                           	callstack 0
   962  000067                     ___flmul@prod:
   963                           	callstack 0
   964                           
   965                           ; 4 bytes @ 0x7
   966  000067                     	ds	3
   967  00006A                     _dtoa$3539:
   968                           	callstack 0
   969  00006A                     utoa@p:
   970                           	callstack 0
   971                           
   972                           ; 2 bytes @ 0xA
   973  00006A                     	ds	1
   974  00006B                     ___fldiv@bexp:
   975                           	callstack 0
   976  00006B                     ___flmul@temp:
   977                           	callstack 0
   978                           
   979                           ; 2 bytes @ 0xB
   980  00006B                     	ds	1
   981  00006C                     ___fldiv@aexp:
   982                           	callstack 0
   983  00006C                     dtoa@p:
   984                           	callstack 0
   985  00006C                     utoa@w:
   986                           	callstack 0
   987                           
   988                           ; 2 bytes @ 0xC
   989  00006C                     	ds	1
   990  00006D                     ??_floorf:
   991  00006D                     ?___fladd:
   992                           	callstack 0
   993  00006D                     ___flge@ff1:
   994                           	callstack 0
   995  00006D                     ___fladd@b:
   996                           	callstack 0
   997                           
   998                           ; 4 bytes @ 0xD
   999  00006D                     	ds	1
  1000  00006E                     dtoa@w:
  1001                           	callstack 0
  1002  00006E                     utoa@n:
  1003                           	callstack 0
  1004                           
  1005                           ; 8 bytes @ 0xE
  1006  00006E                     	ds	2
  1007  000070                     dtoa@s:
  1008                           	callstack 0
  1009                           
  1010                           ; 2 bytes @ 0x10
  1011  000070                     	ds	1
  1012  000071                     ___flge@ff2:
  1013                           	callstack 0
  1014  000071                     ___fladd@a:
  1015                           	callstack 0
  1016                           
  1017                           ; 4 bytes @ 0x11
  1018  000071                     	ds	1
  1019  000072                     dtoa@n:
  1020                           	callstack 0
  1021                           
  1022                           ; 8 bytes @ 0x12
  1023  000072                     	ds	1
  1024  000073                     floorf@m:
  1025                           	callstack 0
  1026                           
  1027                           ; 4 bytes @ 0x13
  1028  000073                     	ds	2
  1029  000075                     ___fladd@signs:
  1030                           	callstack 0
  1031                           
  1032                           ; 1 bytes @ 0x15
  1033  000075                     	ds	1
  1034  000076                     ___fladd@aexp:
  1035                           	callstack 0
  1036  000076                     utoa@i:
  1037                           	callstack 0
  1038                           
  1039                           ; 2 bytes @ 0x16
  1040  000076                     	ds	1
  1041  000077                     ___fladd@bexp:
  1042                           	callstack 0
  1043  000077                     floorf@e:
  1044                           	callstack 0
  1045                           
  1046                           ; 2 bytes @ 0x17
  1047  000077                     	ds	1
  1048  000078                     ___fladd@grs:
  1049                           	callstack 0
  1050                           
  1051                           ; 1 bytes @ 0x18
  1052  000078                     	ds	1
  1053  000079                     ?___flsub:
  1054                           	callstack 0
  1055  000079                     ?___fltol:
  1056                           	callstack 0
  1057  000079                     ___fltol@f1:
  1058                           	callstack 0
  1059  000079                     ___flsub@b:
  1060                           	callstack 0
  1061  000079                     floorf@u:
  1062                           	callstack 0
  1063                           
  1064                           ; 4 bytes @ 0x19
  1065  000079                     	ds	1
  1066  00007A                     dtoa@i:
  1067                           	callstack 0
  1068                           
  1069                           ; 2 bytes @ 0x1A
  1070  00007A                     	ds	3
  1071  00007D                     ??___fltol:
  1072  00007D                     ___flsub@a:
  1073                           	callstack 0
  1074                           
  1075                           ; 4 bytes @ 0x1D
  1076  00007D                     	ds	4
  1077  000081                     ___fltol@sign1:
  1078                           	callstack 0
  1079                           
  1080                           ; 1 bytes @ 0x21
  1081  000081                     	ds	1
  1082  000082                     ___fltol@exp1:
  1083                           	callstack 0
  1084                           
  1085                           ; 1 bytes @ 0x22
  1086  000082                     	ds	1
  1087  000083                     ??_calcSpeed:
  1088  000083                     ??_calcMotorPow:
  1089  000083                     ?_efgtoa:
  1090                           	callstack 0
  1091  000083                     setSteering@steering:
  1092                           	callstack 0
  1093  000083                     efgtoa@fp:
  1094                           	callstack 0
  1095                           
  1096                           ; 2 bytes @ 0x23
  1097  000083                     	ds	2
  1098  000085                     setSteering@steeringMode:
  1099                           	callstack 0
  1100  000085                     calcMotorPow@setSpeedDelta:
  1101                           	callstack 0
  1102  000085                     efgtoa@f:
  1103                           	callstack 0
  1104                           
  1105                           ; 4 bytes @ 0x25
  1106  000085                     	ds	1
  1107  000086                     ??_setSteering:
  1108                           
  1109                           ; 1 bytes @ 0x26
  1110  000086                     	ds	1
  1111  000087                     calcSpeed@speed:
  1112                           	callstack 0
  1113  000087                     calcMotorPow@oldSpeedDelta:
  1114                           	callstack 0
  1115                           
  1116                           ; 2 bytes @ 0x27
  1117  000087                     	ds	1
  1118  000088                     setSteering@steeringF:
  1119                           	callstack 0
  1120                           
  1121                           ; 2 bytes @ 0x28
  1122  000088                     	ds	1
  1123  000089                     calcMotorPow@addMPow:
  1124                           	callstack 0
  1125  000089                     efgtoa@c:
  1126                           	callstack 0
  1127                           
  1128                           ; 1 bytes @ 0x29
  1129  000089                     	ds	1
  1130  00008A                     ??_efgtoa:
  1131  00008A                     setSteering@steeringB:
  1132                           	callstack 0
  1133                           
  1134                           ; 2 bytes @ 0x2A
  1135  00008A                     	ds	2
  1136  00008C                     ??_calcSteering:
  1137                           
  1138                           ; 1 bytes @ 0x2C
  1139  00008C                     	ds	2
  1140  00008E                     calcSteering@delta:
  1141                           	callstack 0
  1142                           
  1143                           ; 2 bytes @ 0x2E
  1144  00008E                     	ds	1
  1145  00008F                     _efgtoa$3563:
  1146                           	callstack 0
  1147                           
  1148                           ; 2 bytes @ 0x2F
  1149  00008F                     	ds	2
  1150  000091                     _efgtoa$3564:
  1151                           	callstack 0
  1152                           
  1153                           ; 2 bytes @ 0x31
  1154  000091                     	ds	2
  1155  000093                     _efgtoa$3568:
  1156                           	callstack 0
  1157                           
  1158                           ; 2 bytes @ 0x33
  1159  000093                     	ds	2
  1160  000095                     _efgtoa$3572:
  1161                           	callstack 0
  1162                           
  1163                           ; 2 bytes @ 0x35
  1164  000095                     	ds	2
  1165  000097                     _efgtoa$3573:
  1166                           	callstack 0
  1167                           
  1168                           ; 2 bytes @ 0x37
  1169  000097                     	ds	2
  1170  000099                     _efgtoa$3574:
  1171                           	callstack 0
  1172                           
  1173                           ; 2 bytes @ 0x39
  1174  000099                     	ds	2
  1175  00009B                     efgtoa@t:
  1176                           	callstack 0
  1177                           
  1178                           ; 2 bytes @ 0x3B
  1179  00009B                     	ds	2
  1180  00009D                     efgtoa@pp:
  1181                           	callstack 0
  1182                           
  1183                           ; 2 bytes @ 0x3D
  1184  00009D                     	ds	2
  1185  00009F                     efgtoa@ne:
  1186                           	callstack 0
  1187                           
  1188                           ; 2 bytes @ 0x3F
  1189  00009F                     	ds	2
  1190  0000A1                     efgtoa@m:
  1191                           	callstack 0
  1192                           
  1193                           ; 2 bytes @ 0x41
  1194  0000A1                     	ds	2
  1195  0000A3                     efgtoa@ou:
  1196                           	callstack 0
  1197                           
  1198                           ; 4 bytes @ 0x43
  1199  0000A3                     	ds	4
  1200  0000A7                     efgtoa@d:
  1201                           	callstack 0
  1202                           
  1203                           ; 2 bytes @ 0x47
  1204  0000A7                     	ds	2
  1205  0000A9                     efgtoa@sign:
  1206                           	callstack 0
  1207                           
  1208                           ; 2 bytes @ 0x49
  1209  0000A9                     	ds	2
  1210  0000AB                     efgtoa@p:
  1211                           	callstack 0
  1212                           
  1213                           ; 2 bytes @ 0x4B
  1214  0000AB                     	ds	2
  1215  0000AD                     efgtoa@w:
  1216                           	callstack 0
  1217                           
  1218                           ; 2 bytes @ 0x4D
  1219  0000AD                     	ds	2
  1220  0000AF                     efgtoa@nmode:
  1221                           	callstack 0
  1222                           
  1223                           ; 1 bytes @ 0x4F
  1224  0000AF                     	ds	1
  1225  0000B0                     efgtoa@mode:
  1226                           	callstack 0
  1227                           
  1228                           ; 1 bytes @ 0x50
  1229  0000B0                     	ds	1
  1230  0000B1                     efgtoa@h:
  1231                           	callstack 0
  1232                           
  1233                           ; 4 bytes @ 0x51
  1234  0000B1                     	ds	4
  1235  0000B5                     efgtoa@l:
  1236                           	callstack 0
  1237                           
  1238                           ; 4 bytes @ 0x55
  1239  0000B5                     	ds	4
  1240  0000B9                     efgtoa@i:
  1241                           	callstack 0
  1242                           
  1243                           ; 2 bytes @ 0x59
  1244  0000B9                     	ds	2
  1245  0000BB                     efgtoa@g:
  1246                           	callstack 0
  1247                           
  1248                           ; 4 bytes @ 0x5B
  1249  0000BB                     	ds	4
  1250  0000BF                     efgtoa@e:
  1251                           	callstack 0
  1252                           
  1253                           ; 2 bytes @ 0x5F
  1254  0000BF                     	ds	2
  1255  0000C1                     efgtoa@n:
  1256                           	callstack 0
  1257                           
  1258                           ; 2 bytes @ 0x61
  1259  0000C1                     	ds	2
  1260  0000C3                     efgtoa@u:
  1261                           	callstack 0
  1262                           
  1263                           ; 4 bytes @ 0x63
  1264  0000C3                     	ds	4
  1265  0000C7                     ?_vfpfcnvrt:
  1266                           	callstack 0
  1267  0000C7                     vfpfcnvrt@fp:
  1268                           	callstack 0
  1269                           
  1270                           ; 2 bytes @ 0x67
  1271  0000C7                     	ds	2
  1272  0000C9                     vfpfcnvrt@fmt:
  1273                           	callstack 0
  1274                           
  1275                           ; 2 bytes @ 0x69
  1276  0000C9                     	ds	2
  1277  0000CB                     vfpfcnvrt@ap:
  1278                           	callstack 0
  1279                           
  1280                           ; 2 bytes @ 0x6B
  1281  0000CB                     	ds	2
  1282  0000CD                     ??_vfpfcnvrt:
  1283                           
  1284                           ; 1 bytes @ 0x6D
  1285  0000CD                     	ds	4
  1286  0000D1                     vfpfcnvrt@ll:
  1287                           	callstack 0
  1288                           
  1289                           ; 8 bytes @ 0x71
  1290  0000D1                     	ds	8
  1291  0000D9                     vfpfcnvrt@llu:
  1292                           	callstack 0
  1293                           
  1294                           ; 8 bytes @ 0x79
  1295  0000D9                     	ds	8
  1296  0000E1                     _vfpfcnvrt$3599:
  1297                           	callstack 0
  1298                           
  1299                           ; 2 bytes @ 0x81
  1300  0000E1                     	ds	2
  1301  0000E3                     vfpfcnvrt@f:
  1302                           	callstack 0
  1303                           
  1304                           ; 4 bytes @ 0x83
  1305  0000E3                     	ds	4
  1306  0000E7                     vfpfcnvrt@ct:
  1307                           	callstack 0
  1308                           
  1309                           ; 3 bytes @ 0x87
  1310  0000E7                     	ds	3
  1311  0000EA                     vfpfcnvrt@c:
  1312                           	callstack 0
  1313                           
  1314                           ; 1 bytes @ 0x8A
  1315  0000EA                     	ds	1
  1316                           
  1317                           	psect	cstackCOMRAM
  1318  000001                     __pcstackCOMRAM:
  1319                           	callstack 0
  1320  000001                     CCP3_DefaultCallBack@capturedValue:
  1321                           	callstack 0
  1322                           
  1323                           ; 2 bytes @ 0x0
  1324  000001                     	ds	2
  1325  000003                     CCP3_CaptureISR@module:
  1326                           	callstack 0
  1327                           
  1328                           ; 2 bytes @ 0x2
  1329  000003                     	ds	2
  1330  000005                     CCP4_DefaultCallBack@capturedValue:
  1331                           	callstack 0
  1332                           
  1333                           ; 2 bytes @ 0x4
  1334  000005                     	ds	2
  1335  000007                     CCP4_CaptureISR@module:
  1336                           	callstack 0
  1337                           
  1338                           ; 2 bytes @ 0x6
  1339  000007                     	ds	2
  1340  000009                     ?_TMR5_ReadTimer:
  1341                           	callstack 0
  1342  000009                     TMR5_WriteTimer@timerVal:
  1343                           	callstack 0
  1344                           
  1345                           ; 2 bytes @ 0x8
  1346  000009                     	ds	2
  1347  00000B                     ??_TMR5_ReadTimer:
  1348  00000B                     
  1349                           ; 1 bytes @ 0xA
  1350  00000B                     	ds	2
  1351  00000D                     TMR5_ReadTimer@readVal:
  1352                           	callstack 0
  1353                           
  1354                           ; 2 bytes @ 0xC
  1355  00000D                     	ds	2
  1356  00000F                     TMR5_ReadTimer@readValHigh:
  1357                           	callstack 0
  1358                           
  1359                           ; 1 bytes @ 0xE
  1360  00000F                     	ds	1
  1361  000010                     TMR5_ReadTimer@readValLow:
  1362                           	callstack 0
  1363                           
  1364                           ; 1 bytes @ 0xF
  1365  000010                     	ds	1
  1366  000011                     ??_UART1_tx_vect_isr:
  1367  000011                     
  1368                           ; 1 bytes @ 0x10
  1369  000011                     	ds	1
  1370  000012                     ??_UART1_rx_vect_isr:
  1371                           
  1372                           ; 1 bytes @ 0x11
  1373  000012                     	ds	1
  1374  000013                     ??_TMR4_ISR:
  1375                           
  1376                           ; 1 bytes @ 0x12
  1377  000013                     	ds	1
  1378  000014                     ??_TMR3_Initialize:
  1379  000014                     ??_getCurve:
  1380  000014                     ?_strlen:
  1381                           	callstack 0
  1382  000014                     ?___fpclassifyf:
  1383                           	callstack 0
  1384  000014                     ?_isupper:
  1385                           	callstack 0
  1386  000014                     ?_strncmp:
  1387                           	callstack 0
  1388  000014                     ?_ADCC_GetSingleConversion:
  1389                           	callstack 0
  1390  000014                     ?___awdiv:
  1391                           	callstack 0
  1392  000014                     ?___awmod:
  1393                           	callstack 0
  1394  000014                     ?___aldiv:
  1395                           	callstack 0
  1396  000014                     ?___flneg:
  1397                           	callstack 0
  1398  000014                     ?___aodiv:
  1399                           	callstack 0
  1400  000014                     ?___aomod:
  1401                           	callstack 0
  1402  000014                     ?___lodiv:
  1403                           	callstack 0
  1404  000014                     ?___lomod:
  1405                           	callstack 0
  1406  000014                     UART1_Write@txData:
  1407                           	callstack 0
  1408  000014                     INTERRUPT_Initialize@state:
  1409                           	callstack 0
  1410  000014                     UART1_SetFramingErrorHandler@interruptHandler:
  1411                           	callstack 0
  1412  000014                     UART1_SetOverrunErrorHandler@interruptHandler:
  1413                           	callstack 0
  1414  000014                     UART1_SetErrorHandler@interruptHandler:
  1415                           	callstack 0
  1416  000014                     UART1_SetRxInterruptHandler@InterruptHandler:
  1417                           	callstack 0
  1418  000014                     UART1_SetTxInterruptHandler@InterruptHandler:
  1419                           	callstack 0
  1420  000014                     CCP3_SetCallBack@customCallBack:
  1421                           	callstack 0
  1422  000014                     CCP4_SetCallBack@customCallBack:
  1423                           	callstack 0
  1424  000014                     TMR5_SetGateInterruptHandler@InterruptHandler:
  1425                           	callstack 0
  1426  000014                     TMR4_SetInterruptHandler@InterruptHandler:
  1427                           	callstack 0
  1428  000014                     PWM7_LoadDutyValue@dutyValue:
  1429                           	callstack 0
  1430  000014                     PWM8_LoadDutyValue@dutyValue:
  1431                           	callstack 0
  1432  000014                     PWM5_LoadDutyValue@dutyValue:
  1433                           	callstack 0
  1434  000014                     PWM6_LoadDutyValue@dutyValue:
  1435                           	callstack 0
  1436  000014                     ___awdiv@dividend:
  1437                           	callstack 0
  1438  000014                     ___awmod@dividend:
  1439                           	callstack 0
  1440  000014                     isupper@c:
  1441                           	callstack 0
  1442  000014                     strcpy@dest:
  1443                           	callstack 0
  1444  000014                     strlen@s:
  1445                           	callstack 0
  1446  000014                     strncmp@_l:
  1447                           	callstack 0
  1448  000014                     ___aldiv@dividend:
  1449                           	callstack 0
  1450  000014                     ___fleq@ff1:
  1451                           	callstack 0
  1452  000014                     ___flneg@f1:
  1453                           	callstack 0
  1454  000014                     ___fpclassifyf@x:
  1455                           	callstack 0
  1456  000014                     ___aodiv@dividend:
  1457                           	callstack 0
  1458  000014                     ___aomod@dividend:
  1459                           	callstack 0
  1460  000014                     ___lodiv@dividend:
  1461                           	callstack 0
  1462  000014                     ___lomod@dividend:
  1463                           	callstack 0
  1464                           
  1465                           ; 8 bytes @ 0x13
  1466  000014                     	ds	1
  1467  000015                     putch@txData:
  1468                           	callstack 0
  1469                           
  1470                           ; 1 bytes @ 0x14
  1471  000015                     	ds	1
  1472  000016                     ??_TMR5_Initialize:
  1473  000016                     ??_isupper:
  1474  000016                     ??_PWM7_LoadDutyValue:
  1475  000016                     ??_PWM8_LoadDutyValue:
  1476  000016                     ??_PWM5_LoadDutyValue:
  1477  000016                     ??_PWM6_LoadDutyValue:
  1478  000016                     ??_ADCC_GetSingleConversion:
  1479  000016                     getCurve@deltaLeft:
  1480                           	callstack 0
  1481  000016                     ___awdiv@divisor:
  1482                           	callstack 0
  1483  000016                     ___awmod@divisor:
  1484                           	callstack 0
  1485  000016                     fputc@c:
  1486                           	callstack 0
  1487  000016                     strcpy@src:
  1488                           	callstack 0
  1489  000016                     strlen@a:
  1490                           	callstack 0
  1491  000016                     strncmp@_r:
  1492                           	callstack 0
  1493                           
  1494                           ; 2 bytes @ 0x15
  1495  000016                     	ds	2
  1496  000018                     ??___fpclassifyf:
  1497  000018                     ??_strcpy:
  1498  000018                     ADCC_GetSingleConversion@channel:
  1499                           	callstack 0
  1500  000018                     ___awdiv@counter:
  1501                           	callstack 0
  1502  000018                     ___awmod@counter:
  1503                           	callstack 0
  1504  000018                     getCurve@deltaRight:
  1505                           	callstack 0
  1506  000018                     setMotor@motorPower:
  1507                           	callstack 0
  1508  000018                     fputc@fp:
  1509                           	callstack 0
  1510  000018                     strncmp@n:
  1511                           	callstack 0
  1512  000018                     ___aldiv@divisor:
  1513                           	callstack 0
  1514  000018                     ___fleq@ff2:
  1515                           	callstack 0
  1516                           
  1517                           ; 4 bytes @ 0x17
  1518  000018                     	ds	1
  1519  000019                     ___awdiv@sign:
  1520                           	callstack 0
  1521  000019                     ___awmod@sign:
  1522                           	callstack 0
  1523                           
  1524                           ; 1 bytes @ 0x18
  1525  000019                     	ds	1
  1526  00001A                     ??_setMotor:
  1527  00001A                     ??_fputc:
  1528  00001A                     ??_strncmp:
  1529  00001A                     ?_tolower:
  1530                           	callstack 0
  1531  00001A                     ___awdiv@quotient:
  1532                           	callstack 0
  1533  00001A                     strcpy@s:
  1534                           	callstack 0
  1535  00001A                     tolower@c:
  1536                           	callstack 0
  1537                           
  1538                           ; 2 bytes @ 0x19
  1539  00001A                     	ds	1
  1540  00001B                     strncmp@l:
  1541                           	callstack 0
  1542                           
  1543                           ; 2 bytes @ 0x1A
  1544  00001B                     	ds	1
  1545  00001C                     ??_tolower:
  1546  00001C                     ??___fleq:
  1547  00001C                     ?___xxtofl:
  1548                           	callstack 0
  1549  00001C                     ___aldiv@counter:
  1550                           	callstack 0
  1551  00001C                     ___fpclassifyf@e:
  1552                           	callstack 0
  1553  00001C                     strcpy@d:
  1554                           	callstack 0
  1555  00001C                     ___xxtofl@val:
  1556                           	callstack 0
  1557  00001C                     ___aodiv@divisor:
  1558                           	callstack 0
  1559  00001C                     ___aomod@divisor:
  1560                           	callstack 0
  1561  00001C                     ___lodiv@divisor:
  1562                           	callstack 0
  1563  00001C                     ___lomod@divisor:
  1564                           	callstack 0
  1565                           
  1566                           ; 8 bytes @ 0x1B
  1567  00001C                     	ds	1
  1568  00001D                     ___aldiv@sign:
  1569                           	callstack 0
  1570  00001D                     strncmp@r:
  1571                           	callstack 0
  1572                           
  1573                           ; 2 bytes @ 0x1C
  1574  00001D                     	ds	1
  1575  00001E                     ___aldiv@quotient:
  1576                           	callstack 0
  1577  00001E                     ___fpclassifyf@u:
  1578                           	callstack 0
  1579                           
  1580                           ; 4 bytes @ 0x1D
  1581  00001E                     	ds	1
  1582  00001F                     fputs@s:
  1583                           	callstack 0
  1584                           
  1585                           ; 2 bytes @ 0x1E
  1586  00001F                     	ds	1
  1587  000020                     ??___xxtofl:
  1588  000020                     _tolower$3693:
  1589                           	callstack 0
  1590                           
  1591                           ; 2 bytes @ 0x1F
  1592  000020                     	ds	1
  1593  000021                     fputs@fp:
  1594                           	callstack 0
  1595                           
  1596                           ; 2 bytes @ 0x20
  1597  000021                     	ds	1
  1598  000022                     ?_actSpeed:
  1599                           	callstack 0
  1600                           
  1601                           ; 2 bytes @ 0x21
  1602  000022                     	ds	1
  1603  000023                     fputs@c:
  1604                           	callstack 0
  1605                           
  1606                           ; 1 bytes @ 0x22
  1607  000023                     	ds	1
  1608  000024                     ___aodiv@counter:
  1609                           	callstack 0
  1610  000024                     ___aomod@counter:
  1611                           	callstack 0
  1612  000024                     ___lomod@counter:
  1613                           	callstack 0
  1614  000024                     ___xxtofl@sign:
  1615                           	callstack 0
  1616  000024                     actSpeed@speed:
  1617                           	callstack 0
  1618  000024                     fputs@i:
  1619                           	callstack 0
  1620  000024                     ___lodiv@quotient:
  1621                           	callstack 0
  1622                           
  1623                           ; 8 bytes @ 0x23
  1624  000024                     	ds	1
  1625  000025                     ___aodiv@sign:
  1626                           	callstack 0
  1627  000025                     ___aomod@sign:
  1628                           	callstack 0
  1629  000025                     ___xxtofl@exp:
  1630                           	callstack 0
  1631                           
  1632                           ; 1 bytes @ 0x24
  1633  000025                     	ds	1
  1634  000026                     ?_abs:
  1635                           	callstack 0
  1636  000026                     ?_pad:
  1637                           	callstack 0
  1638  000026                     pad@fp:
  1639                           	callstack 0
  1640  000026                     abs@a:
  1641                           	callstack 0
  1642  000026                     ___xxtofl@arg:
  1643                           	callstack 0
  1644  000026                     ___aodiv@quotient:
  1645                           	callstack 0
  1646                           
  1647                           ; 8 bytes @ 0x25
  1648  000026                     	ds	2
  1649  000028                     ??_abs:
  1650  000028                     pad@buf:
  1651                           	callstack 0
  1652                           
  1653                           ; 2 bytes @ 0x27
  1654  000028                     	ds	2
  1655  00002A                     ?___fldiv:
  1656                           	callstack 0
  1657  00002A                     ?___flmul:
  1658                           	callstack 0
  1659  00002A                     pad@p:
  1660                           	callstack 0
  1661  00002A                     ___fldiv@b:
  1662                           	callstack 0
  1663  00002A                     ___flmul@b:
  1664                           	callstack 0
  1665                           
  1666                           ; 4 bytes @ 0x29
  1667  00002A                     	ds	2
  1668  00002C                     ??_pad:
  1669  00002C                     ___lodiv@counter:
  1670                           	callstack 0
  1671                           
  1672                           ; 1 bytes @ 0x2B
  1673  00002C                     	ds	1
  1674  00002D                     pad@i:
  1675                           	callstack 0
  1676                           
  1677                           ; 2 bytes @ 0x2C
  1678  00002D                     	ds	1
  1679  00002E                     ___fldiv@a:
  1680                           	callstack 0
  1681  00002E                     ___flmul@a:
  1682                           	callstack 0
  1683                           
  1684                           ; 4 bytes @ 0x2D
  1685  00002E                     	ds	1
  1686  00002F                     pad@w:
  1687                           	callstack 0
  1688                           
  1689                           ; 2 bytes @ 0x2E
  1690  00002F                     	ds	2
  1691  000031                     ??_dtoa:
  1692  000031                     ??_utoa:
  1693                           
  1694                           ; 1 bytes @ 0x30
  1695  000031                     	ds	1
  1696  000032                     ??___fldiv:
  1697  000032                     ??___flmul:
  1698                           
  1699                           ; 1 bytes @ 0x31
  1700  000032                     	ds	4
  1701  000036                     ??___fladd:
  1702  000036                     ??___flge:
  1703  000036                     ?_floorf:
  1704                           	callstack 0
  1705  000036                     floorf@x:
  1706                           	callstack 0
  1707                           
  1708                           ; 4 bytes @ 0x35
  1709  000036                     	ds	4
  1710  00003A                     
  1711                           ; 1 bytes @ 0x39
  1712 ;;
  1713 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1714 ;;
  1715 ;; *************** function _main *****************
  1716 ;; Defined at:
  1717 ;;		line 8 in file "main.c"
  1718 ;; Parameters:    Size  Location     Type
  1719 ;;		None
  1720 ;; Auto vars:     Size  Location     Type
  1721 ;;		None
  1722 ;; Return value:  Size  Location     Type
  1723 ;;                  1    wreg      void 
  1724 ;; Registers used:
  1725 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1726 ;; Tracked objects:
  1727 ;;		On entry : 0/0
  1728 ;;		On exit  : 0/0
  1729 ;;		Unchanged: 0/0
  1730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1735 ;;Total ram usage:        0 bytes
  1736 ;; Hardware stack levels required when called: 20
  1737 ;; This function calls:
  1738 ;;		_SYSTEM_Initialize
  1739 ;;		_TMR4_SetInterruptHandler
  1740 ;;		_loop
  1741 ;; This function is called by:
  1742 ;;		Startup code after reset
  1743 ;; This function uses a non-reentrant model
  1744 ;;
  1745                           
  1746                           	psect	text0
  1747  00617A                     __ptext0:
  1748                           	callstack 0
  1749  00617A                     _main:
  1750                           	callstack 11
  1751  00617A                     
  1752                           ;main.c: 9:     SYSTEM_Initialize();
  1753  00617A  ECC6  F02C         	call	_SYSTEM_Initialize	;wreg free
  1754  00617E                     
  1755                           ;main.c: 10:     (INTCON0bits.GIEH = 1);
  1756  00617E  8ED2               	bsf	210,7,c	;volatile
  1757  006180                     
  1758                           ;main.c: 11:     (INTCON0bits.GIEL = 1);
  1759  006180  8CD2               	bsf	210,6,c	;volatile
  1760                           
  1761                           ;main.c: 12:     TMR4_SetInterruptHandler(TMR4_10msISR);
  1762  006182  0E5A               	movlw	low _TMR4_10msISR
  1763  006184  6E14               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
  1764  006186  0E62               	movlw	high _TMR4_10msISR
  1765  006188  6E15               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
  1766  00618A  EC56  F031         	call	_TMR4_SetInterruptHandler	;wreg free
  1767  00618E                     l9389:
  1768                           
  1769                           ;main.c: 15:         loop();
  1770  00618E  ECFE  F022         	call	_loop	;wreg free
  1771  006192  EFC7  F030         	goto	l9389
  1772  006196  EF57  F000         	goto	start
  1773  00619A                     __end_of_main:
  1774                           	callstack 0
  1775                           
  1776 ;; *************** function _loop *****************
  1777 ;; Defined at:
  1778 ;;		line 19 in file "main.c"
  1779 ;; Parameters:    Size  Location     Type
  1780 ;;		None
  1781 ;; Auto vars:     Size  Location     Type
  1782 ;;		None
  1783 ;; Return value:  Size  Location     Type
  1784 ;;                  1    wreg      void 
  1785 ;; Registers used:
  1786 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1787 ;; Tracked objects:
  1788 ;;		On entry : 0/0
  1789 ;;		On exit  : 0/0
  1790 ;;		Unchanged: 0/0
  1791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1796 ;;Total ram usage:        0 bytes
  1797 ;; Hardware stack levels used: 1
  1798 ;; Hardware stack levels required when called: 19
  1799 ;; This function calls:
  1800 ;;		___flge
  1801 ;;		___xxtofl
  1802 ;;		_calcMotorPow
  1803 ;;		_calcSpeed
  1804 ;;		_calcSteering
  1805 ;;		_checkBatt
  1806 ;;		_checkCurveCount
  1807 ;;		_getBatteryVoltage
  1808 ;;		_getCurve
  1809 ;;		_getReverse
  1810 ;;		_setMotor
  1811 ;;		_setSteering
  1812 ;;		_startAccell
  1813 ;; This function is called by:
  1814 ;;		_main
  1815 ;; This function uses a non-reentrant model
  1816 ;;
  1817                           
  1818                           	psect	text1
  1819  0045FC                     __ptext1:
  1820                           	callstack 0
  1821  0045FC                     _loop:
  1822                           	callstack 11
  1823  0045FC                     
  1824                           ;main.c: 20:     setMotor(0);
  1825  0045FC  0E00               	movlw	0
  1826  0045FE  6E19               	movwf	(setMotor@motorPower+1)^0,c
  1827  004600  0E00               	movlw	0
  1828  004602  6E18               	movwf	setMotor@motorPower^0,c
  1829  004604  EC8F  F026         	call	_setMotor	;wreg free
  1830                           
  1831                           ;main.c: 21:     setSteering(0, Front);
  1832  004608  0E00               	movlw	0
  1833  00460A  0100               	movlb	0	; () banked
  1834  00460C  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  1835  00460E  0E00               	movlw	0
  1836  004610  6F83               	movwf	setSteering@steering& (0+255),b
  1837  004612  0E03               	movlw	3
  1838  004614  6F85               	movwf	setSteering@steeringMode& (0+255),b
  1839  004616  EC9F  F01C         	call	_setSteering	;wreg free
  1840  00461A                     l1230:
  1841  00461A  B8CB               	btfsc	203,4,c	;volatile
  1842  00461C  EF12  F023         	goto	u10561
  1843  004620  EF14  F023         	goto	u10560
  1844  004624                     u10561:
  1845  004624  EF0D  F023         	goto	l1230
  1846  004628                     u10560:
  1847  004628                     l9343:
  1848  004628  0100               	movlb	0	; () banked
  1849  00462A  51FB               	movf	_cycle10ms& (0+255),w,b	;volatile
  1850  00462C  B4D8               	btfsc	status,2,c
  1851  00462E  EF1B  F023         	goto	u10571
  1852  004632  EF1D  F023         	goto	u10570
  1853  004636                     u10571:
  1854  004636  EF14  F023         	goto	l9343
  1855  00463A                     u10570:
  1856  00463A                     
  1857                           ; BSR set to: 0
  1858                           ;main.c: 26:         cycle10ms = 0;
  1859  00463A  0E00               	movlw	0
  1860  00463C  6FFB               	movwf	_cycle10ms& (0+255),b	;volatile
  1861  00463E                     
  1862                           ; BSR set to: 0
  1863                           ;main.c: 27:         getBatteryVoltage();
  1864  00463E  EC86  F030         	call	_getBatteryVoltage	;wreg free
  1865  004642                     
  1866                           ;main.c: 29:     } while (BatteryVolt < ((3) * 409.6));
  1867  004642  C0EB  F01C         	movff	_BatteryVolt,___xxtofl@val
  1868  004646  C0EC  F01D         	movff	_BatteryVolt+1,___xxtofl@val+1
  1869  00464A  6A1E               	clrf	(___xxtofl@val+2)^0,c
  1870  00464C  6A1F               	clrf	(___xxtofl@val+3)^0,c
  1871  00464E  0E00               	movlw	0
  1872  004650  EC72  F01F         	call	___xxtofl
  1873  004654  C01C  F06D         	movff	?___xxtofl,___flge@ff1
  1874  004658  C01D  F06E         	movff	?___xxtofl+1,___flge@ff1+1
  1875  00465C  C01E  F06F         	movff	?___xxtofl+2,___flge@ff1+2
  1876  004660  C01F  F070         	movff	?___xxtofl+3,___flge@ff1+3
  1877  004664  0E9A               	movlw	154
  1878  004666  0100               	movlb	0	; () banked
  1879  004668  6F71               	movwf	___flge@ff2& (0+255),b
  1880  00466A  0E99               	movlw	153
  1881  00466C  6F72               	movwf	(___flge@ff2+1)& (0+255),b
  1882  00466E  0E99               	movlw	153
  1883  004670  6F73               	movwf	(___flge@ff2+2)& (0+255),b
  1884  004672  0E44               	movlw	68
  1885  004674  6F74               	movwf	(___flge@ff2+3)& (0+255),b
  1886  004676  EC9B  F024         	call	___flge	;wreg free
  1887  00467A  0100               	movlb	0	; () banked
  1888  00467C  A0D8               	btfss	status,0,c
  1889  00467E  EF43  F023         	goto	u10581
  1890  004682  EF45  F023         	goto	u10580
  1891  004686                     u10581:
  1892  004686  EF14  F023         	goto	l9343
  1893  00468A                     u10580:
  1894  00468A                     
  1895                           ; BSR set to: 0
  1896                           ;main.c: 31:     startAccell();
  1897  00468A  EC4E  F02A         	call	_startAccell	;wreg free
  1898  00468E                     
  1899                           ;main.c: 33:     oldDistLeft = distLeft;
  1900  00468E  C0F7  F136         	movff	_distLeft,_oldDistLeft	;volatile
  1901  004692  C0F8  F137         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  1902  004696                     
  1903                           ;main.c: 34:     oldDistRight = distRight;
  1904  004696  C0F5  F134         	movff	_distRight,_oldDistRight	;volatile
  1905  00469A  C0F6  F135         	movff	_distRight+1,_oldDistRight+1	;volatile
  1906  00469E                     
  1907                           ;main.c: 35:     cycle10ms = 0;
  1908  00469E  0E00               	movlw	0
  1909  0046A0  0100               	movlb	0	; () banked
  1910  0046A2  6FFB               	movwf	_cycle10ms& (0+255),b	;volatile
  1911  0046A4                     l9359:
  1912  0046A4  0100               	movlb	0	; () banked
  1913  0046A6  51FB               	movf	_cycle10ms& (0+255),w,b	;volatile
  1914  0046A8  B4D8               	btfsc	status,2,c
  1915  0046AA  EF59  F023         	goto	u10591
  1916  0046AE  EF5B  F023         	goto	u10590
  1917  0046B2                     u10591:
  1918  0046B2  EF52  F023         	goto	l9359
  1919  0046B6                     u10590:
  1920  0046B6                     
  1921                           ; BSR set to: 0
  1922                           ;main.c: 38:         cycle10ms = 0;
  1923  0046B6  0E00               	movlw	0
  1924  0046B8  6FFB               	movwf	_cycle10ms& (0+255),b	;volatile
  1925  0046BA                     
  1926                           ; BSR set to: 0
  1927                           ;main.c: 40:         if (!PORTBbits.RB5) {
  1928  0046BA  BACB               	btfsc	203,5,c	;volatile
  1929  0046BC  EF62  F023         	goto	u10601
  1930  0046C0  EF64  F023         	goto	u10600
  1931  0046C4                     u10601:
  1932  0046C4  EF76  F023         	goto	l9369
  1933  0046C8                     u10600:
  1934  0046C8                     
  1935                           ; BSR set to: 0
  1936                           ;main.c: 41:             setSpeed = 0;
  1937  0046C8  0E00               	movlw	0
  1938  0046CA  6FF2               	movwf	(_setSpeed+1)& (0+255),b
  1939  0046CC  0E00               	movlw	0
  1940  0046CE  6FF1               	movwf	_setSpeed& (0+255),b
  1941                           
  1942                           ;main.c: 42:             actMotorPow = 0;
  1943  0046D0  0E00               	movlw	0
  1944  0046D2  6FEE               	movwf	(_actMotorPow+1)& (0+255),b
  1945  0046D4  0E00               	movlw	0
  1946  0046D6  6FED               	movwf	_actMotorPow& (0+255),b
  1947  0046D8                     
  1948                           ; BSR set to: 0
  1949                           ;main.c: 43:             setSteering(0, Front);
  1950  0046D8  0E00               	movlw	0
  1951  0046DA  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  1952  0046DC  0E00               	movlw	0
  1953  0046DE  6F83               	movwf	setSteering@steering& (0+255),b
  1954  0046E0  0E03               	movlw	3
  1955  0046E2  6F85               	movwf	setSteering@steeringMode& (0+255),b
  1956  0046E4  EC9F  F01C         	call	_setSteering	;wreg free
  1957                           
  1958                           ;main.c: 44:             break;
  1959  0046E8  EF90  F023         	goto	l1246
  1960  0046EC                     l9369:
  1961                           
  1962                           ; BSR set to: 0
  1963                           ;main.c: 53:         if (checkBatt()) {
  1964  0046EC  EC33  F02B         	call	_checkBatt	;wreg free
  1965  0046F0  0900               	iorlw	0
  1966  0046F2  B4D8               	btfsc	status,2,c
  1967  0046F4  EF7E  F023         	goto	u10611
  1968  0046F8  EF80  F023         	goto	u10610
  1969  0046FC                     u10611:
  1970  0046FC  EF82  F023         	goto	l9373
  1971  004700                     u10610:
  1972  004700  EF90  F023         	goto	l1246
  1973  004704                     l9373:
  1974                           
  1975                           ;main.c: 57:         getCurve();
  1976  004704  EC9A  F01D         	call	_getCurve	;wreg free
  1977  004708                     
  1978                           ;main.c: 58:         getReverse();
  1979  004708  EC6A  F022         	call	_getReverse	;wreg free
  1980  00470C                     
  1981                           ;main.c: 60:         calcSteering();
  1982  00470C  EC8B  F01E         	call	_calcSteering	;wreg free
  1983  004710                     
  1984                           ;main.c: 61:         calcSpeed();
  1985  004710  EC71  F019         	call	_calcSpeed	;wreg free
  1986  004714                     
  1987                           ;main.c: 62:         calcMotorPow();
  1988  004714  ECC2  F021         	call	_calcMotorPow	;wreg free
  1989                           
  1990                           ;main.c: 64:         checkCurveCount();
  1991  004718  ECF0  F028         	call	_checkCurveCount	;wreg free
  1992  00471C  EF52  F023         	goto	l9359
  1993  004720                     l1246:
  1994  004720  0012               	return		;funcret
  1995  004722                     __end_of_loop:
  1996                           	callstack 0
  1997                           
  1998 ;; *************** function _startAccell *****************
  1999 ;; Defined at:
  2000 ;;		line 104 in file "main.c"
  2001 ;; Parameters:    Size  Location     Type
  2002 ;;		None
  2003 ;; Auto vars:     Size  Location     Type
  2004 ;;  i               2   16[BANK1 ] short 
  2005 ;; Return value:  Size  Location     Type
  2006 ;;                  1    wreg      void 
  2007 ;; Registers used:
  2008 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2009 ;; Tracked objects:
  2010 ;;		On entry : 0/0
  2011 ;;		On exit  : 0/0
  2012 ;;		Unchanged: 0/0
  2013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2015 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2017 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2018 ;;Total ram usage:        2 bytes
  2019 ;; Hardware stack levels used: 1
  2020 ;; Hardware stack levels required when called: 17
  2021 ;; This function calls:
  2022 ;;		_printf
  2023 ;;		_setMotor
  2024 ;;		_setSteering
  2025 ;; This function is called by:
  2026 ;;		_loop
  2027 ;; This function uses a non-reentrant model
  2028 ;;
  2029                           
  2030                           	psect	text2
  2031  00549C                     __ptext2:
  2032                           	callstack 0
  2033  00549C                     _startAccell:
  2034                           	callstack 12
  2035  00549C                     
  2036                           ;main.c: 105:     setSteering(0, Front);
  2037  00549C  0E00               	movlw	0
  2038  00549E  0100               	movlb	0	; () banked
  2039  0054A0  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  2040  0054A2  0E00               	movlw	0
  2041  0054A4  6F83               	movwf	setSteering@steering& (0+255),b
  2042  0054A6  0E03               	movlw	3
  2043  0054A8  6F85               	movwf	setSteering@steeringMode& (0+255),b
  2044  0054AA  EC9F  F01C         	call	_setSteering	;wreg free
  2045  0054AE                     
  2046                           ;main.c: 106:     actMotorPow = (100) - (int16_t)((250) / (10));
  2047  0054AE  0E00               	movlw	0
  2048  0054B0  0100               	movlb	0	; () banked
  2049  0054B2  6FEE               	movwf	(_actMotorPow+1)& (0+255),b
  2050  0054B4  0E4B               	movlw	75
  2051  0054B6  6FED               	movwf	_actMotorPow& (0+255),b
  2052  0054B8                     
  2053                           ; BSR set to: 0
  2054                           ;main.c: 107:     for (int16_t i = 0; i < (int16_t) ((10) - ((100) / (int16_t)((250) / (
      +                          10)))); ++i) {
  2055  0054B8  0E00               	movlw	0
  2056  0054BA  0101               	movlb	1	; () banked
  2057  0054BC  6FB5               	movwf	(startAccell@i+1)& (0+255),b
  2058  0054BE  0E00               	movlw	0
  2059  0054C0  6FB4               	movwf	startAccell@i& (0+255),b
  2060  0054C2                     l9107:
  2061                           
  2062                           ; BSR set to: 1
  2063                           ;main.c: 108:         actMotorPow += (int16_t)((250) / (10));
  2064  0054C2  0E19               	movlw	25
  2065  0054C4  0100               	movlb	0	; () banked
  2066  0054C6  27ED               	addwf	_actMotorPow& (0+255),f,b
  2067  0054C8  0E00               	movlw	0
  2068  0054CA  23EE               	addwfc	(_actMotorPow+1)& (0+255),f,b
  2069  0054CC                     
  2070                           ; BSR set to: 0
  2071                           ;main.c: 109:         setMotor(actMotorPow);
  2072  0054CC  C0ED  F018         	movff	_actMotorPow,setMotor@motorPower
  2073  0054D0  C0EE  F019         	movff	_actMotorPow+1,setMotor@motorPower+1
  2074  0054D4  EC8F  F026         	call	_setMotor	;wreg free
  2075  0054D8                     
  2076                           ;main.c: 110:         cycle10ms = 0;
  2077  0054D8  0E00               	movlw	0
  2078  0054DA  0100               	movlb	0	; () banked
  2079  0054DC  6FFB               	movwf	_cycle10ms& (0+255),b	;volatile
  2080  0054DE                     l9113:
  2081                           
  2082                           ; BSR set to: 0
  2083  0054DE  51FB               	movf	_cycle10ms& (0+255),w,b	;volatile
  2084  0054E0  B4D8               	btfsc	status,2,c
  2085  0054E2  EF75  F02A         	goto	u10251
  2086  0054E6  EF77  F02A         	goto	u10250
  2087  0054EA                     u10251:
  2088  0054EA  EF6F  F02A         	goto	l9113
  2089  0054EE                     u10250:
  2090  0054EE                     
  2091                           ; BSR set to: 0
  2092                           ;main.c: 112:     }
  2093  0054EE  0101               	movlb	1	; () banked
  2094  0054F0  4BB4               	infsnz	startAccell@i& (0+255),f,b
  2095  0054F2  2BB5               	incf	(startAccell@i+1)& (0+255),f,b
  2096  0054F4                     
  2097                           ; BSR set to: 1
  2098  0054F4  BFB5               	btfsc	(startAccell@i+1)& (0+255),7,b
  2099  0054F6  EF86  F02A         	goto	u10261
  2100  0054FA  51B5               	movf	(startAccell@i+1)& (0+255),w,b
  2101  0054FC  E109               	bnz	u10260
  2102  0054FE  0E06               	movlw	6
  2103  005500  5DB4               	subwf	startAccell@i& (0+255),w,b
  2104  005502  A0D8               	btfss	status,0,c
  2105  005504  EF86  F02A         	goto	u10261
  2106  005508  EF88  F02A         	goto	u10260
  2107  00550C                     u10261:
  2108  00550C  EF61  F02A         	goto	l9107
  2109  005510                     u10260:
  2110  005510                     
  2111                           ; BSR set to: 1
  2112                           ;main.c: 113:     printf("starAccelPower: %d", actMotorPow);
  2113  005510  0E5D               	movlw	low STR_2
  2114  005512  6FAC               	movwf	printf@fmt& (0+255),b
  2115  005514  0E10               	movlw	high STR_2
  2116  005516  6FAD               	movwf	(printf@fmt+1)& (0+255),b
  2117  005518  C0ED  F1AE         	movff	_actMotorPow,?_printf+2
  2118  00551C  C0EE  F1AF         	movff	_actMotorPow+1,?_printf+3
  2119  005520  EC5E  F030         	call	_printf	;wreg free
  2120  005524                     
  2121                           ;main.c: 115:     cycle10ms = 0;
  2122  005524  0E00               	movlw	0
  2123  005526  0100               	movlb	0	; () banked
  2124  005528  6FFB               	movwf	_cycle10ms& (0+255),b	;volatile
  2125  00552A                     l9123:
  2126                           
  2127                           ; BSR set to: 0
  2128  00552A  0E19               	movlw	25
  2129  00552C  65FB               	cpfsgt	_cycle10ms& (0+255),b	;volatile
  2130  00552E  EF9B  F02A         	goto	u10271
  2131  005532  EF9D  F02A         	goto	u10270
  2132  005536                     u10271:
  2133  005536  EF95  F02A         	goto	l9123
  2134  00553A                     u10270:
  2135  00553A                     
  2136                           ; BSR set to: 0
  2137  00553A  0012               	return		;funcret
  2138  00553C                     __end_of_startAccell:
  2139                           	callstack 0
  2140                           
  2141 ;; *************** function _getReverse *****************
  2142 ;; Defined at:
  2143 ;;		line 195 in file "main.c"
  2144 ;; Parameters:    Size  Location     Type
  2145 ;;		None
  2146 ;; Auto vars:     Size  Location     Type
  2147 ;;		None
  2148 ;; Return value:  Size  Location     Type
  2149 ;;                  1    wreg      void 
  2150 ;; Registers used:
  2151 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2152 ;; Tracked objects:
  2153 ;;		On entry : 0/0
  2154 ;;		On exit  : 0/0
  2155 ;;		Unchanged: 0/0
  2156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2161 ;;Total ram usage:        0 bytes
  2162 ;; Hardware stack levels used: 1
  2163 ;; Hardware stack levels required when called: 17
  2164 ;; This function calls:
  2165 ;;		_printf
  2166 ;; This function is called by:
  2167 ;;		_loop
  2168 ;; This function uses a non-reentrant model
  2169 ;;
  2170                           
  2171                           	psect	text3
  2172  0044D4                     __ptext3:
  2173                           	callstack 0
  2174  0044D4                     _getReverse:
  2175                           	callstack 12
  2176  0044D4                     
  2177                           ;main.c: 196:     if (distFront < (15)) {
  2178  0044D4  0100               	movlb	0	; () banked
  2179  0044D6  51FE               	movf	(_distFront+1)& (0+255),w,b	;volatile
  2180  0044D8  E107               	bnz	u10301
  2181  0044DA  0E0F               	movlw	15
  2182  0044DC  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
  2183  0044DE  B0D8               	btfsc	status,0,c
  2184  0044E0  EF74  F022         	goto	u10301
  2185  0044E4  EF76  F022         	goto	u10300
  2186  0044E8                     u10301:
  2187  0044E8  EF7B  F022         	goto	l9151
  2188  0044EC                     u10300:
  2189  0044EC                     
  2190                           ; BSR set to: 0
  2191                           ;main.c: 197:         ++reverseCount;
  2192  0044EC  0101               	movlb	1	; () banked
  2193  0044EE  4B38               	infsnz	_reverseCount& (0+255),f,b
  2194  0044F0  2B39               	incf	(_reverseCount+1)& (0+255),f,b
  2195                           
  2196                           ;main.c: 198:     } else {
  2197  0044F2  EF80  F022         	goto	l9153
  2198  0044F6                     l9151:
  2199                           
  2200                           ; BSR set to: 0
  2201                           ;main.c: 199:         reverseCount = 0;
  2202  0044F6  0E00               	movlw	0
  2203  0044F8  0101               	movlb	1	; () banked
  2204  0044FA  6F39               	movwf	(_reverseCount+1)& (0+255),b
  2205  0044FC  0E00               	movlw	0
  2206  0044FE  6F38               	movwf	_reverseCount& (0+255),b
  2207  004500                     l9153:
  2208                           
  2209                           ; BSR set to: 1
  2210                           ;main.c: 202:     if (reverseCount > (50)) {
  2211  004500  5139               	movf	(_reverseCount+1)& (0+255),w,b
  2212  004502  E109               	bnz	u10310
  2213  004504  0E33               	movlw	51
  2214  004506  5D38               	subwf	_reverseCount& (0+255),w,b
  2215  004508  A0D8               	btfss	status,0,c
  2216  00450A  EF89  F022         	goto	u10311
  2217  00450E  EF8B  F022         	goto	u10310
  2218  004512                     u10311:
  2219  004512  EFFD  F022         	goto	l1313
  2220  004516                     u10310:
  2221  004516                     
  2222                           ; BSR set to: 1
  2223                           ;main.c: 203:         ++reverseTime;
  2224  004516  4B2C               	infsnz	_reverseTime& (0+255),f,b
  2225  004518  2B2D               	incf	(_reverseTime+1)& (0+255),f,b
  2226  00451A                     
  2227                           ; BSR set to: 1
  2228                           ;main.c: 205:         if (driveMode != ReverseRight && driveMode != ReverseLeft) {
  2229  00451A  0E02               	movlw	2
  2230  00451C  0100               	movlb	0	; () banked
  2231  00451E  19FC               	xorwf	_driveMode& (0+255),w,b
  2232  004520  B4D8               	btfsc	status,2,c
  2233  004522  EF95  F022         	goto	u10321
  2234  004526  EF97  F022         	goto	u10320
  2235  00452A                     u10321:
  2236  00452A  EFC1  F022         	goto	l9171
  2237  00452E                     u10320:
  2238  00452E                     
  2239                           ; BSR set to: 0
  2240  00452E  0E03               	movlw	3
  2241  004530  19FC               	xorwf	_driveMode& (0+255),w,b
  2242  004532  B4D8               	btfsc	status,2,c
  2243  004534  EF9E  F022         	goto	u10331
  2244  004538  EFA0  F022         	goto	u10330
  2245  00453C                     u10331:
  2246  00453C  EFC1  F022         	goto	l9171
  2247  004540                     u10330:
  2248  004540                     
  2249                           ; BSR set to: 0
  2250                           ;main.c: 206:             if (distLeft > distRight) {
  2251  004540  51F7               	movf	_distLeft& (0+255),w,b	;volatile
  2252  004542  5DF5               	subwf	_distRight& (0+255),w,b	;volatile
  2253  004544  51F8               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  2254  004546  59F6               	subwfb	(_distRight+1)& (0+255),w,b	;volatile
  2255  004548  B0D8               	btfsc	status,0,c
  2256  00454A  EFA9  F022         	goto	u10341
  2257  00454E  EFAB  F022         	goto	u10340
  2258  004552                     u10341:
  2259  004552  EFB7  F022         	goto	l9167
  2260  004556                     u10340:
  2261  004556                     
  2262                           ; BSR set to: 0
  2263                           ;main.c: 207:                 printf("ReverseRigth\n");
  2264  004556  0E7E               	movlw	low STR_7
  2265  004558  0101               	movlb	1	; () banked
  2266  00455A  6FAC               	movwf	printf@fmt& (0+255),b
  2267  00455C  0E10               	movlw	high STR_7
  2268  00455E  6FAD               	movwf	(printf@fmt+1)& (0+255),b
  2269  004560  EC5E  F030         	call	_printf	;wreg free
  2270  004564                     
  2271                           ;main.c: 208:                 driveMode = ReverseRight;
  2272  004564  0E02               	movlw	2
  2273  004566  0100               	movlb	0	; () banked
  2274  004568  6FFC               	movwf	_driveMode& (0+255),b
  2275                           
  2276                           ;main.c: 209:             } else {
  2277  00456A  EFC1  F022         	goto	l9171
  2278  00456E                     l9167:
  2279                           
  2280                           ; BSR set to: 0
  2281                           ;main.c: 210:                 printf("ReverseLeft\n");
  2282  00456E  0E8C               	movlw	low STR_8
  2283  004570  0101               	movlb	1	; () banked
  2284  004572  6FAC               	movwf	printf@fmt& (0+255),b
  2285  004574  0E10               	movlw	high STR_8
  2286  004576  6FAD               	movwf	(printf@fmt+1)& (0+255),b
  2287  004578  EC5E  F030         	call	_printf	;wreg free
  2288  00457C                     
  2289                           ;main.c: 211:                 driveMode = ReverseLeft;
  2290  00457C  0E03               	movlw	3
  2291  00457E  0100               	movlb	0	; () banked
  2292  004580  6FFC               	movwf	_driveMode& (0+255),b
  2293  004582                     l9171:
  2294                           
  2295                           ; BSR set to: 0
  2296                           ;main.c: 215:         if (distFront > (35) || reverseTime > (300)) {
  2297  004582  51FE               	movf	(_distFront+1)& (0+255),w,b	;volatile
  2298  004584  E107               	bnz	u10351
  2299  004586  0E24               	movlw	36
  2300  004588  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
  2301  00458A  B0D8               	btfsc	status,0,c
  2302  00458C  EFCA  F022         	goto	u10351
  2303  004590  EFCC  F022         	goto	u10350
  2304  004594                     u10351:
  2305  004594  EFDB  F022         	goto	l9175
  2306  004598                     u10350:
  2307  004598                     
  2308                           ; BSR set to: 0
  2309  004598  0101               	movlb	1	; () banked
  2310  00459A  BF2D               	btfsc	(_reverseTime+1)& (0+255),7,b
  2311  00459C  EFD9  F022         	goto	u10361
  2312  0045A0  0E2D               	movlw	45
  2313  0045A2  5D2C               	subwf	_reverseTime& (0+255),w,b
  2314  0045A4  0E01               	movlw	1
  2315  0045A6  592D               	subwfb	(_reverseTime+1)& (0+255),w,b
  2316  0045A8  A0D8               	btfss	status,0,c
  2317  0045AA  EFD9  F022         	goto	u10361
  2318  0045AE  EFDB  F022         	goto	u10360
  2319  0045B2                     u10361:
  2320  0045B2  EFFD  F022         	goto	l1313
  2321  0045B6                     u10360:
  2322  0045B6                     l9175:
  2323                           
  2324                           ;main.c: 216:             printf("Stop Reverse\n");
  2325  0045B6  0E70               	movlw	low STR_9
  2326  0045B8  0101               	movlb	1	; () banked
  2327  0045BA  6FAC               	movwf	printf@fmt& (0+255),b
  2328  0045BC  0E10               	movlw	high STR_9
  2329  0045BE  6FAD               	movwf	(printf@fmt+1)& (0+255),b
  2330  0045C0  EC5E  F030         	call	_printf	;wreg free
  2331  0045C4                     
  2332                           ;main.c: 217:             if (distLeft > distRight) {
  2333  0045C4  0100               	movlb	0	; () banked
  2334  0045C6  51F7               	movf	_distLeft& (0+255),w,b	;volatile
  2335  0045C8  5DF5               	subwf	_distRight& (0+255),w,b	;volatile
  2336  0045CA  51F8               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  2337  0045CC  59F6               	subwfb	(_distRight+1)& (0+255),w,b	;volatile
  2338  0045CE  B0D8               	btfsc	status,0,c
  2339  0045D0  EFEC  F022         	goto	u10371
  2340  0045D4  EFEE  F022         	goto	u10370
  2341  0045D8                     u10371:
  2342  0045D8  EFF2  F022         	goto	l9181
  2343  0045DC                     u10370:
  2344  0045DC                     
  2345                           ; BSR set to: 0
  2346                           ;main.c: 218:                 driveMode = CurveLeft;
  2347  0045DC  0E04               	movlw	4
  2348  0045DE  6FFC               	movwf	_driveMode& (0+255),b
  2349                           
  2350                           ;main.c: 219:             } else {
  2351  0045E0  EFF4  F022         	goto	l1312
  2352  0045E4                     l9181:
  2353                           
  2354                           ; BSR set to: 0
  2355                           ;main.c: 220:                 driveMode = CurveRight;
  2356  0045E4  0E05               	movlw	5
  2357  0045E6  6FFC               	movwf	_driveMode& (0+255),b
  2358  0045E8                     l1312:
  2359                           
  2360                           ; BSR set to: 0
  2361                           ;main.c: 222:             reverseCount = 0;
  2362  0045E8  0E00               	movlw	0
  2363  0045EA  0101               	movlb	1	; () banked
  2364  0045EC  6F39               	movwf	(_reverseCount+1)& (0+255),b
  2365  0045EE  0E00               	movlw	0
  2366  0045F0  6F38               	movwf	_reverseCount& (0+255),b
  2367                           
  2368                           ;main.c: 223:             reverseTime = 0;
  2369  0045F2  0E00               	movlw	0
  2370  0045F4  6F2D               	movwf	(_reverseTime+1)& (0+255),b
  2371  0045F6  0E00               	movlw	0
  2372  0045F8  6F2C               	movwf	_reverseTime& (0+255),b
  2373  0045FA                     l1313:
  2374                           
  2375                           ; BSR set to: 1
  2376  0045FA  0012               	return		;funcret
  2377  0045FC                     __end_of_getReverse:
  2378                           	callstack 0
  2379                           
  2380 ;; *************** function _getCurve *****************
  2381 ;; Defined at:
  2382 ;;		line 132 in file "main.c"
  2383 ;; Parameters:    Size  Location     Type
  2384 ;;		None
  2385 ;; Auto vars:     Size  Location     Type
  2386 ;;  deltaRight      2   23[COMRAM] short 
  2387 ;;  deltaLeft       2   21[COMRAM] short 
  2388 ;; Return value:  Size  Location     Type
  2389 ;;                  1    wreg      void 
  2390 ;; Registers used:
  2391 ;;		wreg, status,2, status,0
  2392 ;; Tracked objects:
  2393 ;;		On entry : 0/0
  2394 ;;		On exit  : 0/0
  2395 ;;		Unchanged: 0/0
  2396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2398 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2399 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2400 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2401 ;;Total ram usage:        6 bytes
  2402 ;; Hardware stack levels used: 1
  2403 ;; Hardware stack levels required when called: 8
  2404 ;; This function calls:
  2405 ;;		Nothing
  2406 ;; This function is called by:
  2407 ;;		_loop
  2408 ;; This function uses a non-reentrant model
  2409 ;;
  2410                           
  2411                           	psect	text4
  2412  003B34                     __ptext4:
  2413                           	callstack 0
  2414  003B34                     _getCurve:
  2415                           	callstack 21
  2416  003B34                     
  2417                           ;main.c: 133:     int16_t deltaLeft;;main.c: 134:     int16_t deltaRight;;main.c: 136:  
      +                             switch (curveMode) {
  2418  003B34  EF65  F01E         	goto	l6977
  2419  003B38                     l6931:
  2420                           
  2421                           ;main.c: 138:             deltaLeft = (int16_t) (distLeft - oldDistLeft);
  2422  003B38  0101               	movlb	1	; () banked
  2423  003B3A  5136               	movf	_oldDistLeft& (0+255),w,b
  2424  003B3C  0100               	movlb	0	; () banked
  2425  003B3E  5DF7               	subwf	_distLeft& (0+255),w,b	;volatile
  2426  003B40  6E16               	movwf	getCurve@deltaLeft^0,c
  2427  003B42  0101               	movlb	1	; () banked
  2428  003B44  5137               	movf	(_oldDistLeft+1)& (0+255),w,b
  2429  003B46  0100               	movlb	0	; () banked
  2430  003B48  59F8               	subwfb	(_distLeft+1)& (0+255),w,b	;volatile
  2431  003B4A  6E17               	movwf	(getCurve@deltaLeft+1)^0,c
  2432                           
  2433                           ;main.c: 139:             deltaRight = (int16_t) (distRight - oldDistRight);
  2434  003B4C  0101               	movlb	1	; () banked
  2435  003B4E  5134               	movf	_oldDistRight& (0+255),w,b
  2436  003B50  0100               	movlb	0	; () banked
  2437  003B52  5DF5               	subwf	_distRight& (0+255),w,b	;volatile
  2438  003B54  6E18               	movwf	getCurve@deltaRight^0,c
  2439  003B56  0101               	movlb	1	; () banked
  2440  003B58  5135               	movf	(_oldDistRight+1)& (0+255),w,b
  2441  003B5A  0100               	movlb	0	; () banked
  2442  003B5C  59F6               	subwfb	(_distRight+1)& (0+255),w,b	;volatile
  2443  003B5E  6E19               	movwf	(getCurve@deltaRight+1)^0,c
  2444                           
  2445                           ;main.c: 142:             if (deltaLeft > (30) && deltaLeft < (300) && oldDistLeft < (10
      +                          0)) {
  2446  003B60  BE17               	btfsc	(getCurve@deltaLeft+1)^0,7,c
  2447  003B62  EFBC  F01D         	goto	u6721
  2448  003B66  5017               	movf	(getCurve@deltaLeft+1)^0,w,c
  2449  003B68  E109               	bnz	u6720
  2450  003B6A  0E1F               	movlw	31
  2451  003B6C  5C16               	subwf	getCurve@deltaLeft^0,w,c
  2452  003B6E  A0D8               	btfss	status,0,c
  2453  003B70  EFBC  F01D         	goto	u6721
  2454  003B74  EFBE  F01D         	goto	u6720
  2455  003B78                     u6721:
  2456  003B78  EFE2  F01D         	goto	l6941
  2457  003B7C                     u6720:
  2458  003B7C                     
  2459                           ; BSR set to: 0
  2460  003B7C  BE17               	btfsc	(getCurve@deltaLeft+1)^0,7,c
  2461  003B7E  EFCC  F01D         	goto	u6730
  2462  003B82  0E2C               	movlw	44
  2463  003B84  5C16               	subwf	getCurve@deltaLeft^0,w,c
  2464  003B86  0E01               	movlw	1
  2465  003B88  5817               	subwfb	(getCurve@deltaLeft+1)^0,w,c
  2466  003B8A  B0D8               	btfsc	status,0,c
  2467  003B8C  EFCA  F01D         	goto	u6731
  2468  003B90  EFCC  F01D         	goto	u6730
  2469  003B94                     u6731:
  2470  003B94  EFE2  F01D         	goto	l6941
  2471  003B98                     u6730:
  2472  003B98                     
  2473                           ; BSR set to: 0
  2474  003B98  0101               	movlb	1	; () banked
  2475  003B9A  5137               	movf	(_oldDistLeft+1)& (0+255),w,b
  2476  003B9C  E107               	bnz	u6741
  2477  003B9E  0E64               	movlw	100
  2478  003BA0  5D36               	subwf	_oldDistLeft& (0+255),w,b
  2479  003BA2  B0D8               	btfsc	status,0,c
  2480  003BA4  EFD6  F01D         	goto	u6741
  2481  003BA8  EFD8  F01D         	goto	u6740
  2482  003BAC                     u6741:
  2483  003BAC  EFE2  F01D         	goto	l6941
  2484  003BB0                     u6740:
  2485  003BB0                     
  2486                           ; BSR set to: 1
  2487                           ;main.c: 143:                 delay = 0;
  2488  003BB0  0E00               	movlw	0
  2489  003BB2  6E40               	movwf	_delay^0,c
  2490                           
  2491                           ;main.c: 144:                 curveMode = BeforeCurve;
  2492  003BB4  0E01               	movlw	1
  2493  003BB6  6E41               	movwf	_curveMode^0,c
  2494                           
  2495                           ;main.c: 145:                 driveMode = CurveLeft;
  2496  003BB8  0E04               	movlw	4
  2497  003BBA  0100               	movlb	0	; () banked
  2498  003BBC  6FFC               	movwf	_driveMode& (0+255),b
  2499  003BBE                     
  2500                           ; BSR set to: 0
  2501                           ;main.c: 146:                 ++curveLeftCount;
  2502  003BBE  2BFA               	incf	_curveLeftCount& (0+255),f,b
  2503                           
  2504                           ;main.c: 149:             } else if (deltaRight > (30) && deltaRight < (300) && oldDistR
      +                          ight < (100)) {
  2505  003BC0  EF82  F01E         	goto	l1286
  2506  003BC4                     l6941:
  2507  003BC4  BE19               	btfsc	(getCurve@deltaRight+1)^0,7,c
  2508  003BC6  EFEE  F01D         	goto	u6751
  2509  003BCA  5019               	movf	(getCurve@deltaRight+1)^0,w,c
  2510  003BCC  E109               	bnz	u6750
  2511  003BCE  0E1F               	movlw	31
  2512  003BD0  5C18               	subwf	getCurve@deltaRight^0,w,c
  2513  003BD2  A0D8               	btfss	status,0,c
  2514  003BD4  EFEE  F01D         	goto	u6751
  2515  003BD8  EFF0  F01D         	goto	u6750
  2516  003BDC                     u6751:
  2517  003BDC  EF82  F01E         	goto	l1286
  2518  003BE0                     u6750:
  2519  003BE0  BE19               	btfsc	(getCurve@deltaRight+1)^0,7,c
  2520  003BE2  EFFE  F01D         	goto	u6760
  2521  003BE6  0E2C               	movlw	44
  2522  003BE8  5C18               	subwf	getCurve@deltaRight^0,w,c
  2523  003BEA  0E01               	movlw	1
  2524  003BEC  5819               	subwfb	(getCurve@deltaRight+1)^0,w,c
  2525  003BEE  B0D8               	btfsc	status,0,c
  2526  003BF0  EFFC  F01D         	goto	u6761
  2527  003BF4  EFFE  F01D         	goto	u6760
  2528  003BF8                     u6761:
  2529  003BF8  EF82  F01E         	goto	l1286
  2530  003BFC                     u6760:
  2531  003BFC  0101               	movlb	1	; () banked
  2532  003BFE  5135               	movf	(_oldDistRight+1)& (0+255),w,b
  2533  003C00  E107               	bnz	u6771
  2534  003C02  0E64               	movlw	100
  2535  003C04  5D34               	subwf	_oldDistRight& (0+255),w,b
  2536  003C06  B0D8               	btfsc	status,0,c
  2537  003C08  EF08  F01E         	goto	u6771
  2538  003C0C  EF0A  F01E         	goto	u6770
  2539  003C10                     u6771:
  2540  003C10  EF82  F01E         	goto	l1286
  2541  003C14                     u6770:
  2542  003C14                     
  2543                           ; BSR set to: 1
  2544                           ;main.c: 150:                 delay = 0;
  2545  003C14  0E00               	movlw	0
  2546  003C16  6E40               	movwf	_delay^0,c
  2547                           
  2548                           ;main.c: 151:                 curveMode = BeforeCurve;
  2549  003C18  0E01               	movlw	1
  2550  003C1A  6E41               	movwf	_curveMode^0,c
  2551                           
  2552                           ;main.c: 152:                 driveMode = CurveRight;
  2553  003C1C  0E05               	movlw	5
  2554  003C1E  0100               	movlb	0	; () banked
  2555  003C20  6FFC               	movwf	_driveMode& (0+255),b
  2556  003C22                     
  2557                           ; BSR set to: 0
  2558                           ;main.c: 153:                 ++curveRightCount;
  2559  003C22  2BF9               	incf	_curveRightCount& (0+255),f,b
  2560  003C24  EF82  F01E         	goto	l1286
  2561  003C28                     l6951:
  2562                           
  2563                           ;main.c: 161:             if (delay > (15)) {
  2564  003C28  0E0F               	movlw	15
  2565  003C2A  6440               	cpfsgt	_delay^0,c
  2566  003C2C  EF1A  F01E         	goto	u6781
  2567  003C30  EF1C  F01E         	goto	u6780
  2568  003C34                     u6781:
  2569  003C34  EF22  F01E         	goto	l6955
  2570  003C38                     u6780:
  2571  003C38                     
  2572                           ;main.c: 162:                 delay = 0;
  2573  003C38  0E00               	movlw	0
  2574  003C3A  6E40               	movwf	_delay^0,c
  2575                           
  2576                           ;main.c: 163:                 curveMode = InCurve;
  2577  003C3C  0E02               	movlw	2
  2578  003C3E  6E41               	movwf	_curveMode^0,c
  2579                           
  2580                           ;main.c: 165:             } else {
  2581  003C40  EF82  F01E         	goto	l1286
  2582  003C44                     l6955:
  2583                           
  2584                           ;main.c: 166:                 ++delay;
  2585  003C44  2A40               	incf	_delay^0,f,c
  2586  003C46  EF82  F01E         	goto	l1286
  2587  003C4A                     l6957:
  2588                           
  2589                           ;main.c: 170:             if (delay > (25)) {
  2590  003C4A  0E19               	movlw	25
  2591  003C4C  6440               	cpfsgt	_delay^0,c
  2592  003C4E  EF2B  F01E         	goto	u6791
  2593  003C52  EF2D  F01E         	goto	u6790
  2594  003C56                     u6791:
  2595  003C56  EF22  F01E         	goto	l6955
  2596  003C5A                     u6790:
  2597  003C5A                     
  2598                           ;main.c: 171:                 if (distLeft < (35) || distRight < (35) || distFront > (18
      +                          0)) {
  2599  003C5A  0100               	movlb	0	; () banked
  2600  003C5C  51F8               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  2601  003C5E  E109               	bnz	u6800
  2602  003C60  0E23               	movlw	35
  2603  003C62  5DF7               	subwf	_distLeft& (0+255),w,b	;volatile
  2604  003C64  A0D8               	btfss	status,0,c
  2605  003C66  EF37  F01E         	goto	u6801
  2606  003C6A  EF39  F01E         	goto	u6800
  2607  003C6E                     u6801:
  2608  003C6E  EF4F  F01E         	goto	l6965
  2609  003C72                     u6800:
  2610  003C72                     
  2611                           ; BSR set to: 0
  2612  003C72  51F6               	movf	(_distRight+1)& (0+255),w,b	;volatile
  2613  003C74  E109               	bnz	u6810
  2614  003C76  0E23               	movlw	35
  2615  003C78  5DF5               	subwf	_distRight& (0+255),w,b	;volatile
  2616  003C7A  A0D8               	btfss	status,0,c
  2617  003C7C  EF42  F01E         	goto	u6811
  2618  003C80  EF44  F01E         	goto	u6810
  2619  003C84                     u6811:
  2620  003C84  EF4F  F01E         	goto	l6965
  2621  003C88                     u6810:
  2622  003C88                     
  2623                           ; BSR set to: 0
  2624  003C88  51FE               	movf	(_distFront+1)& (0+255),w,b	;volatile
  2625  003C8A  E109               	bnz	u6820
  2626  003C8C  0EB5               	movlw	181
  2627  003C8E  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
  2628  003C90  A0D8               	btfss	status,0,c
  2629  003C92  EF4D  F01E         	goto	u6821
  2630  003C96  EF4F  F01E         	goto	u6820
  2631  003C9A                     u6821:
  2632  003C9A  EF82  F01E         	goto	l1286
  2633  003C9E                     u6820:
  2634  003C9E                     l6965:
  2635                           
  2636                           ; BSR set to: 0
  2637                           ;main.c: 172:                     delay = 0;
  2638  003C9E  0E00               	movlw	0
  2639  003CA0  6E40               	movwf	_delay^0,c
  2640                           
  2641                           ;main.c: 173:                     curveMode = AfterCurve;
  2642  003CA2  0E03               	movlw	3
  2643  003CA4  6E41               	movwf	_curveMode^0,c
  2644                           
  2645                           ;main.c: 174:                     driveMode = Straight;
  2646  003CA6  0E00               	movlw	0
  2647  003CA8  6FFC               	movwf	_driveMode& (0+255),b
  2648  003CAA  EF82  F01E         	goto	l1286
  2649  003CAE                     l6969:
  2650                           
  2651                           ;main.c: 182:             if (delay > (5)) {
  2652  003CAE  0E05               	movlw	5
  2653  003CB0  6440               	cpfsgt	_delay^0,c
  2654  003CB2  EF5D  F01E         	goto	u6831
  2655  003CB6  EF5F  F01E         	goto	u6830
  2656  003CBA                     u6831:
  2657  003CBA  EF22  F01E         	goto	l6955
  2658  003CBE                     u6830:
  2659  003CBE                     
  2660                           ;main.c: 183:                 delay = 0;
  2661  003CBE  0E00               	movlw	0
  2662  003CC0  6E40               	movwf	_delay^0,c
  2663                           
  2664                           ;main.c: 184:                 curveMode = OutCurve;
  2665  003CC2  0E00               	movlw	0
  2666  003CC4  6E41               	movwf	_curveMode^0,c
  2667                           
  2668                           ;main.c: 186:             } else {
  2669  003CC6  EF82  F01E         	goto	l1286
  2670  003CCA                     l6977:
  2671  003CCA  5041               	movf	_curveMode^0,w,c
  2672  003CCC  6E14               	movwf	??_getCurve^0,c
  2673  003CCE  6A15               	clrf	(??_getCurve+1)^0,c
  2674                           
  2675                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2676                           ; Switch size 1, requested type "simple"
  2677                           ; Number of cases is 1, Range of values is 0 to 0
  2678                           ; switch strategies available:
  2679                           ; Name         Instructions Cycles
  2680                           ; simple_byte            4     3 (average)
  2681                           ;	Chosen strategy is simple_byte
  2682  003CD0  5015               	movf	(??_getCurve+1)^0,w,c
  2683  003CD2  0A00               	xorlw	0	; case 0
  2684  003CD4  B4D8               	btfsc	status,2,c
  2685  003CD6  EF6F  F01E         	goto	l9521
  2686  003CDA  EF82  F01E         	goto	l1286
  2687  003CDE                     l9521:
  2688                           
  2689                           ; Switch size 1, requested type "simple"
  2690                           ; Number of cases is 4, Range of values is 0 to 3
  2691                           ; switch strategies available:
  2692                           ; Name         Instructions Cycles
  2693                           ; simple_byte           13     7 (average)
  2694                           ;	Chosen strategy is simple_byte
  2695  003CDE  5014               	movf	??_getCurve^0,w,c
  2696  003CE0  0A00               	xorlw	0	; case 0
  2697  003CE2  B4D8               	btfsc	status,2,c
  2698  003CE4  EF9C  F01D         	goto	l6931
  2699  003CE8  0A01               	xorlw	1	; case 1
  2700  003CEA  B4D8               	btfsc	status,2,c
  2701  003CEC  EF14  F01E         	goto	l6951
  2702  003CF0  0A03               	xorlw	3	; case 2
  2703  003CF2  B4D8               	btfsc	status,2,c
  2704  003CF4  EF25  F01E         	goto	l6957
  2705  003CF8  0A01               	xorlw	1	; case 3
  2706  003CFA  B4D8               	btfsc	status,2,c
  2707  003CFC  EF57  F01E         	goto	l6969
  2708  003D00  EF82  F01E         	goto	l1286
  2709  003D04                     l1286:
  2710                           
  2711                           ;main.c: 191:     oldDistLeft = distLeft;
  2712  003D04  C0F7  F136         	movff	_distLeft,_oldDistLeft	;volatile
  2713  003D08  C0F8  F137         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  2714                           
  2715                           ;main.c: 192:     oldDistRight = distRight;
  2716  003D0C  C0F5  F134         	movff	_distRight,_oldDistRight	;volatile
  2717  003D10  C0F6  F135         	movff	_distRight+1,_oldDistRight+1	;volatile
  2718  003D14  0012               	return		;funcret
  2719  003D16                     __end_of_getCurve:
  2720                           	callstack 0
  2721                           
  2722 ;; *************** function _checkCurveCount *****************
  2723 ;; Defined at:
  2724 ;;		line 119 in file "main.c"
  2725 ;; Parameters:    Size  Location     Type
  2726 ;;		None
  2727 ;; Auto vars:     Size  Location     Type
  2728 ;;  roundTime       4   16[BANK1 ] float 
  2729 ;; Return value:  Size  Location     Type
  2730 ;;                  1    wreg      void 
  2731 ;; Registers used:
  2732 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2733 ;; Tracked objects:
  2734 ;;		On entry : 0/0
  2735 ;;		On exit  : 0/0
  2736 ;;		Unchanged: 0/0
  2737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2739 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2741 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2742 ;;Total ram usage:        4 bytes
  2743 ;; Hardware stack levels used: 1
  2744 ;; Hardware stack levels required when called: 17
  2745 ;; This function calls:
  2746 ;;		___awdiv
  2747 ;;		___xxtofl
  2748 ;;		_printf
  2749 ;; This function is called by:
  2750 ;;		_loop
  2751 ;; This function uses a non-reentrant model
  2752 ;;
  2753                           
  2754                           	psect	text5
  2755  0051E0                     __ptext5:
  2756                           	callstack 0
  2757  0051E0                     _checkCurveCount:
  2758                           	callstack 12
  2759  0051E0                     
  2760                           ;main.c: 120:     if (distFront > 450) {
  2761  0051E0  0EC3               	movlw	195
  2762  0051E2  0100               	movlb	0	; () banked
  2763  0051E4  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
  2764  0051E6  0E01               	movlw	1
  2765  0051E8  59FE               	subwfb	(_distFront+1)& (0+255),w,b	;volatile
  2766  0051EA  A0D8               	btfss	status,0,c
  2767  0051EC  EFFA  F028         	goto	u10551
  2768  0051F0  EFFC  F028         	goto	u10550
  2769  0051F4                     u10551:
  2770  0051F4  EF4E  F029         	goto	l1278
  2771  0051F8                     u10550:
  2772  0051F8                     
  2773                           ; BSR set to: 0
  2774                           ;main.c: 121:         float roundTime = roundTimeCount / 100;
  2775  0051F8  0E00               	movlw	0
  2776  0051FA  6E17               	movwf	(___awdiv@divisor+1)^0,c
  2777  0051FC  0E64               	movlw	100
  2778  0051FE  6E16               	movwf	___awdiv@divisor^0,c
  2779  005200  C12A  F014         	movff	_roundTimeCount,___awdiv@dividend
  2780  005204  C12B  F015         	movff	_roundTimeCount+1,___awdiv@dividend+1
  2781  005208  ECCD  F027         	call	___awdiv	;wreg free
  2782  00520C  C014  F01C         	movff	?___awdiv,___xxtofl@val
  2783  005210  C015  F01D         	movff	?___awdiv+1,___xxtofl@val+1
  2784  005214  0E00               	movlw	0
  2785  005216  BE1D               	btfsc	(___xxtofl@val+1)^0,7,c
  2786  005218  0EFF               	movlw	-1
  2787  00521A  6E1E               	movwf	(___xxtofl@val+2)^0,c
  2788  00521C  6E1F               	movwf	(___xxtofl@val+3)^0,c
  2789  00521E  0E01               	movlw	1
  2790  005220  EC72  F01F         	call	___xxtofl
  2791  005224  C01C  F1B4         	movff	?___xxtofl,checkCurveCount@roundTime
  2792  005228  C01D  F1B5         	movff	?___xxtofl+1,checkCurveCount@roundTime+1
  2793  00522C  C01E  F1B6         	movff	?___xxtofl+2,checkCurveCount@roundTime+2
  2794  005230  C01F  F1B7         	movff	?___xxtofl+3,checkCurveCount@roundTime+3
  2795  005234                     
  2796                           ;main.c: 122:         printf("Reset CurveCount!  |   ");
  2797  005234  0E1B               	movlw	low STR_3
  2798  005236  0101               	movlb	1	; () banked
  2799  005238  6FAC               	movwf	printf@fmt& (0+255),b
  2800  00523A  0E10               	movlw	high STR_3
  2801  00523C  6FAD               	movwf	(printf@fmt+1)& (0+255),b
  2802  00523E  EC5E  F030         	call	_printf	;wreg free
  2803  005242                     
  2804                           ;main.c: 123:         printf("CurveLeftCount: %u   |   ", curveLeftCount);
  2805  005242  0E01               	movlw	low STR_4
  2806  005244  0101               	movlb	1	; () banked
  2807  005246  6FAC               	movwf	printf@fmt& (0+255),b
  2808  005248  0E10               	movlw	high STR_4
  2809  00524A  6FAD               	movwf	(printf@fmt+1)& (0+255),b
  2810  00524C  C0FA  F1AE         	movff	_curveLeftCount,?_printf+2
  2811  005250  6BAF               	clrf	(?_printf+3)& (0+255),b
  2812  005252  EC5E  F030         	call	_printf	;wreg free
  2813  005256                     
  2814                           ;main.c: 124:         printf("CurveRightCount: %u\n", curveRightCount);
  2815  005256  0E48               	movlw	low STR_5
  2816  005258  0101               	movlb	1	; () banked
  2817  00525A  6FAC               	movwf	printf@fmt& (0+255),b
  2818  00525C  0E10               	movlw	high STR_5
  2819  00525E  6FAD               	movwf	(printf@fmt+1)& (0+255),b
  2820  005260  C0F9  F1AE         	movff	_curveRightCount,?_printf+2
  2821  005264  6BAF               	clrf	(?_printf+3)& (0+255),b
  2822  005266  EC5E  F030         	call	_printf	;wreg free
  2823  00526A                     
  2824                           ;main.c: 125:         printf("RoundTimeCount: %f\n\n", roundTime);
  2825  00526A  0E33               	movlw	low STR_6
  2826  00526C  0101               	movlb	1	; () banked
  2827  00526E  6FAC               	movwf	printf@fmt& (0+255),b
  2828  005270  0E10               	movlw	high STR_6
  2829  005272  6FAD               	movwf	(printf@fmt+1)& (0+255),b
  2830  005274  C1B4  F1AE         	movff	checkCurveCount@roundTime,?_printf+2
  2831  005278  C1B5  F1AF         	movff	checkCurveCount@roundTime+1,?_printf+3
  2832  00527C  C1B6  F1B0         	movff	checkCurveCount@roundTime+2,?_printf+4
  2833  005280  C1B7  F1B1         	movff	checkCurveCount@roundTime+3,?_printf+5
  2834  005284  EC5E  F030         	call	_printf	;wreg free
  2835  005288                     
  2836                           ;main.c: 126:         roundTimeCount = 0;
  2837  005288  0E00               	movlw	0
  2838  00528A  0101               	movlb	1	; () banked
  2839  00528C  6F2B               	movwf	(_roundTimeCount+1)& (0+255),b
  2840  00528E  0E00               	movlw	0
  2841  005290  6F2A               	movwf	_roundTimeCount& (0+255),b
  2842  005292                     
  2843                           ; BSR set to: 1
  2844                           ;main.c: 127:         curveRightCount = 0;
  2845  005292  0E00               	movlw	0
  2846  005294  0100               	movlb	0	; () banked
  2847  005296  6FF9               	movwf	_curveRightCount& (0+255),b
  2848  005298                     
  2849                           ; BSR set to: 0
  2850                           ;main.c: 128:         curveLeftCount = 0;
  2851  005298  0E00               	movlw	0
  2852  00529A  6FFA               	movwf	_curveLeftCount& (0+255),b
  2853  00529C                     l1278:
  2854                           
  2855                           ; BSR set to: 0
  2856  00529C  0012               	return		;funcret
  2857  00529E                     __end_of_checkCurveCount:
  2858                           	callstack 0
  2859                           
  2860 ;; *************** function _checkBatt *****************
  2861 ;; Defined at:
  2862 ;;		line 90 in file "main.c"
  2863 ;; Parameters:    Size  Location     Type
  2864 ;;		None
  2865 ;; Auto vars:     Size  Location     Type
  2866 ;;		None
  2867 ;; Return value:  Size  Location     Type
  2868 ;;                  1    wreg      _Bool 
  2869 ;; Registers used:
  2870 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2871 ;; Tracked objects:
  2872 ;;		On entry : 0/0
  2873 ;;		On exit  : 0/0
  2874 ;;		Unchanged: 0/0
  2875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2880 ;;Total ram usage:        0 bytes
  2881 ;; Hardware stack levels used: 1
  2882 ;; Hardware stack levels required when called: 18
  2883 ;; This function calls:
  2884 ;;		___flge
  2885 ;;		___xxtofl
  2886 ;;		_getBatteryVoltage
  2887 ;;		_setSteering
  2888 ;; This function is called by:
  2889 ;;		_loop
  2890 ;; This function uses a non-reentrant model
  2891 ;;
  2892                           
  2893                           	psect	text6
  2894  005666                     __ptext6:
  2895                           	callstack 0
  2896  005666                     _checkBatt:
  2897                           	callstack 11
  2898  005666                     
  2899                           ;main.c: 91:     ++battCheckCount;
  2900  005666  0101               	movlb	1	; () banked
  2901  005668  4B32               	infsnz	_battCheckCount& (0+255),f,b
  2902  00566A  2B33               	incf	(_battCheckCount+1)& (0+255),f,b
  2903  00566C                     
  2904                           ; BSR set to: 1
  2905                           ;main.c: 92:     if (battCheckCount > (500)) {
  2906  00566C  0EF5               	movlw	245
  2907  00566E  5D32               	subwf	_battCheckCount& (0+255),w,b
  2908  005670  0E01               	movlw	1
  2909  005672  5933               	subwfb	(_battCheckCount+1)& (0+255),w,b
  2910  005674  A0D8               	btfss	status,0,c
  2911  005676  EF3F  F02B         	goto	u10281
  2912  00567A  EF41  F02B         	goto	u10280
  2913  00567E                     u10281:
  2914  00567E  EF7A  F02B         	goto	l9143
  2915  005682                     u10280:
  2916  005682                     
  2917                           ; BSR set to: 1
  2918                           ;main.c: 93:         battCheckCount = 0;
  2919  005682  0E00               	movlw	0
  2920  005684  6F33               	movwf	(_battCheckCount+1)& (0+255),b
  2921  005686  0E00               	movlw	0
  2922  005688  6F32               	movwf	_battCheckCount& (0+255),b
  2923  00568A                     
  2924                           ; BSR set to: 1
  2925                           ;main.c: 94:         getBatteryVoltage();
  2926  00568A  EC86  F030         	call	_getBatteryVoltage	;wreg free
  2927  00568E                     
  2928                           ;main.c: 95:         if (BatteryVolt < (3) * 409.6) {
  2929  00568E  C0EB  F01C         	movff	_BatteryVolt,___xxtofl@val
  2930  005692  C0EC  F01D         	movff	_BatteryVolt+1,___xxtofl@val+1
  2931  005696  6A1E               	clrf	(___xxtofl@val+2)^0,c
  2932  005698  6A1F               	clrf	(___xxtofl@val+3)^0,c
  2933  00569A  0E00               	movlw	0
  2934  00569C  EC72  F01F         	call	___xxtofl
  2935  0056A0  C01C  F06D         	movff	?___xxtofl,___flge@ff1
  2936  0056A4  C01D  F06E         	movff	?___xxtofl+1,___flge@ff1+1
  2937  0056A8  C01E  F06F         	movff	?___xxtofl+2,___flge@ff1+2
  2938  0056AC  C01F  F070         	movff	?___xxtofl+3,___flge@ff1+3
  2939  0056B0  0E9A               	movlw	154
  2940  0056B2  0100               	movlb	0	; () banked
  2941  0056B4  6F71               	movwf	___flge@ff2& (0+255),b
  2942  0056B6  0E99               	movlw	153
  2943  0056B8  6F72               	movwf	(___flge@ff2+1)& (0+255),b
  2944  0056BA  0E99               	movlw	153
  2945  0056BC  6F73               	movwf	(___flge@ff2+2)& (0+255),b
  2946  0056BE  0E44               	movlw	68
  2947  0056C0  6F74               	movwf	(___flge@ff2+3)& (0+255),b
  2948  0056C2  EC9B  F024         	call	___flge	;wreg free
  2949  0056C6  0100               	movlb	0	; () banked
  2950  0056C8  B0D8               	btfsc	status,0,c
  2951  0056CA  EF69  F02B         	goto	u10291
  2952  0056CE  EF6B  F02B         	goto	u10290
  2953  0056D2                     u10291:
  2954  0056D2  EF7A  F02B         	goto	l9143
  2955  0056D6                     u10290:
  2956  0056D6                     
  2957                           ; BSR set to: 0
  2958                           ;main.c: 96:             setSpeed = 0;
  2959  0056D6  0E00               	movlw	0
  2960  0056D8  6FF2               	movwf	(_setSpeed+1)& (0+255),b
  2961  0056DA  0E00               	movlw	0
  2962  0056DC  6FF1               	movwf	_setSpeed& (0+255),b
  2963  0056DE                     
  2964                           ; BSR set to: 0
  2965                           ;main.c: 97:             setSteering(0, Front);
  2966  0056DE  0E00               	movlw	0
  2967  0056E0  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  2968  0056E2  0E00               	movlw	0
  2969  0056E4  6F83               	movwf	setSteering@steering& (0+255),b
  2970  0056E6  0E03               	movlw	3
  2971  0056E8  6F85               	movwf	setSteering@steeringMode& (0+255),b
  2972  0056EA  EC9F  F01C         	call	_setSteering	;wreg free
  2973  0056EE                     
  2974                           ;main.c: 98:             return 1;
  2975  0056EE  0E01               	movlw	1
  2976  0056F0  EF7B  F02B         	goto	l1263
  2977  0056F4                     l9143:
  2978                           
  2979                           ;main.c: 101:     return 0;
  2980  0056F4  0E00               	movlw	0
  2981  0056F6                     l1263:
  2982  0056F6  0012               	return		;funcret
  2983  0056F8                     __end_of_checkBatt:
  2984                           	callstack 0
  2985                           
  2986 ;; *************** function _getBatteryVoltage *****************
  2987 ;; Defined at:
  2988 ;;		line 85 in file "main.c"
  2989 ;; Parameters:    Size  Location     Type
  2990 ;;		None
  2991 ;; Auto vars:     Size  Location     Type
  2992 ;;		None
  2993 ;; Return value:  Size  Location     Type
  2994 ;;                  1    wreg      void 
  2995 ;; Registers used:
  2996 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2997 ;; Tracked objects:
  2998 ;;		On entry : 0/0
  2999 ;;		On exit  : 0/0
  3000 ;;		Unchanged: 0/0
  3001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3006 ;;Total ram usage:        0 bytes
  3007 ;; Hardware stack levels used: 1
  3008 ;; Hardware stack levels required when called: 17
  3009 ;; This function calls:
  3010 ;;		_ADCC_GetSingleConversion
  3011 ;;		_printf
  3012 ;; This function is called by:
  3013 ;;		_loop
  3014 ;;		_checkBatt
  3015 ;; This function uses a non-reentrant model
  3016 ;;
  3017                           
  3018                           	psect	text7
  3019  00610C                     __ptext7:
  3020                           	callstack 0
  3021  00610C                     _getBatteryVoltage:
  3022                           	callstack 12
  3023  00610C                     
  3024                           ;main.c: 86:     BatteryVolt = ADCC_GetSingleConversion(aiBatt);
  3025  00610C  0E22               	movlw	34
  3026  00610E  EC76  F02F         	call	_ADCC_GetSingleConversion
  3027  006112  C014  F0EB         	movff	?_ADCC_GetSingleConversion,_BatteryVolt
  3028  006116  C015  F0EC         	movff	?_ADCC_GetSingleConversion+1,_BatteryVolt+1
  3029  00611A                     
  3030                           ;main.c: 87:     printf("BVolt: %u\n", (uint16_t) BatteryVolt);
  3031  00611A  0E99               	movlw	low STR_1
  3032  00611C  0101               	movlb	1	; () banked
  3033  00611E  6FAC               	movwf	printf@fmt& (0+255),b
  3034  006120  0E10               	movlw	high STR_1
  3035  006122  6FAD               	movwf	(printf@fmt+1)& (0+255),b
  3036  006124  C0EB  F1AE         	movff	_BatteryVolt,?_printf+2
  3037  006128  C0EC  F1AF         	movff	_BatteryVolt+1,?_printf+3
  3038  00612C  EC5E  F030         	call	_printf	;wreg free
  3039  006130  0012               	return		;funcret
  3040  006132                     __end_of_getBatteryVoltage:
  3041                           	callstack 0
  3042                           
  3043 ;; *************** function _printf *****************
  3044 ;; Defined at:
  3045 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
  3046 ;; Parameters:    Size  Location     Type
  3047 ;;  fmt             2    8[BANK1 ] PTR const unsigned char 
  3048 ;;		 -> STR_9(14), STR_8(13), STR_7(14), STR_6(21), 
  3049 ;;		 -> STR_5(21), STR_4(26), STR_3(24), STR_2(19), 
  3050 ;;		 -> STR_1(11), 
  3051 ;; Auto vars:     Size  Location     Type
  3052 ;;  ap              2   14[BANK1 ] PTR void [1]
  3053 ;;		 -> ?_printf(2), 
  3054 ;;  ret             2    0        int 
  3055 ;; Return value:  Size  Location     Type
  3056 ;;                  2    8[BANK1 ] int 
  3057 ;; Registers used:
  3058 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3059 ;; Tracked objects:
  3060 ;;		On entry : 0/0
  3061 ;;		On exit  : 0/0
  3062 ;;		Unchanged: 0/0
  3063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3064 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3065 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3067 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3068 ;;Total ram usage:        8 bytes
  3069 ;; Hardware stack levels used: 1
  3070 ;; Hardware stack levels required when called: 16
  3071 ;; This function calls:
  3072 ;;		_vfprintf
  3073 ;; This function is called by:
  3074 ;;		_getBatteryVoltage
  3075 ;;		_startAccell
  3076 ;;		_checkCurveCount
  3077 ;;		_getReverse
  3078 ;; This function uses a non-reentrant model
  3079 ;;
  3080                           
  3081                           	psect	text8
  3082  0060BC                     __ptext8:
  3083                           	callstack 0
  3084  0060BC                     _printf:
  3085                           	callstack 12
  3086  0060BC  0EAE               	movlw	low (?_printf+2)
  3087  0060BE  0101               	movlb	1	; () banked
  3088  0060C0  6FB2               	movwf	printf@ap& (0+255),b
  3089  0060C2  0E01               	movlw	high (?_printf+2)
  3090  0060C4  6FB3               	movwf	(printf@ap+1)& (0+255),b
  3091  0060C6                     
  3092                           ; BSR set to: 1
  3093  0060C6  0E00               	movlw	0
  3094  0060C8  6FA4               	movwf	vfprintf@fp& (0+255),b
  3095  0060CA  0E00               	movlw	0
  3096  0060CC  6FA5               	movwf	(vfprintf@fp+1)& (0+255),b
  3097  0060CE  C1AC  F1A6         	movff	printf@fmt,vfprintf@fmt
  3098  0060D2  C1AD  F1A7         	movff	printf@fmt+1,vfprintf@fmt+1
  3099  0060D6  0EB2               	movlw	low printf@ap
  3100  0060D8  6FA8               	movwf	vfprintf@ap& (0+255),b
  3101  0060DA  0E01               	movlw	high printf@ap
  3102  0060DC  6FA9               	movwf	(vfprintf@ap+1)& (0+255),b
  3103  0060DE  EC7C  F02B         	call	_vfprintf	;wreg free
  3104  0060E2  0012               	return		;funcret
  3105  0060E4                     __end_of_printf:
  3106                           	callstack 0
  3107                           
  3108 ;; *************** function _vfprintf *****************
  3109 ;; Defined at:
  3110 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3111 ;; Parameters:    Size  Location     Type
  3112 ;;  fp              2    0[BANK1 ] PTR struct _IO_FILE
  3113 ;;		 -> NULL(0), 
  3114 ;;  fmt             2    2[BANK1 ] PTR const unsigned char 
  3115 ;;		 -> STR_9(14), STR_8(13), STR_7(14), STR_6(21), 
  3116 ;;		 -> STR_5(21), STR_4(26), STR_3(24), STR_2(19), 
  3117 ;;		 -> STR_1(11), 
  3118 ;;  ap              2    4[BANK1 ] PTR PTR void 
  3119 ;;		 -> printf@ap(2), 
  3120 ;; Auto vars:     Size  Location     Type
  3121 ;;  cfmt            2    6[BANK1 ] PTR unsigned char 
  3122 ;;		 -> STR_9(14), STR_8(13), STR_7(14), STR_6(21), 
  3123 ;;		 -> STR_5(21), STR_4(26), STR_3(24), STR_2(19), 
  3124 ;;		 -> STR_1(11), 
  3125 ;; Return value:  Size  Location     Type
  3126 ;;                  2    0[BANK1 ] int 
  3127 ;; Registers used:
  3128 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3129 ;; Tracked objects:
  3130 ;;		On entry : 0/0
  3131 ;;		On exit  : 0/0
  3132 ;;		Unchanged: 0/0
  3133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3134 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3135 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3137 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3138 ;;Total ram usage:        8 bytes
  3139 ;; Hardware stack levels used: 1
  3140 ;; Hardware stack levels required when called: 15
  3141 ;; This function calls:
  3142 ;;		_vfpfcnvrt
  3143 ;; This function is called by:
  3144 ;;		_printf
  3145 ;; This function uses a non-reentrant model
  3146 ;;
  3147                           
  3148                           	psect	text9
  3149  0056F8                     __ptext9:
  3150                           	callstack 0
  3151  0056F8                     _vfprintf:
  3152                           	callstack 12
  3153  0056F8                     
  3154                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  3155  0056F8  C1A6  F1AA         	movff	vfprintf@fmt,vfprintf@cfmt
  3156  0056FC  C1A7  F1AB         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3157  005700                     
  3158                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  3159  005700  0E00               	movlw	0
  3160  005702  0101               	movlb	1	; () banked
  3161  005704  6F29               	movwf	(_nout+1)& (0+255),b
  3162  005706  0E00               	movlw	0
  3163  005708  6F28               	movwf	_nout& (0+255),b
  3164                           
  3165                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3166  00570A  EF9E  F02B         	goto	l8967
  3167  00570E                     l8965:
  3168                           
  3169                           ; BSR set to: 1
  3170                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3171  00570E  C1A4  F0C7         	movff	vfprintf@fp,vfpfcnvrt@fp
  3172  005712  C1A5  F0C8         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3173  005716  0EAA               	movlw	low vfprintf@cfmt
  3174  005718  0100               	movlb	0	; () banked
  3175  00571A  6FC9               	movwf	vfpfcnvrt@fmt& (0+255),b
  3176  00571C  0E01               	movlw	high vfprintf@cfmt
  3177  00571E  6FCA               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  3178  005720  C1A8  F0CB         	movff	vfprintf@ap,vfpfcnvrt@ap
  3179  005724  C1A9  F0CC         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3180  005728  ECB3  F00E         	call	_vfpfcnvrt	;wreg free
  3181  00572C  0100               	movlb	0	; () banked
  3182  00572E  51C7               	movf	?_vfpfcnvrt& (0+255),w,b
  3183  005730  0101               	movlb	1	; () banked
  3184  005732  2728               	addwf	_nout& (0+255),f,b
  3185  005734  0100               	movlb	0	; () banked
  3186  005736  51C8               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  3187  005738  0101               	movlb	1	; () banked
  3188  00573A  2329               	addwfc	(_nout+1)& (0+255),f,b
  3189  00573C                     l8967:
  3190                           
  3191                           ; BSR set to: 1
  3192                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3193  00573C  0060  F6AB  FFF6   	movff	vfprintf@cfmt,tblptrl
  3194  005742  0060  F6AF  FFF7   	movff	vfprintf@cfmt+1,tblptrh
  3195  005748                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3196  005748  6AF8               	clrf	tblptru,c
  3197  00574A                     	endif
  3198  00574A                     	if	0	;tblptru may be non-zero
  3199  00574A                     	endif
  3200  00574A  0008               	tblrd		*
  3201  00574C  50F5               	movf	tablat,w,c
  3202  00574E  0900               	iorlw	0
  3203  005750  A4D8               	btfss	status,2,c
  3204  005752  EFAD  F02B         	goto	u10021
  3205  005756  EFAF  F02B         	goto	u10020
  3206  00575A                     u10021:
  3207  00575A  EF87  F02B         	goto	l8965
  3208  00575E                     u10020:
  3209  00575E                     
  3210                           ; BSR set to: 1
  3211                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  3212  00575E  C128  F1A4         	movff	_nout,?_vfprintf
  3213  005762  C129  F1A5         	movff	_nout+1,?_vfprintf+1
  3214  005766                     
  3215                           ; BSR set to: 1
  3216  005766  0012               	return		;funcret
  3217  005768                     __end_of_vfprintf:
  3218                           	callstack 0
  3219                           
  3220 ;; *************** function _vfpfcnvrt *****************
  3221 ;; Defined at:
  3222 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3223 ;; Parameters:    Size  Location     Type
  3224 ;;  fp              2  103[BANK0 ] PTR struct _IO_FILE
  3225 ;;		 -> NULL(0), 
  3226 ;;  fmt             2  105[BANK0 ] PTR PTR unsigned char 
  3227 ;;		 -> vfprintf@cfmt(2), 
  3228 ;;  ap              2  107[BANK0 ] PTR PTR void 
  3229 ;;		 -> printf@ap(2), 
  3230 ;; Auto vars:     Size  Location     Type
  3231 ;;  llu             8  121[BANK0 ] unsigned long long 
  3232 ;;  ll              8  113[BANK0 ] long long 
  3233 ;;  f               4  131[BANK0 ] long long 
  3234 ;;  ct              3  135[BANK0 ] unsigned char [3]
  3235 ;;  vp              3    0        PTR void 
  3236 ;;  cp              3    0        PTR unsigned char 
  3237 ;;  i               2    0        int 
  3238 ;;  done            2    0        int 
  3239 ;;  c               1  138[BANK0 ] unsigned char 
  3240 ;; Return value:  Size  Location     Type
  3241 ;;                  2  103[BANK0 ] int 
  3242 ;; Registers used:
  3243 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3244 ;; Tracked objects:
  3245 ;;		On entry : 0/0
  3246 ;;		On exit  : 0/0
  3247 ;;		Unchanged: 0/0
  3248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3249 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3250 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3251 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3252 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3253 ;;Total ram usage:       36 bytes
  3254 ;; Hardware stack levels used: 1
  3255 ;; Hardware stack levels required when called: 14
  3256 ;; This function calls:
  3257 ;;		_dtoa
  3258 ;;		_efgtoa
  3259 ;;		_fputc
  3260 ;;		_isupper
  3261 ;;		_strncmp
  3262 ;;		_tolower
  3263 ;;		_utoa
  3264 ;; This function is called by:
  3265 ;;		_vfprintf
  3266 ;; This function uses a non-reentrant model
  3267 ;;
  3268                           
  3269                           	psect	text10
  3270  001D66                     __ptext10:
  3271                           	callstack 0
  3272  001D66                     _vfpfcnvrt:
  3273                           	callstack 12
  3274  001D66                     
  3275                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  3276  001D66  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3277  001D6C  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3278  001D72  006F FF7B FFF6     	movff	postinc2,tblptrl
  3279  001D78  006F FF77 FFF7     	movff	postdec2,tblptrh
  3280  001D7E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3281  001D7E  6AF8               	clrf	tblptru,c
  3282  001D80                     	endif
  3283  001D80                     	if	0	;tblptru may be non-zero
  3284  001D80                     	endif
  3285  001D80  0008               	tblrd		*
  3286  001D82  50F5               	movf	tablat,w,c
  3287  001D84  0A25               	xorlw	37
  3288  001D86  A4D8               	btfss	status,2,c
  3289  001D88  EFC8  F00E         	goto	u9901
  3290  001D8C  EFCA  F00E         	goto	u9900
  3291  001D90                     u9901:
  3292  001D90  EF84  F011         	goto	l8953
  3293  001D94                     u9900:
  3294  001D94                     
  3295                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  3296  001D94  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3297  001D9A  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3298  001DA0  2ADE               	incf	postinc2,f,c
  3299  001DA2  0E00               	movlw	0
  3300  001DA4  22DD               	addwfc	postdec2,f,c
  3301  001DA6                     
  3302                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  3303  001DA6  0E00               	movlw	0
  3304  001DA8  6E3B               	movwf	(_width+1)^0,c
  3305  001DAA  0E00               	movlw	0
  3306  001DAC  6E3A               	movwf	_width^0,c
  3307  001DAE  C03A  F03E         	movff	_width,_flags
  3308  001DB2  C03B  F03F         	movff	_width+1,_flags+1
  3309  001DB6                     
  3310                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  3311  001DB6  683C               	setf	_prec^0,c
  3312  001DB8  683D               	setf	(_prec+1)^0,c
  3313  001DBA                     
  3314                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  3315  001DBA  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3316  001DC0  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3317  001DC6  006F FF7B FFF6     	movff	postinc2,tblptrl
  3318  001DCC  006F FF77 FFF7     	movff	postdec2,tblptrh
  3319  001DD2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3320  001DD2  6AF8               	clrf	tblptru,c
  3321  001DD4                     	endif
  3322  001DD4                     	if	0	;tblptru may be non-zero
  3323  001DD4                     	endif
  3324  001DD4  0008               	tblrd		*
  3325  001DD6  50F5               	movf	tablat,w,c
  3326  001DD8  6E1A               	movwf	tolower@c^0,c
  3327  001DDA  6A1B               	clrf	(tolower@c+1)^0,c
  3328  001DDC  ECE9  F02B         	call	_tolower	;wreg free
  3329  001DE0  501A               	movf	?_tolower^0,w,c
  3330  001DE2  0100               	movlb	0	; () banked
  3331  001DE4  6FE7               	movwf	vfpfcnvrt@ct& (0+255),b
  3332  001DE6                     
  3333                           ; BSR set to: 0
  3334                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  3335  001DE6  51E7               	movf	vfpfcnvrt@ct& (0+255),w,b
  3336  001DE8  B4D8               	btfsc	status,2,c
  3337  001DEA  EFF9  F00E         	goto	u9911
  3338  001DEE  EFFB  F00E         	goto	u9910
  3339  001DF2                     u9911:
  3340  001DF2  EF43  F00F         	goto	l8891
  3341  001DF6                     u9910:
  3342  001DF6                     
  3343                           ; BSR set to: 0
  3344                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  3345  001DF6  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3346  001DFC  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3347  001E02  006F FF78  F0CD    	movff	postinc2,??_vfpfcnvrt
  3348  001E08  006F FF74  F0CE    	movff	postdec2,??_vfpfcnvrt+1
  3349  001E0E  0E01               	movlw	1
  3350  001E10  27CD               	addwf	??_vfpfcnvrt& (0+255),f,b
  3351  001E12  0E00               	movlw	0
  3352  001E14  23CE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3353  001E16  0060  F337  FFF6   	movff	??_vfpfcnvrt,tblptrl
  3354  001E1C  0060  F33B  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  3355  001E22                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3356  001E22  6AF8               	clrf	tblptru,c
  3357  001E24                     	endif
  3358  001E24                     	if	0	;tblptru may be non-zero
  3359  001E24                     	endif
  3360  001E24  0008               	tblrd		*
  3361  001E26  50F5               	movf	tablat,w,c
  3362  001E28  6E1A               	movwf	tolower@c^0,c
  3363  001E2A  6A1B               	clrf	(tolower@c+1)^0,c
  3364  001E2C  ECE9  F02B         	call	_tolower	;wreg free
  3365  001E30  501A               	movf	?_tolower^0,w,c
  3366  001E32  0100               	movlb	0	; () banked
  3367  001E34  6FE8               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  3368  001E36                     
  3369                           ; BSR set to: 0
  3370                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  3371  001E36  51E8               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  3372  001E38  B4D8               	btfsc	status,2,c
  3373  001E3A  EF21  F00F         	goto	u9921
  3374  001E3E  EF23  F00F         	goto	u9920
  3375  001E42                     u9921:
  3376  001E42  EF43  F00F         	goto	l8891
  3377  001E46                     u9920:
  3378  001E46                     
  3379                           ; BSR set to: 0
  3380                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  3381  001E46  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3382  001E4C  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3383  001E52  006F FF78  F0CD    	movff	postinc2,??_vfpfcnvrt
  3384  001E58  006F FF74  F0CE    	movff	postdec2,??_vfpfcnvrt+1
  3385  001E5E  0E02               	movlw	2
  3386  001E60  27CD               	addwf	??_vfpfcnvrt& (0+255),f,b
  3387  001E62  0E00               	movlw	0
  3388  001E64  23CE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3389  001E66  0060  F337  FFF6   	movff	??_vfpfcnvrt,tblptrl
  3390  001E6C  0060  F33B  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  3391  001E72                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3392  001E72  6AF8               	clrf	tblptru,c
  3393  001E74                     	endif
  3394  001E74                     	if	0	;tblptru may be non-zero
  3395  001E74                     	endif
  3396  001E74  0008               	tblrd		*
  3397  001E76  50F5               	movf	tablat,w,c
  3398  001E78  6E1A               	movwf	tolower@c^0,c
  3399  001E7A  6A1B               	clrf	(tolower@c+1)^0,c
  3400  001E7C  ECE9  F02B         	call	_tolower	;wreg free
  3401  001E80  501A               	movf	?_tolower^0,w,c
  3402  001E82  0100               	movlb	0	; () banked
  3403  001E84  6FE9               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  3404  001E86                     l8891:
  3405                           
  3406                           ; BSR set to: 0
  3407                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3408  001E86  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3409  001E8C  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3410  001E92  006F FF7B FFF6     	movff	postinc2,tblptrl
  3411  001E98  006F FF77 FFF7     	movff	postdec2,tblptrh
  3412  001E9E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3413  001E9E  6AF8               	clrf	tblptru,c
  3414  001EA0                     	endif
  3415  001EA0                     	if	0	;tblptru may be non-zero
  3416  001EA0                     	endif
  3417  001EA0  0008               	tblrd		*
  3418  001EA2  50F5               	movf	tablat,w,c
  3419  001EA4  0A64               	xorlw	100
  3420  001EA6  B4D8               	btfsc	status,2,c
  3421  001EA8  EF58  F00F         	goto	u9931
  3422  001EAC  EF5A  F00F         	goto	u9930
  3423  001EB0                     u9931:
  3424  001EB0  EF71  F00F         	goto	l8895
  3425  001EB4                     u9930:
  3426  001EB4                     
  3427                           ; BSR set to: 0
  3428  001EB4  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3429  001EBA  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3430  001EC0  006F FF7B FFF6     	movff	postinc2,tblptrl
  3431  001EC6  006F FF77 FFF7     	movff	postdec2,tblptrh
  3432  001ECC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3433  001ECC  6AF8               	clrf	tblptru,c
  3434  001ECE                     	endif
  3435  001ECE                     	if	0	;tblptru may be non-zero
  3436  001ECE                     	endif
  3437  001ECE  0008               	tblrd		*
  3438  001ED0  50F5               	movf	tablat,w,c
  3439  001ED2  0A69               	xorlw	105
  3440  001ED4  A4D8               	btfss	status,2,c
  3441  001ED6  EF6F  F00F         	goto	u9941
  3442  001EDA  EF71  F00F         	goto	u9940
  3443  001EDE                     u9941:
  3444  001EDE  EFBB  F00F         	goto	l8901
  3445  001EE2                     u9940:
  3446  001EE2                     l8895:
  3447                           
  3448                           ; BSR set to: 0
  3449                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  3450  001EE2  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3451  001EE8  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3452  001EEE  2ADE               	incf	postinc2,f,c
  3453  001EF0  0E00               	movlw	0
  3454  001EF2  22DD               	addwfc	postdec2,f,c
  3455                           
  3456                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3457  001EF4  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3458  001EFA  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3459  001F00  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  3460  001F06  0E02               	movlw	2
  3461  001F08  26DE               	addwf	postinc2,f,c
  3462  001F0A  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  3463  001F10  0E00               	movlw	0
  3464  001F12  22DD               	addwfc	postdec2,f,c
  3465  001F14  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3466  001F1A  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3467  001F20  006F FF78  F0D1    	movff	postinc2,vfpfcnvrt@ll
  3468  001F26  006F FF74  F0D2    	movff	postdec2,vfpfcnvrt@ll+1
  3469  001F2C  0E00               	movlw	0
  3470  001F2E  BFD2               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  3471  001F30  0EFF               	movlw	-1
  3472  001F32  6FD3               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  3473  001F34  6FD4               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  3474  001F36  6FD5               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  3475  001F38  6FD6               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  3476  001F3A  6FD7               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  3477  001F3C  6FD8               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  3478  001F3E                     
  3479                           ; BSR set to: 0
  3480                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  3481  001F3E  C0C7  F060         	movff	vfpfcnvrt@fp,dtoa@fp
  3482  001F42  C0C8  F061         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3483  001F46  C0D1  F062         	movff	vfpfcnvrt@ll,dtoa@d
  3484  001F4A  C0D2  F063         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3485  001F4E  C0D3  F064         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3486  001F52  C0D4  F065         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3487  001F56  C0D5  F066         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3488  001F5A  C0D6  F067         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3489  001F5E  C0D7  F068         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3490  001F62  C0D8  F069         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3491  001F66  ECFE  F017         	call	_dtoa	;wreg free
  3492  001F6A  C060  F0C7         	movff	?_dtoa,?_vfpfcnvrt
  3493  001F6E  C061  F0C8         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3494  001F72  EFA6  F011         	goto	l2262
  3495  001F76                     l8901:
  3496                           
  3497                           ; BSR set to: 0
  3498                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  3499  001F76  0E66               	movlw	102
  3500  001F78  19E7               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  3501  001F7A  A4D8               	btfss	status,2,c
  3502  001F7C  EFC2  F00F         	goto	u9951
  3503  001F80  EFC4  F00F         	goto	u9950
  3504  001F84                     u9951:
  3505  001F84  EF16  F010         	goto	l8913
  3506  001F88                     u9950:
  3507  001F88                     
  3508                           ; BSR set to: 0
  3509                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  3510  001F88  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3511  001F8E  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3512  001F94  006F FF7B FFF6     	movff	postinc2,tblptrl
  3513  001F9A  006F FF77 FFF7     	movff	postdec2,tblptrh
  3514  001FA0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3515  001FA0  6AF8               	clrf	tblptru,c
  3516  001FA2                     	endif
  3517  001FA2                     	if	0	;tblptru may be non-zero
  3518  001FA2                     	endif
  3519  001FA2  0008               	tblrd		*
  3520  001FA4  006F FFD4  F0EA    	movff	tablat,vfpfcnvrt@c
  3521  001FAA                     
  3522                           ; BSR set to: 0
  3523                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  3524  001FAA  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3525  001FB0  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3526  001FB6  2ADE               	incf	postinc2,f,c
  3527  001FB8  0E00               	movlw	0
  3528  001FBA  22DD               	addwfc	postdec2,f,c
  3529  001FBC                     
  3530                           ; BSR set to: 0
  3531                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3532  001FBC  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3533  001FC2  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3534  001FC8  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  3535  001FCE  0E04               	movlw	4
  3536  001FD0  26DE               	addwf	postinc2,f,c
  3537  001FD2  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  3538  001FD8  0E00               	movlw	0
  3539  001FDA  22DD               	addwfc	postdec2,f,c
  3540  001FDC  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3541  001FE2  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3542  001FE8  006F FF78  F0E3    	movff	postinc2,vfpfcnvrt@f
  3543  001FEE  006F FF78  F0E4    	movff	postinc2,vfpfcnvrt@f+1
  3544  001FF4  006F FF78  F0E5    	movff	postinc2,vfpfcnvrt@f+2
  3545  001FFA  006F FF78  F0E6    	movff	postinc2,vfpfcnvrt@f+3
  3546  002000                     
  3547                           ; BSR set to: 0
  3548                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  3549  002000  C0C7  F083         	movff	vfpfcnvrt@fp,efgtoa@fp
  3550  002004  C0C8  F084         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3551  002008  C0E3  F085         	movff	vfpfcnvrt@f,efgtoa@f
  3552  00200C  C0E4  F086         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3553  002010  C0E5  F087         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3554  002014  C0E6  F088         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3555  002018  C0EA  F089         	movff	vfpfcnvrt@c,efgtoa@c
  3556  00201C  EC5C  F008         	call	_efgtoa	;wreg free
  3557  002020  C083  F0C7         	movff	?_efgtoa,?_vfpfcnvrt
  3558  002024  C084  F0C8         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3559  002028  EFA6  F011         	goto	l2262
  3560  00202C                     l8913:
  3561                           
  3562                           ; BSR set to: 0
  3563                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3564  00202C  0EE7               	movlw	low vfpfcnvrt@ct
  3565  00202E  6E14               	movwf	strncmp@_l^0,c
  3566  002030  0E00               	movlw	high vfpfcnvrt@ct
  3567  002032  6E15               	movwf	(strncmp@_l+1)^0,c
  3568  002034  0EB4               	movlw	low STR_18
  3569  002036  6E16               	movwf	strncmp@_r^0,c
  3570  002038  0E10               	movlw	high STR_18
  3571  00203A  6E17               	movwf	(strncmp@_r+1)^0,c
  3572  00203C  0E00               	movlw	0
  3573  00203E  6E19               	movwf	(strncmp@n+1)^0,c
  3574  002040  0E02               	movlw	2
  3575  002042  6E18               	movwf	strncmp@n^0,c
  3576  002044  EC9D  F025         	call	_strncmp	;wreg free
  3577  002048  5014               	movf	?_strncmp^0,w,c
  3578  00204A  1015               	iorwf	(?_strncmp+1)^0,w,c
  3579  00204C  A4D8               	btfss	status,2,c
  3580  00204E  EF2B  F010         	goto	u9961
  3581  002052  EF2D  F010         	goto	u9960
  3582  002056                     u9961:
  3583  002056  EFE0  F010         	goto	l8929
  3584  00205A                     u9960:
  3585  00205A                     
  3586                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  3587  00205A  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3588  002060  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3589  002066  006F FF78  F0CD    	movff	postinc2,??_vfpfcnvrt
  3590  00206C  006F FF74  F0CE    	movff	postdec2,??_vfpfcnvrt+1
  3591  002072  0E01               	movlw	1
  3592  002074  0100               	movlb	0	; () banked
  3593  002076  27CD               	addwf	??_vfpfcnvrt& (0+255),f,b
  3594  002078  0E00               	movlw	0
  3595  00207A  23CE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3596  00207C  0060  F337  FFF6   	movff	??_vfpfcnvrt,tblptrl
  3597  002082  0060  F33B  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  3598  002088                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3599  002088  6AF8               	clrf	tblptru,c
  3600  00208A                     	endif
  3601  00208A                     	if	0	;tblptru may be non-zero
  3602  00208A                     	endif
  3603  00208A  0008               	tblrd		*
  3604  00208C  006F FFD4  F0EA    	movff	tablat,vfpfcnvrt@c
  3605  002092  0EBF               	movlw	191
  3606  002094  6FCD               	movwf	??_vfpfcnvrt& (0+255),b
  3607  002096  0EFF               	movlw	255
  3608  002098  6FCE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3609  00209A  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3610  0020A0  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3611  0020A6  006F FF7B FFF6     	movff	postinc2,tblptrl
  3612  0020AC  006F FF77 FFF7     	movff	postdec2,tblptrh
  3613  0020B2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3614  0020B2  6AF8               	clrf	tblptru,c
  3615  0020B4                     	endif
  3616  0020B4                     	if	0	;tblptru may be non-zero
  3617  0020B4                     	endif
  3618  0020B4  0008               	tblrd		*
  3619  0020B6  50F5               	movf	tablat,w,c
  3620  0020B8  6FCF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3621  0020BA  6BD0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  3622  0020BC  51CD               	movf	??_vfpfcnvrt& (0+255),w,b
  3623  0020BE  27CF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  3624  0020C0  51CE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3625  0020C2  23D0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  3626  0020C4  51D0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3627  0020C6  E10A               	bnz	u9970
  3628  0020C8  0E1A               	movlw	26
  3629  0020CA  5DCF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  3630  0020CC  A0D8               	btfss	status,0,c
  3631  0020CE  EF6B  F010         	goto	u9971
  3632  0020D2  EF6E  F010         	goto	u9970
  3633  0020D6                     u9971:
  3634  0020D6  0E01               	movlw	1
  3635  0020D8  EF6F  F010         	goto	u9980
  3636  0020DC                     u9970:
  3637  0020DC  0E00               	movlw	0
  3638  0020DE                     u9980:
  3639  0020DE  6FE1               	movwf	_vfpfcnvrt$3599& (0+255),b
  3640  0020E0  6BE2               	clrf	(_vfpfcnvrt$3599+1)& (0+255),b
  3641  0020E2                     
  3642                           ; BSR set to: 0
  3643  0020E2  51E1               	movf	_vfpfcnvrt$3599& (0+255),w,b
  3644  0020E4  11E2               	iorwf	(_vfpfcnvrt$3599+1)& (0+255),w,b
  3645  0020E6  B4D8               	btfsc	status,2,c
  3646  0020E8  EF78  F010         	goto	u9991
  3647  0020EC  EF7A  F010         	goto	u9990
  3648  0020F0                     u9991:
  3649  0020F0  EF9E  F010         	goto	l8923
  3650  0020F4                     u9990:
  3651  0020F4                     
  3652                           ; BSR set to: 0
  3653                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3654  0020F4  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3655  0020FA  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3656  002100  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  3657  002106  0E04               	movlw	4
  3658  002108  26DE               	addwf	postinc2,f,c
  3659  00210A  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  3660  002110  0E00               	movlw	0
  3661  002112  22DD               	addwfc	postdec2,f,c
  3662  002114  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3663  00211A  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3664  002120  006F FF78  F0E3    	movff	postinc2,vfpfcnvrt@f
  3665  002126  006F FF78  F0E4    	movff	postinc2,vfpfcnvrt@f+1
  3666  00212C  006F FF78  F0E5    	movff	postinc2,vfpfcnvrt@f+2
  3667  002132  006F FF78  F0E6    	movff	postinc2,vfpfcnvrt@f+3
  3668                           
  3669                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  3670  002138  EFC0  F010         	goto	l2270
  3671  00213C                     l8923:
  3672                           
  3673                           ; BSR set to: 0
  3674                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3675  00213C  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3676  002142  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3677  002148  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  3678  00214E  0E04               	movlw	4
  3679  002150  26DE               	addwf	postinc2,f,c
  3680  002152  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  3681  002158  0E00               	movlw	0
  3682  00215A  22DD               	addwfc	postdec2,f,c
  3683  00215C  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3684  002162  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3685  002168  006F FF78  F0E3    	movff	postinc2,vfpfcnvrt@f
  3686  00216E  006F FF78  F0E4    	movff	postinc2,vfpfcnvrt@f+1
  3687  002174  006F FF78  F0E5    	movff	postinc2,vfpfcnvrt@f+2
  3688  00217A  006F FF78  F0E6    	movff	postinc2,vfpfcnvrt@f+3
  3689  002180                     l2270:
  3690                           
  3691                           ; BSR set to: 0
  3692                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  3693  002180  0E02               	movlw	2
  3694  002182  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3695  002188  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3696  00218E  26DE               	addwf	postinc2,f,c
  3697  002190  0E00               	movlw	0
  3698  002192  22DD               	addwfc	postdec2,f,c
  3699  002194                     
  3700                           ; BSR set to: 0
  3701                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 960:             
      +                          return efgtoa(fp, f, c);
  3702  002194  C0C7  F083         	movff	vfpfcnvrt@fp,efgtoa@fp
  3703  002198  C0C8  F084         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3704  00219C  C0E3  F085         	movff	vfpfcnvrt@f,efgtoa@f
  3705  0021A0  C0E4  F086         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3706  0021A4  C0E5  F087         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3707  0021A8  C0E6  F088         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3708  0021AC  C0EA  F089         	movff	vfpfcnvrt@c,efgtoa@c
  3709  0021B0  EC5C  F008         	call	_efgtoa	;wreg free
  3710  0021B4  C083  F0C7         	movff	?_efgtoa,?_vfpfcnvrt
  3711  0021B8  C084  F0C8         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3712  0021BC  EFA6  F011         	goto	l2262
  3713  0021C0                     l8929:
  3714                           
  3715                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1204:         if 
      +                          (*fmt[0] == 'u') {
  3716  0021C0  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3717  0021C6  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3718  0021CC  006F FF7B FFF6     	movff	postinc2,tblptrl
  3719  0021D2  006F FF77 FFF7     	movff	postdec2,tblptrh
  3720  0021D8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3721  0021D8  6AF8               	clrf	tblptru,c
  3722  0021DA                     	endif
  3723  0021DA                     	if	0	;tblptru may be non-zero
  3724  0021DA                     	endif
  3725  0021DA  0008               	tblrd		*
  3726  0021DC  50F5               	movf	tablat,w,c
  3727  0021DE  0A75               	xorlw	117
  3728  0021E0  A4D8               	btfss	status,2,c
  3729  0021E2  EFF5  F010         	goto	u10001
  3730  0021E6  EFF7  F010         	goto	u10000
  3731  0021EA                     u10001:
  3732  0021EA  EF43  F011         	goto	l8937
  3733  0021EE                     u10000:
  3734  0021EE                     
  3735                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1206:            
      +                           ++*fmt;
  3736  0021EE  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3737  0021F4  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3738  0021FA  2ADE               	incf	postinc2,f,c
  3739  0021FC  0E00               	movlw	0
  3740  0021FE  22DD               	addwfc	postdec2,f,c
  3741                           
  3742                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1207:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  3743  002200  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3744  002206  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3745  00220C  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  3746  002212  0E02               	movlw	2
  3747  002214  26DE               	addwf	postinc2,f,c
  3748  002216  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  3749  00221C  0E00               	movlw	0
  3750  00221E  22DD               	addwfc	postdec2,f,c
  3751  002220  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3752  002226  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3753  00222C  006F FF78  F0CF    	movff	postinc2,??_vfpfcnvrt+2
  3754  002232  006F FF74  F0D0    	movff	postdec2,??_vfpfcnvrt+3
  3755  002238  C0CF  F0D9         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3756  00223C  C0D0  F0DA         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3757  002240  0100               	movlb	0	; () banked
  3758  002242  6BDB               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  3759  002244  6BDC               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  3760  002246  6BDD               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3761  002248  6BDE               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3762  00224A  6BDF               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3763  00224C  6BE0               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3764  00224E                     
  3765                           ; BSR set to: 0
  3766                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1209:            
      +                           return utoa(fp, llu);
  3767  00224E  C0C7  F060         	movff	vfpfcnvrt@fp,utoa@fp
  3768  002252  C0C8  F061         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  3769  002256  C0D9  F062         	movff	vfpfcnvrt@llu,utoa@d
  3770  00225A  C0DA  F063         	movff	vfpfcnvrt@llu+1,utoa@d+1
  3771  00225E  C0DB  F064         	movff	vfpfcnvrt@llu+2,utoa@d+2
  3772  002262  C0DC  F065         	movff	vfpfcnvrt@llu+3,utoa@d+3
  3773  002266  C0DD  F066         	movff	vfpfcnvrt@llu+4,utoa@d+4
  3774  00226A  C0DE  F067         	movff	vfpfcnvrt@llu+5,utoa@d+5
  3775  00226E  C0DF  F068         	movff	vfpfcnvrt@llu+6,utoa@d+6
  3776  002272  C0E0  F069         	movff	vfpfcnvrt@llu+7,utoa@d+7
  3777  002276  EC9B  F01B         	call	_utoa	;wreg free
  3778  00227A  C060  F0C7         	movff	?_utoa,?_vfpfcnvrt
  3779  00227E  C061  F0C8         	movff	?_utoa+1,?_vfpfcnvrt+1
  3780  002282  EFA6  F011         	goto	l2262
  3781  002286                     l8937:
  3782                           
  3783                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3784  002286  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3785  00228C  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3786  002292  006F FF7B FFF6     	movff	postinc2,tblptrl
  3787  002298  006F FF77 FFF7     	movff	postdec2,tblptrh
  3788  00229E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3789  00229E  6AF8               	clrf	tblptru,c
  3790  0022A0                     	endif
  3791  0022A0                     	if	0	;tblptru may be non-zero
  3792  0022A0                     	endif
  3793  0022A0  0008               	tblrd		*
  3794  0022A2  50F5               	movf	tablat,w,c
  3795  0022A4  0A25               	xorlw	37
  3796  0022A6  A4D8               	btfss	status,2,c
  3797  0022A8  EF58  F011         	goto	u10011
  3798  0022AC  EF5A  F011         	goto	u10010
  3799  0022B0                     u10011:
  3800  0022B0  EF74  F011         	goto	l8947
  3801  0022B4                     u10010:
  3802  0022B4                     
  3803                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3804  0022B4  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3805  0022BA  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3806  0022C0  2ADE               	incf	postinc2,f,c
  3807  0022C2  0E00               	movlw	0
  3808  0022C4  22DD               	addwfc	postdec2,f,c
  3809  0022C6                     
  3810                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3811  0022C6  0E00               	movlw	0
  3812  0022C8  6E17               	movwf	(fputc@c+1)^0,c
  3813  0022CA  0E25               	movlw	37
  3814  0022CC  6E16               	movwf	fputc@c^0,c
  3815  0022CE  C0C7  F018         	movff	vfpfcnvrt@fp,fputc@fp
  3816  0022D2  C0C8  F019         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3817  0022D6  EC9E  F02A         	call	_fputc	;wreg free
  3818  0022DA                     l8943:
  3819                           
  3820                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3821  0022DA  0E00               	movlw	0
  3822  0022DC  0100               	movlb	0	; () banked
  3823  0022DE  6FC8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3824  0022E0  0E01               	movlw	1
  3825  0022E2  6FC7               	movwf	?_vfpfcnvrt& (0+255),b
  3826  0022E4  EFA6  F011         	goto	l2262
  3827  0022E8                     l8947:
  3828                           
  3829                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3830  0022E8  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3831  0022EE  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3832  0022F4  2ADE               	incf	postinc2,f,c
  3833  0022F6  0E00               	movlw	0
  3834  0022F8  22DD               	addwfc	postdec2,f,c
  3835  0022FA                     
  3836                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3837  0022FA  0E00               	movlw	0
  3838  0022FC  0100               	movlb	0	; () banked
  3839  0022FE  6FC8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3840  002300  0E00               	movlw	0
  3841  002302  6FC7               	movwf	?_vfpfcnvrt& (0+255),b
  3842  002304  EFA6  F011         	goto	l2262
  3843  002308                     l8953:
  3844                           
  3845                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3846  002308  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3847  00230E  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3848  002314  006F FF7B FFF6     	movff	postinc2,tblptrl
  3849  00231A  006F FF77 FFF7     	movff	postdec2,tblptrh
  3850  002320                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3851  002320  6AF8               	clrf	tblptru,c
  3852  002322                     	endif
  3853  002322                     	if	0	;tblptru may be non-zero
  3854  002322                     	endif
  3855  002322  0008               	tblrd		*
  3856  002324  50F5               	movf	tablat,w,c
  3857  002326  6E16               	movwf	fputc@c^0,c
  3858  002328  6A17               	clrf	(fputc@c+1)^0,c
  3859  00232A  C0C7  F018         	movff	vfpfcnvrt@fp,fputc@fp
  3860  00232E  C0C8  F019         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3861  002332  EC9E  F02A         	call	_fputc	;wreg free
  3862  002336                     
  3863                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3864  002336  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3865  00233C  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3866  002342  2ADE               	incf	postinc2,f,c
  3867  002344  0E00               	movlw	0
  3868  002346  22DD               	addwfc	postdec2,f,c
  3869  002348  EF6D  F011         	goto	l8943
  3870  00234C                     l2262:
  3871  00234C  0012               	return		;funcret
  3872  00234E                     __end_of_vfpfcnvrt:
  3873                           	callstack 0
  3874                           
  3875 ;; *************** function _utoa *****************
  3876 ;; Defined at:
  3877 ;;		line 615 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3878 ;; Parameters:    Size  Location     Type
  3879 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  3880 ;;		 -> NULL(0), 
  3881 ;;  d               8    2[BANK0 ] unsigned long long 
  3882 ;; Auto vars:     Size  Location     Type
  3883 ;;  n               8   14[BANK0 ] unsigned long long 
  3884 ;;  i               2   22[BANK0 ] int 
  3885 ;;  w               2   12[BANK0 ] int 
  3886 ;;  p               2   10[BANK0 ] int 
  3887 ;; Return value:  Size  Location     Type
  3888 ;;                  2    0[BANK0 ] int 
  3889 ;; Registers used:
  3890 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3891 ;; Tracked objects:
  3892 ;;		On entry : 0/0
  3893 ;;		On exit  : 0/0
  3894 ;;		Unchanged: 0/0
  3895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3896 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3897 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3898 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3899 ;;      Totals:         8      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3900 ;;Total ram usage:       32 bytes
  3901 ;; Hardware stack levels used: 1
  3902 ;; Hardware stack levels required when called: 13
  3903 ;; This function calls:
  3904 ;;		___lodiv
  3905 ;;		___lomod
  3906 ;;		_pad
  3907 ;; This function is called by:
  3908 ;;		_vfpfcnvrt
  3909 ;; This function uses a non-reentrant model
  3910 ;;
  3911                           
  3912                           	psect	text11
  3913  003736                     __ptext11:
  3914                           	callstack 0
  3915  003736                     _utoa:
  3916                           	callstack 12
  3917  003736                     
  3918                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 615: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99
      +                          \common\doprnt.c: 616: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\dop
      +                          rnt.c: 617:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common
      +                          \doprnt.c: 618:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sourc
      +                          es\c99\common\doprnt.c: 621:     if (!(prec < 0)) {
  3919  003736  BE3D               	btfsc	(_prec+1)^0,7,c
  3920  003738  EFA0  F01B         	goto	u9781
  3921  00373C  EFA2  F01B         	goto	u9780
  3922  003740                     u9781:
  3923  003740  EFA3  F01B         	goto	l8821
  3924  003744                     u9780:
  3925  003744                     
  3926                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 622:         flag
      +                          s &= ~(1 << 1);
  3927  003744  923E               	bcf	_flags^0,1,c
  3928  003746                     l8821:
  3929                           
  3930                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 624:     p = (0 <
      +                           prec) ? prec : 1;
  3931  003746  BE3D               	btfsc	(_prec+1)^0,7,c
  3932  003748  EFB0  F01B         	goto	u9790
  3933  00374C  503D               	movf	(_prec+1)^0,w,c
  3934  00374E  E106               	bnz	u9791
  3935  003750  043C               	decf	_prec^0,w,c
  3936  003752  B0D8               	btfsc	status,0,c
  3937  003754  EFAE  F01B         	goto	u9791
  3938  003758  EFB0  F01B         	goto	u9790
  3939  00375C                     u9791:
  3940  00375C  EFB7  F01B         	goto	l2243
  3941  003760                     u9790:
  3942  003760  0E00               	movlw	0
  3943  003762  0100               	movlb	0	; () banked
  3944  003764  6F6B               	movwf	(utoa@p+1)& (0+255),b
  3945  003766  0E01               	movlw	1
  3946  003768  6F6A               	movwf	utoa@p& (0+255),b
  3947  00376A  EFBB  F01B         	goto	l2245
  3948  00376E                     l2243:
  3949  00376E  C03C  F06A         	movff	_prec,utoa@p
  3950  003772  C03D  F06B         	movff	_prec+1,utoa@p+1
  3951  003776                     l2245:
  3952                           
  3953                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 625:     w = widt
      +                          h;
  3954  003776  C03A  F06C         	movff	_width,utoa@w
  3955  00377A  C03B  F06D         	movff	_width+1,utoa@w+1
  3956                           
  3957                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 628:     n = d;
  3958  00377E  C062  F06E         	movff	utoa@d,utoa@n
  3959  003782  C063  F06F         	movff	utoa@d+1,utoa@n+1
  3960  003786  C064  F070         	movff	utoa@d+2,utoa@n+2
  3961  00378A  C065  F071         	movff	utoa@d+3,utoa@n+3
  3962  00378E  C066  F072         	movff	utoa@d+4,utoa@n+4
  3963  003792  C067  F073         	movff	utoa@d+5,utoa@n+5
  3964  003796  C068  F074         	movff	utoa@d+6,utoa@n+6
  3965  00379A  C069  F075         	movff	utoa@d+7,utoa@n+7
  3966  00379E                     
  3967                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 629:     i = size
      +                          of(dbuf) - 1;
  3968  00379E  0E00               	movlw	0
  3969  0037A0  0100               	movlb	0	; () banked
  3970  0037A2  6F77               	movwf	(utoa@i+1)& (0+255),b
  3971  0037A4  0E4F               	movlw	79
  3972  0037A6  6F76               	movwf	utoa@i& (0+255),b
  3973  0037A8                     
  3974                           ; BSR set to: 0
  3975                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 630:     dbuf[i] 
      +                          = '\0';
  3976  0037A8  0E00               	movlw	0
  3977  0037AA  0101               	movlb	1	; () banked
  3978  0037AC  6F8D               	movwf	(_dbuf+79)& (0+255),b
  3979                           
  3980                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3981  0037AE  EF50  F01C         	goto	l8839
  3982  0037B2                     l8829:
  3983                           
  3984                           ; BSR set to: 0
  3985                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 632:         --i;
  3986  0037B2  0776               	decf	utoa@i& (0+255),f,b
  3987  0037B4  A0D8               	btfss	status,0,c
  3988  0037B6  0777               	decf	(utoa@i+1)& (0+255),f,b
  3989  0037B8                     
  3990                           ; BSR set to: 0
  3991                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 633:         dbuf
      +                          [i] = '0' + (n % 10);
  3992  0037B8  0E3E               	movlw	low _dbuf
  3993  0037BA  2576               	addwf	utoa@i& (0+255),w,b
  3994  0037BC  6ED9               	movwf	fsr2l,c
  3995  0037BE  0E01               	movlw	high _dbuf
  3996  0037C0  2177               	addwfc	(utoa@i+1)& (0+255),w,b
  3997  0037C2  6EDA               	movwf	fsr2h,c
  3998  0037C4  C06E  F014         	movff	utoa@n,___lomod@dividend
  3999  0037C8  C06F  F015         	movff	utoa@n+1,___lomod@dividend+1
  4000  0037CC  C070  F016         	movff	utoa@n+2,___lomod@dividend+2
  4001  0037D0  C071  F017         	movff	utoa@n+3,___lomod@dividend+3
  4002  0037D4  C072  F018         	movff	utoa@n+4,___lomod@dividend+4
  4003  0037D8  C073  F019         	movff	utoa@n+5,___lomod@dividend+5
  4004  0037DC  C074  F01A         	movff	utoa@n+6,___lomod@dividend+6
  4005  0037E0  C075  F01B         	movff	utoa@n+7,___lomod@dividend+7
  4006  0037E4  0E0A               	movlw	10
  4007  0037E6  6E1C               	movwf	___lomod@divisor^0,c
  4008  0037E8  0E00               	movlw	0
  4009  0037EA  6E1D               	movwf	(___lomod@divisor+1)^0,c
  4010  0037EC  0E00               	movlw	0
  4011  0037EE  6E1E               	movwf	(___lomod@divisor+2)^0,c
  4012  0037F0  0E00               	movlw	0
  4013  0037F2  6E1F               	movwf	(___lomod@divisor+3)^0,c
  4014  0037F4  0E00               	movlw	0
  4015  0037F6  6E20               	movwf	(___lomod@divisor+4)^0,c
  4016  0037F8  0E00               	movlw	0
  4017  0037FA  6E21               	movwf	(___lomod@divisor+5)^0,c
  4018  0037FC  0E00               	movlw	0
  4019  0037FE  6E22               	movwf	(___lomod@divisor+6)^0,c
  4020  003800  0E00               	movlw	0
  4021  003802  6E23               	movwf	(___lomod@divisor+7)^0,c
  4022  003804  EC00  F027         	call	___lomod	;wreg free
  4023  003808  C014  F031         	movff	?___lomod,??_utoa
  4024  00380C  C015  F032         	movff	?___lomod+1,??_utoa+1
  4025  003810  C016  F033         	movff	?___lomod+2,??_utoa+2
  4026  003814  C017  F034         	movff	?___lomod+3,??_utoa+3
  4027  003818  C018  F035         	movff	?___lomod+4,??_utoa+4
  4028  00381C  C019  F036         	movff	?___lomod+5,??_utoa+5
  4029  003820  C01A  F037         	movff	?___lomod+6,??_utoa+6
  4030  003824  C01B  F038         	movff	?___lomod+7,??_utoa+7
  4031  003828  5031               	movf	??_utoa^0,w,c
  4032  00382A  0F30               	addlw	48
  4033  00382C  6EDF               	movwf	indf2,c
  4034  00382E                     
  4035                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 634:         --p;
  4036  00382E  0100               	movlb	0	; () banked
  4037  003830  076A               	decf	utoa@p& (0+255),f,b
  4038  003832  A0D8               	btfss	status,0,c
  4039  003834  076B               	decf	(utoa@p+1)& (0+255),f,b
  4040  003836                     
  4041                           ; BSR set to: 0
  4042                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 635:         --w;
  4043  003836  076C               	decf	utoa@w& (0+255),f,b
  4044  003838  A0D8               	btfss	status,0,c
  4045  00383A  076D               	decf	(utoa@w+1)& (0+255),f,b
  4046  00383C                     
  4047                           ; BSR set to: 0
  4048                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 636:         n = 
      +                          n / 10;
  4049  00383C  C06E  F014         	movff	utoa@n,___lodiv@dividend
  4050  003840  C06F  F015         	movff	utoa@n+1,___lodiv@dividend+1
  4051  003844  C070  F016         	movff	utoa@n+2,___lodiv@dividend+2
  4052  003848  C071  F017         	movff	utoa@n+3,___lodiv@dividend+3
  4053  00384C  C072  F018         	movff	utoa@n+4,___lodiv@dividend+4
  4054  003850  C073  F019         	movff	utoa@n+5,___lodiv@dividend+5
  4055  003854  C074  F01A         	movff	utoa@n+6,___lodiv@dividend+6
  4056  003858  C075  F01B         	movff	utoa@n+7,___lodiv@dividend+7
  4057  00385C  0E0A               	movlw	10
  4058  00385E  6E1C               	movwf	___lodiv@divisor^0,c
  4059  003860  0E00               	movlw	0
  4060  003862  6E1D               	movwf	(___lodiv@divisor+1)^0,c
  4061  003864  0E00               	movlw	0
  4062  003866  6E1E               	movwf	(___lodiv@divisor+2)^0,c
  4063  003868  0E00               	movlw	0
  4064  00386A  6E1F               	movwf	(___lodiv@divisor+3)^0,c
  4065  00386C  0E00               	movlw	0
  4066  00386E  6E20               	movwf	(___lodiv@divisor+4)^0,c
  4067  003870  0E00               	movlw	0
  4068  003872  6E21               	movwf	(___lodiv@divisor+5)^0,c
  4069  003874  0E00               	movlw	0
  4070  003876  6E22               	movwf	(___lodiv@divisor+6)^0,c
  4071  003878  0E00               	movlw	0
  4072  00387A  6E23               	movwf	(___lodiv@divisor+7)^0,c
  4073  00387C  EC17  F026         	call	___lodiv	;wreg free
  4074  003880  C014  F06E         	movff	?___lodiv,utoa@n
  4075  003884  C015  F06F         	movff	?___lodiv+1,utoa@n+1
  4076  003888  C016  F070         	movff	?___lodiv+2,utoa@n+2
  4077  00388C  C017  F071         	movff	?___lodiv+3,utoa@n+3
  4078  003890  C018  F072         	movff	?___lodiv+4,utoa@n+4
  4079  003894  C019  F073         	movff	?___lodiv+5,utoa@n+5
  4080  003898  C01A  F074         	movff	?___lodiv+6,utoa@n+6
  4081  00389C  C01B  F075         	movff	?___lodiv+7,utoa@n+7
  4082  0038A0                     l8839:
  4083                           
  4084                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4085  0038A0  0100               	movlb	0	; () banked
  4086  0038A2  5176               	movf	utoa@i& (0+255),w,b
  4087  0038A4  1177               	iorwf	(utoa@i+1)& (0+255),w,b
  4088  0038A6  B4D8               	btfsc	status,2,c
  4089  0038A8  EF58  F01C         	goto	u9801
  4090  0038AC  EF5A  F01C         	goto	u9800
  4091  0038B0                     u9801:
  4092  0038B0  EF8A  F01C         	goto	l8849
  4093  0038B4                     u9800:
  4094  0038B4                     
  4095                           ; BSR set to: 0
  4096  0038B4  516E               	movf	utoa@n& (0+255),w,b
  4097  0038B6  116F               	iorwf	(utoa@n+1)& (0+255),w,b
  4098  0038B8  1170               	iorwf	(utoa@n+2)& (0+255),w,b
  4099  0038BA  1171               	iorwf	(utoa@n+3)& (0+255),w,b
  4100  0038BC  1172               	iorwf	(utoa@n+4)& (0+255),w,b
  4101  0038BE  1173               	iorwf	(utoa@n+5)& (0+255),w,b
  4102  0038C0  1174               	iorwf	(utoa@n+6)& (0+255),w,b
  4103  0038C2  1175               	iorwf	(utoa@n+7)& (0+255),w,b
  4104  0038C4  A4D8               	btfss	status,2,c
  4105  0038C6  EF67  F01C         	goto	u9811
  4106  0038CA  EF69  F01C         	goto	u9810
  4107  0038CE                     u9811:
  4108  0038CE  EFD9  F01B         	goto	l8829
  4109  0038D2                     u9810:
  4110  0038D2                     
  4111                           ; BSR set to: 0
  4112  0038D2  BF6B               	btfsc	(utoa@p+1)& (0+255),7,b
  4113  0038D4  EF76  F01C         	goto	u9820
  4114  0038D8  516B               	movf	(utoa@p+1)& (0+255),w,b
  4115  0038DA  E106               	bnz	u9821
  4116  0038DC  056A               	decf	utoa@p& (0+255),w,b
  4117  0038DE  B0D8               	btfsc	status,0,c
  4118  0038E0  EF74  F01C         	goto	u9821
  4119  0038E4  EF76  F01C         	goto	u9820
  4120  0038E8                     u9821:
  4121  0038E8  EFD9  F01B         	goto	l8829
  4122  0038EC                     u9820:
  4123  0038EC                     
  4124                           ; BSR set to: 0
  4125  0038EC  BF6D               	btfsc	(utoa@w+1)& (0+255),7,b
  4126  0038EE  EF81  F01C         	goto	u9831
  4127  0038F2  516D               	movf	(utoa@w+1)& (0+255),w,b
  4128  0038F4  E108               	bnz	u9830
  4129  0038F6  056C               	decf	utoa@w& (0+255),w,b
  4130  0038F8  A0D8               	btfss	status,0,c
  4131  0038FA  EF81  F01C         	goto	u9831
  4132  0038FE  EF83  F01C         	goto	u9830
  4133  003902                     u9831:
  4134  003902  EF8A  F01C         	goto	l8849
  4135  003906                     u9830:
  4136  003906                     
  4137                           ; BSR set to: 0
  4138  003906  B23E               	btfsc	_flags^0,1,c
  4139  003908  EF88  F01C         	goto	u9841
  4140  00390C  EF8A  F01C         	goto	u9840
  4141  003910                     u9841:
  4142  003910  EFD9  F01B         	goto	l8829
  4143  003914                     u9840:
  4144  003914                     l8849:
  4145                           
  4146                           ; BSR set to: 0
  4147                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 640:     return p
      +                          ad(fp, &dbuf[i], w);
  4148  003914  C060  F026         	movff	utoa@fp,pad@fp
  4149  003918  C061  F027         	movff	utoa@fp+1,pad@fp+1
  4150  00391C  0E3E               	movlw	low _dbuf
  4151  00391E  2576               	addwf	utoa@i& (0+255),w,b
  4152  003920  6E28               	movwf	pad@buf^0,c
  4153  003922  0E01               	movlw	high _dbuf
  4154  003924  2177               	addwfc	(utoa@i+1)& (0+255),w,b
  4155  003926  6E29               	movwf	(pad@buf+1)^0,c
  4156  003928  C06C  F02A         	movff	utoa@w,pad@p
  4157  00392C  C06D  F02B         	movff	utoa@w+1,pad@p+1
  4158  003930  EC2F  F028         	call	_pad	;wreg free
  4159  003934  C026  F060         	movff	?_pad,?_utoa
  4160  003938  C027  F061         	movff	?_pad+1,?_utoa+1
  4161  00393C  0012               	return		;funcret
  4162  00393E                     __end_of_utoa:
  4163                           	callstack 0
  4164                           
  4165 ;; *************** function ___lomod *****************
  4166 ;; Defined at:
  4167 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lomod.c"
  4168 ;; Parameters:    Size  Location     Type
  4169 ;;  dividend        8   19[COMRAM] unsigned long long 
  4170 ;;  divisor         8   27[COMRAM] unsigned long long 
  4171 ;; Auto vars:     Size  Location     Type
  4172 ;;  counter         1   35[COMRAM] unsigned char 
  4173 ;; Return value:  Size  Location     Type
  4174 ;;                  8   19[COMRAM] unsigned long long 
  4175 ;; Registers used:
  4176 ;;		wreg, status,2, status,0
  4177 ;; Tracked objects:
  4178 ;;		On entry : 0/0
  4179 ;;		On exit  : 0/0
  4180 ;;		Unchanged: 0/0
  4181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4182 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4183 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4185 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4186 ;;Total ram usage:       17 bytes
  4187 ;; Hardware stack levels used: 1
  4188 ;; Hardware stack levels required when called: 8
  4189 ;; This function calls:
  4190 ;;		Nothing
  4191 ;; This function is called by:
  4192 ;;		_utoa
  4193 ;; This function uses a non-reentrant model
  4194 ;;
  4195                           
  4196                           	psect	text12
  4197  004E00                     __ptext12:
  4198                           	callstack 0
  4199  004E00                     ___lomod:
  4200                           	callstack 16
  4201  004E00  501C               	movf	___lomod@divisor^0,w,c
  4202  004E02  101D               	iorwf	(___lomod@divisor+1)^0,w,c
  4203  004E04  101E               	iorwf	(___lomod@divisor+2)^0,w,c
  4204  004E06  101F               	iorwf	(___lomod@divisor+3)^0,w,c
  4205  004E08  1020               	iorwf	(___lomod@divisor+4)^0,w,c
  4206  004E0A  1021               	iorwf	(___lomod@divisor+5)^0,w,c
  4207  004E0C  1022               	iorwf	(___lomod@divisor+6)^0,w,c
  4208  004E0E  1023               	iorwf	(___lomod@divisor+7)^0,w,c
  4209  004E10  B4D8               	btfsc	status,2,c
  4210  004E12  EF0D  F027         	goto	u8791
  4211  004E16  EF0F  F027         	goto	u8790
  4212  004E1A                     u8791:
  4213  004E1A  EF57  F027         	goto	l1845
  4214  004E1E                     u8790:
  4215  004E1E  0E01               	movlw	1
  4216  004E20  6E24               	movwf	___lomod@counter^0,c
  4217  004E22  EF1D  F027         	goto	l8347
  4218  004E26                     l8345:
  4219  004E26  90D8               	bcf	status,0,c
  4220  004E28  361C               	rlcf	___lomod@divisor^0,f,c
  4221  004E2A  361D               	rlcf	(___lomod@divisor+1)^0,f,c
  4222  004E2C  361E               	rlcf	(___lomod@divisor+2)^0,f,c
  4223  004E2E  361F               	rlcf	(___lomod@divisor+3)^0,f,c
  4224  004E30  3620               	rlcf	(___lomod@divisor+4)^0,f,c
  4225  004E32  3621               	rlcf	(___lomod@divisor+5)^0,f,c
  4226  004E34  3622               	rlcf	(___lomod@divisor+6)^0,f,c
  4227  004E36  3623               	rlcf	(___lomod@divisor+7)^0,f,c
  4228  004E38  2A24               	incf	___lomod@counter^0,f,c
  4229  004E3A                     l8347:
  4230  004E3A  AE23               	btfss	(___lomod@divisor+7)^0,7,c
  4231  004E3C  EF22  F027         	goto	u8801
  4232  004E40  EF24  F027         	goto	u8800
  4233  004E44                     u8801:
  4234  004E44  EF13  F027         	goto	l8345
  4235  004E48                     u8800:
  4236  004E48                     l8349:
  4237  004E48  501C               	movf	___lomod@divisor^0,w,c
  4238  004E4A  5C14               	subwf	___lomod@dividend^0,w,c
  4239  004E4C  501D               	movf	(___lomod@divisor+1)^0,w,c
  4240  004E4E  5815               	subwfb	(___lomod@dividend+1)^0,w,c
  4241  004E50  501E               	movf	(___lomod@divisor+2)^0,w,c
  4242  004E52  5816               	subwfb	(___lomod@dividend+2)^0,w,c
  4243  004E54  501F               	movf	(___lomod@divisor+3)^0,w,c
  4244  004E56  5817               	subwfb	(___lomod@dividend+3)^0,w,c
  4245  004E58  5020               	movf	(___lomod@divisor+4)^0,w,c
  4246  004E5A  5818               	subwfb	(___lomod@dividend+4)^0,w,c
  4247  004E5C  5021               	movf	(___lomod@divisor+5)^0,w,c
  4248  004E5E  5819               	subwfb	(___lomod@dividend+5)^0,w,c
  4249  004E60  5022               	movf	(___lomod@divisor+6)^0,w,c
  4250  004E62  581A               	subwfb	(___lomod@dividend+6)^0,w,c
  4251  004E64  5023               	movf	(___lomod@divisor+7)^0,w,c
  4252  004E66  581B               	subwfb	(___lomod@dividend+7)^0,w,c
  4253  004E68  A0D8               	btfss	status,0,c
  4254  004E6A  EF39  F027         	goto	u8811
  4255  004E6E  EF3B  F027         	goto	u8810
  4256  004E72                     u8811:
  4257  004E72  EF4B  F027         	goto	l8353
  4258  004E76                     u8810:
  4259  004E76  501C               	movf	___lomod@divisor^0,w,c
  4260  004E78  5E14               	subwf	___lomod@dividend^0,f,c
  4261  004E7A  501D               	movf	(___lomod@divisor+1)^0,w,c
  4262  004E7C  5A15               	subwfb	(___lomod@dividend+1)^0,f,c
  4263  004E7E  501E               	movf	(___lomod@divisor+2)^0,w,c
  4264  004E80  5A16               	subwfb	(___lomod@dividend+2)^0,f,c
  4265  004E82  501F               	movf	(___lomod@divisor+3)^0,w,c
  4266  004E84  5A17               	subwfb	(___lomod@dividend+3)^0,f,c
  4267  004E86  5020               	movf	(___lomod@divisor+4)^0,w,c
  4268  004E88  5A18               	subwfb	(___lomod@dividend+4)^0,f,c
  4269  004E8A  5021               	movf	(___lomod@divisor+5)^0,w,c
  4270  004E8C  5A19               	subwfb	(___lomod@dividend+5)^0,f,c
  4271  004E8E  5022               	movf	(___lomod@divisor+6)^0,w,c
  4272  004E90  5A1A               	subwfb	(___lomod@dividend+6)^0,f,c
  4273  004E92  5023               	movf	(___lomod@divisor+7)^0,w,c
  4274  004E94  5A1B               	subwfb	(___lomod@dividend+7)^0,f,c
  4275  004E96                     l8353:
  4276  004E96  90D8               	bcf	status,0,c
  4277  004E98  3223               	rrcf	(___lomod@divisor+7)^0,f,c
  4278  004E9A  3222               	rrcf	(___lomod@divisor+6)^0,f,c
  4279  004E9C  3221               	rrcf	(___lomod@divisor+5)^0,f,c
  4280  004E9E  3220               	rrcf	(___lomod@divisor+4)^0,f,c
  4281  004EA0  321F               	rrcf	(___lomod@divisor+3)^0,f,c
  4282  004EA2  321E               	rrcf	(___lomod@divisor+2)^0,f,c
  4283  004EA4  321D               	rrcf	(___lomod@divisor+1)^0,f,c
  4284  004EA6  321C               	rrcf	___lomod@divisor^0,f,c
  4285  004EA8  2E24               	decfsz	___lomod@counter^0,f,c
  4286  004EAA  EF24  F027         	goto	l8349
  4287  004EAE                     l1845:
  4288  004EAE  C014  F014         	movff	___lomod@dividend,?___lomod
  4289  004EB2  C015  F015         	movff	___lomod@dividend+1,?___lomod+1
  4290  004EB6  C016  F016         	movff	___lomod@dividend+2,?___lomod+2
  4291  004EBA  C017  F017         	movff	___lomod@dividend+3,?___lomod+3
  4292  004EBE  C018  F018         	movff	___lomod@dividend+4,?___lomod+4
  4293  004EC2  C019  F019         	movff	___lomod@dividend+5,?___lomod+5
  4294  004EC6  C01A  F01A         	movff	___lomod@dividend+6,?___lomod+6
  4295  004ECA  C01B  F01B         	movff	___lomod@dividend+7,?___lomod+7
  4296  004ECE  0012               	return		;funcret
  4297  004ED0                     __end_of___lomod:
  4298                           	callstack 0
  4299                           
  4300 ;; *************** function ___lodiv *****************
  4301 ;; Defined at:
  4302 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lodiv.c"
  4303 ;; Parameters:    Size  Location     Type
  4304 ;;  dividend        8   19[COMRAM] unsigned long long 
  4305 ;;  divisor         8   27[COMRAM] unsigned long long 
  4306 ;; Auto vars:     Size  Location     Type
  4307 ;;  quotient        8   35[COMRAM] unsigned long long 
  4308 ;;  counter         1   43[COMRAM] unsigned char 
  4309 ;; Return value:  Size  Location     Type
  4310 ;;                  8   19[COMRAM] unsigned long long 
  4311 ;; Registers used:
  4312 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4313 ;; Tracked objects:
  4314 ;;		On entry : 0/0
  4315 ;;		On exit  : 0/0
  4316 ;;		Unchanged: 0/0
  4317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4318 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4319 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4321 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4322 ;;Total ram usage:       25 bytes
  4323 ;; Hardware stack levels used: 1
  4324 ;; Hardware stack levels required when called: 8
  4325 ;; This function calls:
  4326 ;;		Nothing
  4327 ;; This function is called by:
  4328 ;;		_utoa
  4329 ;; This function uses a non-reentrant model
  4330 ;;
  4331                           
  4332                           	psect	text13
  4333  004C2E                     __ptext13:
  4334                           	callstack 0
  4335  004C2E                     ___lodiv:
  4336                           	callstack 16
  4337  004C2E  EE20  F024         	lfsr	2,___lodiv@quotient
  4338  004C32  0E07               	movlw	7
  4339  004C34                     u8751:
  4340  004C34  6ADE               	clrf	postinc2,c
  4341  004C36  06E8               	decf	wreg,f,c
  4342  004C38  E2FD               	bc	u8751
  4343  004C3A  501C               	movf	___lodiv@divisor^0,w,c
  4344  004C3C  101D               	iorwf	(___lodiv@divisor+1)^0,w,c
  4345  004C3E  101E               	iorwf	(___lodiv@divisor+2)^0,w,c
  4346  004C40  101F               	iorwf	(___lodiv@divisor+3)^0,w,c
  4347  004C42  1020               	iorwf	(___lodiv@divisor+4)^0,w,c
  4348  004C44  1021               	iorwf	(___lodiv@divisor+5)^0,w,c
  4349  004C46  1022               	iorwf	(___lodiv@divisor+6)^0,w,c
  4350  004C48  1023               	iorwf	(___lodiv@divisor+7)^0,w,c
  4351  004C4A  B4D8               	btfsc	status,2,c
  4352  004C4C  EF2A  F026         	goto	u8761
  4353  004C50  EF2C  F026         	goto	u8760
  4354  004C54                     u8761:
  4355  004C54  EF7E  F026         	goto	l1835
  4356  004C58                     u8760:
  4357  004C58  0E01               	movlw	1
  4358  004C5A  6E2C               	movwf	___lodiv@counter^0,c
  4359  004C5C  EF3A  F026         	goto	l8327
  4360  004C60                     l8325:
  4361  004C60  90D8               	bcf	status,0,c
  4362  004C62  361C               	rlcf	___lodiv@divisor^0,f,c
  4363  004C64  361D               	rlcf	(___lodiv@divisor+1)^0,f,c
  4364  004C66  361E               	rlcf	(___lodiv@divisor+2)^0,f,c
  4365  004C68  361F               	rlcf	(___lodiv@divisor+3)^0,f,c
  4366  004C6A  3620               	rlcf	(___lodiv@divisor+4)^0,f,c
  4367  004C6C  3621               	rlcf	(___lodiv@divisor+5)^0,f,c
  4368  004C6E  3622               	rlcf	(___lodiv@divisor+6)^0,f,c
  4369  004C70  3623               	rlcf	(___lodiv@divisor+7)^0,f,c
  4370  004C72  2A2C               	incf	___lodiv@counter^0,f,c
  4371  004C74                     l8327:
  4372  004C74  AE23               	btfss	(___lodiv@divisor+7)^0,7,c
  4373  004C76  EF3F  F026         	goto	u8771
  4374  004C7A  EF41  F026         	goto	u8770
  4375  004C7E                     u8771:
  4376  004C7E  EF30  F026         	goto	l8325
  4377  004C82                     u8770:
  4378  004C82                     l8329:
  4379  004C82  90D8               	bcf	status,0,c
  4380  004C84  3624               	rlcf	___lodiv@quotient^0,f,c
  4381  004C86  3625               	rlcf	(___lodiv@quotient+1)^0,f,c
  4382  004C88  3626               	rlcf	(___lodiv@quotient+2)^0,f,c
  4383  004C8A  3627               	rlcf	(___lodiv@quotient+3)^0,f,c
  4384  004C8C  3628               	rlcf	(___lodiv@quotient+4)^0,f,c
  4385  004C8E  3629               	rlcf	(___lodiv@quotient+5)^0,f,c
  4386  004C90  362A               	rlcf	(___lodiv@quotient+6)^0,f,c
  4387  004C92  362B               	rlcf	(___lodiv@quotient+7)^0,f,c
  4388  004C94  501C               	movf	___lodiv@divisor^0,w,c
  4389  004C96  5C14               	subwf	___lodiv@dividend^0,w,c
  4390  004C98  501D               	movf	(___lodiv@divisor+1)^0,w,c
  4391  004C9A  5815               	subwfb	(___lodiv@dividend+1)^0,w,c
  4392  004C9C  501E               	movf	(___lodiv@divisor+2)^0,w,c
  4393  004C9E  5816               	subwfb	(___lodiv@dividend+2)^0,w,c
  4394  004CA0  501F               	movf	(___lodiv@divisor+3)^0,w,c
  4395  004CA2  5817               	subwfb	(___lodiv@dividend+3)^0,w,c
  4396  004CA4  5020               	movf	(___lodiv@divisor+4)^0,w,c
  4397  004CA6  5818               	subwfb	(___lodiv@dividend+4)^0,w,c
  4398  004CA8  5021               	movf	(___lodiv@divisor+5)^0,w,c
  4399  004CAA  5819               	subwfb	(___lodiv@dividend+5)^0,w,c
  4400  004CAC  5022               	movf	(___lodiv@divisor+6)^0,w,c
  4401  004CAE  581A               	subwfb	(___lodiv@dividend+6)^0,w,c
  4402  004CB0  5023               	movf	(___lodiv@divisor+7)^0,w,c
  4403  004CB2  581B               	subwfb	(___lodiv@dividend+7)^0,w,c
  4404  004CB4  A0D8               	btfss	status,0,c
  4405  004CB6  EF5F  F026         	goto	u8781
  4406  004CBA  EF61  F026         	goto	u8780
  4407  004CBE                     u8781:
  4408  004CBE  EF72  F026         	goto	l8337
  4409  004CC2                     u8780:
  4410  004CC2  501C               	movf	___lodiv@divisor^0,w,c
  4411  004CC4  5E14               	subwf	___lodiv@dividend^0,f,c
  4412  004CC6  501D               	movf	(___lodiv@divisor+1)^0,w,c
  4413  004CC8  5A15               	subwfb	(___lodiv@dividend+1)^0,f,c
  4414  004CCA  501E               	movf	(___lodiv@divisor+2)^0,w,c
  4415  004CCC  5A16               	subwfb	(___lodiv@dividend+2)^0,f,c
  4416  004CCE  501F               	movf	(___lodiv@divisor+3)^0,w,c
  4417  004CD0  5A17               	subwfb	(___lodiv@dividend+3)^0,f,c
  4418  004CD2  5020               	movf	(___lodiv@divisor+4)^0,w,c
  4419  004CD4  5A18               	subwfb	(___lodiv@dividend+4)^0,f,c
  4420  004CD6  5021               	movf	(___lodiv@divisor+5)^0,w,c
  4421  004CD8  5A19               	subwfb	(___lodiv@dividend+5)^0,f,c
  4422  004CDA  5022               	movf	(___lodiv@divisor+6)^0,w,c
  4423  004CDC  5A1A               	subwfb	(___lodiv@dividend+6)^0,f,c
  4424  004CDE  5023               	movf	(___lodiv@divisor+7)^0,w,c
  4425  004CE0  5A1B               	subwfb	(___lodiv@dividend+7)^0,f,c
  4426  004CE2  8024               	bsf	___lodiv@quotient^0,0,c
  4427  004CE4                     l8337:
  4428  004CE4  90D8               	bcf	status,0,c
  4429  004CE6  3223               	rrcf	(___lodiv@divisor+7)^0,f,c
  4430  004CE8  3222               	rrcf	(___lodiv@divisor+6)^0,f,c
  4431  004CEA  3221               	rrcf	(___lodiv@divisor+5)^0,f,c
  4432  004CEC  3220               	rrcf	(___lodiv@divisor+4)^0,f,c
  4433  004CEE  321F               	rrcf	(___lodiv@divisor+3)^0,f,c
  4434  004CF0  321E               	rrcf	(___lodiv@divisor+2)^0,f,c
  4435  004CF2  321D               	rrcf	(___lodiv@divisor+1)^0,f,c
  4436  004CF4  321C               	rrcf	___lodiv@divisor^0,f,c
  4437  004CF6  2E2C               	decfsz	___lodiv@counter^0,f,c
  4438  004CF8  EF41  F026         	goto	l8329
  4439  004CFC                     l1835:
  4440  004CFC  C024  F014         	movff	___lodiv@quotient,?___lodiv
  4441  004D00  C025  F015         	movff	___lodiv@quotient+1,?___lodiv+1
  4442  004D04  C026  F016         	movff	___lodiv@quotient+2,?___lodiv+2
  4443  004D08  C027  F017         	movff	___lodiv@quotient+3,?___lodiv+3
  4444  004D0C  C028  F018         	movff	___lodiv@quotient+4,?___lodiv+4
  4445  004D10  C029  F019         	movff	___lodiv@quotient+5,?___lodiv+5
  4446  004D14  C02A  F01A         	movff	___lodiv@quotient+6,?___lodiv+6
  4447  004D18  C02B  F01B         	movff	___lodiv@quotient+7,?___lodiv+7
  4448  004D1C  0012               	return		;funcret
  4449  004D1E                     __end_of___lodiv:
  4450                           	callstack 0
  4451                           
  4452 ;; *************** function _strncmp *****************
  4453 ;; Defined at:
  4454 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  4455 ;; Parameters:    Size  Location     Type
  4456 ;;  _l              2   19[COMRAM] PTR const unsigned char 
  4457 ;;		 -> vfpfcnvrt@ct(3), 
  4458 ;;  _r              2   21[COMRAM] PTR const unsigned char 
  4459 ;;		 -> STR_20(3), 
  4460 ;;  n               2   23[COMRAM] unsigned int 
  4461 ;; Auto vars:     Size  Location     Type
  4462 ;;  r               2   28[COMRAM] PTR const unsigned char 
  4463 ;;		 -> STR_20(3), 
  4464 ;;  l               2   26[COMRAM] PTR const unsigned char 
  4465 ;;		 -> vfpfcnvrt@ct(3), 
  4466 ;; Return value:  Size  Location     Type
  4467 ;;                  2   19[COMRAM] int 
  4468 ;; Registers used:
  4469 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4470 ;; Tracked objects:
  4471 ;;		On entry : 0/0
  4472 ;;		On exit  : 0/0
  4473 ;;		Unchanged: 0/0
  4474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4475 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4476 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4477 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4478 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4479 ;;Total ram usage:       11 bytes
  4480 ;; Hardware stack levels used: 1
  4481 ;; Hardware stack levels required when called: 8
  4482 ;; This function calls:
  4483 ;;		Nothing
  4484 ;; This function is called by:
  4485 ;;		_vfpfcnvrt
  4486 ;; This function uses a non-reentrant model
  4487 ;;
  4488                           
  4489                           	psect	text14
  4490  004B3A                     __ptext14:
  4491                           	callstack 0
  4492  004B3A                     _strncmp:
  4493                           	callstack 17
  4494  004B3A  C014  F01B         	movff	strncmp@_l,strncmp@l
  4495  004B3E  C015  F01C         	movff	strncmp@_l+1,strncmp@l+1
  4496  004B42  C016  F01D         	movff	strncmp@_r,strncmp@r
  4497  004B46  C017  F01E         	movff	strncmp@_r+1,strncmp@r+1
  4498  004B4A  0618               	decf	strncmp@n^0,f,c
  4499  004B4C  A0D8               	btfss	status,0,c
  4500  004B4E  0619               	decf	(strncmp@n+1)^0,f,c
  4501  004B50  2818               	incf	strncmp@n^0,w,c
  4502  004B52  E106               	bnz	u9851
  4503  004B54  2819               	incf	(strncmp@n+1)^0,w,c
  4504  004B56  A4D8               	btfss	status,2,c
  4505  004B58  EFB0  F025         	goto	u9851
  4506  004B5C  EFB2  F025         	goto	u9850
  4507  004B60                     u9851:
  4508  004B60  EFBF  F025         	goto	l8861
  4509  004B64                     u9850:
  4510  004B64  0E00               	movlw	0
  4511  004B66  6E15               	movwf	(?_strncmp+1)^0,c
  4512  004B68  0E00               	movlw	0
  4513  004B6A  6E14               	movwf	?_strncmp^0,c
  4514  004B6C  EF16  F026         	goto	l2351
  4515  004B70                     l8859:
  4516  004B70  4A1B               	infsnz	strncmp@l^0,f,c
  4517  004B72  2A1C               	incf	(strncmp@l+1)^0,f,c
  4518  004B74  4A1D               	infsnz	strncmp@r^0,f,c
  4519  004B76  2A1E               	incf	(strncmp@r+1)^0,f,c
  4520  004B78  0618               	decf	strncmp@n^0,f,c
  4521  004B7A  A0D8               	btfss	status,0,c
  4522  004B7C  0619               	decf	(strncmp@n+1)^0,f,c
  4523  004B7E                     l8861:
  4524  004B7E  0060  F06F  FFD9   	movff	strncmp@l,fsr2l
  4525  004B84  0060  F073  FFDA   	movff	strncmp@l+1,fsr2h
  4526  004B8A  50DF               	movf	indf2,w,c
  4527  004B8C  B4D8               	btfsc	status,2,c
  4528  004B8E  EFCB  F025         	goto	u9861
  4529  004B92  EFCD  F025         	goto	u9860
  4530  004B96                     u9861:
  4531  004B96  EF00  F026         	goto	l8869
  4532  004B9A                     u9860:
  4533  004B9A  0060  F077  FFF6   	movff	strncmp@r,tblptrl
  4534  004BA0  0060  F07B  FFF7   	movff	strncmp@r+1,tblptrh
  4535  004BA6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4536  004BA6  6AF8               	clrf	tblptru,c
  4537  004BA8                     	endif
  4538  004BA8                     	if	0	;tblptru may be non-zero
  4539  004BA8                     	endif
  4540  004BA8  0008               	tblrd		*
  4541  004BAA  50F5               	movf	tablat,w,c
  4542  004BAC  0900               	iorlw	0
  4543  004BAE  B4D8               	btfsc	status,2,c
  4544  004BB0  EFDC  F025         	goto	u9871
  4545  004BB4  EFDE  F025         	goto	u9870
  4546  004BB8                     u9871:
  4547  004BB8  EF00  F026         	goto	l8869
  4548  004BBC                     u9870:
  4549  004BBC  5018               	movf	strncmp@n^0,w,c
  4550  004BBE  1019               	iorwf	(strncmp@n+1)^0,w,c
  4551  004BC0  B4D8               	btfsc	status,2,c
  4552  004BC2  EFE5  F025         	goto	u9881
  4553  004BC6  EFE7  F025         	goto	u9880
  4554  004BCA                     u9881:
  4555  004BCA  EF00  F026         	goto	l8869
  4556  004BCE                     u9880:
  4557  004BCE  0060  F06F  FFD9   	movff	strncmp@l,fsr2l
  4558  004BD4  0060  F073  FFDA   	movff	strncmp@l+1,fsr2h
  4559  004BDA  50DF               	movf	indf2,w,c
  4560  004BDC  6E1A               	movwf	??_strncmp^0,c
  4561  004BDE  0060  F077  FFF6   	movff	strncmp@r,tblptrl
  4562  004BE4  0060  F07B  FFF7   	movff	strncmp@r+1,tblptrh
  4563  004BEA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4564  004BEA  6AF8               	clrf	tblptru,c
  4565  004BEC                     	endif
  4566  004BEC                     	if	0	;tblptru may be non-zero
  4567  004BEC                     	endif
  4568  004BEC  0008               	tblrd		*
  4569  004BEE  50F5               	movf	tablat,w,c
  4570  004BF0  181A               	xorwf	??_strncmp^0,w,c
  4571  004BF2  B4D8               	btfsc	status,2,c
  4572  004BF4  EFFE  F025         	goto	u9891
  4573  004BF8  EF00  F026         	goto	u9890
  4574  004BFC                     u9891:
  4575  004BFC  EFB8  F025         	goto	l8859
  4576  004C00                     u9890:
  4577  004C00                     l8869:
  4578  004C00  0060  F06F  FFD9   	movff	strncmp@l,fsr2l
  4579  004C06  0060  F073  FFDA   	movff	strncmp@l+1,fsr2h
  4580  004C0C  50DF               	movf	indf2,w,c
  4581  004C0E  6E1A               	movwf	??_strncmp^0,c
  4582  004C10  0060  F077  FFF6   	movff	strncmp@r,tblptrl
  4583  004C16  0060  F07B  FFF7   	movff	strncmp@r+1,tblptrh
  4584  004C1C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4585  004C1C  6AF8               	clrf	tblptru,c
  4586  004C1E                     	endif
  4587  004C1E                     	if	0	;tblptru may be non-zero
  4588  004C1E                     	endif
  4589  004C1E  0008               	tblrd		*
  4590  004C20  50F5               	movf	tablat,w,c
  4591  004C22  5C1A               	subwf	??_strncmp^0,w,c
  4592  004C24  6E14               	movwf	?_strncmp^0,c
  4593  004C26  6A15               	clrf	(?_strncmp+1)^0,c
  4594  004C28  A0D8               	btfss	status,0,c
  4595  004C2A  0615               	decf	(?_strncmp+1)^0,f,c
  4596  004C2C                     l2351:
  4597  004C2C  0012               	return		;funcret
  4598  004C2E                     __end_of_strncmp:
  4599                           	callstack 0
  4600                           
  4601 ;; *************** function _efgtoa *****************
  4602 ;; Defined at:
  4603 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4604 ;; Parameters:    Size  Location     Type
  4605 ;;  fp              2   35[BANK0 ] PTR struct _IO_FILE
  4606 ;;		 -> NULL(0), 
  4607 ;;  f               4   37[BANK0 ] PTR struct _IO_FILE
  4608 ;;  c               1   41[BANK0 ] unsigned char 
  4609 ;; Auto vars:     Size  Location     Type
  4610 ;;  u               4   99[BANK0 ] unsigned char 
  4611 ;;  g               4   91[BANK0 ] unsigned char 
  4612 ;;  l               4   85[BANK0 ] unsigned char 
  4613 ;;  h               4   81[BANK0 ] unsigned char 
  4614 ;;  ou              4   67[BANK0 ] unsigned char 
  4615 ;;  n               2   97[BANK0 ] int 
  4616 ;;  e               2   95[BANK0 ] int 
  4617 ;;  i               2   89[BANK0 ] int 
  4618 ;;  w               2   77[BANK0 ] int 
  4619 ;;  p               2   75[BANK0 ] int 
  4620 ;;  sign            2   73[BANK0 ] int 
  4621 ;;  d               2   71[BANK0 ] int 
  4622 ;;  m               2   65[BANK0 ] int 
  4623 ;;  ne              2   63[BANK0 ] int 
  4624 ;;  pp              2   61[BANK0 ] int 
  4625 ;;  t               2   59[BANK0 ] int 
  4626 ;;  mode            1   80[BANK0 ] unsigned char 
  4627 ;;  nmode           1   79[BANK0 ] unsigned char 
  4628 ;; Return value:  Size  Location     Type
  4629 ;;                  2   35[BANK0 ] int 
  4630 ;; Registers used:
  4631 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4632 ;; Tracked objects:
  4633 ;;		On entry : 0/0
  4634 ;;		On exit  : 0/0
  4635 ;;		Unchanged: 0/0
  4636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4637 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4638 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4639 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4640 ;;      Totals:         0      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4641 ;;Total ram usage:       68 bytes
  4642 ;; Hardware stack levels used: 1
  4643 ;; Hardware stack levels required when called: 13
  4644 ;; This function calls:
  4645 ;;		___awdiv
  4646 ;;		___awmod
  4647 ;;		___fladd
  4648 ;;		___fldiv
  4649 ;;		___fleq
  4650 ;;		___flge
  4651 ;;		___flmul
  4652 ;;		___flneg
  4653 ;;		___flsub
  4654 ;;		___fltol
  4655 ;;		___fpclassifyf
  4656 ;;		_floorf
  4657 ;;		_isupper
  4658 ;;		_pad
  4659 ;;		_strcpy
  4660 ;;		_tolower
  4661 ;; This function is called by:
  4662 ;;		_vfpfcnvrt
  4663 ;; This function uses a non-reentrant model
  4664 ;;
  4665                           
  4666                           	psect	text15
  4667  0010B8                     __ptext15:
  4668                           	callstack 0
  4669  0010B8                     _efgtoa:
  4670                           	callstack 12
  4671  0010B8                     
  4672                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  4673  0010B8  0E00               	movlw	0
  4674  0010BA  0100               	movlb	0	; () banked
  4675  0010BC  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  4676  0010BE  0E00               	movlw	0
  4677  0010C0  6FA9               	movwf	efgtoa@sign& (0+255),b
  4678  0010C2                     
  4679                           ; BSR set to: 0
  4680                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  4681  0010C2  C085  F0BB         	movff	efgtoa@f,efgtoa@g
  4682  0010C6  C086  F0BC         	movff	efgtoa@f+1,efgtoa@g+1
  4683  0010CA  C087  F0BD         	movff	efgtoa@f+2,efgtoa@g+2
  4684  0010CE  C088  F0BE         	movff	efgtoa@f+3,efgtoa@g+3
  4685  0010D2                     
  4686                           ; BSR set to: 0
  4687                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  4688  0010D2  BFBE               	btfsc	(efgtoa@g+3)& (0+255),7,b
  4689  0010D4  EF70  F008         	goto	u9240
  4690  0010D8  EF6E  F008         	goto	u9241
  4691  0010DC                     u9241:
  4692  0010DC  EF86  F008         	goto	l8519
  4693  0010E0                     u9240:
  4694  0010E0                     
  4695                           ; BSR set to: 0
  4696                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  4697  0010E0  0E00               	movlw	0
  4698  0010E2  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  4699  0010E4  0E01               	movlw	1
  4700  0010E6  6FA9               	movwf	efgtoa@sign& (0+255),b
  4701  0010E8                     
  4702                           ; BSR set to: 0
  4703                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  4704  0010E8  C0BB  F014         	movff	efgtoa@g,___flneg@f1
  4705  0010EC  C0BC  F015         	movff	efgtoa@g+1,___flneg@f1+1
  4706  0010F0  C0BD  F016         	movff	efgtoa@g+2,___flneg@f1+2
  4707  0010F4  C0BE  F017         	movff	efgtoa@g+3,___flneg@f1+3
  4708  0010F8  EC51  F02E         	call	___flneg	;wreg free
  4709  0010FC  C014  F0BB         	movff	?___flneg,efgtoa@g
  4710  001100  C015  F0BC         	movff	?___flneg+1,efgtoa@g+1
  4711  001104  C016  F0BD         	movff	?___flneg+2,efgtoa@g+2
  4712  001108  C017  F0BE         	movff	?___flneg+3,efgtoa@g+3
  4713  00110C                     l8519:
  4714                           
  4715                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  4716  00110C  0E00               	movlw	0
  4717  00110E  0100               	movlb	0	; () banked
  4718  001110  6FC2               	movwf	(efgtoa@n+1)& (0+255),b
  4719  001112  0E00               	movlw	0
  4720  001114  6FC1               	movwf	efgtoa@n& (0+255),b
  4721  001116                     
  4722                           ; BSR set to: 0
  4723                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  4724  001116  C03A  F0AD         	movff	_width,efgtoa@w
  4725  00111A  C03B  F0AE         	movff	_width+1,efgtoa@w+1
  4726  00111E                     
  4727                           ; BSR set to: 0
  4728                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  4729  00111E  51A9               	movf	efgtoa@sign& (0+255),w,b
  4730  001120  11AA               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4731  001122  A4D8               	btfss	status,2,c
  4732  001124  EF96  F008         	goto	u9251
  4733  001128  EF98  F008         	goto	u9250
  4734  00112C                     u9251:
  4735  00112C  EF9F  F008         	goto	l8527
  4736  001130                     u9250:
  4737  001130                     
  4738                           ; BSR set to: 0
  4739  001130  A43E               	btfss	_flags^0,2,c
  4740  001132  EF9D  F008         	goto	u9261
  4741  001136  EF9F  F008         	goto	u9260
  4742  00113A                     u9261:
  4743  00113A  EFB9  F008         	goto	l8539
  4744  00113E                     u9260:
  4745  00113E                     l8527:
  4746                           
  4747                           ; BSR set to: 0
  4748                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  4749  00113E  51A9               	movf	efgtoa@sign& (0+255),w,b
  4750  001140  11AA               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4751  001142  A4D8               	btfss	status,2,c
  4752  001144  EFA6  F008         	goto	u9271
  4753  001148  EFA8  F008         	goto	u9270
  4754  00114C                     u9271:
  4755  00114C  EFAE  F008         	goto	l8531
  4756  001150                     u9270:
  4757  001150                     
  4758                           ; BSR set to: 0
  4759  001150  0E00               	movlw	0
  4760  001152  6F90               	movwf	(_efgtoa$3563+1)& (0+255),b
  4761  001154  0E2B               	movlw	43
  4762  001156  6F8F               	movwf	_efgtoa$3563& (0+255),b
  4763  001158  EFB2  F008         	goto	l8533
  4764  00115C                     l8531:
  4765                           
  4766                           ; BSR set to: 0
  4767  00115C  0E00               	movlw	0
  4768  00115E  6F90               	movwf	(_efgtoa$3563+1)& (0+255),b
  4769  001160  0E2D               	movlw	45
  4770  001162  6F8F               	movwf	_efgtoa$3563& (0+255),b
  4771  001164                     l8533:
  4772                           
  4773                           ; BSR set to: 0
  4774  001164  C08F  F13E         	movff	_efgtoa$3563,_dbuf
  4775  001168                     
  4776                           ; BSR set to: 0
  4777                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  4778  001168  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  4779  00116A  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  4780  00116C                     
  4781                           ; BSR set to: 0
  4782                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  4783  00116C  07AD               	decf	efgtoa@w& (0+255),f,b
  4784  00116E  A0D8               	btfss	status,0,c
  4785  001170  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  4786  001172                     l8539:
  4787                           
  4788                           ; BSR set to: 0
  4789                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4790  001172  C0BB  F014         	movff	efgtoa@g,___fpclassifyf@x
  4791  001176  C0BC  F015         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4792  00117A  C0BD  F016         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4793  00117E  C0BE  F017         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4794  001182  EC1E  F025         	call	___fpclassifyf	;wreg free
  4795  001186  0414               	decf	?___fpclassifyf^0,w,c
  4796  001188  1015               	iorwf	(?___fpclassifyf+1)^0,w,c
  4797  00118A  A4D8               	btfss	status,2,c
  4798  00118C  EFCA  F008         	goto	u9281
  4799  001190  EFCC  F008         	goto	u9280
  4800  001194                     u9281:
  4801  001194  EF23  F009         	goto	l8557
  4802  001198                     u9280:
  4803  001198  0EBF               	movlw	191
  4804  00119A  0100               	movlb	0	; () banked
  4805  00119C  6F8A               	movwf	??_efgtoa& (0+255),b
  4806  00119E  0EFF               	movlw	255
  4807  0011A0  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  4808  0011A2  5189               	movf	efgtoa@c& (0+255),w,b
  4809  0011A4  6F8C               	movwf	(??_efgtoa+2)& (0+255),b
  4810  0011A6  6B8D               	clrf	(??_efgtoa+3)& (0+255),b
  4811  0011A8  518A               	movf	??_efgtoa& (0+255),w,b
  4812  0011AA  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  4813  0011AC  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  4814  0011AE  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4815  0011B0  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  4816  0011B2  E10A               	bnz	u9290
  4817  0011B4  0E1A               	movlw	26
  4818  0011B6  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  4819  0011B8  A0D8               	btfss	status,0,c
  4820  0011BA  EFE1  F008         	goto	u9291
  4821  0011BE  EFE4  F008         	goto	u9290
  4822  0011C2                     u9291:
  4823  0011C2  0E01               	movlw	1
  4824  0011C4  EFE5  F008         	goto	u9300
  4825  0011C8                     u9290:
  4826  0011C8  0E00               	movlw	0
  4827  0011CA                     u9300:
  4828  0011CA  6F91               	movwf	_efgtoa$3564& (0+255),b
  4829  0011CC  6B92               	clrf	(_efgtoa$3564+1)& (0+255),b
  4830  0011CE                     
  4831                           ; BSR set to: 0
  4832  0011CE  5191               	movf	_efgtoa$3564& (0+255),w,b
  4833  0011D0  1192               	iorwf	(_efgtoa$3564+1)& (0+255),w,b
  4834  0011D2  B4D8               	btfsc	status,2,c
  4835  0011D4  EFEE  F008         	goto	u9311
  4836  0011D8  EFF0  F008         	goto	u9310
  4837  0011DC                     u9311:
  4838  0011DC  EFFE  F008         	goto	l8549
  4839  0011E0                     u9310:
  4840  0011E0                     
  4841                           ; BSR set to: 0
  4842                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  4843  0011E0  0E3E               	movlw	low _dbuf
  4844  0011E2  25C1               	addwf	efgtoa@n& (0+255),w,b
  4845  0011E4  6E14               	movwf	strcpy@dest^0,c
  4846  0011E6  0E01               	movlw	high _dbuf
  4847  0011E8  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4848  0011EA  6E15               	movwf	(strcpy@dest+1)^0,c
  4849  0011EC  0EA4               	movlw	low STR_10
  4850  0011EE  6E16               	movwf	strcpy@src^0,c
  4851  0011F0  0E10               	movlw	high STR_10
  4852  0011F2  6E17               	movwf	(strcpy@src+1)^0,c
  4853  0011F4  ECB4  F02B         	call	_strcpy	;wreg free
  4854                           
  4855                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  4856  0011F8  EF0A  F009         	goto	l8551
  4857  0011FC                     l8549:
  4858                           
  4859                           ; BSR set to: 0
  4860                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  4861  0011FC  0E3E               	movlw	low _dbuf
  4862  0011FE  25C1               	addwf	efgtoa@n& (0+255),w,b
  4863  001200  6E14               	movwf	strcpy@dest^0,c
  4864  001202  0E01               	movlw	high _dbuf
  4865  001204  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4866  001206  6E15               	movwf	(strcpy@dest+1)^0,c
  4867  001208  0EAC               	movlw	low STR_11
  4868  00120A  6E16               	movwf	strcpy@src^0,c
  4869  00120C  0E10               	movlw	high STR_11
  4870  00120E  6E17               	movwf	(strcpy@src+1)^0,c
  4871  001210  ECB4  F02B         	call	_strcpy	;wreg free
  4872  001214                     l8551:
  4873                           
  4874                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  4875  001214  0100               	movlb	0	; () banked
  4876  001216  0EFD               	movlw	253
  4877  001218  27AD               	addwf	efgtoa@w& (0+255),f,b
  4878  00121A  0EFF               	movlw	255
  4879  00121C  23AE               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4880  00121E                     
  4881                           ; BSR set to: 0
  4882                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  4883  00121E  C083  F026         	movff	efgtoa@fp,pad@fp
  4884  001222  C084  F027         	movff	efgtoa@fp+1,pad@fp+1
  4885  001226  0E3E               	movlw	low _dbuf
  4886  001228  6E28               	movwf	pad@buf^0,c
  4887  00122A  0E01               	movlw	high _dbuf
  4888  00122C  6E29               	movwf	(pad@buf+1)^0,c
  4889  00122E  C0AD  F02A         	movff	efgtoa@w,pad@p
  4890  001232  C0AE  F02B         	movff	efgtoa@w+1,pad@p+1
  4891  001236  EC2F  F028         	call	_pad	;wreg free
  4892  00123A  C026  F083         	movff	?_pad,?_efgtoa
  4893  00123E  C027  F084         	movff	?_pad+1,?_efgtoa+1
  4894  001242  EFB2  F00E         	goto	l2163
  4895  001246                     l8557:
  4896                           
  4897                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4898  001246  C0BB  F014         	movff	efgtoa@g,___fpclassifyf@x
  4899  00124A  C0BC  F015         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4900  00124E  C0BD  F016         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4901  001252  C0BE  F017         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4902  001256  EC1E  F025         	call	___fpclassifyf	;wreg free
  4903  00125A  5014               	movf	?___fpclassifyf^0,w,c
  4904  00125C  1015               	iorwf	(?___fpclassifyf+1)^0,w,c
  4905  00125E  A4D8               	btfss	status,2,c
  4906  001260  EF34  F009         	goto	u9321
  4907  001264  EF36  F009         	goto	u9320
  4908  001268                     u9321:
  4909  001268  EF8D  F009         	goto	l8575
  4910  00126C                     u9320:
  4911  00126C  0EBF               	movlw	191
  4912  00126E  0100               	movlb	0	; () banked
  4913  001270  6F8A               	movwf	??_efgtoa& (0+255),b
  4914  001272  0EFF               	movlw	255
  4915  001274  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  4916  001276  5189               	movf	efgtoa@c& (0+255),w,b
  4917  001278  6F8C               	movwf	(??_efgtoa+2)& (0+255),b
  4918  00127A  6B8D               	clrf	(??_efgtoa+3)& (0+255),b
  4919  00127C  518A               	movf	??_efgtoa& (0+255),w,b
  4920  00127E  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  4921  001280  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  4922  001282  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4923  001284  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  4924  001286  E10A               	bnz	u9330
  4925  001288  0E1A               	movlw	26
  4926  00128A  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  4927  00128C  A0D8               	btfss	status,0,c
  4928  00128E  EF4B  F009         	goto	u9331
  4929  001292  EF4E  F009         	goto	u9330
  4930  001296                     u9331:
  4931  001296  0E01               	movlw	1
  4932  001298  EF4F  F009         	goto	u9340
  4933  00129C                     u9330:
  4934  00129C  0E00               	movlw	0
  4935  00129E                     u9340:
  4936  00129E  6F93               	movwf	_efgtoa$3568& (0+255),b
  4937  0012A0  6B94               	clrf	(_efgtoa$3568+1)& (0+255),b
  4938  0012A2                     
  4939                           ; BSR set to: 0
  4940  0012A2  5193               	movf	_efgtoa$3568& (0+255),w,b
  4941  0012A4  1194               	iorwf	(_efgtoa$3568+1)& (0+255),w,b
  4942  0012A6  B4D8               	btfsc	status,2,c
  4943  0012A8  EF58  F009         	goto	u9351
  4944  0012AC  EF5A  F009         	goto	u9350
  4945  0012B0                     u9351:
  4946  0012B0  EF68  F009         	goto	l8567
  4947  0012B4                     u9350:
  4948  0012B4                     
  4949                           ; BSR set to: 0
  4950                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  4951  0012B4  0E3E               	movlw	low _dbuf
  4952  0012B6  25C1               	addwf	efgtoa@n& (0+255),w,b
  4953  0012B8  6E14               	movwf	strcpy@dest^0,c
  4954  0012BA  0E01               	movlw	high _dbuf
  4955  0012BC  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4956  0012BE  6E15               	movwf	(strcpy@dest+1)^0,c
  4957  0012C0  0EA8               	movlw	low STR_14
  4958  0012C2  6E16               	movwf	strcpy@src^0,c
  4959  0012C4  0E10               	movlw	high STR_14
  4960  0012C6  6E17               	movwf	(strcpy@src+1)^0,c
  4961  0012C8  ECB4  F02B         	call	_strcpy	;wreg free
  4962                           
  4963                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  4964  0012CC  EF74  F009         	goto	l8569
  4965  0012D0                     l8567:
  4966                           
  4967                           ; BSR set to: 0
  4968                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  4969  0012D0  0E3E               	movlw	low _dbuf
  4970  0012D2  25C1               	addwf	efgtoa@n& (0+255),w,b
  4971  0012D4  6E14               	movwf	strcpy@dest^0,c
  4972  0012D6  0E01               	movlw	high _dbuf
  4973  0012D8  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4974  0012DA  6E15               	movwf	(strcpy@dest+1)^0,c
  4975  0012DC  0EB0               	movlw	low STR_15
  4976  0012DE  6E16               	movwf	strcpy@src^0,c
  4977  0012E0  0E10               	movlw	high STR_15
  4978  0012E2  6E17               	movwf	(strcpy@src+1)^0,c
  4979  0012E4  ECB4  F02B         	call	_strcpy	;wreg free
  4980  0012E8                     l8569:
  4981                           
  4982                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 371:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  4983  0012E8  0100               	movlb	0	; () banked
  4984  0012EA  0EFD               	movlw	253
  4985  0012EC  27AD               	addwf	efgtoa@w& (0+255),f,b
  4986  0012EE  0EFF               	movlw	255
  4987  0012F0  23AE               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4988  0012F2                     
  4989                           ; BSR set to: 0
  4990                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 372:         retu
      +                          rn pad(fp, &dbuf[0], w);
  4991  0012F2  C083  F026         	movff	efgtoa@fp,pad@fp
  4992  0012F6  C084  F027         	movff	efgtoa@fp+1,pad@fp+1
  4993  0012FA  0E3E               	movlw	low _dbuf
  4994  0012FC  6E28               	movwf	pad@buf^0,c
  4995  0012FE  0E01               	movlw	high _dbuf
  4996  001300  6E29               	movwf	(pad@buf+1)^0,c
  4997  001302  C0AD  F02A         	movff	efgtoa@w,pad@p
  4998  001306  C0AE  F02B         	movff	efgtoa@w+1,pad@p+1
  4999  00130A  EC2F  F028         	call	_pad	;wreg free
  5000  00130E  C026  F083         	movff	?_pad,?_efgtoa
  5001  001312  C027  F084         	movff	?_pad+1,?_efgtoa+1
  5002  001316  EFB2  F00E         	goto	l2163
  5003  00131A                     l8575:
  5004                           
  5005                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  5006  00131A  0E00               	movlw	0
  5007  00131C  0100               	movlb	0	; () banked
  5008  00131E  6FC3               	movwf	efgtoa@u& (0+255),b
  5009  001320  0E00               	movlw	0
  5010  001322  6FC4               	movwf	(efgtoa@u+1)& (0+255),b
  5011  001324  0E80               	movlw	128
  5012  001326  6FC5               	movwf	(efgtoa@u+2)& (0+255),b
  5013  001328  0E3F               	movlw	63
  5014  00132A  6FC6               	movwf	(efgtoa@u+3)& (0+255),b
  5015                           
  5016                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  5017  00132C  0E00               	movlw	0
  5018  00132E  6FC0               	movwf	(efgtoa@e+1)& (0+255),b
  5019  001330  0E00               	movlw	0
  5020  001332  6FBF               	movwf	efgtoa@e& (0+255),b
  5021  001334                     
  5022                           ; BSR set to: 0
  5023                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  5024  001334  C0BB  F014         	movff	efgtoa@g,___fleq@ff1
  5025  001338  C0BC  F015         	movff	efgtoa@g+1,___fleq@ff1+1
  5026  00133C  C0BD  F016         	movff	efgtoa@g+2,___fleq@ff1+2
  5027  001340  C0BE  F017         	movff	efgtoa@g+3,___fleq@ff1+3
  5028  001344  0E00               	movlw	0
  5029  001346  6E18               	movwf	___fleq@ff2^0,c
  5030  001348  0E00               	movlw	0
  5031  00134A  6E19               	movwf	(___fleq@ff2+1)^0,c
  5032  00134C  0E00               	movlw	0
  5033  00134E  6E1A               	movwf	(___fleq@ff2+2)^0,c
  5034  001350  0E00               	movlw	0
  5035  001352  6E1B               	movwf	(___fleq@ff2+3)^0,c
  5036  001354  ECA7  F029         	call	___fleq	;wreg free
  5037  001358  B0D8               	btfsc	status,0,c
  5038  00135A  EFB1  F009         	goto	u9361
  5039  00135E  EFB3  F009         	goto	u9360
  5040  001362                     u9361:
  5041  001362  EF38  F00A         	goto	l8593
  5042  001366                     u9360:
  5043  001366  EFD2  F009         	goto	l8585
  5044  00136A                     l8581:
  5045                           
  5046                           ; BSR set to: 0
  5047                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  5048  00136A  C0C3  F02A         	movff	efgtoa@u,___flmul@b
  5049  00136E  C0C4  F02B         	movff	efgtoa@u+1,___flmul@b+1
  5050  001372  C0C5  F02C         	movff	efgtoa@u+2,___flmul@b+2
  5051  001376  C0C6  F02D         	movff	efgtoa@u+3,___flmul@b+3
  5052  00137A  0E00               	movlw	0
  5053  00137C  6E2E               	movwf	___flmul@a^0,c
  5054  00137E  0E00               	movlw	0
  5055  001380  6E2F               	movwf	(___flmul@a+1)^0,c
  5056  001382  0E20               	movlw	32
  5057  001384  6E30               	movwf	(___flmul@a+2)^0,c
  5058  001386  0E41               	movlw	65
  5059  001388  6E31               	movwf	(___flmul@a+3)^0,c
  5060  00138A  EC08  F014         	call	___flmul	;wreg free
  5061  00138E  C02A  F0C3         	movff	?___flmul,efgtoa@u
  5062  001392  C02B  F0C4         	movff	?___flmul+1,efgtoa@u+1
  5063  001396  C02C  F0C5         	movff	?___flmul+2,efgtoa@u+2
  5064  00139A  C02D  F0C6         	movff	?___flmul+3,efgtoa@u+3
  5065  00139E                     
  5066                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  5067  00139E  0100               	movlb	0	; () banked
  5068  0013A0  4BBF               	infsnz	efgtoa@e& (0+255),f,b
  5069  0013A2  2BC0               	incf	(efgtoa@e+1)& (0+255),f,b
  5070  0013A4                     l8585:
  5071                           
  5072                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  5073  0013A4  C0BB  F06D         	movff	efgtoa@g,___flge@ff1
  5074  0013A8  C0BC  F06E         	movff	efgtoa@g+1,___flge@ff1+1
  5075  0013AC  C0BD  F06F         	movff	efgtoa@g+2,___flge@ff1+2
  5076  0013B0  C0BE  F070         	movff	efgtoa@g+3,___flge@ff1+3
  5077  0013B4  0E00               	movlw	0
  5078  0013B6  6E2E               	movwf	___flmul@a^0,c
  5079  0013B8  0E00               	movlw	0
  5080  0013BA  6E2F               	movwf	(___flmul@a+1)^0,c
  5081  0013BC  0E20               	movlw	32
  5082  0013BE  6E30               	movwf	(___flmul@a+2)^0,c
  5083  0013C0  0E41               	movlw	65
  5084  0013C2  6E31               	movwf	(___flmul@a+3)^0,c
  5085  0013C4  C0C3  F02A         	movff	efgtoa@u,___flmul@b
  5086  0013C8  C0C4  F02B         	movff	efgtoa@u+1,___flmul@b+1
  5087  0013CC  C0C5  F02C         	movff	efgtoa@u+2,___flmul@b+2
  5088  0013D0  C0C6  F02D         	movff	efgtoa@u+3,___flmul@b+3
  5089  0013D4  EC08  F014         	call	___flmul	;wreg free
  5090  0013D8  C02A  F071         	movff	?___flmul,___flge@ff2
  5091  0013DC  C02B  F072         	movff	?___flmul+1,___flge@ff2+1
  5092  0013E0  C02C  F073         	movff	?___flmul+2,___flge@ff2+2
  5093  0013E4  C02D  F074         	movff	?___flmul+3,___flge@ff2+3
  5094  0013E8  EC9B  F024         	call	___flge	;wreg free
  5095  0013EC  0100               	movlb	0	; () banked
  5096  0013EE  B0D8               	btfsc	status,0,c
  5097  0013F0  EFFC  F009         	goto	u9371
  5098  0013F4  EFFE  F009         	goto	u9370
  5099  0013F8                     u9371:
  5100  0013F8  EFB5  F009         	goto	l8581
  5101  0013FC                     u9370:
  5102  0013FC  EF1E  F00A         	goto	l8591
  5103  001400                     l8587:
  5104                           
  5105                           ; BSR set to: 0
  5106                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  5107  001400  C0C3  F02A         	movff	efgtoa@u,___fldiv@b
  5108  001404  C0C4  F02B         	movff	efgtoa@u+1,___fldiv@b+1
  5109  001408  C0C5  F02C         	movff	efgtoa@u+2,___fldiv@b+2
  5110  00140C  C0C6  F02D         	movff	efgtoa@u+3,___fldiv@b+3
  5111  001410  0E00               	movlw	0
  5112  001412  6E2E               	movwf	___fldiv@a^0,c
  5113  001414  0E00               	movlw	0
  5114  001416  6E2F               	movwf	(___fldiv@a+1)^0,c
  5115  001418  0E20               	movlw	32
  5116  00141A  6E30               	movwf	(___fldiv@a+2)^0,c
  5117  00141C  0E41               	movlw	65
  5118  00141E  6E31               	movwf	(___fldiv@a+3)^0,c
  5119  001420  EC30  F016         	call	___fldiv	;wreg free
  5120  001424  C02A  F0C3         	movff	?___fldiv,efgtoa@u
  5121  001428  C02B  F0C4         	movff	?___fldiv+1,efgtoa@u+1
  5122  00142C  C02C  F0C5         	movff	?___fldiv+2,efgtoa@u+2
  5123  001430  C02D  F0C6         	movff	?___fldiv+3,efgtoa@u+3
  5124  001434                     
  5125                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  5126  001434  0100               	movlb	0	; () banked
  5127  001436  07BF               	decf	efgtoa@e& (0+255),f,b
  5128  001438  A0D8               	btfss	status,0,c
  5129  00143A  07C0               	decf	(efgtoa@e+1)& (0+255),f,b
  5130  00143C                     l8591:
  5131                           
  5132                           ; BSR set to: 0
  5133                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  5134  00143C  C0BB  F06D         	movff	efgtoa@g,___flge@ff1
  5135  001440  C0BC  F06E         	movff	efgtoa@g+1,___flge@ff1+1
  5136  001444  C0BD  F06F         	movff	efgtoa@g+2,___flge@ff1+2
  5137  001448  C0BE  F070         	movff	efgtoa@g+3,___flge@ff1+3
  5138  00144C  C0C3  F071         	movff	efgtoa@u,___flge@ff2
  5139  001450  C0C4  F072         	movff	efgtoa@u+1,___flge@ff2+1
  5140  001454  C0C5  F073         	movff	efgtoa@u+2,___flge@ff2+2
  5141  001458  C0C6  F074         	movff	efgtoa@u+3,___flge@ff2+3
  5142  00145C  EC9B  F024         	call	___flge	;wreg free
  5143  001460  0100               	movlb	0	; () banked
  5144  001462  A0D8               	btfss	status,0,c
  5145  001464  EF36  F00A         	goto	u9381
  5146  001468  EF38  F00A         	goto	u9380
  5147  00146C                     u9381:
  5148  00146C  EF00  F00A         	goto	l8587
  5149  001470                     u9380:
  5150  001470                     l8593:
  5151                           
  5152                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  5153  001470  C089  F01A         	movff	efgtoa@c,tolower@c
  5154  001474  6A1B               	clrf	(tolower@c+1)^0,c
  5155  001476  ECE9  F02B         	call	_tolower	;wreg free
  5156  00147A  501A               	movf	?_tolower^0,w,c
  5157  00147C  0100               	movlb	0	; () banked
  5158  00147E  6FB0               	movwf	efgtoa@mode& (0+255),b
  5159  001480                     
  5160                           ; BSR set to: 0
  5161                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  5162  001480  C0B0  F0AF         	movff	efgtoa@mode,efgtoa@nmode
  5163  001484                     
  5164                           ; BSR set to: 0
  5165                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  5166  001484  0E67               	movlw	103
  5167  001486  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  5168  001488  A4D8               	btfss	status,2,c
  5169  00148A  EF49  F00A         	goto	u9391
  5170  00148E  EF4B  F00A         	goto	u9390
  5171  001492                     u9391:
  5172  001492  EF71  F00A         	goto	l8607
  5173  001496                     u9390:
  5174  001496                     
  5175                           ; BSR set to: 0
  5176                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  5177  001496  503C               	movf	_prec^0,w,c
  5178  001498  103D               	iorwf	(_prec+1)^0,w,c
  5179  00149A  A4D8               	btfss	status,2,c
  5180  00149C  EF52  F00A         	goto	u9401
  5181  0014A0  EF54  F00A         	goto	u9400
  5182  0014A4                     u9401:
  5183  0014A4  EF58  F00A         	goto	l8603
  5184  0014A8                     u9400:
  5185  0014A8                     
  5186                           ; BSR set to: 0
  5187                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  5188  0014A8  0E00               	movlw	0
  5189  0014AA  6E3D               	movwf	(_prec+1)^0,c
  5190  0014AC  0E01               	movlw	1
  5191  0014AE  6E3C               	movwf	_prec^0,c
  5192  0014B0                     l8603:
  5193                           
  5194                           ; BSR set to: 0
  5195                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  5196  0014B0  BE3D               	btfsc	(_prec+1)^0,7,c
  5197  0014B2  EF65  F00A         	goto	u9410
  5198  0014B6  503D               	movf	(_prec+1)^0,w,c
  5199  0014B8  E106               	bnz	u9411
  5200  0014BA  043C               	decf	_prec^0,w,c
  5201  0014BC  B0D8               	btfsc	status,0,c
  5202  0014BE  EF63  F00A         	goto	u9411
  5203  0014C2  EF65  F00A         	goto	u9410
  5204  0014C6                     u9411:
  5205  0014C6  EF6B  F00A         	goto	l2181
  5206  0014CA                     u9410:
  5207  0014CA                     l8605:
  5208                           
  5209                           ; BSR set to: 0
  5210  0014CA  0E00               	movlw	0
  5211  0014CC  6FAC               	movwf	(efgtoa@p+1)& (0+255),b
  5212  0014CE  0E06               	movlw	6
  5213  0014D0  6FAB               	movwf	efgtoa@p& (0+255),b
  5214  0014D2  EF7A  F00A         	goto	l8613
  5215  0014D6                     l2181:
  5216                           
  5217                           ; BSR set to: 0
  5218  0014D6  C03C  F0AB         	movff	_prec,efgtoa@p
  5219  0014DA  C03D  F0AC         	movff	_prec+1,efgtoa@p+1
  5220  0014DE  EF7A  F00A         	goto	l8613
  5221  0014E2                     l8607:
  5222                           
  5223                           ; BSR set to: 0
  5224                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  5225  0014E2  BE3D               	btfsc	(_prec+1)^0,7,c
  5226  0014E4  EF76  F00A         	goto	u9421
  5227  0014E8  EF78  F00A         	goto	u9420
  5228  0014EC                     u9421:
  5229  0014EC  EF65  F00A         	goto	l8605
  5230  0014F0                     u9420:
  5231  0014F0  EF6B  F00A         	goto	l2181
  5232  0014F4                     l8613:
  5233                           
  5234                           ; BSR set to: 0
  5235                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  5236  0014F4  0E67               	movlw	103
  5237  0014F6  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  5238  0014F8  A4D8               	btfss	status,2,c
  5239  0014FA  EF81  F00A         	goto	u9431
  5240  0014FE  EF83  F00A         	goto	u9430
  5241  001502                     u9431:
  5242  001502  EFB2  F00A         	goto	l8623
  5243  001506                     u9430:
  5244  001506                     
  5245                           ; BSR set to: 0
  5246                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  5247  001506  AFC0               	btfss	(efgtoa@e+1)& (0+255),7,b
  5248  001508  EF91  F00A         	goto	u9440
  5249  00150C  0EFC               	movlw	252
  5250  00150E  5DBF               	subwf	efgtoa@e& (0+255),w,b
  5251  001510  0EFF               	movlw	255
  5252  001512  59C0               	subwfb	(efgtoa@e+1)& (0+255),w,b
  5253  001514  A0D8               	btfss	status,0,c
  5254  001516  EF8F  F00A         	goto	u9441
  5255  00151A  EF91  F00A         	goto	u9440
  5256  00151E                     u9441:
  5257  00151E  EFB0  F00A         	goto	l8621
  5258  001522                     u9440:
  5259  001522                     
  5260                           ; BSR set to: 0
  5261  001522  0EFF               	movlw	255
  5262  001524  6F8A               	movwf	??_efgtoa& (0+255),b
  5263  001526  0EFF               	movlw	255
  5264  001528  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  5265  00152A  C0AB  F08C         	movff	efgtoa@p,??_efgtoa+2
  5266  00152E  C0AC  F08D         	movff	efgtoa@p+1,??_efgtoa+3
  5267  001532  518A               	movf	??_efgtoa& (0+255),w,b
  5268  001534  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  5269  001536  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  5270  001538  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5271  00153A  51BF               	movf	efgtoa@e& (0+255),w,b
  5272  00153C  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  5273  00153E  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  5274  001540  0A80               	xorlw	128
  5275  001542  6F8E               	movwf	(??_efgtoa+4)& (0+255),b
  5276  001544  51C0               	movf	(efgtoa@e+1)& (0+255),w,b
  5277  001546  0A80               	xorlw	128
  5278  001548  598E               	subwfb	(??_efgtoa+4)& (0+255),w,b
  5279  00154A  A0D8               	btfss	status,0,c
  5280  00154C  EFAA  F00A         	goto	u9451
  5281  001550  EFAC  F00A         	goto	u9450
  5282  001554                     u9451:
  5283  001554  EFB0  F00A         	goto	l8621
  5284  001558                     u9450:
  5285  001558                     
  5286                           ; BSR set to: 0
  5287                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  5288  001558  0E66               	movlw	102
  5289  00155A  6FAF               	movwf	efgtoa@nmode& (0+255),b
  5290                           
  5291                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  5292  00155C  EFB2  F00A         	goto	l8623
  5293  001560                     l8621:
  5294                           
  5295                           ; BSR set to: 0
  5296                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  5297  001560  0E65               	movlw	101
  5298  001562  6FAF               	movwf	efgtoa@nmode& (0+255),b
  5299  001564                     l8623:
  5300                           
  5301                           ; BSR set to: 0
  5302                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  5303  001564  C0AB  F0A1         	movff	efgtoa@p,efgtoa@m
  5304  001568  C0AC  F0A2         	movff	efgtoa@p+1,efgtoa@m+1
  5305  00156C                     
  5306                           ; BSR set to: 0
  5307                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  5308  00156C  0E67               	movlw	103
  5309  00156E  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  5310  001570  A4D8               	btfss	status,2,c
  5311  001572  EFBD  F00A         	goto	u9461
  5312  001576  EFBF  F00A         	goto	u9460
  5313  00157A                     u9461:
  5314  00157A  EFCF  F00A         	goto	l8631
  5315  00157E                     u9460:
  5316  00157E                     
  5317                           ; BSR set to: 0
  5318  00157E  0E66               	movlw	102
  5319  001580  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  5320  001582  A4D8               	btfss	status,2,c
  5321  001584  EFC6  F00A         	goto	u9471
  5322  001588  EFC8  F00A         	goto	u9470
  5323  00158C                     u9471:
  5324  00158C  EFD1  F00A         	goto	l8633
  5325  001590                     u9470:
  5326  001590                     
  5327                           ; BSR set to: 0
  5328  001590  BFC0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5329  001592  EFCF  F00A         	goto	u9480
  5330  001596  EFCD  F00A         	goto	u9481
  5331  00159A                     u9481:
  5332  00159A  EFD1  F00A         	goto	l8633
  5333  00159E                     u9480:
  5334  00159E                     l8631:
  5335                           
  5336                           ; BSR set to: 0
  5337                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  5338  00159E  4BA1               	infsnz	efgtoa@m& (0+255),f,b
  5339  0015A0  2BA2               	incf	(efgtoa@m+1)& (0+255),f,b
  5340  0015A2                     l8633:
  5341                           
  5342                           ; BSR set to: 0
  5343                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  5344  0015A2  0E66               	movlw	102
  5345  0015A4  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  5346  0015A6  A4D8               	btfss	status,2,c
  5347  0015A8  EFD8  F00A         	goto	u9491
  5348  0015AC  EFDA  F00A         	goto	u9490
  5349  0015B0                     u9491:
  5350  0015B0  EFFA  F00A         	goto	l8643
  5351  0015B4                     u9490:
  5352  0015B4                     
  5353                           ; BSR set to: 0
  5354                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  5355  0015B4  BFC0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5356  0015B6  EFE1  F00A         	goto	u9500
  5357  0015BA  EFDF  F00A         	goto	u9501
  5358  0015BE                     u9501:
  5359  0015BE  EFED  F00A         	goto	l8639
  5360  0015C2                     u9500:
  5361  0015C2                     
  5362                           ; BSR set to: 0
  5363                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  5364  0015C2  0E00               	movlw	0
  5365  0015C4  6FC3               	movwf	efgtoa@u& (0+255),b
  5366  0015C6  0E00               	movlw	0
  5367  0015C8  6FC4               	movwf	(efgtoa@u+1)& (0+255),b
  5368  0015CA  0E80               	movlw	128
  5369  0015CC  6FC5               	movwf	(efgtoa@u+2)& (0+255),b
  5370  0015CE  0E3F               	movlw	63
  5371  0015D0  6FC6               	movwf	(efgtoa@u+3)& (0+255),b
  5372                           
  5373                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  5374  0015D2  0E00               	movlw	0
  5375  0015D4  6FC0               	movwf	(efgtoa@e+1)& (0+255),b
  5376  0015D6  0E00               	movlw	0
  5377  0015D8  6FBF               	movwf	efgtoa@e& (0+255),b
  5378  0015DA                     l8639:
  5379                           
  5380                           ; BSR set to: 0
  5381                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  5382  0015DA  0E67               	movlw	103
  5383  0015DC  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  5384  0015DE  B4D8               	btfsc	status,2,c
  5385  0015E0  EFF4  F00A         	goto	u9511
  5386  0015E4  EFF6  F00A         	goto	u9510
  5387  0015E8                     u9511:
  5388  0015E8  EFFA  F00A         	goto	l8643
  5389  0015EC                     u9510:
  5390  0015EC                     
  5391                           ; BSR set to: 0
  5392                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  5393  0015EC  51BF               	movf	efgtoa@e& (0+255),w,b
  5394  0015EE  27A1               	addwf	efgtoa@m& (0+255),f,b
  5395  0015F0  51C0               	movf	(efgtoa@e+1)& (0+255),w,b
  5396  0015F2  23A2               	addwfc	(efgtoa@m+1)& (0+255),f,b
  5397  0015F4                     l8643:
  5398                           
  5399                           ; BSR set to: 0
  5400                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  5401  0015F4  0E00               	movlw	0
  5402  0015F6  6FBA               	movwf	(efgtoa@i+1)& (0+255),b
  5403  0015F8  0E00               	movlw	0
  5404  0015FA  6FB9               	movwf	efgtoa@i& (0+255),b
  5405  0015FC                     
  5406                           ; BSR set to: 0
  5407                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  5408  0015FC  C0BB  F0B1         	movff	efgtoa@g,efgtoa@h
  5409  001600  C0BC  F0B2         	movff	efgtoa@g+1,efgtoa@h+1
  5410  001604  C0BD  F0B3         	movff	efgtoa@g+2,efgtoa@h+2
  5411  001608  C0BE  F0B4         	movff	efgtoa@g+3,efgtoa@h+3
  5412  00160C                     
  5413                           ; BSR set to: 0
  5414                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  5415  00160C  C0C3  F0A3         	movff	efgtoa@u,efgtoa@ou
  5416  001610  C0C4  F0A4         	movff	efgtoa@u+1,efgtoa@ou+1
  5417  001614  C0C5  F0A5         	movff	efgtoa@u+2,efgtoa@ou+2
  5418  001618  C0C6  F0A6         	movff	efgtoa@u+3,efgtoa@ou+3
  5419                           
  5420                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  5421  00161C  EF8B  F00B         	goto	l8657
  5422  001620                     l8649:
  5423                           
  5424                           ; BSR set to: 0
  5425                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  5426  001620  C0B1  F02A         	movff	efgtoa@h,___fldiv@b
  5427  001624  C0B2  F02B         	movff	efgtoa@h+1,___fldiv@b+1
  5428  001628  C0B3  F02C         	movff	efgtoa@h+2,___fldiv@b+2
  5429  00162C  C0B4  F02D         	movff	efgtoa@h+3,___fldiv@b+3
  5430  001630  C0C3  F02E         	movff	efgtoa@u,___fldiv@a
  5431  001634  C0C4  F02F         	movff	efgtoa@u+1,___fldiv@a+1
  5432  001638  C0C5  F030         	movff	efgtoa@u+2,___fldiv@a+2
  5433  00163C  C0C6  F031         	movff	efgtoa@u+3,___fldiv@a+3
  5434  001640  EC30  F016         	call	___fldiv	;wreg free
  5435  001644  C02A  F036         	movff	?___fldiv,floorf@x
  5436  001648  C02B  F037         	movff	?___fldiv+1,floorf@x+1
  5437  00164C  C02C  F038         	movff	?___fldiv+2,floorf@x+2
  5438  001650  C02D  F039         	movff	?___fldiv+3,floorf@x+3
  5439  001654  EC90  F01A         	call	_floorf	;wreg free
  5440  001658  C036  F0B5         	movff	?_floorf,efgtoa@l
  5441  00165C  C037  F0B6         	movff	?_floorf+1,efgtoa@l+1
  5442  001660  C038  F0B7         	movff	?_floorf+2,efgtoa@l+2
  5443  001664  C039  F0B8         	movff	?_floorf+3,efgtoa@l+3
  5444                           
  5445                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  5446  001668  C0B5  F079         	movff	efgtoa@l,___fltol@f1
  5447  00166C  C0B6  F07A         	movff	efgtoa@l+1,___fltol@f1+1
  5448  001670  C0B7  F07B         	movff	efgtoa@l+2,___fltol@f1+2
  5449  001674  C0B8  F07C         	movff	efgtoa@l+3,___fltol@f1+3
  5450  001678  EC17  F024         	call	___fltol	;wreg free
  5451  00167C  C079  F0A7         	movff	?___fltol,efgtoa@d
  5452  001680  C07A  F0A8         	movff	?___fltol+1,efgtoa@d+1
  5453  001684                     
  5454                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  5455  001684  C0B1  F079         	movff	efgtoa@h,___flsub@b
  5456  001688  C0B2  F07A         	movff	efgtoa@h+1,___flsub@b+1
  5457  00168C  C0B3  F07B         	movff	efgtoa@h+2,___flsub@b+2
  5458  001690  C0B4  F07C         	movff	efgtoa@h+3,___flsub@b+3
  5459  001694  C0C3  F02E         	movff	efgtoa@u,___flmul@a
  5460  001698  C0C4  F02F         	movff	efgtoa@u+1,___flmul@a+1
  5461  00169C  C0C5  F030         	movff	efgtoa@u+2,___flmul@a+2
  5462  0016A0  C0C6  F031         	movff	efgtoa@u+3,___flmul@a+3
  5463  0016A4  C0B5  F02A         	movff	efgtoa@l,___flmul@b
  5464  0016A8  C0B6  F02B         	movff	efgtoa@l+1,___flmul@b+1
  5465  0016AC  C0B7  F02C         	movff	efgtoa@l+2,___flmul@b+2
  5466  0016B0  C0B8  F02D         	movff	efgtoa@l+3,___flmul@b+3
  5467  0016B4  EC08  F014         	call	___flmul	;wreg free
  5468  0016B8  C02A  F07D         	movff	?___flmul,___flsub@a
  5469  0016BC  C02B  F07E         	movff	?___flmul+1,___flsub@a+1
  5470  0016C0  C02C  F07F         	movff	?___flmul+2,___flsub@a+2
  5471  0016C4  C02D  F080         	movff	?___flmul+3,___flsub@a+3
  5472  0016C8  EC35  F02D         	call	___flsub	;wreg free
  5473  0016CC  C079  F0B1         	movff	?___flsub,efgtoa@h
  5474  0016D0  C07A  F0B2         	movff	?___flsub+1,efgtoa@h+1
  5475  0016D4  C07B  F0B3         	movff	?___flsub+2,efgtoa@h+2
  5476  0016D8  C07C  F0B4         	movff	?___flsub+3,efgtoa@h+3
  5477  0016DC                     
  5478                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  5479  0016DC  C0C3  F02A         	movff	efgtoa@u,___fldiv@b
  5480  0016E0  C0C4  F02B         	movff	efgtoa@u+1,___fldiv@b+1
  5481  0016E4  C0C5  F02C         	movff	efgtoa@u+2,___fldiv@b+2
  5482  0016E8  C0C6  F02D         	movff	efgtoa@u+3,___fldiv@b+3
  5483  0016EC  0E00               	movlw	0
  5484  0016EE  6E2E               	movwf	___fldiv@a^0,c
  5485  0016F0  0E00               	movlw	0
  5486  0016F2  6E2F               	movwf	(___fldiv@a+1)^0,c
  5487  0016F4  0E20               	movlw	32
  5488  0016F6  6E30               	movwf	(___fldiv@a+2)^0,c
  5489  0016F8  0E41               	movlw	65
  5490  0016FA  6E31               	movwf	(___fldiv@a+3)^0,c
  5491  0016FC  EC30  F016         	call	___fldiv	;wreg free
  5492  001700  C02A  F0C3         	movff	?___fldiv,efgtoa@u
  5493  001704  C02B  F0C4         	movff	?___fldiv+1,efgtoa@u+1
  5494  001708  C02C  F0C5         	movff	?___fldiv+2,efgtoa@u+2
  5495  00170C  C02D  F0C6         	movff	?___fldiv+3,efgtoa@u+3
  5496  001710                     
  5497                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  5498  001710  0100               	movlb	0	; () banked
  5499  001712  4BB9               	infsnz	efgtoa@i& (0+255),f,b
  5500  001714  2BBA               	incf	(efgtoa@i+1)& (0+255),f,b
  5501  001716                     l8657:
  5502                           
  5503                           ; BSR set to: 0
  5504                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  5505  001716  51A1               	movf	efgtoa@m& (0+255),w,b
  5506  001718  5DB9               	subwf	efgtoa@i& (0+255),w,b
  5507  00171A  51BA               	movf	(efgtoa@i+1)& (0+255),w,b
  5508  00171C  0A80               	xorlw	128
  5509  00171E  6F8A               	movwf	??_efgtoa& (0+255),b
  5510  001720  51A2               	movf	(efgtoa@m+1)& (0+255),w,b
  5511  001722  0A80               	xorlw	128
  5512  001724  598A               	subwfb	??_efgtoa& (0+255),w,b
  5513  001726  A0D8               	btfss	status,0,c
  5514  001728  EF98  F00B         	goto	u9521
  5515  00172C  EF9A  F00B         	goto	u9520
  5516  001730                     u9521:
  5517  001730  EF10  F00B         	goto	l8649
  5518  001734                     u9520:
  5519  001734                     
  5520                           ; BSR set to: 0
  5521                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  5522  001734  C0C3  F02A         	movff	efgtoa@u,___flmul@b
  5523  001738  C0C4  F02B         	movff	efgtoa@u+1,___flmul@b+1
  5524  00173C  C0C5  F02C         	movff	efgtoa@u+2,___flmul@b+2
  5525  001740  C0C6  F02D         	movff	efgtoa@u+3,___flmul@b+3
  5526  001744  0E00               	movlw	0
  5527  001746  6E2E               	movwf	___flmul@a^0,c
  5528  001748  0E00               	movlw	0
  5529  00174A  6E2F               	movwf	(___flmul@a+1)^0,c
  5530  00174C  0EA0               	movlw	160
  5531  00174E  6E30               	movwf	(___flmul@a+2)^0,c
  5532  001750  0E40               	movlw	64
  5533  001752  6E31               	movwf	(___flmul@a+3)^0,c
  5534  001754  EC08  F014         	call	___flmul	;wreg free
  5535  001758  C02A  F0B5         	movff	?___flmul,efgtoa@l
  5536  00175C  C02B  F0B6         	movff	?___flmul+1,efgtoa@l+1
  5537  001760  C02C  F0B7         	movff	?___flmul+2,efgtoa@l+2
  5538  001764  C02D  F0B8         	movff	?___flmul+3,efgtoa@l+3
  5539  001768                     
  5540                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  5541  001768  C0B1  F06D         	movff	efgtoa@h,___flge@ff1
  5542  00176C  C0B2  F06E         	movff	efgtoa@h+1,___flge@ff1+1
  5543  001770  C0B3  F06F         	movff	efgtoa@h+2,___flge@ff1+2
  5544  001774  C0B4  F070         	movff	efgtoa@h+3,___flge@ff1+3
  5545  001778  C0B5  F071         	movff	efgtoa@l,___flge@ff2
  5546  00177C  C0B6  F072         	movff	efgtoa@l+1,___flge@ff2+1
  5547  001780  C0B7  F073         	movff	efgtoa@l+2,___flge@ff2+2
  5548  001784  C0B8  F074         	movff	efgtoa@l+3,___flge@ff2+3
  5549  001788  EC9B  F024         	call	___flge	;wreg free
  5550  00178C  0100               	movlb	0	; () banked
  5551  00178E  B0D8               	btfsc	status,0,c
  5552  001790  EFCC  F00B         	goto	u9531
  5553  001794  EFCE  F00B         	goto	u9530
  5554  001798                     u9531:
  5555  001798  EFD8  F00B         	goto	l8665
  5556  00179C                     u9530:
  5557  00179C                     
  5558                           ; BSR set to: 0
  5559                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  5560  00179C  0E00               	movlw	0
  5561  00179E  6FB5               	movwf	efgtoa@l& (0+255),b
  5562  0017A0  0E00               	movlw	0
  5563  0017A2  6FB6               	movwf	(efgtoa@l+1)& (0+255),b
  5564  0017A4  0E00               	movlw	0
  5565  0017A6  6FB7               	movwf	(efgtoa@l+2)& (0+255),b
  5566  0017A8  0E00               	movlw	0
  5567  0017AA  6FB8               	movwf	(efgtoa@l+3)& (0+255),b
  5568                           
  5569                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  5570  0017AC  EF01  F00C         	goto	l8671
  5571  0017B0                     l8665:
  5572                           
  5573                           ; BSR set to: 0
  5574                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  5575  0017B0  C0B1  F014         	movff	efgtoa@h,___fleq@ff1
  5576  0017B4  C0B2  F015         	movff	efgtoa@h+1,___fleq@ff1+1
  5577  0017B8  C0B3  F016         	movff	efgtoa@h+2,___fleq@ff1+2
  5578  0017BC  C0B4  F017         	movff	efgtoa@h+3,___fleq@ff1+3
  5579  0017C0  C0B5  F018         	movff	efgtoa@l,___fleq@ff2
  5580  0017C4  C0B6  F019         	movff	efgtoa@l+1,___fleq@ff2+1
  5581  0017C8  C0B7  F01A         	movff	efgtoa@l+2,___fleq@ff2+2
  5582  0017CC  C0B8  F01B         	movff	efgtoa@l+3,___fleq@ff2+3
  5583  0017D0  ECA7  F029         	call	___fleq	;wreg free
  5584  0017D4  A0D8               	btfss	status,0,c
  5585  0017D6  EFEF  F00B         	goto	u9541
  5586  0017DA  EFF1  F00B         	goto	u9540
  5587  0017DE                     u9541:
  5588  0017DE  EF01  F00C         	goto	l8671
  5589  0017E2                     u9540:
  5590  0017E2  0100               	movlb	0	; () banked
  5591  0017E4  B1A7               	btfsc	efgtoa@d& (0+255),0,b
  5592  0017E6  EFF7  F00B         	goto	u9551
  5593  0017EA  EFF9  F00B         	goto	u9550
  5594  0017EE                     u9551:
  5595  0017EE  EF01  F00C         	goto	l8671
  5596  0017F2                     u9550:
  5597  0017F2                     
  5598                           ; BSR set to: 0
  5599                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  5600  0017F2  0E00               	movlw	0
  5601  0017F4  6FB5               	movwf	efgtoa@l& (0+255),b
  5602  0017F6  0E00               	movlw	0
  5603  0017F8  6FB6               	movwf	(efgtoa@l+1)& (0+255),b
  5604  0017FA  0E00               	movlw	0
  5605  0017FC  6FB7               	movwf	(efgtoa@l+2)& (0+255),b
  5606  0017FE  0E00               	movlw	0
  5607  001800  6FB8               	movwf	(efgtoa@l+3)& (0+255),b
  5608  001802                     l8671:
  5609                           
  5610                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  5611  001802  C0BB  F06D         	movff	efgtoa@g,___fladd@b
  5612  001806  C0BC  F06E         	movff	efgtoa@g+1,___fladd@b+1
  5613  00180A  C0BD  F06F         	movff	efgtoa@g+2,___fladd@b+2
  5614  00180E  C0BE  F070         	movff	efgtoa@g+3,___fladd@b+3
  5615  001812  C0B5  F071         	movff	efgtoa@l,___fladd@a
  5616  001816  C0B6  F072         	movff	efgtoa@l+1,___fladd@a+1
  5617  00181A  C0B7  F073         	movff	efgtoa@l+2,___fladd@a+2
  5618  00181E  C0B8  F074         	movff	efgtoa@l+3,___fladd@a+3
  5619  001822  ECA7  F011         	call	___fladd	;wreg free
  5620  001826  C06D  F0B1         	movff	?___fladd,efgtoa@h
  5621  00182A  C06E  F0B2         	movff	?___fladd+1,efgtoa@h+1
  5622  00182E  C06F  F0B3         	movff	?___fladd+2,efgtoa@h+2
  5623  001832  C070  F0B4         	movff	?___fladd+3,efgtoa@h+3
  5624  001836                     
  5625                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  5626  001836  C0B1  F06D         	movff	efgtoa@h,___flge@ff1
  5627  00183A  C0B2  F06E         	movff	efgtoa@h+1,___flge@ff1+1
  5628  00183E  C0B3  F06F         	movff	efgtoa@h+2,___flge@ff1+2
  5629  001842  C0B4  F070         	movff	efgtoa@h+3,___flge@ff1+3
  5630  001846  0E00               	movlw	0
  5631  001848  6E2E               	movwf	___flmul@a^0,c
  5632  00184A  0E00               	movlw	0
  5633  00184C  6E2F               	movwf	(___flmul@a+1)^0,c
  5634  00184E  0E20               	movlw	32
  5635  001850  6E30               	movwf	(___flmul@a+2)^0,c
  5636  001852  0E41               	movlw	65
  5637  001854  6E31               	movwf	(___flmul@a+3)^0,c
  5638  001856  C0A3  F02A         	movff	efgtoa@ou,___flmul@b
  5639  00185A  C0A4  F02B         	movff	efgtoa@ou+1,___flmul@b+1
  5640  00185E  C0A5  F02C         	movff	efgtoa@ou+2,___flmul@b+2
  5641  001862  C0A6  F02D         	movff	efgtoa@ou+3,___flmul@b+3
  5642  001866  EC08  F014         	call	___flmul	;wreg free
  5643  00186A  C02A  F071         	movff	?___flmul,___flge@ff2
  5644  00186E  C02B  F072         	movff	?___flmul+1,___flge@ff2+1
  5645  001872  C02C  F073         	movff	?___flmul+2,___flge@ff2+2
  5646  001876  C02D  F074         	movff	?___flmul+3,___flge@ff2+3
  5647  00187A  EC9B  F024         	call	___flge	;wreg free
  5648  00187E  0100               	movlb	0	; () banked
  5649  001880  A0D8               	btfss	status,0,c
  5650  001882  EF45  F00C         	goto	u9561
  5651  001886  EF47  F00C         	goto	u9560
  5652  00188A                     u9561:
  5653  00188A  EF6F  F00C         	goto	l8683
  5654  00188E                     u9560:
  5655  00188E                     
  5656                           ; BSR set to: 0
  5657                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  5658  00188E  4BBF               	infsnz	efgtoa@e& (0+255),f,b
  5659  001890  2BC0               	incf	(efgtoa@e+1)& (0+255),f,b
  5660  001892                     
  5661                           ; BSR set to: 0
  5662                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  5663  001892  C0A3  F02A         	movff	efgtoa@ou,___flmul@b
  5664  001896  C0A4  F02B         	movff	efgtoa@ou+1,___flmul@b+1
  5665  00189A  C0A5  F02C         	movff	efgtoa@ou+2,___flmul@b+2
  5666  00189E  C0A6  F02D         	movff	efgtoa@ou+3,___flmul@b+3
  5667  0018A2  0E00               	movlw	0
  5668  0018A4  6E2E               	movwf	___flmul@a^0,c
  5669  0018A6  0E00               	movlw	0
  5670  0018A8  6E2F               	movwf	(___flmul@a+1)^0,c
  5671  0018AA  0E20               	movlw	32
  5672  0018AC  6E30               	movwf	(___flmul@a+2)^0,c
  5673  0018AE  0E41               	movlw	65
  5674  0018B0  6E31               	movwf	(___flmul@a+3)^0,c
  5675  0018B2  EC08  F014         	call	___flmul	;wreg free
  5676  0018B6  C02A  F0A3         	movff	?___flmul,efgtoa@ou
  5677  0018BA  C02B  F0A4         	movff	?___flmul+1,efgtoa@ou+1
  5678  0018BE  C02C  F0A5         	movff	?___flmul+2,efgtoa@ou+2
  5679  0018C2  C02D  F0A6         	movff	?___flmul+3,efgtoa@ou+3
  5680  0018C6                     
  5681                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  5682  0018C6  0E66               	movlw	102
  5683  0018C8  0100               	movlb	0	; () banked
  5684  0018CA  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  5685  0018CC  A4D8               	btfss	status,2,c
  5686  0018CE  EF6B  F00C         	goto	u9571
  5687  0018D2  EF6D  F00C         	goto	u9570
  5688  0018D6                     u9571:
  5689  0018D6  EF6F  F00C         	goto	l8683
  5690  0018DA                     u9570:
  5691  0018DA                     
  5692                           ; BSR set to: 0
  5693                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  5694  0018DA  4BA1               	infsnz	efgtoa@m& (0+255),f,b
  5695  0018DC  2BA2               	incf	(efgtoa@m+1)& (0+255),f,b
  5696  0018DE                     l8683:
  5697                           
  5698                           ; BSR set to: 0
  5699                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  5700  0018DE  C0A3  F0C3         	movff	efgtoa@ou,efgtoa@u
  5701  0018E2  C0A4  F0C4         	movff	efgtoa@ou+1,efgtoa@u+1
  5702  0018E6  C0A5  F0C5         	movff	efgtoa@ou+2,efgtoa@u+2
  5703  0018EA  C0A6  F0C6         	movff	efgtoa@ou+3,efgtoa@u+3
  5704  0018EE                     
  5705                           ; BSR set to: 0
  5706                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  5707  0018EE  0E65               	movlw	101
  5708  0018F0  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  5709  0018F2  B4D8               	btfsc	status,2,c
  5710  0018F4  EF7E  F00C         	goto	u9581
  5711  0018F8  EF80  F00C         	goto	u9580
  5712  0018FC                     u9581:
  5713  0018FC  EF86  F00C         	goto	l8689
  5714  001900                     u9580:
  5715  001900                     
  5716                           ; BSR set to: 0
  5717  001900  C0BF  F09F         	movff	efgtoa@e,efgtoa@ne
  5718  001904  C0C0  F0A0         	movff	efgtoa@e+1,efgtoa@ne+1
  5719  001908  EF8A  F00C         	goto	l2209
  5720  00190C                     l8689:
  5721                           
  5722                           ; BSR set to: 0
  5723  00190C  0E00               	movlw	0
  5724  00190E  6FA0               	movwf	(efgtoa@ne+1)& (0+255),b
  5725  001910  0E00               	movlw	0
  5726  001912  6F9F               	movwf	efgtoa@ne& (0+255),b
  5727  001914                     l2209:
  5728                           
  5729                           ; BSR set to: 0
  5730                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  5731  001914  0E00               	movlw	0
  5732  001916  6F9E               	movwf	(efgtoa@pp+1)& (0+255),b
  5733  001918  0E00               	movlw	0
  5734  00191A  6F9D               	movwf	efgtoa@pp& (0+255),b
  5735                           
  5736                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  5737  00191C  0E00               	movlw	0
  5738  00191E  6F9C               	movwf	(efgtoa@t+1)& (0+255),b
  5739  001920  0E00               	movlw	0
  5740  001922  6F9B               	movwf	efgtoa@t& (0+255),b
  5741                           
  5742                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  5743  001924  0E00               	movlw	0
  5744  001926  6FBA               	movwf	(efgtoa@i+1)& (0+255),b
  5745  001928  0E00               	movlw	0
  5746  00192A  6FB9               	movwf	efgtoa@i& (0+255),b
  5747                           
  5748                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5749  00192C  EF86  F00D         	goto	l8739
  5750  001930                     l8691:
  5751                           
  5752                           ; BSR set to: 0
  5753                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  5754  001930  C0B1  F02A         	movff	efgtoa@h,___fldiv@b
  5755  001934  C0B2  F02B         	movff	efgtoa@h+1,___fldiv@b+1
  5756  001938  C0B3  F02C         	movff	efgtoa@h+2,___fldiv@b+2
  5757  00193C  C0B4  F02D         	movff	efgtoa@h+3,___fldiv@b+3
  5758  001940  C0C3  F02E         	movff	efgtoa@u,___fldiv@a
  5759  001944  C0C4  F02F         	movff	efgtoa@u+1,___fldiv@a+1
  5760  001948  C0C5  F030         	movff	efgtoa@u+2,___fldiv@a+2
  5761  00194C  C0C6  F031         	movff	efgtoa@u+3,___fldiv@a+3
  5762  001950  EC30  F016         	call	___fldiv	;wreg free
  5763  001954  C02A  F036         	movff	?___fldiv,floorf@x
  5764  001958  C02B  F037         	movff	?___fldiv+1,floorf@x+1
  5765  00195C  C02C  F038         	movff	?___fldiv+2,floorf@x+2
  5766  001960  C02D  F039         	movff	?___fldiv+3,floorf@x+3
  5767  001964  EC90  F01A         	call	_floorf	;wreg free
  5768  001968  C036  F0B5         	movff	?_floorf,efgtoa@l
  5769  00196C  C037  F0B6         	movff	?_floorf+1,efgtoa@l+1
  5770  001970  C038  F0B7         	movff	?_floorf+2,efgtoa@l+2
  5771  001974  C039  F0B8         	movff	?_floorf+3,efgtoa@l+3
  5772                           
  5773                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  5774  001978  C0B5  F079         	movff	efgtoa@l,___fltol@f1
  5775  00197C  C0B6  F07A         	movff	efgtoa@l+1,___fltol@f1+1
  5776  001980  C0B7  F07B         	movff	efgtoa@l+2,___fltol@f1+2
  5777  001984  C0B8  F07C         	movff	efgtoa@l+3,___fltol@f1+3
  5778  001988  EC17  F024         	call	___fltol	;wreg free
  5779  00198C  C079  F0A7         	movff	?___fltol,efgtoa@d
  5780  001990  C07A  F0A8         	movff	?___fltol+1,efgtoa@d+1
  5781  001994                     
  5782                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  5783  001994  B83E               	btfsc	_flags^0,4,c
  5784  001996  EFCF  F00C         	goto	u9591
  5785  00199A  EFD1  F00C         	goto	u9590
  5786  00199E                     u9591:
  5787  00199E  EFEF  F00C         	goto	l8703
  5788  0019A2                     u9590:
  5789  0019A2  0100               	movlb	0	; () banked
  5790  0019A4  51A7               	movf	efgtoa@d& (0+255),w,b
  5791  0019A6  11A8               	iorwf	(efgtoa@d+1)& (0+255),w,b
  5792  0019A8  A4D8               	btfss	status,2,c
  5793  0019AA  EFD9  F00C         	goto	u9601
  5794  0019AE  EFDB  F00C         	goto	u9600
  5795  0019B2                     u9601:
  5796  0019B2  EFEF  F00C         	goto	l8703
  5797  0019B6                     u9600:
  5798  0019B6                     
  5799                           ; BSR set to: 0
  5800  0019B6  0E67               	movlw	103
  5801  0019B8  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  5802  0019BA  A4D8               	btfss	status,2,c
  5803  0019BC  EFE2  F00C         	goto	u9611
  5804  0019C0  EFE4  F00C         	goto	u9610
  5805  0019C4                     u9611:
  5806  0019C4  EFEF  F00C         	goto	l8703
  5807  0019C8                     u9610:
  5808  0019C8                     
  5809                           ; BSR set to: 0
  5810  0019C8  BFA0               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5811  0019CA  EFEB  F00C         	goto	u9620
  5812  0019CE  EFE9  F00C         	goto	u9621
  5813  0019D2                     u9621:
  5814  0019D2  EFEF  F00C         	goto	l8703
  5815  0019D6                     u9620:
  5816  0019D6                     
  5817                           ; BSR set to: 0
  5818                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  5819  0019D6  4B9B               	infsnz	efgtoa@t& (0+255),f,b
  5820  0019D8  2B9C               	incf	(efgtoa@t+1)& (0+255),f,b
  5821                           
  5822                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  5823  0019DA  EF3A  F00D         	goto	l8731
  5824  0019DE                     l8703:
  5825                           
  5826                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  5827  0019DE  0100               	movlb	0	; () banked
  5828  0019E0  519D               	movf	efgtoa@pp& (0+255),w,b
  5829  0019E2  119E               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5830  0019E4  A4D8               	btfss	status,2,c
  5831  0019E6  EFF7  F00C         	goto	u9631
  5832  0019EA  EFF9  F00C         	goto	u9630
  5833  0019EE                     u9631:
  5834  0019EE  EF23  F00D         	goto	l8723
  5835  0019F2                     u9630:
  5836  0019F2                     
  5837                           ; BSR set to: 0
  5838  0019F2  BFA0               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5839  0019F4  EF00  F00D         	goto	u9640
  5840  0019F8  EFFE  F00C         	goto	u9641
  5841  0019FC                     u9641:
  5842  0019FC  EF23  F00D         	goto	l8723
  5843  001A00                     u9640:
  5844  001A00                     
  5845                           ; BSR set to: 0
  5846                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  5847  001A00  0E3E               	movlw	low _dbuf
  5848  001A02  25C1               	addwf	efgtoa@n& (0+255),w,b
  5849  001A04  6ED9               	movwf	fsr2l,c
  5850  001A06  0E01               	movlw	high _dbuf
  5851  001A08  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5852  001A0A  6EDA               	movwf	fsr2h,c
  5853  001A0C  0E2E               	movlw	46
  5854  001A0E  6EDF               	movwf	indf2,c
  5855  001A10                     
  5856                           ; BSR set to: 0
  5857  001A10  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  5858  001A12  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  5859  001A14                     
  5860                           ; BSR set to: 0
  5861                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  5862  001A14  07AD               	decf	efgtoa@w& (0+255),f,b
  5863  001A16  A0D8               	btfss	status,0,c
  5864  001A18  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  5865  001A1A                     
  5866                           ; BSR set to: 0
  5867                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  5868  001A1A  0E00               	movlw	0
  5869  001A1C  6F9E               	movwf	(efgtoa@pp+1)& (0+255),b
  5870  001A1E  0E01               	movlw	1
  5871  001A20  6F9D               	movwf	efgtoa@pp& (0+255),b
  5872  001A22  EF23  F00D         	goto	l8723
  5873  001A26                     l8715:
  5874                           
  5875                           ; BSR set to: 0
  5876                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  5877  001A26  0E3E               	movlw	low _dbuf
  5878  001A28  25C1               	addwf	efgtoa@n& (0+255),w,b
  5879  001A2A  6ED9               	movwf	fsr2l,c
  5880  001A2C  0E01               	movlw	high _dbuf
  5881  001A2E  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5882  001A30  6EDA               	movwf	fsr2h,c
  5883  001A32  0E30               	movlw	48
  5884  001A34  6EDF               	movwf	indf2,c
  5885  001A36                     
  5886                           ; BSR set to: 0
  5887  001A36  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  5888  001A38  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  5889  001A3A                     
  5890                           ; BSR set to: 0
  5891                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  5892  001A3A  07AD               	decf	efgtoa@w& (0+255),f,b
  5893  001A3C  A0D8               	btfss	status,0,c
  5894  001A3E  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  5895  001A40                     
  5896                           ; BSR set to: 0
  5897                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  5898  001A40  079B               	decf	efgtoa@t& (0+255),f,b
  5899  001A42  A0D8               	btfss	status,0,c
  5900  001A44  079C               	decf	(efgtoa@t+1)& (0+255),f,b
  5901  001A46                     l8723:
  5902                           
  5903                           ; BSR set to: 0
  5904                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  5905  001A46  519B               	movf	efgtoa@t& (0+255),w,b
  5906  001A48  119C               	iorwf	(efgtoa@t+1)& (0+255),w,b
  5907  001A4A  A4D8               	btfss	status,2,c
  5908  001A4C  EF2A  F00D         	goto	u9651
  5909  001A50  EF2C  F00D         	goto	u9650
  5910  001A54                     u9651:
  5911  001A54  EF13  F00D         	goto	l8715
  5912  001A58                     u9650:
  5913  001A58                     
  5914                           ; BSR set to: 0
  5915                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  5916  001A58  0E3E               	movlw	low _dbuf
  5917  001A5A  25C1               	addwf	efgtoa@n& (0+255),w,b
  5918  001A5C  6ED9               	movwf	fsr2l,c
  5919  001A5E  0E01               	movlw	high _dbuf
  5920  001A60  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5921  001A62  6EDA               	movwf	fsr2h,c
  5922  001A64  51A7               	movf	efgtoa@d& (0+255),w,b
  5923  001A66  0F30               	addlw	48
  5924  001A68  6EDF               	movwf	indf2,c
  5925  001A6A                     
  5926                           ; BSR set to: 0
  5927  001A6A  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  5928  001A6C  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  5929  001A6E                     
  5930                           ; BSR set to: 0
  5931                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  5932  001A6E  07AD               	decf	efgtoa@w& (0+255),f,b
  5933  001A70  A0D8               	btfss	status,0,c
  5934  001A72  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  5935  001A74                     l8731:
  5936                           
  5937                           ; BSR set to: 0
  5938                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  5939  001A74  C0B1  F079         	movff	efgtoa@h,___flsub@b
  5940  001A78  C0B2  F07A         	movff	efgtoa@h+1,___flsub@b+1
  5941  001A7C  C0B3  F07B         	movff	efgtoa@h+2,___flsub@b+2
  5942  001A80  C0B4  F07C         	movff	efgtoa@h+3,___flsub@b+3
  5943  001A84  C0C3  F02E         	movff	efgtoa@u,___flmul@a
  5944  001A88  C0C4  F02F         	movff	efgtoa@u+1,___flmul@a+1
  5945  001A8C  C0C5  F030         	movff	efgtoa@u+2,___flmul@a+2
  5946  001A90  C0C6  F031         	movff	efgtoa@u+3,___flmul@a+3
  5947  001A94  C0B5  F02A         	movff	efgtoa@l,___flmul@b
  5948  001A98  C0B6  F02B         	movff	efgtoa@l+1,___flmul@b+1
  5949  001A9C  C0B7  F02C         	movff	efgtoa@l+2,___flmul@b+2
  5950  001AA0  C0B8  F02D         	movff	efgtoa@l+3,___flmul@b+3
  5951  001AA4  EC08  F014         	call	___flmul	;wreg free
  5952  001AA8  C02A  F07D         	movff	?___flmul,___flsub@a
  5953  001AAC  C02B  F07E         	movff	?___flmul+1,___flsub@a+1
  5954  001AB0  C02C  F07F         	movff	?___flmul+2,___flsub@a+2
  5955  001AB4  C02D  F080         	movff	?___flmul+3,___flsub@a+3
  5956  001AB8  EC35  F02D         	call	___flsub	;wreg free
  5957  001ABC  C079  F0B1         	movff	?___flsub,efgtoa@h
  5958  001AC0  C07A  F0B2         	movff	?___flsub+1,efgtoa@h+1
  5959  001AC4  C07B  F0B3         	movff	?___flsub+2,efgtoa@h+2
  5960  001AC8  C07C  F0B4         	movff	?___flsub+3,efgtoa@h+3
  5961  001ACC                     
  5962                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  5963  001ACC  C0C3  F02A         	movff	efgtoa@u,___fldiv@b
  5964  001AD0  C0C4  F02B         	movff	efgtoa@u+1,___fldiv@b+1
  5965  001AD4  C0C5  F02C         	movff	efgtoa@u+2,___fldiv@b+2
  5966  001AD8  C0C6  F02D         	movff	efgtoa@u+3,___fldiv@b+3
  5967  001ADC  0E00               	movlw	0
  5968  001ADE  6E2E               	movwf	___fldiv@a^0,c
  5969  001AE0  0E00               	movlw	0
  5970  001AE2  6E2F               	movwf	(___fldiv@a+1)^0,c
  5971  001AE4  0E20               	movlw	32
  5972  001AE6  6E30               	movwf	(___fldiv@a+2)^0,c
  5973  001AE8  0E41               	movlw	65
  5974  001AEA  6E31               	movwf	(___fldiv@a+3)^0,c
  5975  001AEC  EC30  F016         	call	___fldiv	;wreg free
  5976  001AF0  C02A  F0C3         	movff	?___fldiv,efgtoa@u
  5977  001AF4  C02B  F0C4         	movff	?___fldiv+1,efgtoa@u+1
  5978  001AF8  C02C  F0C5         	movff	?___fldiv+2,efgtoa@u+2
  5979  001AFC  C02D  F0C6         	movff	?___fldiv+3,efgtoa@u+3
  5980  001B00                     
  5981                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  5982  001B00  0100               	movlb	0	; () banked
  5983  001B02  079F               	decf	efgtoa@ne& (0+255),f,b
  5984  001B04  A0D8               	btfss	status,0,c
  5985  001B06  07A0               	decf	(efgtoa@ne+1)& (0+255),f,b
  5986  001B08                     
  5987                           ; BSR set to: 0
  5988                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  5989  001B08  4BB9               	infsnz	efgtoa@i& (0+255),f,b
  5990  001B0A  2BBA               	incf	(efgtoa@i+1)& (0+255),f,b
  5991  001B0C                     l8739:
  5992                           
  5993                           ; BSR set to: 0
  5994                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5995  001B0C  51A1               	movf	efgtoa@m& (0+255),w,b
  5996  001B0E  5DB9               	subwf	efgtoa@i& (0+255),w,b
  5997  001B10  51BA               	movf	(efgtoa@i+1)& (0+255),w,b
  5998  001B12  0A80               	xorlw	128
  5999  001B14  6F8A               	movwf	??_efgtoa& (0+255),b
  6000  001B16  51A2               	movf	(efgtoa@m+1)& (0+255),w,b
  6001  001B18  0A80               	xorlw	128
  6002  001B1A  598A               	subwfb	??_efgtoa& (0+255),w,b
  6003  001B1C  B0D8               	btfsc	status,0,c
  6004  001B1E  EF93  F00D         	goto	u9661
  6005  001B22  EF95  F00D         	goto	u9660
  6006  001B26                     u9661:
  6007  001B26  EFA3  F00D         	goto	l8743
  6008  001B2A                     u9660:
  6009  001B2A                     
  6010                           ; BSR set to: 0
  6011  001B2A  BFC2               	btfsc	(efgtoa@n+1)& (0+255),7,b
  6012  001B2C  EFA1  F00D         	goto	u9671
  6013  001B30  51C2               	movf	(efgtoa@n+1)& (0+255),w,b
  6014  001B32  E109               	bnz	u9670
  6015  001B34  0E4B               	movlw	75
  6016  001B36  5DC1               	subwf	efgtoa@n& (0+255),w,b
  6017  001B38  A0D8               	btfss	status,0,c
  6018  001B3A  EFA1  F00D         	goto	u9671
  6019  001B3E  EFA3  F00D         	goto	u9670
  6020  001B42                     u9671:
  6021  001B42  EF98  F00C         	goto	l8691
  6022  001B46                     u9670:
  6023  001B46                     l8743:
  6024                           
  6025                           ; BSR set to: 0
  6026                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  6027  001B46  519D               	movf	efgtoa@pp& (0+255),w,b
  6028  001B48  119E               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  6029  001B4A  A4D8               	btfss	status,2,c
  6030  001B4C  EFAA  F00D         	goto	u9681
  6031  001B50  EFAC  F00D         	goto	u9680
  6032  001B54                     u9681:
  6033  001B54  EFBD  F00D         	goto	l8751
  6034  001B58                     u9680:
  6035  001B58                     
  6036                           ; BSR set to: 0
  6037  001B58  A83E               	btfss	_flags^0,4,c
  6038  001B5A  EFB1  F00D         	goto	u9691
  6039  001B5E  EFB3  F00D         	goto	u9690
  6040  001B62                     u9691:
  6041  001B62  EFBD  F00D         	goto	l8751
  6042  001B66                     u9690:
  6043  001B66                     
  6044                           ; BSR set to: 0
  6045                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  6046  001B66  0E3E               	movlw	low _dbuf
  6047  001B68  25C1               	addwf	efgtoa@n& (0+255),w,b
  6048  001B6A  6ED9               	movwf	fsr2l,c
  6049  001B6C  0E01               	movlw	high _dbuf
  6050  001B6E  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6051  001B70  6EDA               	movwf	fsr2h,c
  6052  001B72  0E2E               	movlw	46
  6053  001B74  6EDF               	movwf	indf2,c
  6054  001B76                     
  6055                           ; BSR set to: 0
  6056  001B76  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  6057  001B78  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  6058  001B7A                     l8751:
  6059                           
  6060                           ; BSR set to: 0
  6061                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  6062  001B7A  0E3E               	movlw	low _dbuf
  6063  001B7C  25C1               	addwf	efgtoa@n& (0+255),w,b
  6064  001B7E  6ED9               	movwf	fsr2l,c
  6065  001B80  0E01               	movlw	high _dbuf
  6066  001B82  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6067  001B84  6EDA               	movwf	fsr2h,c
  6068  001B86  0E00               	movlw	0
  6069  001B88  6EDF               	movwf	indf2,c
  6070  001B8A                     
  6071                           ; BSR set to: 0
  6072                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  6073  001B8A  0E65               	movlw	101
  6074  001B8C  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  6075  001B8E  A4D8               	btfss	status,2,c
  6076  001B90  EFCC  F00D         	goto	u9701
  6077  001B94  EFCE  F00D         	goto	u9700
  6078  001B98                     u9701:
  6079  001B98  EFA0  F00E         	goto	l8813
  6080  001B9C                     u9700:
  6081  001B9C                     
  6082                           ; BSR set to: 0
  6083                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  6084  001B9C  0E00               	movlw	0
  6085  001B9E  6FBA               	movwf	(efgtoa@i+1)& (0+255),b
  6086  001BA0  0E4F               	movlw	79
  6087  001BA2  6FB9               	movwf	efgtoa@i& (0+255),b
  6088  001BA4                     
  6089                           ; BSR set to: 0
  6090                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  6091  001BA4  0E3E               	movlw	low _dbuf
  6092  001BA6  25B9               	addwf	efgtoa@i& (0+255),w,b
  6093  001BA8  6ED9               	movwf	fsr2l,c
  6094  001BAA  0E01               	movlw	high _dbuf
  6095  001BAC  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6096  001BAE  6EDA               	movwf	fsr2h,c
  6097  001BB0  0E00               	movlw	0
  6098  001BB2  6EDF               	movwf	indf2,c
  6099  001BB4                     
  6100                           ; BSR set to: 0
  6101                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  6102  001BB4  0E00               	movlw	0
  6103  001BB6  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  6104  001BB8  0E00               	movlw	0
  6105  001BBA  6FA9               	movwf	efgtoa@sign& (0+255),b
  6106  001BBC                     
  6107                           ; BSR set to: 0
  6108                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  6109  001BBC  BFC0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  6110  001BBE  EFE5  F00D         	goto	u9710
  6111  001BC2  EFE3  F00D         	goto	u9711
  6112  001BC6                     u9711:
  6113  001BC6  EFED  F00D         	goto	l8767
  6114  001BCA                     u9710:
  6115  001BCA                     
  6116                           ; BSR set to: 0
  6117                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  6118  001BCA  0E00               	movlw	0
  6119  001BCC  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  6120  001BCE  0E01               	movlw	1
  6121  001BD0  6FA9               	movwf	efgtoa@sign& (0+255),b
  6122  001BD2                     
  6123                           ; BSR set to: 0
  6124                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  6125  001BD2  6DBF               	negf	efgtoa@e& (0+255),b
  6126  001BD4  1FC0               	comf	(efgtoa@e+1)& (0+255),f,b
  6127  001BD6  B0D8               	btfsc	status,0,c
  6128  001BD8  2BC0               	incf	(efgtoa@e+1)& (0+255),f,b
  6129  001BDA                     l8767:
  6130                           
  6131                           ; BSR set to: 0
  6132                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  6133  001BDA  0E00               	movlw	0
  6134  001BDC  6FAC               	movwf	(efgtoa@p+1)& (0+255),b
  6135  001BDE  0E02               	movlw	2
  6136  001BE0  6FAB               	movwf	efgtoa@p& (0+255),b
  6137                           
  6138                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  6139  001BE2  EF1E  F00E         	goto	l8779
  6140  001BE6                     l8769:
  6141                           
  6142                           ; BSR set to: 0
  6143                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  6144  001BE6  07B9               	decf	efgtoa@i& (0+255),f,b
  6145  001BE8  A0D8               	btfss	status,0,c
  6146  001BEA  07BA               	decf	(efgtoa@i+1)& (0+255),f,b
  6147  001BEC                     
  6148                           ; BSR set to: 0
  6149                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  6150  001BEC  0E3E               	movlw	low _dbuf
  6151  001BEE  25B9               	addwf	efgtoa@i& (0+255),w,b
  6152  001BF0  6ED9               	movwf	fsr2l,c
  6153  001BF2  0E01               	movlw	high _dbuf
  6154  001BF4  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6155  001BF6  6EDA               	movwf	fsr2h,c
  6156  001BF8  C0BF  F014         	movff	efgtoa@e,___awmod@dividend
  6157  001BFC  C0C0  F015         	movff	efgtoa@e+1,___awmod@dividend+1
  6158  001C00  0E00               	movlw	0
  6159  001C02  6E17               	movwf	(___awmod@divisor+1)^0,c
  6160  001C04  0E0A               	movlw	10
  6161  001C06  6E16               	movwf	___awmod@divisor^0,c
  6162  001C08  EC4F  F029         	call	___awmod	;wreg free
  6163  001C0C  5014               	movf	?___awmod^0,w,c
  6164  001C0E  0F30               	addlw	48
  6165  001C10  6EDF               	movwf	indf2,c
  6166  001C12                     
  6167                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  6168  001C12  C0BF  F014         	movff	efgtoa@e,___awdiv@dividend
  6169  001C16  C0C0  F015         	movff	efgtoa@e+1,___awdiv@dividend+1
  6170  001C1A  0E00               	movlw	0
  6171  001C1C  6E17               	movwf	(___awdiv@divisor+1)^0,c
  6172  001C1E  0E0A               	movlw	10
  6173  001C20  6E16               	movwf	___awdiv@divisor^0,c
  6174  001C22  ECCD  F027         	call	___awdiv	;wreg free
  6175  001C26  C014  F0BF         	movff	?___awdiv,efgtoa@e
  6176  001C2A  C015  F0C0         	movff	?___awdiv+1,efgtoa@e+1
  6177  001C2E                     
  6178                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  6179  001C2E  0100               	movlb	0	; () banked
  6180  001C30  07AB               	decf	efgtoa@p& (0+255),f,b
  6181  001C32  A0D8               	btfss	status,0,c
  6182  001C34  07AC               	decf	(efgtoa@p+1)& (0+255),f,b
  6183  001C36                     
  6184                           ; BSR set to: 0
  6185                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  6186  001C36  07AD               	decf	efgtoa@w& (0+255),f,b
  6187  001C38  A0D8               	btfss	status,0,c
  6188  001C3A  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  6189  001C3C                     l8779:
  6190                           
  6191                           ; BSR set to: 0
  6192                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  6193  001C3C  51BF               	movf	efgtoa@e& (0+255),w,b
  6194  001C3E  11C0               	iorwf	(efgtoa@e+1)& (0+255),w,b
  6195  001C40  A4D8               	btfss	status,2,c
  6196  001C42  EF25  F00E         	goto	u9721
  6197  001C46  EF27  F00E         	goto	u9720
  6198  001C4A                     u9721:
  6199  001C4A  EFF3  F00D         	goto	l8769
  6200  001C4E                     u9720:
  6201  001C4E                     
  6202                           ; BSR set to: 0
  6203  001C4E  BFAC               	btfsc	(efgtoa@p+1)& (0+255),7,b
  6204  001C50  EF34  F00E         	goto	u9730
  6205  001C54  51AC               	movf	(efgtoa@p+1)& (0+255),w,b
  6206  001C56  E106               	bnz	u9731
  6207  001C58  05AB               	decf	efgtoa@p& (0+255),w,b
  6208  001C5A  B0D8               	btfsc	status,0,c
  6209  001C5C  EF32  F00E         	goto	u9731
  6210  001C60  EF34  F00E         	goto	u9730
  6211  001C64                     u9731:
  6212  001C64  EFF3  F00D         	goto	l8769
  6213  001C68                     u9730:
  6214  001C68                     
  6215                           ; BSR set to: 0
  6216                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  6217  001C68  07B9               	decf	efgtoa@i& (0+255),f,b
  6218  001C6A  A0D8               	btfss	status,0,c
  6219  001C6C  07BA               	decf	(efgtoa@i+1)& (0+255),f,b
  6220  001C6E                     
  6221                           ; BSR set to: 0
  6222                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  6223  001C6E  51A9               	movf	efgtoa@sign& (0+255),w,b
  6224  001C70  11AA               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  6225  001C72  A4D8               	btfss	status,2,c
  6226  001C74  EF3E  F00E         	goto	u9741
  6227  001C78  EF40  F00E         	goto	u9740
  6228  001C7C                     u9741:
  6229  001C7C  EF46  F00E         	goto	l8789
  6230  001C80                     u9740:
  6231  001C80                     
  6232                           ; BSR set to: 0
  6233  001C80  0E00               	movlw	0
  6234  001C82  6F96               	movwf	(_efgtoa$3572+1)& (0+255),b
  6235  001C84  0E2B               	movlw	43
  6236  001C86  6F95               	movwf	_efgtoa$3572& (0+255),b
  6237  001C88  EF4A  F00E         	goto	l8791
  6238  001C8C                     l8789:
  6239                           
  6240                           ; BSR set to: 0
  6241  001C8C  0E00               	movlw	0
  6242  001C8E  6F96               	movwf	(_efgtoa$3572+1)& (0+255),b
  6243  001C90  0E2D               	movlw	45
  6244  001C92  6F95               	movwf	_efgtoa$3572& (0+255),b
  6245  001C94                     l8791:
  6246                           
  6247                           ; BSR set to: 0
  6248  001C94  0E3E               	movlw	low _dbuf
  6249  001C96  25B9               	addwf	efgtoa@i& (0+255),w,b
  6250  001C98  6ED9               	movwf	fsr2l,c
  6251  001C9A  0E01               	movlw	high _dbuf
  6252  001C9C  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6253  001C9E  6EDA               	movwf	fsr2h,c
  6254  001CA0  0060  F257  FFDF   	movff	_efgtoa$3572,indf2
  6255  001CA6                     
  6256                           ; BSR set to: 0
  6257                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  6258  001CA6  07AD               	decf	efgtoa@w& (0+255),f,b
  6259  001CA8  A0D8               	btfss	status,0,c
  6260  001CAA  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  6261  001CAC                     
  6262                           ; BSR set to: 0
  6263                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  6264  001CAC  07B9               	decf	efgtoa@i& (0+255),f,b
  6265  001CAE  A0D8               	btfss	status,0,c
  6266  001CB0  07BA               	decf	(efgtoa@i+1)& (0+255),f,b
  6267  001CB2                     
  6268                           ; BSR set to: 0
  6269  001CB2  0EBF               	movlw	191
  6270  001CB4  6F8A               	movwf	??_efgtoa& (0+255),b
  6271  001CB6  0EFF               	movlw	255
  6272  001CB8  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  6273  001CBA  5189               	movf	efgtoa@c& (0+255),w,b
  6274  001CBC  6F8C               	movwf	(??_efgtoa+2)& (0+255),b
  6275  001CBE  6B8D               	clrf	(??_efgtoa+3)& (0+255),b
  6276  001CC0  518A               	movf	??_efgtoa& (0+255),w,b
  6277  001CC2  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  6278  001CC4  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  6279  001CC6  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  6280  001CC8  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  6281  001CCA  E10A               	bnz	u9750
  6282  001CCC  0E1A               	movlw	26
  6283  001CCE  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  6284  001CD0  A0D8               	btfss	status,0,c
  6285  001CD2  EF6D  F00E         	goto	u9751
  6286  001CD6  EF70  F00E         	goto	u9750
  6287  001CDA                     u9751:
  6288  001CDA  0E01               	movlw	1
  6289  001CDC  EF71  F00E         	goto	u9760
  6290  001CE0                     u9750:
  6291  001CE0  0E00               	movlw	0
  6292  001CE2                     u9760:
  6293  001CE2  6F99               	movwf	_efgtoa$3574& (0+255),b
  6294  001CE4  6B9A               	clrf	(_efgtoa$3574+1)& (0+255),b
  6295  001CE6                     
  6296                           ; BSR set to: 0
  6297  001CE6  5199               	movf	_efgtoa$3574& (0+255),w,b
  6298  001CE8  119A               	iorwf	(_efgtoa$3574+1)& (0+255),w,b
  6299  001CEA  A4D8               	btfss	status,2,c
  6300  001CEC  EF7A  F00E         	goto	u9771
  6301  001CF0  EF7C  F00E         	goto	u9770
  6302  001CF4                     u9771:
  6303  001CF4  EF82  F00E         	goto	l8805
  6304  001CF8                     u9770:
  6305  001CF8                     
  6306                           ; BSR set to: 0
  6307  001CF8  0E00               	movlw	0
  6308  001CFA  6F98               	movwf	(_efgtoa$3573+1)& (0+255),b
  6309  001CFC  0E65               	movlw	101
  6310  001CFE  6F97               	movwf	_efgtoa$3573& (0+255),b
  6311  001D00  EF86  F00E         	goto	l8807
  6312  001D04                     l8805:
  6313                           
  6314                           ; BSR set to: 0
  6315  001D04  0E00               	movlw	0
  6316  001D06  6F98               	movwf	(_efgtoa$3573+1)& (0+255),b
  6317  001D08  0E45               	movlw	69
  6318  001D0A  6F97               	movwf	_efgtoa$3573& (0+255),b
  6319  001D0C                     l8807:
  6320                           
  6321                           ; BSR set to: 0
  6322  001D0C  0E3E               	movlw	low _dbuf
  6323  001D0E  25B9               	addwf	efgtoa@i& (0+255),w,b
  6324  001D10  6ED9               	movwf	fsr2l,c
  6325  001D12  0E01               	movlw	high _dbuf
  6326  001D14  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6327  001D16  6EDA               	movwf	fsr2h,c
  6328  001D18  0060  F25F  FFDF   	movff	_efgtoa$3573,indf2
  6329  001D1E                     
  6330                           ; BSR set to: 0
  6331                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  6332  001D1E  07AD               	decf	efgtoa@w& (0+255),f,b
  6333  001D20  A0D8               	btfss	status,0,c
  6334  001D22  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  6335  001D24                     
  6336                           ; BSR set to: 0
  6337                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  6338  001D24  0E3E               	movlw	low _dbuf
  6339  001D26  25C1               	addwf	efgtoa@n& (0+255),w,b
  6340  001D28  6E14               	movwf	strcpy@dest^0,c
  6341  001D2A  0E01               	movlw	high _dbuf
  6342  001D2C  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6343  001D2E  6E15               	movwf	(strcpy@dest+1)^0,c
  6344  001D30  0E3E               	movlw	low _dbuf
  6345  001D32  25B9               	addwf	efgtoa@i& (0+255),w,b
  6346  001D34  6E16               	movwf	strcpy@src^0,c
  6347  001D36  0E01               	movlw	high _dbuf
  6348  001D38  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6349  001D3A  6E17               	movwf	(strcpy@src+1)^0,c
  6350  001D3C  ECB4  F02B         	call	_strcpy	;wreg free
  6351  001D40                     l8813:
  6352                           
  6353                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 524:     return p
      +                          ad(fp, &dbuf[0], w);
  6354  001D40  C083  F026         	movff	efgtoa@fp,pad@fp
  6355  001D44  C084  F027         	movff	efgtoa@fp+1,pad@fp+1
  6356  001D48  0E3E               	movlw	low _dbuf
  6357  001D4A  6E28               	movwf	pad@buf^0,c
  6358  001D4C  0E01               	movlw	high _dbuf
  6359  001D4E  6E29               	movwf	(pad@buf+1)^0,c
  6360  001D50  C0AD  F02A         	movff	efgtoa@w,pad@p
  6361  001D54  C0AE  F02B         	movff	efgtoa@w+1,pad@p+1
  6362  001D58  EC2F  F028         	call	_pad	;wreg free
  6363  001D5C  C026  F083         	movff	?_pad,?_efgtoa
  6364  001D60  C027  F084         	movff	?_pad+1,?_efgtoa+1
  6365  001D64                     l2163:
  6366  001D64  0012               	return		;funcret
  6367  001D66                     __end_of_efgtoa:
  6368                           	callstack 0
  6369                           
  6370 ;; *************** function _tolower *****************
  6371 ;; Defined at:
  6372 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  6373 ;; Parameters:    Size  Location     Type
  6374 ;;  c               2   25[COMRAM] int 
  6375 ;; Auto vars:     Size  Location     Type
  6376 ;;		None
  6377 ;; Return value:  Size  Location     Type
  6378 ;;                  2   25[COMRAM] int 
  6379 ;; Registers used:
  6380 ;;		wreg, status,2, status,0
  6381 ;; Tracked objects:
  6382 ;;		On entry : 0/0
  6383 ;;		On exit  : 0/0
  6384 ;;		Unchanged: 0/0
  6385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6386 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6387 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6388 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6389 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6390 ;;Total ram usage:        8 bytes
  6391 ;; Hardware stack levels used: 1
  6392 ;; Hardware stack levels required when called: 9
  6393 ;; This function calls:
  6394 ;;		_isupper
  6395 ;; This function is called by:
  6396 ;;		_efgtoa
  6397 ;;		_vfpfcnvrt
  6398 ;; This function uses a non-reentrant model
  6399 ;;
  6400                           
  6401                           	psect	text16
  6402  0057D2                     __ptext16:
  6403                           	callstack 0
  6404  0057D2                     _tolower:
  6405                           	callstack 16
  6406  0057D2  0EBF               	movlw	191
  6407  0057D4  6E1C               	movwf	??_tolower^0,c
  6408  0057D6  0EFF               	movlw	255
  6409  0057D8  6E1D               	movwf	(??_tolower+1)^0,c
  6410  0057DA  C01A  F01E         	movff	tolower@c,??_tolower+2
  6411  0057DE  C01B  F01F         	movff	tolower@c+1,??_tolower+3
  6412  0057E2  501C               	movf	??_tolower^0,w,c
  6413  0057E4  261E               	addwf	(??_tolower+2)^0,f,c
  6414  0057E6  501D               	movf	(??_tolower+1)^0,w,c
  6415  0057E8  221F               	addwfc	(??_tolower+3)^0,f,c
  6416  0057EA  501F               	movf	(??_tolower+3)^0,w,c
  6417  0057EC  E10A               	bnz	u8960
  6418  0057EE  0E1A               	movlw	26
  6419  0057F0  5C1E               	subwf	(??_tolower+2)^0,w,c
  6420  0057F2  A0D8               	btfss	status,0,c
  6421  0057F4  EFFE  F02B         	goto	u8961
  6422  0057F8  EF01  F02C         	goto	u8960
  6423  0057FC                     u8961:
  6424  0057FC  0E01               	movlw	1
  6425  0057FE  EF02  F02C         	goto	u8970
  6426  005802                     u8960:
  6427  005802  0E00               	movlw	0
  6428  005804                     u8970:
  6429  005804  6E20               	movwf	_tolower$3693^0,c
  6430  005806  6A21               	clrf	(_tolower$3693+1)^0,c
  6431  005808  5020               	movf	_tolower$3693^0,w,c
  6432  00580A  1021               	iorwf	(_tolower$3693+1)^0,w,c
  6433  00580C  B4D8               	btfsc	status,2,c
  6434  00580E  EF0B  F02C         	goto	u8981
  6435  005812  EF0D  F02C         	goto	u8980
  6436  005816                     u8981:
  6437  005816  EF14  F02C         	goto	l2361
  6438  00581A                     u8980:
  6439  00581A  0E20               	movlw	32
  6440  00581C  101A               	iorwf	tolower@c^0,w,c
  6441  00581E  6E1A               	movwf	?_tolower^0,c
  6442  005820  501B               	movf	(tolower@c+1)^0,w,c
  6443  005822  6E1B               	movwf	(?_tolower+1)^0,c
  6444  005824  EF18  F02C         	goto	l2366
  6445  005828                     l2361:
  6446  005828  C01A  F01A         	movff	tolower@c,?_tolower
  6447  00582C  C01B  F01B         	movff	tolower@c+1,?_tolower+1
  6448  005830                     l2366:
  6449  005830  0012               	return		;funcret
  6450  005832                     __end_of_tolower:
  6451                           	callstack 0
  6452                           
  6453 ;; *************** function _isupper *****************
  6454 ;; Defined at:
  6455 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  6456 ;; Parameters:    Size  Location     Type
  6457 ;;  c               2   19[COMRAM] int 
  6458 ;; Auto vars:     Size  Location     Type
  6459 ;;		None
  6460 ;; Return value:  Size  Location     Type
  6461 ;;                  2   19[COMRAM] int 
  6462 ;; Registers used:
  6463 ;;		wreg, status,2, status,0
  6464 ;; Tracked objects:
  6465 ;;		On entry : 0/0
  6466 ;;		On exit  : 0/0
  6467 ;;		Unchanged: 0/0
  6468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6469 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6471 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6472 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6473 ;;Total ram usage:        6 bytes
  6474 ;; Hardware stack levels used: 1
  6475 ;; Hardware stack levels required when called: 8
  6476 ;; This function calls:
  6477 ;;		Nothing
  6478 ;; This function is called by:
  6479 ;;		_efgtoa
  6480 ;;		_vfpfcnvrt
  6481 ;;		_tolower
  6482 ;; This function uses a non-reentrant model
  6483 ;;
  6484                           
  6485                           	psect	text17
  6486  005C6A                     __ptext17:
  6487                           	callstack 0
  6488  005C6A                     _isupper:
  6489                           	callstack 16
  6490  005C6A  0EBF               	movlw	191
  6491  005C6C  6E16               	movwf	??_isupper^0,c
  6492  005C6E  0EFF               	movlw	255
  6493  005C70  6E17               	movwf	(??_isupper+1)^0,c
  6494  005C72  C014  F018         	movff	isupper@c,??_isupper+2
  6495  005C76  C015  F019         	movff	isupper@c+1,??_isupper+3
  6496  005C7A  5016               	movf	??_isupper^0,w,c
  6497  005C7C  2618               	addwf	(??_isupper+2)^0,f,c
  6498  005C7E  5017               	movf	(??_isupper+1)^0,w,c
  6499  005C80  2219               	addwfc	(??_isupper+3)^0,f,c
  6500  005C82  5019               	movf	(??_isupper+3)^0,w,c
  6501  005C84  E10A               	bnz	u7900
  6502  005C86  0E1A               	movlw	26
  6503  005C88  5C18               	subwf	(??_isupper+2)^0,w,c
  6504  005C8A  A0D8               	btfss	status,0,c
  6505  005C8C  EF4A  F02E         	goto	u7901
  6506  005C90  EF4D  F02E         	goto	u7900
  6507  005C94                     u7901:
  6508  005C94  0E01               	movlw	1
  6509  005C96  EF4E  F02E         	goto	u7910
  6510  005C9A                     u7900:
  6511  005C9A  0E00               	movlw	0
  6512  005C9C                     u7910:
  6513  005C9C  6E14               	movwf	?_isupper^0,c
  6514  005C9E  6A15               	clrf	(?_isupper+1)^0,c
  6515  005CA0  0012               	return		;funcret
  6516  005CA2                     __end_of_isupper:
  6517                           	callstack 0
  6518                           
  6519 ;; *************** function _strcpy *****************
  6520 ;; Defined at:
  6521 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  6522 ;; Parameters:    Size  Location     Type
  6523 ;;  dest            2   19[COMRAM] PTR unsigned char 
  6524 ;;		 -> dbuf(80), 
  6525 ;;  src             2   21[COMRAM] PTR const unsigned char 
  6526 ;;		 -> STR_15(4), STR_14(4), STR_11(4), STR_10(4), 
  6527 ;;		 -> dbuf(80), 
  6528 ;; Auto vars:     Size  Location     Type
  6529 ;;  d               2   27[COMRAM] PTR unsigned char 
  6530 ;;		 -> dbuf(80), 
  6531 ;;  s               2   25[COMRAM] PTR const unsigned char 
  6532 ;;		 -> STR_15(4), STR_14(4), STR_11(4), STR_10(4), 
  6533 ;;		 -> dbuf(80), 
  6534 ;; Return value:  Size  Location     Type
  6535 ;;                  2   19[COMRAM] PTR unsigned char 
  6536 ;; Registers used:
  6537 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6538 ;; Tracked objects:
  6539 ;;		On entry : 0/0
  6540 ;;		On exit  : 0/0
  6541 ;;		Unchanged: 0/0
  6542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6543 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6544 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6545 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6546 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6547 ;;Total ram usage:       10 bytes
  6548 ;; Hardware stack levels used: 1
  6549 ;; Hardware stack levels required when called: 8
  6550 ;; This function calls:
  6551 ;;		Nothing
  6552 ;; This function is called by:
  6553 ;;		_efgtoa
  6554 ;; This function uses a non-reentrant model
  6555 ;;
  6556                           
  6557                           	psect	text18
  6558  005768                     __ptext18:
  6559                           	callstack 0
  6560  005768                     _strcpy:
  6561                           	callstack 16
  6562  005768  C016  F01A         	movff	strcpy@src,strcpy@s
  6563  00576C  C017  F01B         	movff	strcpy@src+1,strcpy@s+1
  6564  005770  C014  F01C         	movff	strcpy@dest,strcpy@d
  6565  005774  C015  F01D         	movff	strcpy@dest+1,strcpy@d+1
  6566  005778                     l8407:
  6567  005778  501A               	movf	strcpy@s^0,w,c
  6568  00577A  6E18               	movwf	??_strcpy^0,c
  6569  00577C  501B               	movf	(strcpy@s+1)^0,w,c
  6570  00577E  6E19               	movwf	(??_strcpy+1)^0,c
  6571  005780  4A1A               	infsnz	strcpy@s^0,f,c
  6572  005782  2A1B               	incf	(strcpy@s+1)^0,f,c
  6573  005784  0060  F063  FFF6   	movff	??_strcpy,tblptrl
  6574  00578A  0060  F067  FFF7   	movff	??_strcpy+1,tblptrh
  6575  005790  0E00               	movlw	low (__smallconst shr (0+16))
  6576  005792  6EF8               	movwf	tblptru,c
  6577  005794  0060  F073  FFD9   	movff	strcpy@d,fsr2l
  6578  00579A  0060  F077  FFDA   	movff	strcpy@d+1,fsr2h
  6579  0057A0  4A1C               	infsnz	strcpy@d^0,f,c
  6580  0057A2  2A1D               	incf	(strcpy@d+1)^0,f,c
  6581  0057A4  0E0F               	movlw	(high __ramtop+-1)
  6582  0057A6  64F7               	cpfsgt	tblptrh,c
  6583  0057A8  D003               	bra	u8947
  6584  0057AA  0008               	tblrd		*
  6585  0057AC  50F5               	movf	tablat,w,c
  6586  0057AE  D007               	bra	u8940
  6587  0057B0                     u8947:
  6588  0057B0  006F FFDB FFE1     	movff	tblptrl,fsr1l
  6589  0057B6  006F FFDF FFE2     	movff	tblptrh,fsr1h
  6590  0057BC  50E7               	movf	indf1,w,c
  6591  0057BE                     u8940:
  6592  0057BE  6EDF               	movwf	indf2,c
  6593  0057C0  50DF               	movf	indf2,w,c
  6594  0057C2  A4D8               	btfss	status,2,c
  6595  0057C4  EFE6  F02B         	goto	u8951
  6596  0057C8  EFE8  F02B         	goto	u8950
  6597  0057CC                     u8951:
  6598  0057CC  EFBC  F02B         	goto	l8407
  6599  0057D0                     u8950:
  6600  0057D0  0012               	return		;funcret
  6601  0057D2                     __end_of_strcpy:
  6602                           	callstack 0
  6603                           
  6604 ;; *************** function _floorf *****************
  6605 ;; Defined at:
  6606 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
  6607 ;; Parameters:    Size  Location     Type
  6608 ;;  x               4   53[COMRAM] float 
  6609 ;; Auto vars:     Size  Location     Type
  6610 ;;  u               4   25[BANK0 ] struct .
  6611 ;;  m               4   19[BANK0 ] unsigned long 
  6612 ;;  e               2   23[BANK0 ] int 
  6613 ;; Return value:  Size  Location     Type
  6614 ;;                  4   53[COMRAM] float 
  6615 ;; Registers used:
  6616 ;;		wreg, status,2, status,0
  6617 ;; Tracked objects:
  6618 ;;		On entry : 0/0
  6619 ;;		On exit  : 0/0
  6620 ;;		Unchanged: 0/0
  6621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6622 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6623 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6624 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6625 ;;      Totals:         4      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6626 ;;Total ram usage:       20 bytes
  6627 ;; Hardware stack levels used: 1
  6628 ;; Hardware stack levels required when called: 8
  6629 ;; This function calls:
  6630 ;;		Nothing
  6631 ;; This function is called by:
  6632 ;;		_efgtoa
  6633 ;; This function uses a non-reentrant model
  6634 ;;
  6635                           
  6636                           	psect	text19
  6637  003520                     __ptext19:
  6638                           	callstack 0
  6639  003520                     _floorf:
  6640                           	callstack 16
  6641  003520  C118  F079         	movff	floorf@F527,floorf@u
  6642  003524  C119  F07A         	movff	floorf@F527+1,floorf@u+1
  6643  003528  C11A  F07B         	movff	floorf@F527+2,floorf@u+2
  6644  00352C  C11B  F07C         	movff	floorf@F527+3,floorf@u+3
  6645  003530  C036  F079         	movff	floorf@x,floorf@u
  6646  003534  C037  F07A         	movff	floorf@x+1,floorf@u+1
  6647  003538  C038  F07B         	movff	floorf@x+2,floorf@u+2
  6648  00353C  C039  F07C         	movff	floorf@x+3,floorf@u+3
  6649  003540  0E81               	movlw	129
  6650  003542  0100               	movlb	0	; () banked
  6651  003544  6F6D               	movwf	??_floorf& (0+255),b
  6652  003546  0EFF               	movlw	255
  6653  003548  6F6E               	movwf	(??_floorf+1)& (0+255),b
  6654  00354A  C079  F06F         	movff	floorf@u,??_floorf+2
  6655  00354E  C07A  F070         	movff	floorf@u+1,??_floorf+3
  6656  003552  C07B  F071         	movff	floorf@u+2,??_floorf+4
  6657  003556  C07C  F072         	movff	floorf@u+3,??_floorf+5
  6658  00355A  0E18               	movlw	24
  6659  00355C  EFB5  F01A         	goto	u8990
  6660  003560                     u8995:
  6661  003560  90D8               	bcf	status,0,c
  6662  003562  3372               	rrcf	(??_floorf+5)& (0+255),f,b
  6663  003564  3371               	rrcf	(??_floorf+4)& (0+255),f,b
  6664  003566  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  6665  003568  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  6666  00356A                     u8990:
  6667  00356A  2EE8               	decfsz	wreg,f,c
  6668  00356C  EFB0  F01A         	goto	u8995
  6669  003570  516F               	movf	(??_floorf+2)& (0+255),w,b
  6670  003572  256D               	addwf	??_floorf& (0+255),w,b
  6671  003574  6F77               	movwf	floorf@e& (0+255),b
  6672  003576  0E00               	movlw	0
  6673  003578  216E               	addwfc	(??_floorf+1)& (0+255),w,b
  6674  00357A  6F78               	movwf	(floorf@e+1)& (0+255),b
  6675  00357C  BF78               	btfsc	(floorf@e+1)& (0+255),7,b
  6676  00357E  EFCA  F01A         	goto	u9001
  6677  003582  5178               	movf	(floorf@e+1)& (0+255),w,b
  6678  003584  E109               	bnz	u9000
  6679  003586  0E17               	movlw	23
  6680  003588  5D77               	subwf	floorf@e& (0+255),w,b
  6681  00358A  A0D8               	btfss	status,0,c
  6682  00358C  EFCA  F01A         	goto	u9001
  6683  003590  EFCC  F01A         	goto	u9000
  6684  003594                     u9001:
  6685  003594  EFD6  F01A         	goto	l8425
  6686  003598                     u9000:
  6687  003598                     l8423:
  6688                           
  6689                           ; BSR set to: 0
  6690  003598  C036  F036         	movff	floorf@x,?_floorf
  6691  00359C  C037  F037         	movff	floorf@x+1,?_floorf+1
  6692  0035A0  C038  F038         	movff	floorf@x+2,?_floorf+2
  6693  0035A4  C039  F039         	movff	floorf@x+3,?_floorf+3
  6694  0035A8  EF9A  F01B         	goto	l2302
  6695  0035AC                     l8425:
  6696                           
  6697                           ; BSR set to: 0
  6698  0035AC  BF78               	btfsc	(floorf@e+1)& (0+255),7,b
  6699  0035AE  EFDB  F01A         	goto	u9011
  6700  0035B2  EFDD  F01A         	goto	u9010
  6701  0035B6                     u9011:
  6702  0035B6  EF4E  F01B         	goto	l8435
  6703  0035BA                     u9010:
  6704  0035BA                     
  6705                           ; BSR set to: 0
  6706  0035BA  C077  F06D         	movff	floorf@e,??_floorf
  6707  0035BE  0EFF               	movlw	255
  6708  0035C0  6F6E               	movwf	(??_floorf+1)& (0+255),b
  6709  0035C2  0EFF               	movlw	255
  6710  0035C4  6F6F               	movwf	(??_floorf+2)& (0+255),b
  6711  0035C6  0E7F               	movlw	127
  6712  0035C8  6F70               	movwf	(??_floorf+3)& (0+255),b
  6713  0035CA  0E00               	movlw	0
  6714  0035CC  6F71               	movwf	(??_floorf+4)& (0+255),b
  6715  0035CE                     u9025:
  6716  0035CE  676D               	tstfsz	??_floorf& (0+255),b
  6717  0035D0  EFEC  F01A         	goto	u9026
  6718  0035D4  EFF4  F01A         	goto	u9027
  6719  0035D8                     u9026:
  6720  0035D8  3571               	rlcf	(??_floorf+4)& (0+255),w,b
  6721  0035DA  3371               	rrcf	(??_floorf+4)& (0+255),f,b
  6722  0035DC  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  6723  0035DE  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  6724  0035E0  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  6725  0035E2  2F6D               	decfsz	??_floorf& (0+255),f,b
  6726  0035E4  EFE7  F01A         	goto	u9025
  6727  0035E8                     u9027:
  6728  0035E8  C06E  F073         	movff	??_floorf+1,floorf@m
  6729  0035EC  C06F  F074         	movff	??_floorf+2,floorf@m+1
  6730  0035F0  C070  F075         	movff	??_floorf+3,floorf@m+2
  6731  0035F4  C071  F076         	movff	??_floorf+4,floorf@m+3
  6732  0035F8  0100               	movlb	0	; () banked
  6733  0035FA  5173               	movf	floorf@m& (0+255),w,b
  6734  0035FC  1579               	andwf	floorf@u& (0+255),w,b
  6735  0035FE  6F6D               	movwf	??_floorf& (0+255),b
  6736  003600  5174               	movf	(floorf@m+1)& (0+255),w,b
  6737  003602  157A               	andwf	(floorf@u+1)& (0+255),w,b
  6738  003604  6F6E               	movwf	(??_floorf+1)& (0+255),b
  6739  003606  5175               	movf	(floorf@m+2)& (0+255),w,b
  6740  003608  157B               	andwf	(floorf@u+2)& (0+255),w,b
  6741  00360A  6F6F               	movwf	(??_floorf+2)& (0+255),b
  6742  00360C  5176               	movf	(floorf@m+3)& (0+255),w,b
  6743  00360E  157C               	andwf	(floorf@u+3)& (0+255),w,b
  6744  003610  6F70               	movwf	(??_floorf+3)& (0+255),b
  6745  003612  516D               	movf	??_floorf& (0+255),w,b
  6746  003614  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  6747  003616  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  6748  003618  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  6749  00361A  A4D8               	btfss	status,2,c
  6750  00361C  EF12  F01B         	goto	u9031
  6751  003620  EF14  F01B         	goto	u9030
  6752  003624                     u9031:
  6753  003624  EF16  F01B         	goto	l8431
  6754  003628                     u9030:
  6755  003628  EFCC  F01A         	goto	l8423
  6756  00362C                     l8431:
  6757                           
  6758                           ; BSR set to: 0
  6759  00362C  C079  F06D         	movff	floorf@u,??_floorf
  6760  003630  C07A  F06E         	movff	floorf@u+1,??_floorf+1
  6761  003634  C07B  F06F         	movff	floorf@u+2,??_floorf+2
  6762  003638  C07C  F070         	movff	floorf@u+3,??_floorf+3
  6763  00363C  0E20               	movlw	32
  6764  00363E  EF26  F01B         	goto	u9040
  6765  003642                     u9045:
  6766  003642  90D8               	bcf	status,0,c
  6767  003644  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  6768  003646  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  6769  003648  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  6770  00364A  336D               	rrcf	??_floorf& (0+255),f,b
  6771  00364C                     u9040:
  6772  00364C  2EE8               	decfsz	wreg,f,c
  6773  00364E  EF21  F01B         	goto	u9045
  6774  003652  516D               	movf	??_floorf& (0+255),w,b
  6775  003654  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  6776  003656  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  6777  003658  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  6778  00365A  B4D8               	btfsc	status,2,c
  6779  00365C  EF32  F01B         	goto	u9051
  6780  003660  EF34  F01B         	goto	u9050
  6781  003664                     u9051:
  6782  003664  EF3C  F01B         	goto	l2305
  6783  003668                     u9050:
  6784  003668                     
  6785                           ; BSR set to: 0
  6786  003668  5173               	movf	floorf@m& (0+255),w,b
  6787  00366A  2779               	addwf	floorf@u& (0+255),f,b
  6788  00366C  5174               	movf	(floorf@m+1)& (0+255),w,b
  6789  00366E  237A               	addwfc	(floorf@u+1)& (0+255),f,b
  6790  003670  5175               	movf	(floorf@m+2)& (0+255),w,b
  6791  003672  237B               	addwfc	(floorf@u+2)& (0+255),f,b
  6792  003674  5176               	movf	(floorf@m+3)& (0+255),w,b
  6793  003676  237C               	addwfc	(floorf@u+3)& (0+255),f,b
  6794  003678                     l2305:
  6795                           
  6796                           ; BSR set to: 0
  6797  003678  1D73               	comf	floorf@m& (0+255),w,b
  6798  00367A  6F6D               	movwf	??_floorf& (0+255),b
  6799  00367C  1D74               	comf	(floorf@m+1)& (0+255),w,b
  6800  00367E  6F6E               	movwf	(??_floorf+1)& (0+255),b
  6801  003680  1D75               	comf	(floorf@m+2)& (0+255),w,b
  6802  003682  6F6F               	movwf	(??_floorf+2)& (0+255),b
  6803  003684  1D76               	comf	(floorf@m+3)& (0+255),w,b
  6804  003686  6F70               	movwf	(??_floorf+3)& (0+255),b
  6805  003688  516D               	movf	??_floorf& (0+255),w,b
  6806  00368A  1779               	andwf	floorf@u& (0+255),f,b
  6807  00368C  516E               	movf	(??_floorf+1)& (0+255),w,b
  6808  00368E  177A               	andwf	(floorf@u+1)& (0+255),f,b
  6809  003690  516F               	movf	(??_floorf+2)& (0+255),w,b
  6810  003692  177B               	andwf	(floorf@u+2)& (0+255),f,b
  6811  003694  5170               	movf	(??_floorf+3)& (0+255),w,b
  6812  003696  177C               	andwf	(floorf@u+3)& (0+255),f,b
  6813  003698  EF92  F01B         	goto	l8443
  6814  00369C                     l8435:
  6815                           
  6816                           ; BSR set to: 0
  6817  00369C  C079  F06D         	movff	floorf@u,??_floorf
  6818  0036A0  C07A  F06E         	movff	floorf@u+1,??_floorf+1
  6819  0036A4  C07B  F06F         	movff	floorf@u+2,??_floorf+2
  6820  0036A8  C07C  F070         	movff	floorf@u+3,??_floorf+3
  6821  0036AC  0E20               	movlw	32
  6822  0036AE  EF5E  F01B         	goto	u9060
  6823  0036B2                     u9065:
  6824  0036B2  90D8               	bcf	status,0,c
  6825  0036B4  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  6826  0036B6  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  6827  0036B8  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  6828  0036BA  336D               	rrcf	??_floorf& (0+255),f,b
  6829  0036BC                     u9060:
  6830  0036BC  2EE8               	decfsz	wreg,f,c
  6831  0036BE  EF59  F01B         	goto	u9065
  6832  0036C2  516D               	movf	??_floorf& (0+255),w,b
  6833  0036C4  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  6834  0036C6  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  6835  0036C8  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  6836  0036CA  A4D8               	btfss	status,2,c
  6837  0036CC  EF6A  F01B         	goto	u9071
  6838  0036D0  EF6C  F01B         	goto	u9070
  6839  0036D4                     u9071:
  6840  0036D4  EF76  F01B         	goto	l8439
  6841  0036D8                     u9070:
  6842  0036D8                     
  6843                           ; BSR set to: 0
  6844  0036D8  0E00               	movlw	0
  6845  0036DA  6F79               	movwf	floorf@u& (0+255),b
  6846  0036DC  0E00               	movlw	0
  6847  0036DE  6F7A               	movwf	(floorf@u+1)& (0+255),b
  6848  0036E0  0E00               	movlw	0
  6849  0036E2  6F7B               	movwf	(floorf@u+2)& (0+255),b
  6850  0036E4  0E00               	movlw	0
  6851  0036E6  6F7C               	movwf	(floorf@u+3)& (0+255),b
  6852  0036E8  EF92  F01B         	goto	l8443
  6853  0036EC                     l8439:
  6854                           
  6855                           ; BSR set to: 0
  6856  0036EC  90D8               	bcf	status,0,c
  6857  0036EE  3579               	rlcf	floorf@u& (0+255),w,b
  6858  0036F0  6F6D               	movwf	??_floorf& (0+255),b
  6859  0036F2  357A               	rlcf	(floorf@u+1)& (0+255),w,b
  6860  0036F4  6F6E               	movwf	(??_floorf+1)& (0+255),b
  6861  0036F6  357B               	rlcf	(floorf@u+2)& (0+255),w,b
  6862  0036F8  6F6F               	movwf	(??_floorf+2)& (0+255),b
  6863  0036FA  357C               	rlcf	(floorf@u+3)& (0+255),w,b
  6864  0036FC  6F70               	movwf	(??_floorf+3)& (0+255),b
  6865  0036FE  516D               	movf	??_floorf& (0+255),w,b
  6866  003700  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  6867  003702  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  6868  003704  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  6869  003706  B4D8               	btfsc	status,2,c
  6870  003708  EF88  F01B         	goto	u9081
  6871  00370C  EF8A  F01B         	goto	u9080
  6872  003710                     u9081:
  6873  003710  EF92  F01B         	goto	l8443
  6874  003714                     u9080:
  6875  003714                     
  6876                           ; BSR set to: 0
  6877  003714  0E00               	movlw	0
  6878  003716  6F79               	movwf	floorf@u& (0+255),b
  6879  003718  0E00               	movlw	0
  6880  00371A  6F7A               	movwf	(floorf@u+1)& (0+255),b
  6881  00371C  0E80               	movlw	128
  6882  00371E  6F7B               	movwf	(floorf@u+2)& (0+255),b
  6883  003720  0EBF               	movlw	191
  6884  003722  6F7C               	movwf	(floorf@u+3)& (0+255),b
  6885  003724                     l8443:
  6886                           
  6887                           ; BSR set to: 0
  6888  003724  C079  F036         	movff	floorf@u,?_floorf
  6889  003728  C07A  F037         	movff	floorf@u+1,?_floorf+1
  6890  00372C  C07B  F038         	movff	floorf@u+2,?_floorf+2
  6891  003730  C07C  F039         	movff	floorf@u+3,?_floorf+3
  6892  003734                     l2302:
  6893                           
  6894                           ; BSR set to: 0
  6895  003734  0012               	return		;funcret
  6896  003736                     __end_of_floorf:
  6897                           	callstack 0
  6898                           
  6899 ;; *************** function ___fpclassifyf *****************
  6900 ;; Defined at:
  6901 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
  6902 ;; Parameters:    Size  Location     Type
  6903 ;;  x               4   19[COMRAM] float 
  6904 ;; Auto vars:     Size  Location     Type
  6905 ;;  u               4   29[COMRAM] struct .
  6906 ;;  e               2   27[COMRAM] int 
  6907 ;; Return value:  Size  Location     Type
  6908 ;;                  2   19[COMRAM] int 
  6909 ;; Registers used:
  6910 ;;		wreg, status,2, status,0
  6911 ;; Tracked objects:
  6912 ;;		On entry : 0/0
  6913 ;;		On exit  : 0/0
  6914 ;;		Unchanged: 0/0
  6915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6916 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6917 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6918 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6919 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6920 ;;Total ram usage:       14 bytes
  6921 ;; Hardware stack levels used: 1
  6922 ;; Hardware stack levels required when called: 8
  6923 ;; This function calls:
  6924 ;;		Nothing
  6925 ;; This function is called by:
  6926 ;;		_efgtoa
  6927 ;; This function uses a non-reentrant model
  6928 ;;
  6929                           
  6930                           	psect	text20
  6931  004A3C                     __ptext20:
  6932                           	callstack 0
  6933  004A3C                     ___fpclassifyf:
  6934                           	callstack 16
  6935  004A3C  C11C  F01E         	movff	___fpclassifyf@F465,___fpclassifyf@u
  6936  004A40  C11D  F01F         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  6937  004A44  C11E  F020         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  6938  004A48  C11F  F021         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  6939  004A4C  C014  F01E         	movff	___fpclassifyf@x,___fpclassifyf@u
  6940  004A50  C015  F01F         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  6941  004A54  C016  F020         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  6942  004A58  C017  F021         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  6943  004A5C  C01E  F018         	movff	___fpclassifyf@u,??___fpclassifyf
  6944  004A60  C01F  F019         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6945  004A64  C020  F01A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6946  004A68  C021  F01B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6947  004A6C  0E18               	movlw	24
  6948  004A6E  EF3E  F025         	goto	u8870
  6949  004A72                     u8875:
  6950  004A72  90D8               	bcf	status,0,c
  6951  004A74  321B               	rrcf	(??___fpclassifyf+3)^0,f,c
  6952  004A76  321A               	rrcf	(??___fpclassifyf+2)^0,f,c
  6953  004A78  3219               	rrcf	(??___fpclassifyf+1)^0,f,c
  6954  004A7A  3218               	rrcf	??___fpclassifyf^0,f,c
  6955  004A7C                     u8870:
  6956  004A7C  2EE8               	decfsz	wreg,f,c
  6957  004A7E  EF39  F025         	goto	u8875
  6958  004A82  5018               	movf	??___fpclassifyf^0,w,c
  6959  004A84  6E1C               	movwf	___fpclassifyf@e^0,c
  6960  004A86  6A1D               	clrf	(___fpclassifyf@e+1)^0,c
  6961  004A88  501C               	movf	___fpclassifyf@e^0,w,c
  6962  004A8A  101D               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6963  004A8C  A4D8               	btfss	status,2,c
  6964  004A8E  EF4B  F025         	goto	u8881
  6965  004A92  EF4D  F025         	goto	u8880
  6966  004A96                     u8881:
  6967  004A96  EF6D  F025         	goto	l8395
  6968  004A9A                     u8880:
  6969  004A9A  90D8               	bcf	status,0,c
  6970  004A9C  341E               	rlcf	___fpclassifyf@u^0,w,c
  6971  004A9E  6E18               	movwf	??___fpclassifyf^0,c
  6972  004AA0  341F               	rlcf	(___fpclassifyf@u+1)^0,w,c
  6973  004AA2  6E19               	movwf	(??___fpclassifyf+1)^0,c
  6974  004AA4  3420               	rlcf	(___fpclassifyf@u+2)^0,w,c
  6975  004AA6  6E1A               	movwf	(??___fpclassifyf+2)^0,c
  6976  004AA8  3421               	rlcf	(___fpclassifyf@u+3)^0,w,c
  6977  004AAA  6E1B               	movwf	(??___fpclassifyf+3)^0,c
  6978  004AAC  5018               	movf	??___fpclassifyf^0,w,c
  6979  004AAE  1019               	iorwf	(??___fpclassifyf+1)^0,w,c
  6980  004AB0  101A               	iorwf	(??___fpclassifyf+2)^0,w,c
  6981  004AB2  101B               	iorwf	(??___fpclassifyf+3)^0,w,c
  6982  004AB4  A4D8               	btfss	status,2,c
  6983  004AB6  EF5F  F025         	goto	u8891
  6984  004ABA  EF61  F025         	goto	u8890
  6985  004ABE                     u8891:
  6986  004ABE  EF67  F025         	goto	l8391
  6987  004AC2                     u8890:
  6988  004AC2  0E00               	movlw	0
  6989  004AC4  6E15               	movwf	(?___fpclassifyf+1)^0,c
  6990  004AC6  0E02               	movlw	2
  6991  004AC8  6E14               	movwf	?___fpclassifyf^0,c
  6992  004ACA  EF9C  F025         	goto	l2288
  6993  004ACE                     l8391:
  6994  004ACE  0E00               	movlw	0
  6995  004AD0  6E15               	movwf	(?___fpclassifyf+1)^0,c
  6996  004AD2  0E03               	movlw	3
  6997  004AD4  6E14               	movwf	?___fpclassifyf^0,c
  6998  004AD6  EF9C  F025         	goto	l2288
  6999  004ADA                     l8395:
  7000  004ADA  281C               	incf	___fpclassifyf@e^0,w,c
  7001  004ADC  101D               	iorwf	(___fpclassifyf@e+1)^0,w,c
  7002  004ADE  A4D8               	btfss	status,2,c
  7003  004AE0  EF74  F025         	goto	u8901
  7004  004AE4  EF76  F025         	goto	u8900
  7005  004AE8                     u8901:
  7006  004AE8  EF98  F025         	goto	l8401
  7007  004AEC                     u8900:
  7008  004AEC  C01E  F018         	movff	___fpclassifyf@u,??___fpclassifyf
  7009  004AF0  C01F  F019         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  7010  004AF4  C020  F01A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  7011  004AF8  C021  F01B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  7012  004AFC  0E09               	movlw	9
  7013  004AFE                     u8915:
  7014  004AFE  90D8               	bcf	status,0,c
  7015  004B00  3618               	rlcf	??___fpclassifyf^0,f,c
  7016  004B02  3619               	rlcf	(??___fpclassifyf+1)^0,f,c
  7017  004B04  361A               	rlcf	(??___fpclassifyf+2)^0,f,c
  7018  004B06  361B               	rlcf	(??___fpclassifyf+3)^0,f,c
  7019  004B08  2EE8               	decfsz	wreg,f,c
  7020  004B0A  EF7F  F025         	goto	u8915
  7021  004B0E  5018               	movf	??___fpclassifyf^0,w,c
  7022  004B10  1019               	iorwf	(??___fpclassifyf+1)^0,w,c
  7023  004B12  101A               	iorwf	(??___fpclassifyf+2)^0,w,c
  7024  004B14  101B               	iorwf	(??___fpclassifyf+3)^0,w,c
  7025  004B16  B4D8               	btfsc	status,2,c
  7026  004B18  EF90  F025         	goto	u8921
  7027  004B1C  EF93  F025         	goto	u8920
  7028  004B20                     u8921:
  7029  004B20  0E01               	movlw	1
  7030  004B22  EF94  F025         	goto	u8930
  7031  004B26                     u8920:
  7032  004B26  0E00               	movlw	0
  7033  004B28                     u8930:
  7034  004B28  6E14               	movwf	?___fpclassifyf^0,c
  7035  004B2A  6A15               	clrf	(?___fpclassifyf+1)^0,c
  7036  004B2C  EF9C  F025         	goto	l2288
  7037  004B30                     l8401:
  7038  004B30  0E00               	movlw	0
  7039  004B32  6E15               	movwf	(?___fpclassifyf+1)^0,c
  7040  004B34  0E04               	movlw	4
  7041  004B36  6E14               	movwf	?___fpclassifyf^0,c
  7042  004B38                     l2288:
  7043  004B38  0012               	return		;funcret
  7044  004B3A                     __end_of___fpclassifyf:
  7045                           	callstack 0
  7046                           
  7047 ;; *************** function ___flsub *****************
  7048 ;; Defined at:
  7049 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  7050 ;; Parameters:    Size  Location     Type
  7051 ;;  b               4   25[BANK0 ] int 
  7052 ;;  a               4   29[BANK0 ] int 
  7053 ;; Auto vars:     Size  Location     Type
  7054 ;;		None
  7055 ;; Return value:  Size  Location     Type
  7056 ;;                  4   25[BANK0 ] int 
  7057 ;; Registers used:
  7058 ;;		wreg, status,2, status,0, cstack
  7059 ;; Tracked objects:
  7060 ;;		On entry : 0/0
  7061 ;;		On exit  : 0/0
  7062 ;;		Unchanged: 0/0
  7063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7064 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7067 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7068 ;;Total ram usage:        8 bytes
  7069 ;; Hardware stack levels used: 1
  7070 ;; Hardware stack levels required when called: 9
  7071 ;; This function calls:
  7072 ;;		___fladd
  7073 ;; This function is called by:
  7074 ;;		_efgtoa
  7075 ;; This function uses a non-reentrant model
  7076 ;;
  7077                           
  7078                           	psect	text21
  7079  005A6A                     __ptext21:
  7080                           	callstack 0
  7081  005A6A                     ___flsub:
  7082                           	callstack 15
  7083  005A6A  0E00               	movlw	0
  7084  005A6C  0100               	movlb	0	; () banked
  7085  005A6E  1B7D               	xorwf	___flsub@a& (0+255),f,b
  7086  005A70  0E00               	movlw	0
  7087  005A72  1B7E               	xorwf	(___flsub@a+1)& (0+255),f,b
  7088  005A74  0E00               	movlw	0
  7089  005A76  1B7F               	xorwf	(___flsub@a+2)& (0+255),f,b
  7090  005A78  0E80               	movlw	128
  7091  005A7A  1B80               	xorwf	(___flsub@a+3)& (0+255),f,b
  7092  005A7C                     
  7093                           ; BSR set to: 0
  7094  005A7C  C079  F06D         	movff	___flsub@b,___fladd@b
  7095  005A80  C07A  F06E         	movff	___flsub@b+1,___fladd@b+1
  7096  005A84  C07B  F06F         	movff	___flsub@b+2,___fladd@b+2
  7097  005A88  C07C  F070         	movff	___flsub@b+3,___fladd@b+3
  7098  005A8C  C07D  F071         	movff	___flsub@a,___fladd@a
  7099  005A90  C07E  F072         	movff	___flsub@a+1,___fladd@a+1
  7100  005A94  C07F  F073         	movff	___flsub@a+2,___fladd@a+2
  7101  005A98  C080  F074         	movff	___flsub@a+3,___fladd@a+3
  7102  005A9C  ECA7  F011         	call	___fladd	;wreg free
  7103  005AA0  C06D  F079         	movff	?___fladd,?___flsub
  7104  005AA4  C06E  F07A         	movff	?___fladd+1,?___flsub+1
  7105  005AA8  C06F  F07B         	movff	?___fladd+2,?___flsub+2
  7106  005AAC  C070  F07C         	movff	?___fladd+3,?___flsub+3
  7107  005AB0  0012               	return		;funcret
  7108  005AB2                     __end_of___flsub:
  7109                           	callstack 0
  7110                           
  7111 ;; *************** function ___flneg *****************
  7112 ;; Defined at:
  7113 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  7114 ;; Parameters:    Size  Location     Type
  7115 ;;  f1              4   19[COMRAM] int 
  7116 ;; Auto vars:     Size  Location     Type
  7117 ;;		None
  7118 ;; Return value:  Size  Location     Type
  7119 ;;                  4   19[COMRAM] int 
  7120 ;; Registers used:
  7121 ;;		wreg, status,2, status,0
  7122 ;; Tracked objects:
  7123 ;;		On entry : 0/0
  7124 ;;		On exit  : 0/0
  7125 ;;		Unchanged: 0/0
  7126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7127 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7130 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7131 ;;Total ram usage:        4 bytes
  7132 ;; Hardware stack levels used: 1
  7133 ;; Hardware stack levels required when called: 8
  7134 ;; This function calls:
  7135 ;;		Nothing
  7136 ;; This function is called by:
  7137 ;;		_efgtoa
  7138 ;; This function uses a non-reentrant model
  7139 ;;
  7140                           
  7141                           	psect	text22
  7142  005CA2                     __ptext22:
  7143                           	callstack 0
  7144  005CA2                     ___flneg:
  7145                           	callstack 16
  7146  005CA2  5014               	movf	___flneg@f1^0,w,c
  7147  005CA4  1015               	iorwf	(___flneg@f1+1)^0,w,c
  7148  005CA6  1016               	iorwf	(___flneg@f1+2)^0,w,c
  7149  005CA8  1017               	iorwf	(___flneg@f1+3)^0,w,c
  7150  005CAA  B4D8               	btfsc	status,2,c
  7151  005CAC  EF5A  F02E         	goto	u8671
  7152  005CB0  EF5C  F02E         	goto	u8670
  7153  005CB4                     u8671:
  7154  005CB4  EF64  F02E         	goto	l8271
  7155  005CB8                     u8670:
  7156  005CB8  0E00               	movlw	0
  7157  005CBA  1A14               	xorwf	___flneg@f1^0,f,c
  7158  005CBC  0E00               	movlw	0
  7159  005CBE  1A15               	xorwf	(___flneg@f1+1)^0,f,c
  7160  005CC0  0E00               	movlw	0
  7161  005CC2  1A16               	xorwf	(___flneg@f1+2)^0,f,c
  7162  005CC4  0E80               	movlw	128
  7163  005CC6  1A17               	xorwf	(___flneg@f1+3)^0,f,c
  7164  005CC8                     l8271:
  7165  005CC8  C014  F014         	movff	___flneg@f1,?___flneg
  7166  005CCC  C015  F015         	movff	___flneg@f1+1,?___flneg+1
  7167  005CD0  C016  F016         	movff	___flneg@f1+2,?___flneg+2
  7168  005CD4  C017  F017         	movff	___flneg@f1+3,?___flneg+3
  7169  005CD8  0012               	return		;funcret
  7170  005CDA                     __end_of___flneg:
  7171                           	callstack 0
  7172                           
  7173 ;; *************** function ___flge *****************
  7174 ;; Defined at:
  7175 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  7176 ;; Parameters:    Size  Location     Type
  7177 ;;  ff1             4   13[BANK0 ] int 
  7178 ;;  ff2             4   17[BANK0 ] int 
  7179 ;; Auto vars:     Size  Location     Type
  7180 ;;		None
  7181 ;; Return value:  Size  Location     Type
  7182 ;;		None               void
  7183 ;; Registers used:
  7184 ;;		wreg, status,2, status,0
  7185 ;; Tracked objects:
  7186 ;;		On entry : 0/0
  7187 ;;		On exit  : 0/0
  7188 ;;		Unchanged: 0/0
  7189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7190 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7192 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7193 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7194 ;;Total ram usage:       12 bytes
  7195 ;; Hardware stack levels used: 1
  7196 ;; Hardware stack levels required when called: 8
  7197 ;; This function calls:
  7198 ;;		Nothing
  7199 ;; This function is called by:
  7200 ;;		_loop
  7201 ;;		_checkBatt
  7202 ;;		_efgtoa
  7203 ;; This function uses a non-reentrant model
  7204 ;;
  7205                           
  7206                           	psect	text23
  7207  004936                     __ptext23:
  7208                           	callstack 0
  7209  004936                     ___flge:
  7210                           	callstack 16
  7211  004936  0E00               	movlw	0
  7212  004938  0100               	movlb	0	; () banked
  7213  00493A  156D               	andwf	___flge@ff1& (0+255),w,b
  7214  00493C  6E36               	movwf	??___flge^0,c
  7215  00493E  0E00               	movlw	0
  7216  004940  156E               	andwf	(___flge@ff1+1)& (0+255),w,b
  7217  004942  6E37               	movwf	(??___flge+1)^0,c
  7218  004944  0E80               	movlw	128
  7219  004946  156F               	andwf	(___flge@ff1+2)& (0+255),w,b
  7220  004948  6E38               	movwf	(??___flge+2)^0,c
  7221  00494A  0E7F               	movlw	127
  7222  00494C  1570               	andwf	(___flge@ff1+3)& (0+255),w,b
  7223  00494E  6E39               	movwf	(??___flge+3)^0,c
  7224  004950  5036               	movf	??___flge^0,w,c
  7225  004952  1037               	iorwf	(??___flge+1)^0,w,c
  7226  004954  1038               	iorwf	(??___flge+2)^0,w,c
  7227  004956  1039               	iorwf	(??___flge+3)^0,w,c
  7228  004958  A4D8               	btfss	status,2,c
  7229  00495A  EFB1  F024         	goto	u8621
  7230  00495E  EFB3  F024         	goto	u8620
  7231  004962                     u8621:
  7232  004962  EFBB  F024         	goto	l8249
  7233  004966                     u8620:
  7234  004966                     
  7235                           ; BSR set to: 0
  7236  004966  0E00               	movlw	0
  7237  004968  6F6D               	movwf	___flge@ff1& (0+255),b
  7238  00496A  0E00               	movlw	0
  7239  00496C  6F6E               	movwf	(___flge@ff1+1)& (0+255),b
  7240  00496E  0E00               	movlw	0
  7241  004970  6F6F               	movwf	(___flge@ff1+2)& (0+255),b
  7242  004972  0E00               	movlw	0
  7243  004974  6F70               	movwf	(___flge@ff1+3)& (0+255),b
  7244  004976                     l8249:
  7245                           
  7246                           ; BSR set to: 0
  7247  004976  0E00               	movlw	0
  7248  004978  1571               	andwf	___flge@ff2& (0+255),w,b
  7249  00497A  6E36               	movwf	??___flge^0,c
  7250  00497C  0E00               	movlw	0
  7251  00497E  1572               	andwf	(___flge@ff2+1)& (0+255),w,b
  7252  004980  6E37               	movwf	(??___flge+1)^0,c
  7253  004982  0E80               	movlw	128
  7254  004984  1573               	andwf	(___flge@ff2+2)& (0+255),w,b
  7255  004986  6E38               	movwf	(??___flge+2)^0,c
  7256  004988  0E7F               	movlw	127
  7257  00498A  1574               	andwf	(___flge@ff2+3)& (0+255),w,b
  7258  00498C  6E39               	movwf	(??___flge+3)^0,c
  7259  00498E  5036               	movf	??___flge^0,w,c
  7260  004990  1037               	iorwf	(??___flge+1)^0,w,c
  7261  004992  1038               	iorwf	(??___flge+2)^0,w,c
  7262  004994  1039               	iorwf	(??___flge+3)^0,w,c
  7263  004996  A4D8               	btfss	status,2,c
  7264  004998  EFD0  F024         	goto	u8631
  7265  00499C  EFD2  F024         	goto	u8630
  7266  0049A0                     u8631:
  7267  0049A0  EFDA  F024         	goto	l8253
  7268  0049A4                     u8630:
  7269  0049A4                     
  7270                           ; BSR set to: 0
  7271  0049A4  0E00               	movlw	0
  7272  0049A6  6F71               	movwf	___flge@ff2& (0+255),b
  7273  0049A8  0E00               	movlw	0
  7274  0049AA  6F72               	movwf	(___flge@ff2+1)& (0+255),b
  7275  0049AC  0E00               	movlw	0
  7276  0049AE  6F73               	movwf	(___flge@ff2+2)& (0+255),b
  7277  0049B0  0E00               	movlw	0
  7278  0049B2  6F74               	movwf	(___flge@ff2+3)& (0+255),b
  7279  0049B4                     l8253:
  7280                           
  7281                           ; BSR set to: 0
  7282  0049B4  AF70               	btfss	(___flge@ff1+3)& (0+255),7,b
  7283  0049B6  EFDF  F024         	goto	u8641
  7284  0049BA  EFE1  F024         	goto	u8640
  7285  0049BE                     u8641:
  7286  0049BE  EFEA  F024         	goto	l8257
  7287  0049C2                     u8640:
  7288  0049C2                     
  7289                           ; BSR set to: 0
  7290  0049C2  6D6D               	negf	___flge@ff1& (0+255),b
  7291  0049C4  1F6E               	comf	(___flge@ff1+1)& (0+255),f,b
  7292  0049C6  B0D8               	btfsc	status,0,c
  7293  0049C8  2B6E               	incf	(___flge@ff1+1)& (0+255),f,b
  7294  0049CA  1F6F               	comf	(___flge@ff1+2)& (0+255),f,b
  7295  0049CC  B0D8               	btfsc	status,0,c
  7296  0049CE  2B6F               	incf	(___flge@ff1+2)& (0+255),f,b
  7297  0049D0  0E80               	movlw	128
  7298  0049D2  5770               	subfwb	(___flge@ff1+3)& (0+255),f,b
  7299  0049D4                     l8257:
  7300                           
  7301                           ; BSR set to: 0
  7302  0049D4  AF74               	btfss	(___flge@ff2+3)& (0+255),7,b
  7303  0049D6  EFEF  F024         	goto	u8651
  7304  0049DA  EFF1  F024         	goto	u8650
  7305  0049DE                     u8651:
  7306  0049DE  EFFA  F024         	goto	l1662
  7307  0049E2                     u8650:
  7308  0049E2                     
  7309                           ; BSR set to: 0
  7310  0049E2  6D71               	negf	___flge@ff2& (0+255),b
  7311  0049E4  1F72               	comf	(___flge@ff2+1)& (0+255),f,b
  7312  0049E6  B0D8               	btfsc	status,0,c
  7313  0049E8  2B72               	incf	(___flge@ff2+1)& (0+255),f,b
  7314  0049EA  1F73               	comf	(___flge@ff2+2)& (0+255),f,b
  7315  0049EC  B0D8               	btfsc	status,0,c
  7316  0049EE  2B73               	incf	(___flge@ff2+2)& (0+255),f,b
  7317  0049F0  0E80               	movlw	128
  7318  0049F2  5774               	subfwb	(___flge@ff2+3)& (0+255),f,b
  7319  0049F4                     l1662:
  7320                           
  7321                           ; BSR set to: 0
  7322  0049F4  0E00               	movlw	0
  7323  0049F6  1B6D               	xorwf	___flge@ff1& (0+255),f,b
  7324  0049F8  0E00               	movlw	0
  7325  0049FA  1B6E               	xorwf	(___flge@ff1+1)& (0+255),f,b
  7326  0049FC  0E00               	movlw	0
  7327  0049FE  1B6F               	xorwf	(___flge@ff1+2)& (0+255),f,b
  7328  004A00  0E80               	movlw	128
  7329  004A02  1B70               	xorwf	(___flge@ff1+3)& (0+255),f,b
  7330  004A04  0E00               	movlw	0
  7331  004A06  1B71               	xorwf	___flge@ff2& (0+255),f,b
  7332  004A08  0E00               	movlw	0
  7333  004A0A  1B72               	xorwf	(___flge@ff2+1)& (0+255),f,b
  7334  004A0C  0E00               	movlw	0
  7335  004A0E  1B73               	xorwf	(___flge@ff2+2)& (0+255),f,b
  7336  004A10  0E80               	movlw	128
  7337  004A12  1B74               	xorwf	(___flge@ff2+3)& (0+255),f,b
  7338  004A14  5171               	movf	___flge@ff2& (0+255),w,b
  7339  004A16  5D6D               	subwf	___flge@ff1& (0+255),w,b
  7340  004A18  5172               	movf	(___flge@ff2+1)& (0+255),w,b
  7341  004A1A  596E               	subwfb	(___flge@ff1+1)& (0+255),w,b
  7342  004A1C  5173               	movf	(___flge@ff2+2)& (0+255),w,b
  7343  004A1E  596F               	subwfb	(___flge@ff1+2)& (0+255),w,b
  7344  004A20  5174               	movf	(___flge@ff2+3)& (0+255),w,b
  7345  004A22  5970               	subwfb	(___flge@ff1+3)& (0+255),w,b
  7346  004A24  B0D8               	btfsc	status,0,c
  7347  004A26  EF17  F025         	goto	u8661
  7348  004A2A  EF19  F025         	goto	u8660
  7349  004A2E                     u8661:
  7350  004A2E  EF1C  F025         	goto	l8263
  7351  004A32                     u8660:
  7352  004A32                     
  7353                           ; BSR set to: 0
  7354  004A32  90D8               	bcf	status,0,c
  7355  004A34  EF1D  F025         	goto	l1667
  7356  004A38                     l8263:
  7357                           
  7358                           ; BSR set to: 0
  7359  004A38  80D8               	bsf	status,0,c
  7360  004A3A                     l1667:
  7361                           
  7362                           ; BSR set to: 0
  7363  004A3A  0012               	return		;funcret
  7364  004A3C                     __end_of___flge:
  7365                           	callstack 0
  7366                           
  7367 ;; *************** function ___fleq *****************
  7368 ;; Defined at:
  7369 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
  7370 ;; Parameters:    Size  Location     Type
  7371 ;;  ff1             4   19[COMRAM] int 
  7372 ;;  ff2             4   23[COMRAM] int 
  7373 ;; Auto vars:     Size  Location     Type
  7374 ;;		None
  7375 ;; Return value:  Size  Location     Type
  7376 ;;		None               void
  7377 ;; Registers used:
  7378 ;;		wreg, status,2, status,0
  7379 ;; Tracked objects:
  7380 ;;		On entry : 0/0
  7381 ;;		On exit  : 0/0
  7382 ;;		Unchanged: 0/0
  7383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7384 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7386 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7387 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7388 ;;Total ram usage:       12 bytes
  7389 ;; Hardware stack levels used: 1
  7390 ;; Hardware stack levels required when called: 8
  7391 ;; This function calls:
  7392 ;;		Nothing
  7393 ;; This function is called by:
  7394 ;;		_efgtoa
  7395 ;; This function uses a non-reentrant model
  7396 ;;
  7397                           
  7398                           	psect	text24
  7399  00534E                     __ptext24:
  7400                           	callstack 0
  7401  00534E                     ___fleq:
  7402                           	callstack 16
  7403  00534E  0E00               	movlw	0
  7404  005350  1414               	andwf	___fleq@ff1^0,w,c
  7405  005352  6E1C               	movwf	??___fleq^0,c
  7406  005354  0E00               	movlw	0
  7407  005356  1415               	andwf	(___fleq@ff1+1)^0,w,c
  7408  005358  6E1D               	movwf	(??___fleq+1)^0,c
  7409  00535A  0E80               	movlw	128
  7410  00535C  1416               	andwf	(___fleq@ff1+2)^0,w,c
  7411  00535E  6E1E               	movwf	(??___fleq+2)^0,c
  7412  005360  0E7F               	movlw	127
  7413  005362  1417               	andwf	(___fleq@ff1+3)^0,w,c
  7414  005364  6E1F               	movwf	(??___fleq+3)^0,c
  7415  005366  501C               	movf	??___fleq^0,w,c
  7416  005368  101D               	iorwf	(??___fleq+1)^0,w,c
  7417  00536A  101E               	iorwf	(??___fleq+2)^0,w,c
  7418  00536C  101F               	iorwf	(??___fleq+3)^0,w,c
  7419  00536E  A4D8               	btfss	status,2,c
  7420  005370  EFBC  F029         	goto	u8591
  7421  005374  EFBE  F029         	goto	u8590
  7422  005378                     u8591:
  7423  005378  EFC6  F029         	goto	l8233
  7424  00537C                     u8590:
  7425  00537C  0E00               	movlw	0
  7426  00537E  6E14               	movwf	___fleq@ff1^0,c
  7427  005380  0E00               	movlw	0
  7428  005382  6E15               	movwf	(___fleq@ff1+1)^0,c
  7429  005384  0E00               	movlw	0
  7430  005386  6E16               	movwf	(___fleq@ff1+2)^0,c
  7431  005388  0E00               	movlw	0
  7432  00538A  6E17               	movwf	(___fleq@ff1+3)^0,c
  7433  00538C                     l8233:
  7434  00538C  0E00               	movlw	0
  7435  00538E  1418               	andwf	___fleq@ff2^0,w,c
  7436  005390  6E1C               	movwf	??___fleq^0,c
  7437  005392  0E00               	movlw	0
  7438  005394  1419               	andwf	(___fleq@ff2+1)^0,w,c
  7439  005396  6E1D               	movwf	(??___fleq+1)^0,c
  7440  005398  0E80               	movlw	128
  7441  00539A  141A               	andwf	(___fleq@ff2+2)^0,w,c
  7442  00539C  6E1E               	movwf	(??___fleq+2)^0,c
  7443  00539E  0E7F               	movlw	127
  7444  0053A0  141B               	andwf	(___fleq@ff2+3)^0,w,c
  7445  0053A2  6E1F               	movwf	(??___fleq+3)^0,c
  7446  0053A4  501C               	movf	??___fleq^0,w,c
  7447  0053A6  101D               	iorwf	(??___fleq+1)^0,w,c
  7448  0053A8  101E               	iorwf	(??___fleq+2)^0,w,c
  7449  0053AA  101F               	iorwf	(??___fleq+3)^0,w,c
  7450  0053AC  A4D8               	btfss	status,2,c
  7451  0053AE  EFDB  F029         	goto	u8601
  7452  0053B2  EFDD  F029         	goto	u8600
  7453  0053B6                     u8601:
  7454  0053B6  EFE5  F029         	goto	l8237
  7455  0053BA                     u8600:
  7456  0053BA  0E00               	movlw	0
  7457  0053BC  6E18               	movwf	___fleq@ff2^0,c
  7458  0053BE  0E00               	movlw	0
  7459  0053C0  6E19               	movwf	(___fleq@ff2+1)^0,c
  7460  0053C2  0E00               	movlw	0
  7461  0053C4  6E1A               	movwf	(___fleq@ff2+2)^0,c
  7462  0053C6  0E00               	movlw	0
  7463  0053C8  6E1B               	movwf	(___fleq@ff2+3)^0,c
  7464  0053CA                     l8237:
  7465  0053CA  5018               	movf	___fleq@ff2^0,w,c
  7466  0053CC  1814               	xorwf	___fleq@ff1^0,w,c
  7467  0053CE  E10F               	bnz	u8610
  7468  0053D0  5019               	movf	(___fleq@ff2+1)^0,w,c
  7469  0053D2  1815               	xorwf	(___fleq@ff1+1)^0,w,c
  7470  0053D4  E10C               	bnz	u8610
  7471  0053D6  501A               	movf	(___fleq@ff2+2)^0,w,c
  7472  0053D8  1816               	xorwf	(___fleq@ff1+2)^0,w,c
  7473  0053DA  E109               	bnz	u8610
  7474  0053DC  501B               	movf	(___fleq@ff2+3)^0,w,c
  7475  0053DE  1817               	xorwf	(___fleq@ff1+3)^0,w,c
  7476  0053E0  B4D8               	btfsc	status,2,c
  7477  0053E2  EFF5  F029         	goto	u8611
  7478  0053E6  EFF7  F029         	goto	u8610
  7479  0053EA                     u8611:
  7480  0053EA  EFFA  F029         	goto	l8241
  7481  0053EE                     u8610:
  7482  0053EE  90D8               	bcf	status,0,c
  7483  0053F0  EFFB  F029         	goto	l1656
  7484  0053F4                     l8241:
  7485  0053F4  80D8               	bsf	status,0,c
  7486  0053F6                     l1656:
  7487  0053F6  0012               	return		;funcret
  7488  0053F8                     __end_of___fleq:
  7489                           	callstack 0
  7490                           
  7491 ;; *************** function ___awmod *****************
  7492 ;; Defined at:
  7493 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  7494 ;; Parameters:    Size  Location     Type
  7495 ;;  dividend        2   19[COMRAM] int 
  7496 ;;  divisor         2   21[COMRAM] int 
  7497 ;; Auto vars:     Size  Location     Type
  7498 ;;  sign            1   24[COMRAM] unsigned char 
  7499 ;;  counter         1   23[COMRAM] unsigned char 
  7500 ;; Return value:  Size  Location     Type
  7501 ;;                  2   19[COMRAM] int 
  7502 ;; Registers used:
  7503 ;;		wreg, status,2, status,0
  7504 ;; Tracked objects:
  7505 ;;		On entry : 0/0
  7506 ;;		On exit  : 0/0
  7507 ;;		Unchanged: 0/0
  7508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7509 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7510 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7512 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7513 ;;Total ram usage:        6 bytes
  7514 ;; Hardware stack levels used: 1
  7515 ;; Hardware stack levels required when called: 8
  7516 ;; This function calls:
  7517 ;;		Nothing
  7518 ;; This function is called by:
  7519 ;;		_efgtoa
  7520 ;; This function uses a non-reentrant model
  7521 ;;
  7522                           
  7523                           	psect	text25
  7524  00529E                     __ptext25:
  7525                           	callstack 0
  7526  00529E                     ___awmod:
  7527                           	callstack 16
  7528  00529E  0E00               	movlw	0
  7529  0052A0  6E19               	movwf	___awmod@sign^0,c
  7530  0052A2  BE15               	btfsc	(___awmod@dividend+1)^0,7,c
  7531  0052A4  EF58  F029         	goto	u8530
  7532  0052A8  EF56  F029         	goto	u8531
  7533  0052AC                     u8531:
  7534  0052AC  EF5E  F029         	goto	l8201
  7535  0052B0                     u8530:
  7536  0052B0  6C14               	negf	___awmod@dividend^0,c
  7537  0052B2  1E15               	comf	(___awmod@dividend+1)^0,f,c
  7538  0052B4  B0D8               	btfsc	status,0,c
  7539  0052B6  2A15               	incf	(___awmod@dividend+1)^0,f,c
  7540  0052B8  0E01               	movlw	1
  7541  0052BA  6E19               	movwf	___awmod@sign^0,c
  7542  0052BC                     l8201:
  7543  0052BC  BE17               	btfsc	(___awmod@divisor+1)^0,7,c
  7544  0052BE  EF65  F029         	goto	u8540
  7545  0052C2  EF63  F029         	goto	u8541
  7546  0052C6                     u8541:
  7547  0052C6  EF69  F029         	goto	l8205
  7548  0052CA                     u8540:
  7549  0052CA  6C16               	negf	___awmod@divisor^0,c
  7550  0052CC  1E17               	comf	(___awmod@divisor+1)^0,f,c
  7551  0052CE  B0D8               	btfsc	status,0,c
  7552  0052D0  2A17               	incf	(___awmod@divisor+1)^0,f,c
  7553  0052D2                     l8205:
  7554  0052D2  5016               	movf	___awmod@divisor^0,w,c
  7555  0052D4  1017               	iorwf	(___awmod@divisor+1)^0,w,c
  7556  0052D6  B4D8               	btfsc	status,2,c
  7557  0052D8  EF70  F029         	goto	u8551
  7558  0052DC  EF72  F029         	goto	u8550
  7559  0052E0                     u8551:
  7560  0052E0  EF96  F029         	goto	l8221
  7561  0052E4                     u8550:
  7562  0052E4  0E01               	movlw	1
  7563  0052E6  6E18               	movwf	___awmod@counter^0,c
  7564  0052E8  EF7A  F029         	goto	l8211
  7565  0052EC                     l8209:
  7566  0052EC  90D8               	bcf	status,0,c
  7567  0052EE  3616               	rlcf	___awmod@divisor^0,f,c
  7568  0052F0  3617               	rlcf	(___awmod@divisor+1)^0,f,c
  7569  0052F2  2A18               	incf	___awmod@counter^0,f,c
  7570  0052F4                     l8211:
  7571  0052F4  AE17               	btfss	(___awmod@divisor+1)^0,7,c
  7572  0052F6  EF7F  F029         	goto	u8561
  7573  0052FA  EF81  F029         	goto	u8560
  7574  0052FE                     u8561:
  7575  0052FE  EF76  F029         	goto	l8209
  7576  005302                     u8560:
  7577  005302                     l8213:
  7578  005302  5016               	movf	___awmod@divisor^0,w,c
  7579  005304  5C14               	subwf	___awmod@dividend^0,w,c
  7580  005306  5017               	movf	(___awmod@divisor+1)^0,w,c
  7581  005308  5815               	subwfb	(___awmod@dividend+1)^0,w,c
  7582  00530A  A0D8               	btfss	status,0,c
  7583  00530C  EF8A  F029         	goto	u8571
  7584  005310  EF8C  F029         	goto	u8570
  7585  005314                     u8571:
  7586  005314  EF90  F029         	goto	l8217
  7587  005318                     u8570:
  7588  005318  5016               	movf	___awmod@divisor^0,w,c
  7589  00531A  5E14               	subwf	___awmod@dividend^0,f,c
  7590  00531C  5017               	movf	(___awmod@divisor+1)^0,w,c
  7591  00531E  5A15               	subwfb	(___awmod@dividend+1)^0,f,c
  7592  005320                     l8217:
  7593  005320  90D8               	bcf	status,0,c
  7594  005322  3217               	rrcf	(___awmod@divisor+1)^0,f,c
  7595  005324  3216               	rrcf	___awmod@divisor^0,f,c
  7596  005326  2E18               	decfsz	___awmod@counter^0,f,c
  7597  005328  EF81  F029         	goto	l8213
  7598  00532C                     l8221:
  7599  00532C  5019               	movf	___awmod@sign^0,w,c
  7600  00532E  B4D8               	btfsc	status,2,c
  7601  005330  EF9C  F029         	goto	u8581
  7602  005334  EF9E  F029         	goto	u8580
  7603  005338                     u8581:
  7604  005338  EFA2  F029         	goto	l8225
  7605  00533C                     u8580:
  7606  00533C  6C14               	negf	___awmod@dividend^0,c
  7607  00533E  1E15               	comf	(___awmod@dividend+1)^0,f,c
  7608  005340  B0D8               	btfsc	status,0,c
  7609  005342  2A15               	incf	(___awmod@dividend+1)^0,f,c
  7610  005344                     l8225:
  7611  005344  C014  F014         	movff	___awmod@dividend,?___awmod
  7612  005348  C015  F015         	movff	___awmod@dividend+1,?___awmod+1
  7613  00534C  0012               	return		;funcret
  7614  00534E                     __end_of___awmod:
  7615                           	callstack 0
  7616                           
  7617 ;; *************** function _dtoa *****************
  7618 ;; Defined at:
  7619 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  7620 ;; Parameters:    Size  Location     Type
  7621 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  7622 ;;		 -> NULL(0), 
  7623 ;;  d               8    2[BANK0 ] long long 
  7624 ;; Auto vars:     Size  Location     Type
  7625 ;;  n               8   18[BANK0 ] long long 
  7626 ;;  i               2   26[BANK0 ] int 
  7627 ;;  s               2   16[BANK0 ] int 
  7628 ;;  w               2   14[BANK0 ] int 
  7629 ;;  p               2   12[BANK0 ] int 
  7630 ;; Return value:  Size  Location     Type
  7631 ;;                  2    0[BANK0 ] int 
  7632 ;; Registers used:
  7633 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7634 ;; Tracked objects:
  7635 ;;		On entry : 0/0
  7636 ;;		On exit  : 0/0
  7637 ;;		Unchanged: 0/0
  7638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7639 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7640 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7641 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7642 ;;      Totals:         8      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7643 ;;Total ram usage:       36 bytes
  7644 ;; Hardware stack levels used: 1
  7645 ;; Hardware stack levels required when called: 13
  7646 ;; This function calls:
  7647 ;;		___aodiv
  7648 ;;		___aomod
  7649 ;;		_abs
  7650 ;;		_pad
  7651 ;; This function is called by:
  7652 ;;		_vfpfcnvrt
  7653 ;; This function uses a non-reentrant model
  7654 ;;
  7655                           
  7656                           	psect	text26
  7657  002FFC                     __ptext26:
  7658                           	callstack 0
  7659  002FFC                     _dtoa:
  7660                           	callstack 12
  7661  002FFC                     
  7662                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  7663  002FFC  C062  F072         	movff	dtoa@d,dtoa@n
  7664  003000  C063  F073         	movff	dtoa@d+1,dtoa@n+1
  7665  003004  C064  F074         	movff	dtoa@d+2,dtoa@n+2
  7666  003008  C065  F075         	movff	dtoa@d+3,dtoa@n+3
  7667  00300C  C066  F076         	movff	dtoa@d+4,dtoa@n+4
  7668  003010  C067  F077         	movff	dtoa@d+5,dtoa@n+5
  7669  003014  C068  F078         	movff	dtoa@d+6,dtoa@n+6
  7670  003018  C069  F079         	movff	dtoa@d+7,dtoa@n+7
  7671  00301C                     
  7672                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  7673  00301C  0100               	movlb	0	; () banked
  7674  00301E  BF79               	btfsc	(dtoa@n+7)& (0+255),7,b
  7675  003020  EF14  F018         	goto	u9091
  7676  003024  EF17  F018         	goto	u9090
  7677  003028                     u9091:
  7678  003028  0E01               	movlw	1
  7679  00302A  EF18  F018         	goto	u9100
  7680  00302E                     u9090:
  7681  00302E  0E00               	movlw	0
  7682  003030                     u9100:
  7683  003030  6F70               	movwf	dtoa@s& (0+255),b
  7684  003032  6B71               	clrf	(dtoa@s+1)& (0+255),b
  7685                           
  7686                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  7687  003034  5170               	movf	dtoa@s& (0+255),w,b
  7688  003036  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  7689  003038  B4D8               	btfsc	status,2,c
  7690  00303A  EF21  F018         	goto	u9111
  7691  00303E  EF23  F018         	goto	u9110
  7692  003042                     u9111:
  7693  003042  EF33  F018         	goto	l8453
  7694  003046                     u9110:
  7695  003046                     
  7696                           ; BSR set to: 0
  7697                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  7698  003046  1F79               	comf	(dtoa@n+7)& (0+255),f,b
  7699  003048  1F78               	comf	(dtoa@n+6)& (0+255),f,b
  7700  00304A  1F77               	comf	(dtoa@n+5)& (0+255),f,b
  7701  00304C  1F76               	comf	(dtoa@n+4)& (0+255),f,b
  7702  00304E  1F75               	comf	(dtoa@n+3)& (0+255),f,b
  7703  003050  1F74               	comf	(dtoa@n+2)& (0+255),f,b
  7704  003052  1F73               	comf	(dtoa@n+1)& (0+255),f,b
  7705  003054  6D72               	negf	dtoa@n& (0+255),b
  7706  003056  0E00               	movlw	0
  7707  003058  2373               	addwfc	(dtoa@n+1)& (0+255),f,b
  7708  00305A  2374               	addwfc	(dtoa@n+2)& (0+255),f,b
  7709  00305C  2375               	addwfc	(dtoa@n+3)& (0+255),f,b
  7710  00305E  2376               	addwfc	(dtoa@n+4)& (0+255),f,b
  7711  003060  2377               	addwfc	(dtoa@n+5)& (0+255),f,b
  7712  003062  2378               	addwfc	(dtoa@n+6)& (0+255),f,b
  7713  003064  2379               	addwfc	(dtoa@n+7)& (0+255),f,b
  7714  003066                     l8453:
  7715                           
  7716                           ; BSR set to: 0
  7717                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  7718  003066  BE3D               	btfsc	(_prec+1)^0,7,c
  7719  003068  EF38  F018         	goto	u9121
  7720  00306C  EF3A  F018         	goto	u9120
  7721  003070                     u9121:
  7722  003070  EF3B  F018         	goto	l8457
  7723  003074                     u9120:
  7724  003074                     
  7725                           ; BSR set to: 0
  7726                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  7727  003074  923E               	bcf	_flags^0,1,c
  7728  003076                     l8457:
  7729                           
  7730                           ; BSR set to: 0
  7731                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  7732  003076  BE3D               	btfsc	(_prec+1)^0,7,c
  7733  003078  EF48  F018         	goto	u9130
  7734  00307C  503D               	movf	(_prec+1)^0,w,c
  7735  00307E  E106               	bnz	u9131
  7736  003080  043C               	decf	_prec^0,w,c
  7737  003082  B0D8               	btfsc	status,0,c
  7738  003084  EF46  F018         	goto	u9131
  7739  003088  EF48  F018         	goto	u9130
  7740  00308C                     u9131:
  7741  00308C  EF4E  F018         	goto	l2125
  7742  003090                     u9130:
  7743  003090                     
  7744                           ; BSR set to: 0
  7745  003090  0E00               	movlw	0
  7746  003092  6F6D               	movwf	(dtoa@p+1)& (0+255),b
  7747  003094  0E01               	movlw	1
  7748  003096  6F6C               	movwf	dtoa@p& (0+255),b
  7749  003098  EF52  F018         	goto	l2127
  7750  00309C                     l2125:
  7751                           
  7752                           ; BSR set to: 0
  7753  00309C  C03C  F06C         	movff	_prec,dtoa@p
  7754  0030A0  C03D  F06D         	movff	_prec+1,dtoa@p+1
  7755  0030A4                     l2127:
  7756                           
  7757                           ; BSR set to: 0
  7758                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  7759  0030A4  C03A  F06E         	movff	_width,dtoa@w
  7760  0030A8  C03B  F06F         	movff	_width+1,dtoa@w+1
  7761  0030AC                     
  7762                           ; BSR set to: 0
  7763                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  7764  0030AC  5170               	movf	dtoa@s& (0+255),w,b
  7765  0030AE  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  7766  0030B0  A4D8               	btfss	status,2,c
  7767  0030B2  EF5D  F018         	goto	u9141
  7768  0030B6  EF5F  F018         	goto	u9140
  7769  0030BA                     u9141:
  7770  0030BA  EF66  F018         	goto	l8465
  7771  0030BE                     u9140:
  7772  0030BE                     
  7773                           ; BSR set to: 0
  7774  0030BE  A43E               	btfss	_flags^0,2,c
  7775  0030C0  EF64  F018         	goto	u9151
  7776  0030C4  EF66  F018         	goto	u9150
  7777  0030C8                     u9151:
  7778  0030C8  EF69  F018         	goto	l8467
  7779  0030CC                     u9150:
  7780  0030CC                     l8465:
  7781                           
  7782                           ; BSR set to: 0
  7783                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  7784  0030CC  076E               	decf	dtoa@w& (0+255),f,b
  7785  0030CE  A0D8               	btfss	status,0,c
  7786  0030D0  076F               	decf	(dtoa@w+1)& (0+255),f,b
  7787  0030D2                     l8467:
  7788                           
  7789                           ; BSR set to: 0
  7790                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  7791  0030D2  0E00               	movlw	0
  7792  0030D4  6F7B               	movwf	(dtoa@i+1)& (0+255),b
  7793  0030D6  0E4F               	movlw	79
  7794  0030D8  6F7A               	movwf	dtoa@i& (0+255),b
  7795  0030DA                     
  7796                           ; BSR set to: 0
  7797                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  7798  0030DA  0E00               	movlw	0
  7799  0030DC  0101               	movlb	1	; () banked
  7800  0030DE  6F8D               	movwf	(_dbuf+79)& (0+255),b
  7801                           
  7802                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7803  0030E0  EFEF  F018         	goto	l8481
  7804  0030E4                     l8471:
  7805                           
  7806                           ; BSR set to: 0
  7807                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  7808  0030E4  077A               	decf	dtoa@i& (0+255),f,b
  7809  0030E6  A0D8               	btfss	status,0,c
  7810  0030E8  077B               	decf	(dtoa@i+1)& (0+255),f,b
  7811  0030EA                     
  7812                           ; BSR set to: 0
  7813                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  7814  0030EA  0E3E               	movlw	low _dbuf
  7815  0030EC  257A               	addwf	dtoa@i& (0+255),w,b
  7816  0030EE  6ED9               	movwf	fsr2l,c
  7817  0030F0  0E01               	movlw	high _dbuf
  7818  0030F2  217B               	addwfc	(dtoa@i+1)& (0+255),w,b
  7819  0030F4  6EDA               	movwf	fsr2h,c
  7820  0030F6  C072  F014         	movff	dtoa@n,___aomod@dividend
  7821  0030FA  C073  F015         	movff	dtoa@n+1,___aomod@dividend+1
  7822  0030FE  C074  F016         	movff	dtoa@n+2,___aomod@dividend+2
  7823  003102  C075  F017         	movff	dtoa@n+3,___aomod@dividend+3
  7824  003106  C076  F018         	movff	dtoa@n+4,___aomod@dividend+4
  7825  00310A  C077  F019         	movff	dtoa@n+5,___aomod@dividend+5
  7826  00310E  C078  F01A         	movff	dtoa@n+6,___aomod@dividend+6
  7827  003112  C079  F01B         	movff	dtoa@n+7,___aomod@dividend+7
  7828  003116  0E0A               	movlw	10
  7829  003118  6E1C               	movwf	___aomod@divisor^0,c
  7830  00311A  0E00               	movlw	0
  7831  00311C  6E1D               	movwf	(___aomod@divisor+1)^0,c
  7832  00311E  0E00               	movlw	0
  7833  003120  6E1E               	movwf	(___aomod@divisor+2)^0,c
  7834  003122  0E00               	movlw	0
  7835  003124  6E1F               	movwf	(___aomod@divisor+3)^0,c
  7836  003126  0E00               	movlw	0
  7837  003128  6E20               	movwf	(___aomod@divisor+4)^0,c
  7838  00312A  0E00               	movlw	0
  7839  00312C  6E21               	movwf	(___aomod@divisor+5)^0,c
  7840  00312E  0E00               	movlw	0
  7841  003130  6E22               	movwf	(___aomod@divisor+6)^0,c
  7842  003132  0E00               	movlw	0
  7843  003134  6E23               	movwf	(___aomod@divisor+7)^0,c
  7844  003136  EC10  F021         	call	___aomod	;wreg free
  7845  00313A  C014  F031         	movff	?___aomod,??_dtoa
  7846  00313E  C015  F032         	movff	?___aomod+1,??_dtoa+1
  7847  003142  C016  F033         	movff	?___aomod+2,??_dtoa+2
  7848  003146  C017  F034         	movff	?___aomod+3,??_dtoa+3
  7849  00314A  C018  F035         	movff	?___aomod+4,??_dtoa+4
  7850  00314E  C019  F036         	movff	?___aomod+5,??_dtoa+5
  7851  003152  C01A  F037         	movff	?___aomod+6,??_dtoa+6
  7852  003156  C01B  F038         	movff	?___aomod+7,??_dtoa+7
  7853  00315A  C031  F026         	movff	??_dtoa,abs@a
  7854  00315E  C033  F027         	movff	??_dtoa+2,abs@a+1
  7855  003162  EC9D  F02D         	call	_abs	;wreg free
  7856  003166  5026               	movf	?_abs^0,w,c
  7857  003168  0F30               	addlw	48
  7858  00316A  6EDF               	movwf	indf2,c
  7859  00316C                     
  7860                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  7861  00316C  0100               	movlb	0	; () banked
  7862  00316E  076C               	decf	dtoa@p& (0+255),f,b
  7863  003170  A0D8               	btfss	status,0,c
  7864  003172  076D               	decf	(dtoa@p+1)& (0+255),f,b
  7865  003174                     
  7866                           ; BSR set to: 0
  7867                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  7868  003174  076E               	decf	dtoa@w& (0+255),f,b
  7869  003176  A0D8               	btfss	status,0,c
  7870  003178  076F               	decf	(dtoa@w+1)& (0+255),f,b
  7871  00317A                     
  7872                           ; BSR set to: 0
  7873                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  7874  00317A  C072  F014         	movff	dtoa@n,___aodiv@dividend
  7875  00317E  C073  F015         	movff	dtoa@n+1,___aodiv@dividend+1
  7876  003182  C074  F016         	movff	dtoa@n+2,___aodiv@dividend+2
  7877  003186  C075  F017         	movff	dtoa@n+3,___aodiv@dividend+3
  7878  00318A  C076  F018         	movff	dtoa@n+4,___aodiv@dividend+4
  7879  00318E  C077  F019         	movff	dtoa@n+5,___aodiv@dividend+5
  7880  003192  C078  F01A         	movff	dtoa@n+6,___aodiv@dividend+6
  7881  003196  C079  F01B         	movff	dtoa@n+7,___aodiv@dividend+7
  7882  00319A  0E0A               	movlw	10
  7883  00319C  6E1C               	movwf	___aodiv@divisor^0,c
  7884  00319E  0E00               	movlw	0
  7885  0031A0  6E1D               	movwf	(___aodiv@divisor+1)^0,c
  7886  0031A2  0E00               	movlw	0
  7887  0031A4  6E1E               	movwf	(___aodiv@divisor+2)^0,c
  7888  0031A6  0E00               	movlw	0
  7889  0031A8  6E1F               	movwf	(___aodiv@divisor+3)^0,c
  7890  0031AA  0E00               	movlw	0
  7891  0031AC  6E20               	movwf	(___aodiv@divisor+4)^0,c
  7892  0031AE  0E00               	movlw	0
  7893  0031B0  6E21               	movwf	(___aodiv@divisor+5)^0,c
  7894  0031B2  0E00               	movlw	0
  7895  0031B4  6E22               	movwf	(___aodiv@divisor+6)^0,c
  7896  0031B6  0E00               	movlw	0
  7897  0031B8  6E23               	movwf	(___aodiv@divisor+7)^0,c
  7898  0031BA  EC4C  F020         	call	___aodiv	;wreg free
  7899  0031BE  C014  F072         	movff	?___aodiv,dtoa@n
  7900  0031C2  C015  F073         	movff	?___aodiv+1,dtoa@n+1
  7901  0031C6  C016  F074         	movff	?___aodiv+2,dtoa@n+2
  7902  0031CA  C017  F075         	movff	?___aodiv+3,dtoa@n+3
  7903  0031CE  C018  F076         	movff	?___aodiv+4,dtoa@n+4
  7904  0031D2  C019  F077         	movff	?___aodiv+5,dtoa@n+5
  7905  0031D6  C01A  F078         	movff	?___aodiv+6,dtoa@n+6
  7906  0031DA  C01B  F079         	movff	?___aodiv+7,dtoa@n+7
  7907  0031DE                     l8481:
  7908                           
  7909                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7910  0031DE  0100               	movlb	0	; () banked
  7911  0031E0  BF7B               	btfsc	(dtoa@i+1)& (0+255),7,b
  7912  0031E2  EFFB  F018         	goto	u9161
  7913  0031E6  517B               	movf	(dtoa@i+1)& (0+255),w,b
  7914  0031E8  E108               	bnz	u9160
  7915  0031EA  057A               	decf	dtoa@i& (0+255),w,b
  7916  0031EC  A0D8               	btfss	status,0,c
  7917  0031EE  EFFB  F018         	goto	u9161
  7918  0031F2  EFFD  F018         	goto	u9160
  7919  0031F6                     u9161:
  7920  0031F6  EF2D  F019         	goto	l8491
  7921  0031FA                     u9160:
  7922  0031FA                     
  7923                           ; BSR set to: 0
  7924  0031FA  5172               	movf	dtoa@n& (0+255),w,b
  7925  0031FC  1173               	iorwf	(dtoa@n+1)& (0+255),w,b
  7926  0031FE  1174               	iorwf	(dtoa@n+2)& (0+255),w,b
  7927  003200  1175               	iorwf	(dtoa@n+3)& (0+255),w,b
  7928  003202  1176               	iorwf	(dtoa@n+4)& (0+255),w,b
  7929  003204  1177               	iorwf	(dtoa@n+5)& (0+255),w,b
  7930  003206  1178               	iorwf	(dtoa@n+6)& (0+255),w,b
  7931  003208  1179               	iorwf	(dtoa@n+7)& (0+255),w,b
  7932  00320A  A4D8               	btfss	status,2,c
  7933  00320C  EF0A  F019         	goto	u9171
  7934  003210  EF0C  F019         	goto	u9170
  7935  003214                     u9171:
  7936  003214  EF72  F018         	goto	l8471
  7937  003218                     u9170:
  7938  003218                     
  7939                           ; BSR set to: 0
  7940  003218  BF6D               	btfsc	(dtoa@p+1)& (0+255),7,b
  7941  00321A  EF19  F019         	goto	u9180
  7942  00321E  516D               	movf	(dtoa@p+1)& (0+255),w,b
  7943  003220  E106               	bnz	u9181
  7944  003222  056C               	decf	dtoa@p& (0+255),w,b
  7945  003224  B0D8               	btfsc	status,0,c
  7946  003226  EF17  F019         	goto	u9181
  7947  00322A  EF19  F019         	goto	u9180
  7948  00322E                     u9181:
  7949  00322E  EF72  F018         	goto	l8471
  7950  003232                     u9180:
  7951  003232                     
  7952                           ; BSR set to: 0
  7953  003232  BF6F               	btfsc	(dtoa@w+1)& (0+255),7,b
  7954  003234  EF24  F019         	goto	u9191
  7955  003238  516F               	movf	(dtoa@w+1)& (0+255),w,b
  7956  00323A  E108               	bnz	u9190
  7957  00323C  056E               	decf	dtoa@w& (0+255),w,b
  7958  00323E  A0D8               	btfss	status,0,c
  7959  003240  EF24  F019         	goto	u9191
  7960  003244  EF26  F019         	goto	u9190
  7961  003248                     u9191:
  7962  003248  EF2D  F019         	goto	l8491
  7963  00324C                     u9190:
  7964  00324C                     
  7965                           ; BSR set to: 0
  7966  00324C  B23E               	btfsc	_flags^0,1,c
  7967  00324E  EF2B  F019         	goto	u9201
  7968  003252  EF2D  F019         	goto	u9200
  7969  003256                     u9201:
  7970  003256  EF72  F018         	goto	l8471
  7971  00325A                     u9200:
  7972  00325A                     l8491:
  7973                           
  7974                           ; BSR set to: 0
  7975                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  7976  00325A  5170               	movf	dtoa@s& (0+255),w,b
  7977  00325C  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  7978  00325E  A4D8               	btfss	status,2,c
  7979  003260  EF34  F019         	goto	u9211
  7980  003264  EF36  F019         	goto	u9210
  7981  003268                     u9211:
  7982  003268  EF3D  F019         	goto	l8495
  7983  00326C                     u9210:
  7984  00326C                     
  7985                           ; BSR set to: 0
  7986  00326C  A43E               	btfss	_flags^0,2,c
  7987  00326E  EF3B  F019         	goto	u9221
  7988  003272  EF3D  F019         	goto	u9220
  7989  003276                     u9221:
  7990  003276  EF5C  F019         	goto	l8505
  7991  00327A                     u9220:
  7992  00327A                     l8495:
  7993                           
  7994                           ; BSR set to: 0
  7995                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  7996  00327A  077A               	decf	dtoa@i& (0+255),f,b
  7997  00327C  A0D8               	btfss	status,0,c
  7998  00327E  077B               	decf	(dtoa@i+1)& (0+255),f,b
  7999  003280                     
  8000                           ; BSR set to: 0
  8001                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  8002  003280  5170               	movf	dtoa@s& (0+255),w,b
  8003  003282  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  8004  003284  A4D8               	btfss	status,2,c
  8005  003286  EF47  F019         	goto	u9231
  8006  00328A  EF49  F019         	goto	u9230
  8007  00328E                     u9231:
  8008  00328E  EF4F  F019         	goto	l8501
  8009  003292                     u9230:
  8010  003292                     
  8011                           ; BSR set to: 0
  8012  003292  0E00               	movlw	0
  8013  003294  6F6B               	movwf	(_dtoa$3539+1)& (0+255),b
  8014  003296  0E2B               	movlw	43
  8015  003298  6F6A               	movwf	_dtoa$3539& (0+255),b
  8016  00329A  EF53  F019         	goto	l8503
  8017  00329E                     l8501:
  8018                           
  8019                           ; BSR set to: 0
  8020  00329E  0E00               	movlw	0
  8021  0032A0  6F6B               	movwf	(_dtoa$3539+1)& (0+255),b
  8022  0032A2  0E2D               	movlw	45
  8023  0032A4  6F6A               	movwf	_dtoa$3539& (0+255),b
  8024  0032A6                     l8503:
  8025                           
  8026                           ; BSR set to: 0
  8027  0032A6  0E3E               	movlw	low _dbuf
  8028  0032A8  257A               	addwf	dtoa@i& (0+255),w,b
  8029  0032AA  6ED9               	movwf	fsr2l,c
  8030  0032AC  0E01               	movlw	high _dbuf
  8031  0032AE  217B               	addwfc	(dtoa@i+1)& (0+255),w,b
  8032  0032B0  6EDA               	movwf	fsr2h,c
  8033  0032B2  0060  F1AB  FFDF   	movff	_dtoa$3539,indf2
  8034  0032B8                     l8505:
  8035                           
  8036                           ; BSR set to: 0
  8037                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  8038  0032B8  C060  F026         	movff	dtoa@fp,pad@fp
  8039  0032BC  C061  F027         	movff	dtoa@fp+1,pad@fp+1
  8040  0032C0  0E3E               	movlw	low _dbuf
  8041  0032C2  257A               	addwf	dtoa@i& (0+255),w,b
  8042  0032C4  6E28               	movwf	pad@buf^0,c
  8043  0032C6  0E01               	movlw	high _dbuf
  8044  0032C8  217B               	addwfc	(dtoa@i+1)& (0+255),w,b
  8045  0032CA  6E29               	movwf	(pad@buf+1)^0,c
  8046  0032CC  C06E  F02A         	movff	dtoa@w,pad@p
  8047  0032D0  C06F  F02B         	movff	dtoa@w+1,pad@p+1
  8048  0032D4  EC2F  F028         	call	_pad	;wreg free
  8049  0032D8  C026  F060         	movff	?_pad,?_dtoa
  8050  0032DC  C027  F061         	movff	?_pad+1,?_dtoa+1
  8051  0032E0  0012               	return		;funcret
  8052  0032E2                     __end_of_dtoa:
  8053                           	callstack 0
  8054                           
  8055 ;; *************** function _pad *****************
  8056 ;; Defined at:
  8057 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  8058 ;; Parameters:    Size  Location     Type
  8059 ;;  fp              2   37[COMRAM] PTR struct _IO_FILE
  8060 ;;		 -> NULL(0), 
  8061 ;;  buf             2   39[COMRAM] PTR unsigned char 
  8062 ;;		 -> dbuf(80), 
  8063 ;;  p               2   41[COMRAM] int 
  8064 ;; Auto vars:     Size  Location     Type
  8065 ;;  w               2   46[COMRAM] int 
  8066 ;;  i               2   44[COMRAM] int 
  8067 ;; Return value:  Size  Location     Type
  8068 ;;                  2   37[COMRAM] int 
  8069 ;; Registers used:
  8070 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8071 ;; Tracked objects:
  8072 ;;		On entry : 0/0
  8073 ;;		On exit  : 0/0
  8074 ;;		Unchanged: 0/0
  8075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8076 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8077 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8078 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8079 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8080 ;;Total ram usage:       11 bytes
  8081 ;; Hardware stack levels used: 1
  8082 ;; Hardware stack levels required when called: 12
  8083 ;; This function calls:
  8084 ;;		_fputc
  8085 ;;		_fputs
  8086 ;;		_strlen
  8087 ;; This function is called by:
  8088 ;;		_dtoa
  8089 ;;		_efgtoa
  8090 ;;		_utoa
  8091 ;; This function uses a non-reentrant model
  8092 ;;
  8093                           
  8094                           	psect	text27
  8095  00505E                     __ptext27:
  8096                           	callstack 0
  8097  00505E                     _pad:
  8098                           	callstack 12
  8099  00505E                     
  8100                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  8101  00505E  A03E               	btfss	_flags^0,0,c
  8102  005060  EF34  F028         	goto	u8821
  8103  005064  EF36  F028         	goto	u8820
  8104  005068                     u8821:
  8105  005068  EF40  F028         	goto	l8361
  8106  00506C                     u8820:
  8107  00506C                     
  8108                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  8109  00506C  C028  F01F         	movff	pad@buf,fputs@s
  8110  005070  C029  F020         	movff	pad@buf+1,fputs@s+1
  8111  005074  C026  F021         	movff	pad@fp,fputs@fp
  8112  005078  C027  F022         	movff	pad@fp+1,fputs@fp+1
  8113  00507C  EC59  F02D         	call	_fputs	;wreg free
  8114  005080                     l8361:
  8115                           
  8116                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  8117  005080  BE2B               	btfsc	(pad@p+1)^0,7,c
  8118  005082  EF45  F028         	goto	u8831
  8119  005086  EF47  F028         	goto	u8830
  8120  00508A                     u8831:
  8121  00508A  EF4D  F028         	goto	l8365
  8122  00508E                     u8830:
  8123  00508E  C02A  F02F         	movff	pad@p,pad@w
  8124  005092  C02B  F030         	movff	pad@p+1,pad@w+1
  8125  005096  EF51  F028         	goto	l2114
  8126  00509A                     l8365:
  8127  00509A  0E00               	movlw	0
  8128  00509C  6E30               	movwf	(pad@w+1)^0,c
  8129  00509E  0E00               	movlw	0
  8130  0050A0  6E2F               	movwf	pad@w^0,c
  8131  0050A2                     l2114:
  8132                           
  8133                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  8134  0050A2  0E00               	movlw	0
  8135  0050A4  6E2E               	movwf	(pad@i+1)^0,c
  8136  0050A6  0E00               	movlw	0
  8137  0050A8  6E2D               	movwf	pad@i^0,c
  8138                           
  8139                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8140  0050AA  EF63  F028         	goto	l8371
  8141  0050AE                     l8367:
  8142                           
  8143                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  8144  0050AE  0E00               	movlw	0
  8145  0050B0  6E17               	movwf	(fputc@c+1)^0,c
  8146  0050B2  0E20               	movlw	32
  8147  0050B4  6E16               	movwf	fputc@c^0,c
  8148  0050B6  C026  F018         	movff	pad@fp,fputc@fp
  8149  0050BA  C027  F019         	movff	pad@fp+1,fputc@fp+1
  8150  0050BE  EC9E  F02A         	call	_fputc	;wreg free
  8151  0050C2                     
  8152                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  8153  0050C2  4A2D               	infsnz	pad@i^0,f,c
  8154  0050C4  2A2E               	incf	(pad@i+1)^0,f,c
  8155  0050C6                     l8371:
  8156                           
  8157                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8158  0050C6  502F               	movf	pad@w^0,w,c
  8159  0050C8  5C2D               	subwf	pad@i^0,w,c
  8160  0050CA  502E               	movf	(pad@i+1)^0,w,c
  8161  0050CC  0A80               	xorlw	128
  8162  0050CE  6E2C               	movwf	??_pad^0,c
  8163  0050D0  5030               	movf	(pad@w+1)^0,w,c
  8164  0050D2  0A80               	xorlw	128
  8165  0050D4  582C               	subwfb	??_pad^0,w,c
  8166  0050D6  A0D8               	btfss	status,0,c
  8167  0050D8  EF70  F028         	goto	u8841
  8168  0050DC  EF72  F028         	goto	u8840
  8169  0050E0                     u8841:
  8170  0050E0  EF57  F028         	goto	l8367
  8171  0050E4                     u8840:
  8172  0050E4                     
  8173                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  8174  0050E4  B03E               	btfsc	_flags^0,0,c
  8175  0050E6  EF77  F028         	goto	u8851
  8176  0050EA  EF79  F028         	goto	u8850
  8177  0050EE                     u8851:
  8178  0050EE  EF83  F028         	goto	l8375
  8179  0050F2                     u8850:
  8180  0050F2                     
  8181                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  8182  0050F2  C028  F01F         	movff	pad@buf,fputs@s
  8183  0050F6  C029  F020         	movff	pad@buf+1,fputs@s+1
  8184  0050FA  C026  F021         	movff	pad@fp,fputs@fp
  8185  0050FE  C027  F022         	movff	pad@fp+1,fputs@fp+1
  8186  005102  EC59  F02D         	call	_fputs	;wreg free
  8187  005106                     l8375:
  8188                           
  8189                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  8190  005106  C028  F014         	movff	pad@buf,strlen@s
  8191  00510A  C029  F015         	movff	pad@buf+1,strlen@s+1
  8192  00510E  ECDC  F02D         	call	_strlen	;wreg free
  8193  005112  502F               	movf	pad@w^0,w,c
  8194  005114  2414               	addwf	?_strlen^0,w,c
  8195  005116  6E26               	movwf	?_pad^0,c
  8196  005118  5030               	movf	(pad@w+1)^0,w,c
  8197  00511A  2015               	addwfc	(?_strlen+1)^0,w,c
  8198  00511C  6E27               	movwf	(?_pad+1)^0,c
  8199  00511E  0012               	return		;funcret
  8200  005120                     __end_of_pad:
  8201                           	callstack 0
  8202                           
  8203 ;; *************** function _strlen *****************
  8204 ;; Defined at:
  8205 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  8206 ;; Parameters:    Size  Location     Type
  8207 ;;  s               2   19[COMRAM] PTR const unsigned char 
  8208 ;;		 -> dbuf(80), 
  8209 ;; Auto vars:     Size  Location     Type
  8210 ;;  a               2   21[COMRAM] PTR const unsigned char 
  8211 ;;		 -> dbuf(80), 
  8212 ;; Return value:  Size  Location     Type
  8213 ;;                  2   19[COMRAM] unsigned int 
  8214 ;; Registers used:
  8215 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8216 ;; Tracked objects:
  8217 ;;		On entry : 0/0
  8218 ;;		On exit  : 0/0
  8219 ;;		Unchanged: 0/0
  8220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8221 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8222 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8224 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8225 ;;Total ram usage:        4 bytes
  8226 ;; Hardware stack levels used: 1
  8227 ;; Hardware stack levels required when called: 8
  8228 ;; This function calls:
  8229 ;;		Nothing
  8230 ;; This function is called by:
  8231 ;;		_pad
  8232 ;; This function uses a non-reentrant model
  8233 ;;
  8234                           
  8235                           	psect	text28
  8236  005BB8                     __ptext28:
  8237                           	callstack 0
  8238  005BB8                     _strlen:
  8239                           	callstack 15
  8240  005BB8  C014  F016         	movff	strlen@s,strlen@a
  8241  005BBC  C015  F017         	movff	strlen@s+1,strlen@a+1
  8242  005BC0  EFE4  F02D         	goto	l7785
  8243  005BC4                     l7783:
  8244  005BC4  4A14               	infsnz	strlen@s^0,f,c
  8245  005BC6  2A15               	incf	(strlen@s+1)^0,f,c
  8246  005BC8                     l7785:
  8247  005BC8  0060  F053  FFD9   	movff	strlen@s,fsr2l
  8248  005BCE  0060  F057  FFDA   	movff	strlen@s+1,fsr2h
  8249  005BD4  50DF               	movf	indf2,w,c
  8250  005BD6  A4D8               	btfss	status,2,c
  8251  005BD8  EFF0  F02D         	goto	u7891
  8252  005BDC  EFF2  F02D         	goto	u7890
  8253  005BE0                     u7891:
  8254  005BE0  EFE2  F02D         	goto	l7783
  8255  005BE4                     u7890:
  8256  005BE4  5016               	movf	strlen@a^0,w,c
  8257  005BE6  5C14               	subwf	strlen@s^0,w,c
  8258  005BE8  6E14               	movwf	?_strlen^0,c
  8259  005BEA  5017               	movf	(strlen@a+1)^0,w,c
  8260  005BEC  5815               	subwfb	(strlen@s+1)^0,w,c
  8261  005BEE  6E15               	movwf	(?_strlen+1)^0,c
  8262  005BF0  0012               	return		;funcret
  8263  005BF2                     __end_of_strlen:
  8264                           	callstack 0
  8265                           
  8266 ;; *************** function _fputs *****************
  8267 ;; Defined at:
  8268 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  8269 ;; Parameters:    Size  Location     Type
  8270 ;;  s               2   30[COMRAM] PTR const unsigned char 
  8271 ;;		 -> dbuf(80), 
  8272 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  8273 ;;		 -> NULL(0), 
  8274 ;; Auto vars:     Size  Location     Type
  8275 ;;  i               2   35[COMRAM] int 
  8276 ;;  c               1   34[COMRAM] unsigned char 
  8277 ;; Return value:  Size  Location     Type
  8278 ;;                  2   30[COMRAM] int 
  8279 ;; Registers used:
  8280 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8281 ;; Tracked objects:
  8282 ;;		On entry : 0/0
  8283 ;;		On exit  : 0/0
  8284 ;;		Unchanged: 0/0
  8285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8286 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8287 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8289 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8290 ;;Total ram usage:        7 bytes
  8291 ;; Hardware stack levels used: 1
  8292 ;; Hardware stack levels required when called: 11
  8293 ;; This function calls:
  8294 ;;		_fputc
  8295 ;; This function is called by:
  8296 ;;		_pad
  8297 ;; This function uses a non-reentrant model
  8298 ;;
  8299                           
  8300                           	psect	text29
  8301  005AB2                     __ptext29:
  8302                           	callstack 0
  8303  005AB2                     _fputs:
  8304                           	callstack 12
  8305  005AB2  0E00               	movlw	0
  8306  005AB4  6E25               	movwf	(fputs@i+1)^0,c
  8307  005AB6  0E00               	movlw	0
  8308  005AB8  6E24               	movwf	fputs@i^0,c
  8309  005ABA  EF6A  F02D         	goto	l7779
  8310  005ABE                     l7775:
  8311  005ABE  C023  F016         	movff	fputs@c,fputc@c
  8312  005AC2  6A17               	clrf	(fputc@c+1)^0,c
  8313  005AC4  C021  F018         	movff	fputs@fp,fputc@fp
  8314  005AC8  C022  F019         	movff	fputs@fp+1,fputc@fp+1
  8315  005ACC  EC9E  F02A         	call	_fputc	;wreg free
  8316  005AD0  4A24               	infsnz	fputs@i^0,f,c
  8317  005AD2  2A25               	incf	(fputs@i+1)^0,f,c
  8318  005AD4                     l7779:
  8319  005AD4  5024               	movf	fputs@i^0,w,c
  8320  005AD6  241F               	addwf	fputs@s^0,w,c
  8321  005AD8  6ED9               	movwf	fsr2l,c
  8322  005ADA  5025               	movf	(fputs@i+1)^0,w,c
  8323  005ADC  2020               	addwfc	(fputs@s+1)^0,w,c
  8324  005ADE  6EDA               	movwf	fsr2h,c
  8325  005AE0  50DF               	movf	indf2,w,c
  8326  005AE2  6E23               	movwf	fputs@c^0,c
  8327  005AE4  5023               	movf	fputs@c^0,w,c
  8328  005AE6  A4D8               	btfss	status,2,c
  8329  005AE8  EF78  F02D         	goto	u7881
  8330  005AEC  EF7A  F02D         	goto	u7880
  8331  005AF0                     u7881:
  8332  005AF0  EF5F  F02D         	goto	l7775
  8333  005AF4                     u7880:
  8334  005AF4  0012               	return		;funcret
  8335  005AF6                     __end_of_fputs:
  8336                           	callstack 0
  8337                           
  8338 ;; *************** function _fputc *****************
  8339 ;; Defined at:
  8340 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  8341 ;; Parameters:    Size  Location     Type
  8342 ;;  c               2   21[COMRAM] int 
  8343 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
  8344 ;;		 -> NULL(0), 
  8345 ;; Auto vars:     Size  Location     Type
  8346 ;;		None
  8347 ;; Return value:  Size  Location     Type
  8348 ;;                  2   21[COMRAM] int 
  8349 ;; Registers used:
  8350 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8351 ;; Tracked objects:
  8352 ;;		On entry : 0/0
  8353 ;;		On exit  : 0/0
  8354 ;;		Unchanged: 0/0
  8355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8356 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8358 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8359 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8360 ;;Total ram usage:        9 bytes
  8361 ;; Hardware stack levels used: 1
  8362 ;; Hardware stack levels required when called: 10
  8363 ;; This function calls:
  8364 ;;		_putch
  8365 ;; This function is called by:
  8366 ;;		_pad
  8367 ;;		_vfpfcnvrt
  8368 ;;		_fputs
  8369 ;; This function uses a non-reentrant model
  8370 ;;
  8371                           
  8372                           	psect	text30
  8373  00553C                     __ptext30:
  8374                           	callstack 0
  8375  00553C                     _fputc:
  8376                           	callstack 12
  8377  00553C  5018               	movf	fputc@fp^0,w,c
  8378  00553E  1019               	iorwf	(fputc@fp+1)^0,w,c
  8379  005540  B4D8               	btfsc	status,2,c
  8380  005542  EFA5  F02A         	goto	u7451
  8381  005546  EFA7  F02A         	goto	u7450
  8382  00554A                     u7451:
  8383  00554A  EFB0  F02A         	goto	l7561
  8384  00554E                     u7450:
  8385  00554E  5018               	movf	fputc@fp^0,w,c
  8386  005550  1019               	iorwf	(fputc@fp+1)^0,w,c
  8387  005552  A4D8               	btfss	status,2,c
  8388  005554  EFAE  F02A         	goto	u7461
  8389  005558  EFB0  F02A         	goto	u7460
  8390  00555C                     u7461:
  8391  00555C  EFB5  F02A         	goto	l7563
  8392  005560                     u7460:
  8393  005560                     l7561:
  8394  005560  5016               	movf	fputc@c^0,w,c
  8395  005562  EC33  F031         	call	_putch
  8396  005566  EFE8  F02A         	goto	l2327
  8397  00556A                     l7563:
  8398  00556A  EE20 F004          	lfsr	2,4
  8399  00556E  5018               	movf	fputc@fp^0,w,c
  8400  005570  26D9               	addwf	fsr2l,f,c
  8401  005572  5019               	movf	(fputc@fp+1)^0,w,c
  8402  005574  22DA               	addwfc	fsr2h,f,c
  8403  005576  50DE               	movf	postinc2,w,c
  8404  005578  10DE               	iorwf	postinc2,w,c
  8405  00557A  B4D8               	btfsc	status,2,c
  8406  00557C  EFC2  F02A         	goto	u7471
  8407  005580  EFC4  F02A         	goto	u7470
  8408  005584                     u7471:
  8409  005584  EFDF  F02A         	goto	l7567
  8410  005588                     u7470:
  8411  005588  EE20 F004          	lfsr	2,4
  8412  00558C  5018               	movf	fputc@fp^0,w,c
  8413  00558E  26D9               	addwf	fsr2l,f,c
  8414  005590  5019               	movf	(fputc@fp+1)^0,w,c
  8415  005592  22DA               	addwfc	fsr2h,f,c
  8416  005594  EE10 F002          	lfsr	1,2
  8417  005598  5018               	movf	fputc@fp^0,w,c
  8418  00559A  26E1               	addwf	fsr1l,f,c
  8419  00559C  5019               	movf	(fputc@fp+1)^0,w,c
  8420  00559E  22E2               	addwfc	fsr1h,f,c
  8421  0055A0  50DE               	movf	postinc2,w,c
  8422  0055A2  5CE6               	subwf	postinc1,w,c
  8423  0055A4  50E6               	movf	postinc1,w,c
  8424  0055A6  0A80               	xorlw	128
  8425  0055A8  6E1E               	movwf	(??_fputc+4)^0,c
  8426  0055AA  50DE               	movf	postinc2,w,c
  8427  0055AC  0A80               	xorlw	128
  8428  0055AE  581E               	subwfb	(??_fputc+4)^0,w,c
  8429  0055B0  B0D8               	btfsc	status,0,c
  8430  0055B2  EFDD  F02A         	goto	u7481
  8431  0055B6  EFDF  F02A         	goto	u7480
  8432  0055BA                     u7481:
  8433  0055BA  EFE8  F02A         	goto	l2327
  8434  0055BE                     u7480:
  8435  0055BE                     l7567:
  8436  0055BE  EE20 F002          	lfsr	2,2
  8437  0055C2  5018               	movf	fputc@fp^0,w,c
  8438  0055C4  26D9               	addwf	fsr2l,f,c
  8439  0055C6  5019               	movf	(fputc@fp+1)^0,w,c
  8440  0055C8  22DA               	addwfc	fsr2h,f,c
  8441  0055CA  2ADE               	incf	postinc2,f,c
  8442  0055CC  0E00               	movlw	0
  8443  0055CE  22DD               	addwfc	postdec2,f,c
  8444  0055D0                     l2327:
  8445  0055D0  0012               	return		;funcret
  8446  0055D2                     __end_of_fputc:
  8447                           	callstack 0
  8448                           
  8449 ;; *************** function _putch *****************
  8450 ;; Defined at:
  8451 ;;		line 230 in file "mcc_generated_files/uart1.c"
  8452 ;; Parameters:    Size  Location     Type
  8453 ;;  txData          1    wreg     unsigned char 
  8454 ;; Auto vars:     Size  Location     Type
  8455 ;;  txData          1   20[COMRAM] unsigned char 
  8456 ;; Return value:  Size  Location     Type
  8457 ;;                  1    wreg      void 
  8458 ;; Registers used:
  8459 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8460 ;; Tracked objects:
  8461 ;;		On entry : 0/0
  8462 ;;		On exit  : 0/0
  8463 ;;		Unchanged: 0/0
  8464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8466 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8468 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8469 ;;Total ram usage:        1 bytes
  8470 ;; Hardware stack levels used: 1
  8471 ;; Hardware stack levels required when called: 9
  8472 ;; This function calls:
  8473 ;;		_UART1_Write
  8474 ;; This function is called by:
  8475 ;;		_fputc
  8476 ;; This function uses a non-reentrant model
  8477 ;;
  8478                           
  8479                           	psect	text31
  8480  006266                     __ptext31:
  8481                           	callstack 0
  8482  006266                     _putch:
  8483                           	callstack 12
  8484                           
  8485                           ;incstack = 0
  8486                           ;putch@txData stored from wreg
  8487  006266  6E15               	movwf	putch@txData^0,c
  8488  006268                     
  8489                           ;mcc_generated_files/uart1.c: 230: void putch(char txData);mcc_generated_files/uart1.c: 
      +                          231: {;mcc_generated_files/uart1.c: 232:     UART1_Write(txData);
  8490  006268  5015               	movf	putch@txData^0,w,c
  8491  00626A  EC19  F02C         	call	_UART1_Write
  8492  00626E  0012               	return		;funcret
  8493  006270                     __end_of_putch:
  8494                           	callstack 0
  8495                           
  8496 ;; *************** function _UART1_Write *****************
  8497 ;; Defined at:
  8498 ;;		line 202 in file "mcc_generated_files/uart1.c"
  8499 ;; Parameters:    Size  Location     Type
  8500 ;;  txData          1    wreg     unsigned char 
  8501 ;; Auto vars:     Size  Location     Type
  8502 ;;  txData          1   19[COMRAM] unsigned char 
  8503 ;; Return value:  Size  Location     Type
  8504 ;;                  1    wreg      void 
  8505 ;; Registers used:
  8506 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8507 ;; Tracked objects:
  8508 ;;		On entry : 0/0
  8509 ;;		On exit  : 0/0
  8510 ;;		Unchanged: 0/0
  8511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8513 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8515 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8516 ;;Total ram usage:        1 bytes
  8517 ;; Hardware stack levels used: 1
  8518 ;; Hardware stack levels required when called: 8
  8519 ;; This function calls:
  8520 ;;		Nothing
  8521 ;; This function is called by:
  8522 ;;		_putch
  8523 ;; This function uses a non-reentrant model
  8524 ;;
  8525                           
  8526                           	psect	text32
  8527  005832                     __ptext32:
  8528                           	callstack 0
  8529  005832                     _UART1_Write:
  8530                           	callstack 12
  8531                           
  8532                           ;incstack = 0
  8533                           ;UART1_Write@txData stored from wreg
  8534  005832  6E14               	movwf	UART1_Write@txData^0,c
  8535  005834                     l7539:
  8536                           
  8537                           ;mcc_generated_files/uart1.c: 204:     while(0 == uart1TxBufferRemaining)
  8538  005834  504C               	movf	_uart1TxBufferRemaining^0,w,c	;volatile
  8539  005836  B4D8               	btfsc	status,2,c
  8540  005838  EF20  F02C         	goto	u7421
  8541  00583C  EF22  F02C         	goto	u7420
  8542  005840                     u7421:
  8543  005840  EF1A  F02C         	goto	l7539
  8544  005844                     u7420:
  8545  005844                     
  8546                           ;mcc_generated_files/uart1.c: 208:     if(0 == PIE3bits.U1TXIE)
  8547  005844  0139               	movlb	57	; () banked
  8548  005846  B993               	btfsc	147,4,b	;volatile
  8549  005848  EF28  F02C         	goto	u7431
  8550  00584C  EF2A  F02C         	goto	u7430
  8551  005850                     u7431:
  8552  005850  EF2F  F02C         	goto	l309
  8553  005854                     u7430:
  8554  005854                     
  8555                           ; BSR set to: 57
  8556                           ;mcc_generated_files/uart1.c: 209:     {;mcc_generated_files/uart1.c: 210:         U1TXB
      +                           = txData;
  8557  005854  0060  F053  FDEA   	movff	UART1_Write@txData,15850	;volatile
  8558                           
  8559                           ;mcc_generated_files/uart1.c: 211:     }
  8560  00585A  EF45  F02C         	goto	l7553
  8561  00585E                     l309:
  8562                           
  8563                           ; BSR set to: 57
  8564                           ;mcc_generated_files/uart1.c: 213:     {;mcc_generated_files/uart1.c: 214:         PIE3b
      +                          its.U1TXIE = 0;
  8565  00585E  9993               	bcf	147,4,b	;volatile
  8566  005860                     
  8567                           ; BSR set to: 57
  8568                           ;mcc_generated_files/uart1.c: 215:         uart1TxBuffer[uart1TxHead++] = txData;
  8569  005860  0E10               	movlw	low _uart1TxBuffer
  8570  005862  2447               	addwf	_uart1TxHead^0,w,c	;volatile
  8571  005864  6ED9               	movwf	fsr2l,c
  8572  005866  6ADA               	clrf	fsr2h,c
  8573  005868  0E01               	movlw	high _uart1TxBuffer
  8574  00586A  22DA               	addwfc	fsr2h,f,c
  8575  00586C  0060  F053  FFDF   	movff	UART1_Write@txData,indf2
  8576  005872                     
  8577                           ; BSR set to: 57
  8578  005872  2A47               	incf	_uart1TxHead^0,f,c	;volatile
  8579  005874                     
  8580                           ; BSR set to: 57
  8581                           ;mcc_generated_files/uart1.c: 216:         if(sizeof(uart1TxBuffer) <= uart1TxHead)
  8582  005874  0E07               	movlw	7
  8583  005876  6447               	cpfsgt	_uart1TxHead^0,c	;volatile
  8584  005878  EF40  F02C         	goto	u7441
  8585  00587C  EF42  F02C         	goto	u7440
  8586  005880                     u7441:
  8587  005880  EF44  F02C         	goto	l7551
  8588  005884                     u7440:
  8589  005884                     
  8590                           ; BSR set to: 57
  8591                           ;mcc_generated_files/uart1.c: 217:         {;mcc_generated_files/uart1.c: 218:          
      +                             uart1TxHead = 0;
  8592  005884  0E00               	movlw	0
  8593  005886  6E47               	movwf	_uart1TxHead^0,c	;volatile
  8594  005888                     l7551:
  8595                           
  8596                           ; BSR set to: 57
  8597                           ;mcc_generated_files/uart1.c: 220:         uart1TxBufferRemaining--;
  8598  005888  064C               	decf	_uart1TxBufferRemaining^0,f,c	;volatile
  8599  00588A                     l7553:
  8600                           
  8601                           ; BSR set to: 57
  8602                           ;mcc_generated_files/uart1.c: 222:     PIE3bits.U1TXIE = 1;
  8603  00588A  8993               	bsf	147,4,b	;volatile
  8604  00588C                     
  8605                           ; BSR set to: 57
  8606  00588C  0012               	return		;funcret
  8607  00588E                     __end_of_UART1_Write:
  8608                           	callstack 0
  8609                           
  8610 ;; *************** function _abs *****************
  8611 ;; Defined at:
  8612 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  8613 ;; Parameters:    Size  Location     Type
  8614 ;;  a               2   37[COMRAM] int 
  8615 ;; Auto vars:     Size  Location     Type
  8616 ;;		None
  8617 ;; Return value:  Size  Location     Type
  8618 ;;                  2   37[COMRAM] int 
  8619 ;; Registers used:
  8620 ;;		wreg, status,2, status,0
  8621 ;; Tracked objects:
  8622 ;;		On entry : 0/0
  8623 ;;		On exit  : 0/0
  8624 ;;		Unchanged: 0/0
  8625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8626 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8628 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8629 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8630 ;;Total ram usage:        4 bytes
  8631 ;; Hardware stack levels used: 1
  8632 ;; Hardware stack levels required when called: 8
  8633 ;; This function calls:
  8634 ;;		Nothing
  8635 ;; This function is called by:
  8636 ;;		_dtoa
  8637 ;; This function uses a non-reentrant model
  8638 ;;
  8639                           
  8640                           	psect	text33
  8641  005B3A                     __ptext33:
  8642                           	callstack 0
  8643  005B3A                     _abs:
  8644                           	callstack 16
  8645  005B3A  BE27               	btfsc	(abs@a+1)^0,7,c
  8646  005B3C  EFAA  F02D         	goto	u8860
  8647  005B40  5027               	movf	(abs@a+1)^0,w,c
  8648  005B42  E106               	bnz	u8861
  8649  005B44  0426               	decf	abs@a^0,w,c
  8650  005B46  B0D8               	btfsc	status,0,c
  8651  005B48  EFA8  F02D         	goto	u8861
  8652  005B4C  EFAA  F02D         	goto	u8860
  8653  005B50                     u8861:
  8654  005B50  EFB8  F02D         	goto	l2293
  8655  005B54                     u8860:
  8656  005B54  C026  F028         	movff	abs@a,??_abs
  8657  005B58  C027  F029         	movff	abs@a+1,??_abs+1
  8658  005B5C  1E28               	comf	??_abs^0,f,c
  8659  005B5E  1E29               	comf	(??_abs+1)^0,f,c
  8660  005B60  4A28               	infsnz	??_abs^0,f,c
  8661  005B62  2A29               	incf	(??_abs+1)^0,f,c
  8662  005B64  C028  F026         	movff	??_abs,?_abs
  8663  005B68  C029  F027         	movff	??_abs+1,?_abs+1
  8664  005B6C  EFBC  F02D         	goto	l2296
  8665  005B70                     l2293:
  8666  005B70  C026  F026         	movff	abs@a,?_abs
  8667  005B74  C027  F027         	movff	abs@a+1,?_abs+1
  8668  005B78                     l2296:
  8669  005B78  0012               	return		;funcret
  8670  005B7A                     __end_of_abs:
  8671                           	callstack 0
  8672                           
  8673 ;; *************** function ___aomod *****************
  8674 ;; Defined at:
  8675 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  8676 ;; Parameters:    Size  Location     Type
  8677 ;;  dividend        8   19[COMRAM] long long 
  8678 ;;  divisor         8   27[COMRAM] long long 
  8679 ;; Auto vars:     Size  Location     Type
  8680 ;;  sign            1   36[COMRAM] unsigned char 
  8681 ;;  counter         1   35[COMRAM] unsigned char 
  8682 ;; Return value:  Size  Location     Type
  8683 ;;                  8   19[COMRAM] long long 
  8684 ;; Registers used:
  8685 ;;		wreg, status,2, status,0
  8686 ;; Tracked objects:
  8687 ;;		On entry : 0/0
  8688 ;;		On exit  : 0/0
  8689 ;;		Unchanged: 0/0
  8690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8691 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8692 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8694 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8695 ;;Total ram usage:       18 bytes
  8696 ;; Hardware stack levels used: 1
  8697 ;; Hardware stack levels required when called: 8
  8698 ;; This function calls:
  8699 ;;		Nothing
  8700 ;; This function is called by:
  8701 ;;		_dtoa
  8702 ;; This function uses a non-reentrant model
  8703 ;;
  8704                           
  8705                           	psect	text34
  8706  004220                     __ptext34:
  8707                           	callstack 0
  8708  004220                     ___aomod:
  8709                           	callstack 16
  8710  004220  0E00               	movlw	0
  8711  004222  6E25               	movwf	___aomod@sign^0,c
  8712  004224  BE1B               	btfsc	(___aomod@dividend+7)^0,7,c
  8713  004226  EF19  F021         	goto	u7990
  8714  00422A  EF17  F021         	goto	u7991
  8715  00422E                     u7991:
  8716  00422E  EF2B  F021         	goto	l7847
  8717  004232                     u7990:
  8718  004232  1E1B               	comf	(___aomod@dividend+7)^0,f,c
  8719  004234  1E1A               	comf	(___aomod@dividend+6)^0,f,c
  8720  004236  1E19               	comf	(___aomod@dividend+5)^0,f,c
  8721  004238  1E18               	comf	(___aomod@dividend+4)^0,f,c
  8722  00423A  1E17               	comf	(___aomod@dividend+3)^0,f,c
  8723  00423C  1E16               	comf	(___aomod@dividend+2)^0,f,c
  8724  00423E  1E15               	comf	(___aomod@dividend+1)^0,f,c
  8725  004240  6C14               	negf	___aomod@dividend^0,c
  8726  004242  0E00               	movlw	0
  8727  004244  2215               	addwfc	(___aomod@dividend+1)^0,f,c
  8728  004246  2216               	addwfc	(___aomod@dividend+2)^0,f,c
  8729  004248  2217               	addwfc	(___aomod@dividend+3)^0,f,c
  8730  00424A  2218               	addwfc	(___aomod@dividend+4)^0,f,c
  8731  00424C  2219               	addwfc	(___aomod@dividend+5)^0,f,c
  8732  00424E  221A               	addwfc	(___aomod@dividend+6)^0,f,c
  8733  004250  221B               	addwfc	(___aomod@dividend+7)^0,f,c
  8734  004252  0E01               	movlw	1
  8735  004254  6E25               	movwf	___aomod@sign^0,c
  8736  004256                     l7847:
  8737  004256  BE23               	btfsc	(___aomod@divisor+7)^0,7,c
  8738  004258  EF32  F021         	goto	u8000
  8739  00425C  EF30  F021         	goto	u8001
  8740  004260                     u8001:
  8741  004260  EF42  F021         	goto	l7851
  8742  004264                     u8000:
  8743  004264  1E23               	comf	(___aomod@divisor+7)^0,f,c
  8744  004266  1E22               	comf	(___aomod@divisor+6)^0,f,c
  8745  004268  1E21               	comf	(___aomod@divisor+5)^0,f,c
  8746  00426A  1E20               	comf	(___aomod@divisor+4)^0,f,c
  8747  00426C  1E1F               	comf	(___aomod@divisor+3)^0,f,c
  8748  00426E  1E1E               	comf	(___aomod@divisor+2)^0,f,c
  8749  004270  1E1D               	comf	(___aomod@divisor+1)^0,f,c
  8750  004272  6C1C               	negf	___aomod@divisor^0,c
  8751  004274  0E00               	movlw	0
  8752  004276  221D               	addwfc	(___aomod@divisor+1)^0,f,c
  8753  004278  221E               	addwfc	(___aomod@divisor+2)^0,f,c
  8754  00427A  221F               	addwfc	(___aomod@divisor+3)^0,f,c
  8755  00427C  2220               	addwfc	(___aomod@divisor+4)^0,f,c
  8756  00427E  2221               	addwfc	(___aomod@divisor+5)^0,f,c
  8757  004280  2222               	addwfc	(___aomod@divisor+6)^0,f,c
  8758  004282  2223               	addwfc	(___aomod@divisor+7)^0,f,c
  8759  004284                     l7851:
  8760  004284  501C               	movf	___aomod@divisor^0,w,c
  8761  004286  101D               	iorwf	(___aomod@divisor+1)^0,w,c
  8762  004288  101E               	iorwf	(___aomod@divisor+2)^0,w,c
  8763  00428A  101F               	iorwf	(___aomod@divisor+3)^0,w,c
  8764  00428C  1020               	iorwf	(___aomod@divisor+4)^0,w,c
  8765  00428E  1021               	iorwf	(___aomod@divisor+5)^0,w,c
  8766  004290  1022               	iorwf	(___aomod@divisor+6)^0,w,c
  8767  004292  1023               	iorwf	(___aomod@divisor+7)^0,w,c
  8768  004294  B4D8               	btfsc	status,2,c
  8769  004296  EF4F  F021         	goto	u8011
  8770  00429A  EF51  F021         	goto	u8010
  8771  00429E                     u8011:
  8772  00429E  EF99  F021         	goto	l7867
  8773  0042A2                     u8010:
  8774  0042A2  0E01               	movlw	1
  8775  0042A4  6E24               	movwf	___aomod@counter^0,c
  8776  0042A6  EF5F  F021         	goto	l7857
  8777  0042AA                     l7855:
  8778  0042AA  90D8               	bcf	status,0,c
  8779  0042AC  361C               	rlcf	___aomod@divisor^0,f,c
  8780  0042AE  361D               	rlcf	(___aomod@divisor+1)^0,f,c
  8781  0042B0  361E               	rlcf	(___aomod@divisor+2)^0,f,c
  8782  0042B2  361F               	rlcf	(___aomod@divisor+3)^0,f,c
  8783  0042B4  3620               	rlcf	(___aomod@divisor+4)^0,f,c
  8784  0042B6  3621               	rlcf	(___aomod@divisor+5)^0,f,c
  8785  0042B8  3622               	rlcf	(___aomod@divisor+6)^0,f,c
  8786  0042BA  3623               	rlcf	(___aomod@divisor+7)^0,f,c
  8787  0042BC  2A24               	incf	___aomod@counter^0,f,c
  8788  0042BE                     l7857:
  8789  0042BE  AE23               	btfss	(___aomod@divisor+7)^0,7,c
  8790  0042C0  EF64  F021         	goto	u8021
  8791  0042C4  EF66  F021         	goto	u8020
  8792  0042C8                     u8021:
  8793  0042C8  EF55  F021         	goto	l7855
  8794  0042CC                     u8020:
  8795  0042CC                     l7859:
  8796  0042CC  501C               	movf	___aomod@divisor^0,w,c
  8797  0042CE  5C14               	subwf	___aomod@dividend^0,w,c
  8798  0042D0  501D               	movf	(___aomod@divisor+1)^0,w,c
  8799  0042D2  5815               	subwfb	(___aomod@dividend+1)^0,w,c
  8800  0042D4  501E               	movf	(___aomod@divisor+2)^0,w,c
  8801  0042D6  5816               	subwfb	(___aomod@dividend+2)^0,w,c
  8802  0042D8  501F               	movf	(___aomod@divisor+3)^0,w,c
  8803  0042DA  5817               	subwfb	(___aomod@dividend+3)^0,w,c
  8804  0042DC  5020               	movf	(___aomod@divisor+4)^0,w,c
  8805  0042DE  5818               	subwfb	(___aomod@dividend+4)^0,w,c
  8806  0042E0  5021               	movf	(___aomod@divisor+5)^0,w,c
  8807  0042E2  5819               	subwfb	(___aomod@dividend+5)^0,w,c
  8808  0042E4  5022               	movf	(___aomod@divisor+6)^0,w,c
  8809  0042E6  581A               	subwfb	(___aomod@dividend+6)^0,w,c
  8810  0042E8  5023               	movf	(___aomod@divisor+7)^0,w,c
  8811  0042EA  581B               	subwfb	(___aomod@dividend+7)^0,w,c
  8812  0042EC  A0D8               	btfss	status,0,c
  8813  0042EE  EF7B  F021         	goto	u8031
  8814  0042F2  EF7D  F021         	goto	u8030
  8815  0042F6                     u8031:
  8816  0042F6  EF8D  F021         	goto	l7863
  8817  0042FA                     u8030:
  8818  0042FA  501C               	movf	___aomod@divisor^0,w,c
  8819  0042FC  5E14               	subwf	___aomod@dividend^0,f,c
  8820  0042FE  501D               	movf	(___aomod@divisor+1)^0,w,c
  8821  004300  5A15               	subwfb	(___aomod@dividend+1)^0,f,c
  8822  004302  501E               	movf	(___aomod@divisor+2)^0,w,c
  8823  004304  5A16               	subwfb	(___aomod@dividend+2)^0,f,c
  8824  004306  501F               	movf	(___aomod@divisor+3)^0,w,c
  8825  004308  5A17               	subwfb	(___aomod@dividend+3)^0,f,c
  8826  00430A  5020               	movf	(___aomod@divisor+4)^0,w,c
  8827  00430C  5A18               	subwfb	(___aomod@dividend+4)^0,f,c
  8828  00430E  5021               	movf	(___aomod@divisor+5)^0,w,c
  8829  004310  5A19               	subwfb	(___aomod@dividend+5)^0,f,c
  8830  004312  5022               	movf	(___aomod@divisor+6)^0,w,c
  8831  004314  5A1A               	subwfb	(___aomod@dividend+6)^0,f,c
  8832  004316  5023               	movf	(___aomod@divisor+7)^0,w,c
  8833  004318  5A1B               	subwfb	(___aomod@dividend+7)^0,f,c
  8834  00431A                     l7863:
  8835  00431A  90D8               	bcf	status,0,c
  8836  00431C  3223               	rrcf	(___aomod@divisor+7)^0,f,c
  8837  00431E  3222               	rrcf	(___aomod@divisor+6)^0,f,c
  8838  004320  3221               	rrcf	(___aomod@divisor+5)^0,f,c
  8839  004322  3220               	rrcf	(___aomod@divisor+4)^0,f,c
  8840  004324  321F               	rrcf	(___aomod@divisor+3)^0,f,c
  8841  004326  321E               	rrcf	(___aomod@divisor+2)^0,f,c
  8842  004328  321D               	rrcf	(___aomod@divisor+1)^0,f,c
  8843  00432A  321C               	rrcf	___aomod@divisor^0,f,c
  8844  00432C  2E24               	decfsz	___aomod@counter^0,f,c
  8845  00432E  EF66  F021         	goto	l7859
  8846  004332                     l7867:
  8847  004332  5025               	movf	___aomod@sign^0,w,c
  8848  004334  B4D8               	btfsc	status,2,c
  8849  004336  EF9F  F021         	goto	u8041
  8850  00433A  EFA1  F021         	goto	u8040
  8851  00433E                     u8041:
  8852  00433E  EFB1  F021         	goto	l7871
  8853  004342                     u8040:
  8854  004342  1E1B               	comf	(___aomod@dividend+7)^0,f,c
  8855  004344  1E1A               	comf	(___aomod@dividend+6)^0,f,c
  8856  004346  1E19               	comf	(___aomod@dividend+5)^0,f,c
  8857  004348  1E18               	comf	(___aomod@dividend+4)^0,f,c
  8858  00434A  1E17               	comf	(___aomod@dividend+3)^0,f,c
  8859  00434C  1E16               	comf	(___aomod@dividend+2)^0,f,c
  8860  00434E  1E15               	comf	(___aomod@dividend+1)^0,f,c
  8861  004350  6C14               	negf	___aomod@dividend^0,c
  8862  004352  0E00               	movlw	0
  8863  004354  2215               	addwfc	(___aomod@dividend+1)^0,f,c
  8864  004356  2216               	addwfc	(___aomod@dividend+2)^0,f,c
  8865  004358  2217               	addwfc	(___aomod@dividend+3)^0,f,c
  8866  00435A  2218               	addwfc	(___aomod@dividend+4)^0,f,c
  8867  00435C  2219               	addwfc	(___aomod@dividend+5)^0,f,c
  8868  00435E  221A               	addwfc	(___aomod@dividend+6)^0,f,c
  8869  004360  221B               	addwfc	(___aomod@dividend+7)^0,f,c
  8870  004362                     l7871:
  8871  004362  C014  F014         	movff	___aomod@dividend,?___aomod
  8872  004366  C015  F015         	movff	___aomod@dividend+1,?___aomod+1
  8873  00436A  C016  F016         	movff	___aomod@dividend+2,?___aomod+2
  8874  00436E  C017  F017         	movff	___aomod@dividend+3,?___aomod+3
  8875  004372  C018  F018         	movff	___aomod@dividend+4,?___aomod+4
  8876  004376  C019  F019         	movff	___aomod@dividend+5,?___aomod+5
  8877  00437A  C01A  F01A         	movff	___aomod@dividend+6,?___aomod+6
  8878  00437E  C01B  F01B         	movff	___aomod@dividend+7,?___aomod+7
  8879  004382  0012               	return		;funcret
  8880  004384                     __end_of___aomod:
  8881                           	callstack 0
  8882                           
  8883 ;; *************** function ___aodiv *****************
  8884 ;; Defined at:
  8885 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  8886 ;; Parameters:    Size  Location     Type
  8887 ;;  dividend        8   19[COMRAM] long long 
  8888 ;;  divisor         8   27[COMRAM] long long 
  8889 ;; Auto vars:     Size  Location     Type
  8890 ;;  quotient        8   37[COMRAM] long long 
  8891 ;;  sign            1   36[COMRAM] unsigned char 
  8892 ;;  counter         1   35[COMRAM] unsigned char 
  8893 ;; Return value:  Size  Location     Type
  8894 ;;                  8   19[COMRAM] long long 
  8895 ;; Registers used:
  8896 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8897 ;; Tracked objects:
  8898 ;;		On entry : 0/0
  8899 ;;		On exit  : 0/0
  8900 ;;		Unchanged: 0/0
  8901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8902 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8903 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8905 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8906 ;;Total ram usage:       26 bytes
  8907 ;; Hardware stack levels used: 1
  8908 ;; Hardware stack levels required when called: 8
  8909 ;; This function calls:
  8910 ;;		Nothing
  8911 ;; This function is called by:
  8912 ;;		_dtoa
  8913 ;; This function uses a non-reentrant model
  8914 ;;
  8915                           
  8916                           	psect	text35
  8917  004098                     __ptext35:
  8918                           	callstack 0
  8919  004098                     ___aodiv:
  8920                           	callstack 16
  8921  004098  0E00               	movlw	0
  8922  00409A  6E25               	movwf	___aodiv@sign^0,c
  8923  00409C  BE23               	btfsc	(___aodiv@divisor+7)^0,7,c
  8924  00409E  EF55  F020         	goto	u7920
  8925  0040A2  EF53  F020         	goto	u7921
  8926  0040A6                     u7921:
  8927  0040A6  EF67  F020         	goto	l7803
  8928  0040AA                     u7920:
  8929  0040AA  1E23               	comf	(___aodiv@divisor+7)^0,f,c
  8930  0040AC  1E22               	comf	(___aodiv@divisor+6)^0,f,c
  8931  0040AE  1E21               	comf	(___aodiv@divisor+5)^0,f,c
  8932  0040B0  1E20               	comf	(___aodiv@divisor+4)^0,f,c
  8933  0040B2  1E1F               	comf	(___aodiv@divisor+3)^0,f,c
  8934  0040B4  1E1E               	comf	(___aodiv@divisor+2)^0,f,c
  8935  0040B6  1E1D               	comf	(___aodiv@divisor+1)^0,f,c
  8936  0040B8  6C1C               	negf	___aodiv@divisor^0,c
  8937  0040BA  0E00               	movlw	0
  8938  0040BC  221D               	addwfc	(___aodiv@divisor+1)^0,f,c
  8939  0040BE  221E               	addwfc	(___aodiv@divisor+2)^0,f,c
  8940  0040C0  221F               	addwfc	(___aodiv@divisor+3)^0,f,c
  8941  0040C2  2220               	addwfc	(___aodiv@divisor+4)^0,f,c
  8942  0040C4  2221               	addwfc	(___aodiv@divisor+5)^0,f,c
  8943  0040C6  2222               	addwfc	(___aodiv@divisor+6)^0,f,c
  8944  0040C8  2223               	addwfc	(___aodiv@divisor+7)^0,f,c
  8945  0040CA  0E01               	movlw	1
  8946  0040CC  6E25               	movwf	___aodiv@sign^0,c
  8947  0040CE                     l7803:
  8948  0040CE  BE1B               	btfsc	(___aodiv@dividend+7)^0,7,c
  8949  0040D0  EF6E  F020         	goto	u7930
  8950  0040D4  EF6C  F020         	goto	u7931
  8951  0040D8                     u7931:
  8952  0040D8  EF80  F020         	goto	l7809
  8953  0040DC                     u7930:
  8954  0040DC  1E1B               	comf	(___aodiv@dividend+7)^0,f,c
  8955  0040DE  1E1A               	comf	(___aodiv@dividend+6)^0,f,c
  8956  0040E0  1E19               	comf	(___aodiv@dividend+5)^0,f,c
  8957  0040E2  1E18               	comf	(___aodiv@dividend+4)^0,f,c
  8958  0040E4  1E17               	comf	(___aodiv@dividend+3)^0,f,c
  8959  0040E6  1E16               	comf	(___aodiv@dividend+2)^0,f,c
  8960  0040E8  1E15               	comf	(___aodiv@dividend+1)^0,f,c
  8961  0040EA  6C14               	negf	___aodiv@dividend^0,c
  8962  0040EC  0E00               	movlw	0
  8963  0040EE  2215               	addwfc	(___aodiv@dividend+1)^0,f,c
  8964  0040F0  2216               	addwfc	(___aodiv@dividend+2)^0,f,c
  8965  0040F2  2217               	addwfc	(___aodiv@dividend+3)^0,f,c
  8966  0040F4  2218               	addwfc	(___aodiv@dividend+4)^0,f,c
  8967  0040F6  2219               	addwfc	(___aodiv@dividend+5)^0,f,c
  8968  0040F8  221A               	addwfc	(___aodiv@dividend+6)^0,f,c
  8969  0040FA  221B               	addwfc	(___aodiv@dividend+7)^0,f,c
  8970  0040FC  0E01               	movlw	1
  8971  0040FE  1A25               	xorwf	___aodiv@sign^0,f,c
  8972  004100                     l7809:
  8973  004100  EE20  F026         	lfsr	2,___aodiv@quotient
  8974  004104  0E07               	movlw	7
  8975  004106                     u7941:
  8976  004106  6ADE               	clrf	postinc2,c
  8977  004108  06E8               	decf	wreg,f,c
  8978  00410A  E2FD               	bc	u7941
  8979  00410C  501C               	movf	___aodiv@divisor^0,w,c
  8980  00410E  101D               	iorwf	(___aodiv@divisor+1)^0,w,c
  8981  004110  101E               	iorwf	(___aodiv@divisor+2)^0,w,c
  8982  004112  101F               	iorwf	(___aodiv@divisor+3)^0,w,c
  8983  004114  1020               	iorwf	(___aodiv@divisor+4)^0,w,c
  8984  004116  1021               	iorwf	(___aodiv@divisor+5)^0,w,c
  8985  004118  1022               	iorwf	(___aodiv@divisor+6)^0,w,c
  8986  00411A  1023               	iorwf	(___aodiv@divisor+7)^0,w,c
  8987  00411C  B4D8               	btfsc	status,2,c
  8988  00411E  EF93  F020         	goto	u7951
  8989  004122  EF95  F020         	goto	u7950
  8990  004126                     u7951:
  8991  004126  EFE7  F020         	goto	l7831
  8992  00412A                     u7950:
  8993  00412A  0E01               	movlw	1
  8994  00412C  6E24               	movwf	___aodiv@counter^0,c
  8995  00412E  EFA3  F020         	goto	l7817
  8996  004132                     l7815:
  8997  004132  90D8               	bcf	status,0,c
  8998  004134  361C               	rlcf	___aodiv@divisor^0,f,c
  8999  004136  361D               	rlcf	(___aodiv@divisor+1)^0,f,c
  9000  004138  361E               	rlcf	(___aodiv@divisor+2)^0,f,c
  9001  00413A  361F               	rlcf	(___aodiv@divisor+3)^0,f,c
  9002  00413C  3620               	rlcf	(___aodiv@divisor+4)^0,f,c
  9003  00413E  3621               	rlcf	(___aodiv@divisor+5)^0,f,c
  9004  004140  3622               	rlcf	(___aodiv@divisor+6)^0,f,c
  9005  004142  3623               	rlcf	(___aodiv@divisor+7)^0,f,c
  9006  004144  2A24               	incf	___aodiv@counter^0,f,c
  9007  004146                     l7817:
  9008  004146  AE23               	btfss	(___aodiv@divisor+7)^0,7,c
  9009  004148  EFA8  F020         	goto	u7961
  9010  00414C  EFAA  F020         	goto	u7960
  9011  004150                     u7961:
  9012  004150  EF99  F020         	goto	l7815
  9013  004154                     u7960:
  9014  004154                     l7819:
  9015  004154  90D8               	bcf	status,0,c
  9016  004156  3626               	rlcf	___aodiv@quotient^0,f,c
  9017  004158  3627               	rlcf	(___aodiv@quotient+1)^0,f,c
  9018  00415A  3628               	rlcf	(___aodiv@quotient+2)^0,f,c
  9019  00415C  3629               	rlcf	(___aodiv@quotient+3)^0,f,c
  9020  00415E  362A               	rlcf	(___aodiv@quotient+4)^0,f,c
  9021  004160  362B               	rlcf	(___aodiv@quotient+5)^0,f,c
  9022  004162  362C               	rlcf	(___aodiv@quotient+6)^0,f,c
  9023  004164  362D               	rlcf	(___aodiv@quotient+7)^0,f,c
  9024  004166  501C               	movf	___aodiv@divisor^0,w,c
  9025  004168  5C14               	subwf	___aodiv@dividend^0,w,c
  9026  00416A  501D               	movf	(___aodiv@divisor+1)^0,w,c
  9027  00416C  5815               	subwfb	(___aodiv@dividend+1)^0,w,c
  9028  00416E  501E               	movf	(___aodiv@divisor+2)^0,w,c
  9029  004170  5816               	subwfb	(___aodiv@dividend+2)^0,w,c
  9030  004172  501F               	movf	(___aodiv@divisor+3)^0,w,c
  9031  004174  5817               	subwfb	(___aodiv@dividend+3)^0,w,c
  9032  004176  5020               	movf	(___aodiv@divisor+4)^0,w,c
  9033  004178  5818               	subwfb	(___aodiv@dividend+4)^0,w,c
  9034  00417A  5021               	movf	(___aodiv@divisor+5)^0,w,c
  9035  00417C  5819               	subwfb	(___aodiv@dividend+5)^0,w,c
  9036  00417E  5022               	movf	(___aodiv@divisor+6)^0,w,c
  9037  004180  581A               	subwfb	(___aodiv@dividend+6)^0,w,c
  9038  004182  5023               	movf	(___aodiv@divisor+7)^0,w,c
  9039  004184  581B               	subwfb	(___aodiv@dividend+7)^0,w,c
  9040  004186  A0D8               	btfss	status,0,c
  9041  004188  EFC8  F020         	goto	u7971
  9042  00418C  EFCA  F020         	goto	u7970
  9043  004190                     u7971:
  9044  004190  EFDB  F020         	goto	l7827
  9045  004194                     u7970:
  9046  004194  501C               	movf	___aodiv@divisor^0,w,c
  9047  004196  5E14               	subwf	___aodiv@dividend^0,f,c
  9048  004198  501D               	movf	(___aodiv@divisor+1)^0,w,c
  9049  00419A  5A15               	subwfb	(___aodiv@dividend+1)^0,f,c
  9050  00419C  501E               	movf	(___aodiv@divisor+2)^0,w,c
  9051  00419E  5A16               	subwfb	(___aodiv@dividend+2)^0,f,c
  9052  0041A0  501F               	movf	(___aodiv@divisor+3)^0,w,c
  9053  0041A2  5A17               	subwfb	(___aodiv@dividend+3)^0,f,c
  9054  0041A4  5020               	movf	(___aodiv@divisor+4)^0,w,c
  9055  0041A6  5A18               	subwfb	(___aodiv@dividend+4)^0,f,c
  9056  0041A8  5021               	movf	(___aodiv@divisor+5)^0,w,c
  9057  0041AA  5A19               	subwfb	(___aodiv@dividend+5)^0,f,c
  9058  0041AC  5022               	movf	(___aodiv@divisor+6)^0,w,c
  9059  0041AE  5A1A               	subwfb	(___aodiv@dividend+6)^0,f,c
  9060  0041B0  5023               	movf	(___aodiv@divisor+7)^0,w,c
  9061  0041B2  5A1B               	subwfb	(___aodiv@dividend+7)^0,f,c
  9062  0041B4  8026               	bsf	___aodiv@quotient^0,0,c
  9063  0041B6                     l7827:
  9064  0041B6  90D8               	bcf	status,0,c
  9065  0041B8  3223               	rrcf	(___aodiv@divisor+7)^0,f,c
  9066  0041BA  3222               	rrcf	(___aodiv@divisor+6)^0,f,c
  9067  0041BC  3221               	rrcf	(___aodiv@divisor+5)^0,f,c
  9068  0041BE  3220               	rrcf	(___aodiv@divisor+4)^0,f,c
  9069  0041C0  321F               	rrcf	(___aodiv@divisor+3)^0,f,c
  9070  0041C2  321E               	rrcf	(___aodiv@divisor+2)^0,f,c
  9071  0041C4  321D               	rrcf	(___aodiv@divisor+1)^0,f,c
  9072  0041C6  321C               	rrcf	___aodiv@divisor^0,f,c
  9073  0041C8  2E24               	decfsz	___aodiv@counter^0,f,c
  9074  0041CA  EFAA  F020         	goto	l7819
  9075  0041CE                     l7831:
  9076  0041CE  5025               	movf	___aodiv@sign^0,w,c
  9077  0041D0  B4D8               	btfsc	status,2,c
  9078  0041D2  EFED  F020         	goto	u7981
  9079  0041D6  EFEF  F020         	goto	u7980
  9080  0041DA                     u7981:
  9081  0041DA  EFFF  F020         	goto	l7835
  9082  0041DE                     u7980:
  9083  0041DE  1E2D               	comf	(___aodiv@quotient+7)^0,f,c
  9084  0041E0  1E2C               	comf	(___aodiv@quotient+6)^0,f,c
  9085  0041E2  1E2B               	comf	(___aodiv@quotient+5)^0,f,c
  9086  0041E4  1E2A               	comf	(___aodiv@quotient+4)^0,f,c
  9087  0041E6  1E29               	comf	(___aodiv@quotient+3)^0,f,c
  9088  0041E8  1E28               	comf	(___aodiv@quotient+2)^0,f,c
  9089  0041EA  1E27               	comf	(___aodiv@quotient+1)^0,f,c
  9090  0041EC  6C26               	negf	___aodiv@quotient^0,c
  9091  0041EE  0E00               	movlw	0
  9092  0041F0  2227               	addwfc	(___aodiv@quotient+1)^0,f,c
  9093  0041F2  2228               	addwfc	(___aodiv@quotient+2)^0,f,c
  9094  0041F4  2229               	addwfc	(___aodiv@quotient+3)^0,f,c
  9095  0041F6  222A               	addwfc	(___aodiv@quotient+4)^0,f,c
  9096  0041F8  222B               	addwfc	(___aodiv@quotient+5)^0,f,c
  9097  0041FA  222C               	addwfc	(___aodiv@quotient+6)^0,f,c
  9098  0041FC  222D               	addwfc	(___aodiv@quotient+7)^0,f,c
  9099  0041FE                     l7835:
  9100  0041FE  C026  F014         	movff	___aodiv@quotient,?___aodiv
  9101  004202  C027  F015         	movff	___aodiv@quotient+1,?___aodiv+1
  9102  004206  C028  F016         	movff	___aodiv@quotient+2,?___aodiv+2
  9103  00420A  C029  F017         	movff	___aodiv@quotient+3,?___aodiv+3
  9104  00420E  C02A  F018         	movff	___aodiv@quotient+4,?___aodiv+4
  9105  004212  C02B  F019         	movff	___aodiv@quotient+5,?___aodiv+5
  9106  004216  C02C  F01A         	movff	___aodiv@quotient+6,?___aodiv+6
  9107  00421A  C02D  F01B         	movff	___aodiv@quotient+7,?___aodiv+7
  9108  00421E  0012               	return		;funcret
  9109  004220                     __end_of___aodiv:
  9110                           	callstack 0
  9111                           
  9112 ;; *************** function _ADCC_GetSingleConversion *****************
  9113 ;; Defined at:
  9114 ;;		line 137 in file "mcc_generated_files/adcc.c"
  9115 ;; Parameters:    Size  Location     Type
  9116 ;;  channel         1    wreg     enum E16058
  9117 ;; Auto vars:     Size  Location     Type
  9118 ;;  channel         1   23[COMRAM] enum E16058
  9119 ;; Return value:  Size  Location     Type
  9120 ;;                  2   19[COMRAM] unsigned short 
  9121 ;; Registers used:
  9122 ;;		wreg, status,2, status,0
  9123 ;; Tracked objects:
  9124 ;;		On entry : 0/0
  9125 ;;		On exit  : 0/0
  9126 ;;		Unchanged: 0/0
  9127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9128 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9129 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9130 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9131 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9132 ;;Total ram usage:        5 bytes
  9133 ;; Hardware stack levels used: 1
  9134 ;; Hardware stack levels required when called: 8
  9135 ;; This function calls:
  9136 ;;		Nothing
  9137 ;; This function is called by:
  9138 ;;		_getBatteryVoltage
  9139 ;; This function uses a non-reentrant model
  9140 ;;
  9141                           
  9142                           	psect	text36
  9143  005EEC                     __ptext36:
  9144                           	callstack 0
  9145  005EEC                     _ADCC_GetSingleConversion:
  9146                           	callstack 20
  9147                           
  9148                           ;incstack = 0
  9149                           ;ADCC_GetSingleConversion@channel stored from wreg
  9150  005EEC  6E18               	movwf	ADCC_GetSingleConversion@channel^0,c
  9151  005EEE                     
  9152                           ;mcc_generated_files/adcc.c: 137: adc_result_t ADCC_GetSingleConversion(adcc_channel_t c
      +                          hannel);mcc_generated_files/adcc.c: 138: {;mcc_generated_files/adcc.c: 140:     ADPCH = 
      +                          channel;
  9153  005EEE  0060  F063  FEF1   	movff	ADCC_GetSingleConversion@channel,16113	;volatile
  9154  005EF4                     
  9155                           ;mcc_generated_files/adcc.c: 143:     ADCON0bits.ADON = 1;
  9156  005EF4  013E               	movlb	62	; () banked
  9157  005EF6  8FF8               	bsf	248,7,b	;volatile
  9158  005EF8                     
  9159                           ; BSR set to: 62
  9160                           ;mcc_generated_files/adcc.c: 146:     ADCON0bits.ADCONT = 0;
  9161  005EF8  9DF8               	bcf	248,6,b	;volatile
  9162  005EFA                     
  9163                           ; BSR set to: 62
  9164                           ;mcc_generated_files/adcc.c: 149:     ADCON0bits.ADGO = 1;
  9165  005EFA  81F8               	bsf	248,0,b	;volatile
  9166  005EFC                     l1054:
  9167                           
  9168                           ; BSR set to: 62
  9169                           ;mcc_generated_files/adcc.c: 153:     while (ADCON0bits.ADGO)
  9170  005EFC  B1F8               	btfsc	248,0,b	;volatile
  9171  005EFE  EF83  F02F         	goto	u6381
  9172  005F02  EF85  F02F         	goto	u6380
  9173  005F06                     u6381:
  9174  005F06  EF7E  F02F         	goto	l1054
  9175  005F0A                     u6380:
  9176  005F0A                     
  9177                           ; BSR set to: 62
  9178                           ;mcc_generated_files/adcc.c: 159:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  9179  005F0A  51F0               	movf	240,w,b	;volatile
  9180  005F0C  6E17               	movwf	(??_ADCC_GetSingleConversion+1)^0,c
  9181  005F0E  6A16               	clrf	??_ADCC_GetSingleConversion^0,c
  9182  005F10  51EF               	movf	239,w,b	;volatile
  9183  005F12  2416               	addwf	??_ADCC_GetSingleConversion^0,w,c
  9184  005F14  6E14               	movwf	?_ADCC_GetSingleConversion^0,c
  9185  005F16  0E00               	movlw	0
  9186  005F18  2017               	addwfc	(??_ADCC_GetSingleConversion+1)^0,w,c
  9187  005F1A  6E15               	movwf	(?_ADCC_GetSingleConversion+1)^0,c
  9188  005F1C                     
  9189                           ; BSR set to: 62
  9190  005F1C  0012               	return		;funcret
  9191  005F1E                     __end_of_ADCC_GetSingleConversion:
  9192                           	callstack 0
  9193                           
  9194 ;; *************** function _calcSteering *****************
  9195 ;; Defined at:
  9196 ;;		line 228 in file "main.c"
  9197 ;; Parameters:    Size  Location     Type
  9198 ;;		None
  9199 ;; Auto vars:     Size  Location     Type
  9200 ;;  delta           2   46[BANK0 ] short 
  9201 ;; Return value:  Size  Location     Type
  9202 ;;                  1    wreg      void 
  9203 ;; Registers used:
  9204 ;;		wreg, status,2, status,0, cstack
  9205 ;; Tracked objects:
  9206 ;;		On entry : 0/0
  9207 ;;		On exit  : 0/0
  9208 ;;		Unchanged: 0/0
  9209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9211 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9212 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9213 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9214 ;;Total ram usage:        4 bytes
  9215 ;; Hardware stack levels used: 1
  9216 ;; Hardware stack levels required when called: 10
  9217 ;; This function calls:
  9218 ;;		___fldiv
  9219 ;;		___fltol
  9220 ;;		___xxtofl
  9221 ;;		_setSteering
  9222 ;; This function is called by:
  9223 ;;		_loop
  9224 ;; This function uses a non-reentrant model
  9225 ;;
  9226                           
  9227                           	psect	text37
  9228  003D16                     __ptext37:
  9229                           	callstack 0
  9230  003D16                     _calcSteering:
  9231                           	callstack 19
  9232  003D16                     
  9233                           ;main.c: 229:     int16_t delta = (int16_t) (distLeft - distRight) - (int16_t) ((0) * 1.
      +                          4142135);
  9234  003D16  0100               	movlb	0	; () banked
  9235  003D18  51F5               	movf	_distRight& (0+255),w,b	;volatile
  9236  003D1A  5DF7               	subwf	_distLeft& (0+255),w,b	;volatile
  9237  003D1C  6F8E               	movwf	calcSteering@delta& (0+255),b
  9238  003D1E  51F6               	movf	(_distRight+1)& (0+255),w,b	;volatile
  9239  003D20  59F8               	subwfb	(_distLeft+1)& (0+255),w,b	;volatile
  9240  003D22  6F8F               	movwf	(calcSteering@delta+1)& (0+255),b
  9241  003D24                     
  9242                           ; BSR set to: 0
  9243                           ;main.c: 230:     delta /= (1.25);
  9244  003D24  0E00               	movlw	0
  9245  003D26  6E2E               	movwf	___fldiv@a^0,c
  9246  003D28  0E00               	movlw	0
  9247  003D2A  6E2F               	movwf	(___fldiv@a+1)^0,c
  9248  003D2C  0EA0               	movlw	160
  9249  003D2E  6E30               	movwf	(___fldiv@a+2)^0,c
  9250  003D30  0E3F               	movlw	63
  9251  003D32  6E31               	movwf	(___fldiv@a+3)^0,c
  9252  003D34  C08E  F01C         	movff	calcSteering@delta,___xxtofl@val
  9253  003D38  C08F  F01D         	movff	calcSteering@delta+1,___xxtofl@val+1
  9254  003D3C  0E00               	movlw	0
  9255  003D3E  BE1D               	btfsc	(___xxtofl@val+1)^0,7,c
  9256  003D40  0EFF               	movlw	-1
  9257  003D42  6E1E               	movwf	(___xxtofl@val+2)^0,c
  9258  003D44  6E1F               	movwf	(___xxtofl@val+3)^0,c
  9259  003D46  0E01               	movlw	1
  9260  003D48  EC72  F01F         	call	___xxtofl
  9261  003D4C  C01C  F02A         	movff	?___xxtofl,___fldiv@b
  9262  003D50  C01D  F02B         	movff	?___xxtofl+1,___fldiv@b+1
  9263  003D54  C01E  F02C         	movff	?___xxtofl+2,___fldiv@b+2
  9264  003D58  C01F  F02D         	movff	?___xxtofl+3,___fldiv@b+3
  9265  003D5C  EC30  F016         	call	___fldiv	;wreg free
  9266  003D60  C02A  F079         	movff	?___fldiv,___fltol@f1
  9267  003D64  C02B  F07A         	movff	?___fldiv+1,___fltol@f1+1
  9268  003D68  C02C  F07B         	movff	?___fldiv+2,___fltol@f1+2
  9269  003D6C  C02D  F07C         	movff	?___fldiv+3,___fltol@f1+3
  9270  003D70  EC17  F024         	call	___fltol	;wreg free
  9271  003D74  C079  F08E         	movff	?___fltol,calcSteering@delta
  9272  003D78  C07A  F08F         	movff	?___fltol+1,calcSteering@delta+1
  9273                           
  9274                           ;main.c: 233:     switch (driveMode) {
  9275  003D7C  EFE8  F01E         	goto	l9197
  9276  003D80                     l1319:
  9277  003D80                     l9187:
  9278                           
  9279                           ; BSR set to: 0
  9280                           ;main.c: 238:             if (delta > (40)) {
  9281  003D80  BF8F               	btfsc	(calcSteering@delta+1)& (0+255),7,b
  9282  003D82  EFCC  F01E         	goto	u10381
  9283  003D86  518F               	movf	(calcSteering@delta+1)& (0+255),w,b
  9284  003D88  E109               	bnz	u10380
  9285  003D8A  0E29               	movlw	41
  9286  003D8C  5D8E               	subwf	calcSteering@delta& (0+255),w,b
  9287  003D8E  A0D8               	btfss	status,0,c
  9288  003D90  EFCC  F01E         	goto	u10381
  9289  003D94  EFCE  F01E         	goto	u10380
  9290  003D98                     u10381:
  9291  003D98  EFD4  F01E         	goto	l9191
  9292  003D9C                     u10380:
  9293  003D9C                     
  9294                           ; BSR set to: 0
  9295                           ;main.c: 239:                 delta = (40);
  9296  003D9C  0E00               	movlw	0
  9297  003D9E  6F8F               	movwf	(calcSteering@delta+1)& (0+255),b
  9298  003DA0  0E28               	movlw	40
  9299  003DA2  6F8E               	movwf	calcSteering@delta& (0+255),b
  9300                           
  9301                           ;main.c: 240:             } else if (delta < -(40)) {
  9302  003DA4  EF4C  F01F         	goto	l9221
  9303  003DA8                     l9191:
  9304                           
  9305                           ; BSR set to: 0
  9306  003DA8  AF8F               	btfss	(calcSteering@delta+1)& (0+255),7,b
  9307  003DAA  EFE0  F01E         	goto	u10391
  9308  003DAE  0ED8               	movlw	216
  9309  003DB0  5D8E               	subwf	calcSteering@delta& (0+255),w,b
  9310  003DB2  0EFF               	movlw	255
  9311  003DB4  598F               	subwfb	(calcSteering@delta+1)& (0+255),w,b
  9312  003DB6  B0D8               	btfsc	status,0,c
  9313  003DB8  EFE0  F01E         	goto	u10391
  9314  003DBC  EFE2  F01E         	goto	u10390
  9315  003DC0                     u10391:
  9316  003DC0  EF06  F01F         	goto	l1324
  9317  003DC4                     u10390:
  9318  003DC4                     
  9319                           ; BSR set to: 0
  9320                           ;main.c: 241:                 delta = -(40);
  9321  003DC4  0EFF               	movlw	255
  9322  003DC6  6F8F               	movwf	(calcSteering@delta+1)& (0+255),b
  9323  003DC8  0ED8               	movlw	216
  9324  003DCA  6F8E               	movwf	calcSteering@delta& (0+255),b
  9325  003DCC  EF4C  F01F         	goto	l9221
  9326  003DD0                     l9197:
  9327  003DD0  0100               	movlb	0	; () banked
  9328  003DD2  51FC               	movf	_driveMode& (0+255),w,b
  9329  003DD4  6F8C               	movwf	??_calcSteering& (0+255),b
  9330  003DD6  6B8D               	clrf	(??_calcSteering+1)& (0+255),b
  9331                           
  9332                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9333                           ; Switch size 1, requested type "simple"
  9334                           ; Number of cases is 1, Range of values is 0 to 0
  9335                           ; switch strategies available:
  9336                           ; Name         Instructions Cycles
  9337                           ; simple_byte            4     3 (average)
  9338                           ;	Chosen strategy is simple_byte
  9339  003DD8  518D               	movf	(??_calcSteering+1)& (0+255),w,b
  9340  003DDA  0A00               	xorlw	0	; case 0
  9341  003DDC  B4D8               	btfsc	status,2,c
  9342  003DDE  EFF3  F01E         	goto	l9523
  9343  003DE2  EF4C  F01F         	goto	l9221
  9344  003DE6                     l9523:
  9345                           
  9346                           ; BSR set to: 0
  9347                           ; Switch size 1, requested type "simple"
  9348                           ; Number of cases is 4, Range of values is 0 to 5
  9349                           ; switch strategies available:
  9350                           ; Name         Instructions Cycles
  9351                           ; simple_byte           13     7 (average)
  9352                           ;	Chosen strategy is simple_byte
  9353  003DE6  518C               	movf	??_calcSteering& (0+255),w,b
  9354  003DE8  0A00               	xorlw	0	; case 0
  9355  003DEA  B4D8               	btfsc	status,2,c
  9356  003DEC  EFC0  F01E         	goto	l9187
  9357  003DF0  0A01               	xorlw	1	; case 1
  9358  003DF2  B4D8               	btfsc	status,2,c
  9359  003DF4  EFC0  F01E         	goto	l1319
  9360  003DF8  0A05               	xorlw	5	; case 4
  9361  003DFA  B4D8               	btfsc	status,2,c
  9362  003DFC  EFC0  F01E         	goto	l9187
  9363  003E00  0A01               	xorlw	1	; case 5
  9364  003E02  B4D8               	btfsc	status,2,c
  9365  003E04  EFC0  F01E         	goto	l9187
  9366  003E08  EF4C  F01F         	goto	l9221
  9367  003E0C                     l1324:
  9368                           
  9369                           ; BSR set to: 0
  9370                           ;main.c: 248:     switch (driveMode) {
  9371  003E0C  EF4C  F01F         	goto	l9221
  9372  003E10                     l9199:
  9373                           
  9374                           ; BSR set to: 0
  9375                           ;main.c: 250:             setSteering(delta, Ratio);
  9376  003E10  C08E  F083         	movff	calcSteering@delta,setSteering@steering
  9377  003E14  C08F  F084         	movff	calcSteering@delta+1,setSteering@steering+1
  9378  003E18  0E02               	movlw	2
  9379  003E1A  6F85               	movwf	setSteering@steeringMode& (0+255),b
  9380  003E1C  EC9F  F01C         	call	_setSteering	;wreg free
  9381                           
  9382                           ;main.c: 251:             break;
  9383  003E20  EF71  F01F         	goto	l1338
  9384  003E24                     l9201:
  9385                           
  9386                           ; BSR set to: 0
  9387                           ;main.c: 253:             setSteering(delta, Front);
  9388  003E24  C08E  F083         	movff	calcSteering@delta,setSteering@steering
  9389  003E28  C08F  F084         	movff	calcSteering@delta+1,setSteering@steering+1
  9390  003E2C  0E03               	movlw	3
  9391  003E2E  6F85               	movwf	setSteering@steeringMode& (0+255),b
  9392  003E30  EC9F  F01C         	call	_setSteering	;wreg free
  9393                           
  9394                           ;main.c: 254:             break;
  9395  003E34  EF71  F01F         	goto	l1338
  9396  003E38                     l9203:
  9397                           
  9398                           ; BSR set to: 0
  9399                           ;main.c: 256:             setSteering((65), Inverted);
  9400  003E38  0E00               	movlw	0
  9401  003E3A  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  9402  003E3C  0E41               	movlw	65
  9403  003E3E  6F83               	movwf	setSteering@steering& (0+255),b
  9404  003E40  0E00               	movlw	0
  9405  003E42  6F85               	movwf	setSteering@steeringMode& (0+255),b
  9406  003E44  EC9F  F01C         	call	_setSteering	;wreg free
  9407                           
  9408                           ;main.c: 257:             break;
  9409  003E48  EF71  F01F         	goto	l1338
  9410  003E4C                     l9207:
  9411                           
  9412                           ; BSR set to: 0
  9413                           ;main.c: 262:             if (curveMode == InCurve) {
  9414  003E4C  0E02               	movlw	2
  9415  003E4E  1841               	xorwf	_curveMode^0,w,c
  9416  003E50  A4D8               	btfss	status,2,c
  9417  003E52  EF2D  F01F         	goto	u10401
  9418  003E56  EF2F  F01F         	goto	u10400
  9419  003E5A                     u10401:
  9420  003E5A  EF12  F01F         	goto	l9201
  9421  003E5E                     u10400:
  9422  003E5E                     
  9423                           ; BSR set to: 0
  9424                           ;main.c: 263:                 setSteering((55), Ratio);
  9425  003E5E  0E00               	movlw	0
  9426  003E60  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  9427  003E62  0E37               	movlw	55
  9428  003E64  6F83               	movwf	setSteering@steering& (0+255),b
  9429  003E66  0E02               	movlw	2
  9430  003E68  6F85               	movwf	setSteering@steeringMode& (0+255),b
  9431  003E6A  EC9F  F01C         	call	_setSteering	;wreg free
  9432                           
  9433                           ;main.c: 264:             } else {
  9434  003E6E  EF71  F01F         	goto	l1338
  9435  003E72                     l9213:
  9436                           
  9437                           ; BSR set to: 0
  9438                           ;main.c: 269:             if (curveMode == InCurve) {
  9439  003E72  0E02               	movlw	2
  9440  003E74  1841               	xorwf	_curveMode^0,w,c
  9441  003E76  A4D8               	btfss	status,2,c
  9442  003E78  EF40  F01F         	goto	u10411
  9443  003E7C  EF42  F01F         	goto	u10410
  9444  003E80                     u10411:
  9445  003E80  EF12  F01F         	goto	l9201
  9446  003E84                     u10410:
  9447  003E84                     
  9448                           ; BSR set to: 0
  9449                           ;main.c: 270:                 setSteering(-(55), Ratio);
  9450  003E84  0EFF               	movlw	255
  9451  003E86  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  9452  003E88  0EC9               	movlw	201
  9453  003E8A  6F83               	movwf	setSteering@steering& (0+255),b
  9454  003E8C  0E02               	movlw	2
  9455  003E8E  6F85               	movwf	setSteering@steeringMode& (0+255),b
  9456  003E90  EC9F  F01C         	call	_setSteering	;wreg free
  9457                           
  9458                           ;main.c: 271:             } else {
  9459  003E94  EF71  F01F         	goto	l1338
  9460  003E98                     l9221:
  9461                           
  9462                           ; BSR set to: 0
  9463  003E98  51FC               	movf	_driveMode& (0+255),w,b
  9464  003E9A  6F8C               	movwf	??_calcSteering& (0+255),b
  9465  003E9C  6B8D               	clrf	(??_calcSteering+1)& (0+255),b
  9466                           
  9467                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9468                           ; Switch size 1, requested type "simple"
  9469                           ; Number of cases is 1, Range of values is 0 to 0
  9470                           ; switch strategies available:
  9471                           ; Name         Instructions Cycles
  9472                           ; simple_byte            4     3 (average)
  9473                           ;	Chosen strategy is simple_byte
  9474  003E9E  518D               	movf	(??_calcSteering+1)& (0+255),w,b
  9475  003EA0  0A00               	xorlw	0	; case 0
  9476  003EA2  B4D8               	btfsc	status,2,c
  9477  003EA4  EF56  F01F         	goto	l9525
  9478  003EA8  EF71  F01F         	goto	l1338
  9479  003EAC                     l9525:
  9480                           
  9481                           ; BSR set to: 0
  9482                           ; Switch size 1, requested type "simple"
  9483                           ; Number of cases is 6, Range of values is 0 to 5
  9484                           ; switch strategies available:
  9485                           ; Name         Instructions Cycles
  9486                           ; simple_byte           19    10 (average)
  9487                           ;	Chosen strategy is simple_byte
  9488  003EAC  518C               	movf	??_calcSteering& (0+255),w,b
  9489  003EAE  0A00               	xorlw	0	; case 0
  9490  003EB0  B4D8               	btfsc	status,2,c
  9491  003EB2  EF12  F01F         	goto	l9201
  9492  003EB6  0A01               	xorlw	1	; case 1
  9493  003EB8  B4D8               	btfsc	status,2,c
  9494  003EBA  EF08  F01F         	goto	l9199
  9495  003EBE  0A03               	xorlw	3	; case 2
  9496  003EC0  B4D8               	btfsc	status,2,c
  9497  003EC2  EF1C  F01F         	goto	l9203
  9498  003EC6  0A01               	xorlw	1	; case 3
  9499  003EC8  B4D8               	btfsc	status,2,c
  9500  003ECA  EF1C  F01F         	goto	l9203
  9501  003ECE  0A07               	xorlw	7	; case 4
  9502  003ED0  B4D8               	btfsc	status,2,c
  9503  003ED2  EF26  F01F         	goto	l9207
  9504  003ED6  0A01               	xorlw	1	; case 5
  9505  003ED8  B4D8               	btfsc	status,2,c
  9506  003EDA  EF39  F01F         	goto	l9213
  9507  003EDE  EF71  F01F         	goto	l1338
  9508  003EE2                     l1338:
  9509  003EE2  0012               	return		;funcret
  9510  003EE4                     __end_of_calcSteering:
  9511                           	callstack 0
  9512                           
  9513 ;; *************** function _setSteering *****************
  9514 ;; Defined at:
  9515 ;;		line 385 in file "main.c"
  9516 ;; Parameters:    Size  Location     Type
  9517 ;;  steering        2   35[BANK0 ] short 
  9518 ;;  steeringMode    1   37[BANK0 ] enum E17303
  9519 ;; Auto vars:     Size  Location     Type
  9520 ;;  steeringB       2   42[BANK0 ] short 
  9521 ;;  steeringF       2   40[BANK0 ] short 
  9522 ;; Return value:  Size  Location     Type
  9523 ;;                  1    wreg      void 
  9524 ;; Registers used:
  9525 ;;		wreg, status,2, status,0, cstack
  9526 ;; Tracked objects:
  9527 ;;		On entry : 0/0
  9528 ;;		On exit  : 0/0
  9529 ;;		Unchanged: 0/0
  9530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9531 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9532 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9533 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9534 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9535 ;;Total ram usage:        9 bytes
  9536 ;; Hardware stack levels used: 1
  9537 ;; Hardware stack levels required when called: 9
  9538 ;; This function calls:
  9539 ;;		_PWM5_LoadDutyValue
  9540 ;;		_PWM6_LoadDutyValue
  9541 ;;		___fldiv
  9542 ;;		___fltol
  9543 ;;		___xxtofl
  9544 ;; This function is called by:
  9545 ;;		_loop
  9546 ;;		_checkBatt
  9547 ;;		_startAccell
  9548 ;;		_calcSteering
  9549 ;; This function uses a non-reentrant model
  9550 ;;
  9551                           
  9552                           	psect	text38
  9553  00393E                     __ptext38:
  9554                           	callstack 0
  9555  00393E                     _setSteering:
  9556                           	callstack 19
  9557  00393E  0E00               	movlw	0
  9558  003940  0100               	movlb	0	; () banked
  9559  003942  6F8B               	movwf	(setSteering@steeringB+1)& (0+255),b
  9560  003944  0E00               	movlw	0
  9561  003946  6F8A               	movwf	setSteering@steeringB& (0+255),b
  9562                           
  9563                           ;main.c: 387:     switch (steeringMode) {
  9564  003948  EF1A  F01D         	goto	l9065
  9565  00394C                     l1381:
  9566                           
  9567                           ; BSR set to: 0
  9568                           ;main.c: 389:             steeringF = (+steering);
  9569  00394C  C083  F088         	movff	setSteering@steering,setSteering@steeringF
  9570  003950  C084  F089         	movff	setSteering@steering+1,setSteering@steeringF+1
  9571                           
  9572                           ;main.c: 390:             steeringB = -steering;
  9573  003954  C083  F086         	movff	setSteering@steering,??_setSteering
  9574  003958  C084  F087         	movff	setSteering@steering+1,??_setSteering+1
  9575  00395C  1F86               	comf	??_setSteering& (0+255),f,b
  9576  00395E  1F87               	comf	(??_setSteering+1)& (0+255),f,b
  9577  003960  4B86               	infsnz	??_setSteering& (0+255),f,b
  9578  003962  2B87               	incf	(??_setSteering+1)& (0+255),f,b
  9579  003964  C086  F08A         	movff	??_setSteering,setSteering@steeringB
  9580  003968  C087  F08B         	movff	??_setSteering+1,setSteering@steeringB+1
  9581                           
  9582                           ;main.c: 391:             break;
  9583  00396C  EF3B  F01D         	goto	l9067
  9584  003970                     l1383:
  9585                           
  9586                           ; BSR set to: 0
  9587                           ;main.c: 393:             steeringF = (+steering);
  9588  003970  C083  F088         	movff	setSteering@steering,setSteering@steeringF
  9589  003974  C084  F089         	movff	setSteering@steering+1,setSteering@steeringF+1
  9590                           
  9591                           ;main.c: 394:             steeringB = (+steering);
  9592  003978  C083  F08A         	movff	setSteering@steering,setSteering@steeringB
  9593  00397C  C084  F08B         	movff	setSteering@steering+1,setSteering@steeringB+1
  9594                           
  9595                           ;main.c: 395:             break;
  9596  003980  EF3B  F01D         	goto	l9067
  9597  003984                     l1384:
  9598                           
  9599                           ; BSR set to: 0
  9600                           ;main.c: 397:             steeringF = (+steering);
  9601  003984  C083  F088         	movff	setSteering@steering,setSteering@steeringF
  9602  003988  C084  F089         	movff	setSteering@steering+1,setSteering@steeringF+1
  9603  00398C                     
  9604                           ; BSR set to: 0
  9605                           ;main.c: 398:             steeringB = (-steering / (1.5));
  9606  00398C  0E00               	movlw	0
  9607  00398E  6E2E               	movwf	___fldiv@a^0,c
  9608  003990  0E00               	movlw	0
  9609  003992  6E2F               	movwf	(___fldiv@a+1)^0,c
  9610  003994  0EC0               	movlw	192
  9611  003996  6E30               	movwf	(___fldiv@a+2)^0,c
  9612  003998  0E3F               	movlw	63
  9613  00399A  6E31               	movwf	(___fldiv@a+3)^0,c
  9614  00399C  C083  F086         	movff	setSteering@steering,??_setSteering
  9615  0039A0  C084  F087         	movff	setSteering@steering+1,??_setSteering+1
  9616  0039A4  1F86               	comf	??_setSteering& (0+255),f,b
  9617  0039A6  1F87               	comf	(??_setSteering+1)& (0+255),f,b
  9618  0039A8  4B86               	infsnz	??_setSteering& (0+255),f,b
  9619  0039AA  2B87               	incf	(??_setSteering+1)& (0+255),f,b
  9620  0039AC  C086  F01C         	movff	??_setSteering,___xxtofl@val
  9621  0039B0  C087  F01D         	movff	??_setSteering+1,___xxtofl@val+1
  9622  0039B4  0E00               	movlw	0
  9623  0039B6  BE1D               	btfsc	(___xxtofl@val+1)^0,7,c
  9624  0039B8  0EFF               	movlw	-1
  9625  0039BA  6E1E               	movwf	(___xxtofl@val+2)^0,c
  9626  0039BC  6E1F               	movwf	(___xxtofl@val+3)^0,c
  9627  0039BE  0E01               	movlw	1
  9628  0039C0  EC72  F01F         	call	___xxtofl
  9629  0039C4  C01C  F02A         	movff	?___xxtofl,___fldiv@b
  9630  0039C8  C01D  F02B         	movff	?___xxtofl+1,___fldiv@b+1
  9631  0039CC  C01E  F02C         	movff	?___xxtofl+2,___fldiv@b+2
  9632  0039D0  C01F  F02D         	movff	?___xxtofl+3,___fldiv@b+3
  9633  0039D4  EC30  F016         	call	___fldiv	;wreg free
  9634  0039D8  C02A  F079         	movff	?___fldiv,___fltol@f1
  9635  0039DC  C02B  F07A         	movff	?___fldiv+1,___fltol@f1+1
  9636  0039E0  C02C  F07B         	movff	?___fldiv+2,___fltol@f1+2
  9637  0039E4  C02D  F07C         	movff	?___fldiv+3,___fltol@f1+3
  9638  0039E8  EC17  F024         	call	___fltol	;wreg free
  9639  0039EC  C079  F08A         	movff	?___fltol,setSteering@steeringB
  9640  0039F0  C07A  F08B         	movff	?___fltol+1,setSteering@steeringB+1
  9641                           
  9642                           ;main.c: 399:             break;
  9643  0039F4  EF3B  F01D         	goto	l9067
  9644  0039F8                     l1385:
  9645                           
  9646                           ; BSR set to: 0
  9647                           ;main.c: 401:             steeringF = (+steering);
  9648  0039F8  C083  F088         	movff	setSteering@steering,setSteering@steeringF
  9649  0039FC  C084  F089         	movff	setSteering@steering+1,setSteering@steeringF+1
  9650  003A00                     
  9651                           ; BSR set to: 0
  9652                           ;main.c: 402:             steeringB = 0;
  9653  003A00  0E00               	movlw	0
  9654  003A02  6F8B               	movwf	(setSteering@steeringB+1)& (0+255),b
  9655  003A04  0E00               	movlw	0
  9656  003A06  6F8A               	movwf	setSteering@steeringB& (0+255),b
  9657                           
  9658                           ;main.c: 403:             break;
  9659  003A08  EF3B  F01D         	goto	l9067
  9660  003A0C                     l9057:
  9661                           
  9662                           ; BSR set to: 0
  9663                           ;main.c: 405:             steeringF = 0;
  9664  003A0C  0E00               	movlw	0
  9665  003A0E  6F89               	movwf	(setSteering@steeringF+1)& (0+255),b
  9666  003A10  0E00               	movlw	0
  9667  003A12  6F88               	movwf	setSteering@steeringF& (0+255),b
  9668  003A14                     
  9669                           ; BSR set to: 0
  9670                           ;main.c: 406:             steeringB = (+steering);
  9671  003A14  C083  F08A         	movff	setSteering@steering,setSteering@steeringB
  9672  003A18  C084  F08B         	movff	setSteering@steering+1,setSteering@steeringB+1
  9673                           
  9674                           ;main.c: 407:             break;
  9675  003A1C  EF3B  F01D         	goto	l9067
  9676  003A20                     l9061:
  9677                           
  9678                           ; BSR set to: 0
  9679                           ;main.c: 409:             steeringF = 0;
  9680  003A20  0E00               	movlw	0
  9681  003A22  6F89               	movwf	(setSteering@steeringF+1)& (0+255),b
  9682  003A24  0E00               	movlw	0
  9683  003A26  6F88               	movwf	setSteering@steeringF& (0+255),b
  9684                           
  9685                           ;main.c: 410:             steeringB = 0;
  9686  003A28  0E00               	movlw	0
  9687  003A2A  6F8B               	movwf	(setSteering@steeringB+1)& (0+255),b
  9688  003A2C  0E00               	movlw	0
  9689  003A2E  6F8A               	movwf	setSteering@steeringB& (0+255),b
  9690                           
  9691                           ;main.c: 411:             break;
  9692  003A30  EF3B  F01D         	goto	l9067
  9693  003A34                     l9065:
  9694                           
  9695                           ; BSR set to: 0
  9696  003A34  5185               	movf	setSteering@steeringMode& (0+255),w,b
  9697  003A36  6F86               	movwf	??_setSteering& (0+255),b
  9698  003A38  6B87               	clrf	(??_setSteering+1)& (0+255),b
  9699                           
  9700                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9701                           ; Switch size 1, requested type "simple"
  9702                           ; Number of cases is 1, Range of values is 0 to 0
  9703                           ; switch strategies available:
  9704                           ; Name         Instructions Cycles
  9705                           ; simple_byte            4     3 (average)
  9706                           ;	Chosen strategy is simple_byte
  9707  003A3A  5187               	movf	(??_setSteering+1)& (0+255),w,b
  9708  003A3C  0A00               	xorlw	0	; case 0
  9709  003A3E  B4D8               	btfsc	status,2,c
  9710  003A40  EF24  F01D         	goto	l9527
  9711  003A44  EF10  F01D         	goto	l9061
  9712  003A48                     l9527:
  9713                           
  9714                           ; BSR set to: 0
  9715                           ; Switch size 1, requested type "simple"
  9716                           ; Number of cases is 5, Range of values is 0 to 4
  9717                           ; switch strategies available:
  9718                           ; Name         Instructions Cycles
  9719                           ; simple_byte           16     9 (average)
  9720                           ;	Chosen strategy is simple_byte
  9721  003A48  5186               	movf	??_setSteering& (0+255),w,b
  9722  003A4A  0A00               	xorlw	0	; case 0
  9723  003A4C  B4D8               	btfsc	status,2,c
  9724  003A4E  EFA6  F01C         	goto	l1381
  9725  003A52  0A01               	xorlw	1	; case 1
  9726  003A54  B4D8               	btfsc	status,2,c
  9727  003A56  EFB8  F01C         	goto	l1383
  9728  003A5A  0A03               	xorlw	3	; case 2
  9729  003A5C  B4D8               	btfsc	status,2,c
  9730  003A5E  EFC2  F01C         	goto	l1384
  9731  003A62  0A01               	xorlw	1	; case 3
  9732  003A64  B4D8               	btfsc	status,2,c
  9733  003A66  EFFC  F01C         	goto	l1385
  9734  003A6A  0A07               	xorlw	7	; case 4
  9735  003A6C  B4D8               	btfsc	status,2,c
  9736  003A6E  EF06  F01D         	goto	l9057
  9737  003A72  EF10  F01D         	goto	l9061
  9738  003A76                     l9067:
  9739                           
  9740                           ;main.c: 414:     if (steeringF > ((65))) {
  9741  003A76  0100               	movlb	0	; () banked
  9742  003A78  BF89               	btfsc	(setSteering@steeringF+1)& (0+255),7,b
  9743  003A7A  EF48  F01D         	goto	u10211
  9744  003A7E  5189               	movf	(setSteering@steeringF+1)& (0+255),w,b
  9745  003A80  E109               	bnz	u10210
  9746  003A82  0E42               	movlw	66
  9747  003A84  5D88               	subwf	setSteering@steeringF& (0+255),w,b
  9748  003A86  A0D8               	btfss	status,0,c
  9749  003A88  EF48  F01D         	goto	u10211
  9750  003A8C  EF4A  F01D         	goto	u10210
  9751  003A90                     u10211:
  9752  003A90  EF50  F01D         	goto	l9071
  9753  003A94                     u10210:
  9754  003A94                     
  9755                           ; BSR set to: 0
  9756                           ;main.c: 415:         steeringF = ((65));
  9757  003A94  0E00               	movlw	0
  9758  003A96  6F89               	movwf	(setSteering@steeringF+1)& (0+255),b
  9759  003A98  0E41               	movlw	65
  9760  003A9A  6F88               	movwf	setSteering@steeringF& (0+255),b
  9761                           
  9762                           ;main.c: 416:     } else if (steeringF < (-(65))) {
  9763  003A9C  EF62  F01D         	goto	l9075
  9764  003AA0                     l9071:
  9765                           
  9766                           ; BSR set to: 0
  9767  003AA0  AF89               	btfss	(setSteering@steeringF+1)& (0+255),7,b
  9768  003AA2  EF5C  F01D         	goto	u10221
  9769  003AA6  0EBF               	movlw	191
  9770  003AA8  5D88               	subwf	setSteering@steeringF& (0+255),w,b
  9771  003AAA  0EFF               	movlw	255
  9772  003AAC  5989               	subwfb	(setSteering@steeringF+1)& (0+255),w,b
  9773  003AAE  B0D8               	btfsc	status,0,c
  9774  003AB0  EF5C  F01D         	goto	u10221
  9775  003AB4  EF5E  F01D         	goto	u10220
  9776  003AB8                     u10221:
  9777  003AB8  EF62  F01D         	goto	l9075
  9778  003ABC                     u10220:
  9779  003ABC                     
  9780                           ; BSR set to: 0
  9781                           ;main.c: 417:         steeringF = (-(65));
  9782  003ABC  0EFF               	movlw	255
  9783  003ABE  6F89               	movwf	(setSteering@steeringF+1)& (0+255),b
  9784  003AC0  0EBF               	movlw	191
  9785  003AC2  6F88               	movwf	setSteering@steeringF& (0+255),b
  9786  003AC4                     l9075:
  9787                           
  9788                           ; BSR set to: 0
  9789                           ;main.c: 420:     if (steeringB > ((40))) {
  9790  003AC4  BF8B               	btfsc	(setSteering@steeringB+1)& (0+255),7,b
  9791  003AC6  EF6E  F01D         	goto	u10231
  9792  003ACA  518B               	movf	(setSteering@steeringB+1)& (0+255),w,b
  9793  003ACC  E109               	bnz	u10230
  9794  003ACE  0E29               	movlw	41
  9795  003AD0  5D8A               	subwf	setSteering@steeringB& (0+255),w,b
  9796  003AD2  A0D8               	btfss	status,0,c
  9797  003AD4  EF6E  F01D         	goto	u10231
  9798  003AD8  EF70  F01D         	goto	u10230
  9799  003ADC                     u10231:
  9800  003ADC  EF76  F01D         	goto	l9079
  9801  003AE0                     u10230:
  9802  003AE0                     
  9803                           ; BSR set to: 0
  9804                           ;main.c: 421:         steeringB = ((40));
  9805  003AE0  0E00               	movlw	0
  9806  003AE2  6F8B               	movwf	(setSteering@steeringB+1)& (0+255),b
  9807  003AE4  0E28               	movlw	40
  9808  003AE6  6F8A               	movwf	setSteering@steeringB& (0+255),b
  9809                           
  9810                           ;main.c: 422:     } else if (steeringB < (-(40))) {
  9811  003AE8  EF88  F01D         	goto	l9083
  9812  003AEC                     l9079:
  9813                           
  9814                           ; BSR set to: 0
  9815  003AEC  AF8B               	btfss	(setSteering@steeringB+1)& (0+255),7,b
  9816  003AEE  EF82  F01D         	goto	u10241
  9817  003AF2  0ED8               	movlw	216
  9818  003AF4  5D8A               	subwf	setSteering@steeringB& (0+255),w,b
  9819  003AF6  0EFF               	movlw	255
  9820  003AF8  598B               	subwfb	(setSteering@steeringB+1)& (0+255),w,b
  9821  003AFA  B0D8               	btfsc	status,0,c
  9822  003AFC  EF82  F01D         	goto	u10241
  9823  003B00  EF84  F01D         	goto	u10240
  9824  003B04                     u10241:
  9825  003B04  EF88  F01D         	goto	l9083
  9826  003B08                     u10240:
  9827  003B08                     
  9828                           ; BSR set to: 0
  9829                           ;main.c: 423:         steeringB = (-(40));
  9830  003B08  0EFF               	movlw	255
  9831  003B0A  6F8B               	movwf	(setSteering@steeringB+1)& (0+255),b
  9832  003B0C  0ED8               	movlw	216
  9833  003B0E  6F8A               	movwf	setSteering@steeringB& (0+255),b
  9834  003B10                     l9083:
  9835                           
  9836                           ; BSR set to: 0
  9837                           ;main.c: 427:     PWM6_LoadDutyValue((uint16_t) ((352) + steeringF));
  9838  003B10  0E60               	movlw	96
  9839  003B12  2588               	addwf	setSteering@steeringF& (0+255),w,b
  9840  003B14  6E14               	movwf	PWM6_LoadDutyValue@dutyValue^0,c
  9841  003B16  0E01               	movlw	1
  9842  003B18  2189               	addwfc	(setSteering@steeringF+1)& (0+255),w,b
  9843  003B1A  6E15               	movwf	(PWM6_LoadDutyValue@dutyValue+1)^0,c
  9844  003B1C  ECDA  F02E         	call	_PWM6_LoadDutyValue	;wreg free
  9845  003B20                     
  9846                           ;main.c: 428:     PWM5_LoadDutyValue((uint16_t) ((357) + steeringB));
  9847  003B20  0E65               	movlw	101
  9848  003B22  0100               	movlb	0	; () banked
  9849  003B24  258A               	addwf	setSteering@steeringB& (0+255),w,b
  9850  003B26  6E14               	movwf	PWM5_LoadDutyValue@dutyValue^0,c
  9851  003B28  0E01               	movlw	1
  9852  003B2A  218B               	addwfc	(setSteering@steeringB+1)& (0+255),w,b
  9853  003B2C  6E15               	movwf	(PWM5_LoadDutyValue@dutyValue+1)^0,c
  9854  003B2E  ECF4  F02E         	call	_PWM5_LoadDutyValue	;wreg free
  9855  003B32  0012               	return		;funcret
  9856  003B34                     __end_of_setSteering:
  9857                           	callstack 0
  9858                           
  9859 ;; *************** function ___fldiv *****************
  9860 ;; Defined at:
  9861 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  9862 ;; Parameters:    Size  Location     Type
  9863 ;;  b               4   41[COMRAM] void 
  9864 ;;  a               4   45[COMRAM] void 
  9865 ;; Auto vars:     Size  Location     Type
  9866 ;;  grs             4    7[BANK0 ] unsigned long 
  9867 ;;  rem             4    0[BANK0 ] unsigned long 
  9868 ;;  new_exp         2    5[BANK0 ] short 
  9869 ;;  aexp            1   12[BANK0 ] unsigned char 
  9870 ;;  bexp            1   11[BANK0 ] unsigned char 
  9871 ;;  sign            1    4[BANK0 ] unsigned char 
  9872 ;; Return value:  Size  Location     Type
  9873 ;;                  4   41[COMRAM] unsigned char 
  9874 ;; Registers used:
  9875 ;;		wreg, status,2, status,0
  9876 ;; Tracked objects:
  9877 ;;		On entry : 0/0
  9878 ;;		On exit  : 0/0
  9879 ;;		Unchanged: 0/0
  9880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9881 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9882 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9883 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9884 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9885 ;;Total ram usage:       25 bytes
  9886 ;; Hardware stack levels used: 1
  9887 ;; Hardware stack levels required when called: 8
  9888 ;; This function calls:
  9889 ;;		Nothing
  9890 ;; This function is called by:
  9891 ;;		_calcSteering
  9892 ;;		_setSteering
  9893 ;;		_efgtoa
  9894 ;; This function uses a non-reentrant model
  9895 ;;
  9896                           
  9897                           	psect	text39
  9898  002C60                     __ptext39:
  9899                           	callstack 0
  9900  002C60                     ___fldiv:
  9901                           	callstack 19
  9902  002C60  502D               	movf	(___fldiv@b+3)^0,w,c
  9903  002C62  0B80               	andlw	128
  9904  002C64  0100               	movlb	0	; () banked
  9905  002C66  6F64               	movwf	___fldiv@sign& (0+255),b
  9906  002C68  502D               	movf	(___fldiv@b+3)^0,w,c
  9907  002C6A  242D               	addwf	(___fldiv@b+3)^0,w,c
  9908  002C6C  6F6B               	movwf	___fldiv@bexp& (0+255),b
  9909  002C6E                     
  9910                           ; BSR set to: 0
  9911  002C6E  AE2C               	btfss	(___fldiv@b+2)^0,7,c
  9912  002C70  EF3C  F016         	goto	u8051
  9913  002C74  EF3E  F016         	goto	u8050
  9914  002C78                     u8051:
  9915  002C78  EF3F  F016         	goto	l7881
  9916  002C7C                     u8050:
  9917  002C7C                     
  9918                           ; BSR set to: 0
  9919  002C7C  816B               	bsf	___fldiv@bexp& (0+255),0,b
  9920  002C7E                     l7881:
  9921                           
  9922                           ; BSR set to: 0
  9923  002C7E  516B               	movf	___fldiv@bexp& (0+255),w,b
  9924  002C80  B4D8               	btfsc	status,2,c
  9925  002C82  EF45  F016         	goto	u8061
  9926  002C86  EF47  F016         	goto	u8060
  9927  002C8A                     u8061:
  9928  002C8A  EF5C  F016         	goto	l7891
  9929  002C8E                     u8060:
  9930  002C8E                     
  9931                           ; BSR set to: 0
  9932  002C8E  296B               	incf	___fldiv@bexp& (0+255),w,b
  9933  002C90  A4D8               	btfss	status,2,c
  9934  002C92  EF4D  F016         	goto	u8071
  9935  002C96  EF4F  F016         	goto	u8070
  9936  002C9A                     u8071:
  9937  002C9A  EF57  F016         	goto	l7887
  9938  002C9E                     u8070:
  9939  002C9E                     
  9940                           ; BSR set to: 0
  9941  002C9E  0E00               	movlw	0
  9942  002CA0  6E2A               	movwf	___fldiv@b^0,c
  9943  002CA2  0E00               	movlw	0
  9944  002CA4  6E2B               	movwf	(___fldiv@b+1)^0,c
  9945  002CA6  0E00               	movlw	0
  9946  002CA8  6E2C               	movwf	(___fldiv@b+2)^0,c
  9947  002CAA  0E00               	movlw	0
  9948  002CAC  6E2D               	movwf	(___fldiv@b+3)^0,c
  9949  002CAE                     l7887:
  9950                           
  9951                           ; BSR set to: 0
  9952  002CAE  8E2C               	bsf	(___fldiv@b+2)^0,7,c
  9953  002CB0                     
  9954                           ; BSR set to: 0
  9955  002CB0  0E00               	movlw	0
  9956  002CB2  6E2D               	movwf	(___fldiv@b+3)^0,c
  9957  002CB4  EF64  F016         	goto	l7893
  9958  002CB8                     l7891:
  9959                           
  9960                           ; BSR set to: 0
  9961  002CB8  0E00               	movlw	0
  9962  002CBA  6E2A               	movwf	___fldiv@b^0,c
  9963  002CBC  0E00               	movlw	0
  9964  002CBE  6E2B               	movwf	(___fldiv@b+1)^0,c
  9965  002CC0  0E00               	movlw	0
  9966  002CC2  6E2C               	movwf	(___fldiv@b+2)^0,c
  9967  002CC4  0E00               	movlw	0
  9968  002CC6  6E2D               	movwf	(___fldiv@b+3)^0,c
  9969  002CC8                     l7893:
  9970                           
  9971                           ; BSR set to: 0
  9972  002CC8  5031               	movf	(___fldiv@a+3)^0,w,c
  9973  002CCA  0B80               	andlw	128
  9974  002CCC  1B64               	xorwf	___fldiv@sign& (0+255),f,b
  9975  002CCE                     
  9976                           ; BSR set to: 0
  9977  002CCE  5031               	movf	(___fldiv@a+3)^0,w,c
  9978  002CD0  2431               	addwf	(___fldiv@a+3)^0,w,c
  9979  002CD2  6F6C               	movwf	___fldiv@aexp& (0+255),b
  9980  002CD4                     
  9981                           ; BSR set to: 0
  9982  002CD4  AE30               	btfss	(___fldiv@a+2)^0,7,c
  9983  002CD6  EF6F  F016         	goto	u8081
  9984  002CDA  EF71  F016         	goto	u8080
  9985  002CDE                     u8081:
  9986  002CDE  EF72  F016         	goto	l7901
  9987  002CE2                     u8080:
  9988  002CE2                     
  9989                           ; BSR set to: 0
  9990  002CE2  816C               	bsf	___fldiv@aexp& (0+255),0,b
  9991  002CE4                     l7901:
  9992                           
  9993                           ; BSR set to: 0
  9994  002CE4  516C               	movf	___fldiv@aexp& (0+255),w,b
  9995  002CE6  B4D8               	btfsc	status,2,c
  9996  002CE8  EF78  F016         	goto	u8091
  9997  002CEC  EF7A  F016         	goto	u8090
  9998  002CF0                     u8091:
  9999  002CF0  EF8F  F016         	goto	l7911
 10000  002CF4                     u8090:
 10001  002CF4                     
 10002                           ; BSR set to: 0
 10003  002CF4  296C               	incf	___fldiv@aexp& (0+255),w,b
 10004  002CF6  A4D8               	btfss	status,2,c
 10005  002CF8  EF80  F016         	goto	u8101
 10006  002CFC  EF82  F016         	goto	u8100
 10007  002D00                     u8101:
 10008  002D00  EF8A  F016         	goto	l7907
 10009  002D04                     u8100:
 10010  002D04                     
 10011                           ; BSR set to: 0
 10012  002D04  0E00               	movlw	0
 10013  002D06  6E2E               	movwf	___fldiv@a^0,c
 10014  002D08  0E00               	movlw	0
 10015  002D0A  6E2F               	movwf	(___fldiv@a+1)^0,c
 10016  002D0C  0E00               	movlw	0
 10017  002D0E  6E30               	movwf	(___fldiv@a+2)^0,c
 10018  002D10  0E00               	movlw	0
 10019  002D12  6E31               	movwf	(___fldiv@a+3)^0,c
 10020  002D14                     l7907:
 10021                           
 10022                           ; BSR set to: 0
 10023  002D14  8E30               	bsf	(___fldiv@a+2)^0,7,c
 10024  002D16                     
 10025                           ; BSR set to: 0
 10026  002D16  0E00               	movlw	0
 10027  002D18  6E31               	movwf	(___fldiv@a+3)^0,c
 10028  002D1A  EF97  F016         	goto	l7913
 10029  002D1E                     l7911:
 10030                           
 10031                           ; BSR set to: 0
 10032  002D1E  0E00               	movlw	0
 10033  002D20  6E2E               	movwf	___fldiv@a^0,c
 10034  002D22  0E00               	movlw	0
 10035  002D24  6E2F               	movwf	(___fldiv@a+1)^0,c
 10036  002D26  0E00               	movlw	0
 10037  002D28  6E30               	movwf	(___fldiv@a+2)^0,c
 10038  002D2A  0E00               	movlw	0
 10039  002D2C  6E31               	movwf	(___fldiv@a+3)^0,c
 10040  002D2E                     l7913:
 10041                           
 10042                           ; BSR set to: 0
 10043  002D2E  502E               	movf	___fldiv@a^0,w,c
 10044  002D30  102F               	iorwf	(___fldiv@a+1)^0,w,c
 10045  002D32  1030               	iorwf	(___fldiv@a+2)^0,w,c
 10046  002D34  1031               	iorwf	(___fldiv@a+3)^0,w,c
 10047  002D36  A4D8               	btfss	status,2,c
 10048  002D38  EFA0  F016         	goto	u8111
 10049  002D3C  EFA2  F016         	goto	u8110
 10050  002D40                     u8111:
 10051  002D40  EFBA  F016         	goto	l7925
 10052  002D44                     u8110:
 10053  002D44                     
 10054                           ; BSR set to: 0
 10055  002D44  0E00               	movlw	0
 10056  002D46  6E2A               	movwf	___fldiv@b^0,c
 10057  002D48  0E00               	movlw	0
 10058  002D4A  6E2B               	movwf	(___fldiv@b+1)^0,c
 10059  002D4C  0E00               	movlw	0
 10060  002D4E  6E2C               	movwf	(___fldiv@b+2)^0,c
 10061  002D50  0E00               	movlw	0
 10062  002D52  6E2D               	movwf	(___fldiv@b+3)^0,c
 10063  002D54                     
 10064                           ; BSR set to: 0
 10065  002D54  0E80               	movlw	128
 10066  002D56  122C               	iorwf	(___fldiv@b+2)^0,f,c
 10067  002D58  0E7F               	movlw	127
 10068  002D5A  122D               	iorwf	(___fldiv@b+3)^0,f,c
 10069  002D5C                     l7919:
 10070                           
 10071                           ; BSR set to: 0
 10072  002D5C  5164               	movf	___fldiv@sign& (0+255),w,b
 10073  002D5E  122D               	iorwf	(___fldiv@b+3)^0,f,c
 10074  002D60                     
 10075                           ; BSR set to: 0
 10076  002D60  C02A  F02A         	movff	___fldiv@b,?___fldiv
 10077  002D64  C02B  F02B         	movff	___fldiv@b+1,?___fldiv+1
 10078  002D68  C02C  F02C         	movff	___fldiv@b+2,?___fldiv+2
 10079  002D6C  C02D  F02D         	movff	___fldiv@b+3,?___fldiv+3
 10080  002D70  EFFD  F017         	goto	l1979
 10081  002D74                     l7925:
 10082                           
 10083                           ; BSR set to: 0
 10084  002D74  516B               	movf	___fldiv@bexp& (0+255),w,b
 10085  002D76  A4D8               	btfss	status,2,c
 10086  002D78  EFC0  F016         	goto	u8121
 10087  002D7C  EFC2  F016         	goto	u8120
 10088  002D80                     u8121:
 10089  002D80  EFCC  F016         	goto	l7933
 10090  002D84                     u8120:
 10091  002D84                     
 10092                           ; BSR set to: 0
 10093  002D84  0E00               	movlw	0
 10094  002D86  6E2A               	movwf	?___fldiv^0,c
 10095  002D88  0E00               	movlw	0
 10096  002D8A  6E2B               	movwf	(?___fldiv+1)^0,c
 10097  002D8C  0E00               	movlw	0
 10098  002D8E  6E2C               	movwf	(?___fldiv+2)^0,c
 10099  002D90  0E00               	movlw	0
 10100  002D92  6E2D               	movwf	(?___fldiv+3)^0,c
 10101  002D94  EFFD  F017         	goto	l1979
 10102  002D98                     l7933:
 10103                           
 10104                           ; BSR set to: 0
 10105  002D98  516C               	movf	___fldiv@aexp& (0+255),w,b
 10106  002D9A  C06B  F032         	movff	___fldiv@bexp,??___fldiv
 10107  002D9E  6A33               	clrf	(??___fldiv+1)^0,c
 10108  002DA0  5E32               	subwf	??___fldiv^0,f,c
 10109  002DA2  0E00               	movlw	0
 10110  002DA4  5A33               	subwfb	(??___fldiv+1)^0,f,c
 10111  002DA6  0E7F               	movlw	127
 10112  002DA8  2432               	addwf	??___fldiv^0,w,c
 10113  002DAA  6F65               	movwf	___fldiv@new_exp& (0+255),b
 10114  002DAC  0E00               	movlw	0
 10115  002DAE  2033               	addwfc	(??___fldiv+1)^0,w,c
 10116  002DB0  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10117  002DB2                     
 10118                           ; BSR set to: 0
 10119  002DB2  C02A  F060         	movff	___fldiv@b,___fldiv@rem
 10120  002DB6  C02B  F061         	movff	___fldiv@b+1,___fldiv@rem+1
 10121  002DBA  C02C  F062         	movff	___fldiv@b+2,___fldiv@rem+2
 10122  002DBE  C02D  F063         	movff	___fldiv@b+3,___fldiv@rem+3
 10123  002DC2                     
 10124                           ; BSR set to: 0
 10125  002DC2  0E00               	movlw	0
 10126  002DC4  6E2A               	movwf	___fldiv@b^0,c
 10127  002DC6  0E00               	movlw	0
 10128  002DC8  6E2B               	movwf	(___fldiv@b+1)^0,c
 10129  002DCA  0E00               	movlw	0
 10130  002DCC  6E2C               	movwf	(___fldiv@b+2)^0,c
 10131  002DCE  0E00               	movlw	0
 10132  002DD0  6E2D               	movwf	(___fldiv@b+3)^0,c
 10133  002DD2                     
 10134                           ; BSR set to: 0
 10135  002DD2  0E00               	movlw	0
 10136  002DD4  6F67               	movwf	___fldiv@grs& (0+255),b
 10137  002DD6  0E00               	movlw	0
 10138  002DD8  6F68               	movwf	(___fldiv@grs+1)& (0+255),b
 10139  002DDA  0E00               	movlw	0
 10140  002DDC  6F69               	movwf	(___fldiv@grs+2)& (0+255),b
 10141  002DDE  0E00               	movlw	0
 10142  002DE0  6F6A               	movwf	(___fldiv@grs+3)& (0+255),b
 10143  002DE2                     
 10144                           ; BSR set to: 0
 10145  002DE2  0E00               	movlw	0
 10146  002DE4  6F6C               	movwf	___fldiv@aexp& (0+255),b
 10147  002DE6  EF2D  F017         	goto	l1981
 10148  002DEA                     l7943:
 10149                           
 10150                           ; BSR set to: 0
 10151  002DEA  516C               	movf	___fldiv@aexp& (0+255),w,b
 10152  002DEC  B4D8               	btfsc	status,2,c
 10153  002DEE  EFFB  F016         	goto	u8131
 10154  002DF2  EFFD  F016         	goto	u8130
 10155  002DF6                     u8131:
 10156  002DF6  EF14  F017         	goto	l7951
 10157  002DFA                     u8130:
 10158  002DFA                     
 10159                           ; BSR set to: 0
 10160  002DFA  90D8               	bcf	status,0,c
 10161  002DFC  3760               	rlcf	___fldiv@rem& (0+255),f,b
 10162  002DFE  3761               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 10163  002E00  3762               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 10164  002E02  3763               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 10165  002E04  90D8               	bcf	status,0,c
 10166  002E06  362A               	rlcf	___fldiv@b^0,f,c
 10167  002E08  362B               	rlcf	(___fldiv@b+1)^0,f,c
 10168  002E0A  362C               	rlcf	(___fldiv@b+2)^0,f,c
 10169  002E0C  362D               	rlcf	(___fldiv@b+3)^0,f,c
 10170  002E0E                     
 10171                           ; BSR set to: 0
 10172  002E0E  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10173  002E10  EF0C  F017         	goto	u8141
 10174  002E14  EF0E  F017         	goto	u8140
 10175  002E18                     u8141:
 10176  002E18  EF0F  F017         	goto	l1984
 10177  002E1C                     u8140:
 10178  002E1C                     
 10179                           ; BSR set to: 0
 10180  002E1C  802A               	bsf	___fldiv@b^0,0,c
 10181  002E1E                     l1984:
 10182                           
 10183                           ; BSR set to: 0
 10184  002E1E  90D8               	bcf	status,0,c
 10185  002E20  3767               	rlcf	___fldiv@grs& (0+255),f,b
 10186  002E22  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 10187  002E24  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 10188  002E26  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 10189  002E28                     l7951:
 10190                           
 10191                           ; BSR set to: 0
 10192  002E28  502E               	movf	___fldiv@a^0,w,c
 10193  002E2A  5D60               	subwf	___fldiv@rem& (0+255),w,b
 10194  002E2C  502F               	movf	(___fldiv@a+1)^0,w,c
 10195  002E2E  5961               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 10196  002E30  5030               	movf	(___fldiv@a+2)^0,w,c
 10197  002E32  5962               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 10198  002E34  5031               	movf	(___fldiv@a+3)^0,w,c
 10199  002E36  5963               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 10200  002E38  A0D8               	btfss	status,0,c
 10201  002E3A  EF21  F017         	goto	u8151
 10202  002E3E  EF23  F017         	goto	u8150
 10203  002E42                     u8151:
 10204  002E42  EF2C  F017         	goto	l7957
 10205  002E46                     u8150:
 10206  002E46                     
 10207                           ; BSR set to: 0
 10208  002E46  8D6A               	bsf	(___fldiv@grs+3)& (0+255),6,b
 10209  002E48                     
 10210                           ; BSR set to: 0
 10211  002E48  502E               	movf	___fldiv@a^0,w,c
 10212  002E4A  5F60               	subwf	___fldiv@rem& (0+255),f,b
 10213  002E4C  502F               	movf	(___fldiv@a+1)^0,w,c
 10214  002E4E  5B61               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 10215  002E50  5030               	movf	(___fldiv@a+2)^0,w,c
 10216  002E52  5B62               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 10217  002E54  5031               	movf	(___fldiv@a+3)^0,w,c
 10218  002E56  5B63               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 10219  002E58                     l7957:
 10220                           
 10221                           ; BSR set to: 0
 10222  002E58  2B6C               	incf	___fldiv@aexp& (0+255),f,b
 10223  002E5A                     l1981:
 10224                           
 10225                           ; BSR set to: 0
 10226  002E5A  0E19               	movlw	25
 10227  002E5C  656C               	cpfsgt	___fldiv@aexp& (0+255),b
 10228  002E5E  EF33  F017         	goto	u8161
 10229  002E62  EF35  F017         	goto	u8160
 10230  002E66                     u8161:
 10231  002E66  EFF5  F016         	goto	l7943
 10232  002E6A                     u8160:
 10233  002E6A                     
 10234                           ; BSR set to: 0
 10235  002E6A  5160               	movf	___fldiv@rem& (0+255),w,b
 10236  002E6C  1161               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 10237  002E6E  1162               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 10238  002E70  1163               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 10239  002E72  B4D8               	btfsc	status,2,c
 10240  002E74  EF3E  F017         	goto	u8171
 10241  002E78  EF40  F017         	goto	u8170
 10242  002E7C                     u8171:
 10243  002E7C  EF58  F017         	goto	l7969
 10244  002E80                     u8170:
 10245  002E80                     
 10246                           ; BSR set to: 0
 10247  002E80  8167               	bsf	___fldiv@grs& (0+255),0,b
 10248  002E82  EF58  F017         	goto	l7969
 10249  002E86                     l7963:
 10250                           
 10251                           ; BSR set to: 0
 10252  002E86  90D8               	bcf	status,0,c
 10253  002E88  362A               	rlcf	___fldiv@b^0,f,c
 10254  002E8A  362B               	rlcf	(___fldiv@b+1)^0,f,c
 10255  002E8C  362C               	rlcf	(___fldiv@b+2)^0,f,c
 10256  002E8E  362D               	rlcf	(___fldiv@b+3)^0,f,c
 10257  002E90                     
 10258                           ; BSR set to: 0
 10259  002E90  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10260  002E92  EF4D  F017         	goto	u8181
 10261  002E96  EF4F  F017         	goto	u8180
 10262  002E9A                     u8181:
 10263  002E9A  EF50  F017         	goto	l1990
 10264  002E9E                     u8180:
 10265  002E9E                     
 10266                           ; BSR set to: 0
 10267  002E9E  802A               	bsf	___fldiv@b^0,0,c
 10268  002EA0                     l1990:
 10269                           
 10270                           ; BSR set to: 0
 10271  002EA0  90D8               	bcf	status,0,c
 10272  002EA2  3767               	rlcf	___fldiv@grs& (0+255),f,b
 10273  002EA4  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 10274  002EA6  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 10275  002EA8  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 10276  002EAA  0765               	decf	___fldiv@new_exp& (0+255),f,b
 10277  002EAC  A0D8               	btfss	status,0,c
 10278  002EAE  0766               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 10279  002EB0                     l7969:
 10280                           
 10281                           ; BSR set to: 0
 10282  002EB0  AE2C               	btfss	(___fldiv@b+2)^0,7,c
 10283  002EB2  EF5D  F017         	goto	u8191
 10284  002EB6  EF5F  F017         	goto	u8190
 10285  002EBA                     u8191:
 10286  002EBA  EF43  F017         	goto	l7963
 10287  002EBE                     u8190:
 10288  002EBE                     
 10289                           ; BSR set to: 0
 10290  002EBE  0E00               	movlw	0
 10291  002EC0  6F6C               	movwf	___fldiv@aexp& (0+255),b
 10292  002EC2                     
 10293                           ; BSR set to: 0
 10294  002EC2  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10295  002EC4  EF66  F017         	goto	u8201
 10296  002EC8  EF68  F017         	goto	u8200
 10297  002ECC                     u8201:
 10298  002ECC  EF8C  F017         	goto	l1992
 10299  002ED0                     u8200:
 10300  002ED0                     
 10301                           ; BSR set to: 0
 10302  002ED0  0EFF               	movlw	255
 10303  002ED2  1567               	andwf	___fldiv@grs& (0+255),w,b
 10304  002ED4  6E32               	movwf	??___fldiv^0,c
 10305  002ED6  0EFF               	movlw	255
 10306  002ED8  1568               	andwf	(___fldiv@grs+1)& (0+255),w,b
 10307  002EDA  6E33               	movwf	(??___fldiv+1)^0,c
 10308  002EDC  0EFF               	movlw	255
 10309  002EDE  1569               	andwf	(___fldiv@grs+2)& (0+255),w,b
 10310  002EE0  6E34               	movwf	(??___fldiv+2)^0,c
 10311  002EE2  0E7F               	movlw	127
 10312  002EE4  156A               	andwf	(___fldiv@grs+3)& (0+255),w,b
 10313  002EE6  6E35               	movwf	(??___fldiv+3)^0,c
 10314  002EE8  5032               	movf	??___fldiv^0,w,c
 10315  002EEA  1033               	iorwf	(??___fldiv+1)^0,w,c
 10316  002EEC  1034               	iorwf	(??___fldiv+2)^0,w,c
 10317  002EEE  1035               	iorwf	(??___fldiv+3)^0,w,c
 10318  002EF0  B4D8               	btfsc	status,2,c
 10319  002EF2  EF7D  F017         	goto	u8211
 10320  002EF6  EF7F  F017         	goto	u8210
 10321  002EFA                     u8211:
 10322  002EFA  EF83  F017         	goto	l1993
 10323  002EFE                     u8210:
 10324  002EFE                     l7977:
 10325                           
 10326                           ; BSR set to: 0
 10327  002EFE  0E01               	movlw	1
 10328  002F00  6F6C               	movwf	___fldiv@aexp& (0+255),b
 10329  002F02  EF8C  F017         	goto	l1992
 10330  002F06                     l1993:
 10331                           
 10332                           ; BSR set to: 0
 10333  002F06  A02A               	btfss	___fldiv@b^0,0,c
 10334  002F08  EF88  F017         	goto	u8221
 10335  002F0C  EF8A  F017         	goto	u8220
 10336  002F10                     u8221:
 10337  002F10  EF8C  F017         	goto	l1992
 10338  002F14                     u8220:
 10339  002F14  EF7F  F017         	goto	l7977
 10340  002F18                     l1992:
 10341                           
 10342                           ; BSR set to: 0
 10343  002F18  516C               	movf	___fldiv@aexp& (0+255),w,b
 10344  002F1A  B4D8               	btfsc	status,2,c
 10345  002F1C  EF92  F017         	goto	u8231
 10346  002F20  EF94  F017         	goto	u8230
 10347  002F24                     u8231:
 10348  002F24  EFB8  F017         	goto	l7989
 10349  002F28                     u8230:
 10350  002F28                     
 10351                           ; BSR set to: 0
 10352  002F28  0E01               	movlw	1
 10353  002F2A  262A               	addwf	___fldiv@b^0,f,c
 10354  002F2C  0E00               	movlw	0
 10355  002F2E  222B               	addwfc	(___fldiv@b+1)^0,f,c
 10356  002F30  222C               	addwfc	(___fldiv@b+2)^0,f,c
 10357  002F32  222D               	addwfc	(___fldiv@b+3)^0,f,c
 10358  002F34                     
 10359                           ; BSR set to: 0
 10360  002F34  A02D               	btfss	(___fldiv@b+3)^0,0,c
 10361  002F36  EF9F  F017         	goto	u8241
 10362  002F3A  EFA1  F017         	goto	u8240
 10363  002F3E                     u8241:
 10364  002F3E  EFB8  F017         	goto	l7989
 10365  002F42                     u8240:
 10366  002F42                     
 10367                           ; BSR set to: 0
 10368  002F42  C02A  F032         	movff	___fldiv@b,??___fldiv
 10369  002F46  C02B  F033         	movff	___fldiv@b+1,??___fldiv+1
 10370  002F4A  C02C  F034         	movff	___fldiv@b+2,??___fldiv+2
 10371  002F4E  C02D  F035         	movff	___fldiv@b+3,??___fldiv+3
 10372  002F52  3435               	rlcf	(??___fldiv+3)^0,w,c
 10373  002F54  3235               	rrcf	(??___fldiv+3)^0,f,c
 10374  002F56  3234               	rrcf	(??___fldiv+2)^0,f,c
 10375  002F58  3233               	rrcf	(??___fldiv+1)^0,f,c
 10376  002F5A  3232               	rrcf	??___fldiv^0,f,c
 10377  002F5C  C032  F02A         	movff	??___fldiv,___fldiv@b
 10378  002F60  C033  F02B         	movff	??___fldiv+1,___fldiv@b+1
 10379  002F64  C034  F02C         	movff	??___fldiv+2,___fldiv@b+2
 10380  002F68  C035  F02D         	movff	??___fldiv+3,___fldiv@b+3
 10381  002F6C                     
 10382                           ; BSR set to: 0
 10383  002F6C  4B65               	infsnz	___fldiv@new_exp& (0+255),f,b
 10384  002F6E  2B66               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 10385  002F70                     l7989:
 10386                           
 10387                           ; BSR set to: 0
 10388  002F70  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 10389  002F72  EFC3  F017         	goto	u8251
 10390  002F76  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 10391  002F78  E108               	bnz	u8250
 10392  002F7A  2965               	incf	___fldiv@new_exp& (0+255),w,b
 10393  002F7C  A0D8               	btfss	status,0,c
 10394  002F7E  EFC3  F017         	goto	u8251
 10395  002F82  EFC5  F017         	goto	u8250
 10396  002F86                     u8251:
 10397  002F86  EFD0  F017         	goto	l7993
 10398  002F8A                     u8250:
 10399  002F8A                     
 10400                           ; BSR set to: 0
 10401  002F8A  0E00               	movlw	0
 10402  002F8C  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10403  002F8E  6965               	setf	___fldiv@new_exp& (0+255),b
 10404  002F90  0E00               	movlw	0
 10405  002F92  6E2A               	movwf	___fldiv@b^0,c
 10406  002F94  0E00               	movlw	0
 10407  002F96  6E2B               	movwf	(___fldiv@b+1)^0,c
 10408  002F98  0E00               	movlw	0
 10409  002F9A  6E2C               	movwf	(___fldiv@b+2)^0,c
 10410  002F9C  0E00               	movlw	0
 10411  002F9E  6E2D               	movwf	(___fldiv@b+3)^0,c
 10412  002FA0                     l7993:
 10413                           
 10414                           ; BSR set to: 0
 10415  002FA0  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 10416  002FA2  EFDD  F017         	goto	u8260
 10417  002FA6  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 10418  002FA8  E106               	bnz	u8261
 10419  002FAA  0565               	decf	___fldiv@new_exp& (0+255),w,b
 10420  002FAC  B0D8               	btfsc	status,0,c
 10421  002FAE  EFDB  F017         	goto	u8261
 10422  002FB2  EFDD  F017         	goto	u8260
 10423  002FB6                     u8261:
 10424  002FB6  EFEB  F017         	goto	l7997
 10425  002FBA                     u8260:
 10426  002FBA                     
 10427                           ; BSR set to: 0
 10428  002FBA  0E00               	movlw	0
 10429  002FBC  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10430  002FBE  0E00               	movlw	0
 10431  002FC0  6F65               	movwf	___fldiv@new_exp& (0+255),b
 10432  002FC2  0E00               	movlw	0
 10433  002FC4  6E2A               	movwf	___fldiv@b^0,c
 10434  002FC6  0E00               	movlw	0
 10435  002FC8  6E2B               	movwf	(___fldiv@b+1)^0,c
 10436  002FCA  0E00               	movlw	0
 10437  002FCC  6E2C               	movwf	(___fldiv@b+2)^0,c
 10438  002FCE  0E00               	movlw	0
 10439  002FD0  6E2D               	movwf	(___fldiv@b+3)^0,c
 10440  002FD2  0E00               	movlw	0
 10441  002FD4  6F64               	movwf	___fldiv@sign& (0+255),b
 10442  002FD6                     l7997:
 10443                           
 10444                           ; BSR set to: 0
 10445  002FD6  C065  F06B         	movff	___fldiv@new_exp,___fldiv@bexp
 10446  002FDA                     
 10447                           ; BSR set to: 0
 10448  002FDA  A16B               	btfss	___fldiv@bexp& (0+255),0,b
 10449  002FDC  EFF2  F017         	goto	u8271
 10450  002FE0  EFF4  F017         	goto	u8270
 10451  002FE4                     u8271:
 10452  002FE4  EFF7  F017         	goto	l8003
 10453  002FE8                     u8270:
 10454  002FE8                     
 10455                           ; BSR set to: 0
 10456  002FE8  8E2C               	bsf	(___fldiv@b+2)^0,7,c
 10457  002FEA  EFF8  F017         	goto	l8005
 10458  002FEE                     l8003:
 10459                           
 10460                           ; BSR set to: 0
 10461  002FEE  9E2C               	bcf	(___fldiv@b+2)^0,7,c
 10462  002FF0                     l8005:
 10463                           
 10464                           ; BSR set to: 0
 10465  002FF0  90D8               	bcf	status,0,c
 10466  002FF2  316B               	rrcf	___fldiv@bexp& (0+255),w,b
 10467  002FF4  6E2D               	movwf	(___fldiv@b+3)^0,c
 10468  002FF6  EFAE  F016         	goto	l7919
 10469  002FFA                     l1979:
 10470                           
 10471                           ; BSR set to: 0
 10472  002FFA  0012               	return		;funcret
 10473  002FFC                     __end_of___fldiv:
 10474                           	callstack 0
 10475                           
 10476 ;; *************** function _PWM6_LoadDutyValue *****************
 10477 ;; Defined at:
 10478 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 10479 ;; Parameters:    Size  Location     Type
 10480 ;;  dutyValue       2   19[COMRAM] unsigned short 
 10481 ;; Auto vars:     Size  Location     Type
 10482 ;;		None
 10483 ;; Return value:  Size  Location     Type
 10484 ;;                  1    wreg      void 
 10485 ;; Registers used:
 10486 ;;		wreg, status,2, status,0
 10487 ;; Tracked objects:
 10488 ;;		On entry : 0/0
 10489 ;;		On exit  : 0/0
 10490 ;;		Unchanged: 0/0
 10491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10492 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10494 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10495 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10496 ;;Total ram usage:        4 bytes
 10497 ;; Hardware stack levels used: 1
 10498 ;; Hardware stack levels required when called: 8
 10499 ;; This function calls:
 10500 ;;		Nothing
 10501 ;; This function is called by:
 10502 ;;		_setSteering
 10503 ;; This function uses a non-reentrant model
 10504 ;;
 10505                           
 10506                           	psect	text40
 10507  005DB4                     __ptext40:
 10508                           	callstack 0
 10509  005DB4                     _PWM6_LoadDutyValue:
 10510                           	callstack 19
 10511  005DB4                     
 10512                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 10513  005DB4  C014  F016         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
 10514  005DB8  C015  F017         	movff	PWM6_LoadDutyValue@dutyValue+1,??_PWM6_LoadDutyValue+1
 10515  005DBC  90D8               	bcf	status,0,c
 10516  005DBE  3217               	rrcf	(??_PWM6_LoadDutyValue+1)^0,f,c
 10517  005DC0  3216               	rrcf	??_PWM6_LoadDutyValue^0,f,c
 10518  005DC2  90D8               	bcf	status,0,c
 10519  005DC4  3217               	rrcf	(??_PWM6_LoadDutyValue+1)^0,f,c
 10520  005DC6  3216               	rrcf	??_PWM6_LoadDutyValue^0,f,c
 10521  005DC8  5016               	movf	??_PWM6_LoadDutyValue^0,w,c
 10522  005DCA  6E69               	movwf	105,c	;volatile
 10523                           
 10524                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
 10525  005DCC  C014  F016         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
 10526  005DD0  0E03               	movlw	3
 10527  005DD2  1616               	andwf	??_PWM6_LoadDutyValue^0,f,c
 10528  005DD4  0E06               	movlw	6
 10529  005DD6  6E17               	movwf	(??_PWM6_LoadDutyValue+1)^0,c
 10530  005DD8                     u10065:
 10531  005DD8  90D8               	bcf	status,0,c
 10532  005DDA  3616               	rlcf	??_PWM6_LoadDutyValue^0,f,c
 10533  005DDC  2E17               	decfsz	(??_PWM6_LoadDutyValue+1)^0,f,c
 10534  005DDE  EFEC  F02E         	goto	u10065
 10535  005DE2  5016               	movf	??_PWM6_LoadDutyValue^0,w,c
 10536  005DE4  6E68               	movwf	104,c	;volatile
 10537  005DE6  0012               	return		;funcret
 10538  005DE8                     __end_of_PWM6_LoadDutyValue:
 10539                           	callstack 0
 10540                           
 10541 ;; *************** function _PWM5_LoadDutyValue *****************
 10542 ;; Defined at:
 10543 ;;		line 74 in file "mcc_generated_files/pwm5.c"
 10544 ;; Parameters:    Size  Location     Type
 10545 ;;  dutyValue       2   19[COMRAM] unsigned short 
 10546 ;; Auto vars:     Size  Location     Type
 10547 ;;		None
 10548 ;; Return value:  Size  Location     Type
 10549 ;;                  1    wreg      void 
 10550 ;; Registers used:
 10551 ;;		wreg, status,2, status,0
 10552 ;; Tracked objects:
 10553 ;;		On entry : 0/0
 10554 ;;		On exit  : 0/0
 10555 ;;		Unchanged: 0/0
 10556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10557 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10559 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10560 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10561 ;;Total ram usage:        4 bytes
 10562 ;; Hardware stack levels used: 1
 10563 ;; Hardware stack levels required when called: 8
 10564 ;; This function calls:
 10565 ;;		Nothing
 10566 ;; This function is called by:
 10567 ;;		_setSteering
 10568 ;; This function uses a non-reentrant model
 10569 ;;
 10570                           
 10571                           	psect	text41
 10572  005DE8                     __ptext41:
 10573                           	callstack 0
 10574  005DE8                     _PWM5_LoadDutyValue:
 10575                           	callstack 19
 10576  005DE8                     
 10577                           ;mcc_generated_files/pwm5.c: 74:  void PWM5_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm5.c: 75:  {;mcc_generated_files/pwm5.c: 77:      PWM5DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 10578  005DE8  C014  F016         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
 10579  005DEC  C015  F017         	movff	PWM5_LoadDutyValue@dutyValue+1,??_PWM5_LoadDutyValue+1
 10580  005DF0  90D8               	bcf	status,0,c
 10581  005DF2  3217               	rrcf	(??_PWM5_LoadDutyValue+1)^0,f,c
 10582  005DF4  3216               	rrcf	??_PWM5_LoadDutyValue^0,f,c
 10583  005DF6  90D8               	bcf	status,0,c
 10584  005DF8  3217               	rrcf	(??_PWM5_LoadDutyValue+1)^0,f,c
 10585  005DFA  3216               	rrcf	??_PWM5_LoadDutyValue^0,f,c
 10586  005DFC  5016               	movf	??_PWM5_LoadDutyValue^0,w,c
 10587  005DFE  6E6D               	movwf	109,c	;volatile
 10588                           
 10589                           ;mcc_generated_files/pwm5.c: 80:      PWM5DCL = (dutyValue & 0x0003)<<6;
 10590  005E00  C014  F016         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
 10591  005E04  0E03               	movlw	3
 10592  005E06  1616               	andwf	??_PWM5_LoadDutyValue^0,f,c
 10593  005E08  0E06               	movlw	6
 10594  005E0A  6E17               	movwf	(??_PWM5_LoadDutyValue+1)^0,c
 10595  005E0C                     u10055:
 10596  005E0C  90D8               	bcf	status,0,c
 10597  005E0E  3616               	rlcf	??_PWM5_LoadDutyValue^0,f,c
 10598  005E10  2E17               	decfsz	(??_PWM5_LoadDutyValue+1)^0,f,c
 10599  005E12  EF06  F02F         	goto	u10055
 10600  005E16  5016               	movf	??_PWM5_LoadDutyValue^0,w,c
 10601  005E18  6E6C               	movwf	108,c	;volatile
 10602  005E1A  0012               	return		;funcret
 10603  005E1C                     __end_of_PWM5_LoadDutyValue:
 10604                           	callstack 0
 10605                           
 10606 ;; *************** function _calcSpeed *****************
 10607 ;; Defined at:
 10608 ;;		line 278 in file "main.c"
 10609 ;; Parameters:    Size  Location     Type
 10610 ;;		None
 10611 ;; Auto vars:     Size  Location     Type
 10612 ;;  speed           2   39[BANK0 ] short 
 10613 ;; Return value:  Size  Location     Type
 10614 ;;                  1    wreg      void 
 10615 ;; Registers used:
 10616 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10617 ;; Tracked objects:
 10618 ;;		On entry : 0/0
 10619 ;;		On exit  : 0/0
 10620 ;;		Unchanged: 0/0
 10621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10623 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10624 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10625 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10626 ;;Total ram usage:        6 bytes
 10627 ;; Hardware stack levels used: 1
 10628 ;; Hardware stack levels required when called: 9
 10629 ;; This function calls:
 10630 ;;		___fladd
 10631 ;;		___flmul
 10632 ;;		___fltol
 10633 ;;		___xxtofl
 10634 ;; This function is called by:
 10635 ;;		_loop
 10636 ;; This function uses a non-reentrant model
 10637 ;;
 10638                           
 10639                           	psect	text42
 10640  0032E2                     __ptext42:
 10641                           	callstack 0
 10642  0032E2                     _calcSpeed:
 10643                           	callstack 20
 10644  0032E2                     
 10645                           ;main.c: 279:     int16_t speed = 0;
 10646  0032E2  0E00               	movlw	0
 10647  0032E4  0100               	movlb	0	; () banked
 10648  0032E6  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10649  0032E8  0E00               	movlw	0
 10650  0032EA  6F87               	movwf	calcSpeed@speed& (0+255),b
 10651                           
 10652                           ;main.c: 281:     switch (driveMode) {
 10653  0032EC  EF41  F01A         	goto	l9277
 10654  0032F0                     l9237:
 10655                           
 10656                           ; BSR set to: 0
 10657                           ;main.c: 283:             if (distFront > (40)) {
 10658  0032F0  51FE               	movf	(_distFront+1)& (0+255),w,b	;volatile
 10659  0032F2  E109               	bnz	u10420
 10660  0032F4  0E29               	movlw	41
 10661  0032F6  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
 10662  0032F8  A0D8               	btfss	status,0,c
 10663  0032FA  EF81  F019         	goto	u10421
 10664  0032FE  EF83  F019         	goto	u10420
 10665  003302                     u10421:
 10666  003302  EF85  F019         	goto	l9241
 10667  003306                     u10420:
 10668  003306                     
 10669                           ; BSR set to: 0
 10670                           ;main.c: 284:                 driveMode = Straight;
 10671  003306  0E00               	movlw	0
 10672  003308  6FFC               	movwf	_driveMode& (0+255),b
 10673  00330A                     l9241:
 10674                           
 10675                           ; BSR set to: 0
 10676                           ;main.c: 286:             if (setSpeed > (100)) {
 10677  00330A  BFF2               	btfsc	(_setSpeed+1)& (0+255),7,b
 10678  00330C  EF91  F019         	goto	u10431
 10679  003310  51F2               	movf	(_setSpeed+1)& (0+255),w,b
 10680  003312  E109               	bnz	u10430
 10681  003314  0E65               	movlw	101
 10682  003316  5DF1               	subwf	_setSpeed& (0+255),w,b
 10683  003318  A0D8               	btfss	status,0,c
 10684  00331A  EF91  F019         	goto	u10431
 10685  00331E  EF93  F019         	goto	u10430
 10686  003322                     u10431:
 10687  003322  EF66  F01A         	goto	l9279
 10688  003326                     u10430:
 10689  003326                     
 10690                           ; BSR set to: 0
 10691                           ;main.c: 287:                 if (setSpeed > 0) {
 10692  003326  BFF2               	btfsc	(_setSpeed+1)& (0+255),7,b
 10693  003328  EF9E  F019         	goto	u10441
 10694  00332C  51F2               	movf	(_setSpeed+1)& (0+255),w,b
 10695  00332E  E108               	bnz	u10440
 10696  003330  05F1               	decf	_setSpeed& (0+255),w,b
 10697  003332  A0D8               	btfss	status,0,c
 10698  003334  EF9E  F019         	goto	u10441
 10699  003338  EFA0  F019         	goto	u10440
 10700  00333C                     u10441:
 10701  00333C  EFAA  F019         	goto	l9249
 10702  003340                     u10440:
 10703  003340                     
 10704                           ; BSR set to: 0
 10705                           ;main.c: 288:                     speed = setSpeed;
 10706  003340  C0F1  F087         	movff	_setSpeed,calcSpeed@speed
 10707  003344  C0F2  F088         	movff	_setSpeed+1,calcSpeed@speed+1
 10708  003348                     
 10709                           ; BSR set to: 0
 10710                           ;main.c: 289:                     speed -= 2;
 10711  003348  0EFE               	movlw	254
 10712  00334A  2787               	addwf	calcSpeed@speed& (0+255),f,b
 10713  00334C  0EFF               	movlw	255
 10714  00334E  2388               	addwfc	(calcSpeed@speed+1)& (0+255),f,b
 10715                           
 10716                           ;main.c: 290:                 } else if (setSpeed > 0 && distFront < (20)) {
 10717  003350  EF66  F01A         	goto	l9279
 10718  003354                     l9249:
 10719                           
 10720                           ; BSR set to: 0
 10721  003354  BFF2               	btfsc	(_setSpeed+1)& (0+255),7,b
 10722  003356  EFB5  F019         	goto	u10451
 10723  00335A  51F2               	movf	(_setSpeed+1)& (0+255),w,b
 10724  00335C  E108               	bnz	u10450
 10725  00335E  05F1               	decf	_setSpeed& (0+255),w,b
 10726  003360  A0D8               	btfss	status,0,c
 10727  003362  EFB5  F019         	goto	u10451
 10728  003366  EFB7  F019         	goto	u10450
 10729  00336A                     u10451:
 10730  00336A  EFCC  F019         	goto	l1344
 10731  00336E                     u10450:
 10732  00336E                     
 10733                           ; BSR set to: 0
 10734  00336E  51FE               	movf	(_distFront+1)& (0+255),w,b	;volatile
 10735  003370  E107               	bnz	u10461
 10736  003372  0E14               	movlw	20
 10737  003374  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
 10738  003376  B0D8               	btfsc	status,0,c
 10739  003378  EFC0  F019         	goto	u10461
 10740  00337C  EFC2  F019         	goto	u10460
 10741  003380                     u10461:
 10742  003380  EFCC  F019         	goto	l1344
 10743  003384                     u10460:
 10744  003384                     
 10745                           ; BSR set to: 0
 10746                           ;main.c: 291:                     speed = setSpeed;
 10747  003384  C0F1  F087         	movff	_setSpeed,calcSpeed@speed
 10748  003388  C0F2  F088         	movff	_setSpeed+1,calcSpeed@speed+1
 10749  00338C                     
 10750                           ; BSR set to: 0
 10751                           ;main.c: 292:                     speed -= 4;
 10752  00338C  0EFC               	movlw	252
 10753  00338E  2787               	addwf	calcSpeed@speed& (0+255),f,b
 10754  003390  0EFF               	movlw	255
 10755  003392  2388               	addwfc	(calcSpeed@speed+1)& (0+255),f,b
 10756  003394  EF66  F01A         	goto	l9279
 10757  003398                     l1344:
 10758                           
 10759                           ; BSR set to: 0
 10760                           ;main.c: 295:             break;
 10761  003398  EF66  F01A         	goto	l9279
 10762  00339C                     l9257:
 10763                           
 10764                           ; BSR set to: 0
 10765                           ;main.c: 297:             if (distFront < (40)) {
 10766  00339C  51FE               	movf	(_distFront+1)& (0+255),w,b	;volatile
 10767  00339E  E107               	bnz	u10471
 10768  0033A0  0E28               	movlw	40
 10769  0033A2  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
 10770  0033A4  B0D8               	btfsc	status,0,c
 10771  0033A6  EFD7  F019         	goto	u10471
 10772  0033AA  EFD9  F019         	goto	u10470
 10773  0033AE                     u10471:
 10774  0033AE  EFDB  F019         	goto	l9261
 10775  0033B2                     u10470:
 10776  0033B2                     
 10777                           ; BSR set to: 0
 10778                           ;main.c: 298:                 driveMode = Brake;
 10779  0033B2  0E01               	movlw	1
 10780  0033B4  6FFC               	movwf	_driveMode& (0+255),b
 10781  0033B6                     l9261:
 10782                           
 10783                           ; BSR set to: 0
 10784                           ;main.c: 301:             if (distFront > (150)) {
 10785  0033B6  51FE               	movf	(_distFront+1)& (0+255),w,b	;volatile
 10786  0033B8  E109               	bnz	u10480
 10787  0033BA  0E97               	movlw	151
 10788  0033BC  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
 10789  0033BE  A0D8               	btfss	status,0,c
 10790  0033C0  EFE4  F019         	goto	u10481
 10791  0033C4  EFE6  F019         	goto	u10480
 10792  0033C8                     u10481:
 10793  0033C8  EF2F  F01A         	goto	l9265
 10794  0033CC                     u10480:
 10795  0033CC                     
 10796                           ; BSR set to: 0
 10797                           ;main.c: 302:                 speed = (int16_t) ((0.9) * (distFront - (150)) + (250));
 10798  0033CC  0E00               	movlw	0
 10799  0033CE  6F71               	movwf	___fladd@a& (0+255),b
 10800  0033D0  0E00               	movlw	0
 10801  0033D2  6F72               	movwf	(___fladd@a+1)& (0+255),b
 10802  0033D4  0E7A               	movlw	122
 10803  0033D6  6F73               	movwf	(___fladd@a+2)& (0+255),b
 10804  0033D8  0E43               	movlw	67
 10805  0033DA  6F74               	movwf	(___fladd@a+3)& (0+255),b
 10806  0033DC  0E66               	movlw	102
 10807  0033DE  6E2E               	movwf	___flmul@a^0,c
 10808  0033E0  0E66               	movlw	102
 10809  0033E2  6E2F               	movwf	(___flmul@a+1)^0,c
 10810  0033E4  0E66               	movlw	102
 10811  0033E6  6E30               	movwf	(___flmul@a+2)^0,c
 10812  0033E8  0E3F               	movlw	63
 10813  0033EA  6E31               	movwf	(___flmul@a+3)^0,c
 10814  0033EC  0E6A               	movlw	106
 10815  0033EE  6F83               	movwf	??_calcSpeed& (0+255),b
 10816  0033F0  0EFF               	movlw	255
 10817  0033F2  6F84               	movwf	(??_calcSpeed+1)& (0+255),b
 10818  0033F4  C0FD  F085         	movff	_distFront,??_calcSpeed+2	;volatile
 10819  0033F8  C0FE  F086         	movff	_distFront+1,??_calcSpeed+3	;volatile
 10820  0033FC  5183               	movf	??_calcSpeed& (0+255),w,b
 10821  0033FE  2785               	addwf	(??_calcSpeed+2)& (0+255),f,b
 10822  003400  5184               	movf	(??_calcSpeed+1)& (0+255),w,b
 10823  003402  2386               	addwfc	(??_calcSpeed+3)& (0+255),f,b
 10824  003404  C085  F01C         	movff	??_calcSpeed+2,___xxtofl@val
 10825  003408  C086  F01D         	movff	??_calcSpeed+3,___xxtofl@val+1
 10826  00340C  6A1E               	clrf	(___xxtofl@val+2)^0,c
 10827  00340E  6A1F               	clrf	(___xxtofl@val+3)^0,c
 10828  003410  0E00               	movlw	0
 10829  003412  EC72  F01F         	call	___xxtofl
 10830  003416  C01C  F02A         	movff	?___xxtofl,___flmul@b
 10831  00341A  C01D  F02B         	movff	?___xxtofl+1,___flmul@b+1
 10832  00341E  C01E  F02C         	movff	?___xxtofl+2,___flmul@b+2
 10833  003422  C01F  F02D         	movff	?___xxtofl+3,___flmul@b+3
 10834  003426  EC08  F014         	call	___flmul	;wreg free
 10835  00342A  C02A  F06D         	movff	?___flmul,___fladd@b
 10836  00342E  C02B  F06E         	movff	?___flmul+1,___fladd@b+1
 10837  003432  C02C  F06F         	movff	?___flmul+2,___fladd@b+2
 10838  003436  C02D  F070         	movff	?___flmul+3,___fladd@b+3
 10839  00343A  ECA7  F011         	call	___fladd	;wreg free
 10840  00343E  C06D  F079         	movff	?___fladd,___fltol@f1
 10841  003442  C06E  F07A         	movff	?___fladd+1,___fltol@f1+1
 10842  003446  C06F  F07B         	movff	?___fladd+2,___fltol@f1+2
 10843  00344A  C070  F07C         	movff	?___fladd+3,___fltol@f1+3
 10844  00344E  EC17  F024         	call	___fltol	;wreg free
 10845  003452  C079  F087         	movff	?___fltol,calcSpeed@speed
 10846  003456  C07A  F088         	movff	?___fltol+1,calcSpeed@speed+1
 10847                           
 10848                           ;main.c: 303:             } else {
 10849  00345A  EF66  F01A         	goto	l9279
 10850  00345E                     l9265:
 10851                           
 10852                           ; BSR set to: 0
 10853                           ;main.c: 304:                 speed = (250);
 10854  00345E  0E00               	movlw	0
 10855  003460  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10856  003462  0EFA               	movlw	250
 10857  003464  6F87               	movwf	calcSpeed@speed& (0+255),b
 10858  003466  EF66  F01A         	goto	l9279
 10859  00346A                     l9267:
 10860                           
 10861                           ; BSR set to: 0
 10862                           ;main.c: 310:             speed = (-125);
 10863  00346A  0EFF               	movlw	255
 10864  00346C  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10865  00346E  0E83               	movlw	131
 10866  003470  6F87               	movwf	calcSpeed@speed& (0+255),b
 10867                           
 10868                           ;main.c: 311:             break;
 10869  003472  EF66  F01A         	goto	l9279
 10870  003476                     l9271:
 10871                           
 10872                           ; BSR set to: 0
 10873                           ;main.c: 316:             speed = (200);
 10874  003476  0E00               	movlw	0
 10875  003478  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10876  00347A  0EC8               	movlw	200
 10877  00347C  6F87               	movwf	calcSpeed@speed& (0+255),b
 10878                           
 10879                           ;main.c: 317:             break;
 10880  00347E  EF66  F01A         	goto	l9279
 10881  003482                     l9277:
 10882                           
 10883                           ; BSR set to: 0
 10884  003482  51FC               	movf	_driveMode& (0+255),w,b
 10885  003484  6F83               	movwf	??_calcSpeed& (0+255),b
 10886  003486  6B84               	clrf	(??_calcSpeed+1)& (0+255),b
 10887                           
 10888                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10889                           ; Switch size 1, requested type "simple"
 10890                           ; Number of cases is 1, Range of values is 0 to 0
 10891                           ; switch strategies available:
 10892                           ; Name         Instructions Cycles
 10893                           ; simple_byte            4     3 (average)
 10894                           ;	Chosen strategy is simple_byte
 10895  003488  5184               	movf	(??_calcSpeed+1)& (0+255),w,b
 10896  00348A  0A00               	xorlw	0	; case 0
 10897  00348C  B4D8               	btfsc	status,2,c
 10898  00348E  EF4B  F01A         	goto	l9529
 10899  003492  EF66  F01A         	goto	l9279
 10900  003496                     l9529:
 10901                           
 10902                           ; BSR set to: 0
 10903                           ; Switch size 1, requested type "simple"
 10904                           ; Number of cases is 6, Range of values is 0 to 5
 10905                           ; switch strategies available:
 10906                           ; Name         Instructions Cycles
 10907                           ; simple_byte           19    10 (average)
 10908                           ;	Chosen strategy is simple_byte
 10909  003496  5183               	movf	??_calcSpeed& (0+255),w,b
 10910  003498  0A00               	xorlw	0	; case 0
 10911  00349A  B4D8               	btfsc	status,2,c
 10912  00349C  EFCE  F019         	goto	l9257
 10913  0034A0  0A01               	xorlw	1	; case 1
 10914  0034A2  B4D8               	btfsc	status,2,c
 10915  0034A4  EF78  F019         	goto	l9237
 10916  0034A8  0A03               	xorlw	3	; case 2
 10917  0034AA  B4D8               	btfsc	status,2,c
 10918  0034AC  EF35  F01A         	goto	l9267
 10919  0034B0  0A01               	xorlw	1	; case 3
 10920  0034B2  B4D8               	btfsc	status,2,c
 10921  0034B4  EF35  F01A         	goto	l9267
 10922  0034B8  0A07               	xorlw	7	; case 4
 10923  0034BA  B4D8               	btfsc	status,2,c
 10924  0034BC  EF3B  F01A         	goto	l9271
 10925  0034C0  0A01               	xorlw	1	; case 5
 10926  0034C2  B4D8               	btfsc	status,2,c
 10927  0034C4  EF3B  F01A         	goto	l9271
 10928  0034C8  EF66  F01A         	goto	l9279
 10929  0034CC                     l9279:
 10930                           
 10931                           ;main.c: 323:     if (speed > (400)) {
 10932  0034CC  0100               	movlb	0	; () banked
 10933  0034CE  BF88               	btfsc	(calcSpeed@speed+1)& (0+255),7,b
 10934  0034D0  EF73  F01A         	goto	u10491
 10935  0034D4  0E91               	movlw	145
 10936  0034D6  5D87               	subwf	calcSpeed@speed& (0+255),w,b
 10937  0034D8  0E01               	movlw	1
 10938  0034DA  5988               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
 10939  0034DC  A0D8               	btfss	status,0,c
 10940  0034DE  EF73  F01A         	goto	u10491
 10941  0034E2  EF75  F01A         	goto	u10490
 10942  0034E6                     u10491:
 10943  0034E6  EF79  F01A         	goto	l9283
 10944  0034EA                     u10490:
 10945  0034EA                     
 10946                           ; BSR set to: 0
 10947                           ;main.c: 324:         speed = (400);
 10948  0034EA  0E01               	movlw	1
 10949  0034EC  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10950  0034EE  0E90               	movlw	144
 10951  0034F0  6F87               	movwf	calcSpeed@speed& (0+255),b
 10952  0034F2                     l9283:
 10953                           
 10954                           ; BSR set to: 0
 10955                           ;main.c: 326:     if (speed < (-250)) {
 10956  0034F2  AF88               	btfss	(calcSpeed@speed+1)& (0+255),7,b
 10957  0034F4  EF85  F01A         	goto	u10501
 10958  0034F8  0E06               	movlw	6
 10959  0034FA  5D87               	subwf	calcSpeed@speed& (0+255),w,b
 10960  0034FC  0EFF               	movlw	255
 10961  0034FE  5988               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
 10962  003500  B0D8               	btfsc	status,0,c
 10963  003502  EF85  F01A         	goto	u10501
 10964  003506  EF87  F01A         	goto	u10500
 10965  00350A                     u10501:
 10966  00350A  EF8B  F01A         	goto	l9287
 10967  00350E                     u10500:
 10968  00350E                     
 10969                           ; BSR set to: 0
 10970                           ;main.c: 327:         speed = (-250);
 10971  00350E  0EFF               	movlw	255
 10972  003510  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10973  003512  0E06               	movlw	6
 10974  003514  6F87               	movwf	calcSpeed@speed& (0+255),b
 10975  003516                     l9287:
 10976                           
 10977                           ; BSR set to: 0
 10978                           ;main.c: 329:     setSpeed = speed;
 10979  003516  C087  F0F1         	movff	calcSpeed@speed,_setSpeed
 10980  00351A  C088  F0F2         	movff	calcSpeed@speed+1,_setSpeed+1
 10981  00351E                     
 10982                           ; BSR set to: 0
 10983  00351E  0012               	return		;funcret
 10984  003520                     __end_of_calcSpeed:
 10985                           	callstack 0
 10986                           
 10987 ;; *************** function ___fladd *****************
 10988 ;; Defined at:
 10989 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
 10990 ;; Parameters:    Size  Location     Type
 10991 ;;  b               4   13[BANK0 ] void 
 10992 ;;  a               4   17[BANK0 ] void 
 10993 ;; Auto vars:     Size  Location     Type
 10994 ;;  grs             1   24[BANK0 ] unsigned char 
 10995 ;;  bexp            1   23[BANK0 ] unsigned char 
 10996 ;;  aexp            1   22[BANK0 ] unsigned char 
 10997 ;;  signs           1   21[BANK0 ] unsigned char 
 10998 ;; Return value:  Size  Location     Type
 10999 ;;                  4   13[BANK0 ] unsigned char 
 11000 ;; Registers used:
 11001 ;;		wreg, status,2, status,0
 11002 ;; Tracked objects:
 11003 ;;		On entry : 0/0
 11004 ;;		On exit  : 0/0
 11005 ;;		Unchanged: 0/0
 11006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11007 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11008 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11009 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11010 ;;      Totals:         4      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11011 ;;Total ram usage:       16 bytes
 11012 ;; Hardware stack levels used: 1
 11013 ;; Hardware stack levels required when called: 8
 11014 ;; This function calls:
 11015 ;;		Nothing
 11016 ;; This function is called by:
 11017 ;;		_calcSpeed
 11018 ;;		___flsub
 11019 ;;		_efgtoa
 11020 ;; This function uses a non-reentrant model
 11021 ;;
 11022                           
 11023                           	psect	text43
 11024  00234E                     __ptext43:
 11025                           	callstack 0
 11026  00234E                     ___fladd:
 11027                           	callstack 15
 11028  00234E  0100               	movlb	0	; () banked
 11029  002350  5170               	movf	(___fladd@b+3)& (0+255),w,b
 11030  002352  0B80               	andlw	128
 11031  002354  6F75               	movwf	___fladd@signs& (0+255),b
 11032  002356  5170               	movf	(___fladd@b+3)& (0+255),w,b
 11033  002358  2570               	addwf	(___fladd@b+3)& (0+255),w,b
 11034  00235A  6F77               	movwf	___fladd@bexp& (0+255),b
 11035  00235C                     
 11036                           ; BSR set to: 0
 11037  00235C  AF6F               	btfss	(___fladd@b+2)& (0+255),7,b
 11038  00235E  EFB3  F011         	goto	u7491
 11039  002362  EFB5  F011         	goto	u7490
 11040  002366                     u7491:
 11041  002366  EFB6  F011         	goto	l7577
 11042  00236A                     u7490:
 11043  00236A                     
 11044                           ; BSR set to: 0
 11045  00236A  8177               	bsf	___fladd@bexp& (0+255),0,b
 11046  00236C                     l7577:
 11047                           
 11048                           ; BSR set to: 0
 11049  00236C  5177               	movf	___fladd@bexp& (0+255),w,b
 11050  00236E  B4D8               	btfsc	status,2,c
 11051  002370  EFBC  F011         	goto	u7501
 11052  002374  EFBE  F011         	goto	u7500
 11053  002378                     u7501:
 11054  002378  EFD3  F011         	goto	l7587
 11055  00237C                     u7500:
 11056  00237C                     
 11057                           ; BSR set to: 0
 11058  00237C  2977               	incf	___fladd@bexp& (0+255),w,b
 11059  00237E  A4D8               	btfss	status,2,c
 11060  002380  EFC4  F011         	goto	u7511
 11061  002384  EFC6  F011         	goto	u7510
 11062  002388                     u7511:
 11063  002388  EFCE  F011         	goto	l7583
 11064  00238C                     u7510:
 11065  00238C                     
 11066                           ; BSR set to: 0
 11067  00238C  0E00               	movlw	0
 11068  00238E  6F6D               	movwf	___fladd@b& (0+255),b
 11069  002390  0E00               	movlw	0
 11070  002392  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 11071  002394  0E00               	movlw	0
 11072  002396  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 11073  002398  0E00               	movlw	0
 11074  00239A  6F70               	movwf	(___fladd@b+3)& (0+255),b
 11075  00239C                     l7583:
 11076                           
 11077                           ; BSR set to: 0
 11078  00239C  8F6F               	bsf	(___fladd@b+2)& (0+255),7,b
 11079  00239E                     
 11080                           ; BSR set to: 0
 11081  00239E  0E00               	movlw	0
 11082  0023A0  6F70               	movwf	(___fladd@b+3)& (0+255),b
 11083  0023A2  EFDB  F011         	goto	l7589
 11084  0023A6                     l7587:
 11085                           
 11086                           ; BSR set to: 0
 11087  0023A6  0E00               	movlw	0
 11088  0023A8  6F6D               	movwf	___fladd@b& (0+255),b
 11089  0023AA  0E00               	movlw	0
 11090  0023AC  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 11091  0023AE  0E00               	movlw	0
 11092  0023B0  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 11093  0023B2  0E00               	movlw	0
 11094  0023B4  6F70               	movwf	(___fladd@b+3)& (0+255),b
 11095  0023B6                     l7589:
 11096                           
 11097                           ; BSR set to: 0
 11098  0023B6  5174               	movf	(___fladd@a+3)& (0+255),w,b
 11099  0023B8  0B80               	andlw	128
 11100  0023BA  6F76               	movwf	___fladd@aexp& (0+255),b
 11101  0023BC                     
 11102                           ; BSR set to: 0
 11103  0023BC  5175               	movf	___fladd@signs& (0+255),w,b
 11104  0023BE  1976               	xorwf	___fladd@aexp& (0+255),w,b
 11105  0023C0  B4D8               	btfsc	status,2,c
 11106  0023C2  EFE5  F011         	goto	u7521
 11107  0023C6  EFE7  F011         	goto	u7520
 11108  0023CA                     u7521:
 11109  0023CA  EFE8  F011         	goto	l7595
 11110  0023CE                     u7520:
 11111  0023CE                     
 11112                           ; BSR set to: 0
 11113  0023CE  8D75               	bsf	___fladd@signs& (0+255),6,b
 11114  0023D0                     l7595:
 11115                           
 11116                           ; BSR set to: 0
 11117  0023D0  5174               	movf	(___fladd@a+3)& (0+255),w,b
 11118  0023D2  2574               	addwf	(___fladd@a+3)& (0+255),w,b
 11119  0023D4  6F76               	movwf	___fladd@aexp& (0+255),b
 11120  0023D6                     
 11121                           ; BSR set to: 0
 11122  0023D6  AF73               	btfss	(___fladd@a+2)& (0+255),7,b
 11123  0023D8  EFF0  F011         	goto	u7531
 11124  0023DC  EFF2  F011         	goto	u7530
 11125  0023E0                     u7531:
 11126  0023E0  EFF3  F011         	goto	l7601
 11127  0023E4                     u7530:
 11128  0023E4                     
 11129                           ; BSR set to: 0
 11130  0023E4  8176               	bsf	___fladd@aexp& (0+255),0,b
 11131  0023E6                     l7601:
 11132                           
 11133                           ; BSR set to: 0
 11134  0023E6  5176               	movf	___fladd@aexp& (0+255),w,b
 11135  0023E8  B4D8               	btfsc	status,2,c
 11136  0023EA  EFF9  F011         	goto	u7541
 11137  0023EE  EFFB  F011         	goto	u7540
 11138  0023F2                     u7541:
 11139  0023F2  EF10  F012         	goto	l7611
 11140  0023F6                     u7540:
 11141  0023F6                     
 11142                           ; BSR set to: 0
 11143  0023F6  2976               	incf	___fladd@aexp& (0+255),w,b
 11144  0023F8  A4D8               	btfss	status,2,c
 11145  0023FA  EF01  F012         	goto	u7551
 11146  0023FE  EF03  F012         	goto	u7550
 11147  002402                     u7551:
 11148  002402  EF0B  F012         	goto	l7607
 11149  002406                     u7550:
 11150  002406                     
 11151                           ; BSR set to: 0
 11152  002406  0E00               	movlw	0
 11153  002408  6F71               	movwf	___fladd@a& (0+255),b
 11154  00240A  0E00               	movlw	0
 11155  00240C  6F72               	movwf	(___fladd@a+1)& (0+255),b
 11156  00240E  0E00               	movlw	0
 11157  002410  6F73               	movwf	(___fladd@a+2)& (0+255),b
 11158  002412  0E00               	movlw	0
 11159  002414  6F74               	movwf	(___fladd@a+3)& (0+255),b
 11160  002416                     l7607:
 11161                           
 11162                           ; BSR set to: 0
 11163  002416  8F73               	bsf	(___fladd@a+2)& (0+255),7,b
 11164  002418                     
 11165                           ; BSR set to: 0
 11166  002418  0E00               	movlw	0
 11167  00241A  6F74               	movwf	(___fladd@a+3)& (0+255),b
 11168  00241C  EF18  F012         	goto	l7613
 11169  002420                     l7611:
 11170                           
 11171                           ; BSR set to: 0
 11172  002420  0E00               	movlw	0
 11173  002422  6F71               	movwf	___fladd@a& (0+255),b
 11174  002424  0E00               	movlw	0
 11175  002426  6F72               	movwf	(___fladd@a+1)& (0+255),b
 11176  002428  0E00               	movlw	0
 11177  00242A  6F73               	movwf	(___fladd@a+2)& (0+255),b
 11178  00242C  0E00               	movlw	0
 11179  00242E  6F74               	movwf	(___fladd@a+3)& (0+255),b
 11180  002430                     l7613:
 11181                           
 11182                           ; BSR set to: 0
 11183  002430  5177               	movf	___fladd@bexp& (0+255),w,b
 11184  002432  5D76               	subwf	___fladd@aexp& (0+255),w,b
 11185  002434  B0D8               	btfsc	status,0,c
 11186  002436  EF1F  F012         	goto	u7561
 11187  00243A  EF21  F012         	goto	u7560
 11188  00243E                     u7561:
 11189  00243E  EF48  F012         	goto	l7649
 11190  002442                     u7560:
 11191  002442                     
 11192                           ; BSR set to: 0
 11193  002442  AD75               	btfss	___fladd@signs& (0+255),6,b
 11194  002444  EF26  F012         	goto	u7571
 11195  002448  EF28  F012         	goto	u7570
 11196  00244C                     u7571:
 11197  00244C  EF2A  F012         	goto	l7619
 11198  002450                     u7570:
 11199  002450                     
 11200                           ; BSR set to: 0
 11201  002450  0E80               	movlw	128
 11202  002452  1B75               	xorwf	___fladd@signs& (0+255),f,b
 11203  002454                     l7619:
 11204                           
 11205                           ; BSR set to: 0
 11206  002454  C077  F078         	movff	___fladd@bexp,___fladd@grs
 11207  002458                     
 11208                           ; BSR set to: 0
 11209  002458  C076  F077         	movff	___fladd@aexp,___fladd@bexp
 11210  00245C                     
 11211                           ; BSR set to: 0
 11212  00245C  C078  F076         	movff	___fladd@grs,___fladd@aexp
 11213  002460                     
 11214                           ; BSR set to: 0
 11215  002460  C06D  F078         	movff	___fladd@b,___fladd@grs
 11216  002464                     
 11217                           ; BSR set to: 0
 11218  002464  C071  F06D         	movff	___fladd@a,___fladd@b
 11219  002468                     
 11220                           ; BSR set to: 0
 11221  002468  C078  F071         	movff	___fladd@grs,___fladd@a
 11222  00246C                     
 11223                           ; BSR set to: 0
 11224  00246C  C06E  F078         	movff	___fladd@b+1,___fladd@grs
 11225  002470                     
 11226                           ; BSR set to: 0
 11227  002470  C072  F06E         	movff	___fladd@a+1,___fladd@b+1
 11228  002474                     
 11229                           ; BSR set to: 0
 11230  002474  C078  F072         	movff	___fladd@grs,___fladd@a+1
 11231  002478                     
 11232                           ; BSR set to: 0
 11233  002478  C06F  F078         	movff	___fladd@b+2,___fladd@grs
 11234  00247C                     
 11235                           ; BSR set to: 0
 11236  00247C  C073  F06F         	movff	___fladd@a+2,___fladd@b+2
 11237  002480                     
 11238                           ; BSR set to: 0
 11239  002480  C078  F073         	movff	___fladd@grs,___fladd@a+2
 11240  002484                     
 11241                           ; BSR set to: 0
 11242  002484  C070  F078         	movff	___fladd@b+3,___fladd@grs
 11243  002488                     
 11244                           ; BSR set to: 0
 11245  002488  C074  F070         	movff	___fladd@a+3,___fladd@b+3
 11246  00248C                     
 11247                           ; BSR set to: 0
 11248  00248C  C078  F074         	movff	___fladd@grs,___fladd@a+3
 11249  002490                     l7649:
 11250                           
 11251                           ; BSR set to: 0
 11252  002490  0E00               	movlw	0
 11253  002492  6F78               	movwf	___fladd@grs& (0+255),b
 11254  002494                     
 11255                           ; BSR set to: 0
 11256  002494  5177               	movf	___fladd@bexp& (0+255),w,b
 11257  002496  C076  F036         	movff	___fladd@aexp,??___fladd
 11258  00249A  6A37               	clrf	(??___fladd+1)^0,c
 11259  00249C  5E36               	subwf	??___fladd^0,f,c
 11260  00249E  0E00               	movlw	0
 11261  0024A0  5A37               	subwfb	(??___fladd+1)^0,f,c
 11262  0024A2  BE37               	btfsc	(??___fladd+1)^0,7,c
 11263  0024A4  EF5D  F012         	goto	u7581
 11264  0024A8  5037               	movf	(??___fladd+1)^0,w,c
 11265  0024AA  E109               	bnz	u7580
 11266  0024AC  0E1A               	movlw	26
 11267  0024AE  5C36               	subwf	??___fladd^0,w,c
 11268  0024B0  A0D8               	btfss	status,0,c
 11269  0024B2  EF5D  F012         	goto	u7581
 11270  0024B6  EF5F  F012         	goto	u7580
 11271  0024BA                     u7581:
 11272  0024BA  EF96  F012         	goto	l1926
 11273  0024BE                     u7580:
 11274  0024BE                     
 11275                           ; BSR set to: 0
 11276  0024BE  516D               	movf	___fladd@b& (0+255),w,b
 11277  0024C0  116E               	iorwf	(___fladd@b+1)& (0+255),w,b
 11278  0024C2  116F               	iorwf	(___fladd@b+2)& (0+255),w,b
 11279  0024C4  1170               	iorwf	(___fladd@b+3)& (0+255),w,b
 11280  0024C6  A4D8               	btfss	status,2,c
 11281  0024C8  EF68  F012         	goto	u7591
 11282  0024CC  EF6B  F012         	goto	u7590
 11283  0024D0                     u7591:
 11284  0024D0  0E01               	movlw	1
 11285  0024D2  EF6C  F012         	goto	u7600
 11286  0024D6                     u7590:
 11287  0024D6  0E00               	movlw	0
 11288  0024D8                     u7600:
 11289  0024D8  6F78               	movwf	___fladd@grs& (0+255),b
 11290  0024DA                     
 11291                           ; BSR set to: 0
 11292  0024DA  0E00               	movlw	0
 11293  0024DC  6F6D               	movwf	___fladd@b& (0+255),b
 11294  0024DE  0E00               	movlw	0
 11295  0024E0  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 11296  0024E2  0E00               	movlw	0
 11297  0024E4  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 11298  0024E6  0E00               	movlw	0
 11299  0024E8  6F70               	movwf	(___fladd@b+3)& (0+255),b
 11300  0024EA                     
 11301                           ; BSR set to: 0
 11302  0024EA  C076  F077         	movff	___fladd@aexp,___fladd@bexp
 11303  0024EE  EF9F  F012         	goto	l1925
 11304  0024F2                     l1927:
 11305                           
 11306                           ; BSR set to: 0
 11307  0024F2  A178               	btfss	___fladd@grs& (0+255),0,b
 11308  0024F4  EF7E  F012         	goto	u7611
 11309  0024F8  EF80  F012         	goto	u7610
 11310  0024FC                     u7611:
 11311  0024FC  EF86  F012         	goto	l7661
 11312  002500                     u7610:
 11313  002500                     
 11314                           ; BSR set to: 0
 11315  002500  90D8               	bcf	status,0,c
 11316  002502  3178               	rrcf	___fladd@grs& (0+255),w,b
 11317  002504  0901               	iorlw	1
 11318  002506  6F78               	movwf	___fladd@grs& (0+255),b
 11319  002508  EF88  F012         	goto	l7663
 11320  00250C                     l7661:
 11321                           
 11322                           ; BSR set to: 0
 11323  00250C  90D8               	bcf	status,0,c
 11324  00250E  3378               	rrcf	___fladd@grs& (0+255),f,b
 11325  002510                     l7663:
 11326                           
 11327                           ; BSR set to: 0
 11328  002510  A16D               	btfss	___fladd@b& (0+255),0,b
 11329  002512  EF8D  F012         	goto	u7621
 11330  002516  EF8F  F012         	goto	u7620
 11331  00251A                     u7621:
 11332  00251A  EF90  F012         	goto	l7667
 11333  00251E                     u7620:
 11334  00251E                     
 11335                           ; BSR set to: 0
 11336  00251E  8F78               	bsf	___fladd@grs& (0+255),7,b
 11337  002520                     l7667:
 11338                           
 11339                           ; BSR set to: 0
 11340  002520  3570               	rlcf	(___fladd@b+3)& (0+255),w,b
 11341  002522  3370               	rrcf	(___fladd@b+3)& (0+255),f,b
 11342  002524  336F               	rrcf	(___fladd@b+2)& (0+255),f,b
 11343  002526  336E               	rrcf	(___fladd@b+1)& (0+255),f,b
 11344  002528  336D               	rrcf	___fladd@b& (0+255),f,b
 11345  00252A                     
 11346                           ; BSR set to: 0
 11347  00252A  2B77               	incf	___fladd@bexp& (0+255),f,b
 11348  00252C                     l1926:
 11349                           
 11350                           ; BSR set to: 0
 11351  00252C  5176               	movf	___fladd@aexp& (0+255),w,b
 11352  00252E  5D77               	subwf	___fladd@bexp& (0+255),w,b
 11353  002530  A0D8               	btfss	status,0,c
 11354  002532  EF9D  F012         	goto	u7631
 11355  002536  EF9F  F012         	goto	u7630
 11356  00253A                     u7631:
 11357  00253A  EF79  F012         	goto	l1927
 11358  00253E                     u7630:
 11359  00253E                     l1925:
 11360                           
 11361                           ; BSR set to: 0
 11362  00253E  BD75               	btfsc	___fladd@signs& (0+255),6,b
 11363  002540  EFA4  F012         	goto	u7641
 11364  002544  EFA6  F012         	goto	u7640
 11365  002548                     u7641:
 11366  002548  EFE6  F012         	goto	l7695
 11367  00254C                     u7640:
 11368  00254C                     
 11369                           ; BSR set to: 0
 11370  00254C  5177               	movf	___fladd@bexp& (0+255),w,b
 11371  00254E  A4D8               	btfss	status,2,c
 11372  002550  EFAC  F012         	goto	u7651
 11373  002554  EFAE  F012         	goto	u7650
 11374  002558                     u7651:
 11375  002558  EFB8  F012         	goto	l7677
 11376  00255C                     u7650:
 11377  00255C                     
 11378                           ; BSR set to: 0
 11379  00255C  0E00               	movlw	0
 11380  00255E  6F6D               	movwf	?___fladd& (0+255),b
 11381  002560  0E00               	movlw	0
 11382  002562  6F6E               	movwf	(?___fladd+1)& (0+255),b
 11383  002564  0E00               	movlw	0
 11384  002566  6F6F               	movwf	(?___fladd+2)& (0+255),b
 11385  002568  0E00               	movlw	0
 11386  00256A  6F70               	movwf	(?___fladd+3)& (0+255),b
 11387  00256C  EF07  F014         	goto	l1934
 11388  002570                     l7677:
 11389                           
 11390                           ; BSR set to: 0
 11391  002570  5171               	movf	___fladd@a& (0+255),w,b
 11392  002572  276D               	addwf	___fladd@b& (0+255),f,b
 11393  002574  5172               	movf	(___fladd@a+1)& (0+255),w,b
 11394  002576  236E               	addwfc	(___fladd@b+1)& (0+255),f,b
 11395  002578  5173               	movf	(___fladd@a+2)& (0+255),w,b
 11396  00257A  236F               	addwfc	(___fladd@b+2)& (0+255),f,b
 11397  00257C  5174               	movf	(___fladd@a+3)& (0+255),w,b
 11398  00257E  2370               	addwfc	(___fladd@b+3)& (0+255),f,b
 11399  002580                     
 11400                           ; BSR set to: 0
 11401  002580  A170               	btfss	(___fladd@b+3)& (0+255),0,b
 11402  002582  EFC5  F012         	goto	u7661
 11403  002586  EFC7  F012         	goto	u7660
 11404  00258A                     u7661:
 11405  00258A  EF73  F013         	goto	l7731
 11406  00258E                     u7660:
 11407  00258E                     
 11408                           ; BSR set to: 0
 11409  00258E  A178               	btfss	___fladd@grs& (0+255),0,b
 11410  002590  EFCC  F012         	goto	u7671
 11411  002594  EFCE  F012         	goto	u7670
 11412  002598                     u7671:
 11413  002598  EFD4  F012         	goto	l7685
 11414  00259C                     u7670:
 11415  00259C                     
 11416                           ; BSR set to: 0
 11417  00259C  90D8               	bcf	status,0,c
 11418  00259E  3178               	rrcf	___fladd@grs& (0+255),w,b
 11419  0025A0  0901               	iorlw	1
 11420  0025A2  6F78               	movwf	___fladd@grs& (0+255),b
 11421  0025A4  EFD6  F012         	goto	l7687
 11422  0025A8                     l7685:
 11423                           
 11424                           ; BSR set to: 0
 11425  0025A8  90D8               	bcf	status,0,c
 11426  0025AA  3378               	rrcf	___fladd@grs& (0+255),f,b
 11427  0025AC                     l7687:
 11428                           
 11429                           ; BSR set to: 0
 11430  0025AC  A16D               	btfss	___fladd@b& (0+255),0,b
 11431  0025AE  EFDB  F012         	goto	u7681
 11432  0025B2  EFDD  F012         	goto	u7680
 11433  0025B6                     u7681:
 11434  0025B6  EFDE  F012         	goto	l7691
 11435  0025BA                     u7680:
 11436  0025BA                     
 11437                           ; BSR set to: 0
 11438  0025BA  8F78               	bsf	___fladd@grs& (0+255),7,b
 11439  0025BC                     l7691:
 11440                           
 11441                           ; BSR set to: 0
 11442  0025BC  3570               	rlcf	(___fladd@b+3)& (0+255),w,b
 11443  0025BE  3370               	rrcf	(___fladd@b+3)& (0+255),f,b
 11444  0025C0  336F               	rrcf	(___fladd@b+2)& (0+255),f,b
 11445  0025C2  336E               	rrcf	(___fladd@b+1)& (0+255),f,b
 11446  0025C4  336D               	rrcf	___fladd@b& (0+255),f,b
 11447  0025C6                     
 11448                           ; BSR set to: 0
 11449  0025C6  2B77               	incf	___fladd@bexp& (0+255),f,b
 11450  0025C8  EF73  F013         	goto	l7731
 11451  0025CC                     l7695:
 11452                           
 11453                           ; BSR set to: 0
 11454  0025CC  5171               	movf	___fladd@a& (0+255),w,b
 11455  0025CE  5D6D               	subwf	___fladd@b& (0+255),w,b
 11456  0025D0  5172               	movf	(___fladd@a+1)& (0+255),w,b
 11457  0025D2  596E               	subwfb	(___fladd@b+1)& (0+255),w,b
 11458  0025D4  5173               	movf	(___fladd@a+2)& (0+255),w,b
 11459  0025D6  596F               	subwfb	(___fladd@b+2)& (0+255),w,b
 11460  0025D8  5170               	movf	(___fladd@b+3)& (0+255),w,b
 11461  0025DA  0A80               	xorlw	128
 11462  0025DC  6E36               	movwf	??___fladd^0,c
 11463  0025DE  5174               	movf	(___fladd@a+3)& (0+255),w,b
 11464  0025E0  0A80               	xorlw	128
 11465  0025E2  5836               	subwfb	??___fladd^0,w,c
 11466  0025E4  B0D8               	btfsc	status,0,c
 11467  0025E6  EFF7  F012         	goto	u7691
 11468  0025EA  EFF9  F012         	goto	u7690
 11469  0025EE                     u7691:
 11470  0025EE  EF24  F013         	goto	l7705
 11471  0025F2                     u7690:
 11472  0025F2                     
 11473                           ; BSR set to: 0
 11474  0025F2  516D               	movf	___fladd@b& (0+255),w,b
 11475  0025F4  5D71               	subwf	___fladd@a& (0+255),w,b
 11476  0025F6  6E36               	movwf	??___fladd^0,c
 11477  0025F8  516E               	movf	(___fladd@b+1)& (0+255),w,b
 11478  0025FA  5972               	subwfb	(___fladd@a+1)& (0+255),w,b
 11479  0025FC  6E37               	movwf	(??___fladd+1)^0,c
 11480  0025FE  516F               	movf	(___fladd@b+2)& (0+255),w,b
 11481  002600  5973               	subwfb	(___fladd@a+2)& (0+255),w,b
 11482  002602  6E38               	movwf	(??___fladd+2)^0,c
 11483  002604  5170               	movf	(___fladd@b+3)& (0+255),w,b
 11484  002606  5974               	subwfb	(___fladd@a+3)& (0+255),w,b
 11485  002608  6E39               	movwf	(??___fladd+3)^0,c
 11486  00260A  0EFF               	movlw	255
 11487  00260C  2436               	addwf	??___fladd^0,w,c
 11488  00260E  6F6D               	movwf	___fladd@b& (0+255),b
 11489  002610  0EFF               	movlw	255
 11490  002612  2037               	addwfc	(??___fladd+1)^0,w,c
 11491  002614  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 11492  002616  0EFF               	movlw	255
 11493  002618  2038               	addwfc	(??___fladd+2)^0,w,c
 11494  00261A  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 11495  00261C  0EFF               	movlw	255
 11496  00261E  2039               	addwfc	(??___fladd+3)^0,w,c
 11497  002620  6F70               	movwf	(___fladd@b+3)& (0+255),b
 11498  002622  0E80               	movlw	128
 11499  002624  1B75               	xorwf	___fladd@signs& (0+255),f,b
 11500  002626                     
 11501                           ; BSR set to: 0
 11502  002626  6D78               	negf	___fladd@grs& (0+255),b
 11503  002628                     
 11504                           ; BSR set to: 0
 11505  002628  5178               	movf	___fladd@grs& (0+255),w,b
 11506  00262A  A4D8               	btfss	status,2,c
 11507  00262C  EF1A  F013         	goto	u7701
 11508  002630  EF1C  F013         	goto	u7700
 11509  002634                     u7701:
 11510  002634  EF2C  F013         	goto	l1942
 11511  002638                     u7700:
 11512  002638                     
 11513                           ; BSR set to: 0
 11514  002638  0E01               	movlw	1
 11515  00263A  276D               	addwf	___fladd@b& (0+255),f,b
 11516  00263C  0E00               	movlw	0
 11517  00263E  236E               	addwfc	(___fladd@b+1)& (0+255),f,b
 11518  002640  236F               	addwfc	(___fladd@b+2)& (0+255),f,b
 11519  002642  2370               	addwfc	(___fladd@b+3)& (0+255),f,b
 11520  002644  EF2C  F013         	goto	l1942
 11521  002648                     l7705:
 11522                           
 11523                           ; BSR set to: 0
 11524  002648  5171               	movf	___fladd@a& (0+255),w,b
 11525  00264A  5F6D               	subwf	___fladd@b& (0+255),f,b
 11526  00264C  5172               	movf	(___fladd@a+1)& (0+255),w,b
 11527  00264E  5B6E               	subwfb	(___fladd@b+1)& (0+255),f,b
 11528  002650  5173               	movf	(___fladd@a+2)& (0+255),w,b
 11529  002652  5B6F               	subwfb	(___fladd@b+2)& (0+255),f,b
 11530  002654  5174               	movf	(___fladd@a+3)& (0+255),w,b
 11531  002656  5B70               	subwfb	(___fladd@b+3)& (0+255),f,b
 11532  002658                     l1942:
 11533                           
 11534                           ; BSR set to: 0
 11535  002658  516D               	movf	___fladd@b& (0+255),w,b
 11536  00265A  116E               	iorwf	(___fladd@b+1)& (0+255),w,b
 11537  00265C  116F               	iorwf	(___fladd@b+2)& (0+255),w,b
 11538  00265E  1170               	iorwf	(___fladd@b+3)& (0+255),w,b
 11539  002660  A4D8               	btfss	status,2,c
 11540  002662  EF35  F013         	goto	u7711
 11541  002666  EF37  F013         	goto	u7710
 11542  00266A                     u7711:
 11543  00266A  EF6C  F013         	goto	l7729
 11544  00266E                     u7710:
 11545  00266E                     
 11546                           ; BSR set to: 0
 11547  00266E  5178               	movf	___fladd@grs& (0+255),w,b
 11548  002670  A4D8               	btfss	status,2,c
 11549  002672  EF3D  F013         	goto	u7721
 11550  002676  EF3F  F013         	goto	u7720
 11551  00267A                     u7721:
 11552  00267A  EF6C  F013         	goto	l7729
 11553  00267E                     u7720:
 11554  00267E                     
 11555                           ; BSR set to: 0
 11556  00267E  0E00               	movlw	0
 11557  002680  6F6D               	movwf	?___fladd& (0+255),b
 11558  002682  0E00               	movlw	0
 11559  002684  6F6E               	movwf	(?___fladd+1)& (0+255),b
 11560  002686  0E00               	movlw	0
 11561  002688  6F6F               	movwf	(?___fladd+2)& (0+255),b
 11562  00268A  0E00               	movlw	0
 11563  00268C  6F70               	movwf	(?___fladd+3)& (0+255),b
 11564  00268E  EF07  F014         	goto	l1934
 11565  002692                     l7713:
 11566                           
 11567                           ; BSR set to: 0
 11568  002692  90D8               	bcf	status,0,c
 11569  002694  376D               	rlcf	___fladd@b& (0+255),f,b
 11570  002696  376E               	rlcf	(___fladd@b+1)& (0+255),f,b
 11571  002698  376F               	rlcf	(___fladd@b+2)& (0+255),f,b
 11572  00269A  3770               	rlcf	(___fladd@b+3)& (0+255),f,b
 11573  00269C                     
 11574                           ; BSR set to: 0
 11575  00269C  AF78               	btfss	___fladd@grs& (0+255),7,b
 11576  00269E  EF53  F013         	goto	u7731
 11577  0026A2  EF55  F013         	goto	u7730
 11578  0026A6                     u7731:
 11579  0026A6  EF56  F013         	goto	l7719
 11580  0026AA                     u7730:
 11581  0026AA                     
 11582                           ; BSR set to: 0
 11583  0026AA  816D               	bsf	___fladd@b& (0+255),0,b
 11584  0026AC                     l7719:
 11585                           
 11586                           ; BSR set to: 0
 11587  0026AC  A178               	btfss	___fladd@grs& (0+255),0,b
 11588  0026AE  EF5B  F013         	goto	u7741
 11589  0026B2  EF5D  F013         	goto	u7740
 11590  0026B6                     u7741:
 11591  0026B6  EF61  F013         	goto	l7723
 11592  0026BA                     u7740:
 11593  0026BA                     
 11594                           ; BSR set to: 0
 11595  0026BA  80D8               	bsf	status,0,c
 11596  0026BC  3778               	rlcf	___fladd@grs& (0+255),f,b
 11597  0026BE  EF63  F013         	goto	l7725
 11598  0026C2                     l7723:
 11599                           
 11600                           ; BSR set to: 0
 11601  0026C2  90D8               	bcf	status,0,c
 11602  0026C4  3778               	rlcf	___fladd@grs& (0+255),f,b
 11603  0026C6                     l7725:
 11604                           
 11605                           ; BSR set to: 0
 11606  0026C6  5177               	movf	___fladd@bexp& (0+255),w,b
 11607  0026C8  B4D8               	btfsc	status,2,c
 11608  0026CA  EF69  F013         	goto	u7751
 11609  0026CE  EF6B  F013         	goto	u7750
 11610  0026D2                     u7751:
 11611  0026D2  EF6C  F013         	goto	l7729
 11612  0026D6                     u7750:
 11613  0026D6                     
 11614                           ; BSR set to: 0
 11615  0026D6  0777               	decf	___fladd@bexp& (0+255),f,b
 11616  0026D8                     l7729:
 11617                           
 11618                           ; BSR set to: 0
 11619  0026D8  AF6F               	btfss	(___fladd@b+2)& (0+255),7,b
 11620  0026DA  EF71  F013         	goto	u7761
 11621  0026DE  EF73  F013         	goto	u7760
 11622  0026E2                     u7761:
 11623  0026E2  EF49  F013         	goto	l7713
 11624  0026E6                     u7760:
 11625  0026E6                     l7731:
 11626                           
 11627                           ; BSR set to: 0
 11628  0026E6  0E00               	movlw	0
 11629  0026E8  6F76               	movwf	___fladd@aexp& (0+255),b
 11630  0026EA                     
 11631                           ; BSR set to: 0
 11632  0026EA  AF78               	btfss	___fladd@grs& (0+255),7,b
 11633  0026EC  EF7A  F013         	goto	u7771
 11634  0026F0  EF7C  F013         	goto	u7770
 11635  0026F4                     u7771:
 11636  0026F4  EF94  F013         	goto	l1951
 11637  0026F8                     u7770:
 11638  0026F8                     
 11639                           ; BSR set to: 0
 11640  0026F8  C078  F036         	movff	___fladd@grs,??___fladd
 11641  0026FC  0E7F               	movlw	127
 11642  0026FE  1636               	andwf	??___fladd^0,f,c
 11643  002700  B4D8               	btfsc	status,2,c
 11644  002702  EF85  F013         	goto	u7781
 11645  002706  EF87  F013         	goto	u7780
 11646  00270A                     u7781:
 11647  00270A  EF8B  F013         	goto	l1952
 11648  00270E                     u7780:
 11649  00270E                     l7737:
 11650                           
 11651                           ; BSR set to: 0
 11652  00270E  0E01               	movlw	1
 11653  002710  6F76               	movwf	___fladd@aexp& (0+255),b
 11654  002712  EF94  F013         	goto	l1951
 11655  002716                     l1952:
 11656                           
 11657                           ; BSR set to: 0
 11658  002716  A16D               	btfss	___fladd@b& (0+255),0,b
 11659  002718  EF90  F013         	goto	u7791
 11660  00271C  EF92  F013         	goto	u7790
 11661  002720                     u7791:
 11662  002720  EF94  F013         	goto	l1951
 11663  002724                     u7790:
 11664  002724  EF87  F013         	goto	l7737
 11665  002728                     l1951:
 11666                           
 11667                           ; BSR set to: 0
 11668  002728  5176               	movf	___fladd@aexp& (0+255),w,b
 11669  00272A  B4D8               	btfsc	status,2,c
 11670  00272C  EF9A  F013         	goto	u7801
 11671  002730  EF9C  F013         	goto	u7800
 11672  002734                     u7801:
 11673  002734  EFC7  F013         	goto	l7749
 11674  002738                     u7800:
 11675  002738                     
 11676                           ; BSR set to: 0
 11677  002738  0E01               	movlw	1
 11678  00273A  276D               	addwf	___fladd@b& (0+255),f,b
 11679  00273C  0E00               	movlw	0
 11680  00273E  236E               	addwfc	(___fladd@b+1)& (0+255),f,b
 11681  002740  236F               	addwfc	(___fladd@b+2)& (0+255),f,b
 11682  002742  2370               	addwfc	(___fladd@b+3)& (0+255),f,b
 11683  002744                     
 11684                           ; BSR set to: 0
 11685  002744  A170               	btfss	(___fladd@b+3)& (0+255),0,b
 11686  002746  EFA7  F013         	goto	u7811
 11687  00274A  EFA9  F013         	goto	u7810
 11688  00274E                     u7811:
 11689  00274E  EFC7  F013         	goto	l7749
 11690  002752                     u7810:
 11691  002752                     
 11692                           ; BSR set to: 0
 11693  002752  C06D  F036         	movff	___fladd@b,??___fladd
 11694  002756  C06E  F037         	movff	___fladd@b+1,??___fladd+1
 11695  00275A  C06F  F038         	movff	___fladd@b+2,??___fladd+2
 11696  00275E  C070  F039         	movff	___fladd@b+3,??___fladd+3
 11697  002762  3439               	rlcf	(??___fladd+3)^0,w,c
 11698  002764  3239               	rrcf	(??___fladd+3)^0,f,c
 11699  002766  3238               	rrcf	(??___fladd+2)^0,f,c
 11700  002768  3237               	rrcf	(??___fladd+1)^0,f,c
 11701  00276A  3236               	rrcf	??___fladd^0,f,c
 11702  00276C  C036  F06D         	movff	??___fladd,___fladd@b
 11703  002770  C037  F06E         	movff	??___fladd+1,___fladd@b+1
 11704  002774  C038  F06F         	movff	??___fladd+2,___fladd@b+2
 11705  002778  C039  F070         	movff	??___fladd+3,___fladd@b+3
 11706  00277C  2977               	incf	___fladd@bexp& (0+255),w,b
 11707  00277E  B4D8               	btfsc	status,2,c
 11708  002780  EFC4  F013         	goto	u7821
 11709  002784  EFC6  F013         	goto	u7820
 11710  002788                     u7821:
 11711  002788  EFC7  F013         	goto	l7749
 11712  00278C                     u7820:
 11713  00278C                     
 11714                           ; BSR set to: 0
 11715  00278C  2B77               	incf	___fladd@bexp& (0+255),f,b
 11716  00278E                     l7749:
 11717                           
 11718                           ; BSR set to: 0
 11719  00278E  2977               	incf	___fladd@bexp& (0+255),w,b
 11720  002790  B4D8               	btfsc	status,2,c
 11721  002792  EFCD  F013         	goto	u7831
 11722  002796  EFCF  F013         	goto	u7830
 11723  00279A                     u7831:
 11724  00279A  EFD7  F013         	goto	l7753
 11725  00279E                     u7830:
 11726  00279E                     
 11727                           ; BSR set to: 0
 11728  00279E  5177               	movf	___fladd@bexp& (0+255),w,b
 11729  0027A0  A4D8               	btfss	status,2,c
 11730  0027A2  EFD5  F013         	goto	u7841
 11731  0027A6  EFD7  F013         	goto	u7840
 11732  0027AA                     u7841:
 11733  0027AA  EFE9  F013         	goto	l7757
 11734  0027AE                     u7840:
 11735  0027AE                     l7753:
 11736                           
 11737                           ; BSR set to: 0
 11738  0027AE  0E00               	movlw	0
 11739  0027B0  6F6D               	movwf	___fladd@b& (0+255),b
 11740  0027B2  0E00               	movlw	0
 11741  0027B4  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 11742  0027B6  0E00               	movlw	0
 11743  0027B8  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 11744  0027BA  0E00               	movlw	0
 11745  0027BC  6F70               	movwf	(___fladd@b+3)& (0+255),b
 11746  0027BE  5177               	movf	___fladd@bexp& (0+255),w,b
 11747  0027C0  A4D8               	btfss	status,2,c
 11748  0027C2  EFE5  F013         	goto	u7851
 11749  0027C6  EFE7  F013         	goto	u7850
 11750  0027CA                     u7851:
 11751  0027CA  EFE9  F013         	goto	l7757
 11752  0027CE                     u7850:
 11753  0027CE                     
 11754                           ; BSR set to: 0
 11755  0027CE  0E00               	movlw	0
 11756  0027D0  6F75               	movwf	___fladd@signs& (0+255),b
 11757  0027D2                     l7757:
 11758                           
 11759                           ; BSR set to: 0
 11760  0027D2  A177               	btfss	___fladd@bexp& (0+255),0,b
 11761  0027D4  EFEE  F013         	goto	u7861
 11762  0027D8  EFF0  F013         	goto	u7860
 11763  0027DC                     u7861:
 11764  0027DC  EFF3  F013         	goto	l7761
 11765  0027E0                     u7860:
 11766  0027E0                     
 11767                           ; BSR set to: 0
 11768  0027E0  8F6F               	bsf	(___fladd@b+2)& (0+255),7,b
 11769  0027E2  EFF4  F013         	goto	l7763
 11770  0027E6                     l7761:
 11771                           
 11772                           ; BSR set to: 0
 11773  0027E6  9F6F               	bcf	(___fladd@b+2)& (0+255),7,b
 11774  0027E8                     l7763:
 11775                           
 11776                           ; BSR set to: 0
 11777  0027E8  90D8               	bcf	status,0,c
 11778  0027EA  3177               	rrcf	___fladd@bexp& (0+255),w,b
 11779  0027EC  6F70               	movwf	(___fladd@b+3)& (0+255),b
 11780  0027EE                     
 11781                           ; BSR set to: 0
 11782  0027EE  AF75               	btfss	___fladd@signs& (0+255),7,b
 11783  0027F0  EFFC  F013         	goto	u7871
 11784  0027F4  EFFE  F013         	goto	u7870
 11785  0027F8                     u7871:
 11786  0027F8  EFFF  F013         	goto	l7769
 11787  0027FC                     u7870:
 11788  0027FC                     
 11789                           ; BSR set to: 0
 11790  0027FC  8F70               	bsf	(___fladd@b+3)& (0+255),7,b
 11791  0027FE                     l7769:
 11792                           
 11793                           ; BSR set to: 0
 11794  0027FE  C06D  F06D         	movff	___fladd@b,?___fladd
 11795  002802  C06E  F06E         	movff	___fladd@b+1,?___fladd+1
 11796  002806  C06F  F06F         	movff	___fladd@b+2,?___fladd+2
 11797  00280A  C070  F070         	movff	___fladd@b+3,?___fladd+3
 11798  00280E                     l1934:
 11799                           
 11800                           ; BSR set to: 0
 11801  00280E  0012               	return		;funcret
 11802  002810                     __end_of___fladd:
 11803                           	callstack 0
 11804                           
 11805 ;; *************** function _calcMotorPow *****************
 11806 ;; Defined at:
 11807 ;;		line 332 in file "main.c"
 11808 ;; Parameters:    Size  Location     Type
 11809 ;;		None
 11810 ;; Auto vars:     Size  Location     Type
 11811 ;;  oldSpeedDelt    2   39[BANK0 ] short 
 11812 ;;  setSpeedDelt    2   37[BANK0 ] short 
 11813 ;;  addMPow         1   41[BANK0 ] char 
 11814 ;; Return value:  Size  Location     Type
 11815 ;;                  1    wreg      void 
 11816 ;; Registers used:
 11817 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11818 ;; Tracked objects:
 11819 ;;		On entry : 0/0
 11820 ;;		On exit  : 0/0
 11821 ;;		Unchanged: 0/0
 11822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11824 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11825 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11826 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11827 ;;Total ram usage:        7 bytes
 11828 ;; Hardware stack levels used: 1
 11829 ;; Hardware stack levels required when called: 10
 11830 ;; This function calls:
 11831 ;;		___awdiv
 11832 ;;		___flmul
 11833 ;;		___fltol
 11834 ;;		___xxtofl
 11835 ;;		_actSpeed
 11836 ;;		_setMotor
 11837 ;; This function is called by:
 11838 ;;		_loop
 11839 ;; This function uses a non-reentrant model
 11840 ;;
 11841                           
 11842                           	psect	text44
 11843  004384                     __ptext44:
 11844                           	callstack 0
 11845  004384                     _calcMotorPow:
 11846                           	callstack 19
 11847  004384                     
 11848                           ;main.c: 333:     int16_t setSpeedDelta = setSpeed - currentSpeed;
 11849  004384  0100               	movlb	0	; () banked
 11850  004386  51EF               	movf	_currentSpeed& (0+255),w,b
 11851  004388  5DF1               	subwf	_setSpeed& (0+255),w,b
 11852  00438A  6F85               	movwf	calcMotorPow@setSpeedDelta& (0+255),b
 11853  00438C  51F0               	movf	(_currentSpeed+1)& (0+255),w,b
 11854  00438E  59F2               	subwfb	(_setSpeed+1)& (0+255),w,b
 11855  004390  6F86               	movwf	(calcMotorPow@setSpeedDelta+1)& (0+255),b
 11856                           
 11857                           ;main.c: 334:     int16_t oldSpeedDelta = currentSpeed - oldSpeed;
 11858  004392  0101               	movlb	1	; () banked
 11859  004394  512E               	movf	_oldSpeed& (0+255),w,b
 11860  004396  0100               	movlb	0	; () banked
 11861  004398  5DEF               	subwf	_currentSpeed& (0+255),w,b
 11862  00439A  6F87               	movwf	calcMotorPow@oldSpeedDelta& (0+255),b
 11863  00439C  0101               	movlb	1	; () banked
 11864  00439E  512F               	movf	(_oldSpeed+1)& (0+255),w,b
 11865  0043A0  0100               	movlb	0	; () banked
 11866  0043A2  59F0               	subwfb	(_currentSpeed+1)& (0+255),w,b
 11867  0043A4  6F88               	movwf	(calcMotorPow@oldSpeedDelta+1)& (0+255),b
 11868  0043A6                     
 11869                           ; BSR set to: 0
 11870                           ;main.c: 337:     currentSpeed = actSpeed();
 11871  0043A6  ECE9  F02A         	call	_actSpeed	;wreg free
 11872  0043AA  C022  F0EF         	movff	?_actSpeed,_currentSpeed
 11873  0043AE  C023  F0F0         	movff	?_actSpeed+1,_currentSpeed+1
 11874  0043B2                     
 11875                           ;main.c: 341:     addMPow = (int8_t) ((0.025) * (setSpeedDelta - (oldSpeedDelta / (2))))
      +                          ;
 11876  0043B2  0ECD               	movlw	205
 11877  0043B4  6E2E               	movwf	___flmul@a^0,c
 11878  0043B6  0ECC               	movlw	204
 11879  0043B8  6E2F               	movwf	(___flmul@a+1)^0,c
 11880  0043BA  0ECC               	movlw	204
 11881  0043BC  6E30               	movwf	(___flmul@a+2)^0,c
 11882  0043BE  0E3C               	movlw	60
 11883  0043C0  6E31               	movwf	(___flmul@a+3)^0,c
 11884  0043C2  0E00               	movlw	0
 11885  0043C4  6E17               	movwf	(___awdiv@divisor+1)^0,c
 11886  0043C6  0E02               	movlw	2
 11887  0043C8  6E16               	movwf	___awdiv@divisor^0,c
 11888  0043CA  C087  F014         	movff	calcMotorPow@oldSpeedDelta,___awdiv@dividend
 11889  0043CE  C088  F015         	movff	calcMotorPow@oldSpeedDelta+1,___awdiv@dividend+1
 11890  0043D2  ECCD  F027         	call	___awdiv	;wreg free
 11891  0043D6  C085  F083         	movff	calcMotorPow@setSpeedDelta,??_calcMotorPow
 11892  0043DA  C086  F084         	movff	calcMotorPow@setSpeedDelta+1,??_calcMotorPow+1
 11893  0043DE  5014               	movf	?___awdiv^0,w,c
 11894  0043E0  0100               	movlb	0	; () banked
 11895  0043E2  5F83               	subwf	??_calcMotorPow& (0+255),f,b
 11896  0043E4  5015               	movf	(?___awdiv+1)^0,w,c
 11897  0043E6  5B84               	subwfb	(??_calcMotorPow+1)& (0+255),f,b
 11898  0043E8  C083  F01C         	movff	??_calcMotorPow,___xxtofl@val
 11899  0043EC  C084  F01D         	movff	??_calcMotorPow+1,___xxtofl@val+1
 11900  0043F0  0E00               	movlw	0
 11901  0043F2  BE1D               	btfsc	(___xxtofl@val+1)^0,7,c
 11902  0043F4  0EFF               	movlw	-1
 11903  0043F6  6E1E               	movwf	(___xxtofl@val+2)^0,c
 11904  0043F8  6E1F               	movwf	(___xxtofl@val+3)^0,c
 11905  0043FA  0E01               	movlw	1
 11906  0043FC  EC72  F01F         	call	___xxtofl
 11907  004400  C01C  F02A         	movff	?___xxtofl,___flmul@b
 11908  004404  C01D  F02B         	movff	?___xxtofl+1,___flmul@b+1
 11909  004408  C01E  F02C         	movff	?___xxtofl+2,___flmul@b+2
 11910  00440C  C01F  F02D         	movff	?___xxtofl+3,___flmul@b+3
 11911  004410  EC08  F014         	call	___flmul	;wreg free
 11912  004414  C02A  F079         	movff	?___flmul,___fltol@f1
 11913  004418  C02B  F07A         	movff	?___flmul+1,___fltol@f1+1
 11914  00441C  C02C  F07B         	movff	?___flmul+2,___fltol@f1+2
 11915  004420  C02D  F07C         	movff	?___flmul+3,___fltol@f1+3
 11916  004424  EC17  F024         	call	___fltol	;wreg free
 11917  004428  0100               	movlb	0	; () banked
 11918  00442A  5179               	movf	?___fltol& (0+255),w,b
 11919  00442C  6F89               	movwf	calcMotorPow@addMPow& (0+255),b
 11920  00442E                     
 11921                           ; BSR set to: 0
 11922                           ;main.c: 343:     if (addMPow > (3)) {
 11923  00442E  5189               	movf	calcMotorPow@addMPow& (0+255),w,b
 11924  004430  0A80               	xorlw	128
 11925  004432  0F7C               	addlw	-132
 11926  004434  A0D8               	btfss	status,0,c
 11927  004436  EF1F  F022         	goto	u10511
 11928  00443A  EF21  F022         	goto	u10510
 11929  00443E                     u10511:
 11930  00443E  EF25  F022         	goto	l9305
 11931  004442                     u10510:
 11932  004442                     
 11933                           ; BSR set to: 0
 11934                           ;main.c: 344:         addMPow = (3);
 11935  004442  0E03               	movlw	3
 11936  004444  6F89               	movwf	calcMotorPow@addMPow& (0+255),b
 11937                           
 11938                           ;main.c: 345:     } else if (addMPow < -(3)) {
 11939  004446  EF31  F022         	goto	l9309
 11940  00444A                     l9305:
 11941                           
 11942                           ; BSR set to: 0
 11943  00444A  5189               	movf	calcMotorPow@addMPow& (0+255),w,b
 11944  00444C  0A80               	xorlw	128
 11945  00444E  0F83               	addlw	131
 11946  004450  B0D8               	btfsc	status,0,c
 11947  004452  EF2D  F022         	goto	u10521
 11948  004456  EF2F  F022         	goto	u10520
 11949  00445A                     u10521:
 11950  00445A  EF31  F022         	goto	l9309
 11951  00445E                     u10520:
 11952  00445E                     
 11953                           ; BSR set to: 0
 11954                           ;main.c: 346:         addMPow = -(3);
 11955  00445E  0EFD               	movlw	253
 11956  004460  6F89               	movwf	calcMotorPow@addMPow& (0+255),b
 11957  004462                     l9309:
 11958                           
 11959                           ; BSR set to: 0
 11960                           ;main.c: 349:     actMotorPow = actMotorPow + addMPow;
 11961  004462  51ED               	movf	_actMotorPow& (0+255),w,b
 11962  004464  2589               	addwf	calcMotorPow@addMPow& (0+255),w,b
 11963  004466  6FED               	movwf	_actMotorPow& (0+255),b
 11964  004468  0E00               	movlw	0
 11965  00446A  BF89               	btfsc	calcMotorPow@addMPow& (0+255),7,b
 11966  00446C  0EFF               	movlw	255
 11967  00446E  21EE               	addwfc	(_actMotorPow+1)& (0+255),w,b
 11968  004470  6FEE               	movwf	(_actMotorPow+1)& (0+255),b
 11969  004472                     
 11970                           ; BSR set to: 0
 11971                           ;main.c: 351:     if (actMotorPow > (700)) {
 11972  004472  BFEE               	btfsc	(_actMotorPow+1)& (0+255),7,b
 11973  004474  EF45  F022         	goto	u10531
 11974  004478  0EBD               	movlw	189
 11975  00447A  5DED               	subwf	_actMotorPow& (0+255),w,b
 11976  00447C  0E02               	movlw	2
 11977  00447E  59EE               	subwfb	(_actMotorPow+1)& (0+255),w,b
 11978  004480  A0D8               	btfss	status,0,c
 11979  004482  EF45  F022         	goto	u10531
 11980  004486  EF47  F022         	goto	u10530
 11981  00448A                     u10531:
 11982  00448A  EF4D  F022         	goto	l9315
 11983  00448E                     u10530:
 11984  00448E                     
 11985                           ; BSR set to: 0
 11986                           ;main.c: 352:         actMotorPow = (700);
 11987  00448E  0E02               	movlw	2
 11988  004490  6FEE               	movwf	(_actMotorPow+1)& (0+255),b
 11989  004492  0EBC               	movlw	188
 11990  004494  6FED               	movwf	_actMotorPow& (0+255),b
 11991                           
 11992                           ;main.c: 353:     } else if (actMotorPow < (-400)) {
 11993  004496  EF5F  F022         	goto	l9319
 11994  00449A                     l9315:
 11995                           
 11996                           ; BSR set to: 0
 11997  00449A  AFEE               	btfss	(_actMotorPow+1)& (0+255),7,b
 11998  00449C  EF59  F022         	goto	u10541
 11999  0044A0  0E70               	movlw	112
 12000  0044A2  5DED               	subwf	_actMotorPow& (0+255),w,b
 12001  0044A4  0EFE               	movlw	254
 12002  0044A6  59EE               	subwfb	(_actMotorPow+1)& (0+255),w,b
 12003  0044A8  B0D8               	btfsc	status,0,c
 12004  0044AA  EF59  F022         	goto	u10541
 12005  0044AE  EF5B  F022         	goto	u10540
 12006  0044B2                     u10541:
 12007  0044B2  EF5F  F022         	goto	l9319
 12008  0044B6                     u10540:
 12009  0044B6                     
 12010                           ; BSR set to: 0
 12011                           ;main.c: 354:         actMotorPow = (-400);
 12012  0044B6  0EFE               	movlw	254
 12013  0044B8  6FEE               	movwf	(_actMotorPow+1)& (0+255),b
 12014  0044BA  0E70               	movlw	112
 12015  0044BC  6FED               	movwf	_actMotorPow& (0+255),b
 12016  0044BE                     l9319:
 12017                           
 12018                           ; BSR set to: 0
 12019                           ;main.c: 357:     setMotor(actMotorPow);
 12020  0044BE  C0ED  F018         	movff	_actMotorPow,setMotor@motorPower
 12021  0044C2  C0EE  F019         	movff	_actMotorPow+1,setMotor@motorPower+1
 12022  0044C6  EC8F  F026         	call	_setMotor	;wreg free
 12023  0044CA                     
 12024                           ;main.c: 359:     oldSpeed = currentSpeed;
 12025  0044CA  C0EF  F12E         	movff	_currentSpeed,_oldSpeed
 12026  0044CE  C0F0  F12F         	movff	_currentSpeed+1,_oldSpeed+1
 12027  0044D2  0012               	return		;funcret
 12028  0044D4                     __end_of_calcMotorPow:
 12029                           	callstack 0
 12030                           
 12031 ;; *************** function _setMotor *****************
 12032 ;; Defined at:
 12033 ;;		line 362 in file "main.c"
 12034 ;; Parameters:    Size  Location     Type
 12035 ;;  motorPower      2   23[COMRAM] short 
 12036 ;; Auto vars:     Size  Location     Type
 12037 ;;		None
 12038 ;; Return value:  Size  Location     Type
 12039 ;;                  1    wreg      void 
 12040 ;; Registers used:
 12041 ;;		wreg, status,2, status,0, cstack
 12042 ;; Tracked objects:
 12043 ;;		On entry : 0/0
 12044 ;;		On exit  : 0/0
 12045 ;;		Unchanged: 0/0
 12046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12047 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12049 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12050 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12051 ;;Total ram usage:        4 bytes
 12052 ;; Hardware stack levels used: 1
 12053 ;; Hardware stack levels required when called: 9
 12054 ;; This function calls:
 12055 ;;		_PWM7_LoadDutyValue
 12056 ;;		_PWM8_LoadDutyValue
 12057 ;; This function is called by:
 12058 ;;		_loop
 12059 ;;		_startAccell
 12060 ;;		_calcMotorPow
 12061 ;; This function uses a non-reentrant model
 12062 ;;
 12063                           
 12064                           	psect	text45
 12065  004D1E                     __ptext45:
 12066                           	callstack 0
 12067  004D1E                     _setMotor:
 12068                           	callstack 19
 12069  004D1E                     
 12070                           ;main.c: 363:     if (motorPower > (100)) {
 12071  004D1E  BE19               	btfsc	(setMotor@motorPower+1)^0,7,c
 12072  004D20  EF9B  F026         	goto	u10171
 12073  004D24  5019               	movf	(setMotor@motorPower+1)^0,w,c
 12074  004D26  E109               	bnz	u10170
 12075  004D28  0E65               	movlw	101
 12076  004D2A  5C18               	subwf	setMotor@motorPower^0,w,c
 12077  004D2C  A0D8               	btfss	status,0,c
 12078  004D2E  EF9B  F026         	goto	u10171
 12079  004D32  EF9D  F026         	goto	u10170
 12080  004D36                     u10171:
 12081  004D36  EFBD  F026         	goto	l9039
 12082  004D3A                     u10170:
 12083  004D3A                     
 12084                           ;main.c: 364:         if (motorPower > (700)) {
 12085  004D3A  BE19               	btfsc	(setMotor@motorPower+1)^0,7,c
 12086  004D3C  EFA9  F026         	goto	u10181
 12087  004D40  0EBD               	movlw	189
 12088  004D42  5C18               	subwf	setMotor@motorPower^0,w,c
 12089  004D44  0E02               	movlw	2
 12090  004D46  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
 12091  004D48  A0D8               	btfss	status,0,c
 12092  004D4A  EFA9  F026         	goto	u10181
 12093  004D4E  EFAB  F026         	goto	u10180
 12094  004D52                     u10181:
 12095  004D52  EFAF  F026         	goto	l9035
 12096  004D56                     u10180:
 12097  004D56                     
 12098                           ;main.c: 365:             motorPower = (700);
 12099  004D56  0E02               	movlw	2
 12100  004D58  6E19               	movwf	(setMotor@motorPower+1)^0,c
 12101  004D5A  0EBC               	movlw	188
 12102  004D5C  6E18               	movwf	setMotor@motorPower^0,c
 12103  004D5E                     l9035:
 12104                           
 12105                           ;main.c: 367:         PWM7_LoadDutyValue((uint16_t) (motorPower));
 12106  004D5E  C018  F014         	movff	setMotor@motorPower,PWM7_LoadDutyValue@dutyValue
 12107  004D62  C019  F015         	movff	setMotor@motorPower+1,PWM7_LoadDutyValue@dutyValue+1
 12108  004D66  EC28  F02F         	call	_PWM7_LoadDutyValue	;wreg free
 12109  004D6A                     
 12110                           ;main.c: 368:         PWM8_LoadDutyValue(0);
 12111  004D6A  0E00               	movlw	0
 12112  004D6C  6E15               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
 12113  004D6E  0E00               	movlw	0
 12114  004D70  6E14               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
 12115  004D72  EC0E  F02F         	call	_PWM8_LoadDutyValue	;wreg free
 12116                           
 12117                           ;main.c: 369:     } else if (motorPower < -(100)) {
 12118  004D76  EFFF  F026         	goto	l1377
 12119  004D7A                     l9039:
 12120  004D7A  AE19               	btfss	(setMotor@motorPower+1)^0,7,c
 12121  004D7C  EFC9  F026         	goto	u10191
 12122  004D80  0E9C               	movlw	156
 12123  004D82  5C18               	subwf	setMotor@motorPower^0,w,c
 12124  004D84  0EFF               	movlw	255
 12125  004D86  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
 12126  004D88  B0D8               	btfsc	status,0,c
 12127  004D8A  EFC9  F026         	goto	u10191
 12128  004D8E  EFCB  F026         	goto	u10190
 12129  004D92                     u10191:
 12130  004D92  EFF3  F026         	goto	l9049
 12131  004D96                     u10190:
 12132  004D96                     
 12133                           ;main.c: 370:         if (motorPower < (-400)) {
 12134  004D96  AE19               	btfss	(setMotor@motorPower+1)^0,7,c
 12135  004D98  EFD7  F026         	goto	u10201
 12136  004D9C  0E70               	movlw	112
 12137  004D9E  5C18               	subwf	setMotor@motorPower^0,w,c
 12138  004DA0  0EFE               	movlw	254
 12139  004DA2  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
 12140  004DA4  B0D8               	btfsc	status,0,c
 12141  004DA6  EFD7  F026         	goto	u10201
 12142  004DAA  EFD9  F026         	goto	u10200
 12143  004DAE                     u10201:
 12144  004DAE  EFDD  F026         	goto	l9045
 12145  004DB2                     u10200:
 12146  004DB2                     
 12147                           ;main.c: 371:             motorPower = (-400);
 12148  004DB2  0EFE               	movlw	254
 12149  004DB4  6E19               	movwf	(setMotor@motorPower+1)^0,c
 12150  004DB6  0E70               	movlw	112
 12151  004DB8  6E18               	movwf	setMotor@motorPower^0,c
 12152  004DBA                     l9045:
 12153                           
 12154                           ;main.c: 373:         PWM7_LoadDutyValue(0);
 12155  004DBA  0E00               	movlw	0
 12156  004DBC  6E15               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
 12157  004DBE  0E00               	movlw	0
 12158  004DC0  6E14               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
 12159  004DC2  EC28  F02F         	call	_PWM7_LoadDutyValue	;wreg free
 12160  004DC6                     
 12161                           ;main.c: 374:         PWM8_LoadDutyValue((uint16_t) (-motorPower));
 12162  004DC6  C018  F01A         	movff	setMotor@motorPower,??_setMotor
 12163  004DCA  C019  F01B         	movff	setMotor@motorPower+1,??_setMotor+1
 12164  004DCE  1E1A               	comf	??_setMotor^0,f,c
 12165  004DD0  1E1B               	comf	(??_setMotor+1)^0,f,c
 12166  004DD2  4A1A               	infsnz	??_setMotor^0,f,c
 12167  004DD4  2A1B               	incf	(??_setMotor+1)^0,f,c
 12168  004DD6  C01A  F014         	movff	??_setMotor,PWM8_LoadDutyValue@dutyValue
 12169  004DDA  C01B  F015         	movff	??_setMotor+1,PWM8_LoadDutyValue@dutyValue+1
 12170  004DDE  EC0E  F02F         	call	_PWM8_LoadDutyValue	;wreg free
 12171                           
 12172                           ;main.c: 375:     } else {
 12173  004DE2  EFFF  F026         	goto	l1377
 12174  004DE6                     l9049:
 12175                           
 12176                           ;main.c: 376:         PWM7_LoadDutyValue(0);
 12177  004DE6  0E00               	movlw	0
 12178  004DE8  6E15               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
 12179  004DEA  0E00               	movlw	0
 12180  004DEC  6E14               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
 12181  004DEE  EC28  F02F         	call	_PWM7_LoadDutyValue	;wreg free
 12182                           
 12183                           ;main.c: 377:         PWM8_LoadDutyValue(0);
 12184  004DF2  0E00               	movlw	0
 12185  004DF4  6E15               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
 12186  004DF6  0E00               	movlw	0
 12187  004DF8  6E14               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
 12188  004DFA  EC0E  F02F         	call	_PWM8_LoadDutyValue	;wreg free
 12189  004DFE                     l1377:
 12190  004DFE  0012               	return		;funcret
 12191  004E00                     __end_of_setMotor:
 12192                           	callstack 0
 12193                           
 12194 ;; *************** function _PWM8_LoadDutyValue *****************
 12195 ;; Defined at:
 12196 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 12197 ;; Parameters:    Size  Location     Type
 12198 ;;  dutyValue       2   19[COMRAM] unsigned short 
 12199 ;; Auto vars:     Size  Location     Type
 12200 ;;		None
 12201 ;; Return value:  Size  Location     Type
 12202 ;;                  1    wreg      void 
 12203 ;; Registers used:
 12204 ;;		wreg, status,2, status,0
 12205 ;; Tracked objects:
 12206 ;;		On entry : 0/0
 12207 ;;		On exit  : 0/0
 12208 ;;		Unchanged: 0/0
 12209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12210 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12212 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12213 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12214 ;;Total ram usage:        4 bytes
 12215 ;; Hardware stack levels used: 1
 12216 ;; Hardware stack levels required when called: 8
 12217 ;; This function calls:
 12218 ;;		Nothing
 12219 ;; This function is called by:
 12220 ;;		_setMotor
 12221 ;; This function uses a non-reentrant model
 12222 ;;
 12223                           
 12224                           	psect	text46
 12225  005E1C                     __ptext46:
 12226                           	callstack 0
 12227  005E1C                     _PWM8_LoadDutyValue:
 12228                           	callstack 19
 12229  005E1C                     
 12230                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 12231  005E1C  C014  F016         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
 12232  005E20  C015  F017         	movff	PWM8_LoadDutyValue@dutyValue+1,??_PWM8_LoadDutyValue+1
 12233  005E24  90D8               	bcf	status,0,c
 12234  005E26  3217               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
 12235  005E28  3216               	rrcf	??_PWM8_LoadDutyValue^0,f,c
 12236  005E2A  90D8               	bcf	status,0,c
 12237  005E2C  3217               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
 12238  005E2E  3216               	rrcf	??_PWM8_LoadDutyValue^0,f,c
 12239  005E30  5016               	movf	??_PWM8_LoadDutyValue^0,w,c
 12240  005E32  6E61               	movwf	97,c	;volatile
 12241                           
 12242                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 12243  005E34  C014  F016         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
 12244  005E38  0E03               	movlw	3
 12245  005E3A  1616               	andwf	??_PWM8_LoadDutyValue^0,f,c
 12246  005E3C  0E06               	movlw	6
 12247  005E3E  6E17               	movwf	(??_PWM8_LoadDutyValue+1)^0,c
 12248  005E40                     u10045:
 12249  005E40  90D8               	bcf	status,0,c
 12250  005E42  3616               	rlcf	??_PWM8_LoadDutyValue^0,f,c
 12251  005E44  2E17               	decfsz	(??_PWM8_LoadDutyValue+1)^0,f,c
 12252  005E46  EF20  F02F         	goto	u10045
 12253  005E4A  5016               	movf	??_PWM8_LoadDutyValue^0,w,c
 12254  005E4C  6E60               	movwf	96,c	;volatile
 12255  005E4E  0012               	return		;funcret
 12256  005E50                     __end_of_PWM8_LoadDutyValue:
 12257                           	callstack 0
 12258                           
 12259 ;; *************** function _PWM7_LoadDutyValue *****************
 12260 ;; Defined at:
 12261 ;;		line 74 in file "mcc_generated_files/pwm7.c"
 12262 ;; Parameters:    Size  Location     Type
 12263 ;;  dutyValue       2   19[COMRAM] unsigned short 
 12264 ;; Auto vars:     Size  Location     Type
 12265 ;;		None
 12266 ;; Return value:  Size  Location     Type
 12267 ;;                  1    wreg      void 
 12268 ;; Registers used:
 12269 ;;		wreg, status,2, status,0
 12270 ;; Tracked objects:
 12271 ;;		On entry : 0/0
 12272 ;;		On exit  : 0/0
 12273 ;;		Unchanged: 0/0
 12274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12275 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12277 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12278 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12279 ;;Total ram usage:        4 bytes
 12280 ;; Hardware stack levels used: 1
 12281 ;; Hardware stack levels required when called: 8
 12282 ;; This function calls:
 12283 ;;		Nothing
 12284 ;; This function is called by:
 12285 ;;		_setMotor
 12286 ;; This function uses a non-reentrant model
 12287 ;;
 12288                           
 12289                           	psect	text47
 12290  005E50                     __ptext47:
 12291                           	callstack 0
 12292  005E50                     _PWM7_LoadDutyValue:
 12293                           	callstack 19
 12294  005E50                     
 12295                           ;mcc_generated_files/pwm7.c: 74:  void PWM7_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm7.c: 75:  {;mcc_generated_files/pwm7.c: 77:      PWM7DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 12296  005E50  C014  F016         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
 12297  005E54  C015  F017         	movff	PWM7_LoadDutyValue@dutyValue+1,??_PWM7_LoadDutyValue+1
 12298  005E58  90D8               	bcf	status,0,c
 12299  005E5A  3217               	rrcf	(??_PWM7_LoadDutyValue+1)^0,f,c
 12300  005E5C  3216               	rrcf	??_PWM7_LoadDutyValue^0,f,c
 12301  005E5E  90D8               	bcf	status,0,c
 12302  005E60  3217               	rrcf	(??_PWM7_LoadDutyValue+1)^0,f,c
 12303  005E62  3216               	rrcf	??_PWM7_LoadDutyValue^0,f,c
 12304  005E64  5016               	movf	??_PWM7_LoadDutyValue^0,w,c
 12305  005E66  6E65               	movwf	101,c	;volatile
 12306                           
 12307                           ;mcc_generated_files/pwm7.c: 80:      PWM7DCL = (dutyValue & 0x0003)<<6;
 12308  005E68  C014  F016         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
 12309  005E6C  0E03               	movlw	3
 12310  005E6E  1616               	andwf	??_PWM7_LoadDutyValue^0,f,c
 12311  005E70  0E06               	movlw	6
 12312  005E72  6E17               	movwf	(??_PWM7_LoadDutyValue+1)^0,c
 12313  005E74                     u10035:
 12314  005E74  90D8               	bcf	status,0,c
 12315  005E76  3616               	rlcf	??_PWM7_LoadDutyValue^0,f,c
 12316  005E78  2E17               	decfsz	(??_PWM7_LoadDutyValue+1)^0,f,c
 12317  005E7A  EF3A  F02F         	goto	u10035
 12318  005E7E  5016               	movf	??_PWM7_LoadDutyValue^0,w,c
 12319  005E80  6E64               	movwf	100,c	;volatile
 12320  005E82  0012               	return		;funcret
 12321  005E84                     __end_of_PWM7_LoadDutyValue:
 12322                           	callstack 0
 12323                           
 12324 ;; *************** function _actSpeed *****************
 12325 ;; Defined at:
 12326 ;;		line 73 in file "main.c"
 12327 ;; Parameters:    Size  Location     Type
 12328 ;;		None
 12329 ;; Auto vars:     Size  Location     Type
 12330 ;;  speed           2   35[COMRAM] short 
 12331 ;; Return value:  Size  Location     Type
 12332 ;;                  2   33[COMRAM] short 
 12333 ;; Registers used:
 12334 ;;		wreg, status,2, status,0, cstack
 12335 ;; Tracked objects:
 12336 ;;		On entry : 0/0
 12337 ;;		On exit  : 0/0
 12338 ;;		Unchanged: 0/0
 12339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12340 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12341 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12343 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12344 ;;Total ram usage:        4 bytes
 12345 ;; Hardware stack levels used: 1
 12346 ;; Hardware stack levels required when called: 9
 12347 ;; This function calls:
 12348 ;;		___aldiv
 12349 ;; This function is called by:
 12350 ;;		_calcMotorPow
 12351 ;; This function uses a non-reentrant model
 12352 ;;
 12353                           
 12354                           	psect	text48
 12355  0055D2                     __ptext48:
 12356                           	callstack 0
 12357  0055D2                     _actSpeed:
 12358                           	callstack 19
 12359  0055D2                     
 12360                           ;main.c: 74:     int16_t speed = 0;
 12361  0055D2  0E00               	movlw	0
 12362  0055D4  6E25               	movwf	(actSpeed@speed+1)^0,c
 12363  0055D6  0E00               	movlw	0
 12364  0055D8  6E24               	movwf	actSpeed@speed^0,c
 12365  0055DA                     
 12366                           ;main.c: 75:     if (smtPeriod) {
 12367  0055DA  5048               	movf	_smtPeriod^0,w,c	;volatile
 12368  0055DC  1049               	iorwf	(_smtPeriod+1)^0,w,c	;volatile
 12369  0055DE  104A               	iorwf	(_smtPeriod+2)^0,w,c	;volatile
 12370  0055E0  104B               	iorwf	(_smtPeriod+3)^0,w,c	;volatile
 12371  0055E2  B4D8               	btfsc	status,2,c
 12372  0055E4  EFF6  F02A         	goto	u6651
 12373  0055E8  EFF8  F02A         	goto	u6650
 12374  0055EC                     u6651:
 12375  0055EC  EF2E  F02B         	goto	l6767
 12376  0055F0                     u6650:
 12377  0055F0                     
 12378                           ;main.c: 76:         if (CLC3CONbits.LC3OUT) {
 12379  0055F0  013C               	movlb	60	; () banked
 12380  0055F2  AB60               	btfss	96,5,b	;volatile
 12381  0055F4  EFFE  F02A         	goto	u6661
 12382  0055F8  EF00  F02B         	goto	u6660
 12383  0055FC                     u6661:
 12384  0055FC  EF18  F02B         	goto	l6765
 12385  005600                     u6660:
 12386  005600                     
 12387                           ; BSR set to: 60
 12388                           ;main.c: 77:             speed = (int16_t) ((int32_t) (500000 / (int32_t) smtPeriod));
 12389  005600  0E20               	movlw	32
 12390  005602  6E14               	movwf	___aldiv@dividend^0,c
 12391  005604  0EA1               	movlw	161
 12392  005606  6E15               	movwf	(___aldiv@dividend+1)^0,c
 12393  005608  0E07               	movlw	7
 12394  00560A  6E16               	movwf	(___aldiv@dividend+2)^0,c
 12395  00560C  0E00               	movlw	0
 12396  00560E  6E17               	movwf	(___aldiv@dividend+3)^0,c
 12397  005610  C048  F018         	movff	_smtPeriod,___aldiv@divisor	;volatile
 12398  005614  C049  F019         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
 12399  005618  C04A  F01A         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
 12400  00561C  C04B  F01B         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
 12401  005620  EC91  F023         	call	___aldiv	;wreg free
 12402  005624  C014  F024         	movff	?___aldiv,actSpeed@speed
 12403  005628  C015  F025         	movff	?___aldiv+1,actSpeed@speed+1
 12404                           
 12405                           ;main.c: 78:         } else {
 12406  00562C  EF2E  F02B         	goto	l6767
 12407  005630                     l6765:
 12408                           
 12409                           ; BSR set to: 60
 12410                           ;main.c: 79:             speed = (int16_t) ((int32_t) (-500000 / (int32_t) smtPeriod));
 12411  005630  0EE0               	movlw	224
 12412  005632  6E14               	movwf	___aldiv@dividend^0,c
 12413  005634  0E5E               	movlw	94
 12414  005636  6E15               	movwf	(___aldiv@dividend+1)^0,c
 12415  005638  0EF8               	movlw	248
 12416  00563A  6E16               	movwf	(___aldiv@dividend+2)^0,c
 12417  00563C  0EFF               	movlw	255
 12418  00563E  6E17               	movwf	(___aldiv@dividend+3)^0,c
 12419  005640  C048  F018         	movff	_smtPeriod,___aldiv@divisor	;volatile
 12420  005644  C049  F019         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
 12421  005648  C04A  F01A         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
 12422  00564C  C04B  F01B         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
 12423  005650  EC91  F023         	call	___aldiv	;wreg free
 12424  005654  C014  F024         	movff	?___aldiv,actSpeed@speed
 12425  005658  C015  F025         	movff	?___aldiv+1,actSpeed@speed+1
 12426  00565C                     l6767:
 12427                           
 12428                           ;main.c: 82:     return speed;
 12429  00565C  C024  F022         	movff	actSpeed@speed,?_actSpeed
 12430  005660  C025  F023         	movff	actSpeed@speed+1,?_actSpeed+1
 12431  005664  0012               	return		;funcret
 12432  005666                     __end_of_actSpeed:
 12433                           	callstack 0
 12434                           
 12435 ;; *************** function ___aldiv *****************
 12436 ;; Defined at:
 12437 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aldiv.c"
 12438 ;; Parameters:    Size  Location     Type
 12439 ;;  dividend        4   19[COMRAM] long 
 12440 ;;  divisor         4   23[COMRAM] long 
 12441 ;; Auto vars:     Size  Location     Type
 12442 ;;  quotient        4   29[COMRAM] long 
 12443 ;;  sign            1   28[COMRAM] unsigned char 
 12444 ;;  counter         1   27[COMRAM] unsigned char 
 12445 ;; Return value:  Size  Location     Type
 12446 ;;                  4   19[COMRAM] long 
 12447 ;; Registers used:
 12448 ;;		wreg, status,2, status,0
 12449 ;; Tracked objects:
 12450 ;;		On entry : 0/0
 12451 ;;		On exit  : 0/0
 12452 ;;		Unchanged: 0/0
 12453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12454 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12455 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12457 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12458 ;;Total ram usage:       14 bytes
 12459 ;; Hardware stack levels used: 1
 12460 ;; Hardware stack levels required when called: 8
 12461 ;; This function calls:
 12462 ;;		Nothing
 12463 ;; This function is called by:
 12464 ;;		_actSpeed
 12465 ;; This function uses a non-reentrant model
 12466 ;;
 12467                           
 12468                           	psect	text49
 12469  004722                     __ptext49:
 12470                           	callstack 0
 12471  004722                     ___aldiv:
 12472                           	callstack 19
 12473  004722  0E00               	movlw	0
 12474  004724  6E1D               	movwf	___aldiv@sign^0,c
 12475  004726  BE1B               	btfsc	(___aldiv@divisor+3)^0,7,c
 12476  004728  EF9A  F023         	goto	u6390
 12477  00472C  EF98  F023         	goto	u6391
 12478  004730                     u6391:
 12479  004730  EFA4  F023         	goto	l6565
 12480  004734                     u6390:
 12481  004734  1E1B               	comf	(___aldiv@divisor+3)^0,f,c
 12482  004736  1E1A               	comf	(___aldiv@divisor+2)^0,f,c
 12483  004738  1E19               	comf	(___aldiv@divisor+1)^0,f,c
 12484  00473A  6C18               	negf	___aldiv@divisor^0,c
 12485  00473C  0E00               	movlw	0
 12486  00473E  2219               	addwfc	(___aldiv@divisor+1)^0,f,c
 12487  004740  221A               	addwfc	(___aldiv@divisor+2)^0,f,c
 12488  004742  221B               	addwfc	(___aldiv@divisor+3)^0,f,c
 12489  004744  0E01               	movlw	1
 12490  004746  6E1D               	movwf	___aldiv@sign^0,c
 12491  004748                     l6565:
 12492  004748  BE17               	btfsc	(___aldiv@dividend+3)^0,7,c
 12493  00474A  EFAB  F023         	goto	u6400
 12494  00474E  EFA9  F023         	goto	u6401
 12495  004752                     u6401:
 12496  004752  EFB5  F023         	goto	l6571
 12497  004756                     u6400:
 12498  004756  1E17               	comf	(___aldiv@dividend+3)^0,f,c
 12499  004758  1E16               	comf	(___aldiv@dividend+2)^0,f,c
 12500  00475A  1E15               	comf	(___aldiv@dividend+1)^0,f,c
 12501  00475C  6C14               	negf	___aldiv@dividend^0,c
 12502  00475E  0E00               	movlw	0
 12503  004760  2215               	addwfc	(___aldiv@dividend+1)^0,f,c
 12504  004762  2216               	addwfc	(___aldiv@dividend+2)^0,f,c
 12505  004764  2217               	addwfc	(___aldiv@dividend+3)^0,f,c
 12506  004766  0E01               	movlw	1
 12507  004768  1A1D               	xorwf	___aldiv@sign^0,f,c
 12508  00476A                     l6571:
 12509  00476A  0E00               	movlw	0
 12510  00476C  6E1E               	movwf	___aldiv@quotient^0,c
 12511  00476E  0E00               	movlw	0
 12512  004770  6E1F               	movwf	(___aldiv@quotient+1)^0,c
 12513  004772  0E00               	movlw	0
 12514  004774  6E20               	movwf	(___aldiv@quotient+2)^0,c
 12515  004776  0E00               	movlw	0
 12516  004778  6E21               	movwf	(___aldiv@quotient+3)^0,c
 12517  00477A  5018               	movf	___aldiv@divisor^0,w,c
 12518  00477C  1019               	iorwf	(___aldiv@divisor+1)^0,w,c
 12519  00477E  101A               	iorwf	(___aldiv@divisor+2)^0,w,c
 12520  004780  101B               	iorwf	(___aldiv@divisor+3)^0,w,c
 12521  004782  B4D8               	btfsc	status,2,c
 12522  004784  EFC6  F023         	goto	u6411
 12523  004788  EFC8  F023         	goto	u6410
 12524  00478C                     u6411:
 12525  00478C  EFFE  F023         	goto	l6593
 12526  004790                     u6410:
 12527  004790  0E01               	movlw	1
 12528  004792  6E1C               	movwf	___aldiv@counter^0,c
 12529  004794  EFD2  F023         	goto	l6579
 12530  004798                     l6577:
 12531  004798  90D8               	bcf	status,0,c
 12532  00479A  3618               	rlcf	___aldiv@divisor^0,f,c
 12533  00479C  3619               	rlcf	(___aldiv@divisor+1)^0,f,c
 12534  00479E  361A               	rlcf	(___aldiv@divisor+2)^0,f,c
 12535  0047A0  361B               	rlcf	(___aldiv@divisor+3)^0,f,c
 12536  0047A2  2A1C               	incf	___aldiv@counter^0,f,c
 12537  0047A4                     l6579:
 12538  0047A4  AE1B               	btfss	(___aldiv@divisor+3)^0,7,c
 12539  0047A6  EFD7  F023         	goto	u6421
 12540  0047AA  EFD9  F023         	goto	u6420
 12541  0047AE                     u6421:
 12542  0047AE  EFCC  F023         	goto	l6577
 12543  0047B2                     u6420:
 12544  0047B2                     l6581:
 12545  0047B2  90D8               	bcf	status,0,c
 12546  0047B4  361E               	rlcf	___aldiv@quotient^0,f,c
 12547  0047B6  361F               	rlcf	(___aldiv@quotient+1)^0,f,c
 12548  0047B8  3620               	rlcf	(___aldiv@quotient+2)^0,f,c
 12549  0047BA  3621               	rlcf	(___aldiv@quotient+3)^0,f,c
 12550  0047BC  5018               	movf	___aldiv@divisor^0,w,c
 12551  0047BE  5C14               	subwf	___aldiv@dividend^0,w,c
 12552  0047C0  5019               	movf	(___aldiv@divisor+1)^0,w,c
 12553  0047C2  5815               	subwfb	(___aldiv@dividend+1)^0,w,c
 12554  0047C4  501A               	movf	(___aldiv@divisor+2)^0,w,c
 12555  0047C6  5816               	subwfb	(___aldiv@dividend+2)^0,w,c
 12556  0047C8  501B               	movf	(___aldiv@divisor+3)^0,w,c
 12557  0047CA  5817               	subwfb	(___aldiv@dividend+3)^0,w,c
 12558  0047CC  A0D8               	btfss	status,0,c
 12559  0047CE  EFEB  F023         	goto	u6431
 12560  0047D2  EFED  F023         	goto	u6430
 12561  0047D6                     u6431:
 12562  0047D6  EFF6  F023         	goto	l6589
 12563  0047DA                     u6430:
 12564  0047DA  5018               	movf	___aldiv@divisor^0,w,c
 12565  0047DC  5E14               	subwf	___aldiv@dividend^0,f,c
 12566  0047DE  5019               	movf	(___aldiv@divisor+1)^0,w,c
 12567  0047E0  5A15               	subwfb	(___aldiv@dividend+1)^0,f,c
 12568  0047E2  501A               	movf	(___aldiv@divisor+2)^0,w,c
 12569  0047E4  5A16               	subwfb	(___aldiv@dividend+2)^0,f,c
 12570  0047E6  501B               	movf	(___aldiv@divisor+3)^0,w,c
 12571  0047E8  5A17               	subwfb	(___aldiv@dividend+3)^0,f,c
 12572  0047EA  801E               	bsf	___aldiv@quotient^0,0,c
 12573  0047EC                     l6589:
 12574  0047EC  90D8               	bcf	status,0,c
 12575  0047EE  321B               	rrcf	(___aldiv@divisor+3)^0,f,c
 12576  0047F0  321A               	rrcf	(___aldiv@divisor+2)^0,f,c
 12577  0047F2  3219               	rrcf	(___aldiv@divisor+1)^0,f,c
 12578  0047F4  3218               	rrcf	___aldiv@divisor^0,f,c
 12579  0047F6  2E1C               	decfsz	___aldiv@counter^0,f,c
 12580  0047F8  EFD9  F023         	goto	l6581
 12581  0047FC                     l6593:
 12582  0047FC  501D               	movf	___aldiv@sign^0,w,c
 12583  0047FE  B4D8               	btfsc	status,2,c
 12584  004800  EF04  F024         	goto	u6441
 12585  004804  EF06  F024         	goto	u6440
 12586  004808                     u6441:
 12587  004808  EF0E  F024         	goto	l6597
 12588  00480C                     u6440:
 12589  00480C  1E21               	comf	(___aldiv@quotient+3)^0,f,c
 12590  00480E  1E20               	comf	(___aldiv@quotient+2)^0,f,c
 12591  004810  1E1F               	comf	(___aldiv@quotient+1)^0,f,c
 12592  004812  6C1E               	negf	___aldiv@quotient^0,c
 12593  004814  0E00               	movlw	0
 12594  004816  221F               	addwfc	(___aldiv@quotient+1)^0,f,c
 12595  004818  2220               	addwfc	(___aldiv@quotient+2)^0,f,c
 12596  00481A  2221               	addwfc	(___aldiv@quotient+3)^0,f,c
 12597  00481C                     l6597:
 12598  00481C  C01E  F014         	movff	___aldiv@quotient,?___aldiv
 12599  004820  C01F  F015         	movff	___aldiv@quotient+1,?___aldiv+1
 12600  004824  C020  F016         	movff	___aldiv@quotient+2,?___aldiv+2
 12601  004828  C021  F017         	movff	___aldiv@quotient+3,?___aldiv+3
 12602  00482C  0012               	return		;funcret
 12603  00482E                     __end_of___aldiv:
 12604                           	callstack 0
 12605                           
 12606 ;; *************** function ___xxtofl *****************
 12607 ;; Defined at:
 12608 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
 12609 ;; Parameters:    Size  Location     Type
 12610 ;;  sign            1    wreg     unsigned char 
 12611 ;;  val             4   27[COMRAM] long 
 12612 ;; Auto vars:     Size  Location     Type
 12613 ;;  sign            1   35[COMRAM] unsigned char 
 12614 ;;  arg             4   37[COMRAM] unsigned long 
 12615 ;;  exp             1   36[COMRAM] unsigned char 
 12616 ;; Return value:  Size  Location     Type
 12617 ;;                  4   27[COMRAM] unsigned char 
 12618 ;; Registers used:
 12619 ;;		wreg, status,2, status,0
 12620 ;; Tracked objects:
 12621 ;;		On entry : 0/0
 12622 ;;		On exit  : 0/0
 12623 ;;		Unchanged: 0/0
 12624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12625 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12626 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12627 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12628 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12629 ;;Total ram usage:       14 bytes
 12630 ;; Hardware stack levels used: 1
 12631 ;; Hardware stack levels required when called: 8
 12632 ;; This function calls:
 12633 ;;		Nothing
 12634 ;; This function is called by:
 12635 ;;		_loop
 12636 ;;		_checkBatt
 12637 ;;		_checkCurveCount
 12638 ;;		_calcSteering
 12639 ;;		_calcSpeed
 12640 ;;		_calcMotorPow
 12641 ;;		_setSteering
 12642 ;; This function uses a non-reentrant model
 12643 ;;
 12644                           
 12645                           	psect	text50
 12646  003EE4                     __ptext50:
 12647                           	callstack 0
 12648  003EE4                     ___xxtofl:
 12649                           	callstack 19
 12650                           
 12651                           ;incstack = 0
 12652                           ;___xxtofl@sign stored from wreg
 12653  003EE4  6E24               	movwf	___xxtofl@sign^0,c
 12654  003EE6  5024               	movf	___xxtofl@sign^0,w,c
 12655  003EE8  B4D8               	btfsc	status,2,c
 12656  003EEA  EF79  F01F         	goto	u10071
 12657  003EEE  EF7B  F01F         	goto	u10070
 12658  003EF2                     u10071:
 12659  003EF2  EF9D  F01F         	goto	l2052
 12660  003EF6                     u10070:
 12661  003EF6  BE1F               	btfsc	(___xxtofl@val+3)^0,7,c
 12662  003EF8  EF82  F01F         	goto	u10080
 12663  003EFC  EF80  F01F         	goto	u10081
 12664  003F00                     u10081:
 12665  003F00  EF9D  F01F         	goto	l2052
 12666  003F04                     u10080:
 12667  003F04  C01C  F020         	movff	___xxtofl@val,??___xxtofl
 12668  003F08  C01D  F021         	movff	___xxtofl@val+1,??___xxtofl+1
 12669  003F0C  C01E  F022         	movff	___xxtofl@val+2,??___xxtofl+2
 12670  003F10  C01F  F023         	movff	___xxtofl@val+3,??___xxtofl+3
 12671  003F14  1E20               	comf	??___xxtofl^0,f,c
 12672  003F16  1E21               	comf	(??___xxtofl+1)^0,f,c
 12673  003F18  1E22               	comf	(??___xxtofl+2)^0,f,c
 12674  003F1A  1E23               	comf	(??___xxtofl+3)^0,f,c
 12675  003F1C  2A20               	incf	??___xxtofl^0,f,c
 12676  003F1E  0E00               	movlw	0
 12677  003F20  2221               	addwfc	(??___xxtofl+1)^0,f,c
 12678  003F22  2222               	addwfc	(??___xxtofl+2)^0,f,c
 12679  003F24  2223               	addwfc	(??___xxtofl+3)^0,f,c
 12680  003F26  C020  F026         	movff	??___xxtofl,___xxtofl@arg
 12681  003F2A  C021  F027         	movff	??___xxtofl+1,___xxtofl@arg+1
 12682  003F2E  C022  F028         	movff	??___xxtofl+2,___xxtofl@arg+2
 12683  003F32  C023  F029         	movff	??___xxtofl+3,___xxtofl@arg+3
 12684  003F36  EFA5  F01F         	goto	l8989
 12685  003F3A                     l2052:
 12686  003F3A  C01C  F026         	movff	___xxtofl@val,___xxtofl@arg
 12687  003F3E  C01D  F027         	movff	___xxtofl@val+1,___xxtofl@arg+1
 12688  003F42  C01E  F028         	movff	___xxtofl@val+2,___xxtofl@arg+2
 12689  003F46  C01F  F029         	movff	___xxtofl@val+3,___xxtofl@arg+3
 12690  003F4A                     l8989:
 12691  003F4A  501C               	movf	___xxtofl@val^0,w,c
 12692  003F4C  101D               	iorwf	(___xxtofl@val+1)^0,w,c
 12693  003F4E  101E               	iorwf	(___xxtofl@val+2)^0,w,c
 12694  003F50  101F               	iorwf	(___xxtofl@val+3)^0,w,c
 12695  003F52  A4D8               	btfss	status,2,c
 12696  003F54  EFAE  F01F         	goto	u10091
 12697  003F58  EFB0  F01F         	goto	u10090
 12698  003F5C                     u10091:
 12699  003F5C  EFBA  F01F         	goto	l8995
 12700  003F60                     u10090:
 12701  003F60  0E00               	movlw	0
 12702  003F62  6E1C               	movwf	?___xxtofl^0,c
 12703  003F64  0E00               	movlw	0
 12704  003F66  6E1D               	movwf	(?___xxtofl+1)^0,c
 12705  003F68  0E00               	movlw	0
 12706  003F6A  6E1E               	movwf	(?___xxtofl+2)^0,c
 12707  003F6C  0E00               	movlw	0
 12708  003F6E  6E1F               	movwf	(?___xxtofl+3)^0,c
 12709  003F70  EF4B  F020         	goto	l2055
 12710  003F74                     l8995:
 12711  003F74  0E96               	movlw	150
 12712  003F76  6E25               	movwf	___xxtofl@exp^0,c
 12713  003F78  EFC4  F01F         	goto	l8999
 12714  003F7C                     l8997:
 12715  003F7C  2A25               	incf	___xxtofl@exp^0,f,c
 12716  003F7E  90D8               	bcf	status,0,c
 12717  003F80  3229               	rrcf	(___xxtofl@arg+3)^0,f,c
 12718  003F82  3228               	rrcf	(___xxtofl@arg+2)^0,f,c
 12719  003F84  3227               	rrcf	(___xxtofl@arg+1)^0,f,c
 12720  003F86  3226               	rrcf	___xxtofl@arg^0,f,c
 12721  003F88                     l8999:
 12722  003F88  0E00               	movlw	0
 12723  003F8A  1426               	andwf	___xxtofl@arg^0,w,c
 12724  003F8C  6E20               	movwf	??___xxtofl^0,c
 12725  003F8E  0E00               	movlw	0
 12726  003F90  1427               	andwf	(___xxtofl@arg+1)^0,w,c
 12727  003F92  6E21               	movwf	(??___xxtofl+1)^0,c
 12728  003F94  0E00               	movlw	0
 12729  003F96  1428               	andwf	(___xxtofl@arg+2)^0,w,c
 12730  003F98  6E22               	movwf	(??___xxtofl+2)^0,c
 12731  003F9A  0EFE               	movlw	254
 12732  003F9C  1429               	andwf	(___xxtofl@arg+3)^0,w,c
 12733  003F9E  6E23               	movwf	(??___xxtofl+3)^0,c
 12734  003FA0  5020               	movf	??___xxtofl^0,w,c
 12735  003FA2  1021               	iorwf	(??___xxtofl+1)^0,w,c
 12736  003FA4  1022               	iorwf	(??___xxtofl+2)^0,w,c
 12737  003FA6  1023               	iorwf	(??___xxtofl+3)^0,w,c
 12738  003FA8  A4D8               	btfss	status,2,c
 12739  003FAA  EFD9  F01F         	goto	u10101
 12740  003FAE  EFDB  F01F         	goto	u10100
 12741  003FB2                     u10101:
 12742  003FB2  EFBE  F01F         	goto	l8997
 12743  003FB6                     u10100:
 12744  003FB6  EFE9  F01F         	goto	l2059
 12745  003FBA                     l9001:
 12746  003FBA  2A25               	incf	___xxtofl@exp^0,f,c
 12747  003FBC  0E01               	movlw	1
 12748  003FBE  2626               	addwf	___xxtofl@arg^0,f,c
 12749  003FC0  0E00               	movlw	0
 12750  003FC2  2227               	addwfc	(___xxtofl@arg+1)^0,f,c
 12751  003FC4  2228               	addwfc	(___xxtofl@arg+2)^0,f,c
 12752  003FC6  2229               	addwfc	(___xxtofl@arg+3)^0,f,c
 12753  003FC8  90D8               	bcf	status,0,c
 12754  003FCA  3229               	rrcf	(___xxtofl@arg+3)^0,f,c
 12755  003FCC  3228               	rrcf	(___xxtofl@arg+2)^0,f,c
 12756  003FCE  3227               	rrcf	(___xxtofl@arg+1)^0,f,c
 12757  003FD0  3226               	rrcf	___xxtofl@arg^0,f,c
 12758  003FD2                     l2059:
 12759  003FD2  0E00               	movlw	0
 12760  003FD4  1426               	andwf	___xxtofl@arg^0,w,c
 12761  003FD6  6E20               	movwf	??___xxtofl^0,c
 12762  003FD8  0E00               	movlw	0
 12763  003FDA  1427               	andwf	(___xxtofl@arg+1)^0,w,c
 12764  003FDC  6E21               	movwf	(??___xxtofl+1)^0,c
 12765  003FDE  0E00               	movlw	0
 12766  003FE0  1428               	andwf	(___xxtofl@arg+2)^0,w,c
 12767  003FE2  6E22               	movwf	(??___xxtofl+2)^0,c
 12768  003FE4  0EFF               	movlw	255
 12769  003FE6  1429               	andwf	(___xxtofl@arg+3)^0,w,c
 12770  003FE8  6E23               	movwf	(??___xxtofl+3)^0,c
 12771  003FEA  5020               	movf	??___xxtofl^0,w,c
 12772  003FEC  1021               	iorwf	(??___xxtofl+1)^0,w,c
 12773  003FEE  1022               	iorwf	(??___xxtofl+2)^0,w,c
 12774  003FF0  1023               	iorwf	(??___xxtofl+3)^0,w,c
 12775  003FF2  A4D8               	btfss	status,2,c
 12776  003FF4  EFFE  F01F         	goto	u10111
 12777  003FF8  EF00  F020         	goto	u10110
 12778  003FFC                     u10111:
 12779  003FFC  EFDD  F01F         	goto	l9001
 12780  004000                     u10110:
 12781  004000  EF08  F020         	goto	l9009
 12782  004004                     l9007:
 12783  004004  0625               	decf	___xxtofl@exp^0,f,c
 12784  004006  90D8               	bcf	status,0,c
 12785  004008  3626               	rlcf	___xxtofl@arg^0,f,c
 12786  00400A  3627               	rlcf	(___xxtofl@arg+1)^0,f,c
 12787  00400C  3628               	rlcf	(___xxtofl@arg+2)^0,f,c
 12788  00400E  3629               	rlcf	(___xxtofl@arg+3)^0,f,c
 12789  004010                     l9009:
 12790  004010  BE28               	btfsc	(___xxtofl@arg+2)^0,7,c
 12791  004012  EF0D  F020         	goto	u10121
 12792  004016  EF0F  F020         	goto	u10120
 12793  00401A                     u10121:
 12794  00401A  EF17  F020         	goto	l2066
 12795  00401E                     u10120:
 12796  00401E  0E02               	movlw	2
 12797  004020  6025               	cpfslt	___xxtofl@exp^0,c
 12798  004022  EF15  F020         	goto	u10131
 12799  004026  EF17  F020         	goto	u10130
 12800  00402A                     u10131:
 12801  00402A  EF02  F020         	goto	l9007
 12802  00402E                     u10130:
 12803  00402E                     l2066:
 12804  00402E  B025               	btfsc	___xxtofl@exp^0,0,c
 12805  004030  EF1C  F020         	goto	u10141
 12806  004034  EF1E  F020         	goto	u10140
 12807  004038                     u10141:
 12808  004038  EF1F  F020         	goto	l9015
 12809  00403C                     u10140:
 12810  00403C  9E28               	bcf	(___xxtofl@arg+2)^0,7,c
 12811  00403E                     l9015:
 12812  00403E  90D8               	bcf	status,0,c
 12813  004040  3225               	rrcf	___xxtofl@exp^0,f,c
 12814  004042  C025  F020         	movff	___xxtofl@exp,??___xxtofl
 12815  004046  6A21               	clrf	(??___xxtofl+1)^0,c
 12816  004048  6A22               	clrf	(??___xxtofl+2)^0,c
 12817  00404A  6A23               	clrf	(??___xxtofl+3)^0,c
 12818  00404C  C020  F023         	movff	??___xxtofl,??___xxtofl+3
 12819  004050  6A22               	clrf	(??___xxtofl+2)^0,c
 12820  004052  6A21               	clrf	(??___xxtofl+1)^0,c
 12821  004054  6A20               	clrf	??___xxtofl^0,c
 12822  004056  5020               	movf	??___xxtofl^0,w,c
 12823  004058  1226               	iorwf	___xxtofl@arg^0,f,c
 12824  00405A  5021               	movf	(??___xxtofl+1)^0,w,c
 12825  00405C  1227               	iorwf	(___xxtofl@arg+1)^0,f,c
 12826  00405E  5022               	movf	(??___xxtofl+2)^0,w,c
 12827  004060  1228               	iorwf	(___xxtofl@arg+2)^0,f,c
 12828  004062  5023               	movf	(??___xxtofl+3)^0,w,c
 12829  004064  1229               	iorwf	(___xxtofl@arg+3)^0,f,c
 12830  004066  5024               	movf	___xxtofl@sign^0,w,c
 12831  004068  B4D8               	btfsc	status,2,c
 12832  00406A  EF39  F020         	goto	u10151
 12833  00406E  EF3B  F020         	goto	u10150
 12834  004072                     u10151:
 12835  004072  EF43  F020         	goto	l9025
 12836  004076                     u10150:
 12837  004076  BE1F               	btfsc	(___xxtofl@val+3)^0,7,c
 12838  004078  EF42  F020         	goto	u10160
 12839  00407C  EF40  F020         	goto	u10161
 12840  004080                     u10161:
 12841  004080  EF43  F020         	goto	l9025
 12842  004084                     u10160:
 12843  004084  8E29               	bsf	(___xxtofl@arg+3)^0,7,c
 12844  004086                     l9025:
 12845  004086  C026  F01C         	movff	___xxtofl@arg,?___xxtofl
 12846  00408A  C027  F01D         	movff	___xxtofl@arg+1,?___xxtofl+1
 12847  00408E  C028  F01E         	movff	___xxtofl@arg+2,?___xxtofl+2
 12848  004092  C029  F01F         	movff	___xxtofl@arg+3,?___xxtofl+3
 12849  004096                     l2055:
 12850  004096  0012               	return		;funcret
 12851  004098                     __end_of___xxtofl:
 12852                           	callstack 0
 12853                           
 12854 ;; *************** function ___fltol *****************
 12855 ;; Defined at:
 12856 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
 12857 ;; Parameters:    Size  Location     Type
 12858 ;;  f1              4   25[BANK0 ] unsigned char 
 12859 ;; Auto vars:     Size  Location     Type
 12860 ;;  exp1            1   34[BANK0 ] unsigned char 
 12861 ;;  sign1           1   33[BANK0 ] unsigned char 
 12862 ;; Return value:  Size  Location     Type
 12863 ;;                  4   25[BANK0 ] long 
 12864 ;; Registers used:
 12865 ;;		wreg, status,2, status,0
 12866 ;; Tracked objects:
 12867 ;;		On entry : 0/0
 12868 ;;		On exit  : 0/0
 12869 ;;		Unchanged: 0/0
 12870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12871 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12872 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12873 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12874 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12875 ;;Total ram usage:       10 bytes
 12876 ;; Hardware stack levels used: 1
 12877 ;; Hardware stack levels required when called: 8
 12878 ;; This function calls:
 12879 ;;		Nothing
 12880 ;; This function is called by:
 12881 ;;		_calcSteering
 12882 ;;		_calcSpeed
 12883 ;;		_calcMotorPow
 12884 ;;		_setSteering
 12885 ;;		_efgtoa
 12886 ;; This function uses a non-reentrant model
 12887 ;;
 12888                           
 12889                           	psect	text51
 12890  00482E                     __ptext51:
 12891                           	callstack 0
 12892  00482E                     ___fltol:
 12893                           	callstack 19
 12894  00482E  0100               	movlb	0	; () banked
 12895  004830  357B               	rlcf	(___fltol@f1+2)& (0+255),w,b
 12896  004832  357C               	rlcf	(___fltol@f1+3)& (0+255),w,b
 12897  004834  6F82               	movwf	___fltol@exp1& (0+255),b
 12898  004836  5182               	movf	___fltol@exp1& (0+255),w,b
 12899  004838  A4D8               	btfss	status,2,c
 12900  00483A  EF21  F024         	goto	u8681
 12901  00483E  EF23  F024         	goto	u8680
 12902  004842                     u8681:
 12903  004842  EF2D  F024         	goto	l8281
 12904  004846                     u8680:
 12905  004846                     l8277:
 12906                           
 12907                           ; BSR set to: 0
 12908  004846  0E00               	movlw	0
 12909  004848  6F79               	movwf	?___fltol& (0+255),b
 12910  00484A  0E00               	movlw	0
 12911  00484C  6F7A               	movwf	(?___fltol+1)& (0+255),b
 12912  00484E  0E00               	movlw	0
 12913  004850  6F7B               	movwf	(?___fltol+2)& (0+255),b
 12914  004852  0E00               	movlw	0
 12915  004854  6F7C               	movwf	(?___fltol+3)& (0+255),b
 12916  004856  EF9A  F024         	goto	l1694
 12917  00485A                     l8281:
 12918                           
 12919                           ; BSR set to: 0
 12920  00485A  C079  F07D         	movff	___fltol@f1,??___fltol
 12921  00485E  C07A  F07E         	movff	___fltol@f1+1,??___fltol+1
 12922  004862  C07B  F07F         	movff	___fltol@f1+2,??___fltol+2
 12923  004866  C07C  F080         	movff	___fltol@f1+3,??___fltol+3
 12924  00486A  0E20               	movlw	32
 12925  00486C  EF3D  F024         	goto	u8690
 12926  004870                     u8695:
 12927  004870  90D8               	bcf	status,0,c
 12928  004872  3380               	rrcf	(??___fltol+3)& (0+255),f,b
 12929  004874  337F               	rrcf	(??___fltol+2)& (0+255),f,b
 12930  004876  337E               	rrcf	(??___fltol+1)& (0+255),f,b
 12931  004878  337D               	rrcf	??___fltol& (0+255),f,b
 12932  00487A                     u8690:
 12933  00487A  2EE8               	decfsz	wreg,f,c
 12934  00487C  EF38  F024         	goto	u8695
 12935  004880  517D               	movf	??___fltol& (0+255),w,b
 12936  004882  6F81               	movwf	___fltol@sign1& (0+255),b
 12937  004884                     
 12938                           ; BSR set to: 0
 12939  004884  8F7B               	bsf	(___fltol@f1+2)& (0+255),7,b
 12940  004886                     
 12941                           ; BSR set to: 0
 12942  004886  0EFF               	movlw	255
 12943  004888  1779               	andwf	___fltol@f1& (0+255),f,b
 12944  00488A  0EFF               	movlw	255
 12945  00488C  177A               	andwf	(___fltol@f1+1)& (0+255),f,b
 12946  00488E  0EFF               	movlw	255
 12947  004890  177B               	andwf	(___fltol@f1+2)& (0+255),f,b
 12948  004892  0E00               	movlw	0
 12949  004894  177C               	andwf	(___fltol@f1+3)& (0+255),f,b
 12950  004896                     
 12951                           ; BSR set to: 0
 12952  004896  0E96               	movlw	150
 12953  004898  5F82               	subwf	___fltol@exp1& (0+255),f,b
 12954  00489A                     
 12955                           ; BSR set to: 0
 12956  00489A  BF82               	btfsc	___fltol@exp1& (0+255),7,b
 12957  00489C  EF54  F024         	goto	u8700
 12958  0048A0  EF52  F024         	goto	u8701
 12959  0048A4                     u8701:
 12960  0048A4  EF6A  F024         	goto	l8301
 12961  0048A8                     u8700:
 12962  0048A8                     
 12963                           ; BSR set to: 0
 12964  0048A8  5182               	movf	___fltol@exp1& (0+255),w,b
 12965  0048AA  0A80               	xorlw	128
 12966  0048AC  0F97               	addlw	151
 12967  0048AE  B0D8               	btfsc	status,0,c
 12968  0048B0  EF5C  F024         	goto	u8711
 12969  0048B4  EF5E  F024         	goto	u8710
 12970  0048B8                     u8711:
 12971  0048B8  EF60  F024         	goto	l8297
 12972  0048BC                     u8710:
 12973  0048BC  EF23  F024         	goto	l8277
 12974  0048C0                     l8297:
 12975                           
 12976                           ; BSR set to: 0
 12977  0048C0  90D8               	bcf	status,0,c
 12978  0048C2  337C               	rrcf	(___fltol@f1+3)& (0+255),f,b
 12979  0048C4  337B               	rrcf	(___fltol@f1+2)& (0+255),f,b
 12980  0048C6  337A               	rrcf	(___fltol@f1+1)& (0+255),f,b
 12981  0048C8  3379               	rrcf	___fltol@f1& (0+255),f,b
 12982  0048CA                     
 12983                           ; BSR set to: 0
 12984  0048CA  3F82               	incfsz	___fltol@exp1& (0+255),f,b
 12985  0048CC  EF60  F024         	goto	l8297
 12986  0048D0  EF82  F024         	goto	l8311
 12987  0048D4                     l8301:
 12988                           
 12989                           ; BSR set to: 0
 12990  0048D4  0E1F               	movlw	31
 12991  0048D6  6582               	cpfsgt	___fltol@exp1& (0+255),b
 12992  0048D8  EF70  F024         	goto	u8721
 12993  0048DC  EF72  F024         	goto	u8720
 12994  0048E0                     u8721:
 12995  0048E0  EF7A  F024         	goto	l8309
 12996  0048E4                     u8720:
 12997  0048E4  EF23  F024         	goto	l8277
 12998  0048E8                     l8307:
 12999                           
 13000                           ; BSR set to: 0
 13001  0048E8  90D8               	bcf	status,0,c
 13002  0048EA  3779               	rlcf	___fltol@f1& (0+255),f,b
 13003  0048EC  377A               	rlcf	(___fltol@f1+1)& (0+255),f,b
 13004  0048EE  377B               	rlcf	(___fltol@f1+2)& (0+255),f,b
 13005  0048F0  377C               	rlcf	(___fltol@f1+3)& (0+255),f,b
 13006  0048F2  0782               	decf	___fltol@exp1& (0+255),f,b
 13007  0048F4                     l8309:
 13008                           
 13009                           ; BSR set to: 0
 13010  0048F4  5182               	movf	___fltol@exp1& (0+255),w,b
 13011  0048F6  A4D8               	btfss	status,2,c
 13012  0048F8  EF80  F024         	goto	u8731
 13013  0048FC  EF82  F024         	goto	u8730
 13014  004900                     u8731:
 13015  004900  EF74  F024         	goto	l8307
 13016  004904                     u8730:
 13017  004904                     l8311:
 13018                           
 13019                           ; BSR set to: 0
 13020  004904  5181               	movf	___fltol@sign1& (0+255),w,b
 13021  004906  B4D8               	btfsc	status,2,c
 13022  004908  EF88  F024         	goto	u8741
 13023  00490C  EF8A  F024         	goto	u8740
 13024  004910                     u8741:
 13025  004910  EF92  F024         	goto	l8315
 13026  004914                     u8740:
 13027  004914                     
 13028                           ; BSR set to: 0
 13029  004914  1F7C               	comf	(___fltol@f1+3)& (0+255),f,b
 13030  004916  1F7B               	comf	(___fltol@f1+2)& (0+255),f,b
 13031  004918  1F7A               	comf	(___fltol@f1+1)& (0+255),f,b
 13032  00491A  6D79               	negf	___fltol@f1& (0+255),b
 13033  00491C  0E00               	movlw	0
 13034  00491E  237A               	addwfc	(___fltol@f1+1)& (0+255),f,b
 13035  004920  237B               	addwfc	(___fltol@f1+2)& (0+255),f,b
 13036  004922  237C               	addwfc	(___fltol@f1+3)& (0+255),f,b
 13037  004924                     l8315:
 13038                           
 13039                           ; BSR set to: 0
 13040  004924  C079  F079         	movff	___fltol@f1,?___fltol
 13041  004928  C07A  F07A         	movff	___fltol@f1+1,?___fltol+1
 13042  00492C  C07B  F07B         	movff	___fltol@f1+2,?___fltol+2
 13043  004930  C07C  F07C         	movff	___fltol@f1+3,?___fltol+3
 13044  004934                     l1694:
 13045                           
 13046                           ; BSR set to: 0
 13047  004934  0012               	return		;funcret
 13048  004936                     __end_of___fltol:
 13049                           	callstack 0
 13050                           
 13051 ;; *************** function ___flmul *****************
 13052 ;; Defined at:
 13053 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
 13054 ;; Parameters:    Size  Location     Type
 13055 ;;  b               4   41[COMRAM] long 
 13056 ;;  a               4   45[COMRAM] long 
 13057 ;; Auto vars:     Size  Location     Type
 13058 ;;  prod            4    7[BANK0 ] struct .
 13059 ;;  grs             4    2[BANK0 ] unsigned long 
 13060 ;;  temp            2   11[BANK0 ] struct .
 13061 ;;  bexp            1    6[BANK0 ] unsigned char 
 13062 ;;  aexp            1    1[BANK0 ] unsigned char 
 13063 ;;  sign            1    0[BANK0 ] unsigned char 
 13064 ;; Return value:  Size  Location     Type
 13065 ;;                  4   41[COMRAM] unsigned char 
 13066 ;; Registers used:
 13067 ;;		wreg, status,2, status,0, prodl, prodh
 13068 ;; Tracked objects:
 13069 ;;		On entry : 0/0
 13070 ;;		On exit  : 0/0
 13071 ;;		Unchanged: 0/0
 13072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13073 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13074 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13075 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13076 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13077 ;;Total ram usage:       25 bytes
 13078 ;; Hardware stack levels used: 1
 13079 ;; Hardware stack levels required when called: 8
 13080 ;; This function calls:
 13081 ;;		Nothing
 13082 ;; This function is called by:
 13083 ;;		_calcSpeed
 13084 ;;		_calcMotorPow
 13085 ;;		_efgtoa
 13086 ;; This function uses a non-reentrant model
 13087 ;;
 13088                           
 13089                           	psect	text52
 13090  002810                     __ptext52:
 13091                           	callstack 0
 13092  002810                     ___flmul:
 13093                           	callstack 16
 13094  002810  502D               	movf	(___flmul@b+3)^0,w,c
 13095  002812  0B80               	andlw	128
 13096  002814  0100               	movlb	0	; () banked
 13097  002816  6F60               	movwf	___flmul@sign& (0+255),b
 13098  002818  502D               	movf	(___flmul@b+3)^0,w,c
 13099  00281A  242D               	addwf	(___flmul@b+3)^0,w,c
 13100  00281C  6F66               	movwf	___flmul@bexp& (0+255),b
 13101  00281E                     
 13102                           ; BSR set to: 0
 13103  00281E  AE2C               	btfss	(___flmul@b+2)^0,7,c
 13104  002820  EF14  F014         	goto	u8281
 13105  002824  EF16  F014         	goto	u8280
 13106  002828                     u8281:
 13107  002828  EF17  F014         	goto	l8019
 13108  00282C                     u8280:
 13109  00282C                     
 13110                           ; BSR set to: 0
 13111  00282C  8166               	bsf	___flmul@bexp& (0+255),0,b
 13112  00282E                     l8019:
 13113                           
 13114                           ; BSR set to: 0
 13115  00282E  5166               	movf	___flmul@bexp& (0+255),w,b
 13116  002830  B4D8               	btfsc	status,2,c
 13117  002832  EF1D  F014         	goto	u8291
 13118  002836  EF1F  F014         	goto	u8290
 13119  00283A                     u8291:
 13120  00283A  EF32  F014         	goto	l8027
 13121  00283E                     u8290:
 13122  00283E                     
 13123                           ; BSR set to: 0
 13124  00283E  2966               	incf	___flmul@bexp& (0+255),w,b
 13125  002840  A4D8               	btfss	status,2,c
 13126  002842  EF25  F014         	goto	u8301
 13127  002846  EF27  F014         	goto	u8300
 13128  00284A                     u8301:
 13129  00284A  EF2F  F014         	goto	l8025
 13130  00284E                     u8300:
 13131  00284E                     
 13132                           ; BSR set to: 0
 13133  00284E  0E00               	movlw	0
 13134  002850  6E2A               	movwf	___flmul@b^0,c
 13135  002852  0E00               	movlw	0
 13136  002854  6E2B               	movwf	(___flmul@b+1)^0,c
 13137  002856  0E00               	movlw	0
 13138  002858  6E2C               	movwf	(___flmul@b+2)^0,c
 13139  00285A  0E00               	movlw	0
 13140  00285C  6E2D               	movwf	(___flmul@b+3)^0,c
 13141  00285E                     l8025:
 13142                           
 13143                           ; BSR set to: 0
 13144  00285E  8E2C               	bsf	(___flmul@b+2)^0,7,c
 13145  002860  EF3A  F014         	goto	l8029
 13146  002864                     l8027:
 13147                           
 13148                           ; BSR set to: 0
 13149  002864  0E00               	movlw	0
 13150  002866  6E2A               	movwf	___flmul@b^0,c
 13151  002868  0E00               	movlw	0
 13152  00286A  6E2B               	movwf	(___flmul@b+1)^0,c
 13153  00286C  0E00               	movlw	0
 13154  00286E  6E2C               	movwf	(___flmul@b+2)^0,c
 13155  002870  0E00               	movlw	0
 13156  002872  6E2D               	movwf	(___flmul@b+3)^0,c
 13157  002874                     l8029:
 13158                           
 13159                           ; BSR set to: 0
 13160  002874  5031               	movf	(___flmul@a+3)^0,w,c
 13161  002876  0B80               	andlw	128
 13162  002878  1B60               	xorwf	___flmul@sign& (0+255),f,b
 13163  00287A                     
 13164                           ; BSR set to: 0
 13165  00287A  5031               	movf	(___flmul@a+3)^0,w,c
 13166  00287C  2431               	addwf	(___flmul@a+3)^0,w,c
 13167  00287E  6F61               	movwf	___flmul@aexp& (0+255),b
 13168  002880                     
 13169                           ; BSR set to: 0
 13170  002880  AE30               	btfss	(___flmul@a+2)^0,7,c
 13171  002882  EF45  F014         	goto	u8311
 13172  002886  EF47  F014         	goto	u8310
 13173  00288A                     u8311:
 13174  00288A  EF48  F014         	goto	l8037
 13175  00288E                     u8310:
 13176  00288E                     
 13177                           ; BSR set to: 0
 13178  00288E  8161               	bsf	___flmul@aexp& (0+255),0,b
 13179  002890                     l8037:
 13180                           
 13181                           ; BSR set to: 0
 13182  002890  5161               	movf	___flmul@aexp& (0+255),w,b
 13183  002892  B4D8               	btfsc	status,2,c
 13184  002894  EF4E  F014         	goto	u8321
 13185  002898  EF50  F014         	goto	u8320
 13186  00289C                     u8321:
 13187  00289C  EF63  F014         	goto	l8045
 13188  0028A0                     u8320:
 13189  0028A0                     
 13190                           ; BSR set to: 0
 13191  0028A0  2961               	incf	___flmul@aexp& (0+255),w,b
 13192  0028A2  A4D8               	btfss	status,2,c
 13193  0028A4  EF56  F014         	goto	u8331
 13194  0028A8  EF58  F014         	goto	u8330
 13195  0028AC                     u8331:
 13196  0028AC  EF60  F014         	goto	l8043
 13197  0028B0                     u8330:
 13198  0028B0                     
 13199                           ; BSR set to: 0
 13200  0028B0  0E00               	movlw	0
 13201  0028B2  6E2E               	movwf	___flmul@a^0,c
 13202  0028B4  0E00               	movlw	0
 13203  0028B6  6E2F               	movwf	(___flmul@a+1)^0,c
 13204  0028B8  0E00               	movlw	0
 13205  0028BA  6E30               	movwf	(___flmul@a+2)^0,c
 13206  0028BC  0E00               	movlw	0
 13207  0028BE  6E31               	movwf	(___flmul@a+3)^0,c
 13208  0028C0                     l8043:
 13209                           
 13210                           ; BSR set to: 0
 13211  0028C0  8E30               	bsf	(___flmul@a+2)^0,7,c
 13212  0028C2  EF6B  F014         	goto	l2011
 13213  0028C6                     l8045:
 13214                           
 13215                           ; BSR set to: 0
 13216  0028C6  0E00               	movlw	0
 13217  0028C8  6E2E               	movwf	___flmul@a^0,c
 13218  0028CA  0E00               	movlw	0
 13219  0028CC  6E2F               	movwf	(___flmul@a+1)^0,c
 13220  0028CE  0E00               	movlw	0
 13221  0028D0  6E30               	movwf	(___flmul@a+2)^0,c
 13222  0028D2  0E00               	movlw	0
 13223  0028D4  6E31               	movwf	(___flmul@a+3)^0,c
 13224  0028D6                     l2011:
 13225                           
 13226                           ; BSR set to: 0
 13227  0028D6  5161               	movf	___flmul@aexp& (0+255),w,b
 13228  0028D8  B4D8               	btfsc	status,2,c
 13229  0028DA  EF71  F014         	goto	u8341
 13230  0028DE  EF73  F014         	goto	u8340
 13231  0028E2                     u8341:
 13232  0028E2  EF7B  F014         	goto	l8049
 13233  0028E6                     u8340:
 13234  0028E6                     
 13235                           ; BSR set to: 0
 13236  0028E6  5166               	movf	___flmul@bexp& (0+255),w,b
 13237  0028E8  A4D8               	btfss	status,2,c
 13238  0028EA  EF79  F014         	goto	u8351
 13239  0028EE  EF7B  F014         	goto	u8350
 13240  0028F2                     u8351:
 13241  0028F2  EF85  F014         	goto	l8053
 13242  0028F6                     u8350:
 13243  0028F6                     l8049:
 13244                           
 13245                           ; BSR set to: 0
 13246  0028F6  0E00               	movlw	0
 13247  0028F8  6E2A               	movwf	?___flmul^0,c
 13248  0028FA  0E00               	movlw	0
 13249  0028FC  6E2B               	movwf	(?___flmul+1)^0,c
 13250  0028FE  0E00               	movlw	0
 13251  002900  6E2C               	movwf	(?___flmul+2)^0,c
 13252  002902  0E00               	movlw	0
 13253  002904  6E2D               	movwf	(?___flmul+3)^0,c
 13254  002906  EF2F  F016         	goto	l2015
 13255  00290A                     l8053:
 13256                           
 13257                           ; BSR set to: 0
 13258  00290A  5030               	movf	(___flmul@a+2)^0,w,c
 13259  00290C  022A               	mulwf	___flmul@b^0,c
 13260  00290E  006F FFCC  F06B    	movff	prodl,___flmul@temp
 13261  002914  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 13262  00291A                     
 13263                           ; BSR set to: 0
 13264  00291A  516B               	movf	___flmul@temp& (0+255),w,b
 13265  00291C  6F62               	movwf	___flmul@grs& (0+255),b
 13266  00291E  6B63               	clrf	(___flmul@grs+1)& (0+255),b
 13267  002920  6B64               	clrf	(___flmul@grs+2)& (0+255),b
 13268  002922  6B65               	clrf	(___flmul@grs+3)& (0+255),b
 13269  002924                     
 13270                           ; BSR set to: 0
 13271  002924  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13272  002926  6F67               	movwf	___flmul@prod& (0+255),b
 13273  002928  6B68               	clrf	(___flmul@prod+1)& (0+255),b
 13274  00292A  6B69               	clrf	(___flmul@prod+2)& (0+255),b
 13275  00292C  6B6A               	clrf	(___flmul@prod+3)& (0+255),b
 13276  00292E  502F               	movf	(___flmul@a+1)^0,w,c
 13277  002930  022B               	mulwf	(___flmul@b+1)^0,c
 13278  002932  006F FFCC  F06B    	movff	prodl,___flmul@temp
 13279  002938  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 13280  00293E                     
 13281                           ; BSR set to: 0
 13282  00293E  516B               	movf	___flmul@temp& (0+255),w,b
 13283  002940  2762               	addwf	___flmul@grs& (0+255),f,b
 13284  002942  0E00               	movlw	0
 13285  002944  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 13286  002946  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 13287  002948  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 13288  00294A                     
 13289                           ; BSR set to: 0
 13290  00294A  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13291  00294C  2767               	addwf	___flmul@prod& (0+255),f,b
 13292  00294E  0E00               	movlw	0
 13293  002950  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 13294  002952  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 13295  002954  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 13296  002956  502E               	movf	___flmul@a^0,w,c
 13297  002958  022C               	mulwf	(___flmul@b+2)^0,c
 13298  00295A  006F FFCC  F06B    	movff	prodl,___flmul@temp
 13299  002960  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 13300  002966                     
 13301                           ; BSR set to: 0
 13302  002966  516B               	movf	___flmul@temp& (0+255),w,b
 13303  002968  2762               	addwf	___flmul@grs& (0+255),f,b
 13304  00296A  0E00               	movlw	0
 13305  00296C  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 13306  00296E  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 13307  002970  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 13308  002972                     
 13309                           ; BSR set to: 0
 13310  002972  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13311  002974  2767               	addwf	___flmul@prod& (0+255),f,b
 13312  002976  0E00               	movlw	0
 13313  002978  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 13314  00297A  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 13315  00297C  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 13316  00297E                     
 13317                           ; BSR set to: 0
 13318  00297E  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
 13319  002982  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
 13320  002986  C062  F063         	movff	___flmul@grs,___flmul@grs+1
 13321  00298A  6B62               	clrf	___flmul@grs& (0+255),b
 13322  00298C                     
 13323                           ; BSR set to: 0
 13324  00298C  502E               	movf	___flmul@a^0,w,c
 13325  00298E  022B               	mulwf	(___flmul@b+1)^0,c
 13326  002990  006F FFCC  F06B    	movff	prodl,___flmul@temp
 13327  002996  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 13328  00299C                     
 13329                           ; BSR set to: 0
 13330  00299C  516B               	movf	___flmul@temp& (0+255),w,b
 13331  00299E  2762               	addwf	___flmul@grs& (0+255),f,b
 13332  0029A0  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13333  0029A2  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 13334  0029A4  0E00               	movlw	0
 13335  0029A6  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 13336  0029A8  0E00               	movlw	0
 13337  0029AA  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 13338  0029AC                     
 13339                           ; BSR set to: 0
 13340  0029AC  502F               	movf	(___flmul@a+1)^0,w,c
 13341  0029AE  022A               	mulwf	___flmul@b^0,c
 13342  0029B0  006F FFCC  F06B    	movff	prodl,___flmul@temp
 13343  0029B6  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 13344  0029BC                     
 13345                           ; BSR set to: 0
 13346  0029BC  516B               	movf	___flmul@temp& (0+255),w,b
 13347  0029BE  2762               	addwf	___flmul@grs& (0+255),f,b
 13348  0029C0  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13349  0029C2  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 13350  0029C4  0E00               	movlw	0
 13351  0029C6  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 13352  0029C8  0E00               	movlw	0
 13353  0029CA  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 13354  0029CC                     
 13355                           ; BSR set to: 0
 13356  0029CC  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
 13357  0029D0  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
 13358  0029D4  C062  F063         	movff	___flmul@grs,___flmul@grs+1
 13359  0029D8  6B62               	clrf	___flmul@grs& (0+255),b
 13360  0029DA  502E               	movf	___flmul@a^0,w,c
 13361  0029DC  022A               	mulwf	___flmul@b^0,c
 13362  0029DE  006F FFCC  F06B    	movff	prodl,___flmul@temp
 13363  0029E4  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 13364  0029EA                     
 13365                           ; BSR set to: 0
 13366  0029EA  516B               	movf	___flmul@temp& (0+255),w,b
 13367  0029EC  2762               	addwf	___flmul@grs& (0+255),f,b
 13368  0029EE  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13369  0029F0  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 13370  0029F2  0E00               	movlw	0
 13371  0029F4  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 13372  0029F6  0E00               	movlw	0
 13373  0029F8  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 13374  0029FA                     
 13375                           ; BSR set to: 0
 13376  0029FA  5030               	movf	(___flmul@a+2)^0,w,c
 13377  0029FC  022B               	mulwf	(___flmul@b+1)^0,c
 13378  0029FE  006F FFCC  F06B    	movff	prodl,___flmul@temp
 13379  002A04  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 13380  002A0A  516B               	movf	___flmul@temp& (0+255),w,b
 13381  002A0C  2767               	addwf	___flmul@prod& (0+255),f,b
 13382  002A0E  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13383  002A10  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 13384  002A12  0E00               	movlw	0
 13385  002A14  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 13386  002A16  0E00               	movlw	0
 13387  002A18  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 13388  002A1A                     
 13389                           ; BSR set to: 0
 13390  002A1A  502F               	movf	(___flmul@a+1)^0,w,c
 13391  002A1C  022C               	mulwf	(___flmul@b+2)^0,c
 13392  002A1E  006F FFCC  F06B    	movff	prodl,___flmul@temp
 13393  002A24  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 13394  002A2A                     
 13395                           ; BSR set to: 0
 13396  002A2A  516B               	movf	___flmul@temp& (0+255),w,b
 13397  002A2C  2767               	addwf	___flmul@prod& (0+255),f,b
 13398  002A2E  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13399  002A30  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 13400  002A32  0E00               	movlw	0
 13401  002A34  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 13402  002A36  0E00               	movlw	0
 13403  002A38  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 13404  002A3A  5030               	movf	(___flmul@a+2)^0,w,c
 13405  002A3C  022C               	mulwf	(___flmul@b+2)^0,c
 13406  002A3E  006F FFCC  F06B    	movff	prodl,___flmul@temp
 13407  002A44  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 13408  002A4A                     
 13409                           ; BSR set to: 0
 13410  002A4A  516B               	movf	___flmul@temp& (0+255),w,b
 13411  002A4C  6E32               	movwf	??___flmul^0,c
 13412  002A4E  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13413  002A50  6E33               	movwf	(??___flmul+1)^0,c
 13414  002A52  6A34               	clrf	(??___flmul+2)^0,c
 13415  002A54  6A35               	clrf	(??___flmul+3)^0,c
 13416  002A56  C034  F035         	movff	??___flmul+2,??___flmul+3
 13417  002A5A  C033  F034         	movff	??___flmul+1,??___flmul+2
 13418  002A5E  C032  F033         	movff	??___flmul,??___flmul+1
 13419  002A62  6A32               	clrf	??___flmul^0,c
 13420  002A64  5032               	movf	??___flmul^0,w,c
 13421  002A66  2767               	addwf	___flmul@prod& (0+255),f,b
 13422  002A68  5033               	movf	(??___flmul+1)^0,w,c
 13423  002A6A  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 13424  002A6C  5034               	movf	(??___flmul+2)^0,w,c
 13425  002A6E  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 13426  002A70  5035               	movf	(??___flmul+3)^0,w,c
 13427  002A72  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 13428  002A74                     
 13429                           ; BSR set to: 0
 13430  002A74  C062  F032         	movff	___flmul@grs,??___flmul
 13431  002A78  C063  F033         	movff	___flmul@grs+1,??___flmul+1
 13432  002A7C  C064  F034         	movff	___flmul@grs+2,??___flmul+2
 13433  002A80  C065  F035         	movff	___flmul@grs+3,??___flmul+3
 13434  002A84  0E19               	movlw	25
 13435  002A86  EF4A  F015         	goto	u8360
 13436  002A8A                     u8365:
 13437  002A8A  90D8               	bcf	status,0,c
 13438  002A8C  3235               	rrcf	(??___flmul+3)^0,f,c
 13439  002A8E  3234               	rrcf	(??___flmul+2)^0,f,c
 13440  002A90  3233               	rrcf	(??___flmul+1)^0,f,c
 13441  002A92  3232               	rrcf	??___flmul^0,f,c
 13442  002A94                     u8360:
 13443  002A94  2EE8               	decfsz	wreg,f,c
 13444  002A96  EF45  F015         	goto	u8365
 13445  002A9A  5032               	movf	??___flmul^0,w,c
 13446  002A9C  2767               	addwf	___flmul@prod& (0+255),f,b
 13447  002A9E  5033               	movf	(??___flmul+1)^0,w,c
 13448  002AA0  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 13449  002AA2  5034               	movf	(??___flmul+2)^0,w,c
 13450  002AA4  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 13451  002AA6  5035               	movf	(??___flmul+3)^0,w,c
 13452  002AA8  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 13453  002AAA                     
 13454                           ; BSR set to: 0
 13455  002AAA  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
 13456  002AAE  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
 13457  002AB2  C062  F063         	movff	___flmul@grs,___flmul@grs+1
 13458  002AB6  6B62               	clrf	___flmul@grs& (0+255),b
 13459  002AB8                     
 13460                           ; BSR set to: 0
 13461  002AB8  5161               	movf	___flmul@aexp& (0+255),w,b
 13462  002ABA  C066  F032         	movff	___flmul@bexp,??___flmul
 13463  002ABE  6A33               	clrf	(??___flmul+1)^0,c
 13464  002AC0  2632               	addwf	??___flmul^0,f,c
 13465  002AC2  0E00               	movlw	0
 13466  002AC4  2233               	addwfc	(??___flmul+1)^0,f,c
 13467  002AC6  0E82               	movlw	130
 13468  002AC8  2432               	addwf	??___flmul^0,w,c
 13469  002ACA  6F6B               	movwf	___flmul@temp& (0+255),b
 13470  002ACC  0EFF               	movlw	255
 13471  002ACE  2033               	addwfc	(??___flmul+1)^0,w,c
 13472  002AD0  6F6C               	movwf	(___flmul@temp+1)& (0+255),b
 13473  002AD2  EF80  F015         	goto	l8101
 13474  002AD6                     l8095:
 13475                           
 13476                           ; BSR set to: 0
 13477  002AD6  90D8               	bcf	status,0,c
 13478  002AD8  3767               	rlcf	___flmul@prod& (0+255),f,b
 13479  002ADA  3768               	rlcf	(___flmul@prod+1)& (0+255),f,b
 13480  002ADC  3769               	rlcf	(___flmul@prod+2)& (0+255),f,b
 13481  002ADE  376A               	rlcf	(___flmul@prod+3)& (0+255),f,b
 13482  002AE0                     
 13483                           ; BSR set to: 0
 13484  002AE0  AF65               	btfss	(___flmul@grs+3)& (0+255),7,b
 13485  002AE2  EF75  F015         	goto	u8371
 13486  002AE6  EF77  F015         	goto	u8370
 13487  002AEA                     u8371:
 13488  002AEA  EF78  F015         	goto	l2018
 13489  002AEE                     u8370:
 13490  002AEE                     
 13491                           ; BSR set to: 0
 13492  002AEE  8167               	bsf	___flmul@prod& (0+255),0,b
 13493  002AF0                     l2018:
 13494                           
 13495                           ; BSR set to: 0
 13496  002AF0  90D8               	bcf	status,0,c
 13497  002AF2  3762               	rlcf	___flmul@grs& (0+255),f,b
 13498  002AF4  3763               	rlcf	(___flmul@grs+1)& (0+255),f,b
 13499  002AF6  3764               	rlcf	(___flmul@grs+2)& (0+255),f,b
 13500  002AF8  3765               	rlcf	(___flmul@grs+3)& (0+255),f,b
 13501  002AFA  076B               	decf	___flmul@temp& (0+255),f,b
 13502  002AFC  A0D8               	btfss	status,0,c
 13503  002AFE  076C               	decf	(___flmul@temp+1)& (0+255),f,b
 13504  002B00                     l8101:
 13505                           
 13506                           ; BSR set to: 0
 13507  002B00  AF69               	btfss	(___flmul@prod+2)& (0+255),7,b
 13508  002B02  EF85  F015         	goto	u8381
 13509  002B06  EF87  F015         	goto	u8380
 13510  002B0A                     u8381:
 13511  002B0A  EF6B  F015         	goto	l8095
 13512  002B0E                     u8380:
 13513  002B0E                     
 13514                           ; BSR set to: 0
 13515  002B0E  0E00               	movlw	0
 13516  002B10  6F61               	movwf	___flmul@aexp& (0+255),b
 13517  002B12                     
 13518                           ; BSR set to: 0
 13519  002B12  AF65               	btfss	(___flmul@grs+3)& (0+255),7,b
 13520  002B14  EF8E  F015         	goto	u8391
 13521  002B18  EF90  F015         	goto	u8390
 13522  002B1C                     u8391:
 13523  002B1C  EFB4  F015         	goto	l2020
 13524  002B20                     u8390:
 13525  002B20                     
 13526                           ; BSR set to: 0
 13527  002B20  0EFF               	movlw	255
 13528  002B22  1562               	andwf	___flmul@grs& (0+255),w,b
 13529  002B24  6E32               	movwf	??___flmul^0,c
 13530  002B26  0EFF               	movlw	255
 13531  002B28  1563               	andwf	(___flmul@grs+1)& (0+255),w,b
 13532  002B2A  6E33               	movwf	(??___flmul+1)^0,c
 13533  002B2C  0EFF               	movlw	255
 13534  002B2E  1564               	andwf	(___flmul@grs+2)& (0+255),w,b
 13535  002B30  6E34               	movwf	(??___flmul+2)^0,c
 13536  002B32  0E7F               	movlw	127
 13537  002B34  1565               	andwf	(___flmul@grs+3)& (0+255),w,b
 13538  002B36  6E35               	movwf	(??___flmul+3)^0,c
 13539  002B38  5032               	movf	??___flmul^0,w,c
 13540  002B3A  1033               	iorwf	(??___flmul+1)^0,w,c
 13541  002B3C  1034               	iorwf	(??___flmul+2)^0,w,c
 13542  002B3E  1035               	iorwf	(??___flmul+3)^0,w,c
 13543  002B40  B4D8               	btfsc	status,2,c
 13544  002B42  EFA5  F015         	goto	u8401
 13545  002B46  EFA7  F015         	goto	u8400
 13546  002B4A                     u8401:
 13547  002B4A  EFAB  F015         	goto	l2021
 13548  002B4E                     u8400:
 13549  002B4E                     l8109:
 13550                           
 13551                           ; BSR set to: 0
 13552  002B4E  0E01               	movlw	1
 13553  002B50  6F61               	movwf	___flmul@aexp& (0+255),b
 13554  002B52  EFB4  F015         	goto	l2020
 13555  002B56                     l2021:
 13556                           
 13557                           ; BSR set to: 0
 13558  002B56  A167               	btfss	___flmul@prod& (0+255),0,b
 13559  002B58  EFB0  F015         	goto	u8411
 13560  002B5C  EFB2  F015         	goto	u8410
 13561  002B60                     u8411:
 13562  002B60  EFB4  F015         	goto	l2020
 13563  002B64                     u8410:
 13564  002B64  EFA7  F015         	goto	l8109
 13565  002B68                     l2020:
 13566                           
 13567                           ; BSR set to: 0
 13568  002B68  5161               	movf	___flmul@aexp& (0+255),w,b
 13569  002B6A  B4D8               	btfsc	status,2,c
 13570  002B6C  EFBA  F015         	goto	u8421
 13571  002B70  EFBC  F015         	goto	u8420
 13572  002B74                     u8421:
 13573  002B74  EFE0  F015         	goto	l8121
 13574  002B78                     u8420:
 13575  002B78                     
 13576                           ; BSR set to: 0
 13577  002B78  0E01               	movlw	1
 13578  002B7A  2767               	addwf	___flmul@prod& (0+255),f,b
 13579  002B7C  0E00               	movlw	0
 13580  002B7E  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 13581  002B80  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 13582  002B82  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 13583  002B84                     
 13584                           ; BSR set to: 0
 13585  002B84  A16A               	btfss	(___flmul@prod+3)& (0+255),0,b
 13586  002B86  EFC7  F015         	goto	u8431
 13587  002B8A  EFC9  F015         	goto	u8430
 13588  002B8E                     u8431:
 13589  002B8E  EFE0  F015         	goto	l8121
 13590  002B92                     u8430:
 13591  002B92                     
 13592                           ; BSR set to: 0
 13593  002B92  C067  F032         	movff	___flmul@prod,??___flmul
 13594  002B96  C068  F033         	movff	___flmul@prod+1,??___flmul+1
 13595  002B9A  C069  F034         	movff	___flmul@prod+2,??___flmul+2
 13596  002B9E  C06A  F035         	movff	___flmul@prod+3,??___flmul+3
 13597  002BA2  3435               	rlcf	(??___flmul+3)^0,w,c
 13598  002BA4  3235               	rrcf	(??___flmul+3)^0,f,c
 13599  002BA6  3234               	rrcf	(??___flmul+2)^0,f,c
 13600  002BA8  3233               	rrcf	(??___flmul+1)^0,f,c
 13601  002BAA  3232               	rrcf	??___flmul^0,f,c
 13602  002BAC  C032  F067         	movff	??___flmul,___flmul@prod
 13603  002BB0  C033  F068         	movff	??___flmul+1,___flmul@prod+1
 13604  002BB4  C034  F069         	movff	??___flmul+2,___flmul@prod+2
 13605  002BB8  C035  F06A         	movff	??___flmul+3,___flmul@prod+3
 13606  002BBC                     
 13607                           ; BSR set to: 0
 13608  002BBC  4B6B               	infsnz	___flmul@temp& (0+255),f,b
 13609  002BBE  2B6C               	incf	(___flmul@temp+1)& (0+255),f,b
 13610  002BC0                     l8121:
 13611                           
 13612                           ; BSR set to: 0
 13613  002BC0  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 13614  002BC2  EFEB  F015         	goto	u8441
 13615  002BC6  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13616  002BC8  E108               	bnz	u8440
 13617  002BCA  296B               	incf	___flmul@temp& (0+255),w,b
 13618  002BCC  A0D8               	btfss	status,0,c
 13619  002BCE  EFEB  F015         	goto	u8441
 13620  002BD2  EFED  F015         	goto	u8440
 13621  002BD6                     u8441:
 13622  002BD6  EFF7  F015         	goto	l8125
 13623  002BDA                     u8440:
 13624  002BDA                     
 13625                           ; BSR set to: 0
 13626  002BDA  0E00               	movlw	0
 13627  002BDC  6F67               	movwf	___flmul@prod& (0+255),b
 13628  002BDE  0E00               	movlw	0
 13629  002BE0  6F68               	movwf	(___flmul@prod+1)& (0+255),b
 13630  002BE2  0E80               	movlw	128
 13631  002BE4  6F69               	movwf	(___flmul@prod+2)& (0+255),b
 13632  002BE6  0E7F               	movlw	127
 13633  002BE8  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
 13634  002BEA  EF25  F016         	goto	l8137
 13635  002BEE                     l8125:
 13636                           
 13637                           ; BSR set to: 0
 13638  002BEE  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 13639  002BF0  EF04  F016         	goto	u8450
 13640  002BF4  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13641  002BF6  E106               	bnz	u8451
 13642  002BF8  056B               	decf	___flmul@temp& (0+255),w,b
 13643  002BFA  B0D8               	btfsc	status,0,c
 13644  002BFC  EF02  F016         	goto	u8451
 13645  002C00  EF04  F016         	goto	u8450
 13646  002C04                     u8451:
 13647  002C04  EF10  F016         	goto	l2028
 13648  002C08                     u8450:
 13649  002C08                     
 13650                           ; BSR set to: 0
 13651  002C08  0E00               	movlw	0
 13652  002C0A  6F67               	movwf	___flmul@prod& (0+255),b
 13653  002C0C  0E00               	movlw	0
 13654  002C0E  6F68               	movwf	(___flmul@prod+1)& (0+255),b
 13655  002C10  0E00               	movlw	0
 13656  002C12  6F69               	movwf	(___flmul@prod+2)& (0+255),b
 13657  002C14  0E00               	movlw	0
 13658  002C16  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
 13659  002C18  0E00               	movlw	0
 13660  002C1A  6F60               	movwf	___flmul@sign& (0+255),b
 13661  002C1C  EF25  F016         	goto	l8137
 13662  002C20                     l2028:
 13663                           
 13664                           ; BSR set to: 0
 13665  002C20  C06B  F066         	movff	___flmul@temp,___flmul@bexp
 13666  002C24                     
 13667                           ; BSR set to: 0
 13668  002C24  0EFF               	movlw	255
 13669  002C26  1767               	andwf	___flmul@prod& (0+255),f,b
 13670  002C28  0EFF               	movlw	255
 13671  002C2A  1768               	andwf	(___flmul@prod+1)& (0+255),f,b
 13672  002C2C  0E7F               	movlw	127
 13673  002C2E  1769               	andwf	(___flmul@prod+2)& (0+255),f,b
 13674  002C30  0E00               	movlw	0
 13675  002C32  176A               	andwf	(___flmul@prod+3)& (0+255),f,b
 13676  002C34                     
 13677                           ; BSR set to: 0
 13678  002C34  A166               	btfss	___flmul@bexp& (0+255),0,b
 13679  002C36  EF1F  F016         	goto	u8461
 13680  002C3A  EF21  F016         	goto	u8460
 13681  002C3E                     u8461:
 13682  002C3E  EF22  F016         	goto	l8135
 13683  002C42                     u8460:
 13684  002C42                     
 13685                           ; BSR set to: 0
 13686  002C42  8F69               	bsf	(___flmul@prod+2)& (0+255),7,b
 13687  002C44                     l8135:
 13688                           
 13689                           ; BSR set to: 0
 13690  002C44  90D8               	bcf	status,0,c
 13691  002C46  3166               	rrcf	___flmul@bexp& (0+255),w,b
 13692  002C48  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
 13693  002C4A                     l8137:
 13694                           
 13695                           ; BSR set to: 0
 13696  002C4A  5160               	movf	___flmul@sign& (0+255),w,b
 13697  002C4C  136A               	iorwf	(___flmul@prod+3)& (0+255),f,b
 13698  002C4E                     
 13699                           ; BSR set to: 0
 13700  002C4E  C067  F02A         	movff	___flmul@prod,?___flmul
 13701  002C52  C068  F02B         	movff	___flmul@prod+1,?___flmul+1
 13702  002C56  C069  F02C         	movff	___flmul@prod+2,?___flmul+2
 13703  002C5A  C06A  F02D         	movff	___flmul@prod+3,?___flmul+3
 13704  002C5E                     l2015:
 13705                           
 13706                           ; BSR set to: 0
 13707  002C5E  0012               	return		;funcret
 13708  002C60                     __end_of___flmul:
 13709                           	callstack 0
 13710                           
 13711 ;; *************** function ___awdiv *****************
 13712 ;; Defined at:
 13713 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
 13714 ;; Parameters:    Size  Location     Type
 13715 ;;  dividend        2   19[COMRAM] int 
 13716 ;;  divisor         2   21[COMRAM] int 
 13717 ;; Auto vars:     Size  Location     Type
 13718 ;;  quotient        2   25[COMRAM] int 
 13719 ;;  sign            1   24[COMRAM] unsigned char 
 13720 ;;  counter         1   23[COMRAM] unsigned char 
 13721 ;; Return value:  Size  Location     Type
 13722 ;;                  2   19[COMRAM] int 
 13723 ;; Registers used:
 13724 ;;		wreg, status,2, status,0
 13725 ;; Tracked objects:
 13726 ;;		On entry : 0/0
 13727 ;;		On exit  : 0/0
 13728 ;;		Unchanged: 0/0
 13729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13730 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13731 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13733 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13734 ;;Total ram usage:        8 bytes
 13735 ;; Hardware stack levels used: 1
 13736 ;; Hardware stack levels required when called: 8
 13737 ;; This function calls:
 13738 ;;		Nothing
 13739 ;; This function is called by:
 13740 ;;		_checkCurveCount
 13741 ;;		_calcMotorPow
 13742 ;;		_efgtoa
 13743 ;; This function uses a non-reentrant model
 13744 ;;
 13745                           
 13746                           	psect	text53
 13747  004F9A                     __ptext53:
 13748                           	callstack 0
 13749  004F9A                     ___awdiv:
 13750                           	callstack 16
 13751  004F9A  0E00               	movlw	0
 13752  004F9C  6E19               	movwf	___awdiv@sign^0,c
 13753  004F9E  BE17               	btfsc	(___awdiv@divisor+1)^0,7,c
 13754  004FA0  EFD6  F027         	goto	u8470
 13755  004FA4  EFD4  F027         	goto	u8471
 13756  004FA8                     u8471:
 13757  004FA8  EFDC  F027         	goto	l8157
 13758  004FAC                     u8470:
 13759  004FAC  6C16               	negf	___awdiv@divisor^0,c
 13760  004FAE  1E17               	comf	(___awdiv@divisor+1)^0,f,c
 13761  004FB0  B0D8               	btfsc	status,0,c
 13762  004FB2  2A17               	incf	(___awdiv@divisor+1)^0,f,c
 13763  004FB4  0E01               	movlw	1
 13764  004FB6  6E19               	movwf	___awdiv@sign^0,c
 13765  004FB8                     l8157:
 13766  004FB8  BE15               	btfsc	(___awdiv@dividend+1)^0,7,c
 13767  004FBA  EFE3  F027         	goto	u8480
 13768  004FBE  EFE1  F027         	goto	u8481
 13769  004FC2                     u8481:
 13770  004FC2  EFE9  F027         	goto	l8163
 13771  004FC6                     u8480:
 13772  004FC6  6C14               	negf	___awdiv@dividend^0,c
 13773  004FC8  1E15               	comf	(___awdiv@dividend+1)^0,f,c
 13774  004FCA  B0D8               	btfsc	status,0,c
 13775  004FCC  2A15               	incf	(___awdiv@dividend+1)^0,f,c
 13776  004FCE  0E01               	movlw	1
 13777  004FD0  1A19               	xorwf	___awdiv@sign^0,f,c
 13778  004FD2                     l8163:
 13779  004FD2  0E00               	movlw	0
 13780  004FD4  6E1B               	movwf	(___awdiv@quotient+1)^0,c
 13781  004FD6  0E00               	movlw	0
 13782  004FD8  6E1A               	movwf	___awdiv@quotient^0,c
 13783  004FDA  5016               	movf	___awdiv@divisor^0,w,c
 13784  004FDC  1017               	iorwf	(___awdiv@divisor+1)^0,w,c
 13785  004FDE  B4D8               	btfsc	status,2,c
 13786  004FE0  EFF4  F027         	goto	u8491
 13787  004FE4  EFF6  F027         	goto	u8490
 13788  004FE8                     u8491:
 13789  004FE8  EF1E  F028         	goto	l8185
 13790  004FEC                     u8490:
 13791  004FEC  0E01               	movlw	1
 13792  004FEE  6E18               	movwf	___awdiv@counter^0,c
 13793  004FF0  EFFE  F027         	goto	l8171
 13794  004FF4                     l8169:
 13795  004FF4  90D8               	bcf	status,0,c
 13796  004FF6  3616               	rlcf	___awdiv@divisor^0,f,c
 13797  004FF8  3617               	rlcf	(___awdiv@divisor+1)^0,f,c
 13798  004FFA  2A18               	incf	___awdiv@counter^0,f,c
 13799  004FFC                     l8171:
 13800  004FFC  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
 13801  004FFE  EF03  F028         	goto	u8501
 13802  005002  EF05  F028         	goto	u8500
 13803  005006                     u8501:
 13804  005006  EFFA  F027         	goto	l8169
 13805  00500A                     u8500:
 13806  00500A                     l8173:
 13807  00500A  90D8               	bcf	status,0,c
 13808  00500C  361A               	rlcf	___awdiv@quotient^0,f,c
 13809  00500E  361B               	rlcf	(___awdiv@quotient+1)^0,f,c
 13810  005010  5016               	movf	___awdiv@divisor^0,w,c
 13811  005012  5C14               	subwf	___awdiv@dividend^0,w,c
 13812  005014  5017               	movf	(___awdiv@divisor+1)^0,w,c
 13813  005016  5815               	subwfb	(___awdiv@dividend+1)^0,w,c
 13814  005018  A0D8               	btfss	status,0,c
 13815  00501A  EF11  F028         	goto	u8511
 13816  00501E  EF13  F028         	goto	u8510
 13817  005022                     u8511:
 13818  005022  EF18  F028         	goto	l8181
 13819  005026                     u8510:
 13820  005026  5016               	movf	___awdiv@divisor^0,w,c
 13821  005028  5E14               	subwf	___awdiv@dividend^0,f,c
 13822  00502A  5017               	movf	(___awdiv@divisor+1)^0,w,c
 13823  00502C  5A15               	subwfb	(___awdiv@dividend+1)^0,f,c
 13824  00502E  801A               	bsf	___awdiv@quotient^0,0,c
 13825  005030                     l8181:
 13826  005030  90D8               	bcf	status,0,c
 13827  005032  3217               	rrcf	(___awdiv@divisor+1)^0,f,c
 13828  005034  3216               	rrcf	___awdiv@divisor^0,f,c
 13829  005036  2E18               	decfsz	___awdiv@counter^0,f,c
 13830  005038  EF05  F028         	goto	l8173
 13831  00503C                     l8185:
 13832  00503C  5019               	movf	___awdiv@sign^0,w,c
 13833  00503E  B4D8               	btfsc	status,2,c
 13834  005040  EF24  F028         	goto	u8521
 13835  005044  EF26  F028         	goto	u8520
 13836  005048                     u8521:
 13837  005048  EF2A  F028         	goto	l8189
 13838  00504C                     u8520:
 13839  00504C  6C1A               	negf	___awdiv@quotient^0,c
 13840  00504E  1E1B               	comf	(___awdiv@quotient+1)^0,f,c
 13841  005050  B0D8               	btfsc	status,0,c
 13842  005052  2A1B               	incf	(___awdiv@quotient+1)^0,f,c
 13843  005054                     l8189:
 13844  005054  C01A  F014         	movff	___awdiv@quotient,?___awdiv
 13845  005058  C01B  F015         	movff	___awdiv@quotient+1,?___awdiv+1
 13846  00505C  0012               	return		;funcret
 13847  00505E                     __end_of___awdiv:
 13848                           	callstack 0
 13849                           
 13850 ;; *************** function _SYSTEM_Initialize *****************
 13851 ;; Defined at:
 13852 ;;		line 50 in file "mcc_generated_files/mcc.c"
 13853 ;; Parameters:    Size  Location     Type
 13854 ;;		None
 13855 ;; Auto vars:     Size  Location     Type
 13856 ;;		None
 13857 ;; Return value:  Size  Location     Type
 13858 ;;                  1    wreg      void 
 13859 ;; Registers used:
 13860 ;;		wreg, status,2, status,0, cstack
 13861 ;; Tracked objects:
 13862 ;;		On entry : 0/0
 13863 ;;		On exit  : 0/0
 13864 ;;		Unchanged: 0/0
 13865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13870 ;;Total ram usage:        0 bytes
 13871 ;; Hardware stack levels used: 1
 13872 ;; Hardware stack levels required when called: 10
 13873 ;; This function calls:
 13874 ;;		_ADCC_Initialize
 13875 ;;		_CCP3_Initialize
 13876 ;;		_CCP4_Initialize
 13877 ;;		_CLC3_Initialize
 13878 ;;		_INTERRUPT_Initialize
 13879 ;;		_OSCILLATOR_Initialize
 13880 ;;		_PIN_MANAGER_Initialize
 13881 ;;		_PMD_Initialize
 13882 ;;		_PWM5_Initialize
 13883 ;;		_PWM6_Initialize
 13884 ;;		_PWM7_Initialize
 13885 ;;		_PWM8_Initialize
 13886 ;;		_SMT1_Initialize
 13887 ;;		_TMR2_Initialize
 13888 ;;		_TMR3_Initialize
 13889 ;;		_TMR4_Initialize
 13890 ;;		_TMR5_Initialize
 13891 ;;		_UART1_Initialize
 13892 ;; This function is called by:
 13893 ;;		_main
 13894 ;; This function uses a non-reentrant model
 13895 ;;
 13896                           
 13897                           	psect	text54
 13898  00598C                     __ptext54:
 13899                           	callstack 0
 13900  00598C                     _SYSTEM_Initialize:
 13901                           	callstack 20
 13902  00598C                     
 13903                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 13904  00598C  ECA0  F02C         	call	_INTERRUPT_Initialize	;wreg free
 13905                           
 13906                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 13907  005990  EC99  F030         	call	_PMD_Initialize	;wreg free
 13908                           
 13909                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 13910  005994  EC68  F027         	call	_PIN_MANAGER_Initialize	;wreg free
 13911                           
 13912                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 13913  005998  EC1A  F031         	call	_OSCILLATOR_Initialize	;wreg free
 13914  00599C                     
 13915                           ;mcc_generated_files/mcc.c: 56:     CCP3_Initialize();
 13916  00599C  ECD8  F02F         	call	_CCP3_Initialize	;wreg free
 13917  0059A0                     
 13918                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 13919  0059A0  EC47  F02C         	call	_ADCC_Initialize	;wreg free
 13920                           
 13921                           ;mcc_generated_files/mcc.c: 58:     TMR4_Initialize();
 13922  0059A4  EC06  F030         	call	_TMR4_Initialize	;wreg free
 13923  0059A8                     
 13924                           ;mcc_generated_files/mcc.c: 59:     SMT1_Initialize();
 13925  0059A8  ECA9  F02F         	call	_SMT1_Initialize	;wreg free
 13926  0059AC                     
 13927                           ;mcc_generated_files/mcc.c: 60:     PWM8_Initialize();
 13928  0059AC  ECEA  F030         	call	_PWM8_Initialize	;wreg free
 13929  0059B0                     
 13930                           ;mcc_generated_files/mcc.c: 61:     TMR2_Initialize();
 13931  0059B0  ECDC  F030         	call	_TMR2_Initialize	;wreg free
 13932  0059B4                     
 13933                           ;mcc_generated_files/mcc.c: 62:     PWM6_Initialize();
 13934  0059B4  EC02  F031         	call	_PWM6_Initialize	;wreg free
 13935                           
 13936                           ;mcc_generated_files/mcc.c: 63:     CCP4_Initialize();
 13937  0059B8  ECC1  F02F         	call	_CCP4_Initialize	;wreg free
 13938  0059BC                     
 13939                           ;mcc_generated_files/mcc.c: 64:     CLC3_Initialize();
 13940  0059BC  EC1C  F030         	call	_CLC3_Initialize	;wreg free
 13941  0059C0                     
 13942                           ;mcc_generated_files/mcc.c: 65:     TMR3_Initialize();
 13943  0059C0  EC6D  F02E         	call	_TMR3_Initialize	;wreg free
 13944                           
 13945                           ;mcc_generated_files/mcc.c: 66:     PWM5_Initialize();
 13946  0059C4  EC0E  F031         	call	_PWM5_Initialize	;wreg free
 13947  0059C8                     
 13948                           ;mcc_generated_files/mcc.c: 67:     TMR5_Initialize();
 13949  0059C8  ECEB  F02C         	call	_TMR5_Initialize	;wreg free
 13950  0059CC                     
 13951                           ;mcc_generated_files/mcc.c: 68:     PWM7_Initialize();
 13952  0059CC  ECF6  F030         	call	_PWM7_Initialize	;wreg free
 13953                           
 13954                           ;mcc_generated_files/mcc.c: 69:     UART1_Initialize();
 13955  0059D0  ECFC  F029         	call	_UART1_Initialize	;wreg free
 13956  0059D4  0012               	return		;funcret
 13957  0059D6                     __end_of_SYSTEM_Initialize:
 13958                           	callstack 0
 13959                           
 13960 ;; *************** function _UART1_Initialize *****************
 13961 ;; Defined at:
 13962 ;;		line 87 in file "mcc_generated_files/uart1.c"
 13963 ;; Parameters:    Size  Location     Type
 13964 ;;		None
 13965 ;; Auto vars:     Size  Location     Type
 13966 ;;		None
 13967 ;; Return value:  Size  Location     Type
 13968 ;;                  1    wreg      void 
 13969 ;; Registers used:
 13970 ;;		wreg, status,2, status,0, cstack
 13971 ;; Tracked objects:
 13972 ;;		On entry : 0/0
 13973 ;;		On exit  : 0/0
 13974 ;;		Unchanged: 0/0
 13975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13980 ;;Total ram usage:        0 bytes
 13981 ;; Hardware stack levels used: 1
 13982 ;; Hardware stack levels required when called: 9
 13983 ;; This function calls:
 13984 ;;		_UART1_SetErrorHandler
 13985 ;;		_UART1_SetFramingErrorHandler
 13986 ;;		_UART1_SetOverrunErrorHandler
 13987 ;;		_UART1_SetRxInterruptHandler
 13988 ;;		_UART1_SetTxInterruptHandler
 13989 ;; This function is called by:
 13990 ;;		_SYSTEM_Initialize
 13991 ;; This function uses a non-reentrant model
 13992 ;;
 13993                           
 13994                           	psect	text55
 13995  0053F8                     __ptext55:
 13996                           	callstack 0
 13997  0053F8                     _UART1_Initialize:
 13998                           	callstack 20
 13999  0053F8                     
 14000                           ;mcc_generated_files/uart1.c: 90:     PIE3bits.U1RXIE = 0;
 14001  0053F8  0139               	movlb	57	; () banked
 14002  0053FA  9793               	bcf	147,3,b	;volatile
 14003  0053FC                     
 14004                           ; BSR set to: 57
 14005                           ;mcc_generated_files/uart1.c: 91:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 14006  0053FC  0E20               	movlw	low _UART1_Receive_ISR
 14007  0053FE  6E14               	movwf	UART1_SetRxInterruptHandler@InterruptHandler^0,c
 14008  005400  0E51               	movlw	high _UART1_Receive_ISR
 14009  005402  6E15               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)^0,c
 14010  005404  EC3D  F031         	call	_UART1_SetRxInterruptHandler	;wreg free
 14011  005408                     
 14012                           ;mcc_generated_files/uart1.c: 92:     PIE3bits.U1TXIE = 0;
 14013  005408  0139               	movlb	57	; () banked
 14014  00540A  9993               	bcf	147,4,b	;volatile
 14015                           
 14016                           ;mcc_generated_files/uart1.c: 93:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 14017  00540C  0EF6               	movlw	low _UART1_Transmit_ISR
 14018  00540E  6E14               	movwf	UART1_SetTxInterruptHandler@InterruptHandler^0,c
 14019  005410  0E5A               	movlw	high _UART1_Transmit_ISR
 14020  005412  6E15               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)^0,c
 14021  005414  EC38  F031         	call	_UART1_SetTxInterruptHandler	;wreg free
 14022  005418                     
 14023                           ;mcc_generated_files/uart1.c: 98:     U1P1L = 0x00;
 14024  005418  0E00               	movlw	0
 14025  00541A  013D               	movlb	61	; () banked
 14026  00541C  6FEC               	movwf	236,b	;volatile
 14027  00541E                     
 14028                           ; BSR set to: 61
 14029                           ;mcc_generated_files/uart1.c: 101:     U1P1H = 0x00;
 14030  00541E  0E00               	movlw	0
 14031  005420  6FED               	movwf	237,b	;volatile
 14032  005422                     
 14033                           ; BSR set to: 61
 14034                           ;mcc_generated_files/uart1.c: 104:     U1P2L = 0x00;
 14035  005422  0E00               	movlw	0
 14036  005424  6FEE               	movwf	238,b	;volatile
 14037  005426                     
 14038                           ; BSR set to: 61
 14039                           ;mcc_generated_files/uart1.c: 107:     U1P2H = 0x00;
 14040  005426  0E00               	movlw	0
 14041  005428  6FEF               	movwf	239,b	;volatile
 14042  00542A                     
 14043                           ; BSR set to: 61
 14044                           ;mcc_generated_files/uart1.c: 110:     U1P3L = 0x00;
 14045  00542A  0E00               	movlw	0
 14046  00542C  6FF0               	movwf	240,b	;volatile
 14047  00542E                     
 14048                           ; BSR set to: 61
 14049                           ;mcc_generated_files/uart1.c: 113:     U1P3H = 0x00;
 14050  00542E  0E00               	movlw	0
 14051  005430  6FF1               	movwf	241,b	;volatile
 14052  005432                     
 14053                           ; BSR set to: 61
 14054                           ;mcc_generated_files/uart1.c: 116:     U1CON0 = 0xB0;
 14055  005432  0EB0               	movlw	176
 14056  005434  6FF2               	movwf	242,b	;volatile
 14057  005436                     
 14058                           ; BSR set to: 61
 14059                           ;mcc_generated_files/uart1.c: 119:     U1CON1 = 0x80;
 14060  005436  0E80               	movlw	128
 14061  005438  6FF3               	movwf	243,b	;volatile
 14062  00543A                     
 14063                           ; BSR set to: 61
 14064                           ;mcc_generated_files/uart1.c: 122:     U1CON2 = 0x00;
 14065  00543A  0E00               	movlw	0
 14066  00543C  6FF4               	movwf	244,b	;volatile
 14067  00543E                     
 14068                           ; BSR set to: 61
 14069                           ;mcc_generated_files/uart1.c: 125:     U1BRGL = 0x8A;
 14070  00543E  0E8A               	movlw	138
 14071  005440  6FF5               	movwf	245,b	;volatile
 14072  005442                     
 14073                           ; BSR set to: 61
 14074                           ;mcc_generated_files/uart1.c: 128:     U1BRGH = 0x00;
 14075  005442  0E00               	movlw	0
 14076  005444  6FF6               	movwf	246,b	;volatile
 14077  005446                     
 14078                           ; BSR set to: 61
 14079                           ;mcc_generated_files/uart1.c: 131:     U1FIFO = 0x00;
 14080  005446  0E00               	movlw	0
 14081  005448  6FF7               	movwf	247,b	;volatile
 14082  00544A                     
 14083                           ; BSR set to: 61
 14084                           ;mcc_generated_files/uart1.c: 134:     U1UIR = 0x00;
 14085  00544A  0E00               	movlw	0
 14086  00544C  6FF8               	movwf	248,b	;volatile
 14087  00544E                     
 14088                           ; BSR set to: 61
 14089                           ;mcc_generated_files/uart1.c: 137:     U1ERRIR = 0x00;
 14090  00544E  0E00               	movlw	0
 14091  005450  6FF9               	movwf	249,b	;volatile
 14092  005452                     
 14093                           ; BSR set to: 61
 14094                           ;mcc_generated_files/uart1.c: 140:     U1ERRIE = 0x00;
 14095  005452  0E00               	movlw	0
 14096  005454  6FFA               	movwf	250,b	;volatile
 14097  005456                     
 14098                           ; BSR set to: 61
 14099                           ;mcc_generated_files/uart1.c: 143:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
 14100  005456  0ED2               	movlw	low _UART1_DefaultFramingErrorHandler
 14101  005458  6E14               	movwf	UART1_SetFramingErrorHandler@interruptHandler^0,c
 14102  00545A  0E62               	movlw	high _UART1_DefaultFramingErrorHandler
 14103  00545C  6E15               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^0,c
 14104  00545E  EC47  F031         	call	_UART1_SetFramingErrorHandler	;wreg free
 14105  005462                     
 14106                           ;mcc_generated_files/uart1.c: 144:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
 14107  005462  0ED0               	movlw	low _UART1_DefaultOverrunErrorHandler
 14108  005464  6E14               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^0,c
 14109  005466  0E62               	movlw	high _UART1_DefaultOverrunErrorHandler
 14110  005468  6E15               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
 14111  00546A  EC42  F031         	call	_UART1_SetOverrunErrorHandler	;wreg free
 14112  00546E                     
 14113                           ;mcc_generated_files/uart1.c: 145:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
 14114  00546E  0ECA               	movlw	low _UART1_DefaultErrorHandler
 14115  005470  6E14               	movwf	UART1_SetErrorHandler@interruptHandler^0,c
 14116  005472  0E62               	movlw	high _UART1_DefaultErrorHandler
 14117  005474  6E15               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^0,c
 14118  005476  EC4C  F031         	call	_UART1_SetErrorHandler	;wreg free
 14119                           
 14120                           ;mcc_generated_files/uart1.c: 147:     uart1RxLastError.status = 0;
 14121  00547A  0E00               	movlw	0
 14122  00547C  6E42               	movwf	_uart1RxLastError^0,c	;volatile
 14123                           
 14124                           ;mcc_generated_files/uart1.c: 150:     uart1TxHead = 0;
 14125  00547E  0E00               	movlw	0
 14126  005480  6E47               	movwf	_uart1TxHead^0,c	;volatile
 14127                           
 14128                           ;mcc_generated_files/uart1.c: 151:     uart1TxTail = 0;
 14129  005482  0E00               	movlw	0
 14130  005484  6E46               	movwf	_uart1TxTail^0,c	;volatile
 14131                           
 14132                           ;mcc_generated_files/uart1.c: 152:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 14133  005486  0E08               	movlw	8
 14134  005488  6E4C               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 14135                           
 14136                           ;mcc_generated_files/uart1.c: 153:     uart1RxHead = 0;
 14137  00548A  0E00               	movlw	0
 14138  00548C  6E45               	movwf	_uart1RxHead^0,c	;volatile
 14139                           
 14140                           ;mcc_generated_files/uart1.c: 154:     uart1RxTail = 0;
 14141  00548E  0E00               	movlw	0
 14142  005490  6E44               	movwf	_uart1RxTail^0,c	;volatile
 14143                           
 14144                           ;mcc_generated_files/uart1.c: 155:     uart1RxCount = 0;
 14145  005492  0E00               	movlw	0
 14146  005494  6E43               	movwf	_uart1RxCount^0,c	;volatile
 14147  005496                     
 14148                           ;mcc_generated_files/uart1.c: 158:     PIE3bits.U1RXIE = 1;
 14149  005496  0139               	movlb	57	; () banked
 14150  005498  8793               	bsf	147,3,b	;volatile
 14151  00549A                     
 14152                           ; BSR set to: 57
 14153  00549A  0012               	return		;funcret
 14154  00549C                     __end_of_UART1_Initialize:
 14155                           	callstack 0
 14156                           
 14157 ;; *************** function _UART1_SetTxInterruptHandler *****************
 14158 ;; Defined at:
 14159 ;;		line 333 in file "mcc_generated_files/uart1.c"
 14160 ;; Parameters:    Size  Location     Type
 14161 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
 14162 ;;		 -> UART1_Transmit_ISR(1), 
 14163 ;; Auto vars:     Size  Location     Type
 14164 ;;		None
 14165 ;; Return value:  Size  Location     Type
 14166 ;;                  1    wreg      void 
 14167 ;; Registers used:
 14168 ;;		wreg, status,2, status,0
 14169 ;; Tracked objects:
 14170 ;;		On entry : 0/0
 14171 ;;		On exit  : 0/0
 14172 ;;		Unchanged: 0/0
 14173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14174 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14177 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14178 ;;Total ram usage:        2 bytes
 14179 ;; Hardware stack levels used: 1
 14180 ;; Hardware stack levels required when called: 8
 14181 ;; This function calls:
 14182 ;;		Nothing
 14183 ;; This function is called by:
 14184 ;;		_UART1_Initialize
 14185 ;; This function uses a non-reentrant model
 14186 ;;
 14187                           
 14188                           	psect	text56
 14189  006270                     __ptext56:
 14190                           	callstack 0
 14191  006270                     _UART1_SetTxInterruptHandler:
 14192                           	callstack 20
 14193  006270                     
 14194                           ;mcc_generated_files/uart1.c: 334:     UART1_TxInterruptHandler = InterruptHandler;
 14195  006270  C014  F1A0         	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
 14196  006274  C015  F1A1         	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
 14197  006278  0012               	return		;funcret
 14198  00627A                     __end_of_UART1_SetTxInterruptHandler:
 14199                           	callstack 0
 14200                           
 14201 ;; *************** function _UART1_SetRxInterruptHandler *****************
 14202 ;; Defined at:
 14203 ;;		line 329 in file "mcc_generated_files/uart1.c"
 14204 ;; Parameters:    Size  Location     Type
 14205 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
 14206 ;;		 -> UART1_Receive_ISR(1), 
 14207 ;; Auto vars:     Size  Location     Type
 14208 ;;		None
 14209 ;; Return value:  Size  Location     Type
 14210 ;;                  1    wreg      void 
 14211 ;; Registers used:
 14212 ;;		wreg, status,2, status,0
 14213 ;; Tracked objects:
 14214 ;;		On entry : 0/0
 14215 ;;		On exit  : 0/0
 14216 ;;		Unchanged: 0/0
 14217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14218 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14221 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14222 ;;Total ram usage:        2 bytes
 14223 ;; Hardware stack levels used: 1
 14224 ;; Hardware stack levels required when called: 8
 14225 ;; This function calls:
 14226 ;;		Nothing
 14227 ;; This function is called by:
 14228 ;;		_UART1_Initialize
 14229 ;; This function uses a non-reentrant model
 14230 ;;
 14231                           
 14232                           	psect	text57
 14233  00627A                     __ptext57:
 14234                           	callstack 0
 14235  00627A                     _UART1_SetRxInterruptHandler:
 14236                           	callstack 20
 14237  00627A                     
 14238                           ;mcc_generated_files/uart1.c: 330:     UART1_RxInterruptHandler = InterruptHandler;
 14239  00627A  C014  F1A2         	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
 14240  00627E  C015  F1A3         	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
 14241  006282  0012               	return		;funcret
 14242  006284                     __end_of_UART1_SetRxInterruptHandler:
 14243                           	callstack 0
 14244                           
 14245 ;; *************** function _UART1_SetOverrunErrorHandler *****************
 14246 ;; Defined at:
 14247 ;;		line 319 in file "mcc_generated_files/uart1.c"
 14248 ;; Parameters:    Size  Location     Type
 14249 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
 14250 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
 14251 ;; Auto vars:     Size  Location     Type
 14252 ;;		None
 14253 ;; Return value:  Size  Location     Type
 14254 ;;                  1    wreg      void 
 14255 ;; Registers used:
 14256 ;;		wreg, status,2, status,0
 14257 ;; Tracked objects:
 14258 ;;		On entry : 0/0
 14259 ;;		On exit  : 0/0
 14260 ;;		Unchanged: 0/0
 14261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14262 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14265 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14266 ;;Total ram usage:        2 bytes
 14267 ;; Hardware stack levels used: 1
 14268 ;; Hardware stack levels required when called: 8
 14269 ;; This function calls:
 14270 ;;		Nothing
 14271 ;; This function is called by:
 14272 ;;		_UART1_Initialize
 14273 ;; This function uses a non-reentrant model
 14274 ;;
 14275                           
 14276                           	psect	text58
 14277  006284                     __ptext58:
 14278                           	callstack 0
 14279  006284                     _UART1_SetOverrunErrorHandler:
 14280                           	callstack 20
 14281  006284                     
 14282                           ;mcc_generated_files/uart1.c: 320:     UART1_OverrunErrorHandler = interruptHandler;
 14283  006284  C014  F19C         	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
 14284  006288  C015  F19D         	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
 14285  00628C  0012               	return		;funcret
 14286  00628E                     __end_of_UART1_SetOverrunErrorHandler:
 14287                           	callstack 0
 14288                           
 14289 ;; *************** function _UART1_SetFramingErrorHandler *****************
 14290 ;; Defined at:
 14291 ;;		line 315 in file "mcc_generated_files/uart1.c"
 14292 ;; Parameters:    Size  Location     Type
 14293 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
 14294 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
 14295 ;; Auto vars:     Size  Location     Type
 14296 ;;		None
 14297 ;; Return value:  Size  Location     Type
 14298 ;;                  1    wreg      void 
 14299 ;; Registers used:
 14300 ;;		wreg, status,2, status,0
 14301 ;; Tracked objects:
 14302 ;;		On entry : 0/0
 14303 ;;		On exit  : 0/0
 14304 ;;		Unchanged: 0/0
 14305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14306 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14309 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14310 ;;Total ram usage:        2 bytes
 14311 ;; Hardware stack levels used: 1
 14312 ;; Hardware stack levels required when called: 8
 14313 ;; This function calls:
 14314 ;;		Nothing
 14315 ;; This function is called by:
 14316 ;;		_UART1_Initialize
 14317 ;; This function uses a non-reentrant model
 14318 ;;
 14319                           
 14320                           	psect	text59
 14321  00628E                     __ptext59:
 14322                           	callstack 0
 14323  00628E                     _UART1_SetFramingErrorHandler:
 14324                           	callstack 20
 14325  00628E                     
 14326                           ;mcc_generated_files/uart1.c: 316:     UART1_FramingErrorHandler = interruptHandler;
 14327  00628E  C014  F19E         	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
 14328  006292  C015  F19F         	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
 14329  006296  0012               	return		;funcret
 14330  006298                     __end_of_UART1_SetFramingErrorHandler:
 14331                           	callstack 0
 14332                           
 14333 ;; *************** function _UART1_SetErrorHandler *****************
 14334 ;; Defined at:
 14335 ;;		line 323 in file "mcc_generated_files/uart1.c"
 14336 ;; Parameters:    Size  Location     Type
 14337 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
 14338 ;;		 -> UART1_DefaultErrorHandler(1), 
 14339 ;; Auto vars:     Size  Location     Type
 14340 ;;		None
 14341 ;; Return value:  Size  Location     Type
 14342 ;;                  1    wreg      void 
 14343 ;; Registers used:
 14344 ;;		wreg, status,2, status,0
 14345 ;; Tracked objects:
 14346 ;;		On entry : 0/0
 14347 ;;		On exit  : 0/0
 14348 ;;		Unchanged: 0/0
 14349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14350 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14353 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14354 ;;Total ram usage:        2 bytes
 14355 ;; Hardware stack levels used: 1
 14356 ;; Hardware stack levels required when called: 8
 14357 ;; This function calls:
 14358 ;;		Nothing
 14359 ;; This function is called by:
 14360 ;;		_UART1_Initialize
 14361 ;; This function uses a non-reentrant model
 14362 ;;
 14363                           
 14364                           	psect	text60
 14365  006298                     __ptext60:
 14366                           	callstack 0
 14367  006298                     _UART1_SetErrorHandler:
 14368                           	callstack 20
 14369  006298                     
 14370                           ;mcc_generated_files/uart1.c: 324:     UART1_ErrorHandler = interruptHandler;
 14371  006298  C014  F19A         	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
 14372  00629C  C015  F19B         	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
 14373  0062A0  0012               	return		;funcret
 14374  0062A2                     __end_of_UART1_SetErrorHandler:
 14375                           	callstack 0
 14376                           
 14377 ;; *************** function _TMR5_Initialize *****************
 14378 ;; Defined at:
 14379 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 14380 ;; Parameters:    Size  Location     Type
 14381 ;;		None
 14382 ;; Auto vars:     Size  Location     Type
 14383 ;;		None
 14384 ;; Return value:  Size  Location     Type
 14385 ;;                  1    wreg      void 
 14386 ;; Registers used:
 14387 ;;		wreg, status,2, status,0, cstack
 14388 ;; Tracked objects:
 14389 ;;		On entry : 0/0
 14390 ;;		On exit  : 0/0
 14391 ;;		Unchanged: 0/0
 14392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14395 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14396 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14397 ;;Total ram usage:        2 bytes
 14398 ;; Hardware stack levels used: 1
 14399 ;; Hardware stack levels required when called: 9
 14400 ;; This function calls:
 14401 ;;		_TMR5_SetGateInterruptHandler
 14402 ;; This function is called by:
 14403 ;;		_SYSTEM_Initialize
 14404 ;; This function uses a non-reentrant model
 14405 ;;
 14406                           
 14407                           	psect	text61
 14408  0059D6                     __ptext61:
 14409                           	callstack 0
 14410  0059D6                     _TMR5_Initialize:
 14411                           	callstack 20
 14412  0059D6                     
 14413                           ;mcc_generated_files/tmr5.c: 72:     T5GCON = 0xC0;
 14414  0059D6  0EC0               	movlw	192
 14415  0059D8  6E9B               	movwf	155,c	;volatile
 14416                           
 14417                           ;mcc_generated_files/tmr5.c: 75:     T5GATE = 0x00;
 14418  0059DA  0E00               	movlw	0
 14419  0059DC  6E9C               	movwf	156,c	;volatile
 14420                           
 14421                           ;mcc_generated_files/tmr5.c: 78:     T5CLK = 0x05;
 14422  0059DE  0E05               	movlw	5
 14423  0059E0  6E9D               	movwf	157,c	;volatile
 14424                           
 14425                           ;mcc_generated_files/tmr5.c: 81:     TMR5H = 0x00;
 14426  0059E2  0E00               	movlw	0
 14427  0059E4  6E99               	movwf	153,c	;volatile
 14428                           
 14429                           ;mcc_generated_files/tmr5.c: 84:     TMR5L = 0x00;
 14430  0059E6  0E00               	movlw	0
 14431  0059E8  6E98               	movwf	152,c	;volatile
 14432  0059EA                     
 14433                           ;mcc_generated_files/tmr5.c: 87:     PIR8bits.TMR5IF = 0;
 14434  0059EA  0139               	movlb	57	; () banked
 14435  0059EC  9DA8               	bcf	168,6,b	;volatile
 14436  0059EE                     
 14437                           ; BSR set to: 57
 14438                           ;mcc_generated_files/tmr5.c: 90:     timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 14439  0059EE  5098               	movf	152,w,c	;volatile
 14440  0059F0  006F FE64  F016    	movff	16281,??_TMR5_Initialize	;volatile
 14441  0059F6  6A17               	clrf	(??_TMR5_Initialize+1)^0,c
 14442  0059F8  C016  F017         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 14443  0059FC  6A16               	clrf	??_TMR5_Initialize^0,c
 14444  0059FE  1016               	iorwf	??_TMR5_Initialize^0,w,c
 14445  005A00  0101               	movlb	1	; () banked
 14446  005A02  6F94               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 14447  005A04  5017               	movf	(??_TMR5_Initialize+1)^0,w,c
 14448  005A06  6F95               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 14449  005A08                     
 14450                           ; BSR set to: 1
 14451                           ;mcc_generated_files/tmr5.c: 93:     PIR8bits.TMR5GIF = 0;
 14452  005A08  0139               	movlb	57	; () banked
 14453  005A0A  9FA8               	bcf	168,7,b	;volatile
 14454  005A0C                     
 14455                           ; BSR set to: 57
 14456                           ;mcc_generated_files/tmr5.c: 96:     PIE8bits.TMR5GIE = 1;
 14457  005A0C  8F98               	bsf	152,7,b	;volatile
 14458  005A0E                     
 14459                           ; BSR set to: 57
 14460                           ;mcc_generated_files/tmr5.c: 99:     TMR5_SetGateInterruptHandler(TMR5_DefaultGateInterr
      +                          uptHandler);
 14461  005A0E  0E9A               	movlw	low _TMR5_DefaultGateInterruptHandler
 14462  005A10  6E14               	movwf	TMR5_SetGateInterruptHandler@InterruptHandler^0,c
 14463  005A12  0E61               	movlw	high _TMR5_DefaultGateInterruptHandler
 14464  005A14  6E15               	movwf	(TMR5_SetGateInterruptHandler@InterruptHandler+1)^0,c
 14465  005A16  EC51  F031         	call	_TMR5_SetGateInterruptHandler	;wreg free
 14466  005A1A                     
 14467                           ;mcc_generated_files/tmr5.c: 102:     T5CON = 0x03;
 14468  005A1A  0E03               	movlw	3
 14469  005A1C  6E9A               	movwf	154,c	;volatile
 14470  005A1E  0012               	return		;funcret
 14471  005A20                     __end_of_TMR5_Initialize:
 14472                           	callstack 0
 14473                           
 14474 ;; *************** function _TMR5_SetGateInterruptHandler *****************
 14475 ;; Defined at:
 14476 ;;		line 186 in file "mcc_generated_files/tmr5.c"
 14477 ;; Parameters:    Size  Location     Type
 14478 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
 14479 ;;		 -> TMR5_DefaultGateInterruptHandler(1), 
 14480 ;; Auto vars:     Size  Location     Type
 14481 ;;		None
 14482 ;; Return value:  Size  Location     Type
 14483 ;;                  1    wreg      void 
 14484 ;; Registers used:
 14485 ;;		wreg, status,2, status,0
 14486 ;; Tracked objects:
 14487 ;;		On entry : 0/0
 14488 ;;		On exit  : 0/0
 14489 ;;		Unchanged: 0/0
 14490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14491 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14494 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14495 ;;Total ram usage:        2 bytes
 14496 ;; Hardware stack levels used: 1
 14497 ;; Hardware stack levels required when called: 8
 14498 ;; This function calls:
 14499 ;;		Nothing
 14500 ;; This function is called by:
 14501 ;;		_TMR5_Initialize
 14502 ;; This function uses a non-reentrant model
 14503 ;;
 14504                           
 14505                           	psect	text62
 14506  0062A2                     __ptext62:
 14507                           	callstack 0
 14508  0062A2                     _TMR5_SetGateInterruptHandler:
 14509                           	callstack 20
 14510  0062A2                     
 14511                           ;mcc_generated_files/tmr5.c: 187:     TMR5_GateInterruptHandler = InterruptHandler;
 14512  0062A2  C014  F192         	movff	TMR5_SetGateInterruptHandler@InterruptHandler,_TMR5_GateInterruptHandler
 14513  0062A6  C015  F193         	movff	TMR5_SetGateInterruptHandler@InterruptHandler+1,_TMR5_GateInterruptHandler+1
 14514  0062AA  0012               	return		;funcret
 14515  0062AC                     __end_of_TMR5_SetGateInterruptHandler:
 14516                           	callstack 0
 14517                           
 14518 ;; *************** function _TMR4_Initialize *****************
 14519 ;; Defined at:
 14520 ;;		line 65 in file "mcc_generated_files/tmr4.c"
 14521 ;; Parameters:    Size  Location     Type
 14522 ;;		None
 14523 ;; Auto vars:     Size  Location     Type
 14524 ;;		None
 14525 ;; Return value:  Size  Location     Type
 14526 ;;                  1    wreg      void 
 14527 ;; Registers used:
 14528 ;;		wreg, status,2, status,0, cstack
 14529 ;; Tracked objects:
 14530 ;;		On entry : 0/0
 14531 ;;		On exit  : 0/0
 14532 ;;		Unchanged: 0/0
 14533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14538 ;;Total ram usage:        0 bytes
 14539 ;; Hardware stack levels used: 1
 14540 ;; Hardware stack levels required when called: 9
 14541 ;; This function calls:
 14542 ;;		_TMR4_SetInterruptHandler
 14543 ;; This function is called by:
 14544 ;;		_SYSTEM_Initialize
 14545 ;; This function uses a non-reentrant model
 14546 ;;
 14547                           
 14548                           	psect	text63
 14549  00600C                     __ptext63:
 14550                           	callstack 0
 14551  00600C                     _TMR4_Initialize:
 14552                           	callstack 20
 14553  00600C                     
 14554                           ;mcc_generated_files/tmr4.c: 70:     T4CLKCON = 0x01;
 14555  00600C  0E01               	movlw	1
 14556  00600E  6EA2               	movwf	162,c	;volatile
 14557                           
 14558                           ;mcc_generated_files/tmr4.c: 73:     T4HLT = 0x00;
 14559  006010  0E00               	movlw	0
 14560  006012  6EA1               	movwf	161,c	;volatile
 14561                           
 14562                           ;mcc_generated_files/tmr4.c: 76:     T4RST = 0x00;
 14563  006014  0E00               	movlw	0
 14564  006016  6EA3               	movwf	163,c	;volatile
 14565                           
 14566                           ;mcc_generated_files/tmr4.c: 79:     T4PR = 0xF9;
 14567  006018  0EF9               	movlw	249
 14568  00601A  6E9F               	movwf	159,c	;volatile
 14569                           
 14570                           ;mcc_generated_files/tmr4.c: 82:     T4TMR = 0x00;
 14571  00601C  0E00               	movlw	0
 14572  00601E  6E9E               	movwf	158,c	;volatile
 14573  006020                     
 14574                           ;mcc_generated_files/tmr4.c: 85:     PIR7bits.TMR4IF = 0;
 14575  006020  0139               	movlb	57	; () banked
 14576  006022  91A7               	bcf	167,0,b	;volatile
 14577  006024                     
 14578                           ; BSR set to: 57
 14579                           ;mcc_generated_files/tmr4.c: 88:     PIE7bits.TMR4IE = 1;
 14580  006024  8197               	bsf	151,0,b	;volatile
 14581  006026                     
 14582                           ; BSR set to: 57
 14583                           ;mcc_generated_files/tmr4.c: 91:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
 14584  006026  0ED4               	movlw	low _TMR4_DefaultInterruptHandler
 14585  006028  6E14               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
 14586  00602A  0E62               	movlw	high _TMR4_DefaultInterruptHandler
 14587  00602C  6E15               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
 14588  00602E  EC56  F031         	call	_TMR4_SetInterruptHandler	;wreg free
 14589  006032                     
 14590                           ;mcc_generated_files/tmr4.c: 94:     T4CON = 0xE0;
 14591  006032  0EE0               	movlw	224
 14592  006034  6EA0               	movwf	160,c	;volatile
 14593  006036  0012               	return		;funcret
 14594  006038                     __end_of_TMR4_Initialize:
 14595                           	callstack 0
 14596                           
 14597 ;; *************** function _TMR4_SetInterruptHandler *****************
 14598 ;; Defined at:
 14599 ;;		line 194 in file "mcc_generated_files/tmr4.c"
 14600 ;; Parameters:    Size  Location     Type
 14601 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
 14602 ;;		 -> TMR4_10msISR(1), TMR4_DefaultInterruptHandler(1), 
 14603 ;; Auto vars:     Size  Location     Type
 14604 ;;		None
 14605 ;; Return value:  Size  Location     Type
 14606 ;;                  1    wreg      void 
 14607 ;; Registers used:
 14608 ;;		wreg, status,2, status,0
 14609 ;; Tracked objects:
 14610 ;;		On entry : 0/0
 14611 ;;		On exit  : 0/0
 14612 ;;		Unchanged: 0/0
 14613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14614 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14617 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14618 ;;Total ram usage:        2 bytes
 14619 ;; Hardware stack levels used: 1
 14620 ;; Hardware stack levels required when called: 8
 14621 ;; This function calls:
 14622 ;;		Nothing
 14623 ;; This function is called by:
 14624 ;;		_TMR4_Initialize
 14625 ;;		_main
 14626 ;; This function uses a non-reentrant model
 14627 ;;
 14628                           
 14629                           	psect	text64
 14630  0062AC                     __ptext64:
 14631                           	callstack 0
 14632  0062AC                     _TMR4_SetInterruptHandler:
 14633                           	callstack 22
 14634  0062AC                     
 14635                           ;mcc_generated_files/tmr4.c: 195:     TMR4_InterruptHandler = InterruptHandler;
 14636  0062AC  C014  F18E         	movff	TMR4_SetInterruptHandler@InterruptHandler,_TMR4_InterruptHandler
 14637  0062B0  C015  F18F         	movff	TMR4_SetInterruptHandler@InterruptHandler+1,_TMR4_InterruptHandler+1
 14638  0062B4  0012               	return		;funcret
 14639  0062B6                     __end_of_TMR4_SetInterruptHandler:
 14640                           	callstack 0
 14641                           
 14642 ;; *************** function _TMR3_Initialize *****************
 14643 ;; Defined at:
 14644 ;;		line 63 in file "mcc_generated_files/tmr3.c"
 14645 ;; Parameters:    Size  Location     Type
 14646 ;;		None
 14647 ;; Auto vars:     Size  Location     Type
 14648 ;;		None
 14649 ;; Return value:  Size  Location     Type
 14650 ;;                  1    wreg      void 
 14651 ;; Registers used:
 14652 ;;		wreg, status,2, status,0
 14653 ;; Tracked objects:
 14654 ;;		On entry : 0/0
 14655 ;;		On exit  : 0/0
 14656 ;;		Unchanged: 0/0
 14657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14660 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14661 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14662 ;;Total ram usage:        2 bytes
 14663 ;; Hardware stack levels used: 1
 14664 ;; Hardware stack levels required when called: 8
 14665 ;; This function calls:
 14666 ;;		Nothing
 14667 ;; This function is called by:
 14668 ;;		_SYSTEM_Initialize
 14669 ;; This function uses a non-reentrant model
 14670 ;;
 14671                           
 14672                           	psect	text65
 14673  005CDA                     __ptext65:
 14674                           	callstack 0
 14675  005CDA                     _TMR3_Initialize:
 14676                           	callstack 21
 14677  005CDA                     
 14678                           ;mcc_generated_files/tmr3.c: 68:     T3GCON = 0x00;
 14679  005CDA  0E00               	movlw	0
 14680  005CDC  6EA7               	movwf	167,c	;volatile
 14681                           
 14682                           ;mcc_generated_files/tmr3.c: 71:     T3GATE = 0x00;
 14683  005CDE  0E00               	movlw	0
 14684  005CE0  6EA8               	movwf	168,c	;volatile
 14685                           
 14686                           ;mcc_generated_files/tmr3.c: 74:     T3CLK = 0x05;
 14687  005CE2  0E05               	movlw	5
 14688  005CE4  6EA9               	movwf	169,c	;volatile
 14689                           
 14690                           ;mcc_generated_files/tmr3.c: 77:     TMR3H = 0x00;
 14691  005CE6  0E00               	movlw	0
 14692  005CE8  6EA5               	movwf	165,c	;volatile
 14693                           
 14694                           ;mcc_generated_files/tmr3.c: 80:     TMR3L = 0x00;
 14695  005CEA  0E00               	movlw	0
 14696  005CEC  6EA4               	movwf	164,c	;volatile
 14697  005CEE                     
 14698                           ;mcc_generated_files/tmr3.c: 83:     PIR6bits.TMR3IF = 0;
 14699  005CEE  0139               	movlb	57	; () banked
 14700  005CF0  9DA6               	bcf	166,6,b	;volatile
 14701  005CF2                     
 14702                           ; BSR set to: 57
 14703                           ;mcc_generated_files/tmr3.c: 86:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 14704  005CF2  50A4               	movf	164,w,c	;volatile
 14705  005CF4  006F FE94  F014    	movff	16293,??_TMR3_Initialize	;volatile
 14706  005CFA  6A15               	clrf	(??_TMR3_Initialize+1)^0,c
 14707  005CFC  C014  F015         	movff	??_TMR3_Initialize,??_TMR3_Initialize+1
 14708  005D00  6A14               	clrf	??_TMR3_Initialize^0,c
 14709  005D02  1014               	iorwf	??_TMR3_Initialize^0,w,c
 14710  005D04  0101               	movlb	1	; () banked
 14711  005D06  6F90               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 14712  005D08  5015               	movf	(??_TMR3_Initialize+1)^0,w,c
 14713  005D0A  6F91               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 14714  005D0C                     
 14715                           ; BSR set to: 1
 14716                           ;mcc_generated_files/tmr3.c: 89:     T3CON = 0x01;
 14717  005D0C  0E01               	movlw	1
 14718  005D0E  6EA6               	movwf	166,c	;volatile
 14719  005D10                     
 14720                           ; BSR set to: 1
 14721  005D10  0012               	return		;funcret
 14722  005D12                     __end_of_TMR3_Initialize:
 14723                           	callstack 0
 14724                           
 14725 ;; *************** function _TMR2_Initialize *****************
 14726 ;; Defined at:
 14727 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 14728 ;; Parameters:    Size  Location     Type
 14729 ;;		None
 14730 ;; Auto vars:     Size  Location     Type
 14731 ;;		None
 14732 ;; Return value:  Size  Location     Type
 14733 ;;                  1    wreg      void 
 14734 ;; Registers used:
 14735 ;;		wreg, status,2
 14736 ;; Tracked objects:
 14737 ;;		On entry : 0/0
 14738 ;;		On exit  : 0/0
 14739 ;;		Unchanged: 0/0
 14740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14745 ;;Total ram usage:        0 bytes
 14746 ;; Hardware stack levels used: 1
 14747 ;; Hardware stack levels required when called: 8
 14748 ;; This function calls:
 14749 ;;		Nothing
 14750 ;; This function is called by:
 14751 ;;		_SYSTEM_Initialize
 14752 ;; This function uses a non-reentrant model
 14753 ;;
 14754                           
 14755                           	psect	text66
 14756  0061B8                     __ptext66:
 14757                           	callstack 0
 14758  0061B8                     _TMR2_Initialize:
 14759                           	callstack 21
 14760  0061B8                     
 14761                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x05;
 14762  0061B8  0E05               	movlw	5
 14763  0061BA  6EAE               	movwf	174,c	;volatile
 14764                           
 14765                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 14766  0061BC  0E00               	movlw	0
 14767  0061BE  6EAD               	movwf	173,c	;volatile
 14768                           
 14769                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 14770  0061C0  0E00               	movlw	0
 14771  0061C2  6EAF               	movwf	175,c	;volatile
 14772  0061C4                     
 14773                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
 14774  0061C4  68AB               	setf	171,c	;volatile
 14775                           
 14776                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 14777  0061C6  0E00               	movlw	0
 14778  0061C8  6EAA               	movwf	170,c	;volatile
 14779  0061CA                     
 14780                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 14781  0061CA  0139               	movlb	57	; () banked
 14782  0061CC  95A4               	bcf	164,2,b	;volatile
 14783                           
 14784                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xB0;
 14785  0061CE  0EB0               	movlw	176
 14786  0061D0  6EAC               	movwf	172,c	;volatile
 14787  0061D2                     
 14788                           ; BSR set to: 57
 14789  0061D2  0012               	return		;funcret
 14790  0061D4                     __end_of_TMR2_Initialize:
 14791                           	callstack 0
 14792                           
 14793 ;; *************** function _SMT1_Initialize *****************
 14794 ;; Defined at:
 14795 ;;		line 60 in file "mcc_generated_files/smt1.c"
 14796 ;; Parameters:    Size  Location     Type
 14797 ;;		None
 14798 ;; Auto vars:     Size  Location     Type
 14799 ;;		None
 14800 ;; Return value:  Size  Location     Type
 14801 ;;                  1    wreg      void 
 14802 ;; Registers used:
 14803 ;;		wreg, status,2
 14804 ;; Tracked objects:
 14805 ;;		On entry : 0/0
 14806 ;;		On exit  : 0/0
 14807 ;;		Unchanged: 0/0
 14808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14813 ;;Total ram usage:        0 bytes
 14814 ;; Hardware stack levels used: 1
 14815 ;; Hardware stack levels required when called: 8
 14816 ;; This function calls:
 14817 ;;		Nothing
 14818 ;; This function is called by:
 14819 ;;		_SYSTEM_Initialize
 14820 ;; This function uses a non-reentrant model
 14821 ;;
 14822                           
 14823                           	psect	text67
 14824  005F52                     __ptext67:
 14825                           	callstack 0
 14826  005F52                     _SMT1_Initialize:
 14827                           	callstack 21
 14828  005F52                     
 14829                           ;mcc_generated_files/smt1.c: 63:     SMT1CON0 = 0x80;
 14830  005F52  0E80               	movlw	128
 14831  005F54  013F               	movlb	63	; () banked
 14832  005F56  6F1E               	movwf	30,b	;volatile
 14833                           
 14834                           ;mcc_generated_files/smt1.c: 66:     SMT1CON1 = 0x42;
 14835  005F58  0E42               	movlw	66
 14836  005F5A  6F1F               	movwf	31,b	;volatile
 14837                           
 14838                           ;mcc_generated_files/smt1.c: 69:     SMT1STAT = 0x00;
 14839  005F5C  0E00               	movlw	0
 14840  005F5E  6F20               	movwf	32,b	;volatile
 14841                           
 14842                           ;mcc_generated_files/smt1.c: 72:     SMT1CLK = 0x04;
 14843  005F60  0E04               	movlw	4
 14844  005F62  6F21               	movwf	33,b	;volatile
 14845                           
 14846                           ;mcc_generated_files/smt1.c: 75:     SMT1WIN = 0x00;
 14847  005F64  0E00               	movlw	0
 14848  005F66  6F23               	movwf	35,b	;volatile
 14849                           
 14850                           ;mcc_generated_files/smt1.c: 78:     SMT1SIG = 0x00;
 14851  005F68  0E00               	movlw	0
 14852  005F6A  6F22               	movwf	34,b	;volatile
 14853                           
 14854                           ;mcc_generated_files/smt1.c: 81:     SMT1PRU = 0x01;
 14855  005F6C  0E01               	movlw	1
 14856  005F6E  6F1D               	movwf	29,b	;volatile
 14857  005F70                     
 14858                           ; BSR set to: 63
 14859                           ;mcc_generated_files/smt1.c: 84:     SMT1PRH = 0xFF;
 14860  005F70  691C               	setf	28,b	;volatile
 14861  005F72                     
 14862                           ; BSR set to: 63
 14863                           ;mcc_generated_files/smt1.c: 87:     SMT1PRL = 0xFF;
 14864  005F72  691B               	setf	27,b	;volatile
 14865  005F74                     
 14866                           ; BSR set to: 63
 14867                           ;mcc_generated_files/smt1.c: 90:     PIE1bits.SMT1IE = 1;
 14868  005F74  0139               	movlb	57	; () banked
 14869  005F76  8B91               	bsf	145,5,b	;volatile
 14870  005F78                     
 14871                           ; BSR set to: 57
 14872                           ;mcc_generated_files/smt1.c: 93:     PIE1bits.SMT1PWAIE = 1;
 14873  005F78  8F91               	bsf	145,7,b	;volatile
 14874  005F7A                     
 14875                           ; BSR set to: 57
 14876                           ;mcc_generated_files/smt1.c: 96:     PIE1bits.SMT1PRAIE = 1;
 14877  005F7A  8D91               	bsf	145,6,b	;volatile
 14878  005F7C                     
 14879                           ; BSR set to: 57
 14880                           ;mcc_generated_files/smt1.c: 99:     SMT1CON1bits.SMT1GO = 1;
 14881  005F7C  013F               	movlb	63	; () banked
 14882  005F7E  8F1F               	bsf	31,7,b	;volatile
 14883  005F80                     
 14884                           ; BSR set to: 63
 14885  005F80  0012               	return		;funcret
 14886  005F82                     __end_of_SMT1_Initialize:
 14887                           	callstack 0
 14888                           
 14889 ;; *************** function _PWM8_Initialize *****************
 14890 ;; Defined at:
 14891 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 14892 ;; Parameters:    Size  Location     Type
 14893 ;;		None
 14894 ;; Auto vars:     Size  Location     Type
 14895 ;;		None
 14896 ;; Return value:  Size  Location     Type
 14897 ;;                  1    wreg      void 
 14898 ;; Registers used:
 14899 ;;		wreg, status,2
 14900 ;; Tracked objects:
 14901 ;;		On entry : 0/0
 14902 ;;		On exit  : 0/0
 14903 ;;		Unchanged: 0/0
 14904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14909 ;;Total ram usage:        0 bytes
 14910 ;; Hardware stack levels used: 1
 14911 ;; Hardware stack levels required when called: 8
 14912 ;; This function calls:
 14913 ;;		Nothing
 14914 ;; This function is called by:
 14915 ;;		_SYSTEM_Initialize
 14916 ;; This function uses a non-reentrant model
 14917 ;;
 14918                           
 14919                           	psect	text68
 14920  0061D4                     __ptext68:
 14921                           	callstack 0
 14922  0061D4                     _PWM8_Initialize:
 14923                           	callstack 21
 14924  0061D4                     
 14925                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 14926  0061D4  0E80               	movlw	128
 14927  0061D6  6E62               	movwf	98,c	;volatile
 14928                           
 14929                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 14930  0061D8  0E00               	movlw	0
 14931  0061DA  6E61               	movwf	97,c	;volatile
 14932                           
 14933                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x00;
 14934  0061DC  0E00               	movlw	0
 14935  0061DE  6E60               	movwf	96,c	;volatile
 14936                           
 14937                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 2;
 14938  0061E0  013F               	movlb	63	; () banked
 14939  0061E2  515F               	movf	95,w,b	;volatile
 14940  0061E4  0B3F               	andlw	-193
 14941  0061E6  0980               	iorlw	128
 14942  0061E8  6F5F               	movwf	95,b	;volatile
 14943  0061EA                     
 14944                           ; BSR set to: 63
 14945  0061EA  0012               	return		;funcret
 14946  0061EC                     __end_of_PWM8_Initialize:
 14947                           	callstack 0
 14948                           
 14949 ;; *************** function _PWM7_Initialize *****************
 14950 ;; Defined at:
 14951 ;;		line 58 in file "mcc_generated_files/pwm7.c"
 14952 ;; Parameters:    Size  Location     Type
 14953 ;;		None
 14954 ;; Auto vars:     Size  Location     Type
 14955 ;;		None
 14956 ;; Return value:  Size  Location     Type
 14957 ;;                  1    wreg      void 
 14958 ;; Registers used:
 14959 ;;		wreg, status,2
 14960 ;; Tracked objects:
 14961 ;;		On entry : 0/0
 14962 ;;		On exit  : 0/0
 14963 ;;		Unchanged: 0/0
 14964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14969 ;;Total ram usage:        0 bytes
 14970 ;; Hardware stack levels used: 1
 14971 ;; Hardware stack levels required when called: 8
 14972 ;; This function calls:
 14973 ;;		Nothing
 14974 ;; This function is called by:
 14975 ;;		_SYSTEM_Initialize
 14976 ;; This function uses a non-reentrant model
 14977 ;;
 14978                           
 14979                           	psect	text69
 14980  0061EC                     __ptext69:
 14981                           	callstack 0
 14982  0061EC                     _PWM7_Initialize:
 14983                           	callstack 21
 14984  0061EC                     
 14985                           ;mcc_generated_files/pwm7.c: 62:     PWM7CON = 0x80;
 14986  0061EC  0E80               	movlw	128
 14987  0061EE  6E66               	movwf	102,c	;volatile
 14988                           
 14989                           ;mcc_generated_files/pwm7.c: 65:     PWM7DCH = 0x00;
 14990  0061F0  0E00               	movlw	0
 14991  0061F2  6E65               	movwf	101,c	;volatile
 14992                           
 14993                           ;mcc_generated_files/pwm7.c: 68:     PWM7DCL = 0x00;
 14994  0061F4  0E00               	movlw	0
 14995  0061F6  6E64               	movwf	100,c	;volatile
 14996                           
 14997                           ;mcc_generated_files/pwm7.c: 71:     CCPTMRS1bits.P7TSEL = 2;
 14998  0061F8  013F               	movlb	63	; () banked
 14999  0061FA  515F               	movf	95,w,b	;volatile
 15000  0061FC  0BCF               	andlw	-49
 15001  0061FE  0920               	iorlw	32
 15002  006200  6F5F               	movwf	95,b	;volatile
 15003  006202                     
 15004                           ; BSR set to: 63
 15005  006202  0012               	return		;funcret
 15006  006204                     __end_of_PWM7_Initialize:
 15007                           	callstack 0
 15008                           
 15009 ;; *************** function _PWM6_Initialize *****************
 15010 ;; Defined at:
 15011 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 15012 ;; Parameters:    Size  Location     Type
 15013 ;;		None
 15014 ;; Auto vars:     Size  Location     Type
 15015 ;;		None
 15016 ;; Return value:  Size  Location     Type
 15017 ;;                  1    wreg      void 
 15018 ;; Registers used:
 15019 ;;		wreg, status,2
 15020 ;; Tracked objects:
 15021 ;;		On entry : 0/0
 15022 ;;		On exit  : 0/0
 15023 ;;		Unchanged: 0/0
 15024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15029 ;;Total ram usage:        0 bytes
 15030 ;; Hardware stack levels used: 1
 15031 ;; Hardware stack levels required when called: 8
 15032 ;; This function calls:
 15033 ;;		Nothing
 15034 ;; This function is called by:
 15035 ;;		_SYSTEM_Initialize
 15036 ;; This function uses a non-reentrant model
 15037 ;;
 15038                           
 15039                           	psect	text70
 15040  006204                     __ptext70:
 15041                           	callstack 0
 15042  006204                     _PWM6_Initialize:
 15043                           	callstack 21
 15044  006204                     
 15045                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
 15046  006204  0E80               	movlw	128
 15047  006206  6E6A               	movwf	106,c	;volatile
 15048                           
 15049                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x59;
 15050  006208  0E59               	movlw	89
 15051  00620A  6E69               	movwf	105,c	;volatile
 15052                           
 15053                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0x40;
 15054  00620C  0E40               	movlw	64
 15055  00620E  6E68               	movwf	104,c	;volatile
 15056                           
 15057                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
 15058  006210  013F               	movlb	63	; () banked
 15059  006212  515F               	movf	95,w,b	;volatile
 15060  006214  0BF3               	andlw	-13
 15061  006216  0904               	iorlw	4
 15062  006218  6F5F               	movwf	95,b	;volatile
 15063  00621A                     
 15064                           ; BSR set to: 63
 15065  00621A  0012               	return		;funcret
 15066  00621C                     __end_of_PWM6_Initialize:
 15067                           	callstack 0
 15068                           
 15069 ;; *************** function _PWM5_Initialize *****************
 15070 ;; Defined at:
 15071 ;;		line 58 in file "mcc_generated_files/pwm5.c"
 15072 ;; Parameters:    Size  Location     Type
 15073 ;;		None
 15074 ;; Auto vars:     Size  Location     Type
 15075 ;;		None
 15076 ;; Return value:  Size  Location     Type
 15077 ;;                  1    wreg      void 
 15078 ;; Registers used:
 15079 ;;		wreg, status,2
 15080 ;; Tracked objects:
 15081 ;;		On entry : 0/0
 15082 ;;		On exit  : 0/0
 15083 ;;		Unchanged: 0/0
 15084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15089 ;;Total ram usage:        0 bytes
 15090 ;; Hardware stack levels used: 1
 15091 ;; Hardware stack levels required when called: 8
 15092 ;; This function calls:
 15093 ;;		Nothing
 15094 ;; This function is called by:
 15095 ;;		_SYSTEM_Initialize
 15096 ;; This function uses a non-reentrant model
 15097 ;;
 15098                           
 15099                           	psect	text71
 15100  00621C                     __ptext71:
 15101                           	callstack 0
 15102  00621C                     _PWM5_Initialize:
 15103                           	callstack 21
 15104  00621C                     
 15105                           ;mcc_generated_files/pwm5.c: 62:     PWM5CON = 0x80;
 15106  00621C  0E80               	movlw	128
 15107  00621E  6E6E               	movwf	110,c	;volatile
 15108                           
 15109                           ;mcc_generated_files/pwm5.c: 65:     PWM5DCH = 0x59;
 15110  006220  0E59               	movlw	89
 15111  006222  6E6D               	movwf	109,c	;volatile
 15112                           
 15113                           ;mcc_generated_files/pwm5.c: 68:     PWM5DCL = 0x40;
 15114  006224  0E40               	movlw	64
 15115  006226  6E6C               	movwf	108,c	;volatile
 15116                           
 15117                           ;mcc_generated_files/pwm5.c: 71:     CCPTMRS1bits.P5TSEL = 1;
 15118  006228  013F               	movlb	63	; () banked
 15119  00622A  515F               	movf	95,w,b	;volatile
 15120  00622C  0BFC               	andlw	-4
 15121  00622E  0901               	iorlw	1
 15122  006230  6F5F               	movwf	95,b	;volatile
 15123  006232                     
 15124                           ; BSR set to: 63
 15125  006232  0012               	return		;funcret
 15126  006234                     __end_of_PWM5_Initialize:
 15127                           	callstack 0
 15128                           
 15129 ;; *************** function _PMD_Initialize *****************
 15130 ;; Defined at:
 15131 ;;		line 86 in file "mcc_generated_files/mcc.c"
 15132 ;; Parameters:    Size  Location     Type
 15133 ;;		None
 15134 ;; Auto vars:     Size  Location     Type
 15135 ;;		None
 15136 ;; Return value:  Size  Location     Type
 15137 ;;                  1    wreg      void 
 15138 ;; Registers used:
 15139 ;;		wreg, status,2
 15140 ;; Tracked objects:
 15141 ;;		On entry : 0/0
 15142 ;;		On exit  : 0/0
 15143 ;;		Unchanged: 0/0
 15144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15149 ;;Total ram usage:        0 bytes
 15150 ;; Hardware stack levels used: 1
 15151 ;; Hardware stack levels required when called: 8
 15152 ;; This function calls:
 15153 ;;		Nothing
 15154 ;; This function is called by:
 15155 ;;		_SYSTEM_Initialize
 15156 ;; This function uses a non-reentrant model
 15157 ;;
 15158                           
 15159                           	psect	text72
 15160  006132                     __ptext72:
 15161                           	callstack 0
 15162  006132                     _PMD_Initialize:
 15163                           	callstack 21
 15164  006132                     
 15165                           ;mcc_generated_files/mcc.c: 89:     PMD0 = 0x00;
 15166  006132  0E00               	movlw	0
 15167  006134  0139               	movlb	57	; () banked
 15168  006136  6FC0               	movwf	192,b	;volatile
 15169                           
 15170                           ;mcc_generated_files/mcc.c: 91:     PMD1 = 0x00;
 15171  006138  0E00               	movlw	0
 15172  00613A  6FC1               	movwf	193,b	;volatile
 15173                           
 15174                           ;mcc_generated_files/mcc.c: 93:     PMD2 = 0x00;
 15175  00613C  0E00               	movlw	0
 15176  00613E  6FC2               	movwf	194,b	;volatile
 15177                           
 15178                           ;mcc_generated_files/mcc.c: 95:     PMD3 = 0x00;
 15179  006140  0E00               	movlw	0
 15180  006142  6FC3               	movwf	195,b	;volatile
 15181                           
 15182                           ;mcc_generated_files/mcc.c: 97:     PMD4 = 0x00;
 15183  006144  0E00               	movlw	0
 15184  006146  6FC4               	movwf	196,b	;volatile
 15185                           
 15186                           ;mcc_generated_files/mcc.c: 99:     PMD5 = 0x00;
 15187  006148  0E00               	movlw	0
 15188  00614A  6FC5               	movwf	197,b	;volatile
 15189                           
 15190                           ;mcc_generated_files/mcc.c: 101:     PMD6 = 0x00;
 15191  00614C  0E00               	movlw	0
 15192  00614E  6FC6               	movwf	198,b	;volatile
 15193                           
 15194                           ;mcc_generated_files/mcc.c: 103:     PMD7 = 0x00;
 15195  006150  0E00               	movlw	0
 15196  006152  6FC7               	movwf	199,b	;volatile
 15197  006154                     
 15198                           ; BSR set to: 57
 15199  006154  0012               	return		;funcret
 15200  006156                     __end_of_PMD_Initialize:
 15201                           	callstack 0
 15202                           
 15203 ;; *************** function _PIN_MANAGER_Initialize *****************
 15204 ;; Defined at:
 15205 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 15206 ;; Parameters:    Size  Location     Type
 15207 ;;		None
 15208 ;; Auto vars:     Size  Location     Type
 15209 ;;		None
 15210 ;; Return value:  Size  Location     Type
 15211 ;;                  1    wreg      void 
 15212 ;; Registers used:
 15213 ;;		wreg, status,2
 15214 ;; Tracked objects:
 15215 ;;		On entry : 0/0
 15216 ;;		On exit  : 0/0
 15217 ;;		Unchanged: 0/0
 15218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15223 ;;Total ram usage:        0 bytes
 15224 ;; Hardware stack levels used: 1
 15225 ;; Hardware stack levels required when called: 8
 15226 ;; This function calls:
 15227 ;;		Nothing
 15228 ;; This function is called by:
 15229 ;;		_SYSTEM_Initialize
 15230 ;; This function uses a non-reentrant model
 15231 ;;
 15232                           
 15233                           	psect	text73
 15234  004ED0                     __ptext73:
 15235                           	callstack 0
 15236  004ED0                     _PIN_MANAGER_Initialize:
 15237                           	callstack 21
 15238  004ED0                     
 15239                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 15240  004ED0  0E00               	movlw	0
 15241  004ED2  6EBE               	movwf	190,c	;volatile
 15242                           
 15243                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 15244  004ED4  0E00               	movlw	0
 15245  004ED6  6EBD               	movwf	189,c	;volatile
 15246                           
 15247                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x24;
 15248  004ED8  0E24               	movlw	36
 15249  004EDA  6EBA               	movwf	186,c	;volatile
 15250                           
 15251                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 15252  004EDC  0E00               	movlw	0
 15253  004EDE  6EBB               	movwf	187,c	;volatile
 15254                           
 15255                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 15256  004EE0  0E00               	movlw	0
 15257  004EE2  6EBC               	movwf	188,c	;volatile
 15258                           
 15259                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
 15260  004EE4  0E07               	movlw	7
 15261  004EE6  6EC6               	movwf	198,c	;volatile
 15262                           
 15263                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xC0;
 15264  004EE8  0EC0               	movlw	192
 15265  004EEA  6EC2               	movwf	194,c	;volatile
 15266                           
 15267                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xF7;
 15268  004EEC  0EF7               	movlw	247
 15269  004EEE  6EC3               	movwf	195,c	;volatile
 15270  004EF0                     
 15271                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
 15272  004EF0  68C4               	setf	196,c	;volatile
 15273  004EF2                     
 15274                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
 15275  004EF2  68C5               	setf	197,c	;volatile
 15276                           
 15277                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x1F;
 15278  004EF4  0E1F               	movlw	31
 15279  004EF6  013A               	movlb	58	; () banked
 15280  004EF8  6F70               	movwf	112,b	;volatile
 15281  004EFA                     
 15282                           ; BSR set to: 58
 15283                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xFF;
 15284  004EFA  6960               	setf	96,b	;volatile
 15285                           
 15286                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xC0;
 15287  004EFC  0EC0               	movlw	192
 15288  004EFE  6F50               	movwf	80,b	;volatile
 15289                           
 15290                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
 15291  004F00  0E07               	movlw	7
 15292  004F02  6F80               	movwf	128,b	;volatile
 15293                           
 15294                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x7F;
 15295  004F04  0E7F               	movlw	127
 15296  004F06  6F40               	movwf	64,b	;volatile
 15297                           
 15298                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 15299  004F08  0E00               	movlw	0
 15300  004F0A  6F71               	movwf	113,b	;volatile
 15301                           
 15302                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 15303  004F0C  0E00               	movlw	0
 15304  004F0E  6F81               	movwf	129,b	;volatile
 15305                           
 15306                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
 15307  004F10  0E00               	movlw	0
 15308  004F12  6F51               	movwf	81,b	;volatile
 15309                           
 15310                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 15311  004F14  0E00               	movlw	0
 15312  004F16  6F41               	movwf	65,b	;volatile
 15313                           
 15314                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 15315  004F18  0E00               	movlw	0
 15316  004F1A  6F61               	movwf	97,b	;volatile
 15317                           
 15318                           ;mcc_generated_files/pin_manager.c: 96:     RB1I2C = 0x00;
 15319  004F1C  0E00               	movlw	0
 15320  004F1E  6F5A               	movwf	90,b	;volatile
 15321                           
 15322                           ;mcc_generated_files/pin_manager.c: 97:     RB2I2C = 0x00;
 15323  004F20  0E00               	movlw	0
 15324  004F22  6F5B               	movwf	91,b	;volatile
 15325                           
 15326                           ;mcc_generated_files/pin_manager.c: 98:     RC3I2C = 0x00;
 15327  004F24  0E00               	movlw	0
 15328  004F26  6F6A               	movwf	106,b	;volatile
 15329                           
 15330                           ;mcc_generated_files/pin_manager.c: 99:     RC4I2C = 0x00;
 15331  004F28  0E00               	movlw	0
 15332  004F2A  6F6B               	movwf	107,b	;volatile
 15333                           
 15334                           ;mcc_generated_files/pin_manager.c: 100:     RD0I2C = 0x00;
 15335  004F2C  0E00               	movlw	0
 15336  004F2E  6F7A               	movwf	122,b	;volatile
 15337                           
 15338                           ;mcc_generated_files/pin_manager.c: 101:     RD1I2C = 0x00;
 15339  004F30  0E00               	movlw	0
 15340  004F32  6F7B               	movwf	123,b	;volatile
 15341                           
 15342                           ;mcc_generated_files/pin_manager.c: 106:     ODCONE = 0x00;
 15343  004F34  0E00               	movlw	0
 15344  004F36  6F82               	movwf	130,b	;volatile
 15345                           
 15346                           ;mcc_generated_files/pin_manager.c: 107:     ODCONA = 0x00;
 15347  004F38  0E00               	movlw	0
 15348  004F3A  6F42               	movwf	66,b	;volatile
 15349                           
 15350                           ;mcc_generated_files/pin_manager.c: 108:     ODCONB = 0x00;
 15351  004F3C  0E00               	movlw	0
 15352  004F3E  6F52               	movwf	82,b	;volatile
 15353                           
 15354                           ;mcc_generated_files/pin_manager.c: 109:     ODCONC = 0x00;
 15355  004F40  0E00               	movlw	0
 15356  004F42  6F62               	movwf	98,b	;volatile
 15357                           
 15358                           ;mcc_generated_files/pin_manager.c: 110:     ODCOND = 0x00;
 15359  004F44  0E00               	movlw	0
 15360  004F46  6F72               	movwf	114,b	;volatile
 15361  004F48                     
 15362                           ; BSR set to: 58
 15363                           ;mcc_generated_files/pin_manager.c: 115:     SLRCONA = 0xFF;
 15364  004F48  6943               	setf	67,b	;volatile
 15365  004F4A                     
 15366                           ; BSR set to: 58
 15367                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONB = 0xFF;
 15368  004F4A  6953               	setf	83,b	;volatile
 15369  004F4C                     
 15370                           ; BSR set to: 58
 15371                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONC = 0xFF;
 15372  004F4C  6963               	setf	99,b	;volatile
 15373  004F4E                     
 15374                           ; BSR set to: 58
 15375                           ;mcc_generated_files/pin_manager.c: 118:     SLRCOND = 0xFF;
 15376  004F4E  6973               	setf	115,b	;volatile
 15377                           
 15378                           ;mcc_generated_files/pin_manager.c: 119:     SLRCONE = 0x07;
 15379  004F50  0E07               	movlw	7
 15380  004F52  6F83               	movwf	131,b	;volatile
 15381  004F54                     
 15382                           ; BSR set to: 58
 15383                           ;mcc_generated_files/pin_manager.c: 124:     INLVLA = 0xFF;
 15384  004F54  6944               	setf	68,b	;volatile
 15385  004F56                     
 15386                           ; BSR set to: 58
 15387                           ;mcc_generated_files/pin_manager.c: 125:     INLVLB = 0xFF;
 15388  004F56  6954               	setf	84,b	;volatile
 15389  004F58                     
 15390                           ; BSR set to: 58
 15391                           ;mcc_generated_files/pin_manager.c: 126:     INLVLC = 0xFF;
 15392  004F58  6964               	setf	100,b	;volatile
 15393  004F5A                     
 15394                           ; BSR set to: 58
 15395                           ;mcc_generated_files/pin_manager.c: 127:     INLVLD = 0xFF;
 15396  004F5A  6974               	setf	116,b	;volatile
 15397                           
 15398                           ;mcc_generated_files/pin_manager.c: 128:     INLVLE = 0x0F;
 15399  004F5C  0E0F               	movlw	15
 15400  004F5E  6F84               	movwf	132,b	;volatile
 15401                           
 15402                           ;mcc_generated_files/pin_manager.c: 137:     CCP3PPS = 0x1F;
 15403  004F60  0E1F               	movlw	31
 15404  004F62  6FCF               	movwf	207,b	;volatile
 15405                           
 15406                           ;mcc_generated_files/pin_manager.c: 138:     CLCIN3PPS = 0x09;
 15407  004F64  0E09               	movlw	9
 15408  004F66  6FDC               	movwf	220,b	;volatile
 15409                           
 15410                           ;mcc_generated_files/pin_manager.c: 139:     RA1PPS = 0x0E;
 15411  004F68  0E0E               	movlw	14
 15412  004F6A  6F01               	movwf	1,b	;volatile
 15413                           
 15414                           ;mcc_generated_files/pin_manager.c: 140:     U1RXPPS = 0x0A;
 15415  004F6C  0E0A               	movlw	10
 15416  004F6E  6FE5               	movwf	229,b	;volatile
 15417                           
 15418                           ;mcc_generated_files/pin_manager.c: 141:     RA0PPS = 0x0D;
 15419  004F70  0E0D               	movlw	13
 15420  004F72  6F00               	movwf	0,b	;volatile
 15421                           
 15422                           ;mcc_generated_files/pin_manager.c: 142:     T5GPPS = 0x1D;
 15423  004F74  0E1D               	movlw	29
 15424  004F76  6FC9               	movwf	201,b	;volatile
 15425                           
 15426                           ;mcc_generated_files/pin_manager.c: 143:     RA4PPS = 0x10;
 15427  004F78  0E10               	movlw	16
 15428  004F7A  6F04               	movwf	4,b	;volatile
 15429                           
 15430                           ;mcc_generated_files/pin_manager.c: 144:     CLCIN0PPS = 0x07;
 15431  004F7C  0E07               	movlw	7
 15432  004F7E  6FD9               	movwf	217,b	;volatile
 15433                           
 15434                           ;mcc_generated_files/pin_manager.c: 145:     SMT1WINPPS = 0x09;
 15435  004F80  0E09               	movlw	9
 15436  004F82  6FD1               	movwf	209,b	;volatile
 15437                           
 15438                           ;mcc_generated_files/pin_manager.c: 146:     RA3PPS = 0x0F;
 15439  004F84  0E0F               	movlw	15
 15440  004F86  6F03               	movwf	3,b	;volatile
 15441                           
 15442                           ;mcc_generated_files/pin_manager.c: 147:     RB3PPS = 0x13;
 15443  004F88  0E13               	movlw	19
 15444  004F8A  6F0B               	movwf	11,b	;volatile
 15445                           
 15446                           ;mcc_generated_files/pin_manager.c: 148:     CLCIN2PPS = 0x08;
 15447  004F8C  0E08               	movlw	8
 15448  004F8E  6FDB               	movwf	219,b	;volatile
 15449                           
 15450                           ;mcc_generated_files/pin_manager.c: 149:     SMT1SIGPPS = 0x08;
 15451  004F90  0E08               	movlw	8
 15452  004F92  6FD2               	movwf	210,b	;volatile
 15453                           
 15454                           ;mcc_generated_files/pin_manager.c: 150:     CCP4PPS = 0x1E;
 15455  004F94  0E1E               	movlw	30
 15456  004F96  6FD0               	movwf	208,b	;volatile
 15457  004F98                     
 15458                           ; BSR set to: 58
 15459  004F98  0012               	return		;funcret
 15460  004F9A                     __end_of_PIN_MANAGER_Initialize:
 15461                           	callstack 0
 15462                           
 15463 ;; *************** function _OSCILLATOR_Initialize *****************
 15464 ;; Defined at:
 15465 ;;		line 72 in file "mcc_generated_files/mcc.c"
 15466 ;; Parameters:    Size  Location     Type
 15467 ;;		None
 15468 ;; Auto vars:     Size  Location     Type
 15469 ;;		None
 15470 ;; Return value:  Size  Location     Type
 15471 ;;                  1    wreg      void 
 15472 ;; Registers used:
 15473 ;;		wreg, status,2
 15474 ;; Tracked objects:
 15475 ;;		On entry : 0/0
 15476 ;;		On exit  : 0/0
 15477 ;;		Unchanged: 0/0
 15478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15483 ;;Total ram usage:        0 bytes
 15484 ;; Hardware stack levels used: 1
 15485 ;; Hardware stack levels required when called: 8
 15486 ;; This function calls:
 15487 ;;		Nothing
 15488 ;; This function is called by:
 15489 ;;		_SYSTEM_Initialize
 15490 ;; This function uses a non-reentrant model
 15491 ;;
 15492                           
 15493                           	psect	text74
 15494  006234                     __ptext74:
 15495                           	callstack 0
 15496  006234                     _OSCILLATOR_Initialize:
 15497                           	callstack 21
 15498  006234                     
 15499                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x60;
 15500  006234  0E60               	movlw	96
 15501  006236  0139               	movlb	57	; () banked
 15502  006238  6FD9               	movwf	217,b	;volatile
 15503                           
 15504                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 15505  00623A  0E00               	movlw	0
 15506  00623C  6FDB               	movwf	219,b	;volatile
 15507                           
 15508                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 15509  00623E  0E00               	movlw	0
 15510  006240  6FDD               	movwf	221,b	;volatile
 15511                           
 15512                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x08;
 15513  006242  0E08               	movlw	8
 15514  006244  6FDF               	movwf	223,b	;volatile
 15515                           
 15516                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 15517  006246  0E00               	movlw	0
 15518  006248  6FDE               	movwf	222,b	;volatile
 15519  00624A                     
 15520                           ; BSR set to: 57
 15521  00624A  0012               	return		;funcret
 15522  00624C                     __end_of_OSCILLATOR_Initialize:
 15523                           	callstack 0
 15524                           
 15525 ;; *************** function _INTERRUPT_Initialize *****************
 15526 ;; Defined at:
 15527 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 15528 ;; Parameters:    Size  Location     Type
 15529 ;;		None
 15530 ;; Auto vars:     Size  Location     Type
 15531 ;;  state           1   19[COMRAM] _Bool 
 15532 ;; Return value:  Size  Location     Type
 15533 ;;                  1    wreg      void 
 15534 ;; Registers used:
 15535 ;;		wreg, status,2
 15536 ;; Tracked objects:
 15537 ;;		On entry : 0/0
 15538 ;;		On exit  : 0/0
 15539 ;;		Unchanged: 0/0
 15540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15542 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15544 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15545 ;;Total ram usage:        1 bytes
 15546 ;; Hardware stack levels used: 1
 15547 ;; Hardware stack levels required when called: 8
 15548 ;; This function calls:
 15549 ;;		Nothing
 15550 ;; This function is called by:
 15551 ;;		_SYSTEM_Initialize
 15552 ;; This function uses a non-reentrant model
 15553 ;;
 15554                           
 15555                           	psect	text75
 15556  005940                     __ptext75:
 15557                           	callstack 0
 15558  005940                     _INTERRUPT_Initialize:
 15559                           	callstack 21
 15560  005940                     
 15561                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 15562  005940  8AD2               	bsf	210,5,c	;volatile
 15563  005942                     
 15564                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 15565  005942  0E00               	movlw	0
 15566  005944  BED2               	btfsc	16338,7,c	;volatile
 15567  005946  0E01               	movlw	1
 15568  005948  6E14               	movwf	INTERRUPT_Initialize@state^0,c
 15569  00594A                     
 15570                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 15571  00594A  9ED2               	bcf	16338,7,c	;volatile
 15572                           
 15573                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 15574  00594C  0E55               	movlw	85
 15575  00594E  6ED4               	movwf	212,c	;volatile
 15576                           
 15577                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 15578  005950  0EAA               	movlw	170
 15579  005952  6ED4               	movwf	212,c	;volatile
 15580  005954                     
 15581                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 15582  005954  90D4               	bcf	212,0,c	;volatile
 15583                           
 15584                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTBASEU = 0;
 15585  005956  0E00               	movlw	0
 15586  005958  6ED7               	movwf	215,c	;volatile
 15587                           
 15588                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTBASEH = 0;
 15589  00595A  0E00               	movlw	0
 15590  00595C  6ED6               	movwf	214,c	;volatile
 15591                           
 15592                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTBASEL = 8;
 15593  00595E  0E08               	movlw	8
 15594  005960  6ED5               	movwf	213,c	;volatile
 15595                           
 15596                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 15597  005962  0E55               	movlw	85
 15598  005964  6ED4               	movwf	212,c	;volatile
 15599                           
 15600                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 15601  005966  0EAA               	movlw	170
 15602  005968  6ED4               	movwf	212,c	;volatile
 15603  00596A                     
 15604                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 15605  00596A  80D4               	bsf	212,0,c	;volatile
 15606  00596C                     
 15607                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 15608  00596C  B014               	btfsc	INTERRUPT_Initialize@state^0,0,c
 15609  00596E  D002               	bra	u2955
 15610  005970  9ED2               	bcf	16338,7,c	;volatile
 15611  005972  D001               	bra	u2956
 15612  005974                     u2955:
 15613  005974  8ED2               	bsf	16338,7,c	;volatile
 15614  005976                     u2956:
 15615  005976                     
 15616                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR3bits.U1TXIP = 0;
 15617  005976  0139               	movlb	57	; () banked
 15618  005978  9983               	bcf	131,4,b	;volatile
 15619  00597A                     
 15620                           ; BSR set to: 57
 15621                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR3bits.U1RXIP = 0;
 15622  00597A  9783               	bcf	131,3,b	;volatile
 15623  00597C                     
 15624                           ; BSR set to: 57
 15625                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR1bits.SMT1PWAIP = 1;
 15626  00597C  8F81               	bsf	129,7,b	;volatile
 15627  00597E                     
 15628                           ; BSR set to: 57
 15629                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR1bits.SMT1IP = 1;
 15630  00597E  8B81               	bsf	129,5,b	;volatile
 15631  005980                     
 15632                           ; BSR set to: 57
 15633                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR1bits.SMT1PRAIP = 1;
 15634  005980  8D81               	bsf	129,6,b	;volatile
 15635  005982                     
 15636                           ; BSR set to: 57
 15637                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR10bits.CCP4IP = 1;
 15638  005982  818A               	bsf	138,0,b	;volatile
 15639  005984                     
 15640                           ; BSR set to: 57
 15641                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR8bits.TMR5GIP = 1;
 15642  005984  8F88               	bsf	136,7,b	;volatile
 15643  005986                     
 15644                           ; BSR set to: 57
 15645                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR7bits.TMR4IP = 0;
 15646  005986  9187               	bcf	135,0,b	;volatile
 15647  005988                     
 15648                           ; BSR set to: 57
 15649                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR9bits.CCP3IP = 1;
 15650  005988  8389               	bsf	137,1,b	;volatile
 15651  00598A                     
 15652                           ; BSR set to: 57
 15653  00598A  0012               	return		;funcret
 15654  00598C                     __end_of_INTERRUPT_Initialize:
 15655                           	callstack 0
 15656                           
 15657 ;; *************** function _CLC3_Initialize *****************
 15658 ;; Defined at:
 15659 ;;		line 58 in file "mcc_generated_files/clc3.c"
 15660 ;; Parameters:    Size  Location     Type
 15661 ;;		None
 15662 ;; Auto vars:     Size  Location     Type
 15663 ;;		None
 15664 ;; Return value:  Size  Location     Type
 15665 ;;                  1    wreg      void 
 15666 ;; Registers used:
 15667 ;;		wreg, status,2
 15668 ;; Tracked objects:
 15669 ;;		On entry : 0/0
 15670 ;;		On exit  : 0/0
 15671 ;;		Unchanged: 0/0
 15672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15677 ;;Total ram usage:        0 bytes
 15678 ;; Hardware stack levels used: 1
 15679 ;; Hardware stack levels required when called: 8
 15680 ;; This function calls:
 15681 ;;		Nothing
 15682 ;; This function is called by:
 15683 ;;		_SYSTEM_Initialize
 15684 ;; This function uses a non-reentrant model
 15685 ;;
 15686                           
 15687                           	psect	text76
 15688  006038                     __ptext76:
 15689                           	callstack 0
 15690  006038                     _CLC3_Initialize:
 15691                           	callstack 21
 15692  006038                     
 15693                           ;mcc_generated_files/clc3.c: 63:     CLC3POL = 0x00;
 15694  006038  0E00               	movlw	0
 15695  00603A  013C               	movlb	60	; () banked
 15696  00603C  6F61               	movwf	97,b	;volatile
 15697                           
 15698                           ;mcc_generated_files/clc3.c: 65:     CLC3SEL0 = 0x03;
 15699  00603E  0E03               	movlw	3
 15700  006040  6F62               	movwf	98,b	;volatile
 15701                           
 15702                           ;mcc_generated_files/clc3.c: 67:     CLC3SEL1 = 0x02;
 15703  006042  0E02               	movlw	2
 15704  006044  6F63               	movwf	99,b	;volatile
 15705                           
 15706                           ;mcc_generated_files/clc3.c: 69:     CLC3SEL2 = 0x00;
 15707  006046  0E00               	movlw	0
 15708  006048  6F64               	movwf	100,b	;volatile
 15709                           
 15710                           ;mcc_generated_files/clc3.c: 71:     CLC3SEL3 = 0x00;
 15711  00604A  0E00               	movlw	0
 15712  00604C  6F65               	movwf	101,b	;volatile
 15713                           
 15714                           ;mcc_generated_files/clc3.c: 73:     CLC3GLS0 = 0x02;
 15715  00604E  0E02               	movlw	2
 15716  006050  6F66               	movwf	102,b	;volatile
 15717                           
 15718                           ;mcc_generated_files/clc3.c: 75:     CLC3GLS1 = 0x08;
 15719  006052  0E08               	movlw	8
 15720  006054  6F67               	movwf	103,b	;volatile
 15721                           
 15722                           ;mcc_generated_files/clc3.c: 77:     CLC3GLS2 = 0x00;
 15723  006056  0E00               	movlw	0
 15724  006058  6F68               	movwf	104,b	;volatile
 15725                           
 15726                           ;mcc_generated_files/clc3.c: 79:     CLC3GLS3 = 0x00;
 15727  00605A  0E00               	movlw	0
 15728  00605C  6F69               	movwf	105,b	;volatile
 15729                           
 15730                           ;mcc_generated_files/clc3.c: 81:     CLC3CON = 0x85;
 15731  00605E  0E85               	movlw	133
 15732  006060  6F60               	movwf	96,b	;volatile
 15733  006062                     
 15734                           ; BSR set to: 60
 15735  006062  0012               	return		;funcret
 15736  006064                     __end_of_CLC3_Initialize:
 15737                           	callstack 0
 15738                           
 15739 ;; *************** function _CCP4_Initialize *****************
 15740 ;; Defined at:
 15741 ;;		line 78 in file "mcc_generated_files/ccp4.c"
 15742 ;; Parameters:    Size  Location     Type
 15743 ;;		None
 15744 ;; Auto vars:     Size  Location     Type
 15745 ;;		None
 15746 ;; Return value:  Size  Location     Type
 15747 ;;                  1    wreg      void 
 15748 ;; Registers used:
 15749 ;;		wreg, status,2, status,0, cstack
 15750 ;; Tracked objects:
 15751 ;;		On entry : 0/0
 15752 ;;		On exit  : 0/0
 15753 ;;		Unchanged: 0/0
 15754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15759 ;;Total ram usage:        0 bytes
 15760 ;; Hardware stack levels used: 1
 15761 ;; Hardware stack levels required when called: 9
 15762 ;; This function calls:
 15763 ;;		_CCP4_SetCallBack
 15764 ;; This function is called by:
 15765 ;;		_SYSTEM_Initialize
 15766 ;; This function uses a non-reentrant model
 15767 ;;
 15768                           
 15769                           	psect	text77
 15770  005F82                     __ptext77:
 15771                           	callstack 0
 15772  005F82                     _CCP4_Initialize:
 15773                           	callstack 20
 15774  005F82                     
 15775                           ;mcc_generated_files/ccp4.c: 83:  CCP4CON = 0x83;
 15776  005F82  0E83               	movlw	131
 15777  005F84  6E72               	movwf	114,c	;volatile
 15778                           
 15779                           ;mcc_generated_files/ccp4.c: 86:  CCP4CAP = 0x00;
 15780  005F86  0E00               	movlw	0
 15781  005F88  6E73               	movwf	115,c	;volatile
 15782                           
 15783                           ;mcc_generated_files/ccp4.c: 89:  CCPR4H = 0x00;
 15784  005F8A  0E00               	movlw	0
 15785  005F8C  6E71               	movwf	113,c	;volatile
 15786                           
 15787                           ;mcc_generated_files/ccp4.c: 92:  CCPR4L = 0x00;
 15788  005F8E  0E00               	movlw	0
 15789  005F90  6E70               	movwf	112,c	;volatile
 15790  005F92                     
 15791                           ;mcc_generated_files/ccp4.c: 95:     CCP4_SetCallBack(CCP4_DefaultCallBack);
 15792  005F92  0E7E               	movlw	low _CCP4_DefaultCallBack
 15793  005F94  6E14               	movwf	CCP4_SetCallBack@customCallBack^0,c
 15794  005F96  0E5D               	movlw	high _CCP4_DefaultCallBack
 15795  005F98  6E15               	movwf	(CCP4_SetCallBack@customCallBack+1)^0,c
 15796  005F9A  EC5B  F031         	call	_CCP4_SetCallBack	;wreg free
 15797  005F9E                     
 15798                           ;mcc_generated_files/ccp4.c: 98:  CCPTMRS0bits.C4TSEL = 0x2;
 15799  005F9E  013F               	movlb	63	; () banked
 15800  005FA0  515E               	movf	94,w,b	;volatile
 15801  005FA2  0B3F               	andlw	-193
 15802  005FA4  0980               	iorlw	128
 15803  005FA6  6F5E               	movwf	94,b	;volatile
 15804  005FA8                     
 15805                           ; BSR set to: 63
 15806                           ;mcc_generated_files/ccp4.c: 101:     PIR10bits.CCP4IF = 0;
 15807  005FA8  0139               	movlb	57	; () banked
 15808  005FAA  91AA               	bcf	170,0,b	;volatile
 15809  005FAC                     
 15810                           ; BSR set to: 57
 15811                           ;mcc_generated_files/ccp4.c: 104:     PIE10bits.CCP4IE = 1;
 15812  005FAC  819A               	bsf	154,0,b	;volatile
 15813  005FAE                     
 15814                           ; BSR set to: 57
 15815  005FAE  0012               	return		;funcret
 15816  005FB0                     __end_of_CCP4_Initialize:
 15817                           	callstack 0
 15818                           
 15819 ;; *************** function _CCP4_SetCallBack *****************
 15820 ;; Defined at:
 15821 ;;		line 75 in file "mcc_generated_files/ccp4.c"
 15822 ;; Parameters:    Size  Location     Type
 15823 ;;  customCallBa    2   19[COMRAM] PTR FTN(unsigned short ,
 15824 ;;		 -> CCP4_DefaultCallBack(1), 
 15825 ;; Auto vars:     Size  Location     Type
 15826 ;;		None
 15827 ;; Return value:  Size  Location     Type
 15828 ;;                  1    wreg      void 
 15829 ;; Registers used:
 15830 ;;		wreg, status,2, status,0
 15831 ;; Tracked objects:
 15832 ;;		On entry : 0/0
 15833 ;;		On exit  : 0/0
 15834 ;;		Unchanged: 0/0
 15835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15836 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15839 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15840 ;;Total ram usage:        2 bytes
 15841 ;; Hardware stack levels used: 1
 15842 ;; Hardware stack levels required when called: 8
 15843 ;; This function calls:
 15844 ;;		Nothing
 15845 ;; This function is called by:
 15846 ;;		_CCP4_Initialize
 15847 ;; This function uses a non-reentrant model
 15848 ;;
 15849                           
 15850                           	psect	text78
 15851  0062B6                     __ptext78:
 15852                           	callstack 0
 15853  0062B6                     _CCP4_SetCallBack:
 15854                           	callstack 20
 15855  0062B6                     
 15856                           ;mcc_generated_files/ccp4.c: 76:     CCP4_CallBack = customCallBack;
 15857  0062B6  C014  F196         	movff	CCP4_SetCallBack@customCallBack,_CCP4_CallBack
 15858  0062BA  C015  F197         	movff	CCP4_SetCallBack@customCallBack+1,_CCP4_CallBack+1
 15859  0062BE  0012               	return		;funcret
 15860  0062C0                     __end_of_CCP4_SetCallBack:
 15861                           	callstack 0
 15862                           
 15863 ;; *************** function _CCP3_Initialize *****************
 15864 ;; Defined at:
 15865 ;;		line 75 in file "mcc_generated_files/ccp3.c"
 15866 ;; Parameters:    Size  Location     Type
 15867 ;;		None
 15868 ;; Auto vars:     Size  Location     Type
 15869 ;;		None
 15870 ;; Return value:  Size  Location     Type
 15871 ;;                  1    wreg      void 
 15872 ;; Registers used:
 15873 ;;		wreg, status,2, status,0, cstack
 15874 ;; Tracked objects:
 15875 ;;		On entry : 0/0
 15876 ;;		On exit  : 0/0
 15877 ;;		Unchanged: 0/0
 15878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15883 ;;Total ram usage:        0 bytes
 15884 ;; Hardware stack levels used: 1
 15885 ;; Hardware stack levels required when called: 9
 15886 ;; This function calls:
 15887 ;;		_CCP3_SetCallBack
 15888 ;; This function is called by:
 15889 ;;		_SYSTEM_Initialize
 15890 ;; This function uses a non-reentrant model
 15891 ;;
 15892                           
 15893                           	psect	text79
 15894  005FB0                     __ptext79:
 15895                           	callstack 0
 15896  005FB0                     _CCP3_Initialize:
 15897                           	callstack 20
 15898  005FB0                     
 15899                           ;mcc_generated_files/ccp3.c: 80:  CCP3CON = 0x83;
 15900  005FB0  0E83               	movlw	131
 15901  005FB2  6E76               	movwf	118,c	;volatile
 15902                           
 15903                           ;mcc_generated_files/ccp3.c: 83:  CCP3CAP = 0x00;
 15904  005FB4  0E00               	movlw	0
 15905  005FB6  6E77               	movwf	119,c	;volatile
 15906                           
 15907                           ;mcc_generated_files/ccp3.c: 86:  CCPR3H = 0x00;
 15908  005FB8  0E00               	movlw	0
 15909  005FBA  6E75               	movwf	117,c	;volatile
 15910                           
 15911                           ;mcc_generated_files/ccp3.c: 89:  CCPR3L = 0x00;
 15912  005FBC  0E00               	movlw	0
 15913  005FBE  6E74               	movwf	116,c	;volatile
 15914  005FC0                     
 15915                           ;mcc_generated_files/ccp3.c: 92:     CCP3_SetCallBack(CCP3_DefaultCallBack);
 15916  005FC0  0E48               	movlw	low _CCP3_DefaultCallBack
 15917  005FC2  6E14               	movwf	CCP3_SetCallBack@customCallBack^0,c
 15918  005FC4  0E5D               	movlw	high _CCP3_DefaultCallBack
 15919  005FC6  6E15               	movwf	(CCP3_SetCallBack@customCallBack+1)^0,c
 15920  005FC8  EC60  F031         	call	_CCP3_SetCallBack	;wreg free
 15921  005FCC                     
 15922                           ;mcc_generated_files/ccp3.c: 95:  CCPTMRS0bits.C3TSEL = 0x2;
 15923  005FCC  013F               	movlb	63	; () banked
 15924  005FCE  515E               	movf	94,w,b	;volatile
 15925  005FD0  0BCF               	andlw	-49
 15926  005FD2  0920               	iorlw	32
 15927  005FD4  6F5E               	movwf	94,b	;volatile
 15928  005FD6                     
 15929                           ; BSR set to: 63
 15930                           ;mcc_generated_files/ccp3.c: 98:     PIR9bits.CCP3IF = 0;
 15931  005FD6  0139               	movlb	57	; () banked
 15932  005FD8  93A9               	bcf	169,1,b	;volatile
 15933  005FDA                     
 15934                           ; BSR set to: 57
 15935                           ;mcc_generated_files/ccp3.c: 101:     PIE9bits.CCP3IE = 1;
 15936  005FDA  8399               	bsf	153,1,b	;volatile
 15937  005FDC                     
 15938                           ; BSR set to: 57
 15939  005FDC  0012               	return		;funcret
 15940  005FDE                     __end_of_CCP3_Initialize:
 15941                           	callstack 0
 15942                           
 15943 ;; *************** function _CCP3_SetCallBack *****************
 15944 ;; Defined at:
 15945 ;;		line 119 in file "mcc_generated_files/ccp3.c"
 15946 ;; Parameters:    Size  Location     Type
 15947 ;;  customCallBa    2   19[COMRAM] PTR FTN(unsigned short ,
 15948 ;;		 -> CCP3_DefaultCallBack(1), 
 15949 ;; Auto vars:     Size  Location     Type
 15950 ;;		None
 15951 ;; Return value:  Size  Location     Type
 15952 ;;                  1    wreg      void 
 15953 ;; Registers used:
 15954 ;;		wreg, status,2, status,0
 15955 ;; Tracked objects:
 15956 ;;		On entry : 0/0
 15957 ;;		On exit  : 0/0
 15958 ;;		Unchanged: 0/0
 15959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15960 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15963 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15964 ;;Total ram usage:        2 bytes
 15965 ;; Hardware stack levels used: 1
 15966 ;; Hardware stack levels required when called: 8
 15967 ;; This function calls:
 15968 ;;		Nothing
 15969 ;; This function is called by:
 15970 ;;		_CCP3_Initialize
 15971 ;; This function uses a non-reentrant model
 15972 ;;
 15973                           
 15974                           	psect	text80
 15975  0062C0                     __ptext80:
 15976                           	callstack 0
 15977  0062C0                     _CCP3_SetCallBack:
 15978                           	callstack 20
 15979  0062C0                     
 15980                           ;mcc_generated_files/ccp3.c: 120:     CCP3_CallBack = customCallBack;
 15981  0062C0  C014  F198         	movff	CCP3_SetCallBack@customCallBack,_CCP3_CallBack
 15982  0062C4  C015  F199         	movff	CCP3_SetCallBack@customCallBack+1,_CCP3_CallBack+1
 15983  0062C8  0012               	return		;funcret
 15984  0062CA                     __end_of_CCP3_SetCallBack:
 15985                           	callstack 0
 15986                           
 15987 ;; *************** function _ADCC_Initialize *****************
 15988 ;; Defined at:
 15989 ;;		line 62 in file "mcc_generated_files/adcc.c"
 15990 ;; Parameters:    Size  Location     Type
 15991 ;;		None
 15992 ;; Auto vars:     Size  Location     Type
 15993 ;;		None
 15994 ;; Return value:  Size  Location     Type
 15995 ;;                  1    wreg      void 
 15996 ;; Registers used:
 15997 ;;		wreg, status,2
 15998 ;; Tracked objects:
 15999 ;;		On entry : 0/0
 16000 ;;		On exit  : 0/0
 16001 ;;		Unchanged: 0/0
 16002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16007 ;;Total ram usage:        0 bytes
 16008 ;; Hardware stack levels used: 1
 16009 ;; Hardware stack levels required when called: 8
 16010 ;; This function calls:
 16011 ;;		Nothing
 16012 ;; This function is called by:
 16013 ;;		_SYSTEM_Initialize
 16014 ;; This function uses a non-reentrant model
 16015 ;;
 16016                           
 16017                           	psect	text81
 16018  00588E                     __ptext81:
 16019                           	callstack 0
 16020  00588E                     _ADCC_Initialize:
 16021                           	callstack 21
 16022  00588E                     
 16023                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
 16024  00588E  0E00               	movlw	0
 16025  005890  013E               	movlb	62	; () banked
 16026  005892  6FDE               	movwf	222,b	;volatile
 16027                           
 16028                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
 16029  005894  0E00               	movlw	0
 16030  005896  6FDF               	movwf	223,b	;volatile
 16031                           
 16032                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
 16033  005898  0E00               	movlw	0
 16034  00589A  6FE0               	movwf	224,b	;volatile
 16035                           
 16036                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
 16037  00589C  0E00               	movlw	0
 16038  00589E  6FE1               	movwf	225,b	;volatile
 16039                           
 16040                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
 16041  0058A0  0E00               	movlw	0
 16042  0058A2  6FE4               	movwf	228,b	;volatile
 16043                           
 16044                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
 16045  0058A4  0E00               	movlw	0
 16046  0058A6  6FE5               	movwf	229,b	;volatile
 16047                           
 16048                           ;mcc_generated_files/adcc.c: 78:     ADACCU = 0x00;
 16049  0058A8  0E00               	movlw	0
 16050  0058AA  6FEA               	movwf	234,b	;volatile
 16051                           
 16052                           ;mcc_generated_files/adcc.c: 80:     ADRPT = 0x00;
 16053  0058AC  0E00               	movlw	0
 16054  0058AE  6FEC               	movwf	236,b	;volatile
 16055                           
 16056                           ;mcc_generated_files/adcc.c: 82:     ADPCH = 0x00;
 16057  0058B0  0E00               	movlw	0
 16058  0058B2  6FF1               	movwf	241,b	;volatile
 16059                           
 16060                           ;mcc_generated_files/adcc.c: 84:     ADACQL = 0x58;
 16061  0058B4  0E58               	movlw	88
 16062  0058B6  6FF3               	movwf	243,b	;volatile
 16063                           
 16064                           ;mcc_generated_files/adcc.c: 86:     ADACQH = 0x02;
 16065  0058B8  0E02               	movlw	2
 16066  0058BA  6FF4               	movwf	244,b	;volatile
 16067                           
 16068                           ;mcc_generated_files/adcc.c: 88:     ADCAP = 0x00;
 16069  0058BC  0E00               	movlw	0
 16070  0058BE  6FF5               	movwf	245,b	;volatile
 16071                           
 16072                           ;mcc_generated_files/adcc.c: 90:     ADPREL = 0x00;
 16073  0058C0  0E00               	movlw	0
 16074  0058C2  6FF6               	movwf	246,b	;volatile
 16075                           
 16076                           ;mcc_generated_files/adcc.c: 92:     ADPREH = 0x00;
 16077  0058C4  0E00               	movlw	0
 16078  0058C6  6FF7               	movwf	247,b	;volatile
 16079                           
 16080                           ;mcc_generated_files/adcc.c: 94:     ADCON1 = 0x00;
 16081  0058C8  0E00               	movlw	0
 16082  0058CA  6FF9               	movwf	249,b	;volatile
 16083                           
 16084                           ;mcc_generated_files/adcc.c: 96:     ADCON2 = 0x00;
 16085  0058CC  0E00               	movlw	0
 16086  0058CE  6FFA               	movwf	250,b	;volatile
 16087                           
 16088                           ;mcc_generated_files/adcc.c: 98:     ADCON3 = 0x00;
 16089  0058D0  0E00               	movlw	0
 16090  0058D2  6FFB               	movwf	251,b	;volatile
 16091                           
 16092                           ;mcc_generated_files/adcc.c: 100:     ADSTAT = 0x00;
 16093  0058D4  0E00               	movlw	0
 16094  0058D6  6FFC               	movwf	252,b	;volatile
 16095                           
 16096                           ;mcc_generated_files/adcc.c: 102:     ADREF = 0x00;
 16097  0058D8  0E00               	movlw	0
 16098  0058DA  6FFD               	movwf	253,b	;volatile
 16099                           
 16100                           ;mcc_generated_files/adcc.c: 104:     ADACT = 0x00;
 16101  0058DC  0E00               	movlw	0
 16102  0058DE  6FFE               	movwf	254,b	;volatile
 16103                           
 16104                           ;mcc_generated_files/adcc.c: 106:     ADCLK = 0x1F;
 16105  0058E0  0E1F               	movlw	31
 16106  0058E2  6FFF               	movwf	255,b	;volatile
 16107                           
 16108                           ;mcc_generated_files/adcc.c: 108:     ADCON0 = 0x84;
 16109  0058E4  0E84               	movlw	132
 16110  0058E6  6FF8               	movwf	248,b	;volatile
 16111  0058E8                     
 16112                           ; BSR set to: 62
 16113  0058E8  0012               	return		;funcret
 16114  0058EA                     __end_of_ADCC_Initialize:
 16115                           	callstack 0
 16116                           
 16117 ;; *************** function _UART1_tx_vect_isr *****************
 16118 ;; Defined at:
 16119 ;;		line 235 in file "mcc_generated_files/uart1.c"
 16120 ;; Parameters:    Size  Location     Type
 16121 ;;		None
 16122 ;; Auto vars:     Size  Location     Type
 16123 ;;		None
 16124 ;; Return value:  Size  Location     Type
 16125 ;;                  1    wreg      void 
 16126 ;; Registers used:
 16127 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 16128 ;; Tracked objects:
 16129 ;;		On entry : 0/0
 16130 ;;		On exit  : 0/0
 16131 ;;		Unchanged: 0/0
 16132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16135 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16136 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16137 ;;Total ram usage:        1 bytes
 16138 ;; Hardware stack levels used: 1
 16139 ;; Hardware stack levels required when called: 5
 16140 ;; This function calls:
 16141 ;;		Absolute function
 16142 ;;		_UART1_Transmit_ISR
 16143 ;; This function is called by:
 16144 ;;		Interrupt level 1
 16145 ;; This function uses a non-reentrant model
 16146 ;;
 16147                           
 16148                           	psect	text82
 16149  005BF4                     __ptext82:
 16150                           	callstack 0
 16151  005BF4                     _UART1_tx_vect_isr:
 16152                           	callstack 13
 16153                           
 16154                           ; BSR set to: 62
 16155                           ;incstack = 0
 16156  005BF4  006F FF60  F011    	movff	status,??_UART1_tx_vect_isr
 16157  005BFA                     
 16158                           ;mcc_generated_files/uart1.c: 237:     if(UART1_TxInterruptHandler)
 16159  005BFA  0101               	movlb	1	; () banked
 16160  005BFC  51A0               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 16161  005BFE  11A1               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 16162  005C00  B4D8               	btfsc	status,2,c
 16163  005C02  EF05  F02E         	goto	i1u731_21
 16164  005C06  EF07  F02E         	goto	i1u731_20
 16165  005C0A                     i1u731_21:
 16166  005C0A  EF13  F02E         	goto	i1l324
 16167  005C0E                     i1u731_20:
 16168  005C0E                     
 16169                           ; BSR set to: 1
 16170                           ;mcc_generated_files/uart1.c: 238:     {;mcc_generated_files/uart1.c: 239:         UART1
      +                          _TxInterruptHandler();
 16171  005C0E  D802               	call	i1u732_28
 16172  005C10  EF13  F02E         	goto	i1u732_29
 16173  005C14                     i1u732_28:
 16174  005C14  0005               	push	
 16175  005C16  6EFA               	movwf	pclath,c
 16176  005C18  51A0               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 16177  005C1A  6EFD               	movwf	tosl,c
 16178  005C1C  51A1               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 16179  005C1E  6EFE               	movwf	tosh,c
 16180  005C20  6AFF               	clrf	tosu,c
 16181  005C22  50FA               	movf	pclath,w,c
 16182  005C24  0012               	return		;indir
 16183  005C26                     i1u732_29:
 16184  005C26                     i1l324:
 16185  005C26  0060  F047  FFD8   	movff	??_UART1_tx_vect_isr,status
 16186  005C2C  0011               	retfie		f
 16187  005C2E                     __end_of_UART1_tx_vect_isr:
 16188                           	callstack 0
 16189                           
 16190 ;; *************** function _UART1_Transmit_ISR *****************
 16191 ;; Defined at:
 16192 ;;		line 253 in file "mcc_generated_files/uart1.c"
 16193 ;; Parameters:    Size  Location     Type
 16194 ;;		None
 16195 ;; Auto vars:     Size  Location     Type
 16196 ;;		None
 16197 ;; Return value:  Size  Location     Type
 16198 ;;                  1    wreg      void 
 16199 ;; Registers used:
 16200 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16201 ;; Tracked objects:
 16202 ;;		On entry : 0/0
 16203 ;;		On exit  : 0/0
 16204 ;;		Unchanged: 0/0
 16205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16210 ;;Total ram usage:        0 bytes
 16211 ;; Hardware stack levels used: 1
 16212 ;; Hardware stack levels required when called: 4
 16213 ;; This function calls:
 16214 ;;		Nothing
 16215 ;; This function is called by:
 16216 ;;		_UART1_Initialize
 16217 ;;		_UART1_tx_vect_isr
 16218 ;; This function uses a non-reentrant model
 16219 ;;
 16220                           
 16221                           	psect	text83
 16222  005AF6                     __ptext83:
 16223                           	callstack 0
 16224  005AF6                     _UART1_Transmit_ISR:
 16225                           	callstack 13
 16226  005AF6                     
 16227                           ;mcc_generated_files/uart1.c: 256:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
 16228  005AF6  0E08               	movlw	8
 16229  005AF8  604C               	cpfslt	_uart1TxBufferRemaining^0,c	;volatile
 16230  005AFA  EF81  F02D         	goto	i1u712_21
 16231  005AFE  EF83  F02D         	goto	i1u712_20
 16232  005B02                     i1u712_21:
 16233  005B02  EF9A  F02D         	goto	i1l333
 16234  005B06                     i1u712_20:
 16235  005B06                     
 16236                           ;mcc_generated_files/uart1.c: 257:     {;mcc_generated_files/uart1.c: 258:         U1TXB
      +                           = uart1TxBuffer[uart1TxTail++];
 16237  005B06  0E10               	movlw	low _uart1TxBuffer
 16238  005B08  2446               	addwf	_uart1TxTail^0,w,c	;volatile
 16239  005B0A  6ED9               	movwf	fsr2l,c
 16240  005B0C  6ADA               	clrf	fsr2h,c
 16241  005B0E  0E01               	movlw	high _uart1TxBuffer
 16242  005B10  22DA               	addwfc	fsr2h,f,c
 16243  005B12  50DF               	movf	indf2,w,c
 16244  005B14  013D               	movlb	61	; () banked
 16245  005B16  6FEA               	movwf	234,b	;volatile
 16246  005B18                     
 16247                           ; BSR set to: 61
 16248  005B18  2A46               	incf	_uart1TxTail^0,f,c	;volatile
 16249  005B1A                     
 16250                           ; BSR set to: 61
 16251                           ;mcc_generated_files/uart1.c: 259:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
 16252  005B1A  0E07               	movlw	7
 16253  005B1C  6446               	cpfsgt	_uart1TxTail^0,c	;volatile
 16254  005B1E  EF93  F02D         	goto	i1u713_21
 16255  005B22  EF95  F02D         	goto	i1u713_20
 16256  005B26                     i1u713_21:
 16257  005B26  EF97  F02D         	goto	i1l7233
 16258  005B2A                     i1u713_20:
 16259  005B2A                     
 16260                           ; BSR set to: 61
 16261                           ;mcc_generated_files/uart1.c: 260:         {;mcc_generated_files/uart1.c: 261:          
      +                             uart1TxTail = 0;
 16262  005B2A  0E00               	movlw	0
 16263  005B2C  6E46               	movwf	_uart1TxTail^0,c	;volatile
 16264  005B2E                     i1l7233:
 16265                           
 16266                           ; BSR set to: 61
 16267                           ;mcc_generated_files/uart1.c: 263:         uart1TxBufferRemaining++;
 16268  005B2E  2A4C               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 16269                           
 16270                           ;mcc_generated_files/uart1.c: 264:     }
 16271  005B30  EF9C  F02D         	goto	i1l336
 16272  005B34                     i1l333:
 16273                           
 16274                           ;mcc_generated_files/uart1.c: 266:     {;mcc_generated_files/uart1.c: 267:         PIE3b
      +                          its.U1TXIE = 0;
 16275  005B34  0139               	movlb	57	; () banked
 16276  005B36  9993               	bcf	147,4,b	;volatile
 16277  005B38                     i1l336:
 16278  005B38  0012               	return		;funcret
 16279  005B3A                     __end_of_UART1_Transmit_ISR:
 16280                           	callstack 0
 16281                           
 16282 ;; *************** function _UART1_rx_vect_isr *****************
 16283 ;; Defined at:
 16284 ;;		line 243 in file "mcc_generated_files/uart1.c"
 16285 ;; Parameters:    Size  Location     Type
 16286 ;;		None
 16287 ;; Auto vars:     Size  Location     Type
 16288 ;;		None
 16289 ;; Return value:  Size  Location     Type
 16290 ;;                  1    wreg      void 
 16291 ;; Registers used:
 16292 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 16293 ;; Tracked objects:
 16294 ;;		On entry : 0/0
 16295 ;;		On exit  : 0/0
 16296 ;;		Unchanged: 0/0
 16297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16300 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16301 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16302 ;;Total ram usage:        1 bytes
 16303 ;; Hardware stack levels used: 1
 16304 ;; Hardware stack levels required when called: 7
 16305 ;; This function calls:
 16306 ;;		Absolute function
 16307 ;;		_UART1_Receive_ISR
 16308 ;; This function is called by:
 16309 ;;		Interrupt level 1
 16310 ;; This function uses a non-reentrant model
 16311 ;;
 16312                           
 16313                           	psect	text84
 16314  005C30                     __ptext84:
 16315                           	callstack 0
 16316  005C30                     _UART1_rx_vect_isr:
 16317                           	callstack 11
 16318                           
 16319                           ;incstack = 0
 16320  005C30  006F FF60  F012    	movff	status,??_UART1_rx_vect_isr
 16321  005C36                     
 16322                           ;mcc_generated_files/uart1.c: 245:     if(UART1_RxInterruptHandler)
 16323  005C36  0101               	movlb	1	; () banked
 16324  005C38  51A2               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 16325  005C3A  11A3               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 16326  005C3C  B4D8               	btfsc	status,2,c
 16327  005C3E  EF23  F02E         	goto	i1u733_21
 16328  005C42  EF25  F02E         	goto	i1u733_20
 16329  005C46                     i1u733_21:
 16330  005C46  EF31  F02E         	goto	i1l330
 16331  005C4A                     i1u733_20:
 16332  005C4A                     
 16333                           ; BSR set to: 1
 16334                           ;mcc_generated_files/uart1.c: 246:     {;mcc_generated_files/uart1.c: 247:         UART1
      +                          _RxInterruptHandler();
 16335  005C4A  D802               	call	i1u734_28
 16336  005C4C  EF31  F02E         	goto	i1u734_29
 16337  005C50                     i1u734_28:
 16338  005C50  0005               	push	
 16339  005C52  6EFA               	movwf	pclath,c
 16340  005C54  51A2               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 16341  005C56  6EFD               	movwf	tosl,c
 16342  005C58  51A3               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 16343  005C5A  6EFE               	movwf	tosh,c
 16344  005C5C  6AFF               	clrf	tosu,c
 16345  005C5E  50FA               	movf	pclath,w,c
 16346  005C60  0012               	return		;indir
 16347  005C62                     i1u734_29:
 16348  005C62                     i1l330:
 16349  005C62  0060  F04B  FFD8   	movff	??_UART1_rx_vect_isr,status
 16350  005C68  0011               	retfie		f
 16351  005C6A                     __end_of_UART1_rx_vect_isr:
 16352                           	callstack 0
 16353                           
 16354 ;; *************** function _UART1_Receive_ISR *****************
 16355 ;; Defined at:
 16356 ;;		line 273 in file "mcc_generated_files/uart1.c"
 16357 ;; Parameters:    Size  Location     Type
 16358 ;;		None
 16359 ;; Auto vars:     Size  Location     Type
 16360 ;;		None
 16361 ;; Return value:  Size  Location     Type
 16362 ;;                  1    wreg      void 
 16363 ;; Registers used:
 16364 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 16365 ;; Tracked objects:
 16366 ;;		On entry : 0/0
 16367 ;;		On exit  : 0/0
 16368 ;;		Unchanged: 0/0
 16369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16374 ;;Total ram usage:        0 bytes
 16375 ;; Hardware stack levels used: 1
 16376 ;; Hardware stack levels required when called: 6
 16377 ;; This function calls:
 16378 ;;		Absolute function
 16379 ;;		_UART1_DefaultErrorHandler
 16380 ;;		_UART1_DefaultFramingErrorHandler
 16381 ;;		_UART1_DefaultOverrunErrorHandler
 16382 ;;		_UART1_RxDataHandler
 16383 ;; This function is called by:
 16384 ;;		_UART1_Initialize
 16385 ;;		_UART1_rx_vect_isr
 16386 ;; This function uses a non-reentrant model
 16387 ;;
 16388                           
 16389                           	psect	text85
 16390  005120                     __ptext85:
 16391                           	callstack 0
 16392  005120                     _UART1_Receive_ISR:
 16393                           	callstack 11
 16394  005120                     
 16395                           ;mcc_generated_files/uart1.c: 276:     uart1RxStatusBuffer[uart1RxHead].status = 0;
 16396  005120  0E00               	movlw	low _uart1RxStatusBuffer
 16397  005122  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 16398  005124  6ED9               	movwf	fsr2l,c
 16399  005126  6ADA               	clrf	fsr2h,c
 16400  005128  0E01               	movlw	high _uart1RxStatusBuffer
 16401  00512A  22DA               	addwfc	fsr2h,f,c
 16402  00512C  0E00               	movlw	0
 16403  00512E  6EDF               	movwf	indf2,c
 16404  005130                     
 16405                           ;mcc_generated_files/uart1.c: 278:     if(U1ERRIRbits.FERIF){
 16406  005130  013D               	movlb	61	; () banked
 16407  005132  A7F9               	btfss	249,3,b	;volatile
 16408  005134  EF9E  F028         	goto	i1u714_21
 16409  005138  EFA0  F028         	goto	i1u714_20
 16410  00513C                     i1u714_21:
 16411  00513C  EFB4  F028         	goto	i1l7243
 16412  005140                     i1u714_20:
 16413  005140                     
 16414                           ; BSR set to: 61
 16415                           ;mcc_generated_files/uart1.c: 279:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
 16416  005140  0E00               	movlw	low _uart1RxStatusBuffer
 16417  005142  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 16418  005144  6ED9               	movwf	fsr2l,c
 16419  005146  6ADA               	clrf	fsr2h,c
 16420  005148  0E01               	movlw	high _uart1RxStatusBuffer
 16421  00514A  22DA               	addwfc	fsr2h,f,c
 16422  00514C  0101               	movlb	1	; () banked
 16423  00514E  82DF               	bsf	indf2,1,c
 16424  005150                     
 16425                           ; BSR set to: 1
 16426                           ;mcc_generated_files/uart1.c: 280:         UART1_FramingErrorHandler();
 16427  005150  D802               	call	i1u715_28
 16428  005152  EFB4  F028         	goto	i1u715_29
 16429  005156                     i1u715_28:
 16430  005156  0005               	push	
 16431  005158  6EFA               	movwf	pclath,c
 16432  00515A  519E               	movf	_UART1_FramingErrorHandler& (0+255),w,b
 16433  00515C  6EFD               	movwf	tosl,c
 16434  00515E  519F               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
 16435  005160  6EFE               	movwf	tosh,c
 16436  005162  6AFF               	clrf	tosu,c
 16437  005164  50FA               	movf	pclath,w,c
 16438  005166  0012               	return		;indir
 16439  005168                     i1u715_29:
 16440  005168                     i1l7243:
 16441                           
 16442                           ;mcc_generated_files/uart1.c: 283:     if(U1ERRIRbits.RXFOIF){
 16443  005168  013D               	movlb	61	; () banked
 16444  00516A  A3F9               	btfss	249,1,b	;volatile
 16445  00516C  EFBA  F028         	goto	i1u716_21
 16446  005170  EFBC  F028         	goto	i1u716_20
 16447  005174                     i1u716_21:
 16448  005174  EFD0  F028         	goto	i1l7249
 16449  005178                     i1u716_20:
 16450  005178                     
 16451                           ; BSR set to: 61
 16452                           ;mcc_generated_files/uart1.c: 284:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
 16453  005178  0E00               	movlw	low _uart1RxStatusBuffer
 16454  00517A  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 16455  00517C  6ED9               	movwf	fsr2l,c
 16456  00517E  6ADA               	clrf	fsr2h,c
 16457  005180  0E01               	movlw	high _uart1RxStatusBuffer
 16458  005182  22DA               	addwfc	fsr2h,f,c
 16459  005184  0101               	movlb	1	; () banked
 16460  005186  84DF               	bsf	indf2,2,c
 16461  005188                     
 16462                           ; BSR set to: 1
 16463                           ;mcc_generated_files/uart1.c: 285:         UART1_OverrunErrorHandler();
 16464  005188  D802               	call	i1u717_28
 16465  00518A  EFD0  F028         	goto	i1u717_29
 16466  00518E                     i1u717_28:
 16467  00518E  0005               	push	
 16468  005190  6EFA               	movwf	pclath,c
 16469  005192  519C               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
 16470  005194  6EFD               	movwf	tosl,c
 16471  005196  519D               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
 16472  005198  6EFE               	movwf	tosh,c
 16473  00519A  6AFF               	clrf	tosu,c
 16474  00519C  50FA               	movf	pclath,w,c
 16475  00519E  0012               	return		;indir
 16476  0051A0                     i1u717_29:
 16477  0051A0                     i1l7249:
 16478                           
 16479                           ;mcc_generated_files/uart1.c: 288:     if(uart1RxStatusBuffer[uart1RxHead].status){
 16480  0051A0  0E00               	movlw	low _uart1RxStatusBuffer
 16481  0051A2  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 16482  0051A4  6ED9               	movwf	fsr2l,c
 16483  0051A6  6ADA               	clrf	fsr2h,c
 16484  0051A8  0E01               	movlw	high _uart1RxStatusBuffer
 16485  0051AA  22DA               	addwfc	fsr2h,f,c
 16486  0051AC  50DF               	movf	indf2,w,c
 16487  0051AE  B4D8               	btfsc	status,2,c
 16488  0051B0  EFDC  F028         	goto	i1u718_21
 16489  0051B4  EFDE  F028         	goto	i1u718_20
 16490  0051B8                     i1u718_21:
 16491  0051B8  EFED  F028         	goto	i1l7253
 16492  0051BC                     i1u718_20:
 16493  0051BC                     
 16494                           ;mcc_generated_files/uart1.c: 289:         UART1_ErrorHandler();
 16495  0051BC  D802               	call	i1u719_28
 16496  0051BE  EFEB  F028         	goto	i1u719_29
 16497  0051C2                     i1u719_28:
 16498  0051C2  0005               	push	
 16499  0051C4  6EFA               	movwf	pclath,c
 16500  0051C6  0101               	movlb	1	; () banked
 16501  0051C8  519A               	movf	_UART1_ErrorHandler& (0+255),w,b
 16502  0051CA  6EFD               	movwf	tosl,c
 16503  0051CC  519B               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
 16504  0051CE  6EFE               	movwf	tosh,c
 16505  0051D0  6AFF               	clrf	tosu,c
 16506  0051D2  50FA               	movf	pclath,w,c
 16507  0051D4  0012               	return		;indir
 16508  0051D6                     i1u719_29:
 16509                           
 16510                           ;mcc_generated_files/uart1.c: 290:     } else {
 16511  0051D6  EFEF  F028         	goto	i1l343
 16512  0051DA                     i1l7253:
 16513                           
 16514                           ;mcc_generated_files/uart1.c: 291:         UART1_RxDataHandler();
 16515  0051DA  EC32  F030         	call	_UART1_RxDataHandler	;wreg free
 16516  0051DE                     i1l343:
 16517  0051DE  0012               	return		;funcret
 16518  0051E0                     __end_of_UART1_Receive_ISR:
 16519                           	callstack 0
 16520                           
 16521 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
 16522 ;; Defined at:
 16523 ;;		line 309 in file "mcc_generated_files/uart1.c"
 16524 ;; Parameters:    Size  Location     Type
 16525 ;;		None
 16526 ;; Auto vars:     Size  Location     Type
 16527 ;;		None
 16528 ;; Return value:  Size  Location     Type
 16529 ;;                  1    wreg      void 
 16530 ;; Registers used:
 16531 ;;		None
 16532 ;; Tracked objects:
 16533 ;;		On entry : 0/0
 16534 ;;		On exit  : 0/0
 16535 ;;		Unchanged: 0/0
 16536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16541 ;;Total ram usage:        0 bytes
 16542 ;; Hardware stack levels used: 1
 16543 ;; Hardware stack levels required when called: 4
 16544 ;; This function calls:
 16545 ;;		Nothing
 16546 ;; This function is called by:
 16547 ;;		_UART1_Initialize
 16548 ;;		_UART1_Receive_ISR
 16549 ;; This function uses a non-reentrant model
 16550 ;;
 16551                           
 16552                           	psect	text86
 16553  0062D0                     __ptext86:
 16554                           	callstack 0
 16555  0062D0                     _UART1_DefaultOverrunErrorHandler:
 16556                           	callstack 12
 16557  0062D0  0012               	return		;funcret
 16558  0062D2                     __end_of_UART1_DefaultOverrunErrorHandler:
 16559                           	callstack 0
 16560                           
 16561 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
 16562 ;; Defined at:
 16563 ;;		line 307 in file "mcc_generated_files/uart1.c"
 16564 ;; Parameters:    Size  Location     Type
 16565 ;;		None
 16566 ;; Auto vars:     Size  Location     Type
 16567 ;;		None
 16568 ;; Return value:  Size  Location     Type
 16569 ;;                  1    wreg      void 
 16570 ;; Registers used:
 16571 ;;		None
 16572 ;; Tracked objects:
 16573 ;;		On entry : 0/0
 16574 ;;		On exit  : 0/0
 16575 ;;		Unchanged: 0/0
 16576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16581 ;;Total ram usage:        0 bytes
 16582 ;; Hardware stack levels used: 1
 16583 ;; Hardware stack levels required when called: 4
 16584 ;; This function calls:
 16585 ;;		Nothing
 16586 ;; This function is called by:
 16587 ;;		_UART1_Initialize
 16588 ;;		_UART1_Receive_ISR
 16589 ;; This function uses a non-reentrant model
 16590 ;;
 16591                           
 16592                           	psect	text87
 16593  0062D2                     __ptext87:
 16594                           	callstack 0
 16595  0062D2                     _UART1_DefaultFramingErrorHandler:
 16596                           	callstack 12
 16597  0062D2  0012               	return		;funcret
 16598  0062D4                     __end_of_UART1_DefaultFramingErrorHandler:
 16599                           	callstack 0
 16600                           
 16601 ;; *************** function _UART1_DefaultErrorHandler *****************
 16602 ;; Defined at:
 16603 ;;		line 311 in file "mcc_generated_files/uart1.c"
 16604 ;; Parameters:    Size  Location     Type
 16605 ;;		None
 16606 ;; Auto vars:     Size  Location     Type
 16607 ;;		None
 16608 ;; Return value:  Size  Location     Type
 16609 ;;                  1    wreg      void 
 16610 ;; Registers used:
 16611 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16612 ;; Tracked objects:
 16613 ;;		On entry : 0/0
 16614 ;;		On exit  : 0/0
 16615 ;;		Unchanged: 0/0
 16616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16620 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16621 ;;Total ram usage:        0 bytes
 16622 ;; Hardware stack levels used: 1
 16623 ;; Hardware stack levels required when called: 5
 16624 ;; This function calls:
 16625 ;;		_UART1_RxDataHandler
 16626 ;; This function is called by:
 16627 ;;		_UART1_Initialize
 16628 ;;		_UART1_Receive_ISR
 16629 ;; This function uses a non-reentrant model
 16630 ;;
 16631                           
 16632                           	psect	text88
 16633  0062CA                     __ptext88:
 16634                           	callstack 0
 16635  0062CA                     _UART1_DefaultErrorHandler:
 16636                           	callstack 11
 16637  0062CA                     
 16638                           ;mcc_generated_files/uart1.c: 312:     UART1_RxDataHandler();
 16639  0062CA  EC32  F030         	call	_UART1_RxDataHandler	;wreg free
 16640  0062CE  0012               	return		;funcret
 16641  0062D0                     __end_of_UART1_DefaultErrorHandler:
 16642                           	callstack 0
 16643                           
 16644 ;; *************** function _UART1_RxDataHandler *****************
 16645 ;; Defined at:
 16646 ;;		line 297 in file "mcc_generated_files/uart1.c"
 16647 ;; Parameters:    Size  Location     Type
 16648 ;;		None
 16649 ;; Auto vars:     Size  Location     Type
 16650 ;;		None
 16651 ;; Return value:  Size  Location     Type
 16652 ;;                  1    wreg      void 
 16653 ;; Registers used:
 16654 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16655 ;; Tracked objects:
 16656 ;;		On entry : 0/0
 16657 ;;		On exit  : 0/0
 16658 ;;		Unchanged: 0/0
 16659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16664 ;;Total ram usage:        0 bytes
 16665 ;; Hardware stack levels used: 1
 16666 ;; Hardware stack levels required when called: 4
 16667 ;; This function calls:
 16668 ;;		Nothing
 16669 ;; This function is called by:
 16670 ;;		_UART1_Receive_ISR
 16671 ;;		_UART1_DefaultErrorHandler
 16672 ;; This function uses a non-reentrant model
 16673 ;;
 16674                           
 16675                           	psect	text89
 16676  006064                     __ptext89:
 16677                           	callstack 0
 16678  006064                     _UART1_RxDataHandler:
 16679                           	callstack 12
 16680  006064                     
 16681                           ;mcc_generated_files/uart1.c: 299:     uart1RxBuffer[uart1RxHead++] = U1RXB;
 16682  006064  0E08               	movlw	low _uart1RxBuffer
 16683  006066  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 16684  006068  6ED9               	movwf	fsr2l,c
 16685  00606A  6ADA               	clrf	fsr2h,c
 16686  00606C  0E01               	movlw	high _uart1RxBuffer
 16687  00606E  22DA               	addwfc	fsr2h,f,c
 16688  006070  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 16689  006076  2A45               	incf	_uart1RxHead^0,f,c	;volatile
 16690  006078                     
 16691                           ;mcc_generated_files/uart1.c: 300:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 16692  006078  0E07               	movlw	7
 16693  00607A  6445               	cpfsgt	_uart1RxHead^0,c	;volatile
 16694  00607C  EF42  F030         	goto	i1u655_21
 16695  006080  EF44  F030         	goto	i1u655_20
 16696  006084                     i1u655_21:
 16697  006084  EF46  F030         	goto	i1l6665
 16698  006088                     i1u655_20:
 16699  006088                     
 16700                           ;mcc_generated_files/uart1.c: 301:     {;mcc_generated_files/uart1.c: 302:         uart1
      +                          RxHead = 0;
 16701  006088  0E00               	movlw	0
 16702  00608A  6E45               	movwf	_uart1RxHead^0,c	;volatile
 16703  00608C                     i1l6665:
 16704                           
 16705                           ;mcc_generated_files/uart1.c: 304:     uart1RxCount++;
 16706  00608C  2A43               	incf	_uart1RxCount^0,f,c	;volatile
 16707  00608E  0012               	return		;funcret
 16708  006090                     __end_of_UART1_RxDataHandler:
 16709                           	callstack 0
 16710                           
 16711 ;; *************** function _TMR4_ISR *****************
 16712 ;; Defined at:
 16713 ;;		line 166 in file "mcc_generated_files/tmr4.c"
 16714 ;; Parameters:    Size  Location     Type
 16715 ;;		None
 16716 ;; Auto vars:     Size  Location     Type
 16717 ;;		None
 16718 ;; Return value:  Size  Location     Type
 16719 ;;                  1    wreg      void 
 16720 ;; Registers used:
 16721 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 16722 ;; Tracked objects:
 16723 ;;		On entry : 0/0
 16724 ;;		On exit  : 0/0
 16725 ;;		Unchanged: 0/0
 16726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16729 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16730 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16731 ;;Total ram usage:        1 bytes
 16732 ;; Hardware stack levels used: 1
 16733 ;; Hardware stack levels required when called: 6
 16734 ;; This function calls:
 16735 ;;		_TMR4_CallBack
 16736 ;; This function is called by:
 16737 ;;		Interrupt level 1
 16738 ;; This function uses a non-reentrant model
 16739 ;;
 16740                           
 16741                           	psect	text90
 16742  005B7C                     __ptext90:
 16743                           	callstack 0
 16744  005B7C                     _TMR4_ISR:
 16745                           	callstack 12
 16746                           
 16747                           ;incstack = 0
 16748  005B7C  006F FF60  F013    	movff	status,??_TMR4_ISR
 16749  005B82                     
 16750                           ;mcc_generated_files/tmr4.c: 168:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr4.c: 171:     PIR7bits.TMR4IF = 0;
 16751  005B82  0139               	movlb	57	; () banked
 16752  005B84  91A7               	bcf	167,0,b	;volatile
 16753  005B86                     
 16754                           ; BSR set to: 57
 16755                           ;mcc_generated_files/tmr4.c: 174:     if (++CountCallBack >= 10)
 16756  005B86  0100               	movlb	0	; () banked
 16757  005B88  4BF3               	infsnz	TMR4_ISR@CountCallBack& (0+255),f,b	;volatile
 16758  005B8A  2BF4               	incf	(TMR4_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 16759  005B8C  51F4               	movf	(TMR4_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 16760  005B8E  E109               	bnz	i1u739_20
 16761  005B90  0E0A               	movlw	10
 16762  005B92  5DF3               	subwf	TMR4_ISR@CountCallBack& (0+255),w,b	;volatile
 16763  005B94  A0D8               	btfss	status,0,c
 16764  005B96  EFCF  F02D         	goto	i1u739_21
 16765  005B9A  EFD1  F02D         	goto	i1u739_20
 16766  005B9E                     i1u739_21:
 16767  005B9E  EFD8  F02D         	goto	i1l688
 16768  005BA2                     i1u739_20:
 16769  005BA2                     
 16770                           ; BSR set to: 0
 16771                           ;mcc_generated_files/tmr4.c: 175:     {;mcc_generated_files/tmr4.c: 177:         TMR4_Ca
      +                          llBack();
 16772  005BA2  ECEF  F02F         	call	_TMR4_CallBack	;wreg free
 16773  005BA6                     
 16774                           ;mcc_generated_files/tmr4.c: 180:         CountCallBack = 0;
 16775  005BA6  0E00               	movlw	0
 16776  005BA8  0100               	movlb	0	; () banked
 16777  005BAA  6FF4               	movwf	(TMR4_ISR@CountCallBack+1)& (0+255),b	;volatile
 16778  005BAC  0E00               	movlw	0
 16779  005BAE  6FF3               	movwf	TMR4_ISR@CountCallBack& (0+255),b	;volatile
 16780  005BB0                     i1l688:
 16781                           
 16782                           ; BSR set to: 0
 16783  005BB0  0060  F04F  FFD8   	movff	??_TMR4_ISR,status
 16784  005BB6  0011               	retfie		f
 16785  005BB8                     __end_of_TMR4_ISR:
 16786                           	callstack 0
 16787                           
 16788 ;; *************** function _TMR4_CallBack *****************
 16789 ;; Defined at:
 16790 ;;		line 184 in file "mcc_generated_files/tmr4.c"
 16791 ;; Parameters:    Size  Location     Type
 16792 ;;		None
 16793 ;; Auto vars:     Size  Location     Type
 16794 ;;		None
 16795 ;; Return value:  Size  Location     Type
 16796 ;;                  1    wreg      void 
 16797 ;; Registers used:
 16798 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 16799 ;; Tracked objects:
 16800 ;;		On entry : 0/0
 16801 ;;		On exit  : 0/0
 16802 ;;		Unchanged: 0/0
 16803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16808 ;;Total ram usage:        0 bytes
 16809 ;; Hardware stack levels used: 1
 16810 ;; Hardware stack levels required when called: 5
 16811 ;; This function calls:
 16812 ;;		Absolute function
 16813 ;;		_TMR4_10msISR
 16814 ;;		_TMR4_DefaultInterruptHandler
 16815 ;; This function is called by:
 16816 ;;		_TMR4_ISR
 16817 ;; This function uses a non-reentrant model
 16818 ;;
 16819                           
 16820                           	psect	text91
 16821  005FDE                     __ptext91:
 16822                           	callstack 0
 16823  005FDE                     _TMR4_CallBack:
 16824                           	callstack 12
 16825  005FDE                     
 16826                           ;mcc_generated_files/tmr4.c: 188:     if(TMR4_InterruptHandler)
 16827  005FDE  0101               	movlb	1	; () banked
 16828  005FE0  518E               	movf	_TMR4_InterruptHandler& (0+255),w,b
 16829  005FE2  118F               	iorwf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 16830  005FE4  B4D8               	btfsc	status,2,c
 16831  005FE6  EFF7  F02F         	goto	i1u723_21
 16832  005FEA  EFF9  F02F         	goto	i1u723_20
 16833  005FEE                     i1u723_21:
 16834  005FEE  EF05  F030         	goto	i1l692
 16835  005FF2                     i1u723_20:
 16836  005FF2                     
 16837                           ; BSR set to: 1
 16838                           ;mcc_generated_files/tmr4.c: 189:     {;mcc_generated_files/tmr4.c: 190:         TMR4_In
      +                          terruptHandler();
 16839  005FF2  D802               	call	i1u724_28
 16840  005FF4  EF05  F030         	goto	i1u724_29
 16841  005FF8                     i1u724_28:
 16842  005FF8  0005               	push	
 16843  005FFA  6EFA               	movwf	pclath,c
 16844  005FFC  518E               	movf	_TMR4_InterruptHandler& (0+255),w,b
 16845  005FFE  6EFD               	movwf	tosl,c
 16846  006000  518F               	movf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 16847  006002  6EFE               	movwf	tosh,c
 16848  006004  6AFF               	clrf	tosu,c
 16849  006006  50FA               	movf	pclath,w,c
 16850  006008  0012               	return		;indir
 16851  00600A                     i1u724_29:
 16852  00600A                     i1l692:
 16853  00600A  0012               	return		;funcret
 16854  00600C                     __end_of_TMR4_CallBack:
 16855                           	callstack 0
 16856                           
 16857 ;; *************** function _TMR4_10msISR *****************
 16858 ;; Defined at:
 16859 ;;		line 68 in file "main.c"
 16860 ;; Parameters:    Size  Location     Type
 16861 ;;		None
 16862 ;; Auto vars:     Size  Location     Type
 16863 ;;		None
 16864 ;; Return value:  Size  Location     Type
 16865 ;;                  1    wreg      void 
 16866 ;; Registers used:
 16867 ;;		status,2, status,0
 16868 ;; Tracked objects:
 16869 ;;		On entry : 0/0
 16870 ;;		On exit  : 0/0
 16871 ;;		Unchanged: 0/0
 16872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16877 ;;Total ram usage:        0 bytes
 16878 ;; Hardware stack levels used: 1
 16879 ;; Hardware stack levels required when called: 4
 16880 ;; This function calls:
 16881 ;;		Nothing
 16882 ;; This function is called by:
 16883 ;;		_main
 16884 ;;		_TMR4_CallBack
 16885 ;; This function uses a non-reentrant model
 16886 ;;
 16887                           
 16888                           	psect	text92
 16889  00625A                     __ptext92:
 16890                           	callstack 0
 16891  00625A                     _TMR4_10msISR:
 16892                           	callstack 12
 16893  00625A                     
 16894                           ;main.c: 69:     ++cycle10ms;
 16895  00625A  0100               	movlb	0	; () banked
 16896  00625C  2BFB               	incf	_cycle10ms& (0+255),f,b	;volatile
 16897                           
 16898                           ;main.c: 70:     ++roundTimeCount;
 16899  00625E  0101               	movlb	1	; () banked
 16900  006260  4B2A               	infsnz	_roundTimeCount& (0+255),f,b
 16901  006262  2B2B               	incf	(_roundTimeCount+1)& (0+255),f,b
 16902  006264                     
 16903                           ; BSR set to: 1
 16904  006264  0012               	return		;funcret
 16905  006266                     __end_of_TMR4_10msISR:
 16906                           	callstack 0
 16907                           
 16908 ;; *************** function _TMR4_DefaultInterruptHandler *****************
 16909 ;; Defined at:
 16910 ;;		line 198 in file "mcc_generated_files/tmr4.c"
 16911 ;; Parameters:    Size  Location     Type
 16912 ;;		None
 16913 ;; Auto vars:     Size  Location     Type
 16914 ;;		None
 16915 ;; Return value:  Size  Location     Type
 16916 ;;                  1    wreg      void 
 16917 ;; Registers used:
 16918 ;;		None
 16919 ;; Tracked objects:
 16920 ;;		On entry : 0/0
 16921 ;;		On exit  : 0/0
 16922 ;;		Unchanged: 0/0
 16923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16928 ;;Total ram usage:        0 bytes
 16929 ;; Hardware stack levels used: 1
 16930 ;; Hardware stack levels required when called: 4
 16931 ;; This function calls:
 16932 ;;		Nothing
 16933 ;; This function is called by:
 16934 ;;		_TMR4_Initialize
 16935 ;;		_TMR4_CallBack
 16936 ;; This function uses a non-reentrant model
 16937 ;;
 16938                           
 16939                           	psect	text93
 16940  0062D4                     __ptext93:
 16941                           	callstack 0
 16942  0062D4                     _TMR4_DefaultInterruptHandler:
 16943                           	callstack 12
 16944  0062D4  0012               	return		;funcret
 16945  0062D6                     __end_of_TMR4_DefaultInterruptHandler:
 16946                           	callstack 0
 16947                           
 16948 ;; *************** function _Default_ISR *****************
 16949 ;; Defined at:
 16950 ;;		line 83 in file "mcc_generated_files/interrupt_manager.c"
 16951 ;; Parameters:    Size  Location     Type
 16952 ;;		None
 16953 ;; Auto vars:     Size  Location     Type
 16954 ;;		None
 16955 ;; Return value:  Size  Location     Type
 16956 ;;                  1    wreg      void 
 16957 ;; Registers used:
 16958 ;;		None
 16959 ;; Tracked objects:
 16960 ;;		On entry : 0/0
 16961 ;;		On exit  : 0/0
 16962 ;;		Unchanged: 0/0
 16963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16968 ;;Total ram usage:        0 bytes
 16969 ;; Hardware stack levels used: 1
 16970 ;; This function calls:
 16971 ;;		Nothing
 16972 ;; This function is called by:
 16973 ;;		Interrupt level 2
 16974 ;; This function uses a non-reentrant model
 16975 ;;
 16976                           
 16977                           	psect	text94
 16978  0062D8                     __ptext94:
 16979                           	callstack 0
 16980  0062D8                     _Default_ISR:
 16981                           	callstack 14
 16982  0062D8  0011               	retfie		f
 16983  0062DA                     __end_of_Default_ISR:
 16984                           	callstack 0
 16985                           
 16986 ;; *************** function _CCP3_CaptureISR *****************
 16987 ;; Defined at:
 16988 ;;		line 104 in file "mcc_generated_files/ccp3.c"
 16989 ;; Parameters:    Size  Location     Type
 16990 ;;		None
 16991 ;; Auto vars:     Size  Location     Type
 16992 ;;  module          2    2[COMRAM] struct CCPR3Reg_tag
 16993 ;; Return value:  Size  Location     Type
 16994 ;;                  1    wreg      void 
 16995 ;; Registers used:
 16996 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 16997 ;; Tracked objects:
 16998 ;;		On entry : 0/0
 16999 ;;		On exit  : 0/0
 17000 ;;		Unchanged: 0/0
 17001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17003 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17005 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17006 ;;Total ram usage:        2 bytes
 17007 ;; Hardware stack levels used: 1
 17008 ;; Hardware stack levels required when called: 1
 17009 ;; This function calls:
 17010 ;;		Absolute function
 17011 ;;		_CCP3_DefaultCallBack
 17012 ;; This function is called by:
 17013 ;;		Interrupt level 2
 17014 ;; This function uses a non-reentrant model
 17015 ;;
 17016                           
 17017                           	psect	text95
 17018  005E84                     __ptext95:
 17019                           	callstack 0
 17020  005E84                     _CCP3_CaptureISR:
 17021                           	callstack 13
 17022  005E84                     
 17023                           ;mcc_generated_files/ccp3.c: 106:     CCP3_PERIOD_REG_T module;;mcc_generated_files/ccp3
      +                          .c: 109:     PIR9bits.CCP3IF = 0;
 17024  005E84  0139               	movlb	57	; () banked
 17025  005E86  93A9               	bcf	169,1,b	;volatile
 17026                           
 17027                           ;mcc_generated_files/ccp3.c: 112:     module.ccpr3l = CCPR3L;
 17028  005E88  006F FDD0  F003    	movff	16244,CCP3_CaptureISR@module	;volatile
 17029                           
 17030                           ;mcc_generated_files/ccp3.c: 113:     module.ccpr3h = CCPR3H;
 17031  005E8E  006F FDD4  F004    	movff	16245,CCP3_CaptureISR@module+1	;volatile
 17032  005E94                     
 17033                           ; BSR set to: 57
 17034                           ;mcc_generated_files/ccp3.c: 116:     CCP3_CallBack(module.ccpr3_16Bit);
 17035  005E94  C003  F001         	movff	CCP3_CaptureISR@module,CCP3_DefaultCallBack@capturedValue
 17036  005E98  C004  F002         	movff	CCP3_CaptureISR@module+1,CCP3_DefaultCallBack@capturedValue+1
 17037  005E9C  D802               	call	i2u735_48
 17038  005E9E  EF5B  F02F         	goto	i2u735_49
 17039  005EA2                     i2u735_48:
 17040  005EA2  0005               	push	
 17041  005EA4  6EFA               	movwf	pclath,c
 17042  005EA6  0101               	movlb	1	; () banked
 17043  005EA8  5198               	movf	_CCP3_CallBack& (0+255),w,b
 17044  005EAA  6EFD               	movwf	tosl,c
 17045  005EAC  5199               	movf	(_CCP3_CallBack+1)& (0+255),w,b
 17046  005EAE  6EFE               	movwf	tosh,c
 17047  005EB0  6AFF               	clrf	tosu,c
 17048  005EB2  50FA               	movf	pclath,w,c
 17049  005EB4  0012               	return		;indir
 17050  005EB6                     i2u735_49:
 17051  005EB6  0011               	retfie		f
 17052  005EB8                     __end_of_CCP3_CaptureISR:
 17053                           	callstack 0
 17054                           
 17055 ;; *************** function _CCP3_DefaultCallBack *****************
 17056 ;; Defined at:
 17057 ;;		line 64 in file "mcc_generated_files/ccp3.c"
 17058 ;; Parameters:    Size  Location     Type
 17059 ;;  capturedValu    2    0[COMRAM] unsigned short 
 17060 ;; Auto vars:     Size  Location     Type
 17061 ;;		None
 17062 ;; Return value:  Size  Location     Type
 17063 ;;                  1    wreg      void 
 17064 ;; Registers used:
 17065 ;;		wreg, status,2, status,0
 17066 ;; Tracked objects:
 17067 ;;		On entry : 0/0
 17068 ;;		On exit  : 0/0
 17069 ;;		Unchanged: 0/0
 17070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17071 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17074 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17075 ;;Total ram usage:        2 bytes
 17076 ;; Hardware stack levels used: 1
 17077 ;; This function calls:
 17078 ;;		Nothing
 17079 ;; This function is called by:
 17080 ;;		_CCP3_Initialize
 17081 ;;		_CCP3_CaptureISR
 17082 ;; This function uses a non-reentrant model
 17083 ;;
 17084                           
 17085                           	psect	text96
 17086  005D48                     __ptext96:
 17087                           	callstack 0
 17088  005D48                     _CCP3_DefaultCallBack:
 17089                           	callstack 13
 17090  005D48                     
 17091                           ;mcc_generated_files/ccp3.c: 64: static void CCP3_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp3.c: 65: {;mcc_generated_files/ccp3.c: 67:     if(PORTDbits.RD7
      +                          ) {
 17092  005D48  AECD               	btfss	205,7,c	;volatile
 17093  005D4A  EFA9  F02E         	goto	i2u720_41
 17094  005D4E  EFAB  F02E         	goto	i2u720_40
 17095  005D52                     i2u720_41:
 17096  005D52  EFB1  F02E         	goto	i2l7259
 17097  005D56                     i2u720_40:
 17098  005D56                     
 17099                           ;mcc_generated_files/ccp3.c: 68:         distLeftM = capturedValue;
 17100  005D56  C001  F13C         	movff	CCP3_DefaultCallBack@capturedValue,_distLeftM
 17101  005D5A  C002  F13D         	movff	CCP3_DefaultCallBack@capturedValue+1,_distLeftM+1
 17102                           
 17103                           ;mcc_generated_files/ccp3.c: 69:     } else {
 17104  005D5E  EFBE  F02E         	goto	i2l438
 17105  005D62                     i2l7259:
 17106                           
 17107                           ;mcc_generated_files/ccp3.c: 70:         distLeft = capturedValue - distLeftM;
 17108  005D62  0101               	movlb	1	; () banked
 17109  005D64  513C               	movf	_distLeftM& (0+255),w,b
 17110  005D66  5C01               	subwf	CCP3_DefaultCallBack@capturedValue^0,w,c
 17111  005D68  0100               	movlb	0	; () banked
 17112  005D6A  6FF7               	movwf	_distLeft& (0+255),b	;volatile
 17113  005D6C  0101               	movlb	1	; () banked
 17114  005D6E  513D               	movf	(_distLeftM+1)& (0+255),w,b
 17115  005D70  5802               	subwfb	(CCP3_DefaultCallBack@capturedValue+1)^0,w,c
 17116  005D72  0100               	movlb	0	; () banked
 17117  005D74  6FF8               	movwf	(_distLeft+1)& (0+255),b	;volatile
 17118  005D76                     
 17119                           ; BSR set to: 0
 17120                           ;mcc_generated_files/ccp3.c: 71:         distLeft >>= 1;
 17121  005D76  90D8               	bcf	status,0,c
 17122  005D78  33F8               	rrcf	(_distLeft+1)& (0+255),f,b	;volatile
 17123  005D7A  33F7               	rrcf	_distLeft& (0+255),f,b	;volatile
 17124  005D7C                     i2l438:
 17125  005D7C  0012               	return		;funcret
 17126  005D7E                     __end_of_CCP3_DefaultCallBack:
 17127                           	callstack 0
 17128                           
 17129 ;; *************** function _CCP4_CaptureISR *****************
 17130 ;; Defined at:
 17131 ;;		line 107 in file "mcc_generated_files/ccp4.c"
 17132 ;; Parameters:    Size  Location     Type
 17133 ;;		None
 17134 ;; Auto vars:     Size  Location     Type
 17135 ;;  module          2    6[COMRAM] struct CCPR4Reg_tag
 17136 ;; Return value:  Size  Location     Type
 17137 ;;                  1    wreg      void 
 17138 ;; Registers used:
 17139 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 17140 ;; Tracked objects:
 17141 ;;		On entry : 0/0
 17142 ;;		On exit  : 0/0
 17143 ;;		Unchanged: 0/0
 17144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17146 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17148 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17149 ;;Total ram usage:        2 bytes
 17150 ;; Hardware stack levels used: 1
 17151 ;; Hardware stack levels required when called: 1
 17152 ;; This function calls:
 17153 ;;		Absolute function
 17154 ;;		_CCP4_DefaultCallBack
 17155 ;; This function is called by:
 17156 ;;		Interrupt level 2
 17157 ;; This function uses a non-reentrant model
 17158 ;;
 17159                           
 17160                           	psect	text97
 17161  005EB8                     __ptext97:
 17162                           	callstack 0
 17163  005EB8                     _CCP4_CaptureISR:
 17164                           	callstack 13
 17165  005EB8                     
 17166                           ;mcc_generated_files/ccp4.c: 109:     CCP4_PERIOD_REG_T module;;mcc_generated_files/ccp4
      +                          .c: 112:     PIR10bits.CCP4IF = 0;
 17167  005EB8  0139               	movlb	57	; () banked
 17168  005EBA  91AA               	bcf	170,0,b	;volatile
 17169                           
 17170                           ;mcc_generated_files/ccp4.c: 115:     module.ccpr4l = CCPR4L;
 17171  005EBC  006F FDC0  F007    	movff	16240,CCP4_CaptureISR@module	;volatile
 17172                           
 17173                           ;mcc_generated_files/ccp4.c: 116:     module.ccpr4h = CCPR4H;
 17174  005EC2  006F FDC4  F008    	movff	16241,CCP4_CaptureISR@module+1	;volatile
 17175  005EC8                     
 17176                           ; BSR set to: 57
 17177                           ;mcc_generated_files/ccp4.c: 119:     CCP4_CallBack(module.ccpr4_16Bit);
 17178  005EC8  C007  F005         	movff	CCP4_CaptureISR@module,CCP4_DefaultCallBack@capturedValue
 17179  005ECC  C008  F006         	movff	CCP4_CaptureISR@module+1,CCP4_DefaultCallBack@capturedValue+1
 17180  005ED0  D802               	call	i2u736_48
 17181  005ED2  EF75  F02F         	goto	i2u736_49
 17182  005ED6                     i2u736_48:
 17183  005ED6  0005               	push	
 17184  005ED8  6EFA               	movwf	pclath,c
 17185  005EDA  0101               	movlb	1	; () banked
 17186  005EDC  5196               	movf	_CCP4_CallBack& (0+255),w,b
 17187  005EDE  6EFD               	movwf	tosl,c
 17188  005EE0  5197               	movf	(_CCP4_CallBack+1)& (0+255),w,b
 17189  005EE2  6EFE               	movwf	tosh,c
 17190  005EE4  6AFF               	clrf	tosu,c
 17191  005EE6  50FA               	movf	pclath,w,c
 17192  005EE8  0012               	return		;indir
 17193  005EEA                     i2u736_49:
 17194  005EEA  0011               	retfie		f
 17195  005EEC                     __end_of_CCP4_CaptureISR:
 17196                           	callstack 0
 17197                           
 17198 ;; *************** function _CCP4_DefaultCallBack *****************
 17199 ;; Defined at:
 17200 ;;		line 64 in file "mcc_generated_files/ccp4.c"
 17201 ;; Parameters:    Size  Location     Type
 17202 ;;  capturedValu    2    4[COMRAM] unsigned short 
 17203 ;; Auto vars:     Size  Location     Type
 17204 ;;		None
 17205 ;; Return value:  Size  Location     Type
 17206 ;;                  1    wreg      void 
 17207 ;; Registers used:
 17208 ;;		wreg, status,2, status,0
 17209 ;; Tracked objects:
 17210 ;;		On entry : 0/0
 17211 ;;		On exit  : 0/0
 17212 ;;		Unchanged: 0/0
 17213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17214 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17217 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17218 ;;Total ram usage:        2 bytes
 17219 ;; Hardware stack levels used: 1
 17220 ;; This function calls:
 17221 ;;		Nothing
 17222 ;; This function is called by:
 17223 ;;		_CCP4_Initialize
 17224 ;;		_CCP4_CaptureISR
 17225 ;; This function uses a non-reentrant model
 17226 ;;
 17227                           
 17228                           	psect	text98
 17229  005D7E                     __ptext98:
 17230                           	callstack 0
 17231  005D7E                     _CCP4_DefaultCallBack:
 17232                           	callstack 13
 17233  005D7E                     
 17234                           ;mcc_generated_files/ccp4.c: 64: static void CCP4_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp4.c: 65: {;mcc_generated_files/ccp4.c: 67:     if(PORTDbits.RD6
      +                          ) {
 17235  005D7E  ACCD               	btfss	205,6,c	;volatile
 17236  005D80  EFC4  F02E         	goto	i2u721_41
 17237  005D84  EFC6  F02E         	goto	i2u721_40
 17238  005D88                     i2u721_41:
 17239  005D88  EFCC  F02E         	goto	i2l7267
 17240  005D8C                     i2u721_40:
 17241  005D8C                     
 17242                           ;mcc_generated_files/ccp4.c: 68:         distRightM = capturedValue;
 17243  005D8C  C005  F13A         	movff	CCP4_DefaultCallBack@capturedValue,_distRightM
 17244  005D90  C006  F13B         	movff	CCP4_DefaultCallBack@capturedValue+1,_distRightM+1
 17245                           
 17246                           ;mcc_generated_files/ccp4.c: 70:     } else {
 17247  005D94  EFD9  F02E         	goto	i2l476
 17248  005D98                     i2l7267:
 17249                           
 17250                           ;mcc_generated_files/ccp4.c: 71:         distRight = capturedValue - distRightM;
 17251  005D98  0101               	movlb	1	; () banked
 17252  005D9A  513A               	movf	_distRightM& (0+255),w,b
 17253  005D9C  5C05               	subwf	CCP4_DefaultCallBack@capturedValue^0,w,c
 17254  005D9E  0100               	movlb	0	; () banked
 17255  005DA0  6FF5               	movwf	_distRight& (0+255),b	;volatile
 17256  005DA2  0101               	movlb	1	; () banked
 17257  005DA4  513B               	movf	(_distRightM+1)& (0+255),w,b
 17258  005DA6  5806               	subwfb	(CCP4_DefaultCallBack@capturedValue+1)^0,w,c
 17259  005DA8  0100               	movlb	0	; () banked
 17260  005DAA  6FF6               	movwf	(_distRight+1)& (0+255),b	;volatile
 17261  005DAC                     
 17262                           ; BSR set to: 0
 17263                           ;mcc_generated_files/ccp4.c: 72:         distRight >>= 1;
 17264  005DAC  90D8               	bcf	status,0,c
 17265  005DAE  33F6               	rrcf	(_distRight+1)& (0+255),f,b	;volatile
 17266  005DB0  33F5               	rrcf	_distRight& (0+255),f,b	;volatile
 17267  005DB2                     i2l476:
 17268  005DB2  0012               	return		;funcret
 17269  005DB4                     __end_of_CCP4_DefaultCallBack:
 17270                           	callstack 0
 17271                           
 17272 ;; *************** function _TMR5_GATE_ISR *****************
 17273 ;; Defined at:
 17274 ;;		line 175 in file "mcc_generated_files/tmr5.c"
 17275 ;; Parameters:    Size  Location     Type
 17276 ;;		None
 17277 ;; Auto vars:     Size  Location     Type
 17278 ;;		None
 17279 ;; Return value:  Size  Location     Type
 17280 ;;                  1    wreg      void 
 17281 ;; Registers used:
 17282 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 17283 ;; Tracked objects:
 17284 ;;		On entry : 0/0
 17285 ;;		On exit  : 0/0
 17286 ;;		Unchanged: 0/0
 17287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17292 ;;Total ram usage:        0 bytes
 17293 ;; Hardware stack levels used: 1
 17294 ;; Hardware stack levels required when called: 3
 17295 ;; This function calls:
 17296 ;;		Absolute function
 17297 ;;		_TMR5_DefaultGateInterruptHandler
 17298 ;; This function is called by:
 17299 ;;		Interrupt level 2
 17300 ;; This function uses a non-reentrant model
 17301 ;;
 17302                           
 17303                           	psect	text99
 17304  005F20                     __ptext99:
 17305                           	callstack 0
 17306  005F20                     _TMR5_GATE_ISR:
 17307                           	callstack 11
 17308  005F20                     
 17309                           ;mcc_generated_files/tmr5.c: 178:     PIR8bits.TMR5GIF = 0;
 17310  005F20  0139               	movlb	57	; () banked
 17311  005F22  9FA8               	bcf	168,7,b	;volatile
 17312  005F24                     
 17313                           ; BSR set to: 57
 17314                           ;mcc_generated_files/tmr5.c: 180:     if(TMR5_GateInterruptHandler)
 17315  005F24  0101               	movlb	1	; () banked
 17316  005F26  5192               	movf	_TMR5_GateInterruptHandler& (0+255),w,b
 17317  005F28  1193               	iorwf	(_TMR5_GateInterruptHandler+1)& (0+255),w,b
 17318  005F2A  B4D8               	btfsc	status,2,c
 17319  005F2C  EF9A  F02F         	goto	i2u737_41
 17320  005F30  EF9C  F02F         	goto	i2u737_40
 17321  005F34                     i2u737_41:
 17322  005F34  EFA8  F02F         	goto	i2l552
 17323  005F38                     i2u737_40:
 17324  005F38                     
 17325                           ; BSR set to: 1
 17326                           ;mcc_generated_files/tmr5.c: 181:     {;mcc_generated_files/tmr5.c: 182:         TMR5_Ga
      +                          teInterruptHandler();
 17327  005F38  D802               	call	i2u738_48
 17328  005F3A  EFA8  F02F         	goto	i2u738_49
 17329  005F3E                     i2u738_48:
 17330  005F3E  0005               	push	
 17331  005F40  6EFA               	movwf	pclath,c
 17332  005F42  5192               	movf	_TMR5_GateInterruptHandler& (0+255),w,b
 17333  005F44  6EFD               	movwf	tosl,c
 17334  005F46  5193               	movf	(_TMR5_GateInterruptHandler+1)& (0+255),w,b
 17335  005F48  6EFE               	movwf	tosh,c
 17336  005F4A  6AFF               	clrf	tosu,c
 17337  005F4C  50FA               	movf	pclath,w,c
 17338  005F4E  0012               	return		;indir
 17339  005F50                     i2u738_49:
 17340  005F50                     i2l552:
 17341  005F50  0011               	retfie		f
 17342  005F52                     __end_of_TMR5_GATE_ISR:
 17343                           	callstack 0
 17344                           
 17345 ;; *************** function _TMR5_DefaultGateInterruptHandler *****************
 17346 ;; Defined at:
 17347 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 17348 ;; Parameters:    Size  Location     Type
 17349 ;;		None
 17350 ;; Auto vars:     Size  Location     Type
 17351 ;;		None
 17352 ;; Return value:  Size  Location     Type
 17353 ;;                  1    wreg      void 
 17354 ;; Registers used:
 17355 ;;		wreg, status,2, status,0, cstack
 17356 ;; Tracked objects:
 17357 ;;		On entry : 0/0
 17358 ;;		On exit  : 0/0
 17359 ;;		Unchanged: 0/0
 17360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17365 ;;Total ram usage:        0 bytes
 17366 ;; Hardware stack levels used: 1
 17367 ;; Hardware stack levels required when called: 2
 17368 ;; This function calls:
 17369 ;;		_TMR5_ReadTimer
 17370 ;;		_TMR5_Reload
 17371 ;; This function is called by:
 17372 ;;		_TMR5_Initialize
 17373 ;;		_TMR5_GATE_ISR
 17374 ;; This function uses a non-reentrant model
 17375 ;;
 17376                           
 17377                           	psect	text100
 17378  00619A                     __ptext100:
 17379                           	callstack 0
 17380  00619A                     _TMR5_DefaultGateInterruptHandler:
 17381                           	callstack 11
 17382  00619A                     
 17383                           ;mcc_generated_files/tmr5.c: 194:     distFront = TMR5_ReadTimer();
 17384  00619A  ECAB  F030         	call	_TMR5_ReadTimer	;wreg free
 17385  00619E  C009  F0FD         	movff	?_TMR5_ReadTimer,_distFront	;volatile
 17386  0061A2  C00A  F0FE         	movff	?_TMR5_ReadTimer+1,_distFront+1	;volatile
 17387  0061A6                     
 17388                           ;mcc_generated_files/tmr5.c: 195:     distFront >>= 1;
 17389  0061A6  0100               	movlb	0	; () banked
 17390  0061A8  90D8               	bcf	status,0,c
 17391  0061AA  33FE               	rrcf	(_distFront+1)& (0+255),f,b	;volatile
 17392  0061AC  33FD               	rrcf	_distFront& (0+255),f,b	;volatile
 17393  0061AE                     
 17394                           ; BSR set to: 0
 17395                           ;mcc_generated_files/tmr5.c: 196:     TMR5_Reload();
 17396  0061AE  EC26  F031         	call	_TMR5_Reload	;wreg free
 17397  0061B2                     
 17398                           ;mcc_generated_files/tmr5.c: 197:     PIR8bits.TMR5GIF = 0;
 17399  0061B2  0139               	movlb	57	; () banked
 17400  0061B4  9FA8               	bcf	168,7,b	;volatile
 17401  0061B6                     
 17402                           ; BSR set to: 57
 17403  0061B6  0012               	return		;funcret
 17404  0061B8                     __end_of_TMR5_DefaultGateInterruptHandler:
 17405                           	callstack 0
 17406                           
 17407 ;; *************** function _TMR5_Reload *****************
 17408 ;; Defined at:
 17409 ;;		line 155 in file "mcc_generated_files/tmr5.c"
 17410 ;; Parameters:    Size  Location     Type
 17411 ;;		None
 17412 ;; Auto vars:     Size  Location     Type
 17413 ;;		None
 17414 ;; Return value:  Size  Location     Type
 17415 ;;                  1    wreg      void 
 17416 ;; Registers used:
 17417 ;;		wreg, status,2, cstack
 17418 ;; Tracked objects:
 17419 ;;		On entry : 0/0
 17420 ;;		On exit  : 0/0
 17421 ;;		Unchanged: 0/0
 17422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17427 ;;Total ram usage:        0 bytes
 17428 ;; Hardware stack levels used: 1
 17429 ;; Hardware stack levels required when called: 1
 17430 ;; This function calls:
 17431 ;;		_TMR5_WriteTimer
 17432 ;; This function is called by:
 17433 ;;		_TMR5_DefaultGateInterruptHandler
 17434 ;; This function uses a non-reentrant model
 17435 ;;
 17436                           
 17437                           	psect	text101
 17438  00624C                     __ptext101:
 17439                           	callstack 0
 17440  00624C                     _TMR5_Reload:
 17441                           	callstack 11
 17442  00624C                     
 17443                           ;mcc_generated_files/tmr5.c: 157:     TMR5_WriteTimer(timer5ReloadVal);
 17444  00624C  C194  F009         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 17445  006250  C195  F00A         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 17446  006254  EC48  F030         	call	_TMR5_WriteTimer	;wreg free
 17447  006258  0012               	return		;funcret
 17448  00625A                     __end_of_TMR5_Reload:
 17449                           	callstack 0
 17450                           
 17451 ;; *************** function _TMR5_WriteTimer *****************
 17452 ;; Defined at:
 17453 ;;		line 133 in file "mcc_generated_files/tmr5.c"
 17454 ;; Parameters:    Size  Location     Type
 17455 ;;  timerVal        2    8[COMRAM] unsigned short 
 17456 ;; Auto vars:     Size  Location     Type
 17457 ;;		None
 17458 ;; Return value:  Size  Location     Type
 17459 ;;                  1    wreg      void 
 17460 ;; Registers used:
 17461 ;;		wreg, status,2
 17462 ;; Tracked objects:
 17463 ;;		On entry : 0/0
 17464 ;;		On exit  : 0/0
 17465 ;;		Unchanged: 0/0
 17466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17467 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17470 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17471 ;;Total ram usage:        2 bytes
 17472 ;; Hardware stack levels used: 1
 17473 ;; This function calls:
 17474 ;;		Nothing
 17475 ;; This function is called by:
 17476 ;;		_TMR5_Reload
 17477 ;; This function uses a non-reentrant model
 17478 ;;
 17479                           
 17480                           	psect	text102
 17481  006090                     __ptext102:
 17482                           	callstack 0
 17483  006090                     _TMR5_WriteTimer:
 17484                           	callstack 11
 17485  006090                     
 17486                           ;mcc_generated_files/tmr5.c: 133: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 134: {;mcc_generated_files/tmr5.c: 135:     if (T5CONbits.NOT_SYNC == 1)
 17487  006090  A49A               	btfss	154,2,c	;volatile
 17488  006092  EF4D  F030         	goto	i2u656_41
 17489  006096  EF4F  F030         	goto	i2u656_40
 17490  00609A                     i2u656_41:
 17491  00609A  EF58  F030         	goto	i2l6683
 17492  00609E                     i2u656_40:
 17493  00609E                     
 17494                           ;mcc_generated_files/tmr5.c: 136:     {;mcc_generated_files/tmr5.c: 138:         T5CONbi
      +                          ts.TMR5ON = 0;
 17495  00609E  909A               	bcf	154,0,c	;volatile
 17496  0060A0                     
 17497                           ;mcc_generated_files/tmr5.c: 141:         TMR5H = (uint8_t)(timerVal >> 8);
 17498  0060A0  500A               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
 17499  0060A2  6E99               	movwf	153,c	;volatile
 17500  0060A4                     
 17501                           ;mcc_generated_files/tmr5.c: 142:         TMR5L = (uint8_t)timerVal;
 17502  0060A4  0060  F027  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 17503  0060AA                     
 17504                           ;mcc_generated_files/tmr5.c: 145:         T5CONbits.TMR5ON =1;
 17505  0060AA  809A               	bsf	154,0,c	;volatile
 17506                           
 17507                           ;mcc_generated_files/tmr5.c: 146:     }
 17508  0060AC  EF5D  F030         	goto	i2l534
 17509  0060B0                     i2l6683:
 17510                           
 17511                           ;mcc_generated_files/tmr5.c: 148:     {;mcc_generated_files/tmr5.c: 150:         TMR5H =
      +                           (uint8_t)(timerVal >> 8);
 17512  0060B0  500A               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
 17513  0060B2  6E99               	movwf	153,c	;volatile
 17514  0060B4                     
 17515                           ;mcc_generated_files/tmr5.c: 151:         TMR5L = (uint8_t)timerVal;
 17516  0060B4  0060  F027  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 17517  0060BA                     i2l534:
 17518  0060BA  0012               	return		;funcret
 17519  0060BC                     __end_of_TMR5_WriteTimer:
 17520                           	callstack 0
 17521                           
 17522 ;; *************** function _TMR5_ReadTimer *****************
 17523 ;; Defined at:
 17524 ;;		line 117 in file "mcc_generated_files/tmr5.c"
 17525 ;; Parameters:    Size  Location     Type
 17526 ;;		None
 17527 ;; Auto vars:     Size  Location     Type
 17528 ;;  readVal         2   12[COMRAM] unsigned short 
 17529 ;;  readValLow      1   15[COMRAM] unsigned char 
 17530 ;;  readValHigh     1   14[COMRAM] unsigned char 
 17531 ;; Return value:  Size  Location     Type
 17532 ;;                  2    8[COMRAM] unsigned short 
 17533 ;; Registers used:
 17534 ;;		wreg, status,2
 17535 ;; Tracked objects:
 17536 ;;		On entry : 0/0
 17537 ;;		On exit  : 0/0
 17538 ;;		Unchanged: 0/0
 17539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17540 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17541 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17542 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17543 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17544 ;;Total ram usage:        8 bytes
 17545 ;; Hardware stack levels used: 1
 17546 ;; This function calls:
 17547 ;;		Nothing
 17548 ;; This function is called by:
 17549 ;;		_TMR5_DefaultGateInterruptHandler
 17550 ;; This function uses a non-reentrant model
 17551 ;;
 17552                           
 17553                           	psect	text103
 17554  006156                     __ptext103:
 17555                           	callstack 0
 17556  006156                     _TMR5_ReadTimer:
 17557                           	callstack 12
 17558  006156                     
 17559                           ;mcc_generated_files/tmr5.c: 119:     uint16_t readVal;;mcc_generated_files/tmr5.c: 120:
      +                               uint8_t readValHigh;;mcc_generated_files/tmr5.c: 121:     uint8_t readValLow;;mcc_g
      +                          enerated_files/tmr5.c: 123:     T5CONbits.T5RD16 = 1;
 17560  006156  829A               	bsf	154,1,c	;volatile
 17561                           
 17562                           ;mcc_generated_files/tmr5.c: 125:     readValLow = TMR5L;
 17563  006158  006F FE60  F010    	movff	16280,TMR5_ReadTimer@readValLow	;volatile
 17564                           
 17565                           ;mcc_generated_files/tmr5.c: 126:     readValHigh = TMR5H;
 17566  00615E  006F FE64  F00F    	movff	16281,TMR5_ReadTimer@readValHigh	;volatile
 17567  006164                     
 17568                           ;mcc_generated_files/tmr5.c: 128:     readVal = ((uint16_t)readValHigh << 8) | readValLo
      +                          w;
 17569  006164  500F               	movf	TMR5_ReadTimer@readValHigh^0,w,c
 17570  006166  6E0B               	movwf	??_TMR5_ReadTimer^0,c
 17571  006168  5010               	movf	TMR5_ReadTimer@readValLow^0,w,c
 17572  00616A  6E0D               	movwf	TMR5_ReadTimer@readVal^0,c
 17573  00616C  C00B  F00E         	movff	??_TMR5_ReadTimer,TMR5_ReadTimer@readVal+1
 17574  006170                     
 17575                           ;mcc_generated_files/tmr5.c: 130:     return readVal;
 17576  006170  C00D  F009         	movff	TMR5_ReadTimer@readVal,?_TMR5_ReadTimer
 17577  006174  C00E  F00A         	movff	TMR5_ReadTimer@readVal+1,?_TMR5_ReadTimer+1
 17578  006178  0012               	return		;funcret
 17579  00617A                     __end_of_TMR5_ReadTimer:
 17580                           	callstack 0
 17581                           
 17582 ;; *************** function _SMT1_PR_ACQ_ISR *****************
 17583 ;; Defined at:
 17584 ;;		line 192 in file "mcc_generated_files/smt1.c"
 17585 ;; Parameters:    Size  Location     Type
 17586 ;;		None
 17587 ;; Auto vars:     Size  Location     Type
 17588 ;;		None
 17589 ;; Return value:  Size  Location     Type
 17590 ;;                  1    wreg      void 
 17591 ;; Registers used:
 17592 ;;		wreg, status,2, status,0
 17593 ;; Tracked objects:
 17594 ;;		On entry : 0/0
 17595 ;;		On exit  : 0/0
 17596 ;;		Unchanged: 0/0
 17597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17602 ;;Total ram usage:        0 bytes
 17603 ;; Hardware stack levels used: 1
 17604 ;; This function calls:
 17605 ;;		Nothing
 17606 ;; This function is called by:
 17607 ;;		Interrupt level 2
 17608 ;; This function uses a non-reentrant model
 17609 ;;
 17610                           
 17611                           	psect	text104
 17612  005A20                     __ptext104:
 17613                           	callstack 0
 17614  005A20                     _SMT1_PR_ACQ_ISR:
 17615                           	callstack 14
 17616  005A20                     
 17617                           ;mcc_generated_files/smt1.c: 196:     PIR1bits.SMT1PRAIF = 0;
 17618  005A20  0139               	movlb	57	; () banked
 17619  005A22  9DA1               	bcf	161,6,b	;volatile
 17620  005A24                     
 17621                           ; BSR set to: 57
 17622                           ;mcc_generated_files/smt1.c: 197:     smtPeriod = SMT1CPR;
 17623  005A24  013F               	movlb	63	; () banked
 17624  005A26  5115               	movf	21,w,b	;volatile
 17625  005A28  6E48               	movwf	_smtPeriod^0,c	;volatile
 17626  005A2A  5116               	movf	22,w,b	;volatile
 17627  005A2C  6E49               	movwf	(_smtPeriod+1)^0,c	;volatile
 17628  005A2E  5117               	movf	23,w,b	;volatile
 17629  005A30  6E4A               	movwf	(_smtPeriod+2)^0,c	;volatile
 17630  005A32  6A4B               	clrf	(_smtPeriod+3)^0,c	;volatile
 17631  005A34                     
 17632                           ; BSR set to: 63
 17633                           ;mcc_generated_files/smt1.c: 198:     if(CLC3CONbits.LC3OUT) smtWay++;
 17634  005A34  013C               	movlb	60	; () banked
 17635  005A36  AB60               	btfss	96,5,b	;volatile
 17636  005A38  EF20  F02D         	goto	i2u740_41
 17637  005A3C  EF22  F02D         	goto	i2u740_40
 17638  005A40                     i2u740_41:
 17639  005A40  EF2B  F02D         	goto	i2l7383
 17640  005A44                     i2u740_40:
 17641  005A44                     
 17642                           ; BSR set to: 60
 17643  005A44  0E01               	movlw	1
 17644  005A46  0101               	movlb	1	; () banked
 17645  005A48  2720               	addwf	_smtWay& (0+255),f,b	;volatile
 17646  005A4A  0E00               	movlw	0
 17647  005A4C  2321               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 17648  005A4E  2322               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 17649  005A50  2323               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 17650  005A52  EF34  F02D         	goto	i2l856
 17651  005A56                     i2l7383:
 17652                           
 17653                           ; BSR set to: 60
 17654  005A56  0EFF               	movlw	255
 17655  005A58  0101               	movlb	1	; () banked
 17656  005A5A  2720               	addwf	_smtWay& (0+255),f,b	;volatile
 17657  005A5C  0EFF               	movlw	255
 17658  005A5E  2321               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 17659  005A60  0EFF               	movlw	255
 17660  005A62  2322               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 17661  005A64  0EFF               	movlw	255
 17662  005A66  2323               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 17663  005A68                     i2l856:
 17664                           
 17665                           ; BSR set to: 1
 17666  005A68  0011               	retfie		f
 17667  005A6A                     __end_of_SMT1_PR_ACQ_ISR:
 17668                           	callstack 0
 17669                           
 17670 ;; *************** function _SMT1_PW_ACQ_ISR *****************
 17671 ;; Defined at:
 17672 ;;		line 203 in file "mcc_generated_files/smt1.c"
 17673 ;; Parameters:    Size  Location     Type
 17674 ;;		None
 17675 ;; Auto vars:     Size  Location     Type
 17676 ;;		None
 17677 ;; Return value:  Size  Location     Type
 17678 ;;                  1    wreg      void 
 17679 ;; Registers used:
 17680 ;;		wreg, status,2, status,0
 17681 ;; Tracked objects:
 17682 ;;		On entry : 0/0
 17683 ;;		On exit  : 0/0
 17684 ;;		Unchanged: 0/0
 17685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17690 ;;Total ram usage:        0 bytes
 17691 ;; Hardware stack levels used: 1
 17692 ;; This function calls:
 17693 ;;		Nothing
 17694 ;; This function is called by:
 17695 ;;		Interrupt level 2
 17696 ;; This function uses a non-reentrant model
 17697 ;;
 17698                           
 17699                           	psect	text105
 17700  0058EC                     __ptext105:
 17701                           	callstack 0
 17702  0058EC                     _SMT1_PW_ACQ_ISR:
 17703                           	callstack 14
 17704  0058EC                     
 17705                           ;mcc_generated_files/smt1.c: 207:     PIR1bits.SMT1PWAIF = 0;
 17706  0058EC  0139               	movlb	57	; () banked
 17707  0058EE  9FA1               	bcf	161,7,b	;volatile
 17708  0058F0                     
 17709                           ; BSR set to: 57
 17710                           ;mcc_generated_files/smt1.c: 208:     smtDuty = SMT1CPW;
 17711  0058F0  013F               	movlb	63	; () banked
 17712  0058F2  5118               	movf	24,w,b	;volatile
 17713  0058F4  0101               	movlb	1	; () banked
 17714  0058F6  6F24               	movwf	_smtDuty& (0+255),b	;volatile
 17715  0058F8  013F               	movlb	63	; () banked
 17716  0058FA  5119               	movf	25,w,b	;volatile
 17717  0058FC  0101               	movlb	1	; () banked
 17718  0058FE  6F25               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 17719  005900  013F               	movlb	63	; () banked
 17720  005902  511A               	movf	26,w,b	;volatile
 17721  005904  0101               	movlb	1	; () banked
 17722  005906  6F26               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 17723  005908  6B27               	clrf	(_smtDuty+3)& (0+255),b	;volatile
 17724  00590A                     
 17725                           ; BSR set to: 1
 17726                           ;mcc_generated_files/smt1.c: 209:     if(CLC3CONbits.LC3OUT) smtWay++;
 17727  00590A  013C               	movlb	60	; () banked
 17728  00590C  AB60               	btfss	96,5,b	;volatile
 17729  00590E  EF8B  F02C         	goto	i2u741_41
 17730  005912  EF8D  F02C         	goto	i2u741_40
 17731  005916                     i2u741_41:
 17732  005916  EF96  F02C         	goto	i2l7393
 17733  00591A                     i2u741_40:
 17734  00591A                     
 17735                           ; BSR set to: 60
 17736  00591A  0E01               	movlw	1
 17737  00591C  0101               	movlb	1	; () banked
 17738  00591E  2720               	addwf	_smtWay& (0+255),f,b	;volatile
 17739  005920  0E00               	movlw	0
 17740  005922  2321               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 17741  005924  2322               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 17742  005926  2323               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 17743  005928  EF9F  F02C         	goto	i2l863
 17744  00592C                     i2l7393:
 17745                           
 17746                           ; BSR set to: 60
 17747  00592C  0EFF               	movlw	255
 17748  00592E  0101               	movlb	1	; () banked
 17749  005930  2720               	addwf	_smtWay& (0+255),f,b	;volatile
 17750  005932  0EFF               	movlw	255
 17751  005934  2321               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 17752  005936  0EFF               	movlw	255
 17753  005938  2322               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 17754  00593A  0EFF               	movlw	255
 17755  00593C  2323               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 17756  00593E                     i2l863:
 17757                           
 17758                           ; BSR set to: 1
 17759  00593E  0011               	retfie		f
 17760  005940                     __end_of_SMT1_PW_ACQ_ISR:
 17761                           	callstack 0
 17762                           
 17763 ;; *************** function _SMT1_Overflow_ISR *****************
 17764 ;; Defined at:
 17765 ;;		line 213 in file "mcc_generated_files/smt1.c"
 17766 ;; Parameters:    Size  Location     Type
 17767 ;;		None
 17768 ;; Auto vars:     Size  Location     Type
 17769 ;;		None
 17770 ;; Return value:  Size  Location     Type
 17771 ;;                  1    wreg      void 
 17772 ;; Registers used:
 17773 ;;		wreg, status,2
 17774 ;; Tracked objects:
 17775 ;;		On entry : 0/0
 17776 ;;		On exit  : 0/0
 17777 ;;		Unchanged: 0/0
 17778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17783 ;;Total ram usage:        0 bytes
 17784 ;; Hardware stack levels used: 1
 17785 ;; This function calls:
 17786 ;;		Nothing
 17787 ;; This function is called by:
 17788 ;;		Interrupt level 2
 17789 ;; This function uses a non-reentrant model
 17790 ;;
 17791                           
 17792                           	psect	text106
 17793  0060E4                     __ptext106:
 17794                           	callstack 0
 17795  0060E4                     _SMT1_Overflow_ISR:
 17796                           	callstack 14
 17797  0060E4                     
 17798                           ;mcc_generated_files/smt1.c: 217:     PIR1bits.SMT1IF = 0;
 17799  0060E4  0139               	movlb	57	; () banked
 17800  0060E6  9BA1               	bcf	161,5,b	;volatile
 17801  0060E8                     
 17802                           ; BSR set to: 57
 17803                           ;mcc_generated_files/smt1.c: 218:     smtPeriod = 0;
 17804  0060E8  0E00               	movlw	0
 17805  0060EA  6E48               	movwf	_smtPeriod^0,c	;volatile
 17806  0060EC  0E00               	movlw	0
 17807  0060EE  6E49               	movwf	(_smtPeriod+1)^0,c	;volatile
 17808  0060F0  0E00               	movlw	0
 17809  0060F2  6E4A               	movwf	(_smtPeriod+2)^0,c	;volatile
 17810  0060F4  0E00               	movlw	0
 17811  0060F6  6E4B               	movwf	(_smtPeriod+3)^0,c	;volatile
 17812                           
 17813                           ;mcc_generated_files/smt1.c: 219:     smtDuty = 0;
 17814  0060F8  0E00               	movlw	0
 17815  0060FA  0101               	movlb	1	; () banked
 17816  0060FC  6F24               	movwf	_smtDuty& (0+255),b	;volatile
 17817  0060FE  0E00               	movlw	0
 17818  006100  6F25               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 17819  006102  0E00               	movlw	0
 17820  006104  6F26               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 17821  006106  0E00               	movlw	0
 17822  006108  6F27               	movwf	(_smtDuty+3)& (0+255),b	;volatile
 17823  00610A                     
 17824                           ; BSR set to: 1
 17825  00610A  0011               	retfie		f
 17826  00610C                     __end_of_SMT1_Overflow_ISR:
 17827                           	callstack 0
 17828                           
 17829                           ;
 17830                           ; Interrupt Vector Table @ 0x8
 17831                           ;
 17832                           
 17833                           	psect	ivt0x8
 17834  000008                     __pivt0x8:
 17835                           	callstack 0
 17836  000008                     ivt0x8_base:
 17837                           	callstack 0
 17838                           
 17839                           ; Vector 0 : SWINT
 17840  000008  18B6               	dw	_Default_ISR shr (0+2)
 17841                           
 17842                           ; Vector 1 : HLVD
 17843  00000A  18B6               	dw	_Default_ISR shr (0+2)
 17844                           
 17845                           ; Vector 2 : OSF
 17846  00000C  18B6               	dw	_Default_ISR shr (0+2)
 17847                           
 17848                           ; Vector 3 : CSW
 17849  00000E  18B6               	dw	_Default_ISR shr (0+2)
 17850                           
 17851                           ; Vector 4 : NVM
 17852  000010  18B6               	dw	_Default_ISR shr (0+2)
 17853                           
 17854                           ; Vector 5 : SCAN
 17855  000012  18B6               	dw	_Default_ISR shr (0+2)
 17856                           
 17857                           ; Vector 6 : CRC
 17858  000014  18B6               	dw	_Default_ISR shr (0+2)
 17859                           
 17860                           ; Vector 7 : IOC
 17861  000016  18B6               	dw	_Default_ISR shr (0+2)
 17862                           
 17863                           ; Vector 8 : INT0
 17864  000018  18B6               	dw	_Default_ISR shr (0+2)
 17865                           
 17866                           ; Vector 9 : ZCD
 17867  00001A  18B6               	dw	_Default_ISR shr (0+2)
 17868                           
 17869                           ; Vector 10 : AD
 17870  00001C  18B6               	dw	_Default_ISR shr (0+2)
 17871                           
 17872                           ; Vector 11 : ADT
 17873  00001E  18B6               	dw	_Default_ISR shr (0+2)
 17874                           
 17875                           ; Vector 12 : CMP1
 17876  000020  18B6               	dw	_Default_ISR shr (0+2)
 17877                           
 17878                           ; Vector 13 : SMT1
 17879  000022  1839               	dw	_SMT1_Overflow_ISR shr (0+2)
 17880                           
 17881                           ; Vector 14 : SMT1PRA
 17882  000024  1688               	dw	_SMT1_PR_ACQ_ISR shr (0+2)
 17883                           
 17884                           ; Vector 15 : SMT1PRW
 17885  000026  163B               	dw	_SMT1_PW_ACQ_ISR shr (0+2)
 17886                           
 17887                           ; Vector 16 : DMA1SCNT
 17888  000028  18B6               	dw	_Default_ISR shr (0+2)
 17889                           
 17890                           ; Vector 17 : DMA1DCNT
 17891  00002A  18B6               	dw	_Default_ISR shr (0+2)
 17892                           
 17893                           ; Vector 18 : DMA1OR
 17894  00002C  18B6               	dw	_Default_ISR shr (0+2)
 17895                           
 17896                           ; Vector 19 : DMA1A
 17897  00002E  18B6               	dw	_Default_ISR shr (0+2)
 17898                           
 17899                           ; Vector 20 : SPI1RX
 17900  000030  18B6               	dw	_Default_ISR shr (0+2)
 17901                           
 17902                           ; Vector 21 : SPI1TX
 17903  000032  18B6               	dw	_Default_ISR shr (0+2)
 17904                           
 17905                           ; Vector 22 : SPI1
 17906  000034  18B6               	dw	_Default_ISR shr (0+2)
 17907                           
 17908                           ; Vector 23 : I2C1RX
 17909  000036  18B6               	dw	_Default_ISR shr (0+2)
 17910                           
 17911                           ; Vector 24 : I2C1TX
 17912  000038  18B6               	dw	_Default_ISR shr (0+2)
 17913                           
 17914                           ; Vector 25 : I2C1
 17915  00003A  18B6               	dw	_Default_ISR shr (0+2)
 17916                           
 17917                           ; Vector 26 : I2C1E
 17918  00003C  18B6               	dw	_Default_ISR shr (0+2)
 17919                           
 17920                           ; Vector 27 : U1RX
 17921  00003E  170C               	dw	_UART1_rx_vect_isr shr (0+2)
 17922                           
 17923                           ; Vector 28 : U1TX
 17924  000040  16FD               	dw	_UART1_tx_vect_isr shr (0+2)
 17925                           
 17926                           ; Vector 29 : U1E
 17927  000042  18B6               	dw	_Default_ISR shr (0+2)
 17928                           
 17929                           ; Vector 30 : U1
 17930  000044  18B6               	dw	_Default_ISR shr (0+2)
 17931                           
 17932                           ; Vector 31 : TMR0
 17933  000046  18B6               	dw	_Default_ISR shr (0+2)
 17934                           
 17935                           ; Vector 32 : TMR1
 17936  000048  18B6               	dw	_Default_ISR shr (0+2)
 17937                           
 17938                           ; Vector 33 : TMR1G
 17939  00004A  18B6               	dw	_Default_ISR shr (0+2)
 17940                           
 17941                           ; Vector 34 : TMR2
 17942  00004C  18B6               	dw	_Default_ISR shr (0+2)
 17943                           
 17944                           ; Vector 35 : CCP1
 17945  00004E  18B6               	dw	_Default_ISR shr (0+2)
 17946                           
 17947                           ; Vector 36 : Undefined
 17948  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 17949                           
 17950                           ; Vector 37 : NCO1
 17951  000052  18B6               	dw	_Default_ISR shr (0+2)
 17952                           
 17953                           ; Vector 38 : CWG1
 17954  000054  18B6               	dw	_Default_ISR shr (0+2)
 17955                           
 17956                           ; Vector 39 : CLC1
 17957  000056  18B6               	dw	_Default_ISR shr (0+2)
 17958                           
 17959                           ; Vector 40 : INT1
 17960  000058  18B6               	dw	_Default_ISR shr (0+2)
 17961                           
 17962                           ; Vector 41 : CMP2
 17963  00005A  18B6               	dw	_Default_ISR shr (0+2)
 17964                           
 17965                           ; Vector 42 : DMA2SCNT
 17966  00005C  18B6               	dw	_Default_ISR shr (0+2)
 17967                           
 17968                           ; Vector 43 : DMA2DCNT
 17969  00005E  18B6               	dw	_Default_ISR shr (0+2)
 17970                           
 17971                           ; Vector 44 : DMA2OR
 17972  000060  18B6               	dw	_Default_ISR shr (0+2)
 17973                           
 17974                           ; Vector 45 : DMA2A
 17975  000062  18B6               	dw	_Default_ISR shr (0+2)
 17976                           
 17977                           ; Vector 46 : I2C2RX
 17978  000064  18B6               	dw	_Default_ISR shr (0+2)
 17979                           
 17980                           ; Vector 47 : I2C2TX
 17981  000066  18B6               	dw	_Default_ISR shr (0+2)
 17982                           
 17983                           ; Vector 48 : I2C2
 17984  000068  18B6               	dw	_Default_ISR shr (0+2)
 17985                           
 17986                           ; Vector 49 : I2C2E
 17987  00006A  18B6               	dw	_Default_ISR shr (0+2)
 17988                           
 17989                           ; Vector 50 : U2RX
 17990  00006C  18B6               	dw	_Default_ISR shr (0+2)
 17991                           
 17992                           ; Vector 51 : U2TX
 17993  00006E  18B6               	dw	_Default_ISR shr (0+2)
 17994                           
 17995                           ; Vector 52 : U2E
 17996  000070  18B6               	dw	_Default_ISR shr (0+2)
 17997                           
 17998                           ; Vector 53 : U2
 17999  000072  18B6               	dw	_Default_ISR shr (0+2)
 18000                           
 18001                           ; Vector 54 : TMR3
 18002  000074  18B6               	dw	_Default_ISR shr (0+2)
 18003                           
 18004                           ; Vector 55 : TMR3G
 18005  000076  18B6               	dw	_Default_ISR shr (0+2)
 18006                           
 18007                           ; Vector 56 : TMR4
 18008  000078  16DF               	dw	_TMR4_ISR shr (0+2)
 18009                           
 18010                           ; Vector 57 : CCP2
 18011  00007A  18B6               	dw	_Default_ISR shr (0+2)
 18012                           
 18013                           ; Vector 58 : Undefined
 18014  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 18015                           
 18016                           ; Vector 59 : CWG2
 18017  00007E  18B6               	dw	_Default_ISR shr (0+2)
 18018                           
 18019                           ; Vector 60 : CLC2
 18020  000080  18B6               	dw	_Default_ISR shr (0+2)
 18021                           
 18022                           ; Vector 61 : INT2
 18023  000082  18B6               	dw	_Default_ISR shr (0+2)
 18024                           
 18025                           ; Vector 62 : Undefined
 18026  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 18027                           
 18028                           ; Vector 63 : Undefined
 18029  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 18030                           
 18031                           ; Vector 64 : Undefined
 18032  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 18033                           
 18034                           ; Vector 65 : Undefined
 18035  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 18036                           
 18037                           ; Vector 66 : Undefined
 18038  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 18039                           
 18040                           ; Vector 67 : Undefined
 18041  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 18042                           
 18043                           ; Vector 68 : Undefined
 18044  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 18045                           
 18046                           ; Vector 69 : Undefined
 18047  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 18048                           
 18049                           ; Vector 70 : TMR5
 18050  000094  18B6               	dw	_Default_ISR shr (0+2)
 18051                           
 18052                           ; Vector 71 : TMR5G
 18053  000096  17C8               	dw	_TMR5_GATE_ISR shr (0+2)
 18054                           
 18055                           ; Vector 72 : TMR6
 18056  000098  18B6               	dw	_Default_ISR shr (0+2)
 18057                           
 18058                           ; Vector 73 : CCP3
 18059  00009A  17A1               	dw	_CCP3_CaptureISR shr (0+2)
 18060                           
 18061                           ; Vector 74 : CWG3
 18062  00009C  18B6               	dw	_Default_ISR shr (0+2)
 18063                           
 18064                           ; Vector 75 : CLC3
 18065  00009E  18B6               	dw	_Default_ISR shr (0+2)
 18066                           
 18067                           ; Vector 76 : Undefined
 18068  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 18069                           
 18070                           ; Vector 77 : Undefined
 18071  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 18072                           
 18073                           ; Vector 78 : Undefined
 18074  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 18075                           
 18076                           ; Vector 79 : Undefined
 18077  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 18078                           
 18079                           ; Vector 80 : CCP4
 18080  0000A8  17AE               	dw	_CCP4_CaptureISR shr (0+2)
 18081                           
 18082                           ; Vector 81 : CLC4
 18083  0000AA  18B6               	dw	_Default_ISR shr (0+2)
 18084  0000AC                     ivt0x8_undefint:
 18085                           	callstack 0
 18086  0000AC  00FF               	reset	
 18087                           
 18088                           	psect	text107
 18089  000000                     __ptext107:
 18090                           	callstack 0
 18091  000000                     
 18092                           	psect	rparam
 18093  0000                     
 18094                           	psect	idloc
 18095                           
 18096                           ;Config register IDLOC0 @ 0x200000
 18097                           ;	unspecified, using default values
 18098  200000                     	org	2097152
 18099  200000  0FFF               	dw	4095
 18100                           
 18101                           ;Config register IDLOC1 @ 0x200002
 18102                           ;	unspecified, using default values
 18103  200002                     	org	2097154
 18104  200002  0FFF               	dw	4095
 18105                           
 18106                           ;Config register IDLOC2 @ 0x200004
 18107                           ;	unspecified, using default values
 18108  200004                     	org	2097156
 18109  200004  0FFF               	dw	4095
 18110                           
 18111                           ;Config register IDLOC3 @ 0x200006
 18112                           ;	unspecified, using default values
 18113  200006                     	org	2097158
 18114  200006  0FFF               	dw	4095
 18115                           
 18116                           ;Config register IDLOC4 @ 0x200008
 18117                           ;	unspecified, using default values
 18118  200008                     	org	2097160
 18119  200008  0FFF               	dw	4095
 18120                           
 18121                           ;Config register IDLOC5 @ 0x20000A
 18122                           ;	unspecified, using default values
 18123  20000A                     	org	2097162
 18124  20000A  0FFF               	dw	4095
 18125                           
 18126                           ;Config register IDLOC6 @ 0x20000C
 18127                           ;	unspecified, using default values
 18128  20000C                     	org	2097164
 18129  20000C  0FFF               	dw	4095
 18130                           
 18131                           ;Config register IDLOC7 @ 0x20000E
 18132                           ;	unspecified, using default values
 18133  20000E                     	org	2097166
 18134  20000E  0FFF               	dw	4095
 18135                           
 18136                           	psect	config
 18137                           
 18138                           ;Config register CONFIG1L @ 0x300000
 18139                           ;	External Oscillator Selection
 18140                           ;	FEXTOSC = OFF, Oscillator not enabled
 18141                           ;	Reset Oscillator Selection
 18142                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 18143  300000                     	org	3145728
 18144  300000  8C                 	db	140
 18145                           
 18146                           ;Config register CONFIG1H @ 0x300001
 18147                           ;	Clock out Enable bit
 18148                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 18149                           ;	PRLOCKED One-Way Set Enable bit
 18150                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
 18151                           ;	Clock Switch Enable bit
 18152                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 18153                           ;	Fail-Safe Clock Monitor Enable bit
 18154                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 18155  300001                     	org	3145729
 18156  300001  FF                 	db	255
 18157                           
 18158                           ;Config register CONFIG2L @ 0x300002
 18159                           ;	MCLR Enable bit
 18160                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 18161                           ;	Power-up timer selection bits
 18162                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 18163                           ;	Multi-vector enable bit
 18164                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 18165                           ;	IVTLOCK bit One-way set enable bit
 18166                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
 18167                           ;	Low Power BOR Enable bit
 18168                           ;	LPBOREN = OFF, ULPBOR disabled
 18169                           ;	Brown-out Reset Enable bits
 18170                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 18171  300002                     	org	3145730
 18172  300002  FF                 	db	255
 18173                           
 18174                           ;Config register CONFIG2H @ 0x300003
 18175                           ;	Brown-out Reset Voltage Selection bits
 18176                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 18177                           ;	ZCD Disable bit
 18178                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 18179                           ;	PPSLOCK bit One-Way Set Enable bit
 18180                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 18181                           ;	Stack Full/Underflow Reset Enable bit
 18182                           ;	STVREN = ON, Stack full/underflow will cause Reset
 18183                           ;	Debugger Enable bit
 18184                           ;	DEBUG = OFF, Background debugger disabled
 18185                           ;	Extended Instruction Set Enable bit
 18186                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 18187  300003                     	org	3145731
 18188  300003  FF                 	db	255
 18189                           
 18190                           ;Config register CONFIG3L @ 0x300004
 18191                           ;	WDT Period selection bits
 18192                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 18193                           ;	WDT operating mode
 18194                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 18195  300004                     	org	3145732
 18196  300004  9F                 	db	159
 18197                           
 18198                           ;Config register CONFIG3H @ 0x300005
 18199                           ;	WDT Window Select bits
 18200                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 18201                           ;	WDT input clock selector
 18202                           ;	WDTCCS = SC, Software Control
 18203  300005                     	org	3145733
 18204  300005  FF                 	db	255
 18205                           
 18206                           ;Config register CONFIG4L @ 0x300006
 18207                           ;	Boot Block Size selection bits
 18208                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 18209                           ;	Boot Block enable bit
 18210                           ;	BBEN = OFF, Boot block disabled
 18211                           ;	Storage Area Flash enable bit
 18212                           ;	SAFEN = OFF, SAF disabled
 18213                           ;	Application Block write protection bit
 18214                           ;	WRTAPP = OFF, Application Block not write protected
 18215  300006                     	org	3145734
 18216  300006  FF                 	db	255
 18217                           
 18218                           ;Config register CONFIG4H @ 0x300007
 18219                           ;	Configuration Register Write Protection bit
 18220                           ;	WRTB = OFF, Configuration registers (300000-30000Bh) not write-protected
 18221                           ;	Boot Block Write Protection bit
 18222                           ;	WRTC = OFF, Boot Block (000000-0007FFh) not write-protected
 18223                           ;	Data EEPROM Write Protection bit
 18224                           ;	WRTD = OFF, Data EEPROM not write-protected
 18225                           ;	SAF Write protection bit
 18226                           ;	WRTSAF = OFF, SAF not Write Protected
 18227                           ;	Low Voltage Programming Enable bit
 18228                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 18229  300007                     	org	3145735
 18230  300007  FF                 	db	255
 18231                           
 18232                           ;Config register CONFIG5L @ 0x300008
 18233                           ;	PFM and Data EEPROM Code Protection bit
 18234                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 18235  300008                     	org	3145736
 18236  300008  FF                 	db	255
 18237                           
 18238                           ;Config register CONFIG5H @ 0x300009
 18239                           ;	unspecified, using default values
 18240  300009                     	org	3145737
 18241  300009  FF                 	db	255
 18242                           tosu	equ	0x3FFF
 18243                           tosh	equ	0x3FFE
 18244                           tosl	equ	0x3FFD
 18245                           stkptr	equ	0x3FFC
 18246                           pclatu	equ	0x3FFB
 18247                           pclath	equ	0x3FFA
 18248                           pcl	equ	0x3FF9
 18249                           tblptru	equ	0x3FF8
 18250                           tblptrh	equ	0x3FF7
 18251                           tblptrl	equ	0x3FF6
 18252                           tablat	equ	0x3FF5
 18253                           prodh	equ	0x3FF4
 18254                           prodl	equ	0x3FF3
 18255                           indf0	equ	0x3FEF
 18256                           postinc0	equ	0x3FEE
 18257                           postdec0	equ	0x3FED
 18258                           preinc0	equ	0x3FEC
 18259                           plusw0	equ	0x3FEB
 18260                           fsr0h	equ	0x3FEA
 18261                           fsr0l	equ	0x3FE9
 18262                           wreg	equ	0x3FE8
 18263                           indf1	equ	0x3FE7
 18264                           postinc1	equ	0x3FE6
 18265                           postdec1	equ	0x3FE5
 18266                           preinc1	equ	0x3FE4
 18267                           plusw1	equ	0x3FE3
 18268                           fsr1h	equ	0x3FE2
 18269                           fsr1l	equ	0x3FE1
 18270                           bsr	equ	0x3FE0
 18271                           indf2	equ	0x3FDF
 18272                           postinc2	equ	0x3FDE
 18273                           postdec2	equ	0x3FDD
 18274                           preinc2	equ	0x3FDC
 18275                           plusw2	equ	0x3FDB
 18276                           fsr2h	equ	0x3FDA
 18277                           fsr2l	equ	0x3FD9
 18278                           status	equ	0x3FD8

Data Sizes:
    Strings     182
    Constant    0
    Data        0
    BSS         180
    Persistent  23
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     57      76
    BANK0           160    139     159
    BANK1           256     20     184
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_20(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_20(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_15(CODE[4]), STR_14(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_15(CODE[4]), STR_14(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S3442_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_9(CODE[14]), STR_8(CODE[13]), STR_7(CODE[14]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[26]), STR_3(CODE[24]), STR_2(CODE[19]), 
		 -> STR_1(CODE[11]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 26
		 -> STR_9(CODE[14]), STR_8(CODE[13]), STR_7(CODE[14]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[26]), STR_3(CODE[24]), STR_2(CODE[19]), 
		 -> STR_1(CODE[11]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_9(CODE[14]), STR_8(CODE[13]), STR_7(CODE[14]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[26]), STR_3(CODE[24]), STR_2(CODE[19]), 
		 -> STR_1(CODE[11]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), Absolute function(), 

    TMR5_SetGateInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), 

    TMR5_GateInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), Absolute function(), 

    CCP4_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), 

    CCP4_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), Absolute function(), 

    CCP3_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), 

    CCP3_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), Absolute function(), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultErrorHandler(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultOverrunErrorHandler(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultFramingErrorHandler(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Receive_ISR(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _loop->___flge
    _checkBatt->___flge
    _utoa->_pad
    _efgtoa->___fladd
    _efgtoa->___flge
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___fladd
    ___flge->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_UART1_Write
    _abs->___aomod
    ___fldiv->___xxtofl
    _calcSpeed->___fladd
    ___fladd->___flmul
    _setMotor->_PWM7_LoadDutyValue
    _setMotor->_PWM8_LoadDutyValue
    _actSpeed->___aldiv
    ___xxtofl->___awdiv
    ___fltol->___fladd
    ___flmul->___xxtofl
    _SYSTEM_Initialize->_TMR5_Initialize
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR5_Initialize->_TMR5_SetGateInterruptHandler
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _CCP4_Initialize->_CCP4_SetCallBack
    _CCP3_Initialize->_CCP3_SetCallBack

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR4_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _CCP3_CaptureISR in COMRAM

    _CCP3_CaptureISR->_CCP3_DefaultCallBack

Critical Paths under _CCP4_CaptureISR in COMRAM

    _CCP4_CaptureISR->_CCP4_DefaultCallBack

Critical Paths under _TMR5_GATE_ISR in COMRAM

    _TMR5_DefaultGateInterruptHandler->_TMR5_ReadTimer
    _TMR5_Reload->_TMR5_WriteTimer

Critical Paths under _SMT1_PR_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_Overflow_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___fltol
    _floorf->___fldiv
    ___flsub->___fladd
    ___flge->___flmul
    _calcSteering->_setSteering
    _setSteering->___fltol
    _calcSpeed->___fltol
    ___fladd->___flmul
    _calcMotorPow->___fltol
    ___fltol->___fladd

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR4_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _CCP3_CaptureISR in BANK0

    None.

Critical Paths under _CCP4_CaptureISR in BANK0

    None.

Critical Paths under _TMR5_GATE_ISR in BANK0

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _loop->_checkCurveCount
    _startAccell->_printf
    _getReverse->_printf
    _checkCurveCount->_printf
    _getBatteryVoltage->_printf
    _printf->_vfprintf

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR4_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _CCP3_CaptureISR in BANK1

    None.

Critical Paths under _CCP4_CaptureISR in BANK1

    None.

Critical Paths under _TMR5_GATE_ISR in BANK1

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR4_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _CCP3_CaptureISR in BANK2

    None.

Critical Paths under _CCP4_CaptureISR in BANK2

    None.

Critical Paths under _TMR5_GATE_ISR in BANK2

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR4_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _CCP3_CaptureISR in BANK3

    None.

Critical Paths under _CCP4_CaptureISR in BANK3

    None.

Critical Paths under _TMR5_GATE_ISR in BANK3

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR4_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _CCP3_CaptureISR in BANK4

    None.

Critical Paths under _CCP4_CaptureISR in BANK4

    None.

Critical Paths under _TMR5_GATE_ISR in BANK4

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR4_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _CCP3_CaptureISR in BANK5

    None.

Critical Paths under _CCP4_CaptureISR in BANK5

    None.

Critical Paths under _TMR5_GATE_ISR in BANK5

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR4_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _CCP3_CaptureISR in BANK6

    None.

Critical Paths under _CCP4_CaptureISR in BANK6

    None.

Critical Paths under _TMR5_GATE_ISR in BANK6

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR4_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _CCP3_CaptureISR in BANK7

    None.

Critical Paths under _CCP4_CaptureISR in BANK7

    None.

Critical Paths under _TMR5_GATE_ISR in BANK7

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR4_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _CCP3_CaptureISR in BANK8

    None.

Critical Paths under _CCP4_CaptureISR in BANK8

    None.

Critical Paths under _TMR5_GATE_ISR in BANK8

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR4_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _CCP3_CaptureISR in BANK9

    None.

Critical Paths under _CCP4_CaptureISR in BANK9

    None.

Critical Paths under _TMR5_GATE_ISR in BANK9

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR4_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _CCP3_CaptureISR in BANK10

    None.

Critical Paths under _CCP4_CaptureISR in BANK10

    None.

Critical Paths under _TMR5_GATE_ISR in BANK10

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR4_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _CCP3_CaptureISR in BANK11

    None.

Critical Paths under _CCP4_CaptureISR in BANK11

    None.

Critical Paths under _TMR5_GATE_ISR in BANK11

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR4_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _CCP3_CaptureISR in BANK12

    None.

Critical Paths under _CCP4_CaptureISR in BANK12

    None.

Critical Paths under _TMR5_GATE_ISR in BANK12

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR4_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _CCP3_CaptureISR in BANK13

    None.

Critical Paths under _CCP4_CaptureISR in BANK13

    None.

Critical Paths under _TMR5_GATE_ISR in BANK13

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR4_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _CCP3_CaptureISR in BANK14

    None.

Critical Paths under _CCP4_CaptureISR in BANK14

    None.

Critical Paths under _TMR5_GATE_ISR in BANK14

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR4_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _CCP3_CaptureISR in BANK15

    None.

Critical Paths under _CCP4_CaptureISR in BANK15

    None.

Critical Paths under _TMR5_GATE_ISR in BANK15

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  323590
                  _SYSTEM_Initialize
           _TMR4_SetInterruptHandler
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0  322443
                             ___flge
                           ___xxtofl
                       _calcMotorPow
                          _calcSpeed
                       _calcSteering
                          _checkBatt
                    _checkCurveCount
                  _getBatteryVoltage
                           _getCurve
                         _getReverse
                           _setMotor
                        _setSteering
                        _startAccell
 ---------------------------------------------------------------------------------
 (2) _startAccell                                          2     2      0   60629
                                             16 BANK1      2     2      0
                             _printf
                           _setMotor
                        _setSteering
 ---------------------------------------------------------------------------------
 (2) _getReverse                                           0     0      0   51386
                             _printf
 ---------------------------------------------------------------------------------
 (2) _getCurve                                             6     6      0      90
                                             19 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (2) _checkCurveCount                                      4     4      0   53511
                                             16 BANK1      4     4      0
                            ___awdiv
                           ___xxtofl
                             _printf
 ---------------------------------------------------------------------------------
 (2) _checkBatt                                            0     0      0   61909
                             ___flge
                           ___xxtofl
                  _getBatteryVoltage
                        _setSteering
 ---------------------------------------------------------------------------------
 (2) _getBatteryVoltage                                    0     0      0   51408
           _ADCC_GetSingleConversion
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              10     4      6   51386
                                              8 BANK1      8     2      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   50471
                                              0 BANK1      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           46    40      6   49956
                                            103 BANK0     36    30      6
                               _dtoa
                             _efgtoa
                              _fputc
                            _isupper
                            _strncmp
                            _tolower
                               _utoa
 ---------------------------------------------------------------------------------
 (6) _utoa                                                32    22     10    5909
                                             48 COMRAM     8     8      0
                                              0 BANK0     24    14     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (7) ___lomod                                             17     1     16     412
                                             19 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (7) ___lodiv                                             25     9     16     421
                                             19 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6     595
                                             19 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              68    61      7   32240
                                             35 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _tolower                                              8     6      2    1142
                                             25 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     551
                                             19 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _strcpy                                              10     6      4    1037
                                             19 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     669
                                             53 COMRAM     4     0      4
                                             13 BANK0     16    16      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       14    10      4     375
                                             19 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (7) ___flsub                                              8     0      8    4187
                                             25 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     155
                                             19 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8    1346
                                             53 COMRAM     4     4      0
                                             13 BANK0      8     0      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     770
                                             19 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     613
                                             19 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    6763
                                             48 COMRAM     8     8      0
                                              0 BANK0     28    18     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    4497
                                             37 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     220
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1537
                                             30 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4    1037
                                             21 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0      93
                                             20 COMRAM     1     1      0
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (11) _UART1_Write                                         1     1      0      62
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     183
                                             37 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     613
                                             19 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     625
                                             19 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (3) _ADCC_GetSingleConversion                             5     3      2      22
                                             19 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _calcSteering                                         4     4      0   13344
                                             44 BANK0      4     4      0
                            ___fldiv
                            ___fltol
                           ___xxtofl
                        _setSteering
 ---------------------------------------------------------------------------------
 (3) _setSteering                                          9     6      3    8049
                                             35 BANK0      9     6      3
                 _PWM5_LoadDutyValue
                 _PWM6_LoadDutyValue
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    3083
                                             41 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM6_LoadDutyValue                                   4     2      2     152
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _PWM5_LoadDutyValue                                   4     2      2     152
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _calcSpeed                                            6     6      0    9690
                                             35 BANK0      6     6      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (8) ___fladd                                             16     8      8    3622
                                             53 COMRAM     4     4      0
                                             13 BANK0     12     4      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _calcMotorPow                                         7     7      0    8849
                                             35 BANK0      7     7      0
                            ___awdiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                           _actSpeed
                           _setMotor
 ---------------------------------------------------------------------------------
 (3) _setMotor                                             4     2      2    1126
                                             23 COMRAM     4     2      2
                 _PWM7_LoadDutyValue
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (4) _PWM8_LoadDutyValue                                   4     2      2     332
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _PWM7_LoadDutyValue                                   4     2      2     332
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _actSpeed                                             4     2      2     629
                                             33 COMRAM     4     2      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     604
                                             19 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1106
                                             27 COMRAM    14    10      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     877
                                             25 BANK0     10     6      4
                            ___awdiv (ARG)
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             25    17      8    3953
                                             41 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___awdiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     985
                                             19 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     973
                    _ADCC_Initialize
                    _CCP3_Initialize
                    _CCP4_Initialize
                    _CLC3_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM5_Initialize
                    _PWM6_Initialize
                    _PWM7_Initialize
                    _PWM8_Initialize
                    _SMT1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR4_Initialize
                    _TMR5_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     490
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0      98
                                             21 COMRAM     2     2      0
       _TMR5_SetGateInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetGateInterruptHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     174
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             2     0      2     174
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      2     2      0       0
                                             19 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMT1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM7_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      15
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CLC3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP4_Initialize                                      0     0      0      98
                   _CCP4_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP4_SetCallBack                                     2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CCP3_Initialize                                      0     0      0      98
                   _CCP3_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP3_SetCallBack                                     2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _UART1_tx_vect_isr                                   1     1      0       0
                                             16 COMRAM     1     1      0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (14) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _UART1_rx_vect_isr                                   1     1      0       0
                                             17 COMRAM     1     1      0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (14) _UART1_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _UART1_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _UART1_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _UART1_DefaultErrorHandler                           0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _UART1_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _TMR4_ISR                                            1     1      0       0
                                             18 COMRAM     1     1      0
                      _TMR4_CallBack
 ---------------------------------------------------------------------------------
 (14) _TMR4_CallBack                                       0     0      0       0
                   Absolute function *
                       _TMR4_10msISR *
       _TMR4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (15) _TMR4_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _TMR4_10msISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _CCP3_CaptureISR                                     2     2      0     144
                                              2 COMRAM     2     2      0
                   Absolute function *
               _CCP3_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (18) _CCP3_DefaultCallBack                                2     0      2      97
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _CCP4_CaptureISR                                     2     2      0     144
                                              6 COMRAM     2     2      0
                   Absolute function *
               _CCP4_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (18) _CCP4_DefaultCallBack                                2     0      2      97
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _TMR5_GATE_ISR                                       0     0      0     233
                   Absolute function *
   _TMR5_DefaultGateInterruptHandler *
 ---------------------------------------------------------------------------------
 (18) _TMR5_DefaultGateInterruptHandler                    0     0      0     233
                     _TMR5_ReadTimer
                        _TMR5_Reload
 ---------------------------------------------------------------------------------
 (19) _TMR5_Reload                                         0     0      0     164
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (20) _TMR5_WriteTimer                                     2     0      2     164
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (19) _TMR5_ReadTimer                                      8     6      2      69
                                              8 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 20
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _SMT1_PR_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _SMT1_PW_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _SMT1_Overflow_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
     _CCP3_Initialize
       _CCP3_SetCallBack
     _CCP4_Initialize
       _CCP4_SetCallBack
     _CLC3_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM5_Initialize
     _PWM6_Initialize
     _PWM7_Initialize
     _PWM8_Initialize
     _SMT1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetGateInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
   _TMR4_SetInterruptHandler
   _loop
     ___flge
       ___flmul (ARG)
         ___awdiv (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _calcMotorPow
       ___awdiv
       ___flmul
       ___fltol
         ___awdiv (ARG)
         ___fladd (ARG)
           ___flmul (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _actSpeed
         ___aldiv
       _setMotor
         _PWM7_LoadDutyValue
         _PWM8_LoadDutyValue
     _calcSpeed
       ___fladd
       ___flmul
       ___fltol
       ___xxtofl
     _calcSteering
       ___fldiv
       ___fltol
       ___xxtofl
       _setSteering
         _PWM5_LoadDutyValue
         _PWM6_LoadDutyValue
         ___fldiv
         ___fltol
         ___xxtofl
     _checkBatt
       ___flge
       ___xxtofl
       _getBatteryVoltage
         _ADCC_GetSingleConversion
         _printf
           _vfprintf
             _vfpfcnvrt
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                   ___flmul (ARG)
                 ___fltol
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                 _isupper
                 _pad
                 _strcpy
                 _tolower
                   _isupper
               _fputc
               _isupper
               _strncmp
               _tolower
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
       _setSteering
     _checkCurveCount
       ___awdiv
       ___xxtofl
       _printf
     _getBatteryVoltage
     _getCurve
     _getReverse
       _printf
     _setMotor
     _setSteering
     _startAccell
       _printf
       _setMotor
       _setSteering

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *

 _TMR4_ISR (ROOT)
   _TMR4_CallBack
     Absolute function(Fake) *
     _TMR4_10msISR *
     _TMR4_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _CCP3_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP3_DefaultCallBack *

 _CCP4_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP4_DefaultCallBack *

 _TMR5_GATE_ISR (ROOT)
   Absolute function(Fake) *
   _TMR5_DefaultGateInterruptHandler *
     _TMR5_ReadTimer
     _TMR5_Reload
       _TMR5_WriteTimer

 _SMT1_PR_ACQ_ISR (ROOT)

 _SMT1_PW_ACQ_ISR (ROOT)

 _SMT1_Overflow_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK15          100      0       0      30        0.0%
BANK15             100      0       0      31        0.0%
BITBANK14          100      0       0      28        0.0%
BANK14             100      0       0      29        0.0%
BITBANK13          100      0       0      36        0.0%
BANK13             100      0       0      27        0.0%
BITBANK12          100      0       0      35        0.0%
BANK12             100      0       0      26        0.0%
BITBANK11          100      0       0      34        0.0%
BANK11             100      0       0      25        0.0%
BITBANK10          100      0       0      33        0.0%
BANK10             100      0       0      24        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     14      B8       7       71.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     8B      9F       5       99.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     39      4C       1       80.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1A3      32        0.0%
DATA                 0      0     1A3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Jan 29 13:18:13 2024

                             _CCP4_Initialize 5F82                        ??_CCP3_DefaultCallBack 0003  
                     __end_of_checkCurveCount 529E                                  ___fldiv@aexp 006C  
                                ___fldiv@bexp 006B                                   _startAccell 549C  
                                ___fldiv@sign 0064                                            l72 624A  
                                          l75 6154                                            l69 59D4  
                                ___awdiv@sign 0019                             ??_TMR5_WriteTimer 000B  
                 __size_of_PWM6_LoadDutyValue 0034                                           l312 588C  
                                         l404 598A                                           l308 5844  
                                         l309 585E                                           l318 626E  
                                         l520 5A1E                                           l441 5FDC  
                                         l362 628C                                           l371 6278  
                                         l188 4F98                                           l284 549A  
                                         l365 62A0                                           l359 6296  
                                         l368 6282                                           l712 5E82  
                                         l449 62C8                                           l482 5FAE  
                                         l723 61EA                                           l555 62AA  
                                         l644 6036                                           l740 5E1A  
                                         l709 6202                                           l581 5D10  
                                         l726 5E4E                                           l479 62BE  
                                         l751 621A                                           l737 6232  
                                         l754 5DE6                                           l923 61D2  
                                         l695 62B4                                           l795 5F80  
                                         l893 6062                                           _GIE 01FE97  
                                         _PR2 003FAB                                           _PR4 003F9F  
                                         _abs 5B3A                                           _pad 505E  
                     __size_of_PMD_Initialize 0024                                  ___awmod@sign 0019  
                             _TMR2_Initialize 61B8                CCP4_SetCallBack@customCallBack 0014  
                                         tosl 003FFD                                           wreg 003FE8  
                            _CCP4_SetCallBack 62B6                                  ___flmul@aexp 0061  
                                ___flmul@bexp 0066                            _UART1_Transmit_ISR 5AF6  
                                ___flmul@sign 0060                                  ___flmul@temp 006B  
                                ___flmul@prod 0067                       __end_of_CCP4_CaptureISR 5EEC  
                                ___fltol@exp1 0082                                          l1042 58E8  
                                        l2011 28D6                                          ?_abs 0026  
                                        l2020 2B68                                          l2021 2B56  
                                        l1054 5EFC                                          l1230 461A  
                                        l2015 2C5E                                          l1312 45E8  
                                        l1057 5F1C                                          l1313 45FA  
                                        l2018 2AF0                                          l2114 50A2  
                                        l2028 2C20                                          l2052 3F3A  
                                        l1324 3E0C                                          l2117 50E4  
                                        l2125 309C                                          l2302 3734  
                                        l1246 4720                                          l2055 4096  
                                        l1255 5664                                          l1319 3D80  
                                        l1511 421E                                          l2119 511E  
                                        l2127 30A4                                          l1263 56F6  
                                        l1344 3398                                          l2312 5CA0  
                                        l2145 32E0                                          l2305 3678  
                                        l2209 1914                                          l2066 402E  
                                        l1338 3EE2                                          l1258 6130  
                                        l1274 553A                                          l2059 3FD2  
                                        l2163 1D64                                          l2243 376E  
                                        l2075 60E2                               _timer3ReloadVal 0190  
                                        l1524 4382                                          l1381 394C  
                                        l2341 57D0                                          l2181 14D6  
                                        l2253 393C                                          l2245 3776  
                                        l2270 2180                                          l2262 234C  
                                        l1278 529C                                          l1286 3D04  
                                        l1359 351E                                          l1383 3970  
                                        l2327 55D0                                          l2335 5AF4  
                                        l2351 4C2C                                          l1368 44D2  
                                        l1384 3984                                          l4041 5940  
                                        l4121 5F52                                          l1377 4DFE  
                                        l1385 39F8                                          l1641 534C  
                                        l2361 5828                                          l1394 3B32  
                                        l4051 596C                                          l4043 5942  
                                        l4131 5F7A                                          l4123 5F70  
                                        l2347 5BF0                                          l1299 3D14  
                                        l1628 505C                                          l1476 482C  
                                        l4109 588E                                          l4061 5980  
                                        l4053 5976                                          l4045 594A  
                                        l4133 5F7C                                          l4125 5F72  
                                        l4141 61CA                                          l2293 5B70  
                                        l2277 575E                                          l1662 49F4  
                                        l2366 5830                                          l2278 5766  
                                        l4063 5982                                          l4055 597A  
                                        l4047 5954                                          l4071 6132  
                                        l4143 6204                                          l4135 61D4  
                                        l4127 5F74                                          l1671 5CD8  
                                        l2296 5B78                                          l1656 53F6  
                                        l2288 4B38                                          l4065 5984  
                                        l4057 597C                                          l4049 596A  
                                        l4081 4F48                                          l4073 4ED0  
                                        l4129 5F78                                          l4137 61B8  
                                        l1842 4D1C                                          l4155 6038  
                                        l4067 5986                                          l4059 597E  
                                        l4091 4F56                                          l4083 4F4A  
                                        l4075 4EF0                                          l4139 61C4  
                                        l1667 4A3A                                          l1835 4CFC  
                                        l1852 4ECE                                          l4069 5988  
                                        l4093 4F58                                          l4085 4F4C  
                                        l4077 4EF2                                          l4165 621C  
                                        l4181 61EC                                          l1925 253E  
                                        l1845 4EAE                                          l1694 4934  
                                        l1942 2658                                          l1934 280E  
                                        l1926 252C                                          l4095 4F5A  
                                        l4087 4F4E                                          l4079 4EFA  
                                        l1951 2728                                          l1927 24F2  
                                        l1952 2716                                          l4097 6234  
                                        l4089 4F54                                          l1981 2E5A  
                                        l1990 2EA0                                          ?_pad 0026  
                                        l1967 5AB0                                          l1992 2F18  
                                        l1984 2E1E                                          l8001 2FE8  
                                        l1993 2F06                                          l8003 2FEE  
                                        l1979 2FFA                                          l8101 2B00  
                                        l8021 283E                                          l8013 2810  
                                        l8005 2FF0                                          l8103 2B0E  
                                        l8031 287A                                          l8023 284E  
                                        l8015 281E                                          l8113 2B78  
                                        l8121 2BC0                                          l8105 2B12  
                                        l8041 28B0                                          l8033 2880  
                                        l8025 285E                                          l8017 282C  
                                        l9001 3FBA                                          l8201 52BC  
                                        l8131 2C34                                          l8123 2BDA  
                                        l8115 2B84                                          l8107 2B20  
                                        l8043 28C0                                          l8035 288E  
                                        l8027 2864                                          l8019 282E  
                                        l9011 401E                                          l9003 3FBC  
                                        l8211 52F4                                          l8203 52CA  
                                        l7181 599C                                          l8133 2C42  
                                        l8125 2BEE                                          l8117 2B92  
                                        l8109 2B4E                                          l8061 294A  
                                        l8053 290A                                          l8045 28C6  
                                        l8037 2890                                          l8029 2874  
                                        l8301 48D4                                          l9021 4076  
                                        l9013 403C                                          l9005 3FC8  
                                        l6541 5EF4                                          l8213 5302  
                                        l8221 532C                                          l8205 52D2  
                                        l9101 54B8                                          l7191 59B4  
                                        l7183 59A0                                          l8151 4F9E  
                                        l8135 2C44                                          l8127 2C08  
                                        l8119 2BBC                                          l8071 299C  
                                        l8063 2966                                          l8055 291A  
                                        l8047 28E6                                          l8039 28A0  
                                        l8311 4904                                          l9023 4084  
                                        l9015 403E                                          l9007 4004  
                                        l9031 4D3A                                          l6543 5EF8  
                                        l8223 533C                                          l8215 5318  
                                        l8207 52E4                                          l8231 537C  
                                        l8143 5A6A                                          l9111 54D8  
                                        l6801 5CDA                                          l7193 59BC  
                                        l7185 59A8                                          l8161 4FCE  
                                        l8153 4FAC                                          l8129 2C24  
                                        l8137 2C4A                                          l8081 29FA  
                                        l8073 29AC                                          l8065 2972  
                                        l8057 2924                                          l8049 28F6  
                                        l8313 4914                                          l9025 4086  
                                        l9017 4042                                          l9009 4010  
                                        l6561 4734                                          l9041 4D96  
                                        l9033 4D56                                          l7601 23E6  
                                        l9201 3E24                                          l6545 5EFA  
                                        l8225 5344                                          l8217 5320  
                                        l8209 52EC                                          l8241 53F4  
                                        l8233 538C                                          l8145 5A7C  
                                        l8401 4B30                                          l8321 4C3A  
                                        l9121 5524                                          l9113 54DE  
                                        l6803 5CEE                                          l6811 59EA  
                                        l6651 628E                                          l7195 59C0  
                                        l7187 59AC                                          l7179 598C  
                                        l8171 4FFC                                          l8163 4FD2  
                                        l8155 4FB4                                          l8139 2C4E  
                                        l8091 2AAA                                          l8083 2A1A  
                                        l8075 29BC                                          l8067 297E  
                                        l8059 293E                                          l8315 4924  
                                        l8307 48E8                                          l9019 4066  
                                        l6571 476A                                          l6563 4744  
                                        l9043 4DB2                                          l9035 4D5E  
                                        l7603 23F6                                          l7611 2420  
                                        l9051 393E                                          l9203 3E38  
                                        l6547 5F0A                                          l6539 5EEE  
                                        l8219 5326                                          l8235 53BA  
                                        l8251 49A4                                          l8331 4C94  
                                        l8323 4C58                                          l9131 568A  
                                        l9123 552A                                          l9115 54EE  
                                        l9107 54C2                                          l6805 5CF2  
                                        l6821 5A1A                                          l6813 59EE  
                                        l6653 6284                                          l7197 59C8  
                                        l7189 59B0                                          l8181 5030  
                                        l8173 500A                                          l8165 4FDA  
                                        l8157 4FB8                                          l8149 4F9A  
                                        l8093 2AB8                                          l8085 2A2A  
                                        l8077 29CC                                          l8069 298C  
                                        l8309 48F4                                          l6581 47B2  
                                        l6573 477A                                          l6565 4748  
                                        l6557 4722                                          l9045 4DBA  
                                        l9037 4D6A                                          l9029 4D1E  
                                        l9301 442E                                          l7701 2628  
                                        l7621 2458                                          l7613 2430  
                                        l7605 2406                                          l9061 3A20  
                                        l9053 398C                                          l9213 3E72  
                                        l9221 3E98                                          l7541 5854  
                                        l8501 329E                                          l8237 53CA  
                                        l8229 534E                                          l8261 4A32  
                                        l8253 49B4                                          l8245 4936  
                                        l8421 3540                                          l8405 5768  
                                        l8413 5808                                          l8333 4CC2  
                                        l8325 4C60                                          l8341 4E00  
                                        l9133 568E                                          l9125 5666  
                                        l9117 54F4                                          l9109 54CC  
                                        l6807 5D0C                                          l6671 62A2  
                                        l6815 5A08                                          l6655 6298  
                                        l6647 627A                                          l6831 541E  
                                        l6823 53F8                                          l7199 59CC  
                                        l8183 5036                                          l8175 5010  
                                        l8167 4FEC                                          l8159 4FC6  
                                        l8095 2AD6                                          l8087 2A4A  
                                        l8079 29EA                                          l6591 47F6  
                                        l6583 47BC                                          l6575 4790  
                                        l6567 4756                                          l6559 4726  
                                        l9047 4DC6                                          l9039 4D7A  
                                        l9311 4472                                          l9303 4442  
                                        l7703 2638                                          l7631 246C  
                                        l7623 245C                                          l7615 2442  
                                        l7607 2416                                          l9071 3AA0  
                                        l9055 3A00                                          l9215 3E84  
                                        l9207 3E4C                                          l7551 5888  
                                        l7543 5860                                          l8503 32A6  
                                        l8239 53EE                                          l8263 4A38  
                                        l8255 49C2                                          l8247 4966  
                                        l8271 5CC8                                          l8431 362C  
                                        l8423 3598                                          l8407 5778  
                                        l8415 581A                                          l8511 10C2  
                                        l8335 4CE2                                          l8327 4C74  
                                        l8319 4C2E                                          l8351 4E76  
                                        l8343 4E1E                                          l9135 56D6  
                                        l9143 56F4                                          l9127 566C  
                                        l9151 44F6                                          l9119 5510  
                                        l6817 5A0C                                          l6809 59D6  
                                        l6649 6270                                          l6841 5432  
                                        l6833 5422                                          l6825 53FC  
                                        l8177 5026                                          l8169 4FF4  
                                        l8185 503C                                          l8097 2AE0  
                                        l8089 2A74                                          l8281 485A  
                                        l6585 47DA                                          l6577 4798  
                                        l6593 47FC                                          l6569 4766  
                                        l6761 55F0                                          l9049 4DE6  
                                        l9321 44CA                                          l9313 448E  
                                        l9305 444A                                          l7721 26BA  
                                        l7713 2692                                          l7705 2648  
                                        l7641 2480                                          l7633 2470  
                                        l7625 2460                                          l7617 2450  
                                        l7609 2418                                          l9241 330A  
                                        l9081 3B08                                          l9073 3ABC  
                                        l9057 3A0C                                          l9065 3A34  
                                        l9209 3E5E                                          l7801 40CA  
                                        l7545 5872                                          l7553 588A  
                                        l7537 5834                                          l7561 5560  
                                        l8361 5080                                          l8505 32B8  
                                        l8193 529E                                          l8257 49D4  
                                        l8249 4976                                          l8441 3714  
                                        l8433 3668                                          l8425 35AC  
                                        l8409 57D2                                          l8601 14A8  
                                        l8521 1116                                          l8513 10D2  
                                        l8337 4CE4                                          l8329 4C82  
                                        l8353 4E96                                          l8345 4E26  
                                        l9137 56DE                                          l9129 5682  
                                        l9161 4540                                          l9153 4500  
                                        l6667 62C0                                          l6771 5FB0  
                                        l6819 5A0E                                          l6851 5446  
                                        l6843 5436                                          l6835 5426  
                                        l6827 5408                                          l8187 504C  
                                        l8179 502E                                          l8099 2AEE  
                                        l8291 48A8                                          l8283 4884  
                                        l8275 482E                                          l6595 480C  
                                        l6587 47EA                                          l6579 47A4  
                                        l6763 5600                                          l9315 449A  
                                        l9307 445E                                          l7723 26C2  
                                        l7715 269C                                          l7707 266E  
                                        l7731 26E6                                          l7651 2494  
                                        l7643 2484                                          l7635 2474  
                                        l7627 2464                                          l7619 2454  
                                        l7571 234E                                          l9251 336E  
                                        l9243 3326                                          l9235 32E2  
                                        l9083 3B10                                          l9075 3AC4  
                                        l9059 3A14                                          l9067 3A76  
                                        l7811 410C                                          l7803 40CE  
                                        l7547 5874                                          l7539 5834  
                                        l7555 6268                                          l7563 556A  
                                        l8371 50C6                                          l8363 508E  
                                        l8451 3046                                          l8195 52A2  
                                        l8259 49E2                                          l8267 5CA2  
                                        l8443 3724                                          l8427 35BA  
                                        l8435 369C                                          l8419 3520  
                                        l8603 14B0                                          l8531 115C  
                                        l8523 111E                                          l8515 10E0  
                                        l8339 4CF6                                          l8355 4EA8  
                                        l8347 4E3A                                          l9139 56EE  
                                        l9331 5256                                          l9323 51E0  
                                        l6931 3B38                                          l9163 4556  
                                        l9171 4582                                          l9155 4516  
                                        l9147 44D4                                          l6773 5FC0  
                                        l6669 62B6                                          l6781 600C  
                                        l6861 5462                                          l6853 544A  
                                        l6845 543A                                          l6837 542A  
                                        l6829 5418                                          l8189 5054  
                                        l8285 4886                                          l8277 4846  
                                        l6597 481C                                          l6589 47EC  
                                        l6765 5630                                          l6757 55D2  
                                        l9317 44B6                                          l9309 4462  
                                        l7741 2738                                          l7733 26EA  
                                        l7725 26C6                                          l7717 26AA  
                                        l7709 267E                                          l7661 250C  
                                        l7653 24BE                                          l7645 2488  
                                        l7637 2478                                          l7629 2468  
                                        l7581 238C                                          l7573 235C  
                                        l9261 33B6                                          l9253 3384  
                                        l9245 3340                                          l9237 32F0  
                                        l7901 2CE4                                          l9085 3B20  
                                        l9077 3AE0                                          l9069 3A94  
                                        l7821 4166                                          l7813 412A  
                                        l7805 40DC                                          l8381 5B54  
                                        l7549 5884                                          l7565 5588  
                                        l7557 553C                                          l8373 50F2  
                                        l8365 509A                                          l8357 505E  
                                        l8461 30AC                                          l8453 3066  
                                        l8197 52B0                                          l8269 5CB8  
                                        l8437 36D8                                          l8701 19D6  
                                        l8621 1560                                          l8613 14F4  
                                        l8605 14CA                                          l8541 1198  
                                        l8533 1164                                          l8525 1130  
                                        l8517 10E8                                          l8509 10B8  
                                        l8349 4E48                                          l9093 610C  
                                        l9333 526A                                          l9325 51F8  
                                        l6933 3B7C                                          l6941 3BC4  
                                        l9181 45E4                                          l9173 4598  
                                        l9165 4564                                          l9157 451A  
                                        l9149 44EC                                          l9341 45FC  
                                        l6775 5FCC                                          l6791 5F82  
                                        l6687 62AC                                          l6783 6020  
                                        l6863 546E                                          l6855 544E  
                                        l6847 543E                                          l6839 542E  
                                        l8287 4896                                          l6767 565C  
                                        l6759 55DA                                          l9319 44BE  
                                        l7751 279E                                          l7743 2744  
                                        l7735 26F8                                          l7727 26D6  
                                        l7719 26AC                                          l7671 254C  
                                        l7663 2510                                          l7655 24DA  
                                        l7647 248C                                          l7639 247C  
                                        l7591 23BC                                          l7583 239C  
                                        l7575 236A                                          l9271 3476  
                                        l9263 33CC                                          l9255 338C  
                                        l9247 3348                                          l9239 3306  
                                        l7903 2CF4                                          l7911 2D1E  
                                        l9079 3AEC                                          l9191 3DA8  
                                        l9183 3D16                                          l7823 4194  
                                        l7815 4132                                          l7831 41CE  
                                        l7807 40FC                                          l7567 55BE  
                                        l7559 554E                                          l8375 5106  
                                        l8367 50AE                                          l8359 506C  
                                        l8471 30E4                                          l8463 30BE  
                                        l8455 3074                                          l8447 2FFC  
                                        l8199 52B8                                          l8391 4ACE  
                                        l8383 4A3C                                          l8439 36EC  
                                        l8711 1A14                                          l8703 19DE  
                                        l8631 159E                                          l8615 1506  
                                        l8623 1564                                          l8607 14E2  
                                        l8551 1214                                          l8535 1168  
                                        l8527 113E                                          l8519 110C  
                                        l9095 611A                                          l9335 5288  
                                        l9327 5234                                          l6951 3C28  
                                        l6943 3BE0                                          l6935 3B98  
                                        l9175 45B6                                          l9167 456E  
                                        l9159 452E                                          l9351 468A  
                                        l9343 4628                                          l6777 5FD6  
                                        l6793 5F92                                          l6785 6024  
                                        l6865 5496                                          l6857 5452  
                                        l6849 5442                                          l8297 48C0  
                                        l8289 489A                                          l7761 27E6  
                                        l7753 27AE                                          l7745 2752  
                                        l7737 270E                                          l7729 26D8  
                                        l7681 258E                                          l7673 255C  
                                        l7665 251E                                          l7657 24EA  
                                        l7649 2490                                          l7593 23CE  
                                        l7585 239E                                          l7577 236C  
                                        l9281 34EA                                          l9265 345E  
                                        l9257 339C                                          l9249 3354  
                                        l7921 2D60                                          l7913 2D2E  
                                        l7905 2D04                                          l9193 3DC4  
                                        l9185 3D24                                          l7833 41DE  
                                        l7825 41B4                                          l7817 4146  
                                        l7809 4100                                          l7841 4224  
                                        l8369 50C2                                          l8473 30EA  
                                        l8481 31DE                                          l8465 30CC  
                                        l8457 3076                                          l8449 301C  
                                        l8385 4A5C                                          l8801 1CE6  
                                        l8721 1A40                                          l8713 1A1A  
                                        l8705 19F2                                          l8641 15EC  
                                        l8633 15A2                                          l8625 156C  
                                        l8617 1522                                          l8553 121E  
                                        l8545 11CE                                          l8537 116C  
                                        l8529 1150                                          l9337 5292  
                                        l9329 5242                                          l9521 3CDE  
                                        l6961 3C72                                          l6953 3C38  
                                        l6945 3BFC                                          l6937 3BB0  
                                        l6929 3B34                                          l9177 45C4  
                                        l9169 457C                                          l9097 549C  
                                        l9361 46B6                                          l9353 468E  
                                        l9345 463A                                          l6779 5FDA  
                                        l6795 5F9E                                          l6787 6026  
                                        l6859 5456                                          l8299 48CA  
                                        l7763 27E8                                          l7755 27CE  
                                        l7747 278C                                          l7691 25BC  
                                        l7683 259C                                          l7667 2520  
                                        l7659 2500                                          l7595 23D0  
                                        l7579 237C                                          l7587 23A6  
                                        l9283 34F2                                          l9267 346A  
                                        l9259 33B2                                          l7915 2D44  
                                        l7907 2D14                                          l9523 3DE6  
                                        l9187 3D80                                          l7835 41FE  
                                        l7827 41B6                                          l7819 4154  
                                        l7851 4284                                          l7843 4232  
                                        l8379 5B3A                                          l8483 31FA  
                                        l8491 325A                                          l8475 316C  
                                        l8467 30D2                                          l8459 3090  
                                        l8387 4A9A                                          l8395 4ADA  
                                        l8811 1D24                                          l8803 1CF8  
                                        l8715 1A26                                          l8707 1A00  
                                        l8723 1A46                                          l8731 1A74  
                                        l8651 1684                                          l8635 15B4  
                                        l8643 15F4                                          l8627 157E  
                                        l8619 1558                                          l8571 12F2  
                                        l8563 12A2                                          l8547 11E0  
                                        l8539 1172                                          l9339 5298  
                                        l6971 3CBE                                          l6963 3C88  
                                        l6955 3C44                                          l6947 3C14  
                                        l6939 3BBE                                          l9179 45DC  
                                        l9099 54AE                                          l9363 46BA  
                                        l9355 4696                                          l9347 463E  
                                        l6797 5FA8                                          l6789 6032  
                                        l9293 4384                                          l7765 27EE  
                                        l7757 27D2                                          l7749 278E  
                                        l7693 25C6                                          l7685 25A8  
                                        l7677 2570                                          l7669 252A  
                                        l7597 23D6                                          l7589 23B6  
                                        l9285 350E                                          l9277 3482  
                                        l7941 2DE2                                          l7933 2D98  
                                        l7917 2D54                                          l7925 2D74  
                                        l7909 2D16                                          l9525 3EAC  
                                        l9189 3D9C                                          l9197 3DD0  
                                        l7829 41C8                                          l7861 42FA  
                                        l7853 42A2                                          l7845 4252  
                                        l7773 5AB2                                          l7781 5BB8  
                                        l8493 326C                                          l8485 3218  
                                        l8477 3174                                          l8469 30DA  
                                        l8397 4AEC                                          l8389 4AC2  
                                        l8805 1D04                                          l8813 1D40  
                                        l8741 1B2A                                          l8733 1ACC  
                                        l8725 1A58                                          l8717 1A36  
                                        l8709 1A10                                          l8661 1768  
                                        l8653 16DC                                          l8645 15FC  
                                        l8637 15C2                                          l8629 1590  
                                        l8581 136A                                          l8565 12B4  
                                        l8549 11FC                                          l8557 1246  
                                        l8821 3746                                          l8901 1F76  
                                        l6965 3C9E                                          l6957 3C4A  
                                        l6949 3C22                                          l9381 4714  
                                        l9373 4704                                          l9365 46C8  
                                        l9357 469E                                          l9349 4642  
                                        l6799 5FAC                                          l9295 43A6  
                                        l7767 27FC                                          l7759 27E0  
                                        l7687 25AC                                          l7679 2580  
                                        l7695 25CC                                          l7599 23E4  
                                        l9287 3516                                          l9279 34CC  
                                        l7951 2E28                                          l7943 2DEA  
                                        l7935 2DB2                                          l7927 2D84  
                                        l7919 2D5C                                          l9527 3A48  
                                        l9199 3E10                                          l7871 4362  
                                        l7863 431A                                          l7855 42AA  
                                        l7847 4256                                          l7839 4220  
                                        l7775 5ABE                                          l7783 5BC4  
                                        l8495 327A                                          l8487 3232  
                                        l8479 317A                                          l7791 5C6A  
                                        l8807 1D0C                                          l8751 1B7A  
                                        l8743 1B46                                          l8735 1B00  
                                        l8727 1A6A                                          l8719 1A3A  
                                        l8671 1802                                          l8663 179C  
                                        l8655 1710                                          l8647 160C  
                                        l8639 15DA                                          l8591 143C  
                                        l8583 139E                                          l8567 12D0  
                                        l8559 126C                                          l8575 131A  
                                        l8831 37B8                                          l8823 3760  
                                        l8903 1F88                                          l6959 3C5A  
                                        l9375 4708                                          l9367 46D8  
                                        l9359 46A4                                          l9383 617A  
                                        l9297 43A6                                          l7769 27FE  
                                        l7697 25F2                                          l7689 25BA  
                                        l9529 3496                                          l7961 2E80  
                                        l7953 2E46                                          l7945 2DFA  
                                        l7937 2DC2                                          l7929 2D84  
                                        l7881 2C7E                                          l7865 432C  
                                        l7857 42BE                                          l7849 4264  
                                        l7777 5AD0                                          l7785 5BC8  
                                        l8497 3280                                          l8489 324C  
                                        l8809 1D1E                                          l8761 1BBC  
                                        l8753 1B8A                                          l8745 1B58  
                                        l8737 1B08                                          l8729 1A6E  
                                        l8681 18DA                                          l8673 1836  
                                        l8665 17B0                                          l8649 1620  
                                        l8657 1716                                          l8585 13A4  
                                        l8593 1470                                          l8577 1334  
                                        l8569 12E8                                          l8841 38B4  
                                        l8833 382E                                          l8825 379E  
                                        l8817 3736                                          l8921 20F4  
                                        l8905 1FAA                                          l8913 202C  
                                        l6969 3CAE                                          l6977 3CCA  
                                        l9377 470C                                          l9369 46EC  
                                        l9385 617E                                          l9299 43B2  
                                        l7699 2626                                          l7971 2EBE  
                                        l7963 2E86                                          l7955 2E48  
                                        l7947 2E0E                                          l7939 2DD2  
                                        l7883 2C8E                                          l7891 2CB8  
                                        l7875 2C60                                          l7795 4098  
                                        l7859 42CC                                          l7867 4332  
                                        l7779 5AD4                                          l7787 5BE4  
                                        l8499 3292                                          l8771 1BEC  
                                        l8763 1BCA                                          l8755 1B9C  
                                        l8747 1B66                                          l8691 1930  
                                        l8739 1B0C                                          l8675 188E  
                                        l8683 18DE                                          l8667 17E2  
                                        l8659 1734                                          l8595 1480  
                                        l8587 1400                                          l8843 38D2  
                                        l8835 3836                                          l8827 37A8  
                                        l8819 3744                                          l8931 21EE  
                                        l8923 213C                                          l8915 205A  
                                        l8907 1FBC                                          l9379 4710  
                                        l9387 6180                                          l7981 2F28  
                                        l7973 2EC2                                          l7965 2E90  
                                        l7957 2E58                                          l7949 2E1C  
                                        l7893 2CC8                                          l7885 2C9E  
                                        l7877 2C6E                                          l7797 409C  
                                        l7869 4342                                          l8781 1C4E  
                                        l8773 1C12                                          l8765 1BD2  
                                        l8757 1BA4                                          l8749 1B76  
                                        l8693 1994                                          l8685 18EE  
                                        l8677 1892                                          l8669 17F2  
                                        l8597 1484                                          l8589 1434  
                                        l8861 4B7E                                          l8853 4B3A  
                                        l8845 38EC                                          l8837 383C  
                                        l8829 37B2                                          l8941 22C6  
                                        l8933 224E                                          l8925 2194  
                                        l8909 2000                                          l9389 618E  
                                        l7991 2F8A                                          l7983 2F34  
                                        l7975 2ED0                                          l7967 2E9E  
                                        l7959 2E6A                                          l7895 2CCE  
                                        l7887 2CAE                                          l7879 2C7C  
                                        l7799 40AA                                          l8791 1C94  
                                        l8783 1C68                                          l8775 1C2E  
                                        l8767 1BDA                                          l8759 1BB4  
                                        l8695 19A2                                          l8687 1900  
                                        l8679 18C6                                          l8599 1496  
                                        l8863 4B9A                                          l8855 4B64  
                                        l8847 3906                                          l8839 38A0  
                                        l8943 22DA                                          l8919 20E2  
                                        l7993 2FA0                                          l7985 2F42  
                                        l7977 2EFE                                          l7969 2EB0  
                                        l7897 2CD4                                          l7889 2CB0  
                                        l8793 1CA6                                          l8785 1C6E  
                                        l8777 1C36                                          l8769 1BE6  
                                        l8697 19B6                                          l8689 190C  
                                        l8865 4BBC                                          l8849 3914  
                                        l8937 2286                                          l8929 21C0  
                                        l8881 1DBA                                          l8953 2308  
                                        l8873 1D66                                          l8961 56F8  
                                        l8971 5E1C                                          l7995 2FBA  
                                        l7987 2F6C                                          l7899 2CE2  
                                        l8795 1CAC                                          l8787 1C80  
                                        l8779 1C3C                                          l8699 19C8  
                                        l8867 4BCE                                          l8859 4B70  
                                        l8955 2336                                          l8939 22B4  
                                        l8947 22E8                                          l8891 1E86  
                                        l8883 1DE6                                          l8875 1D94  
                                        l8963 5700                                          l8973 5DE8  
                                        l7997 2FD6                                          l7989 2F70  
                                        l8797 1CB2                                          l8789 1C8C  
                                        l8869 4C00                                          l8949 22FA  
                                        l8893 1EB4                                          l8885 1DF6  
                                        l8877 1DA6                                          l8965 570E  
                                        l8991 3F60                                          l8983 3EE6  
                                        l8975 5DB4                                          l7999 2FDA  
                                        l8895 1EE2                                          l8887 1E36  
                                        l8879 1DB6                                          l8967 573C  
                                        STR_1 1099                                          STR_2 105D  
                                        l8985 3EF6                                          l8969 5E50  
                                        l8897 1F3E                                          l8889 1E46  
                                        l8977 60BC                                          STR_3 101B  
                                        STR_4 1001                                          l8995 3F74  
                                        l8987 3F04                                          l8979 60C6  
                                        STR_5 1048                                          STR_6 1033  
                                        l8997 3F7C                                          l8989 3F4A  
                                        STR_7 107E                                          STR_8 108C  
                                        l8999 3F88                                          STR_9 1070  
                                        _LATA 003FBA                                          _LATB 003FBB  
                                        _LATC 003FBC                                          _LATD 003FBD  
                                        _LATE 003FBE                                          _T2PR 003FAB  
                                        _T4PR 003F9F                                          _PMD0 0039C0  
                                        _PMD1 0039C1                                          _PMD2 0039C2  
                                        _PMD3 0039C3                                          u6400 4756  
                                        u8000 4264                                          _PMD4 0039C4  
                                        u6401 4752                                          u8001 4260  
                                        _PMD5 0039C5                                          u6410 4790  
                                        u8010 42A2                                          _PMD6 0039C6  
                                        u2955 5974                                          u6411 478C  
                                        u8011 429E                                          _PMD7 0039C7  
                                        u2956 5976                                          u6420 47B2  
                                        u8100 2D04                                          u8020 42CC  
                                        u6421 47AE                                          u8101 2D00  
                                        u8021 42C8                                          u6430 47DA  
                                        u8110 2D44                                          u8030 42FA  
                                        u6431 47D6                                          u8111 2D40  
                                        u8031 42F6                                          u6440 480C  
                                        u8200 2ED0                                          u8120 2D84  
                                        u8040 4342                                          u9000 3598  
                                        u6441 4808                                          u8201 2ECC  
                                        u8121 2D80                                          u8041 433E  
                                        u9001 3594                                          u8210 2EFE  
                                        u8130 2DFA                                          u8050 2C7C  
                                        u9010 35BA                                          u8211 2EFA  
                                        u8131 2DF6                                          u8051 2C78  
                                        u9011 35B6                                          u8300 284E  
                                        u7500 237C                                          u8220 2F14  
                                        u8140 2E1C                                          u8060 2C8E  
                                        u6380 5F0A                                          u7420 5844  
                                        u9100 3030                                          u8301 284A  
                                        u7501 2378                                          u8221 2F10  
                                        u8141 2E18                                          u8061 2C8A  
                                        u6381 5F06                                          u7421 5840  
                                        u8310 288E                                          u6390 4734  
                                        u7510 238C                                          u8230 2F28  
                                        u8150 2E46                                          u8070 2C9E  
                                        u7430 5854                                          u9110 3046  
                                        u9030 3628                                          u8311 288A  
                                        u6391 4730                                          u7511 2388  
                                        u8231 2F24                                          u8151 2E42  
                                        u8071 2C9A                                          u7431 5850  
                                        u9111 3042                                          u9031 3624  
                                        u8400 2B4E                                          u8320 28A0  
                                        u7600 24D8                                          u7520 23CE  
                                        u8240 2F42                                          u8160 2E6A  
                                        u8080 2CE2                                          u7440 5884  
                                        u9200 325A                                          u9120 3074  
                                        u9040 364C                                          u6800 3C72  
                                        u6720 3B7C                                          u8401 2B4A  
                                        u8321 289C                                          u7521 23CA  
                                        u8241 2F3E                                          u8161 2E66  
                                        u8081 2CDE                                          u7441 5880  
                                        u9201 3256                                          u9121 3070  
                                        u9025 35CE                                          u6801 3C6E  
                                        u6721 3B78                                          u8410 2B64  
                                        u8330 28B0                                          u6650 55F0  
                                        u7610 2500                                          u7530 23E4  
                                        u8250 2F8A                                          u8170 2E80  
                                        u8090 2CF4                                          u7450 554E  
                                        u9210 326C                                          u9130 3090  
                                        u9050 3668                                          u9026 35D8  
                                        u6810 3C88                                          u6730 3B98  
                                        u8411 2B60                                          u8331 28AC  
                                        u6651 55EC                                          u7611 24FC  
                                        u7531 23E0                                          u8251 2F86  
                                        u8171 2E7C                                          u8091 2CF0  
                                        u7451 554A                                          u9211 3268  
                                        u9131 308C                                          u9051 3664  
                                        u9027 35E8                                          u6811 3C84  
                                        u6731 3B94                                          u8500 500A  
                                        u8420 2B78                                          u8340 28E6  
                                        u6660 5600                                          u7700 2638  
                                        u7620 251E                                          u7540 23F6  
                                        u8260 2FBA                                          u8180 2E9E  
                                        u7460 5560                                          u9220 327A  
                                        u9140 30BE                                          u9060 36BC  
                                        u9300 11CA                                          u6820 3C9E  
                                        u6740 3BB0                                          u8501 5006  
                                        u8421 2B74                                          u8341 28E2  
                                        u6661 55FC                                          u7701 2634  
                                        u7621 251A                                          u7541 23F2  
                                        u8261 2FB6                                          u8181 2E9A  
                                        u7461 555C                                          u9221 3276  
                                        u9141 30BA                                          u9045 3642  
                                        u6821 3C9A                                          u6741 3BAC  
                                        u8510 5026                                          u8430 2B92  
                                        u8350 28F6                                          u7710 266E  
                                        u7630 253E                                          u7550 2406  
                                        u8270 2FE8                                          u8190 2EBE  
                                        u7470 5588                                          u9230 3292  
                                        u9150 30CC                                          u9070 36D8  
                                        u9310 11E0                                          u6830 3CBE  
                                        u6750 3BE0                                          u8511 5022  
                                        u8431 2B8E                                          u8351 28F2  
                                        u7711 266A                                          u7631 253A  
                                        u7551 2402                                          u8271 2FE4  
                                        u8191 2EBA                                          u7471 5584  
                                        u9231 328E                                          u9151 30C8  
                                        u9071 36D4                                          u9311 11DC  
                                        u6831 3CBA                                          u6751 3BDC  
                                        u8520 504C                                          u8440 2BDA  
                                        u8360 2A94                                          u8280 282C  
                                        u7800 2738                                          u7720 267E  
                                        u7640 254C                                          u7560 2442  
                                        u7480 55BE                                          u9160 31FA  
                                        u8600 53BA                                          u9080 3714  
                                        u9400 14A8                                          u9320 126C  
                                        u9240 10E0                                          u6760 3BFC  
                                        u8521 5048                                          u8441 2BD6  
                                        u8281 2828                                          u7801 2734  
                                        u7721 267A                                          u7641 2548  
                                        u7561 243E                                          u7481 55BA  
                                        u9161 31F6                                          u8601 53B6  
                                        u9081 3710                                          u9065 36B2  
                                        u9401 14A4                                          u9321 1268  
                                        u9241 10DC                                          u6761 3BF8  
                                        u8450 2C08                                          u8370 2AEE  
                                        u8290 283E                                          u7810 2752  
                                        u7730 26AA                                          u7650 255C  
                                        u7570 2450                                          u7490 236A  
                                        u9170 3218                                          u9090 302E  
                                        u8530 52B0                                          u8610 53EE  
                                        u9410 14CA                                          u9330 129C  
                                        u9250 1130                                          u6770 3C14  
                                        u8451 2C04                                          u8371 2AEA  
                                        u8291 283A                                          u7811 274E  
                                        u7731 26A6                                          u7651 2558  
                                        u7571 244C                                          u7491 2366  
                                        u9171 3214                                          u9091 3028  
                                        u8531 52AC                                          u8611 53EA  
                                        u9411 14C6                                          u9331 1296  
                                        u9251 112C                                          u6771 3C10  
                                        u8460 2C42                                          u8380 2B0E  
                                        u8700 48A8                                          u7820 278C  
                                        u7740 26BA                                          u7660 258E  
                                        u7580 24BE                                          u9180 3232  
                                        u8540 52CA                                          u8620 4966  
                                        u7900 5C9A                                          u9500 15C2  
                                        u9420 14F0                                          u9340 129E  
                                        u9260 113E                                          u6780 3C38  
                                        u8461 2C3E                                          u8381 2B0A  
                                        u8365 2A8A                                          u8701 48A4  
                                        u7821 2788                                          u7741 26B6  
                                        u7661 258A                                          u7581 24BA  
                                        u9181 322E                                          u8541 52C6  
                                        u8621 4962                                          u7901 5C94  
                                        u9501 15BE                                          u9421 14EC  
                                        u9261 113A                                          u6781 3C34  
                                        u8470 4FAC                                          u8390 2B20  
                                        u8710 48BC                                          u7830 279E  
                                        u7750 26D6                                          u7670 259C  
                                        u7590 24D6                                          u9190 324C  
                                        u8550 52E4                                          u8630 49A4  
                                        u7910 5C9C                                          u9510 15EC  
                                        u9430 1506                                          u9350 12B4  
                                        u9270 1150                                          u6790 3C5A  
                                        u8471 4FA8                                          u8391 2B1C  
                                        u8711 48B8                                          u7831 279A  
                                        u7751 26D2                                          u7671 2598  
                                        u7591 24D0                                          u9191 3248  
                                        u8551 52E0                                          u8631 49A0  
                                        u9511 15E8                                          u9431 1502  
                                        u9351 12B0                                          u9271 114C  
                                        u6791 3C56                                          u8480 4FC6  
                                        u8720 48E4                                          u7840 27AE  
                                        u7760 26E6                                          u7680 25BA  
                                        u7920 40AA                                          u8560 5302  
                                        u8640 49C2                                          u9600 19B6  
                                        u9520 1734                                          u9440 1522  
                                        u9360 1366                                          u9280 1198  
                                        u8800 4E48                                          u8481 4FC2  
                                        u8721 48E0                                          u7841 27AA  
                                        u7761 26E2                                          u7681 25B6  
                                        u7921 40A6                                          u8561 52FE  
                                        u8641 49BE                                          u9601 19B2  
                                        u9521 1730                                          u9441 151E  
                                        u9361 1362                                          u9281 1194  
                                        u8801 4E44                                          u8490 4FEC  
                                        u8730 4904                                          u7850 27CE  
                                        u7770 26F8                                          u7690 25F2  
                                        u7930 40DC                                          u8570 5318  
                                        u8650 49E2                                          u9610 19C8  
                                        u9530 179C                                          u9450 1558  
                                        u9370 13FC                                          u9290 11C8  
                                        u8810 4E76                                          u8491 4FE8  
                                        u8731 4900                                          u7851 27CA  
                                        u7771 26F4                                          u7691 25EE  
                                        u7931 40D8                                          u8571 5314  
                                        u8651 49DE                                          u9611 19C4  
                                        u9531 1798                                          u9451 1554  
                                        u9371 13F8                                          u9291 11C2  
                                        u8811 4E72                                          u8740 4914  
                                        u7860 27E0                                          u7780 270E  
                                        u8820 506C                                          u8580 533C  
                                        u8660 4A32                                          u8900 4AEC  
                                        u9700 1B9C                                          u9620 19D6  
                                        u9540 17E2                                          u9460 157E  
                                        u9380 1470                                          u8741 4910  
                                        u7861 27DC                                          u7781 270A  
                                        u7941 4106                                          u8821 5068  
                                        u8581 5338                                          u8661 4A2E  
                                        u8901 4AE8                                          u9701 1B98  
                                        u9621 19D2                                          u9541 17DE  
                                        u9461 157A                                          u9381 146C  
                                        u7870 27FC                                          u7790 2724  
                                        u7950 412A                                          u8830 508E  
                                        u8590 537C                                          u8670 5CB8  
                                        u9710 1BCA                                          u9630 19F2  
                                        u9550 17F2                                          u9470 1590  
                                        u9390 1496                                          u7871 27F8  
                                        u7791 2720                                          u7951 4126  
                                        u8831 508A                                          u8591 5378  
                                        u8671 5CB4                                          u9711 1BC6  
                                        u9631 19EE                                          u9551 17EE  
                                        u9471 158C                                          u9391 1492  
                                        u8751 4C34                                          u8680 4846  
                                        u7960 4154                                          u7880 5AF4  
                                        u8840 50E4                                          u8920 4B26  
                                        u9720 1C4E                                          u9640 1A00  
                                        u9560 188E                                          u9480 159E  
                                        u8760 4C58                                          u9800 38B4  
                                        u8681 4842                                          u7961 4150  
                                        u7881 5AF0                                          u8841 50E0  
                                        u8921 4B20                                          u9721 1C4A  
                                        u9641 19FC                                          u9561 188A  
                                        u9481 159A                                          u8761 4C54  
                                        u9801 38B0                                          u8690 487A  
                                        u7970 4194                                          u7890 5BE4  
                                        u8850 50F2                                          u8930 4B28  
                                        u9730 1C68                                          u9650 1A58  
                                        u9570 18DA                                          u9490 15B4  
                                        u8770 4C82                                          u9810 38D2  
                                        u7971 4190                                          u7891 5BE0  
                                        u8851 50EE                                          u8915 4AFE  
                                        u9731 1C64                                          u9651 1A54  
                                        u9571 18D6                                          u9491 15B0  
                                        u8771 4C7E                                          u9811 38CE  
                                        u7980 41DE                                          u8860 5B54  
                                        u8940 57BE                                          u9740 1C80  
                                        u9660 1B2A                                          u9580 1900  
                                        u8780 4CC2                                          u9820 38EC  
                                        u9900 1D94                                          u7981 41DA  
                                        u8861 5B50                                          u9741 1C7C  
                                        u9661 1B26                                          u9581 18FC  
                                        u8781 4CBE                                          u9821 38E8  
                                        u9901 1D90                                          u7990 4232  
                                        u8870 4A7C                                          u8950 57D0  
                                        u9750 1CE0                                          u9670 1B46  
                                        u9590 19A2                                          u8790 4E1E  
                                        u9830 3906                                          u9910 1DF6  
                                        u8695 4870                                          u7991 422E  
                                        u8951 57CC                                          u9751 1CDA  
                                        u9671 1B42                                          u9591 199E  
                                        u8791 4E1A                                          u9831 3902  
                                        u9911 1DF2                                          u8880 4A9A  
                                        u8960 5802                                          u9760 1CE2  
                                        u9680 1B58                                          u9840 3914  
                                        u9920 1E46                                          u8881 4A96  
                                        u8961 57FC                                          u9681 1B54  
                                        u9841 3910                                          u9921 1E42  
                                        u8890 4AC2                                          u8970 5804  
                                        u9770 1CF8                                          u9690 1B66  
                                        u9850 4B64                                          u9930 1EB4  
                                        u8891 4ABE                                          u8875 4A72  
                                        u8947 57B0                                          u9771 1CF4  
                                        u9691 1B62                                          u9851 4B60  
                                        u9931 1EB0                                          u8980 581A  
                                        u9860 4B9A                                          u9780 3744  
                                        u9940 1EE2                                          u8981 5816  
                                        u9861 4B96                                          u9781 3740  
                                        u9941 1EDE                                          u8990 356A  
                                        u9870 4BBC                                          u9790 3760  
                                        u9950 1F88                                          u9871 4BB8  
                                        u9791 375C                                          u9951 1F84  
                                        u9880 4BCE                                          u9960 205A  
                                        u9881 4BCA                                          u9961 2056  
                                        u9890 4C00                                          u9970 20DC  
                                        _TMR2 003FAA                                          u8995 3560  
                                        u9891 4BFC                                          u9971 20D6  
                                        u9980 20DE                                          _TMR4 003F9E  
                                        u9990 20F4                                          u9991 20F0  
                                        _WPUA 003A41                                          _WPUB 003A51  
                                        _WPUC 003A61                                          _WPUD 003A71  
                                        _WPUE 003A81                           ?_UART1_Transmit_ISR 0001  
                                        abs@a 0026                                          _dbuf 013E  
                                        _main 617A                                          _dtoa 2FFC  
                                        _loop 45FC                                          _prec 003C  
                                        _nout 0128                                          pad@i 002D  
                                        pad@p 002A                                          fsr1h 003FE2  
                                        fsr2h 003FDA                                          indf1 003FE7  
                                        indf2 003FDF                                          fsr1l 003FE1  
                                        pad@w 002F                                          fsr2l 003FD9  
                                        _utoa 3736                                 ___fpclassifyf 4A3C  
                                        prodh 003FF4                                          prodl 003FF3  
                                        start 00AE                               _timer5ReloadVal 0194  
                             ___fldiv@new_exp 0065                               _TMR3_Initialize 5CDA  
                             _PWM5_Initialize 621C                             ??_CLC3_Initialize 0014  
               ??_UART1_SetTxInterruptHandler 0016                                  _tolower$3693 0020  
                  ??_TMR4_SetInterruptHandler 0016                             _UART1_rx_vect_isr 5C30  
                                ___param_bank 000000                    __end_of_PWM5_LoadDutyValue 5E1C  
                          ?_UART1_rx_vect_isr 0001                                         ??_abs 0028  
                                       ??_pad 002C                __size_of_OSCILLATOR_Initialize 0018  
                        ??_UART1_Transmit_ISR 0011                 __end_of_OSCILLATOR_Initialize 624C  
                               ___fltol@sign1 0081                               __end_of___aldiv 482E  
                             __end_of___aodiv 4220                                         _ADCAP 003EF5  
                                       _ADACT 003EFE                       __end_of_CCP3_Initialize 5FDE  
                             __end_of___fladd 2810                                         ?_main 0001  
                                       ?_dtoa 0060                                         _ADCLK 003EFF  
                             __end_of___aomod 4384                                         _ADCNT 003EEB  
                                       _ADPCH 003EF1                               __end_of___fldiv 2FFC  
                                       _ADREF 003EFD                               __end_of___awdiv 505E  
                             __end_of___flneg 5CDA                                         ?_loop 0001  
                                       STR_10 10A4                                         STR_11 10AC  
                                       STR_20 10B4                                         STR_14 10A8  
                                       STR_15 10B0                                         STR_18 10B4  
                             __end_of___awmod 534E                                         _ADRPT 003EEC  
                      ??_CCP4_DefaultCallBack 0007                               __end_of___flmul 2C60  
                    TMR5_ReadTimer@readValLow 0010                               __end_of___flsub 5AB2  
                             __end_of___fltol 4936                                         u10000 21EE  
                                       u10001 21EA                                         u10010 22B4  
                                       u10011 22B0                                         u10100 3FB6  
                                       u10020 575E                                         u10101 3FB2  
                                       u10021 575A                                         u10110 4000  
                                       u10111 3FFC                                         ?_utoa 0060  
                                       u10120 401E                                         u10200 4DB2  
                                       u10121 401A                                         u10201 4DAE  
                                       u10130 402E                                         u10210 3A94  
                                       u10131 402A                                         u10035 5E74  
                                       u10211 3A90                                         u10140 403C  
                                       u10220 3ABC                                         u10300 44EC  
                                       u10141 4038                                         u10045 5E40  
                                       u10221 3AB8                                         u10301 44E8  
                                       u10150 4076                                         u10070 3EF6  
                                       u10230 3AE0                                         u10310 4516  
                                       u10151 4072                                         u10071 3EF2  
                                       u10055 5E0C                                         u10231 3ADC  
                                       u10311 4512                                         u10160 4084  
                                       u10080 3F04                                         u10240 3B08  
                                       u10400 3E5E                                         u10320 452E  
                                       u10161 4080                                         u10081 3F00  
                                       u10065 5DD8                                         u10241 3B04  
                                       u10401 3E5A                                         u10321 452A  
                                       u10090 3F60                                         u10170 4D3A  
                                       u10410 3E84                                         u10330 4540  
                                       u10250 54EE                                         u10091 3F5C  
                                       u10171 4D36                                         u10411 3E80  
                                       u10331 453C                                         u10251 54EA  
                                       u10180 4D56                                         u10500 350E  
                                       u10420 3306                                         u10340 4556  
                                       u10260 5510                                         u10181 4D52  
                                       u10501 350A                                         u10421 3302  
                                       u10341 4552                                         u10261 550C  
                                       u10190 4D96                                         u10510 4442  
                                       u10430 3326                                         u10350 4598  
                                       u10270 553A                                         u10191 4D92  
                                       u10511 443E                                         u10431 3322  
                                       u10351 4594                                         u10271 5536  
                                       u10520 445E                                         u10440 3340  
                                       u10280 5682                                         u10360 45B6  
                                       u10600 46C8                                         u10521 445A  
                                       u10441 333C                                         u10281 567E  
                                       u10361 45B2                                         u10601 46C4  
                                       u10530 448E                                         u10450 336E  
                                       u10290 56D6                                         u10370 45DC  
                                       u10610 4700                                         u10531 448A  
                                       u10451 336A                               __end_of___lodiv 4D1E  
                                       u10291 56D2                                         u10371 45D8  
                                       u10611 46FC                                         u10540 44B6  
                                       u10460 3384                                         u10380 3D9C  
                             ___awdiv@divisor 0016                                         u10541 44B2  
                                       u10461 3380                                         u10381 3D98  
                                       u10470 33B2                                         u10390 3DC4  
                                       u10550 51F8                                         u10471 33AE  
                                       u10391 3DC0                                         u10551 51F4  
                                       u10480 33CC                                         u10560 4628  
                                       u10481 33C8                                         u10561 4624  
                                       u10490 34EA                                         u10570 463A  
                                       _U1P1H 003DED                                         u10491 34E6  
                                       u10571 4636                                         u10580 468A  
                                       _U1P2H 003DEF                                         u10581 4686  
                                       u10590 46B6                                         _U1P1L 003DEC  
                                       _U1P3H 003DF1                                         u10591 46B2  
                                       _T3CLK 003FA9                                         _T2CON 003FAC  
                                       _U1P2L 003DEE                                         _U1P3L 003DF0  
                                       _T3CON 003FA6                                         _T5CLK 003F9D  
                                       _T4CON 003FA0                               __end_of___lomod 4ED0  
                                       _T2HLT 003FAD                                         _T5CON 003F9A  
                                       _T4HLT 003FA1                                         _T2TMR 003FAA  
                                       _U1UIR 003DF8                                         i1l330 5C62  
                                       _T2RST 003FAF                                         _U1RXB 003DE8  
                                       i1l324 5C26                                         i1l333 5B34  
                                       i1l350 62D2                                         i1l343 51DE  
                                       i1l336 5B38                                         i1l353 62D0  
                                       _U1TXB 003DEA                                         i1l347 608E  
                                       i1l356 62CE                                         _T4TMR 003F9E  
                                       _T4RST 003FA3                                         i2l409 62D8  
                                       i1l692 600A                                         i2l534 60BA  
                                       i2l438 5D7C                                         i2l446 5EB6  
                                       i2l552 5F50                                         i1l688 5BB0  
                                       i2l529 6178                                         i2l537 6258  
                                       i1l698 62D4                                         i2l476 5DB2  
                                       i2l558 61B6                                         i2l487 5EEA  
                         ??_UART1_rx_vect_isr 0012                                         i2l863 593E  
                                       i2l856 5A68                                         i2l868 610A  
                             ___awdiv@counter 0018                                         _OSCEN 0039DD  
                                vfpfcnvrt@fmt 00C9                                  vfpfcnvrt@llu 00D9  
                                       _TMR3H 003FA5                                         _TMR5H 003F99  
                                       _TMR3L 003FA4                                         _TMR5L 003F98  
                                       _TRISA 003FC2                                         _TRISB 003FC3  
                                       _TRISC 003FC4                                         _TRISD 003FC5  
                                       _TRISE 003FC6                                   _Default_ISR 62D8  
                             _TMR4_Initialize 600C                               _PWM6_Initialize 6204  
                           _UART1_tx_vect_isr 5BF4                              __end_of_TMR4_ISR 5BB8  
                     setSteering@steeringMode 0085                                         _delay 0040  
                                       _flags 003E                                         _fputc 553C  
                                       _fputs 5AB2                         __size_of_calcMotorPow 0150  
                          ?_UART1_tx_vect_isr 0001                                         pad@fp 0026  
                                       _width 003A                                         _putch 6266  
                                       dtoa@d 0062                                         dtoa@i 007A  
                                       dtoa@n 0072                                         dtoa@p 006C  
                                       dtoa@s 0070                                         dtoa@w 006E  
                            ?_SMT1_Initialize 0001                               __end_of_isupper 5CA2  
                                       pclath 003FFA                                         tablat 003FF5  
                                 _BatteryVolt 00EB                               _curveRightCount 00F9  
                       __size_of_calcSteering 01CE                                         utoa@d 0062  
                                       utoa@i 0076                                         utoa@n 006E  
                                       utoa@p 006A                                         utoa@w 006C  
                                       status 003FD8           __end_of_UART1_SetRxInterruptHandler 6284  
                 _UART1_SetRxInterruptHandler 627A                       __end_of_CCP4_Initialize 5FB0  
                              ?___fpclassifyf 0014                               __end_of_tolower 5832  
                             __end_of_strncmp 4C2E                              ___lodiv@dividend 0014  
         fp__UART1_DefaultFramingErrorHandler 0000      __end_of_UART1_DefaultFramingErrorHandler 62D4  
   __size_of_UART1_DefaultFramingErrorHandler 0002            ??_UART1_DefaultFramingErrorHandler 0012  
           ?_UART1_DefaultFramingErrorHandler 0001              _UART1_DefaultFramingErrorHandler 62D2  
                         ??_UART1_tx_vect_isr 0011                     __end_of_UART1_rx_vect_isr 5C6A  
                             _TMR5_Initialize 59D6                               _PWM7_Initialize 61EC  
                             __initialization 5D12                         TMR5_ReadTimer@readVal 000D  
                            ?_CCP3_CaptureISR 0001                                  __end_of_main 619A  
                                __end_of_dtoa 32E2                                  __end_of_loop 4722  
                            ?_checkCurveCount 0001                                  __end_of_utoa 393E  
                 ??_UART1_DefaultErrorHandler 0012                       __end_of_TMR2_Initialize 61D4  
                              _roundTimeCount 012A                                  ?_UART1_Write 0001  
                                      ??_main 003A                                        ??_dtoa 0031  
                                      ??_loop 003A                                        ??_utoa 0031  
                               __activetblptr 000003                                  _calcMotorPow 4384  
        __size_of_UART1_SetTxInterruptHandler 000A                     __end_of_UART1_tx_vect_isr 5C2E  
                                startAccell@i 01B4                              ___lodiv@quotient 0024  
                             _PWM8_Initialize 61D4                              _UART1_Initialize 53F8  
                                _calcSteering 3D16                              ?_CCP4_CaptureISR 0001  
                                      _ADACCH 003EE9                                        _ADACCL 003EE8  
                                      _ADACCU 003EEA                                        _ADACQH 003EF4  
                                      _ADACQL 003EF3                                        _ADCON0 003EF8  
                                      _ADCON1 003EF9                                        _ADCON2 003EFA  
                                      _ADCON3 003EFB                                        _ADERRH 003EE3  
                                      _ADERRL 003EE2                                        ?_fputc 0016  
                                      _ADLTHH 003EDF                                        _ADLTHL 003EDE  
                                      ?_fputs 001F                                        _ADRESH 003EF0  
                                      _ADRESL 003EEF                                        _ADPREH 003EF7  
                                      _ADPREL 003EF6                                        _CCPR3H 003F75  
                                      _CCPR4H 003F71                                        _CCPR3L 003F74  
                                      _CCPR4L 003F70                                        _ADSTAT 003EFC  
                                      _ADUTHH 003EE1                              ___awdiv@dividend 0014  
                                      _ADUTHL 003EE0                            _PWM8_LoadDutyValue 5E1C  
                                      _ANSELA 003A40                                        ?_putch 0001  
                                      _ANSELB 003A50                                        _ANSELC 003A60  
                                      _ANSELD 003A70                                        _ANSELE 003A80  
                                      _RB1I2C 003A5A                                        _RB2I2C 003A5B  
                                      _RD0I2C 003A7A                                        _U1CON0 003DF2  
                                      _U1CON1 003DF3                                        _U1CON2 003DF4  
                                      _RC3I2C 003A6A                                        _RD1I2C 003A7B  
                                      _T3GATE 003FA8                                        _RC4I2C 003A6B  
                                      _U1BRGH 003DF6                                        _U1FIFO 003DF7  
                                      _T3GCON 003FA7                                        _U1BRGL 003DF5  
                                      _T5GATE 003F9C                                        _T5GCON 003F9B  
                                      _RA0PPS 003A00                                        _RA1PPS 003A01  
                                      _RA3PPS 003A03                                        _RA4PPS 003A04  
                                      _RB3PPS 003A0B                                        _T5GPPS 003AC9  
                                      i1l1249 6264                                        _ODCONA 003A42  
                                      _ODCONB 003A52                                        _ODCONC 003A62  
                                      _ODCOND 003A72                                        _ODCONE 003A82  
                     __end_of_PWM5_Initialize 6234                       __end_of_TMR3_Initialize 5D12  
                                      i1l7231 5B2A                                        i1l7223 5AF6  
                                      i1l7241 5150                                        i1l7233 5B2E  
                                      i1l7225 5B06                                        i1l7251 51BC  
                                      i1l7243 5168                                        i1l7235 5120  
                                      i1l7227 5B18                                        i1l7253 51DA  
                                      i1l7245 5178                                        i1l7237 5130  
                                      i1l7229 5B1A                                        i1l7247 5188  
                                      i1l7239 5140                                        i1l7343 5BFA  
                                      i1l7177 625A                                        i1l7249 51A0  
                                      i1l7345 5C0E                                        i1l7371 5BA2  
                                      i1l7347 5C36                                        i1l7293 5FDE  
                                      i1l7373 5BA6                                        i1l6661 6078  
                                      i1l7349 5C4A                                        i1l7295 5FF2  
                                      i1l7367 5B82                                        i1l6663 6088  
                                      i1l7369 5B86                                        i1l6665 608C  
                                      i1l6657 6064                                        i1l6659 6076  
                                      _INLVLA 003A44                                        _INLVLB 003A54  
                                      i1l6867 62CA                                        _INLVLC 003A64  
                                      _INLVLD 003A74                                        _INLVLE 003A84  
                                      i2l7261 5D76                                        i2l7271 619A  
                                      i2l7263 5D7E                                        i2l7255 5D48  
                                      i2l7351 5E84                                        i2l7273 61A6  
                                      i2l7361 5F24                                        i2l7265 5D8C  
                                      i2l7257 5D56                                        i2l7353 5E94  
                                      i2l7275 61AE                                        i2l7363 5F38  
                                      i2l7267 5D98                                        i2l7355 5EB8  
                                      i2l7259 5D62                                        i2l7381 5A44  
                                      i2l7277 61B2                                        i2l7269 5DAC  
                                      i2l7357 5EC8                                        i2l7391 591A  
                                      i2l7383 5A56                                        i2l7375 5A20  
                                      i2l7359 5F20                                        i2l7393 592C  
                                      i2l7385 58EC                                        i2l7377 5A24  
                                      i2l6681 60AA                                        i2l6673 6090  
                                      i2l7395 60E4                                        i2l7387 58F0  
                                      i2l7379 5A34                                        i2l6675 609E  
                                      i2l6683 60B0                                        i2l7397 60E8  
                                      i2l7389 590A                                        i2l6685 60B4  
                                      i2l6677 60A0                                        i2l6871 6164  
                                      i2l6679 60A4                                        i2l6873 6170  
                                      i2l6869 6156                                        i2l6877 624C  
                                ?_setSteering 0083                                        _OSCFRQ 0039DF  
                            __end_of_actSpeed 5666                                        _SMT1PR 003F1B  
                       _UART1_SetErrorHandler 6298                              __end_of___xxtofl 4098  
                         ?_PWM8_LoadDutyValue 0014                              __end_of_getCurve 3D16  
                    __end_of_CCP3_SetCallBack 62CA                                  _CCPTMRS0bits 003F5E  
                                _CCPTMRS1bits 003F5F                                  vfprintf@cfmt 01AA  
                                      ___flge 4936                                        ___fleq 534E  
                                   ??___aldiv 001C                                     ??___aodiv 0024  
                                   ??___fladd 0036                                     ??___aomod 0024  
                                   ??___fldiv 0032                                     ??___awdiv 0018  
                                   ??___flneg 0018                                     ??___awmod 0018  
                                   ??___flmul 0032                                     ??___flsub 003A  
                                   ??___fltol 007D                                     ??___lodiv 0024  
                                   ??___lomod 0024                                        _efgtoa 10B8  
                               _CCP3_CallBack 0198                                        _floorf 3520  
                                ?_TMR5_Reload 0001                       __end_of_PWM6_Initialize 621C  
                     __end_of_TMR4_Initialize 6038                                        clear_0 5D18  
                                      clear_1 5D24                                        clear_2 5D30  
                            ___awdiv@quotient 001A                                        _motPow 0130  
                             ___awmod@divisor 0016                       fp__CCP3_DefaultCallBack 0000  
                                      isa$std 000001                               ___awmod@counter 0018  
                               _CCP4_CallBack 0196                                        _smtWay 0120  
                                      _printf 60BC                                        pad@buf 0028  
                                      dtoa@fp 0060                              ?_CCP3_Initialize 0001  
                                      _strcpy 5768                                        _strlen 5BB8  
                        ??_PWM8_LoadDutyValue 0016                              __end_of_setMotor 4E00  
                             _ADCC_Initialize 588E          __end_of_TMR4_DefaultInterruptHandler 62D6  
       __size_of_TMR4_DefaultInterruptHandler 0002                  _TMR4_DefaultInterruptHandler 62D4  
                                      fputc@c 0016                                _PMD_Initialize 6132  
                                      fputs@c 0023                                        fputs@i 0024  
                                      fputs@s 001F                               ___fpclassifyf@e 001C  
                             ___fpclassifyf@u 001E                               ___fpclassifyf@x 0014  
                                __mediumconst 0000                         __end_of_TMR5_GATE_ISR 5F52  
                                      tblptrh 003FF7                                     ??_isupper 0016  
                                      tblptrl 003FF6                                        tblptru 003FF8  
           __size_of_ADCC_GetSingleConversion 0032                              __end_of_vfprintf 5768  
                   ?_ADCC_GetSingleConversion 0014                                        utoa@fp 0060  
    TMR4_SetInterruptHandler@InterruptHandler 0014  TMR5_SetGateInterruptHandler@InterruptHandler 0014  
 UART1_SetTxInterruptHandler@InterruptHandler 0014   UART1_SetRxInterruptHandler@InterruptHandler 0014  
        __end_of_UART1_SetOverrunErrorHandler 628E         __size_of_UART1_SetOverrunErrorHandler 000A  
                _UART1_SetOverrunErrorHandler 6284                     _UART1_DefaultErrorHandler 62CA  
                                   ??_tolower 001C                                     ??_strncmp 001A  
               __size_of_INTERRUPT_Initialize 004C                  __size_of_UART1_RxDataHandler 002C  
                           getCurve@deltaLeft 0016                                    ___flge@ff1 006D  
                             ??___fpclassifyf 0018                                    ___flge@ff2 0071  
                     __end_of_PWM7_Initialize 6204                       __end_of_TMR5_Initialize 5A20  
                                ___xxtofl@arg 0026                                  ___xxtofl@exp 0025  
                           _SYSTEM_Initialize 598C                                  ___xxtofl@val 001C  
                                  ___fleq@ff1 0014                                    ___fleq@ff2 0018  
                                  __accesstop 0060                       __end_of__initialization 5D42  
                                  ___flneg@f1 0014                              ?_CCP4_Initialize 0001  
                         setSteering@steering 0083                            ?_SYSTEM_Initialize 0001  
                               ___rparam_used 000001                    __size_of_UART1_rx_vect_isr 003A  
                                  ___fltol@f1 0079                               _TMR5_WriteTimer 6090  
                          __size_of_calcSpeed 023E                     calcMotorPow@setSpeedDelta 0085  
                    __end_of_CCP4_SetCallBack 62C0                                __pcstackCOMRAM 0001  
                       __end_of_TMR4_CallBack 600C                            __size_of_checkBatt 0092  
                                ?_startAccell 0001                           ??_SYSTEM_Initialize 0018  
                                   ?_TMR4_ISR 0001                                ivt0x8_undefint 00AC  
                               __end_of_fputc 55D2                                 __end_of_fputs 5AF6  
                             fp__TMR4_10msISR 0000                                 __end_of_putch 6270  
                            ?_TMR2_Initialize 0001                       __end_of_PWM8_Initialize 61EC  
                      __end_of_PMD_Initialize 6156                   __size_of_PWM7_LoadDutyValue 0034  
                       CCP3_CaptureISR@module 0003                    __size_of_UART1_tx_vect_isr 003A  
              CCP3_SetCallBack@customCallBack 0014                     _UART1_FramingErrorHandler 019E  
             fp__TMR4_DefaultInterruptHandler 0000                 ?_TMR4_DefaultInterruptHandler 0001  
                     fp__CCP4_DefaultCallBack 0000                      __size_of_SMT1_PR_ACQ_ISR 004A  
                                     ??_fputc 001A                     __end_of_SYSTEM_Initialize 59D6  
                                     ??_fputs 0023                               _CLC3_Initialize 6038  
                                     ??_putch 0015                   PWM7_LoadDutyValue@dutyValue 0014  
                                  __pbssBANK0 00EB                                    __pbssBANK1 0100  
               ?_UART1_SetOverrunErrorHandler 0014                        ?_UART1_SetErrorHandler 0014  
                            ?_PWM5_Initialize 0001                              ?_TMR3_Initialize 0001  
                                  __pnvCOMRAM 004C                      __size_of_SMT1_PW_ACQ_ISR 0054  
                       _TMR4_InterruptHandler 018E                                       IVTBASEH 003FD6  
                                     IVTBASEL 003FD5                                       IVTBASEU 003FD7  
                                     ?___flge 006D                                       ?___fleq 0014  
                                  ??_TMR4_ISR 0013                       __end_of_ADCC_Initialize 58EA  
                  __end_of_PWM6_LoadDutyValue 5DE8                                       ?_efgtoa 0083  
        __end_of_TMR5_SetGateInterruptHandler 62AC         __size_of_TMR5_SetGateInterruptHandler 000A  
                _TMR5_SetGateInterruptHandler 62A2                                       _CCP3CAP 003F77  
                                     _CCP4CAP 003F73                                       _CCP3CON 003F76  
                                     _CCP4CON 003F72                                       _ADFLTRH 003EE7  
                                     ?_floorf 0036                                       _ADFLTRL 003EE6  
               __size_of_CCP3_DefaultCallBack 0036                                       _CCP3PPS 003ACF  
                                     _CCP4PPS 003AD0                                       _CLC3CON 003C60  
                                     _CLC3POL 003C61                                       _ADPREVH 003EEE  
                                     _ADPREVL 003EED                              ?_PWM6_Initialize 0001  
                            ?_TMR4_Initialize 0001                                       _ADSTPTH 003EE5  
                                     _ADSTPTL 003EE4                                       ?_printf 01AC  
                             ?_PMD_Initialize 0001                             _UART1_Receive_ISR 5120  
                                  _getReverse 44D4                                       ?_strcpy 0014  
                                     ?_strlen 0014                                       _U1ERRIE 003DFA  
                                   ?_actSpeed 0022                                       _U1ERRIR 003DF9  
                               ?_TMR4_10msISR 0001                                  ?_Default_ISR 0001  
                        __size_of_UART1_Write 005C                            ?_UART1_Receive_ISR 0001  
                                     _U1RXPPS 003AE5                                     ?___xxtofl 001C  
                          _PWM5_LoadDutyValue 5DE8                                    _distRightM 013A  
                     __size_of_TMR5_ReadTimer 0024                                       _OSCCON1 0039D9  
                                     _OSCCON3 0039DB                             __end_of_calcSpeed 3520  
                                     _IVTLOCK 003FD4                            __size_of_vfpfcnvrt 05E8  
                                     _SMT1CLK 003F21                                       _OSCTUNE 0039DE  
                                     _SMT1CPR 003F15                                       _SMT1CPW 003F18  
                                     _PWM5DCH 003F6D                                       _PWM5DCL 003F6C  
                                     _PWM6DCH 003F69                                       _PWM6DCL 003F68  
                                     _PWM7DCH 003F65                                       _PWM7DCL 003F64  
                                     _SMT1SIG 003F22                                       _PWM8DCH 003F61  
                                     _PWM5CON 003F6E                                       _PWM8DCL 003F60  
                                     _SMT1PRH 003F1C                                       _PWM6CON 003F6A  
                                     _SMT1PRL 003F1B                                       _PWM7CON 003F66  
                                     _SMT1PRU 003F1D                                     ?_getCurve 0001  
                                     _SMT1WIN 003F23                                       _SMT1TMR 003F12  
                                     _PWM8CON 003F62                                       _SLRCONA 003A43  
                                     _SLRCONB 003A53                                       _SLRCONC 003A63  
                                     _SLRCOND 003A73                                       _SLRCONE 003A83  
                           __end_of_checkBatt 56F8                           ??_UART1_Receive_ISR 0012  
                            ___lomod@dividend 0014                       __end_of_TMR5_WriteTimer 60BC  
                         ?_PWM5_LoadDutyValue 0014                              ?_PWM7_Initialize 0001  
                            ?_TMR5_Initialize 0001                     INTERRUPT_Initialize@state 0014  
                        __size_of_setSteering 01F6                                     _CLCIN0PPS 003AD9  
                                   _CLCIN2PPS 003ADB                                     _CLCIN3PPS 003ADC  
                                     __Hparam 0000                                     ?_setMotor 0018  
                                     __Lparam 0000                      __end_of_UART1_Initialize 549C  
                                     ___aldiv 4722                               __size_of___flge 0106  
                             __size_of___fleq 00AA                                       ___aodiv 4098  
                                     ___fladd 234E                                       ___aomod 4220  
                                     ___fldiv 2C60                                       ___awdiv 4F9A  
                                     ___flneg 5CA2                                       ___awmod 529E  
                                     ___flmul 2810                                       ___flsub 5A6A  
                                     ___fltol 482E                                       ___lodiv 4C2E  
                                     ___lomod 4E00                     __end_of_UART1_Receive_ISR 51E0  
                                   ?_vfprintf 01A4                          ??_PWM5_LoadDutyValue 0016  
                                __psmallconst 1000                               __size_of_efgtoa 0CAE  
                             __size_of_floorf 0216                                       __pcinit 5D12  
                   _TMR5_GateInterruptHandler 0192                              ?_PWM8_Initialize 0001  
                                     __ramtop 1000                   __size_of_UART1_Transmit_ISR 0044  
               ?_TMR5_SetGateInterruptHandler 0014                                       __ptext0 617A  
                                     __ptext1 45FC                                       __ptext2 549C  
                                     __ptext3 44D4                                       __ptext4 3B34  
                                     __ptext5 51E0                                       __ptext6 5666  
                                     __ptext7 610C                                       __ptext8 60BC  
                                     __ptext9 56F8                               __size_of_printf 0028  
                              ??_TMR4_10msISR 0013                          __size_of_TMR5_Reload 000E  
                                  ??_actSpeed 0024                               __size_of_strcpy 006A  
                             __size_of_strlen 003A                       __end_of_CLC3_Initialize 6064  
                       _OSCILLATOR_Initialize 6234                                     _T2CONbits 003FAC  
                                __size_of_abs 0040                                  __size_of_pad 00C2  
                                  ??___xxtofl 0020                                     _T3CONbits 003FA6  
                            ___awmod@dividend 0014                 __size_of_CCP4_DefaultCallBack 0036  
                            ___aldiv@dividend 0014                                     _T4CONbits 003FA0  
                    ??_PIN_MANAGER_Initialize 0014             __size_of_TMR4_SetInterruptHandler 000A  
                                   _T2HLTbits 003FAD                                     _T5CONbits 003F9A  
                   ?_TMR4_SetInterruptHandler 0014                                       _isupper 5C6A  
                                     efgtoa@c 0089                                       efgtoa@d 00A7  
                                     efgtoa@e 00BF                                       efgtoa@f 0085  
                                     efgtoa@g 00BB                                       efgtoa@h 00B1  
                                     efgtoa@i 00B9                                       efgtoa@l 00B5  
                                     efgtoa@m 00A1                                       efgtoa@n 00C1  
                                     efgtoa@p 00AB                                       efgtoa@t 009B  
                                     efgtoa@u 00C3                                       efgtoa@w 00AD  
                                   _IPR10bits 00398A                                       _smtDuty 0124  
                                   _T4HLTbits 003FA1                                    ??_getCurve 0014  
                                   _PIE10bits 00399A                    __size_of_SYSTEM_Initialize 004A  
                                     _tolower 57D2                                       _strncmp 4B3A  
                        end_of_initialization 5D42                                       floorf@e 0077  
                                   _T2RSTbits 003FAF                                       floorf@m 0073  
                                     floorf@u 0079                                       floorf@x 0036  
              ??_TMR4_DefaultInterruptHandler 0013                                     _T4RSTbits 003FA3  
                                   _PIR10bits 0039AA                                       fputc@fp 0018  
                           ??_SMT1_PR_ACQ_ISR 0011           __end_of_UART1_SetTxInterruptHandler 627A  
                 _UART1_SetTxInterruptHandler 6270                                       fputs@fp 0021  
              ??_UART1_SetOverrunErrorHandler 0016                                    ??_setMotor 001A  
                    __size_of_SMT1_Initialize 0030                             __end_of_vfpfcnvrt 234E  
                                  efgtoa@mode 00B0                             ?_CCP3_SetCallBack 0014  
                                  efgtoa@sign 00A9                              ___aldiv@quotient 001E  
                                     postdec2 003FDD                             ??_SMT1_PW_ACQ_ISR 0011  
                                     postinc0 003FEE                                       postinc1 003FE6  
                                     postinc2 003FDE                              ?_ADCC_Initialize 0001  
                          ??_CCP3_SetCallBack 0016                                    ??_vfprintf 003A  
            __end_of_ADCC_GetSingleConversion 5F1E                             UART1_Write@txData 0014  
                         _UART1_RxDataHandler 6064                                       strcpy@d 001C  
                                     strlen@a 0016                                       strcpy@s 001A  
                                     strlen@s 0014                          __size_of_startAccell 00A0  
                                 ?_getReverse 0001                                     _PORTBbits 003FCB  
                                   _PORTDbits 003FCD                      __size_of_CCP3_CaptureISR 0034  
                    __size_of_checkCurveCount 00BE                                   ___fladd@grs 0078  
                          getCurve@deltaRight 0018                                 ___xxtofl@sign 0024  
                                 ___fldiv@grs 0067                                   ___fldiv@rem 0060  
                        ?_UART1_RxDataHandler 0001                              ?_TMR5_WriteTimer 0009  
                        setSteering@steeringB 008A                          setSteering@steeringF 0088  
                     TMR5_WriteTimer@timerVal 0009                                   ___flmul@grs 0062  
                              _curveLeftCount 00FA                      __size_of_CCP4_CaptureISR 0034  
           CCP4_DefaultCallBack@capturedValue 0005                             ?_CCP4_SetCallBack 0014  
                __end_of_INTERRUPT_Initialize 598C                                __end_of___flge 4A3C  
                              __end_of___fleq 53F8                    __size_of_UART1_Receive_ISR 00C0  
                          ??_CCP4_SetCallBack 0016                                   _CLC3CONbits 003C60  
                                 vfpfcnvrt@ap 00CB                                   vfpfcnvrt@ct 00E7  
                                 vfpfcnvrt@fp 00C7                                   vfpfcnvrt@ll 00D1  
                              __end_of_efgtoa 1D66                             __size_of_TMR4_ISR 003C  
                              __end_of_floorf 3736                        ?_OSCILLATOR_Initialize 0001  
                                  floorf@F527 0118                                __end_of_printf 60E4  
                 __size_of_PWM8_LoadDutyValue 0034                              ?_CLC3_Initialize 0001  
                              __end_of_strcpy 57D2                                __end_of_strlen 5BF2  
                              _TMR5_ReadTimer 6156                           start_initialization 5D12  
                             ___lodiv@divisor 001C                               ___lodiv@counter 002C  
              ??_TMR5_SetGateInterruptHandler 0016               __size_of_PIN_MANAGER_Initialize 00CA  
                                 __end_of_abs 5B7A                                   __end_of_pad 5120  
                        __size_of_Default_ISR 0002                       ??_UART1_SetErrorHandler 0016  
                    __size_of_CCP3_Initialize 002E                         ??_UART1_RxDataHandler 0012  
                                 putch@txData 0015                                    ivt0x8_base 0008  
                               _uart1RxBuffer 0108                                   _actMotorPow 00ED  
                       __end_of___fpclassifyf 4B3A                                 _uart1TxBuffer 0110  
                         __size_of_getReverse 0128                          __end_of_TMR4_10msISR 6266  
                                 vfprintf@fmt 01A6                                      ??___flge 0036  
                                    ??___fleq 001C                              ??_PMD_Initialize 0014  
                      __size_of_TMR5_GATE_ISR 0032                                  _oldDistRight 0134  
                    __size_of_CCP4_Initialize 002E                                      ??_efgtoa 008A  
                                    ??_floorf 006D                    __end_of_PWM7_LoadDutyValue 5E84  
                           ??_SMT1_Initialize 0014                                      ??_printf 003A  
                                    ??_strcpy 0018                                      ??_strlen 0016  
                      __end_of_TMR5_ReadTimer 617A                         CCP4_CaptureISR@module 0007  
                                   ___fladd@a 0071                                     ___fladd@b 006D  
                         calcMotorPow@addMPow 0089                      _ADCC_GetSingleConversion 5EEC  
                                   ___fldiv@a 002E                                     ___fldiv@b 002A  
                 PWM5_LoadDutyValue@dutyValue 0014                         TMR4_ISR@CountCallBack 00F3  
                                   ___flmul@a 002E                                     ___flmul@b 002A  
                                 __pbssCOMRAM 003A                                     ___flsub@a 007D  
                                   ___flsub@b 0079                            _UART1_ErrorHandler 019A  
                               __pcstackBANK0 0060                                 __pcstackBANK1 01A4  
                           __size_of_actSpeed 0094                              ___aodiv@dividend 0014  
                          _PWM6_LoadDutyValue 5DB4                      __size_of_TMR2_Initialize 001C  
                           __size_of___xxtofl 01B4                      _UART1_RxInterruptHandler 01A2  
                           ??_CCP3_CaptureISR 0003                  __end_of_CCP3_DefaultCallBack 5D7E  
                      __size_of_TMR4_CallBack 002E                             ??_checkCurveCount 003A  
                                   _calcSpeed 32E2                             __size_of_getCurve 01E2  
                         ?_PWM6_LoadDutyValue 0014                   PWM8_LoadDutyValue@dutyValue 0014  
                fp__UART1_DefaultErrorHandler 0000                                     _checkBatt 5666  
                                _currentSpeed 00EF                  ?_UART1_SetRxInterruptHandler 0014  
                                   __pnvBANK1 018E                                   _efgtoa$3563 008F  
                                 _efgtoa$3572 0095                                   _efgtoa$3564 0091  
                                 _efgtoa$3573 0097                                   _efgtoa$3574 0099  
                                 _efgtoa$3568 0093                            setMotor@motorPower 0018  
                      _PIN_MANAGER_Initialize 4ED0                                     _dtoa$3539 006A  
                    __size_of_PWM5_Initialize 0018                      __size_of_TMR3_Initialize 0038  
                           ?_UART1_Initialize 0001          __end_of_UART1_SetFramingErrorHandler 6298  
       __size_of_UART1_SetFramingErrorHandler 000A                  _UART1_SetFramingErrorHandler 628E  
                                    ?___aldiv 0014               ADCC_GetSingleConversion@channel 0018  
                                    ?___aodiv 0014                                      ?___fladd 006D  
                                    ?___aomod 0014                             __size_of_setMotor 00E2  
            __end_of_TMR4_SetInterruptHandler 62B6                                      ?___fldiv 002A  
                                    ?___awdiv 0014                                     __ptext100 619A  
                                   __ptext101 624C                                     __ptext102 6090  
                            ___aodiv@quotient 0026                                      ?___flneg 0014  
                                   __ptext103 6156                                     __ptext104 5A20  
                                   __ptext105 58EC                                     __ptext106 60E4  
                                   __ptext107 0000             CCP3_DefaultCallBack@capturedValue 0001  
                                    ?___awmod 0014                             ??_CCP4_CaptureISR 0007  
                                    ?___flmul 002A                                      ?___flsub 0079  
                                    ?___fltol 0079                                      ?___lodiv 0014  
                                    ?___lomod 0014                            ??_UART1_Initialize 0016  
                                   _distLeftM 013C                                     _distFront 00FD  
                            _uart1RxLastError 0042                                 ??_UART1_Write 0014  
                                   _distRight 00F5                          ??_PWM6_LoadDutyValue 0016  
                                   _cycle10ms 00FB                             __size_of_vfprintf 0070  
                             ?_TMR5_ReadTimer 0009                                 ?_calcMotorPow 0001  
                             ___lomod@divisor 001C                                   __smallconst 1000  
                             ___lomod@counter 0024                                      _CLC3GLS0 003C66  
                                    _CLC3GLS1 003C67                                      _CLC3GLS2 003C68  
                                    _CLC3GLS3 003C69                                     _driveMode 00FC  
         fp__UART1_DefaultOverrunErrorHandler 0000      __end_of_UART1_DefaultOverrunErrorHandler 62D2  
   __size_of_UART1_DefaultOverrunErrorHandler 0002            ??_UART1_DefaultOverrunErrorHandler 0012  
           ?_UART1_DefaultOverrunErrorHandler 0001              _UART1_DefaultOverrunErrorHandler 62D0  
                                    _CLC3SEL0 003C62                                      _CLC3SEL1 003C63  
                                    _CLC3SEL2 003C64                                      _CLC3SEL3 003C65  
                             _SMT1_PR_ACQ_ISR 5A20                                 ?_calcSteering 0001  
                                    ?_isupper 0014                      __size_of_PWM6_Initialize 0018  
                    __size_of_TMR4_Initialize 002C                                 _TMR5_GATE_ISR 5F20  
                                   _curveMode 0041                                      ?_tolower 001A  
                              __size_of_fputc 0096                                      _T2CLKCON 003FAE  
                              __size_of_fputs 0044                                      ?_strncmp 0014  
                                 _U1ERRIRbits 003DF9                                      _T4CLKCON 003FA2  
                              __size_of_putch 000A                                    ?_calcSpeed 0001  
                        _INTERRUPT_Initialize 5940                                 ??_setSteering 0086  
                             ___aldiv@divisor 0018                               _SMT1_PW_ACQ_ISR 58EC  
                             ___aldiv@counter 001C                                    ?_checkBatt 0001  
       UART1_SetErrorHandler@interruptHandler 0014                                      _IPR1bits 003981  
                __end_of_CCP4_DefaultCallBack 5DB4                             ??_CCP3_Initialize 0016  
                                    _IPR3bits 003983                                      _PIE1bits 003991  
                                    _PIE3bits 003993                                      _IPR7bits 003987  
                                    _IPR8bits 003988                                      _IPR9bits 003989  
                                    _PIE7bits 003997                                      _PIE8bits 003998  
                                    _PIE9bits 003999                                      _IVTBASEH 003FD6  
                                    _IVTBASEL 003FD5                                      _IVTBASEU 003FD7  
               ??_UART1_SetRxInterruptHandler 0016                                      i1u712_20 5B06  
                                    i1u712_21 5B02                                      i1u713_20 5B2A  
                                    i1u713_21 5B26                                      i1u714_20 5140  
                                    i1u714_21 513C                                      i1u723_20 5FF2  
                                    i1u731_20 5C0E                                      i1u723_21 5FEE  
                                    i1u731_21 5C0A                                      i1u716_20 5178  
                                    i1u715_28 5156                                      i1u716_21 5174  
                                    i1u715_29 5168                                      i1u724_28 5FF8  
                                    i1u733_20 5C4A                                      i1u732_28 5C14  
                                    i1u724_29 600A                                      i1u733_21 5C46  
                                    i1u732_29 5C26                                      i1u718_20 51BC  
                                    i1u717_28 518E                                      i1u718_21 51B8  
                                    i1u717_29 51A0                                      i1u655_20 6088  
                                    i1u734_28 5C50                                      i1u655_21 6084  
                                    i1u734_29 5C62                                      i1u719_28 51C2  
                                    i1u719_29 51D6                                      _PIR1bits 0039A1  
                                    i1u739_20 5BA2                                      i1u739_21 5B9E  
                                    _PIR4bits 0039A4                                      i2u720_40 5D56  
                                    i2u720_41 5D52                                      i2u721_40 5D8C  
                                    i2u721_41 5D88                                      _PIR6bits 0039A6  
                                    i2u740_40 5A44                                      i2u740_41 5A40  
                                    i2u741_40 591A                                      i2u741_41 5916  
                                    _PIR7bits 0039A7                                      _PIR8bits 0039A8  
                                    i2u656_40 609E                                      i2u735_48 5EA2  
                                    i2u656_41 609A                                      i2u735_49 5EB6  
                                    i2u737_40 5F38                                      i2u736_48 5ED6  
                                    i2u737_41 5F34                                      i2u736_49 5EEA  
                                    _PIR9bits 0039A9                                      i2u738_48 5F3E  
                                    i2u738_49 5F50                                      _SMT1CON0 003F1E  
                                    _SMT1CON1 003F1F                      __size_of_PWM7_Initialize 0018  
                    __size_of_TMR5_Initialize 004A                                      _SMT1STAT 003F20  
                           _SMT1_Overflow_ISR 60E4                                      _TMR4_ISR 5B7C  
                  __end_of_UART1_Transmit_ISR 5B3A                                 _TMR4_CallBack 5FDE  
                                   _smtPeriod 0048                 ?_UART1_SetFramingErrorHandler 0014  
                               ??_TMR5_Reload 000B                   __size_of_PWM5_LoadDutyValue 0034  
                                   _vfpfcnvrt 1D66                            ?_SMT1_Overflow_ISR 0001  
                           _getBatteryVoltage 610C                                  ??_getReverse 003A  
                              ??_calcMotorPow 0083                                    _ADCON0bits 003EF8  
                                  _ADCON1bits 003EF9                                    _ADCON2bits 003EFA  
                                  _ADCON3bits 003EFB                            ?_getBatteryVoltage 0001  
                           ??_CCP4_Initialize 0016                                ??_calcSteering 008C  
                         ??_SMT1_Overflow_ISR 0011                     TMR5_ReadTimer@readValHigh 000F  
                   __size_of_CCP3_SetCallBack 000A                                ?_TMR5_GATE_ISR 0001  
                         __end_of_UART1_Write 588E                      __size_of_PWM8_Initialize 0018  
                                _SMT1CON0bits 003F1E                                  _SMT1CON1bits 003F1F  
                                  vfpfcnvrt@c 00EA                                    vfpfcnvrt@f 00E3  
                         ??_getBatteryVoltage 003A                                   _INTCON0bits 003FD2  
                       ?_INTERRUPT_Initialize 0001                         __size_of_TMR4_10msISR 000C  
                        fp__UART1_Receive_ISR 0000                        _uart1TxBufferRemaining 004C  
                    checkCurveCount@roundTime 01B4                             ??_TMR2_Initialize 0014  
                                _uart1RxCount 0043                            __end_of_getReverse 45FC  
                                  _ADSTATbits 003EFC                                      __Hrparam 0000  
                   __end_of_SMT1_Overflow_ISR 610C                           __end_of_setSteering 3B34  
                                  vfprintf@ap 01A8                                      __Lrparam 0000  
                                  vfprintf@fp 01A4                                   _oldDistLeft 0136  
                               ??_startAccell 003A                                ?_TMR4_CallBack 0001  
                              calcSpeed@speed 0087                     __end_of_getBatteryVoltage 6132  
                     ??_OSCILLATOR_Initialize 0014                              __size_of___aldiv 010C  
                            __size_of___aodiv 0188                              __size_of___fladd 04C2  
                            __size_of___aomod 0164                              __size_of___fldiv 039C  
                            __size_of___awdiv 00C4                              __size_of___flneg 0038  
                            __size_of___awmod 00B0                              __size_of___flmul 0450  
                            __size_of___flsub 0048                              __size_of___fltol 0108  
                                _SMT1STATbits 003F20                          _CCP3_DefaultCallBack 5D48  
                     __end_of_SMT1_PR_ACQ_ISR 5A6A                              __size_of___lodiv 00F0  
                            __size_of___lomod 00D0                                    ?_vfpfcnvrt 00C7  
                             ___aodiv@divisor 001C                             ??_PWM5_Initialize 0014  
                           ??_TMR3_Initialize 0014                               ___aodiv@counter 0024  
                    _TMR4_SetInterruptHandler 62AC                            ___fpclassifyf@F465 011C  
                                    _actSpeed 55D2          __size_of_UART1_SetRxInterruptHandler 000A  
                                _TMR4_10msISR 625A                                      ___xxtofl 3EE4  
                    __size_of_ADCC_Initialize 005C                           __end_of_TMR5_Reload 625A  
                   __size_of_CCP4_SetCallBack 000A                                      __pivt0x8 0008  
                     __end_of_SMT1_PW_ACQ_ISR 5940                                      _getCurve 3B34  
                                    __ptext10 1D66                                      __ptext11 3736  
                                    __ptext20 4A3C                                      __ptext12 4E00  
                                    __ptext21 5A6A                                      __ptext13 4C2E  
                                    __ptext30 553C                                      __ptext22 5CA2  
                                    __ptext14 4B3A                                      __ptext31 6266  
                                    __ptext23 4936                                      __ptext15 10B8  
                                    __ptext40 5DB4                                      __ptext32 5832  
                                    __ptext24 534E                                      __ptext16 57D2  
                                    __ptext41 5DE8                                      __ptext33 5B3A  
                                    __ptext25 529E                                      __ptext17 5C6A  
                                    __ptext50 3EE4                                      __ptext42 32E2  
                                    __ptext34 4220                                      __ptext26 2FFC  
                                    __ptext18 5768                                      __ptext51 482E  
                                    __ptext43 234E                                      __ptext35 4098  
                                    __ptext27 505E                                      __ptext19 3520  
                                    __ptext60 6298                                      __ptext52 2810  
                                    __ptext44 4384                                      __ptext36 5EEC  
                                    __ptext28 5BB8                                      __ptext61 59D6  
                                    __ptext53 4F9A                                      __ptext45 4D1E  
                                    __ptext37 3D16                                      __ptext29 5AB2  
                                    __ptext70 6204                                      __ptext62 62A2  
                                    __ptext54 598C                                      __ptext46 5E1C  
                                    __ptext38 393E                                      __ptext71 621C  
                                    __ptext63 600C                                      __ptext55 53F8  
                                    __ptext47 5E50                                      __ptext39 2C60  
                                    __ptext80 62C0                                      __ptext72 6132  
                                    __ptext64 62AC                                      __ptext56 6270  
                                    __ptext48 55D2                                      __ptext81 588E  
                                    __ptext73 4ED0                                      __ptext65 5CDA  
                                    __ptext57 627A                                      __ptext49 4722  
                                    __ptext90 5B7C                                      __ptext82 5BF4  
                                    __ptext74 6234                                      __ptext66 61B8  
                                    __ptext58 6284                                      __ptext91 5FDE  
                                    __ptext83 5AF6                                      __ptext75 5940  
                                    __ptext67 5F52                                      __ptext59 628E  
                                    __ptext92 625A                                      __ptext84 5C30  
                                    __ptext76 6038                                      __ptext68 61D4  
                                    __ptext93 62D4                                      __ptext85 5120  
                                    __ptext77 5F82                                      __ptext69 61EC  
                                    __ptext94 62D8                                      __ptext86 62D0  
                                    __ptext78 62B6                                      __ptext95 5E84  
                                    __ptext87 62D2                                      __ptext79 5FB0  
                                    __ptext96 5D48                                      __ptext88 62CA  
                                    __ptext97 5EB8                                      __ptext89 6064  
                                    __ptext98 5D7E                                      __ptext99 5F20  
                            __size_of_isupper 0038                                      _distLeft 00F7  
              __size_of_UART1_SetErrorHandler 000A                                   ??_calcSpeed 0083  
               __end_of_UART1_SetErrorHandler 62A2                              __size_of_tolower 0060  
                                  _T3GCONbits 003FA7                                    strcpy@dest 0014  
                            __size_of_strncmp 00F4                                   ??_checkBatt 003A  
                           ??_TMR4_Initialize 0016                             ??_PWM6_Initialize 0014  
                               __size_of_main 0020                                 __size_of_dtoa 02E6  
                                    _oldSpeed 012E                                    _T5GCONbits 003F9B  
                               __size_of_loop 0126                                 __size_of_utoa 0208  
                             _SMT1_Initialize 5F52                                   _IVTLOCKbits 003FD4  
                                    _setMotor 4D1E                                      _setSpeed 00F1  
                    __size_of_TMR5_WriteTimer 002C                                      efgtoa@fp 0083  
                                    efgtoa@ne 009F                                      efgtoa@pp 009D  
                                    efgtoa@ou 00A3                     _UART1_OverrunErrorHandler 019C  
UART1_SetOverrunErrorHandler@interruptHandler 0014                                      isa$xinst 000000  
          __size_of_UART1_DefaultErrorHandler 0006                    ??_ADCC_GetSingleConversion 0016  
                  ?_UART1_DefaultErrorHandler 0001                         ?_CCP3_DefaultCallBack 0001  
                                    _vfprintf 56F8                                     printf@fmt 01AC  
                  __end_of_PWM8_LoadDutyValue 5E50                               _CCP3_CaptureISR 5E84  
                                 _UART1_Write 5832                         fp__UART1_Transmit_ISR 0000  
                           ??_TMR5_Initialize 0016                             ??_PWM7_Initialize 0014  
         fp__TMR5_DefaultGateInterruptHandler 0000      __end_of_TMR5_DefaultGateInterruptHandler 61B8  
   __size_of_TMR5_DefaultGateInterruptHandler 001E            ??_TMR5_DefaultGateInterruptHandler 0011  
           ?_TMR5_DefaultGateInterruptHandler 0001              _TMR5_DefaultGateInterruptHandler 619A  
                            ___aomod@dividend 0014                               _checkCurveCount 51E0  
                         __end_of_startAccell 553C                                _battCheckCount 0132  
                               ??_Default_ISR 0001                ??_UART1_SetFramingErrorHandler 0016  
                                _reverseCount 0138                               ??_TMR5_GATE_ISR 0011  
                              _vfpfcnvrt$3599 00E1                   __end_of_UART1_RxDataHandler 6090  
                                 _uart1RxHead 0045                          _CCP4_DefaultCallBack 5D7E  
                                 _uart1TxHead 0047                                   _uart1RxTail 0044  
                                 _uart1TxTail 0046                        ??_INTERRUPT_Initialize 0014  
                          _PWM7_LoadDutyValue 5E50                                      intlevel1 0000  
                                    intlevel2 0000                      __size_of_CLC3_Initialize 002C  
                                 _setSteering 393E                               _CCP4_CaptureISR 5EB8  
                     ?_PIN_MANAGER_Initialize 0001                             ??_PWM8_Initialize 0014  
                         ?_PWM7_LoadDutyValue 0014                          __end_of_calcMotorPow 44D4  
                                   strcpy@src 0016                                      isupper@c 0014  
                                   strncmp@_l 0014                                     strncmp@_r 0016  
                             ??_TMR4_CallBack 0013                    __size_of_SMT1_Overflow_ISR 0028  
                        __end_of_calcSteering 3EE4                           _uart1RxStatusBuffer 0100  
                                 efgtoa@nmode 00AF                                      printf@ap 01B2  
                            ??_TMR5_ReadTimer 000B                    __size_of_getBatteryVoltage 0026  
UART1_SetFramingErrorHandler@interruptHandler 0014             __end_of_UART1_DefaultErrorHandler 62D0  
                             ___aomod@divisor 001C                                   ??_vfpfcnvrt 00CD  
                                 _reverseTime 012C                               ___aomod@counter 0024  
                            ?_SMT1_PR_ACQ_ISR 0001                                   _TMR5_Reload 624C  
                                  _SMT1SIGPPS 003AD2                                    _SMT1WINPPS 003AD1  
                        ??_PWM7_LoadDutyValue 0016                                      tolower@c 001A  
                               actSpeed@speed 0024                        __size_of___fpclassifyf 00FE  
                       ?_CCP4_DefaultCallBack 0005                     calcMotorPow@oldSpeedDelta 0087  
                                    strncmp@l 001B                                      strncmp@n 0018  
                            _CCP3_SetCallBack 62C0                                      strncmp@r 001D  
                   __size_of_UART1_Initialize 00A4                                  ___aldiv@sign 001D  
                            ?_SMT1_PW_ACQ_ISR 0001                               _CCP3_Initialize 5FB0  
                 PWM6_LoadDutyValue@dutyValue 0014                             calcSteering@delta 008E  
                    _UART1_TxInterruptHandler 01A0                                 ___fladd@signs 0075  
                         __end_of_Default_ISR 62DA                       __end_of_SMT1_Initialize 5F82  
                                ___aodiv@sign 0025                __end_of_PIN_MANAGER_Initialize 4F9A  
                           ??_ADCC_Initialize 0014                                  ___fladd@aexp 0076  
                                ___fladd@bexp 0077                  ?_UART1_SetTxInterruptHandler 0014  
                                ___aomod@sign 0025                       __end_of_CCP3_CaptureISR 5EB8  
