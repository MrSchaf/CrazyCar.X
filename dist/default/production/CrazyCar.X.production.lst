

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Jan 30 10:09:39 2024

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F46K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1
    87                           	psect	text72,global,reloc=2,class=CODE,delta=1
    88                           	psect	text73,global,reloc=2,class=CODE,delta=1
    89                           	psect	text74,global,reloc=2,class=CODE,delta=1
    90                           	psect	text75,global,reloc=2,class=CODE,delta=1
    91                           	psect	text76,global,reloc=2,class=CODE,delta=1
    92                           	psect	text77,global,reloc=2,class=CODE,delta=1
    93                           	psect	text78,global,reloc=2,class=CODE,delta=1
    94                           	psect	text79,global,reloc=2,class=CODE,delta=1
    95                           	psect	text80,global,reloc=2,class=CODE,delta=1
    96                           	psect	text81,global,reloc=2,class=CODE,delta=1
    97                           	psect	text82,global,reloc=2,class=CODE,delta=1
    98                           	psect	text83,global,reloc=4,class=CODE,delta=1
    99                           	psect	text84,global,reloc=2,class=CODE,delta=1
   100                           	psect	text85,global,reloc=4,class=CODE,delta=1
   101                           	psect	text86,global,reloc=2,class=CODE,delta=1
   102                           	psect	text87,global,reloc=2,class=CODE,delta=1
   103                           	psect	text88,global,reloc=2,class=CODE,delta=1
   104                           	psect	text89,global,reloc=2,class=CODE,delta=1
   105                           	psect	text90,global,reloc=2,class=CODE,delta=1
   106                           	psect	text91,global,reloc=4,class=CODE,delta=1
   107                           	psect	text92,global,reloc=2,class=CODE,delta=1
   108                           	psect	text93,global,reloc=2,class=CODE,delta=1
   109                           	psect	text94,global,reloc=2,class=CODE,delta=1
   110                           	psect	text95,global,reloc=4,class=CODE,delta=1
   111                           	psect	text96,global,reloc=4,class=CODE,delta=1
   112                           	psect	text97,global,reloc=2,class=CODE,delta=1
   113                           	psect	text98,global,reloc=4,class=CODE,delta=1
   114                           	psect	text99,global,reloc=2,class=CODE,delta=1
   115                           	psect	text100,global,reloc=4,class=CODE,delta=1
   116                           	psect	text101,global,reloc=2,class=CODE,delta=1
   117                           	psect	text102,global,reloc=2,class=CODE,delta=1
   118                           	psect	text103,global,reloc=2,class=CODE,delta=1
   119                           	psect	text104,global,reloc=2,class=CODE,delta=1
   120                           	psect	text105,global,reloc=4,class=CODE,delta=1
   121                           	psect	text106,global,reloc=4,class=CODE,delta=1
   122                           	psect	text107,global,reloc=4,class=CODE,delta=1
   123                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   124                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   125                           	psect	text108,global,reloc=4,class=CODE,delta=1
   126                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   127                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   128                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   129  0000                     
   130                           ; Version 2.20
   131                           ; Generated 05/05/2020 GMT
   132                           ; 
   133                           ; Copyright © 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   134                           ; All rights reserved.
   135                           ; 
   136                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   137                           ; 
   138                           ; Redistribution and use in source and binary forms, with or without modification, are
   139                           ; permitted provided that the following conditions are met:
   140                           ; 
   141                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   142                           ;        conditions and the following disclaimer.
   143                           ; 
   144                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   145                           ;        of conditions and the following disclaimer in the documentation and/or other
   146                           ;        materials provided with the distribution.
   147                           ; 
   148                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   149                           ;        software without specific prior written permission.
   150                           ; 
   151                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   152                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   153                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   154                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   155                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   156                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   157                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   158                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   159                           ; 
   160                           ; 
   161                           ; Code-generator required, PIC18F46K42 Definitions
   162                           ; 
   163                           ; SFR Addresses
   164  0000                     
   165                           	psect	nvCOMRAM
   166  00004C                     __pnvCOMRAM:
   167                           	callstack 0
   168  00004C                     _uart1TxBufferRemaining:
   169                           	callstack 0
   170  00004C                     	ds	1
   171                           
   172                           	psect	nvBANK1
   173  000190                     __pnvBANK1:
   174                           	callstack 0
   175  000190                     _TMR4_InterruptHandler:
   176                           	callstack 0
   177  000190                     	ds	2
   178  000192                     _timer3ReloadVal:
   179                           	callstack 0
   180  000192                     	ds	2
   181  000194                     _TMR5_GateInterruptHandler:
   182                           	callstack 0
   183  000194                     	ds	2
   184  000196                     _timer5ReloadVal:
   185                           	callstack 0
   186  000196                     	ds	2
   187  000198                     _CCP4_CallBack:
   188                           	callstack 0
   189  000198                     	ds	2
   190  00019A                     _CCP3_CallBack:
   191                           	callstack 0
   192  00019A                     	ds	2
   193  00019C                     _UART1_ErrorHandler:
   194                           	callstack 0
   195  00019C                     	ds	2
   196  00019E                     _UART1_OverrunErrorHandler:
   197                           	callstack 0
   198  00019E                     	ds	2
   199  0001A0                     _UART1_FramingErrorHandler:
   200                           	callstack 0
   201  0001A0                     	ds	2
   202  0001A2                     _UART1_TxInterruptHandler:
   203                           	callstack 0
   204  0001A2                     	ds	2
   205  0001A4                     _UART1_RxInterruptHandler:
   206                           	callstack 0
   207  0001A4                     	ds	2
   208  0000                     _PIR4bits	set	14756
   209  0000                     _PIR1bits	set	14753
   210  0000                     _PIE1bits	set	14737
   211  0000                     _PIE7bits	set	14743
   212  0000                     _PIR7bits	set	14759
   213  0000                     _PIR6bits	set	14758
   214  0000                     _PIE8bits	set	14744
   215  0000                     _PIR8bits	set	14760
   216  0000                     _PIE10bits	set	14746
   217  0000                     _PIR10bits	set	14762
   218  0000                     _PIE9bits	set	14745
   219  0000                     _PIR9bits	set	14761
   220  0000                     _IPR9bits	set	14729
   221  0000                     _IPR7bits	set	14727
   222  0000                     _IPR8bits	set	14728
   223  0000                     _IPR10bits	set	14730
   224  0000                     _IPR1bits	set	14721
   225  0000                     _IPR3bits	set	14723
   226  0000                     _PIE3bits	set	14739
   227  0000                     _PMD7	set	14791
   228  0000                     _PMD6	set	14790
   229  0000                     _PMD5	set	14789
   230  0000                     _PMD4	set	14788
   231  0000                     _PMD3	set	14787
   232  0000                     _PMD2	set	14786
   233  0000                     _PMD1	set	14785
   234  0000                     _PMD0	set	14784
   235  0000                     _OSCTUNE	set	14814
   236  0000                     _OSCFRQ	set	14815
   237  0000                     _OSCEN	set	14813
   238  0000                     _OSCCON3	set	14811
   239  0000                     _OSCCON1	set	14809
   240  0000                     _CCP4PPS	set	15056
   241  0000                     _SMT1SIGPPS	set	15058
   242  0000                     _CLCIN2PPS	set	15067
   243  0000                     _RB3PPS	set	14859
   244  0000                     _RA3PPS	set	14851
   245  0000                     _SMT1WINPPS	set	15057
   246  0000                     _CLCIN0PPS	set	15065
   247  0000                     _RA4PPS	set	14852
   248  0000                     _T5GPPS	set	15049
   249  0000                     _RA0PPS	set	14848
   250  0000                     _U1RXPPS	set	15077
   251  0000                     _RA1PPS	set	14849
   252  0000                     _CLCIN3PPS	set	15068
   253  0000                     _CCP3PPS	set	15055
   254  0000                     _INLVLE	set	14980
   255  0000                     _INLVLD	set	14964
   256  0000                     _INLVLC	set	14948
   257  0000                     _INLVLB	set	14932
   258  0000                     _INLVLA	set	14916
   259  0000                     _SLRCONE	set	14979
   260  0000                     _SLRCOND	set	14963
   261  0000                     _SLRCONC	set	14947
   262  0000                     _SLRCONB	set	14931
   263  0000                     _SLRCONA	set	14915
   264  0000                     _ODCOND	set	14962
   265  0000                     _ODCONC	set	14946
   266  0000                     _ODCONB	set	14930
   267  0000                     _ODCONA	set	14914
   268  0000                     _ODCONE	set	14978
   269  0000                     _RD1I2C	set	14971
   270  0000                     _RD0I2C	set	14970
   271  0000                     _RC4I2C	set	14955
   272  0000                     _RC3I2C	set	14954
   273  0000                     _RB2I2C	set	14939
   274  0000                     _RB1I2C	set	14938
   275  0000                     _WPUC	set	14945
   276  0000                     _WPUA	set	14913
   277  0000                     _WPUB	set	14929
   278  0000                     _WPUE	set	14977
   279  0000                     _WPUD	set	14961
   280  0000                     _ANSELA	set	14912
   281  0000                     _ANSELE	set	14976
   282  0000                     _ANSELB	set	14928
   283  0000                     _ANSELC	set	14944
   284  0000                     _ANSELD	set	14960
   285  0000                     _CLC3CON	set	15456
   286  0000                     _CLC3GLS3	set	15465
   287  0000                     _CLC3GLS2	set	15464
   288  0000                     _CLC3GLS1	set	15463
   289  0000                     _CLC3GLS0	set	15462
   290  0000                     _CLC3SEL3	set	15461
   291  0000                     _CLC3SEL2	set	15460
   292  0000                     _CLC3SEL1	set	15459
   293  0000                     _CLC3SEL0	set	15458
   294  0000                     _CLC3POL	set	15457
   295  0000                     _CLC3CONbits	set	15456
   296  0000                     _U1RXB	set	15848
   297  0000                     _U1TXB	set	15850
   298  0000                     _U1ERRIRbits	set	15865
   299  0000                     _U1ERRIE	set	15866
   300  0000                     _U1ERRIR	set	15865
   301  0000                     _U1UIR	set	15864
   302  0000                     _U1FIFO	set	15863
   303  0000                     _U1BRGH	set	15862
   304  0000                     _U1BRGL	set	15861
   305  0000                     _U1CON2	set	15860
   306  0000                     _U1CON1	set	15859
   307  0000                     _U1CON0	set	15858
   308  0000                     _U1P3H	set	15857
   309  0000                     _U1P3L	set	15856
   310  0000                     _U1P2H	set	15855
   311  0000                     _U1P2L	set	15854
   312  0000                     _U1P1H	set	15853
   313  0000                     _U1P1L	set	15852
   314  0000                     _ADCON1bits	set	16121
   315  0000                     _ADERRL	set	16098
   316  0000                     _ADERRH	set	16099
   317  0000                     _ADPREVL	set	16109
   318  0000                     _ADPREVH	set	16110
   319  0000                     _ADFLTRL	set	16102
   320  0000                     _ADFLTRH	set	16103
   321  0000                     _ADSTATbits	set	16124
   322  0000                     _ADACCL	set	16104
   323  0000                     _ADACCH	set	16105
   324  0000                     _ADCON2bits	set	16122
   325  0000                     _ADCNT	set	16107
   326  0000                     _ADCON3bits	set	16123
   327  0000                     _ADRESL	set	16111
   328  0000                     _ADRESH	set	16112
   329  0000                     _ADCON0bits	set	16120
   330  0000                     _ADCON0	set	16120
   331  0000                     _ADCLK	set	16127
   332  0000                     _ADACT	set	16126
   333  0000                     _ADREF	set	16125
   334  0000                     _ADSTAT	set	16124
   335  0000                     _ADCON3	set	16123
   336  0000                     _ADCON2	set	16122
   337  0000                     _ADCON1	set	16121
   338  0000                     _ADPREH	set	16119
   339  0000                     _ADPREL	set	16118
   340  0000                     _ADCAP	set	16117
   341  0000                     _ADACQH	set	16116
   342  0000                     _ADACQL	set	16115
   343  0000                     _ADPCH	set	16113
   344  0000                     _ADRPT	set	16108
   345  0000                     _ADACCU	set	16106
   346  0000                     _ADSTPTH	set	16101
   347  0000                     _ADSTPTL	set	16100
   348  0000                     _ADUTHH	set	16097
   349  0000                     _ADUTHL	set	16096
   350  0000                     _ADLTHH	set	16095
   351  0000                     _ADLTHL	set	16094
   352  0000                     _SMT1TMR	set	16146
   353  0000                     _SMT1CPR	set	16149
   354  0000                     _SMT1CPW	set	16152
   355  0000                     _SMT1PR	set	16155
   356  0000                     _SMT1STATbits	set	16160
   357  0000                     _SMT1CON0bits	set	16158
   358  0000                     _SMT1CON1bits	set	16159
   359  0000                     _SMT1PRL	set	16155
   360  0000                     _SMT1PRH	set	16156
   361  0000                     _SMT1PRU	set	16157
   362  0000                     _SMT1SIG	set	16162
   363  0000                     _SMT1WIN	set	16163
   364  0000                     _SMT1CLK	set	16161
   365  0000                     _SMT1STAT	set	16160
   366  0000                     _SMT1CON1	set	16159
   367  0000                     _SMT1CON0	set	16158
   368  0000                     _CCPTMRS1bits	set	16223
   369  0000                     _CCPTMRS0bits	set	16222
   370  0000                     _PORTBbits	set	16331
   371  0000                     _PR2	set	16299
   372  0000                     _TMR2	set	16298
   373  0000                     _T2CONbits	set	16300
   374  0000                     _T2RSTbits	set	16303
   375  0000                     _T2HLTbits	set	16301
   376  0000                     _T2CON	set	16300
   377  0000                     _T2TMR	set	16298
   378  0000                     _T2PR	set	16299
   379  0000                     _T2RST	set	16303
   380  0000                     _T2HLT	set	16301
   381  0000                     _T2CLKCON	set	16302
   382  0000                     _PWM6DCL	set	16232
   383  0000                     _PWM6DCH	set	16233
   384  0000                     _PWM6CON	set	16234
   385  0000                     _PWM5DCL	set	16236
   386  0000                     _PWM5DCH	set	16237
   387  0000                     _PWM5CON	set	16238
   388  0000                     _PWM8DCL	set	16224
   389  0000                     _PWM8DCH	set	16225
   390  0000                     _PWM8CON	set	16226
   391  0000                     _PWM7DCL	set	16228
   392  0000                     _PWM7DCH	set	16229
   393  0000                     _PWM7CON	set	16230
   394  0000                     _PR4	set	16287
   395  0000                     _TMR4	set	16286
   396  0000                     _T4CONbits	set	16288
   397  0000                     _T4RSTbits	set	16291
   398  0000                     _T4HLTbits	set	16289
   399  0000                     _T4CON	set	16288
   400  0000                     _T4TMR	set	16286
   401  0000                     _T4PR	set	16287
   402  0000                     _T4RST	set	16291
   403  0000                     _T4HLT	set	16289
   404  0000                     _T4CLKCON	set	16290
   405  0000                     _T3GCONbits	set	16295
   406  0000                     _T3CONbits	set	16294
   407  0000                     _T3CON	set	16294
   408  0000                     _TMR3L	set	16292
   409  0000                     _TMR3H	set	16293
   410  0000                     _T3CLK	set	16297
   411  0000                     _T3GATE	set	16296
   412  0000                     _T3GCON	set	16295
   413  0000                     _T5GCONbits	set	16283
   414  0000                     _T5CONbits	set	16282
   415  0000                     _T5CON	set	16282
   416  0000                     _TMR5L	set	16280
   417  0000                     _TMR5H	set	16281
   418  0000                     _T5CLK	set	16285
   419  0000                     _T5GATE	set	16284
   420  0000                     _T5GCON	set	16283
   421  0000                     _CCPR4L	set	16240
   422  0000                     _CCPR4H	set	16241
   423  0000                     _CCP4CAP	set	16243
   424  0000                     _CCP4CON	set	16242
   425  0000                     _CCPR3L	set	16244
   426  0000                     _CCPR3H	set	16245
   427  0000                     _CCP3CAP	set	16247
   428  0000                     _CCP3CON	set	16246
   429  0000                     _PORTDbits	set	16333
   430  0000                     _IVTBASEL	set	16341
   431  0000                     _IVTBASEH	set	16342
   432  0000                     _IVTBASEU	set	16343
   433  0000                     _IVTLOCKbits	set	16340
   434  0000                     _IVTLOCK	set	16340
   435  0000                     _INTCON0bits	set	16338
   436  0000                     _TRISD	set	16325
   437  0000                     _TRISC	set	16324
   438  0000                     _TRISB	set	16323
   439  0000                     _TRISA	set	16322
   440  0000                     _TRISE	set	16326
   441  0000                     _LATC	set	16316
   442  0000                     _LATB	set	16315
   443  0000                     _LATA	set	16314
   444  0000                     _LATD	set	16317
   445  0000                     _LATE	set	16318
   446  0000                     _GIE	set	130711
   447                           
   448                           	psect	smallconst
   449  001000                     __psmallconst:
   450                           	callstack 0
   451  001000  00                 	db	0
   452  001001                     STR_3:
   453                           
   454                           ; BSR set to: 1
   455  001001  43                 	db	67	;'C'
   456  001002  75                 	db	117	;'u'
   457  001003  72                 	db	114	;'r'
   458  001004  76                 	db	118	;'v'
   459  001005  65                 	db	101	;'e'
   460  001006  4C                 	db	76	;'L'
   461  001007  65                 	db	101	;'e'
   462  001008  66                 	db	102	;'f'
   463  001009  74                 	db	116	;'t'
   464  00100A  43                 	db	67	;'C'
   465  00100B  6F                 	db	111	;'o'
   466  00100C  75                 	db	117	;'u'
   467  00100D  6E                 	db	110	;'n'
   468  00100E  74                 	db	116	;'t'
   469  00100F  3A                 	db	58	;':'
   470  001010  20                 	db	32
   471  001011  25                 	db	37
   472  001012  75                 	db	117	;'u'
   473  001013  20                 	db	32
   474  001014  20                 	db	32
   475  001015  20                 	db	32
   476  001016  7C                 	db	124
   477  001017  20                 	db	32
   478  001018  20                 	db	32
   479  001019  20                 	db	32
   480  00101A  00                 	db	0
   481  00101B                     STR_2:
   482                           
   483                           ; BSR set to: 1
   484  00101B  52                 	db	82	;'R'
   485  00101C  65                 	db	101	;'e'
   486  00101D  73                 	db	115	;'s'
   487  00101E  65                 	db	101	;'e'
   488  00101F  74                 	db	116	;'t'
   489  001020  20                 	db	32
   490  001021  43                 	db	67	;'C'
   491  001022  75                 	db	117	;'u'
   492  001023  72                 	db	114	;'r'
   493  001024  76                 	db	118	;'v'
   494  001025  65                 	db	101	;'e'
   495  001026  43                 	db	67	;'C'
   496  001027  6F                 	db	111	;'o'
   497  001028  75                 	db	117	;'u'
   498  001029  6E                 	db	110	;'n'
   499  00102A  74                 	db	116	;'t'
   500  00102B  21                 	db	33
   501  00102C  20                 	db	32
   502  00102D  20                 	db	32
   503  00102E  7C                 	db	124
   504  00102F  20                 	db	32
   505  001030  20                 	db	32
   506  001031  20                 	db	32
   507  001032  00                 	db	0
   508  001033                     STR_4:
   509                           
   510                           ; BSR set to: 1
   511  001033  43                 	db	67	;'C'
   512  001034  75                 	db	117	;'u'
   513  001035  72                 	db	114	;'r'
   514  001036  76                 	db	118	;'v'
   515  001037  65                 	db	101	;'e'
   516  001038  52                 	db	82	;'R'
   517  001039  69                 	db	105	;'i'
   518  00103A  67                 	db	103	;'g'
   519  00103B  68                 	db	104	;'h'
   520  00103C  74                 	db	116	;'t'
   521  00103D  43                 	db	67	;'C'
   522  00103E  6F                 	db	111	;'o'
   523  00103F  75                 	db	117	;'u'
   524  001040  6E                 	db	110	;'n'
   525  001041  74                 	db	116	;'t'
   526  001042  3A                 	db	58	;':'
   527  001043  20                 	db	32
   528  001044  25                 	db	37
   529  001045  75                 	db	117	;'u'
   530  001046  0A                 	db	10
   531  001047  00                 	db	0
   532  001048                     STR_1:
   533                           
   534                           ; BSR set to: 1
   535  001048  73                 	db	115	;'s'
   536  001049  74                 	db	116	;'t'
   537  00104A  61                 	db	97	;'a'
   538  00104B  72                 	db	114	;'r'
   539  00104C  41                 	db	65	;'A'
   540  00104D  63                 	db	99	;'c'
   541  00104E  63                 	db	99	;'c'
   542  00104F  65                 	db	101	;'e'
   543  001050  6C                 	db	108	;'l'
   544  001051  50                 	db	80	;'P'
   545  001052  6F                 	db	111	;'o'
   546  001053  77                 	db	119	;'w'
   547  001054  65                 	db	101	;'e'
   548  001055  72                 	db	114	;'r'
   549  001056  3A                 	db	58	;':'
   550  001057  20                 	db	32
   551  001058  25                 	db	37
   552  001059  64                 	db	100	;'d'
   553  00105A  0A                 	db	10
   554  00105B  00                 	db	0
   555  00105C                     STR_5:
   556                           
   557                           ; BSR set to: 1
   558  00105C  52                 	db	82	;'R'
   559  00105D  6F                 	db	111	;'o'
   560  00105E  75                 	db	117	;'u'
   561  00105F  6E                 	db	110	;'n'
   562  001060  64                 	db	100	;'d'
   563  001061  54                 	db	84	;'T'
   564  001062  69                 	db	105	;'i'
   565  001063  6D                 	db	109	;'m'
   566  001064  65                 	db	101	;'e'
   567  001065  3A                 	db	58	;':'
   568  001066  20                 	db	32
   569  001067  25                 	db	37
   570  001068  66                 	db	102	;'f'
   571  001069  0A                 	db	10
   572  00106A  0A                 	db	10
   573  00106B  00                 	db	0
   574  00106C                     STR_8:
   575                           
   576                           ; BSR set to: 1
   577  00106C  53                 	db	83	;'S'
   578  00106D  74                 	db	116	;'t'
   579  00106E  6F                 	db	111	;'o'
   580  00106F  70                 	db	112	;'p'
   581  001070  20                 	db	32
   582  001071  52                 	db	82	;'R'
   583  001072  65                 	db	101	;'e'
   584  001073  76                 	db	118	;'v'
   585  001074  65                 	db	101	;'e'
   586  001075  72                 	db	114	;'r'
   587  001076  73                 	db	115	;'s'
   588  001077  65                 	db	101	;'e'
   589  001078  0A                 	db	10
   590  001079  00                 	db	0
   591  00107A                     STR_6:
   592                           
   593                           ; BSR set to: 1
   594  00107A  52                 	db	82	;'R'
   595  00107B  65                 	db	101	;'e'
   596  00107C  76                 	db	118	;'v'
   597  00107D  65                 	db	101	;'e'
   598  00107E  72                 	db	114	;'r'
   599  00107F  73                 	db	115	;'s'
   600  001080  65                 	db	101	;'e'
   601  001081  52                 	db	82	;'R'
   602  001082  69                 	db	105	;'i'
   603  001083  67                 	db	103	;'g'
   604  001084  74                 	db	116	;'t'
   605  001085  68                 	db	104	;'h'
   606  001086  0A                 	db	10
   607  001087  00                 	db	0
   608  001088                     STR_7:
   609                           
   610                           ; BSR set to: 1
   611  001088  52                 	db	82	;'R'
   612  001089  65                 	db	101	;'e'
   613  00108A  76                 	db	118	;'v'
   614  00108B  65                 	db	101	;'e'
   615  00108C  72                 	db	114	;'r'
   616  00108D  73                 	db	115	;'s'
   617  00108E  65                 	db	101	;'e'
   618  00108F  4C                 	db	76	;'L'
   619  001090  65                 	db	101	;'e'
   620  001091  66                 	db	102	;'f'
   621  001092  74                 	db	116	;'t'
   622  001093  0A                 	db	10
   623  001094  00                 	db	0
   624  001095                     STR_9:
   625                           
   626                           ; BSR set to: 1
   627  001095  49                 	db	73	;'I'
   628  001096  4E                 	db	78	;'N'
   629  001097  46                 	db	70	;'F'
   630  001098  00                 	db	0
   631  001099                     STR_13:
   632                           
   633                           ; BSR set to: 1
   634  001099  4E                 	db	78	;'N'
   635  00109A  41                 	db	65	;'A'
   636  00109B  4E                 	db	78	;'N'
   637  00109C  00                 	db	0
   638  00109D                     STR_10:
   639                           
   640                           ; BSR set to: 1
   641  00109D  69                 	db	105	;'i'
   642  00109E  6E                 	db	110	;'n'
   643  00109F  66                 	db	102	;'f'
   644  0010A0  00                 	db	0
   645  0010A1                     STR_14:
   646                           
   647                           ; BSR set to: 1
   648  0010A1  6E                 	db	110	;'n'
   649  0010A2  61                 	db	97	;'a'
   650  0010A3  6E                 	db	110	;'n'
   651  0010A4  00                 	db	0
   652  0010A5                     STR_17:
   653                           
   654                           ; BSR set to: 1
   655  0010A5  6C                 	db	108	;'l'
   656  0010A6  66                 	db	102	;'f'
   657  0010A7  00                 	db	0
   658  0010A8  00                 	db	0	; dummy byte at the end
   659  0000                     
   660                           ; #config settings
   661                           
   662                           	psect	cinit
   663  005D96                     __pcinit:
   664                           	callstack 0
   665  005D96                     start_initialization:
   666                           	callstack 0
   667  005D96                     __initialization:
   668                           	callstack 0
   669                           
   670                           ; Clear objects allocated to BANK1 (144 bytes)
   671  005D96  EE00  F100         	lfsr	0,__pbssBANK1
   672  005D9A  0E90               	movlw	144
   673  005D9C                     clear_0:
   674  005D9C  6AEE               	clrf	postinc0,c
   675  005D9E  06E8               	decf	wreg,f,c
   676  005DA0  E1FD               	bnz	clear_0
   677                           
   678                           ; Clear objects allocated to BANK0 (20 bytes)
   679  005DA2  EE00  F0EB         	lfsr	0,__pbssBANK0
   680  005DA6  0E14               	movlw	20
   681  005DA8                     clear_1:
   682  005DA8  6AEE               	clrf	postinc0,c
   683  005DAA  06E8               	decf	wreg,f,c
   684  005DAC  E1FD               	bnz	clear_1
   685                           
   686                           ; Clear objects allocated to COMRAM (18 bytes)
   687  005DAE  EE00  F03A         	lfsr	0,__pbssCOMRAM
   688  005DB2  0E12               	movlw	18
   689  005DB4                     clear_2:
   690  005DB4  6AEE               	clrf	postinc0,c
   691  005DB6  06E8               	decf	wreg,f,c
   692  005DB8  E1FD               	bnz	clear_2
   693                           
   694                           ;
   695                           ; Setup IVTBASE
   696                           ;
   697  005DBA  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   698  005DBC  6ED5               	movwf	213,c
   699  005DBE  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   700  005DC0  6ED6               	movwf	214,c
   701  005DC2  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   702  005DC4  6ED7               	movwf	215,c
   703  005DC6                     end_of_initialization:
   704                           	callstack 0
   705  005DC6                     __end_of__initialization:
   706                           	callstack 0
   707  005DC6  0100               	movlb	0
   708  005DC8  EFEC  F030         	goto	_main	;jump to C main() function
   709                           
   710                           	psect	bssCOMRAM
   711  00003A                     __pbssCOMRAM:
   712                           	callstack 0
   713  00003A                     _width:
   714                           	callstack 0
   715  00003A                     	ds	2
   716  00003C                     _prec:
   717                           	callstack 0
   718  00003C                     	ds	2
   719  00003E                     _flags:
   720                           	callstack 0
   721  00003E                     	ds	2
   722  000040                     _delay:
   723                           	callstack 0
   724  000040                     	ds	1
   725  000041                     _curveMode:
   726                           	callstack 0
   727  000041                     	ds	1
   728  000042                     _uart1RxLastError:
   729                           	callstack 0
   730  000042                     	ds	1
   731  000043                     _uart1RxCount:
   732                           	callstack 0
   733  000043                     	ds	1
   734  000044                     _uart1RxTail:
   735                           	callstack 0
   736  000044                     	ds	1
   737  000045                     _uart1RxHead:
   738                           	callstack 0
   739  000045                     	ds	1
   740  000046                     _uart1TxTail:
   741                           	callstack 0
   742  000046                     	ds	1
   743  000047                     _uart1TxHead:
   744                           	callstack 0
   745  000047                     	ds	1
   746  000048                     _smtPeriod:
   747                           	callstack 0
   748  000048                     	ds	4
   749                           
   750                           	psect	bssBANK0
   751  0000EB                     __pbssBANK0:
   752                           	callstack 0
   753  0000EB                     _actMotorPow:
   754                           	callstack 0
   755  0000EB                     	ds	2
   756  0000ED                     _currentSpeed:
   757                           	callstack 0
   758  0000ED                     	ds	2
   759  0000EF                     _setSpeed:
   760                           	callstack 0
   761  0000EF                     	ds	2
   762  0000F1                     _roundTimeCount:
   763                           	callstack 0
   764  0000F1                     	ds	2
   765  0000F3                     TMR4_ISR@CountCallBack:
   766                           	callstack 0
   767  0000F3                     	ds	2
   768  0000F5                     _distRight:
   769                           	callstack 0
   770  0000F5                     	ds	2
   771  0000F7                     _distLeft:
   772                           	callstack 0
   773  0000F7                     	ds	2
   774  0000F9                     _curveRightCount:
   775                           	callstack 0
   776  0000F9                     	ds	1
   777  0000FA                     _curveLeftCount:
   778                           	callstack 0
   779  0000FA                     	ds	1
   780  0000FB                     _cycle10ms:
   781                           	callstack 0
   782  0000FB                     	ds	1
   783  0000FC                     _driveMode:
   784                           	callstack 0
   785  0000FC                     	ds	1
   786  0000FD                     _distFront:
   787                           	callstack 0
   788  0000FD                     	ds	2
   789                           
   790                           	psect	bssBANK1
   791  000100                     __pbssBANK1:
   792                           	callstack 0
   793  000100                     _uart1RxStatusBuffer:
   794                           	callstack 0
   795  000100                     	ds	8
   796  000108                     _uart1RxBuffer:
   797                           	callstack 0
   798  000108                     	ds	8
   799  000110                     _uart1TxBuffer:
   800                           	callstack 0
   801  000110                     	ds	8
   802  000118                     floorf@F527:
   803                           	callstack 0
   804  000118                     	ds	4
   805  00011C                     ___fpclassifyf@F465:
   806                           	callstack 0
   807  00011C                     	ds	4
   808  000120                     _smtWay:
   809                           	callstack 0
   810  000120                     	ds	4
   811  000124                     _smtDuty:
   812                           	callstack 0
   813  000124                     	ds	4
   814  000128                     _nout:
   815                           	callstack 0
   816  000128                     	ds	2
   817  00012A                     _BatteryVolt:
   818                           	callstack 0
   819  00012A                     	ds	2
   820  00012C                     _reverseTime:
   821                           	callstack 0
   822  00012C                     	ds	2
   823  00012E                     _oldSpeed:
   824                           	callstack 0
   825  00012E                     	ds	2
   826  000130                     _motPow:
   827                           	callstack 0
   828  000130                     	ds	2
   829  000132                     _followCount:
   830                           	callstack 0
   831  000132                     	ds	2
   832  000134                     _battCheckCount:
   833                           	callstack 0
   834  000134                     	ds	2
   835  000136                     _oldDistRight:
   836                           	callstack 0
   837  000136                     	ds	2
   838  000138                     _oldDistLeft:
   839                           	callstack 0
   840  000138                     	ds	2
   841  00013A                     _reverseCount:
   842                           	callstack 0
   843  00013A                     	ds	2
   844  00013C                     _distRightM:
   845                           	callstack 0
   846  00013C                     	ds	2
   847  00013E                     _distLeftM:
   848                           	callstack 0
   849  00013E                     	ds	2
   850  000140                     _dbuf:
   851                           	callstack 0
   852  000140                     	ds	80
   853                           
   854                           	psect	cstackBANK1
   855  0001A6                     __pcstackBANK1:
   856                           	callstack 0
   857  0001A6                     ?_vfprintf:
   858                           	callstack 0
   859  0001A6                     vfprintf@fp:
   860                           	callstack 0
   861                           
   862                           ; 2 bytes @ 0x0
   863  0001A6                     	ds	2
   864  0001A8                     vfprintf@fmt:
   865                           	callstack 0
   866                           
   867                           ; 2 bytes @ 0x2
   868  0001A8                     	ds	2
   869  0001AA                     vfprintf@ap:
   870                           	callstack 0
   871                           
   872                           ; 2 bytes @ 0x4
   873  0001AA                     	ds	2
   874  0001AC                     vfprintf@cfmt:
   875                           	callstack 0
   876                           
   877                           ; 2 bytes @ 0x6
   878  0001AC                     	ds	2
   879  0001AE                     ?_printf:
   880                           	callstack 0
   881  0001AE                     printf@fmt:
   882                           	callstack 0
   883                           
   884                           ; 2 bytes @ 0x8
   885  0001AE                     	ds	6
   886  0001B4                     printf@ap:
   887                           	callstack 0
   888                           
   889                           ; 2 bytes @ 0xE
   890  0001B4                     	ds	2
   891  0001B6                     startAccell@i:
   892                           	callstack 0
   893  0001B6                     checkCurveCount@roundTime:
   894                           	callstack 0
   895                           
   896                           ; 4 bytes @ 0x10
   897  0001B6                     	ds	4
   898                           
   899                           	psect	cstackBANK0
   900  000060                     __pcstackBANK0:
   901                           	callstack 0
   902  000060                     ?_dtoa:
   903                           	callstack 0
   904  000060                     ?_utoa:
   905                           	callstack 0
   906  000060                     ___flmul@sign:
   907                           	callstack 0
   908  000060                     dtoa@fp:
   909                           	callstack 0
   910  000060                     utoa@fp:
   911                           	callstack 0
   912  000060                     ___fldiv@rem:
   913                           	callstack 0
   914                           
   915                           ; 4 bytes @ 0x0
   916  000060                     	ds	1
   917  000061                     ___flmul@aexp:
   918                           	callstack 0
   919                           
   920                           ; 1 bytes @ 0x1
   921  000061                     	ds	1
   922  000062                     ___flmul@grs:
   923                           	callstack 0
   924  000062                     dtoa@d:
   925                           	callstack 0
   926  000062                     utoa@d:
   927                           	callstack 0
   928                           
   929                           ; 8 bytes @ 0x2
   930  000062                     	ds	2
   931  000064                     ___fldiv@sign:
   932                           	callstack 0
   933                           
   934                           ; 1 bytes @ 0x4
   935  000064                     	ds	1
   936  000065                     ___fldiv@new_exp:
   937                           	callstack 0
   938                           
   939                           ; 2 bytes @ 0x5
   940  000065                     	ds	1
   941  000066                     ___flmul@bexp:
   942                           	callstack 0
   943                           
   944                           ; 1 bytes @ 0x6
   945  000066                     	ds	1
   946  000067                     ___fldiv@grs:
   947                           	callstack 0
   948  000067                     ___flmul@prod:
   949                           	callstack 0
   950                           
   951                           ; 4 bytes @ 0x7
   952  000067                     	ds	3
   953  00006A                     _dtoa$3541:
   954                           	callstack 0
   955  00006A                     utoa@p:
   956                           	callstack 0
   957                           
   958                           ; 2 bytes @ 0xA
   959  00006A                     	ds	1
   960  00006B                     ___fldiv@bexp:
   961                           	callstack 0
   962  00006B                     ___flmul@temp:
   963                           	callstack 0
   964                           
   965                           ; 2 bytes @ 0xB
   966  00006B                     	ds	1
   967  00006C                     ___fldiv@aexp:
   968                           	callstack 0
   969  00006C                     dtoa@p:
   970                           	callstack 0
   971  00006C                     utoa@w:
   972                           	callstack 0
   973                           
   974                           ; 2 bytes @ 0xC
   975  00006C                     	ds	1
   976  00006D                     ??_floorf:
   977  00006D                     ?___fladd:
   978                           	callstack 0
   979  00006D                     ___flge@ff1:
   980                           	callstack 0
   981  00006D                     ___fladd@b:
   982                           	callstack 0
   983                           
   984                           ; 4 bytes @ 0xD
   985  00006D                     	ds	1
   986  00006E                     dtoa@w:
   987                           	callstack 0
   988  00006E                     utoa@n:
   989                           	callstack 0
   990                           
   991                           ; 8 bytes @ 0xE
   992  00006E                     	ds	2
   993  000070                     dtoa@s:
   994                           	callstack 0
   995                           
   996                           ; 2 bytes @ 0x10
   997  000070                     	ds	1
   998  000071                     ___flge@ff2:
   999                           	callstack 0
  1000  000071                     ___fladd@a:
  1001                           	callstack 0
  1002                           
  1003                           ; 4 bytes @ 0x11
  1004  000071                     	ds	1
  1005  000072                     dtoa@n:
  1006                           	callstack 0
  1007                           
  1008                           ; 8 bytes @ 0x12
  1009  000072                     	ds	1
  1010  000073                     floorf@m:
  1011                           	callstack 0
  1012                           
  1013                           ; 4 bytes @ 0x13
  1014  000073                     	ds	2
  1015  000075                     ___fladd@signs:
  1016                           	callstack 0
  1017                           
  1018                           ; 1 bytes @ 0x15
  1019  000075                     	ds	1
  1020  000076                     ___fladd@aexp:
  1021                           	callstack 0
  1022  000076                     utoa@i:
  1023                           	callstack 0
  1024                           
  1025                           ; 2 bytes @ 0x16
  1026  000076                     	ds	1
  1027  000077                     ___fladd@bexp:
  1028                           	callstack 0
  1029  000077                     floorf@e:
  1030                           	callstack 0
  1031                           
  1032                           ; 2 bytes @ 0x17
  1033  000077                     	ds	1
  1034  000078                     ___fladd@grs:
  1035                           	callstack 0
  1036                           
  1037                           ; 1 bytes @ 0x18
  1038  000078                     	ds	1
  1039  000079                     ?___flsub:
  1040                           	callstack 0
  1041  000079                     ?___fltol:
  1042                           	callstack 0
  1043  000079                     ___fltol@f1:
  1044                           	callstack 0
  1045  000079                     ___flsub@b:
  1046                           	callstack 0
  1047  000079                     floorf@u:
  1048                           	callstack 0
  1049                           
  1050                           ; 4 bytes @ 0x19
  1051  000079                     	ds	1
  1052  00007A                     dtoa@i:
  1053                           	callstack 0
  1054                           
  1055                           ; 2 bytes @ 0x1A
  1056  00007A                     	ds	3
  1057  00007D                     ??___fltol:
  1058  00007D                     ___flsub@a:
  1059                           	callstack 0
  1060                           
  1061                           ; 4 bytes @ 0x1D
  1062  00007D                     	ds	4
  1063  000081                     ___fltol@sign1:
  1064                           	callstack 0
  1065                           
  1066                           ; 1 bytes @ 0x21
  1067  000081                     	ds	1
  1068  000082                     ___fltol@exp1:
  1069                           	callstack 0
  1070                           
  1071                           ; 1 bytes @ 0x22
  1072  000082                     	ds	1
  1073  000083                     ??_calcSpeed:
  1074  000083                     ??_calcMotorPow:
  1075  000083                     ?_efgtoa:
  1076                           	callstack 0
  1077  000083                     setSteering@steering:
  1078                           	callstack 0
  1079  000083                     efgtoa@fp:
  1080                           	callstack 0
  1081                           
  1082                           ; 2 bytes @ 0x23
  1083  000083                     	ds	2
  1084  000085                     setSteering@steeringMode:
  1085                           	callstack 0
  1086  000085                     calcMotorPow@setSpeedDelta:
  1087                           	callstack 0
  1088  000085                     efgtoa@f:
  1089                           	callstack 0
  1090                           
  1091                           ; 4 bytes @ 0x25
  1092  000085                     	ds	1
  1093  000086                     ??_setSteering:
  1094                           
  1095                           ; 1 bytes @ 0x26
  1096  000086                     	ds	1
  1097  000087                     calcSpeed@speed:
  1098                           	callstack 0
  1099  000087                     calcMotorPow@oldSpeedDelta:
  1100                           	callstack 0
  1101                           
  1102                           ; 2 bytes @ 0x27
  1103  000087                     	ds	1
  1104  000088                     setSteering@steeringF:
  1105                           	callstack 0
  1106                           
  1107                           ; 2 bytes @ 0x28
  1108  000088                     	ds	1
  1109  000089                     calcMotorPow@addMPow:
  1110                           	callstack 0
  1111  000089                     efgtoa@c:
  1112                           	callstack 0
  1113                           
  1114                           ; 1 bytes @ 0x29
  1115  000089                     	ds	1
  1116  00008A                     ??_efgtoa:
  1117  00008A                     setSteering@steeringB:
  1118                           	callstack 0
  1119                           
  1120                           ; 2 bytes @ 0x2A
  1121  00008A                     	ds	2
  1122  00008C                     ??_calcSteering:
  1123                           
  1124                           ; 1 bytes @ 0x2C
  1125  00008C                     	ds	2
  1126  00008E                     calcSteering@delta:
  1127                           	callstack 0
  1128                           
  1129                           ; 2 bytes @ 0x2E
  1130  00008E                     	ds	1
  1131  00008F                     _efgtoa$3565:
  1132                           	callstack 0
  1133                           
  1134                           ; 2 bytes @ 0x2F
  1135  00008F                     	ds	2
  1136  000091                     _efgtoa$3566:
  1137                           	callstack 0
  1138                           
  1139                           ; 2 bytes @ 0x31
  1140  000091                     	ds	2
  1141  000093                     _efgtoa$3570:
  1142                           	callstack 0
  1143                           
  1144                           ; 2 bytes @ 0x33
  1145  000093                     	ds	2
  1146  000095                     _efgtoa$3574:
  1147                           	callstack 0
  1148                           
  1149                           ; 2 bytes @ 0x35
  1150  000095                     	ds	2
  1151  000097                     _efgtoa$3575:
  1152                           	callstack 0
  1153                           
  1154                           ; 2 bytes @ 0x37
  1155  000097                     	ds	2
  1156  000099                     _efgtoa$3576:
  1157                           	callstack 0
  1158                           
  1159                           ; 2 bytes @ 0x39
  1160  000099                     	ds	2
  1161  00009B                     efgtoa@t:
  1162                           	callstack 0
  1163                           
  1164                           ; 2 bytes @ 0x3B
  1165  00009B                     	ds	2
  1166  00009D                     efgtoa@pp:
  1167                           	callstack 0
  1168                           
  1169                           ; 2 bytes @ 0x3D
  1170  00009D                     	ds	2
  1171  00009F                     efgtoa@ne:
  1172                           	callstack 0
  1173                           
  1174                           ; 2 bytes @ 0x3F
  1175  00009F                     	ds	2
  1176  0000A1                     efgtoa@m:
  1177                           	callstack 0
  1178                           
  1179                           ; 2 bytes @ 0x41
  1180  0000A1                     	ds	2
  1181  0000A3                     efgtoa@ou:
  1182                           	callstack 0
  1183                           
  1184                           ; 4 bytes @ 0x43
  1185  0000A3                     	ds	4
  1186  0000A7                     efgtoa@d:
  1187                           	callstack 0
  1188                           
  1189                           ; 2 bytes @ 0x47
  1190  0000A7                     	ds	2
  1191  0000A9                     efgtoa@sign:
  1192                           	callstack 0
  1193                           
  1194                           ; 2 bytes @ 0x49
  1195  0000A9                     	ds	2
  1196  0000AB                     efgtoa@p:
  1197                           	callstack 0
  1198                           
  1199                           ; 2 bytes @ 0x4B
  1200  0000AB                     	ds	2
  1201  0000AD                     efgtoa@w:
  1202                           	callstack 0
  1203                           
  1204                           ; 2 bytes @ 0x4D
  1205  0000AD                     	ds	2
  1206  0000AF                     efgtoa@nmode:
  1207                           	callstack 0
  1208                           
  1209                           ; 1 bytes @ 0x4F
  1210  0000AF                     	ds	1
  1211  0000B0                     efgtoa@mode:
  1212                           	callstack 0
  1213                           
  1214                           ; 1 bytes @ 0x50
  1215  0000B0                     	ds	1
  1216  0000B1                     efgtoa@h:
  1217                           	callstack 0
  1218                           
  1219                           ; 4 bytes @ 0x51
  1220  0000B1                     	ds	4
  1221  0000B5                     efgtoa@l:
  1222                           	callstack 0
  1223                           
  1224                           ; 4 bytes @ 0x55
  1225  0000B5                     	ds	4
  1226  0000B9                     efgtoa@i:
  1227                           	callstack 0
  1228                           
  1229                           ; 2 bytes @ 0x59
  1230  0000B9                     	ds	2
  1231  0000BB                     efgtoa@g:
  1232                           	callstack 0
  1233                           
  1234                           ; 4 bytes @ 0x5B
  1235  0000BB                     	ds	4
  1236  0000BF                     efgtoa@e:
  1237                           	callstack 0
  1238                           
  1239                           ; 2 bytes @ 0x5F
  1240  0000BF                     	ds	2
  1241  0000C1                     efgtoa@n:
  1242                           	callstack 0
  1243                           
  1244                           ; 2 bytes @ 0x61
  1245  0000C1                     	ds	2
  1246  0000C3                     efgtoa@u:
  1247                           	callstack 0
  1248                           
  1249                           ; 4 bytes @ 0x63
  1250  0000C3                     	ds	4
  1251  0000C7                     ?_vfpfcnvrt:
  1252                           	callstack 0
  1253  0000C7                     vfpfcnvrt@fp:
  1254                           	callstack 0
  1255                           
  1256                           ; 2 bytes @ 0x67
  1257  0000C7                     	ds	2
  1258  0000C9                     vfpfcnvrt@fmt:
  1259                           	callstack 0
  1260                           
  1261                           ; 2 bytes @ 0x69
  1262  0000C9                     	ds	2
  1263  0000CB                     vfpfcnvrt@ap:
  1264                           	callstack 0
  1265                           
  1266                           ; 2 bytes @ 0x6B
  1267  0000CB                     	ds	2
  1268  0000CD                     ??_vfpfcnvrt:
  1269                           
  1270                           ; 1 bytes @ 0x6D
  1271  0000CD                     	ds	4
  1272  0000D1                     vfpfcnvrt@ll:
  1273                           	callstack 0
  1274                           
  1275                           ; 8 bytes @ 0x71
  1276  0000D1                     	ds	8
  1277  0000D9                     vfpfcnvrt@llu:
  1278                           	callstack 0
  1279                           
  1280                           ; 8 bytes @ 0x79
  1281  0000D9                     	ds	8
  1282  0000E1                     _vfpfcnvrt$3601:
  1283                           	callstack 0
  1284                           
  1285                           ; 2 bytes @ 0x81
  1286  0000E1                     	ds	2
  1287  0000E3                     vfpfcnvrt@f:
  1288                           	callstack 0
  1289                           
  1290                           ; 4 bytes @ 0x83
  1291  0000E3                     	ds	4
  1292  0000E7                     vfpfcnvrt@ct:
  1293                           	callstack 0
  1294                           
  1295                           ; 3 bytes @ 0x87
  1296  0000E7                     	ds	3
  1297  0000EA                     vfpfcnvrt@c:
  1298                           	callstack 0
  1299                           
  1300                           ; 1 bytes @ 0x8A
  1301  0000EA                     	ds	1
  1302                           
  1303                           	psect	cstackCOMRAM
  1304  000001                     __pcstackCOMRAM:
  1305                           	callstack 0
  1306  000001                     CCP3_DefaultCallBack@capturedValue:
  1307                           	callstack 0
  1308                           
  1309                           ; 2 bytes @ 0x0
  1310  000001                     	ds	2
  1311  000003                     CCP3_CaptureISR@module:
  1312                           	callstack 0
  1313                           
  1314                           ; 2 bytes @ 0x2
  1315  000003                     	ds	2
  1316  000005                     CCP4_DefaultCallBack@capturedValue:
  1317                           	callstack 0
  1318                           
  1319                           ; 2 bytes @ 0x4
  1320  000005                     	ds	2
  1321  000007                     CCP4_CaptureISR@module:
  1322                           	callstack 0
  1323                           
  1324                           ; 2 bytes @ 0x6
  1325  000007                     	ds	2
  1326  000009                     ?_TMR5_ReadTimer:
  1327                           	callstack 0
  1328  000009                     TMR5_WriteTimer@timerVal:
  1329                           	callstack 0
  1330                           
  1331                           ; 2 bytes @ 0x8
  1332  000009                     	ds	2
  1333  00000B                     ??_TMR5_ReadTimer:
  1334  00000B                     
  1335                           ; 1 bytes @ 0xA
  1336  00000B                     	ds	2
  1337  00000D                     TMR5_ReadTimer@readVal:
  1338                           	callstack 0
  1339                           
  1340                           ; 2 bytes @ 0xC
  1341  00000D                     	ds	2
  1342  00000F                     TMR5_ReadTimer@readValHigh:
  1343                           	callstack 0
  1344                           
  1345                           ; 1 bytes @ 0xE
  1346  00000F                     	ds	1
  1347  000010                     TMR5_ReadTimer@readValLow:
  1348                           	callstack 0
  1349                           
  1350                           ; 1 bytes @ 0xF
  1351  000010                     	ds	1
  1352  000011                     ??_UART1_tx_vect_isr:
  1353  000011                     
  1354                           ; 1 bytes @ 0x10
  1355  000011                     	ds	1
  1356  000012                     ??_UART1_rx_vect_isr:
  1357                           
  1358                           ; 1 bytes @ 0x11
  1359  000012                     	ds	1
  1360  000013                     ??_TMR4_ISR:
  1361                           
  1362                           ; 1 bytes @ 0x12
  1363  000013                     	ds	1
  1364  000014                     ??_TMR3_Initialize:
  1365  000014                     ??_getCurve:
  1366  000014                     ?_strlen:
  1367                           	callstack 0
  1368  000014                     ?___fpclassifyf:
  1369                           	callstack 0
  1370  000014                     ?_isupper:
  1371                           	callstack 0
  1372  000014                     ?_strncmp:
  1373                           	callstack 0
  1374  000014                     ?_ADCC_GetSingleConversion:
  1375                           	callstack 0
  1376  000014                     ?___awdiv:
  1377                           	callstack 0
  1378  000014                     ?___awmod:
  1379                           	callstack 0
  1380  000014                     ?___lwdiv:
  1381                           	callstack 0
  1382  000014                     ?___aldiv:
  1383                           	callstack 0
  1384  000014                     ?___flneg:
  1385                           	callstack 0
  1386  000014                     ?___aodiv:
  1387                           	callstack 0
  1388  000014                     ?___aomod:
  1389                           	callstack 0
  1390  000014                     ?___lodiv:
  1391                           	callstack 0
  1392  000014                     ?___lomod:
  1393                           	callstack 0
  1394  000014                     UART1_Write@txData:
  1395                           	callstack 0
  1396  000014                     INTERRUPT_Initialize@state:
  1397                           	callstack 0
  1398  000014                     UART1_SetFramingErrorHandler@interruptHandler:
  1399                           	callstack 0
  1400  000014                     UART1_SetOverrunErrorHandler@interruptHandler:
  1401                           	callstack 0
  1402  000014                     UART1_SetErrorHandler@interruptHandler:
  1403                           	callstack 0
  1404  000014                     UART1_SetRxInterruptHandler@InterruptHandler:
  1405                           	callstack 0
  1406  000014                     UART1_SetTxInterruptHandler@InterruptHandler:
  1407                           	callstack 0
  1408  000014                     CCP3_SetCallBack@customCallBack:
  1409                           	callstack 0
  1410  000014                     CCP4_SetCallBack@customCallBack:
  1411                           	callstack 0
  1412  000014                     TMR5_SetGateInterruptHandler@InterruptHandler:
  1413                           	callstack 0
  1414  000014                     TMR4_SetInterruptHandler@InterruptHandler:
  1415                           	callstack 0
  1416  000014                     PWM7_LoadDutyValue@dutyValue:
  1417                           	callstack 0
  1418  000014                     PWM8_LoadDutyValue@dutyValue:
  1419                           	callstack 0
  1420  000014                     PWM5_LoadDutyValue@dutyValue:
  1421                           	callstack 0
  1422  000014                     PWM6_LoadDutyValue@dutyValue:
  1423                           	callstack 0
  1424  000014                     ___awdiv@dividend:
  1425                           	callstack 0
  1426  000014                     ___awmod@dividend:
  1427                           	callstack 0
  1428  000014                     ___lwdiv@dividend:
  1429                           	callstack 0
  1430  000014                     isupper@c:
  1431                           	callstack 0
  1432  000014                     strcpy@dest:
  1433                           	callstack 0
  1434  000014                     strlen@s:
  1435                           	callstack 0
  1436  000014                     strncmp@_l:
  1437                           	callstack 0
  1438  000014                     ___aldiv@dividend:
  1439                           	callstack 0
  1440  000014                     ___fleq@ff1:
  1441                           	callstack 0
  1442  000014                     ___flneg@f1:
  1443                           	callstack 0
  1444  000014                     ___fpclassifyf@x:
  1445                           	callstack 0
  1446  000014                     ___aodiv@dividend:
  1447                           	callstack 0
  1448  000014                     ___aomod@dividend:
  1449                           	callstack 0
  1450  000014                     ___lodiv@dividend:
  1451                           	callstack 0
  1452  000014                     ___lomod@dividend:
  1453                           	callstack 0
  1454                           
  1455                           ; 8 bytes @ 0x13
  1456  000014                     	ds	1
  1457  000015                     putch@txData:
  1458                           	callstack 0
  1459                           
  1460                           ; 1 bytes @ 0x14
  1461  000015                     	ds	1
  1462  000016                     ??_TMR5_Initialize:
  1463  000016                     ??_isupper:
  1464  000016                     ??_PWM7_LoadDutyValue:
  1465  000016                     ??_PWM8_LoadDutyValue:
  1466  000016                     ??_PWM5_LoadDutyValue:
  1467  000016                     ??_PWM6_LoadDutyValue:
  1468  000016                     ??_ADCC_GetSingleConversion:
  1469  000016                     getCurve@deltaLeft:
  1470                           	callstack 0
  1471  000016                     ___awdiv@divisor:
  1472                           	callstack 0
  1473  000016                     ___awmod@divisor:
  1474                           	callstack 0
  1475  000016                     ___lwdiv@divisor:
  1476                           	callstack 0
  1477  000016                     fputc@c:
  1478                           	callstack 0
  1479  000016                     strcpy@src:
  1480                           	callstack 0
  1481  000016                     strlen@a:
  1482                           	callstack 0
  1483  000016                     strncmp@_r:
  1484                           	callstack 0
  1485                           
  1486                           ; 2 bytes @ 0x15
  1487  000016                     	ds	2
  1488  000018                     ??___fpclassifyf:
  1489  000018                     ??_strcpy:
  1490  000018                     ADCC_GetSingleConversion@channel:
  1491                           	callstack 0
  1492  000018                     ___awdiv@counter:
  1493                           	callstack 0
  1494  000018                     ___awmod@counter:
  1495                           	callstack 0
  1496  000018                     ___lwdiv@counter:
  1497                           	callstack 0
  1498  000018                     getCurve@deltaRight:
  1499                           	callstack 0
  1500  000018                     setMotor@motorPower:
  1501                           	callstack 0
  1502  000018                     fputc@fp:
  1503                           	callstack 0
  1504  000018                     strncmp@n:
  1505                           	callstack 0
  1506  000018                     ___aldiv@divisor:
  1507                           	callstack 0
  1508  000018                     ___fleq@ff2:
  1509                           	callstack 0
  1510                           
  1511                           ; 4 bytes @ 0x17
  1512  000018                     	ds	1
  1513  000019                     ___awdiv@sign:
  1514                           	callstack 0
  1515  000019                     ___awmod@sign:
  1516                           	callstack 0
  1517  000019                     ___lwdiv@quotient:
  1518                           	callstack 0
  1519                           
  1520                           ; 2 bytes @ 0x18
  1521  000019                     	ds	1
  1522  00001A                     ??_setMotor:
  1523  00001A                     ??_fputc:
  1524  00001A                     ??_strncmp:
  1525  00001A                     ?_tolower:
  1526                           	callstack 0
  1527  00001A                     ___awdiv@quotient:
  1528                           	callstack 0
  1529  00001A                     strcpy@s:
  1530                           	callstack 0
  1531  00001A                     tolower@c:
  1532                           	callstack 0
  1533                           
  1534                           ; 2 bytes @ 0x19
  1535  00001A                     	ds	1
  1536  00001B                     strncmp@l:
  1537                           	callstack 0
  1538                           
  1539                           ; 2 bytes @ 0x1A
  1540  00001B                     	ds	1
  1541  00001C                     ??_tolower:
  1542  00001C                     ??___fleq:
  1543  00001C                     ?___xxtofl:
  1544                           	callstack 0
  1545  00001C                     ___aldiv@counter:
  1546                           	callstack 0
  1547  00001C                     ___fpclassifyf@e:
  1548                           	callstack 0
  1549  00001C                     strcpy@d:
  1550                           	callstack 0
  1551  00001C                     ___xxtofl@val:
  1552                           	callstack 0
  1553  00001C                     ___aodiv@divisor:
  1554                           	callstack 0
  1555  00001C                     ___aomod@divisor:
  1556                           	callstack 0
  1557  00001C                     ___lodiv@divisor:
  1558                           	callstack 0
  1559  00001C                     ___lomod@divisor:
  1560                           	callstack 0
  1561                           
  1562                           ; 8 bytes @ 0x1B
  1563  00001C                     	ds	1
  1564  00001D                     ___aldiv@sign:
  1565                           	callstack 0
  1566  00001D                     strncmp@r:
  1567                           	callstack 0
  1568                           
  1569                           ; 2 bytes @ 0x1C
  1570  00001D                     	ds	1
  1571  00001E                     ___aldiv@quotient:
  1572                           	callstack 0
  1573  00001E                     ___fpclassifyf@u:
  1574                           	callstack 0
  1575                           
  1576                           ; 4 bytes @ 0x1D
  1577  00001E                     	ds	1
  1578  00001F                     fputs@s:
  1579                           	callstack 0
  1580                           
  1581                           ; 2 bytes @ 0x1E
  1582  00001F                     	ds	1
  1583  000020                     ??___xxtofl:
  1584  000020                     _tolower$3695:
  1585                           	callstack 0
  1586                           
  1587                           ; 2 bytes @ 0x1F
  1588  000020                     	ds	1
  1589  000021                     fputs@fp:
  1590                           	callstack 0
  1591                           
  1592                           ; 2 bytes @ 0x20
  1593  000021                     	ds	1
  1594  000022                     ?_actSpeed:
  1595                           	callstack 0
  1596                           
  1597                           ; 2 bytes @ 0x21
  1598  000022                     	ds	1
  1599  000023                     fputs@c:
  1600                           	callstack 0
  1601                           
  1602                           ; 1 bytes @ 0x22
  1603  000023                     	ds	1
  1604  000024                     ___aodiv@counter:
  1605                           	callstack 0
  1606  000024                     ___aomod@counter:
  1607                           	callstack 0
  1608  000024                     ___lomod@counter:
  1609                           	callstack 0
  1610  000024                     ___xxtofl@sign:
  1611                           	callstack 0
  1612  000024                     actSpeed@speed:
  1613                           	callstack 0
  1614  000024                     fputs@i:
  1615                           	callstack 0
  1616  000024                     ___lodiv@quotient:
  1617                           	callstack 0
  1618                           
  1619                           ; 8 bytes @ 0x23
  1620  000024                     	ds	1
  1621  000025                     ___aodiv@sign:
  1622                           	callstack 0
  1623  000025                     ___aomod@sign:
  1624                           	callstack 0
  1625  000025                     ___xxtofl@exp:
  1626                           	callstack 0
  1627                           
  1628                           ; 1 bytes @ 0x24
  1629  000025                     	ds	1
  1630  000026                     ?_abs:
  1631                           	callstack 0
  1632  000026                     ?_pad:
  1633                           	callstack 0
  1634  000026                     pad@fp:
  1635                           	callstack 0
  1636  000026                     abs@a:
  1637                           	callstack 0
  1638  000026                     ___xxtofl@arg:
  1639                           	callstack 0
  1640  000026                     ___aodiv@quotient:
  1641                           	callstack 0
  1642                           
  1643                           ; 8 bytes @ 0x25
  1644  000026                     	ds	2
  1645  000028                     ??_abs:
  1646  000028                     pad@buf:
  1647                           	callstack 0
  1648                           
  1649                           ; 2 bytes @ 0x27
  1650  000028                     	ds	2
  1651  00002A                     ?___fldiv:
  1652                           	callstack 0
  1653  00002A                     ?___flmul:
  1654                           	callstack 0
  1655  00002A                     pad@p:
  1656                           	callstack 0
  1657  00002A                     ___fldiv@b:
  1658                           	callstack 0
  1659  00002A                     ___flmul@b:
  1660                           	callstack 0
  1661                           
  1662                           ; 4 bytes @ 0x29
  1663  00002A                     	ds	2
  1664  00002C                     ??_pad:
  1665  00002C                     ___lodiv@counter:
  1666                           	callstack 0
  1667                           
  1668                           ; 1 bytes @ 0x2B
  1669  00002C                     	ds	1
  1670  00002D                     pad@i:
  1671                           	callstack 0
  1672                           
  1673                           ; 2 bytes @ 0x2C
  1674  00002D                     	ds	1
  1675  00002E                     ___fldiv@a:
  1676                           	callstack 0
  1677  00002E                     ___flmul@a:
  1678                           	callstack 0
  1679                           
  1680                           ; 4 bytes @ 0x2D
  1681  00002E                     	ds	1
  1682  00002F                     pad@w:
  1683                           	callstack 0
  1684                           
  1685                           ; 2 bytes @ 0x2E
  1686  00002F                     	ds	2
  1687  000031                     ??_dtoa:
  1688  000031                     ??_utoa:
  1689                           
  1690                           ; 1 bytes @ 0x30
  1691  000031                     	ds	1
  1692  000032                     ??___fldiv:
  1693  000032                     ??___flmul:
  1694                           
  1695                           ; 1 bytes @ 0x31
  1696  000032                     	ds	4
  1697  000036                     ??___fladd:
  1698  000036                     ??___flge:
  1699  000036                     ?_floorf:
  1700                           	callstack 0
  1701  000036                     floorf@x:
  1702                           	callstack 0
  1703                           
  1704                           ; 4 bytes @ 0x35
  1705  000036                     	ds	4
  1706  00003A                     
  1707                           ; 1 bytes @ 0x39
  1708 ;;
  1709 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1710 ;;
  1711 ;; *************** function _main *****************
  1712 ;; Defined at:
  1713 ;;		line 8 in file "main.c"
  1714 ;; Parameters:    Size  Location     Type
  1715 ;;		None
  1716 ;; Auto vars:     Size  Location     Type
  1717 ;;		None
  1718 ;; Return value:  Size  Location     Type
  1719 ;;                  1    wreg      void 
  1720 ;; Registers used:
  1721 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1722 ;; Tracked objects:
  1723 ;;		On entry : 0/0
  1724 ;;		On exit  : 0/0
  1725 ;;		Unchanged: 0/0
  1726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1731 ;;Total ram usage:        0 bytes
  1732 ;; Hardware stack levels required when called: 19
  1733 ;; This function calls:
  1734 ;;		_SYSTEM_Initialize
  1735 ;;		_TMR4_SetInterruptHandler
  1736 ;;		_loop
  1737 ;; This function is called by:
  1738 ;;		Startup code after reset
  1739 ;; This function uses a non-reentrant model
  1740 ;;
  1741                           
  1742                           	psect	text0
  1743  0061D8                     __ptext0:
  1744                           	callstack 0
  1745  0061D8                     _main:
  1746                           	callstack 12
  1747  0061D8                     
  1748                           ;main.c: 9:     SYSTEM_Initialize();
  1749  0061D8  EC08  F02D         	call	_SYSTEM_Initialize	;wreg free
  1750  0061DC                     
  1751                           ;main.c: 10:     (INTCON0bits.GIEH = 1);
  1752  0061DC  8ED2               	bsf	210,7,c	;volatile
  1753  0061DE                     
  1754                           ;main.c: 11:     (INTCON0bits.GIEL = 1);
  1755  0061DE  8CD2               	bsf	210,6,c	;volatile
  1756                           
  1757                           ;main.c: 12:     TMR4_SetInterruptHandler(TMR4_10msISR);
  1758  0061E0  0E2C               	movlw	low _TMR4_10msISR
  1759  0061E2  6E14               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
  1760  0061E4  0E63               	movlw	high _TMR4_10msISR
  1761  0061E6  6E15               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
  1762  0061E8  EC87  F031         	call	_TMR4_SetInterruptHandler	;wreg free
  1763  0061EC                     l9489:
  1764                           
  1765                           ;main.c: 15:         loop();
  1766  0061EC  ECFF  F022         	call	_loop	;wreg free
  1767  0061F0  EFF6  F030         	goto	l9489
  1768  0061F4  EF57  F000         	goto	start
  1769  0061F8                     __end_of_main:
  1770                           	callstack 0
  1771                           
  1772 ;; *************** function _loop *****************
  1773 ;; Defined at:
  1774 ;;		line 19 in file "main.c"
  1775 ;; Parameters:    Size  Location     Type
  1776 ;;		None
  1777 ;; Auto vars:     Size  Location     Type
  1778 ;;		None
  1779 ;; Return value:  Size  Location     Type
  1780 ;;                  1    wreg      void 
  1781 ;; Registers used:
  1782 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1783 ;; Tracked objects:
  1784 ;;		On entry : 0/0
  1785 ;;		On exit  : 0/0
  1786 ;;		Unchanged: 0/0
  1787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1792 ;;Total ram usage:        0 bytes
  1793 ;; Hardware stack levels used: 1
  1794 ;; Hardware stack levels required when called: 18
  1795 ;; This function calls:
  1796 ;;		___flge
  1797 ;;		___xxtofl
  1798 ;;		_calcMotorPow
  1799 ;;		_calcSpeed
  1800 ;;		_calcSteering
  1801 ;;		_checkBatt
  1802 ;;		_checkCurveCount
  1803 ;;		_getBatteryVoltage
  1804 ;;		_getCurve
  1805 ;;		_getReverse
  1806 ;;		_setMotor
  1807 ;;		_setSteering
  1808 ;;		_startAccell
  1809 ;; This function is called by:
  1810 ;;		_main
  1811 ;; This function uses a non-reentrant model
  1812 ;;
  1813                           
  1814                           	psect	text1
  1815  0045FE                     __ptext1:
  1816                           	callstack 0
  1817  0045FE                     _loop:
  1818                           	callstack 12
  1819  0045FE                     
  1820                           ;main.c: 20:     setMotor(0);
  1821  0045FE  0E00               	movlw	0
  1822  004600  6E19               	movwf	(setMotor@motorPower+1)^0,c
  1823  004602  0E00               	movlw	0
  1824  004604  6E18               	movwf	setMotor@motorPower^0,c
  1825  004606  EC90  F026         	call	_setMotor	;wreg free
  1826                           
  1827                           ;main.c: 21:     setSteering(0, Front);
  1828  00460A  0E00               	movlw	0
  1829  00460C  0100               	movlb	0	; () banked
  1830  00460E  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  1831  004610  0E00               	movlw	0
  1832  004612  6F83               	movwf	setSteering@steering& (0+255),b
  1833  004614  0E03               	movlw	3
  1834  004616  6F85               	movwf	setSteering@steeringMode& (0+255),b
  1835  004618  EC86  F01C         	call	_setSteering	;wreg free
  1836  00461C                     l1232:
  1837  00461C  B8CB               	btfsc	203,4,c	;volatile
  1838  00461E  EF13  F023         	goto	u10681
  1839  004622  EF15  F023         	goto	u10680
  1840  004626                     u10681:
  1841  004626  EF0E  F023         	goto	l1232
  1842  00462A                     u10680:
  1843  00462A                     l9443:
  1844  00462A  0100               	movlb	0	; () banked
  1845  00462C  51FB               	movf	_cycle10ms& (0+255),w,b	;volatile
  1846  00462E  B4D8               	btfsc	status,2,c
  1847  004630  EF1C  F023         	goto	u10691
  1848  004634  EF1E  F023         	goto	u10690
  1849  004638                     u10691:
  1850  004638  EF15  F023         	goto	l9443
  1851  00463C                     u10690:
  1852  00463C                     
  1853                           ; BSR set to: 0
  1854                           ;main.c: 26:         cycle10ms = 0;
  1855  00463C  0E00               	movlw	0
  1856  00463E  6FFB               	movwf	_cycle10ms& (0+255),b	;volatile
  1857  004640                     
  1858                           ; BSR set to: 0
  1859                           ;main.c: 28:         getBatteryVoltage();
  1860  004640  EC55  F031         	call	_getBatteryVoltage	;wreg free
  1861  004644                     
  1862                           ;main.c: 29:     } while (BatteryVolt < ((7.4) * 409.6));
  1863  004644  C12A  F01C         	movff	_BatteryVolt,___xxtofl@val
  1864  004648  C12B  F01D         	movff	_BatteryVolt+1,___xxtofl@val+1
  1865  00464C  6A1E               	clrf	(___xxtofl@val+2)^0,c
  1866  00464E  6A1F               	clrf	(___xxtofl@val+3)^0,c
  1867  004650  0E00               	movlw	0
  1868  004652  EC62  F01F         	call	___xxtofl
  1869  004656  C01C  F06D         	movff	?___xxtofl,___flge@ff1
  1870  00465A  C01D  F06E         	movff	?___xxtofl+1,___flge@ff1+1
  1871  00465E  C01E  F06F         	movff	?___xxtofl+2,___flge@ff1+2
  1872  004662  C01F  F070         	movff	?___xxtofl+3,___flge@ff1+3
  1873  004666  0EA4               	movlw	164
  1874  004668  0100               	movlb	0	; () banked
  1875  00466A  6F71               	movwf	___flge@ff2& (0+255),b
  1876  00466C  0E70               	movlw	112
  1877  00466E  6F72               	movwf	(___flge@ff2+1)& (0+255),b
  1878  004670  0E3D               	movlw	61
  1879  004672  6F73               	movwf	(___flge@ff2+2)& (0+255),b
  1880  004674  0E45               	movlw	69
  1881  004676  6F74               	movwf	(___flge@ff2+3)& (0+255),b
  1882  004678  EC9C  F024         	call	___flge	;wreg free
  1883  00467C  0100               	movlb	0	; () banked
  1884  00467E  A0D8               	btfss	status,0,c
  1885  004680  EF44  F023         	goto	u10701
  1886  004684  EF46  F023         	goto	u10700
  1887  004688                     u10701:
  1888  004688  EF15  F023         	goto	l9443
  1889  00468C                     u10700:
  1890  00468C                     
  1891                           ; BSR set to: 0
  1892                           ;main.c: 31:     startAccell();
  1893  00468C  EC56  F02A         	call	_startAccell	;wreg free
  1894  004690                     
  1895                           ;main.c: 33:     oldDistLeft = distLeft;
  1896  004690  C0F7  F138         	movff	_distLeft,_oldDistLeft	;volatile
  1897  004694  C0F8  F139         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  1898  004698                     
  1899                           ;main.c: 34:     oldDistRight = distRight;
  1900  004698  C0F5  F136         	movff	_distRight,_oldDistRight	;volatile
  1901  00469C  C0F6  F137         	movff	_distRight+1,_oldDistRight+1	;volatile
  1902  0046A0                     
  1903                           ;main.c: 35:     cycle10ms = 0;
  1904  0046A0  0E00               	movlw	0
  1905  0046A2  0100               	movlb	0	; () banked
  1906  0046A4  6FFB               	movwf	_cycle10ms& (0+255),b	;volatile
  1907  0046A6                     l9459:
  1908  0046A6  0100               	movlb	0	; () banked
  1909  0046A8  51FB               	movf	_cycle10ms& (0+255),w,b	;volatile
  1910  0046AA  B4D8               	btfsc	status,2,c
  1911  0046AC  EF5A  F023         	goto	u10711
  1912  0046B0  EF5C  F023         	goto	u10710
  1913  0046B4                     u10711:
  1914  0046B4  EF53  F023         	goto	l9459
  1915  0046B8                     u10710:
  1916  0046B8                     
  1917                           ; BSR set to: 0
  1918                           ;main.c: 38:         cycle10ms = 0;
  1919  0046B8  0E00               	movlw	0
  1920  0046BA  6FFB               	movwf	_cycle10ms& (0+255),b	;volatile
  1921  0046BC                     
  1922                           ; BSR set to: 0
  1923                           ;main.c: 40:         if (!PORTBbits.RB5) {
  1924  0046BC  BACB               	btfsc	203,5,c	;volatile
  1925  0046BE  EF63  F023         	goto	u10721
  1926  0046C2  EF65  F023         	goto	u10720
  1927  0046C6                     u10721:
  1928  0046C6  EF77  F023         	goto	l9469
  1929  0046CA                     u10720:
  1930  0046CA                     
  1931                           ; BSR set to: 0
  1932                           ;main.c: 41:             setSpeed = 0;
  1933  0046CA  0E00               	movlw	0
  1934  0046CC  6FF0               	movwf	(_setSpeed+1)& (0+255),b
  1935  0046CE  0E00               	movlw	0
  1936  0046D0  6FEF               	movwf	_setSpeed& (0+255),b
  1937                           
  1938                           ;main.c: 42:             actMotorPow = 0;
  1939  0046D2  0E00               	movlw	0
  1940  0046D4  6FEC               	movwf	(_actMotorPow+1)& (0+255),b
  1941  0046D6  0E00               	movlw	0
  1942  0046D8  6FEB               	movwf	_actMotorPow& (0+255),b
  1943  0046DA                     
  1944                           ; BSR set to: 0
  1945                           ;main.c: 43:             setSteering(0, Front);
  1946  0046DA  0E00               	movlw	0
  1947  0046DC  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  1948  0046DE  0E00               	movlw	0
  1949  0046E0  6F83               	movwf	setSteering@steering& (0+255),b
  1950  0046E2  0E03               	movlw	3
  1951  0046E4  6F85               	movwf	setSteering@steeringMode& (0+255),b
  1952  0046E6  EC86  F01C         	call	_setSteering	;wreg free
  1953                           
  1954                           ;main.c: 44:             break;
  1955  0046EA  EF91  F023         	goto	l1248
  1956  0046EE                     l9469:
  1957                           
  1958                           ; BSR set to: 0
  1959                           ;main.c: 53:         if (checkBatt()) {
  1960  0046EE  EC3B  F02B         	call	_checkBatt	;wreg free
  1961  0046F2  0900               	iorlw	0
  1962  0046F4  B4D8               	btfsc	status,2,c
  1963  0046F6  EF7F  F023         	goto	u10731
  1964  0046FA  EF81  F023         	goto	u10730
  1965  0046FE                     u10731:
  1966  0046FE  EF83  F023         	goto	l9473
  1967  004702                     u10730:
  1968  004702  EF91  F023         	goto	l1248
  1969  004706                     l9473:
  1970                           
  1971                           ;main.c: 57:         getCurve();
  1972  004706  EC81  F01D         	call	_getCurve	;wreg free
  1973  00470A                     
  1974                           ;main.c: 58:         getReverse();
  1975  00470A  ECB2  F021         	call	_getReverse	;wreg free
  1976  00470E                     
  1977                           ;main.c: 60:         calcSteering();
  1978  00470E  EC72  F01E         	call	_calcSteering	;wreg free
  1979  004712                     
  1980                           ;main.c: 61:         calcSpeed();
  1981  004712  EC6A  F019         	call	_calcSpeed	;wreg free
  1982  004716                     
  1983                           ;main.c: 62:         calcMotorPow();
  1984  004716  EC59  F022         	call	_calcMotorPow	;wreg free
  1985                           
  1986                           ;main.c: 64:         checkCurveCount();
  1987  00471A  EC69  F027         	call	_checkCurveCount	;wreg free
  1988  00471E  EF53  F023         	goto	l9459
  1989  004722                     l1248:
  1990  004722  0012               	return		;funcret
  1991  004724                     __end_of_loop:
  1992                           	callstack 0
  1993                           
  1994 ;; *************** function _startAccell *****************
  1995 ;; Defined at:
  1996 ;;		line 105 in file "main.c"
  1997 ;; Parameters:    Size  Location     Type
  1998 ;;		None
  1999 ;; Auto vars:     Size  Location     Type
  2000 ;;  i               2   16[BANK1 ] short 
  2001 ;; Return value:  Size  Location     Type
  2002 ;;                  1    wreg      void 
  2003 ;; Registers used:
  2004 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2005 ;; Tracked objects:
  2006 ;;		On entry : 0/0
  2007 ;;		On exit  : 0/0
  2008 ;;		Unchanged: 0/0
  2009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2011 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2013 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2014 ;;Total ram usage:        2 bytes
  2015 ;; Hardware stack levels used: 1
  2016 ;; Hardware stack levels required when called: 17
  2017 ;; This function calls:
  2018 ;;		_printf
  2019 ;;		_setMotor
  2020 ;;		_setSteering
  2021 ;; This function is called by:
  2022 ;;		_loop
  2023 ;; This function uses a non-reentrant model
  2024 ;;
  2025                           
  2026                           	psect	text2
  2027  0054AC                     __ptext2:
  2028                           	callstack 0
  2029  0054AC                     _startAccell:
  2030                           	callstack 12
  2031  0054AC                     
  2032                           ;main.c: 106:     setSteering(0, Front);
  2033  0054AC  0E00               	movlw	0
  2034  0054AE  0100               	movlb	0	; () banked
  2035  0054B0  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  2036  0054B2  0E00               	movlw	0
  2037  0054B4  6F83               	movwf	setSteering@steering& (0+255),b
  2038  0054B6  0E03               	movlw	3
  2039  0054B8  6F85               	movwf	setSteering@steeringMode& (0+255),b
  2040  0054BA  EC86  F01C         	call	_setSteering	;wreg free
  2041  0054BE                     
  2042                           ;main.c: 107:     actMotorPow = (100) - (int16_t) ((240) / (20));
  2043  0054BE  0E00               	movlw	0
  2044  0054C0  0100               	movlb	0	; () banked
  2045  0054C2  6FEC               	movwf	(_actMotorPow+1)& (0+255),b
  2046  0054C4  0E58               	movlw	88
  2047  0054C6  6FEB               	movwf	_actMotorPow& (0+255),b
  2048  0054C8                     
  2049                           ; BSR set to: 0
  2050                           ;main.c: 108:     for (int16_t i = 0; i <= (int16_t) ((20) - ((100) / (int16_t) ((240) /
      +                           (20)))); ++i) {
  2051  0054C8  0E00               	movlw	0
  2052  0054CA  0101               	movlb	1	; () banked
  2053  0054CC  6FB7               	movwf	(startAccell@i+1)& (0+255),b
  2054  0054CE  0E00               	movlw	0
  2055  0054D0  6FB6               	movwf	startAccell@i& (0+255),b
  2056  0054D2                     l9195:
  2057                           
  2058                           ; BSR set to: 1
  2059                           ;main.c: 109:         actMotorPow += (int16_t) ((240) / (20));
  2060  0054D2  0E0C               	movlw	12
  2061  0054D4  0100               	movlb	0	; () banked
  2062  0054D6  27EB               	addwf	_actMotorPow& (0+255),f,b
  2063  0054D8  0E00               	movlw	0
  2064  0054DA  23EC               	addwfc	(_actMotorPow+1)& (0+255),f,b
  2065  0054DC                     
  2066                           ; BSR set to: 0
  2067                           ;main.c: 110:         setMotor(actMotorPow);
  2068  0054DC  C0EB  F018         	movff	_actMotorPow,setMotor@motorPower
  2069  0054E0  C0EC  F019         	movff	_actMotorPow+1,setMotor@motorPower+1
  2070  0054E4  EC90  F026         	call	_setMotor	;wreg free
  2071  0054E8                     
  2072                           ;main.c: 111:         cycle10ms = 0;
  2073  0054E8  0E00               	movlw	0
  2074  0054EA  0100               	movlb	0	; () banked
  2075  0054EC  6FFB               	movwf	_cycle10ms& (0+255),b	;volatile
  2076  0054EE                     l9201:
  2077                           
  2078                           ; BSR set to: 0
  2079  0054EE  51FB               	movf	_cycle10ms& (0+255),w,b	;volatile
  2080  0054F0  B4D8               	btfsc	status,2,c
  2081  0054F2  EF7D  F02A         	goto	u10361
  2082  0054F6  EF7F  F02A         	goto	u10360
  2083  0054FA                     u10361:
  2084  0054FA  EF77  F02A         	goto	l9201
  2085  0054FE                     u10360:
  2086  0054FE                     
  2087                           ; BSR set to: 0
  2088                           ;main.c: 113:     }
  2089  0054FE  0101               	movlb	1	; () banked
  2090  005500  4BB6               	infsnz	startAccell@i& (0+255),f,b
  2091  005502  2BB7               	incf	(startAccell@i+1)& (0+255),f,b
  2092  005504                     
  2093                           ; BSR set to: 1
  2094  005504  BFB7               	btfsc	(startAccell@i+1)& (0+255),7,b
  2095  005506  EF8E  F02A         	goto	u10371
  2096  00550A  51B7               	movf	(startAccell@i+1)& (0+255),w,b
  2097  00550C  E109               	bnz	u10370
  2098  00550E  0E0D               	movlw	13
  2099  005510  5DB6               	subwf	startAccell@i& (0+255),w,b
  2100  005512  A0D8               	btfss	status,0,c
  2101  005514  EF8E  F02A         	goto	u10371
  2102  005518  EF90  F02A         	goto	u10370
  2103  00551C                     u10371:
  2104  00551C  EF69  F02A         	goto	l9195
  2105  005520                     u10370:
  2106  005520                     
  2107                           ; BSR set to: 1
  2108                           ;main.c: 114:     printf("starAccelPower: %d\n", actMotorPow);
  2109  005520  0E48               	movlw	low STR_1
  2110  005522  6FAE               	movwf	printf@fmt& (0+255),b
  2111  005524  0E10               	movlw	high STR_1
  2112  005526  6FAF               	movwf	(printf@fmt+1)& (0+255),b
  2113  005528  C0EB  F1B0         	movff	_actMotorPow,?_printf+2
  2114  00552C  C0EC  F1B1         	movff	_actMotorPow+1,?_printf+3
  2115  005530  ECA0  F030         	call	_printf	;wreg free
  2116  005534                     
  2117                           ;main.c: 116:     cycle10ms = 0;
  2118  005534  0E00               	movlw	0
  2119  005536  0100               	movlb	0	; () banked
  2120  005538  6FFB               	movwf	_cycle10ms& (0+255),b	;volatile
  2121  00553A                     l9211:
  2122                           
  2123                           ; BSR set to: 0
  2124  00553A  0E12               	movlw	18
  2125  00553C  65FB               	cpfsgt	_cycle10ms& (0+255),b	;volatile
  2126  00553E  EFA3  F02A         	goto	u10381
  2127  005542  EFA5  F02A         	goto	u10380
  2128  005546                     u10381:
  2129  005546  EF9D  F02A         	goto	l9211
  2130  00554A                     u10380:
  2131  00554A                     
  2132                           ; BSR set to: 0
  2133  00554A  0012               	return		;funcret
  2134  00554C                     __end_of_startAccell:
  2135                           	callstack 0
  2136                           
  2137 ;; *************** function _getReverse *****************
  2138 ;; Defined at:
  2139 ;;		line 196 in file "main.c"
  2140 ;; Parameters:    Size  Location     Type
  2141 ;;		None
  2142 ;; Auto vars:     Size  Location     Type
  2143 ;;		None
  2144 ;; Return value:  Size  Location     Type
  2145 ;;                  1    wreg      void 
  2146 ;; Registers used:
  2147 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2148 ;; Tracked objects:
  2149 ;;		On entry : 0/0
  2150 ;;		On exit  : 0/0
  2151 ;;		Unchanged: 0/0
  2152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2157 ;;Total ram usage:        0 bytes
  2158 ;; Hardware stack levels used: 1
  2159 ;; Hardware stack levels required when called: 17
  2160 ;; This function calls:
  2161 ;;		_printf
  2162 ;; This function is called by:
  2163 ;;		_loop
  2164 ;; This function uses a non-reentrant model
  2165 ;;
  2166                           
  2167                           	psect	text3
  2168  004364                     __ptext3:
  2169                           	callstack 0
  2170  004364                     _getReverse:
  2171                           	callstack 12
  2172  004364                     
  2173                           ;main.c: 197:     if (distFront < (15)) {
  2174  004364  0100               	movlb	0	; () banked
  2175  004366  51FE               	movf	(_distFront+1)& (0+255),w,b	;volatile
  2176  004368  E107               	bnz	u10411
  2177  00436A  0E0F               	movlw	15
  2178  00436C  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
  2179  00436E  B0D8               	btfsc	status,0,c
  2180  004370  EFBC  F021         	goto	u10411
  2181  004374  EFBE  F021         	goto	u10410
  2182  004378                     u10411:
  2183  004378  EFC3  F021         	goto	l9239
  2184  00437C                     u10410:
  2185  00437C                     
  2186                           ; BSR set to: 0
  2187                           ;main.c: 198:         ++reverseCount;
  2188  00437C  0101               	movlb	1	; () banked
  2189  00437E  4B3A               	infsnz	_reverseCount& (0+255),f,b
  2190  004380  2B3B               	incf	(_reverseCount+1)& (0+255),f,b
  2191                           
  2192                           ;main.c: 199:     } else if(driveMode != ReverseRight && driveMode != ReverseLeft) {
  2193  004382  EFDA  F021         	goto	l9245
  2194  004386                     l9239:
  2195                           
  2196                           ; BSR set to: 0
  2197  004386  0E02               	movlw	2
  2198  004388  19FC               	xorwf	_driveMode& (0+255),w,b
  2199  00438A  B4D8               	btfsc	status,2,c
  2200  00438C  EFCA  F021         	goto	u10421
  2201  004390  EFCC  F021         	goto	u10420
  2202  004394                     u10421:
  2203  004394  EFDA  F021         	goto	l9245
  2204  004398                     u10420:
  2205  004398                     
  2206                           ; BSR set to: 0
  2207  004398  0E03               	movlw	3
  2208  00439A  19FC               	xorwf	_driveMode& (0+255),w,b
  2209  00439C  B4D8               	btfsc	status,2,c
  2210  00439E  EFD3  F021         	goto	u10431
  2211  0043A2  EFD5  F021         	goto	u10430
  2212  0043A6                     u10431:
  2213  0043A6  EFDA  F021         	goto	l9245
  2214  0043AA                     u10430:
  2215  0043AA                     
  2216                           ; BSR set to: 0
  2217                           ;main.c: 200:         reverseCount = 0;
  2218  0043AA  0E00               	movlw	0
  2219  0043AC  0101               	movlb	1	; () banked
  2220  0043AE  6F3B               	movwf	(_reverseCount+1)& (0+255),b
  2221  0043B0  0E00               	movlw	0
  2222  0043B2  6F3A               	movwf	_reverseCount& (0+255),b
  2223  0043B4                     l9245:
  2224                           
  2225                           ;main.c: 203:     if (reverseCount > (50)) {
  2226  0043B4  0101               	movlb	1	; () banked
  2227  0043B6  513B               	movf	(_reverseCount+1)& (0+255),w,b
  2228  0043B8  E109               	bnz	u10440
  2229  0043BA  0E33               	movlw	51
  2230  0043BC  5D3A               	subwf	_reverseCount& (0+255),w,b
  2231  0043BE  A0D8               	btfss	status,0,c
  2232  0043C0  EFE4  F021         	goto	u10441
  2233  0043C4  EFE6  F021         	goto	u10440
  2234  0043C8                     u10441:
  2235  0043C8  EF58  F022         	goto	l1316
  2236  0043CC                     u10440:
  2237  0043CC                     
  2238                           ; BSR set to: 1
  2239                           ;main.c: 204:         ++reverseTime;
  2240  0043CC  4B2C               	infsnz	_reverseTime& (0+255),f,b
  2241  0043CE  2B2D               	incf	(_reverseTime+1)& (0+255),f,b
  2242  0043D0                     
  2243                           ; BSR set to: 1
  2244                           ;main.c: 206:         if (driveMode != ReverseRight && driveMode != ReverseLeft) {
  2245  0043D0  0E02               	movlw	2
  2246  0043D2  0100               	movlb	0	; () banked
  2247  0043D4  19FC               	xorwf	_driveMode& (0+255),w,b
  2248  0043D6  B4D8               	btfsc	status,2,c
  2249  0043D8  EFF0  F021         	goto	u10451
  2250  0043DC  EFF2  F021         	goto	u10450
  2251  0043E0                     u10451:
  2252  0043E0  EF1C  F022         	goto	l9263
  2253  0043E4                     u10450:
  2254  0043E4                     
  2255                           ; BSR set to: 0
  2256  0043E4  0E03               	movlw	3
  2257  0043E6  19FC               	xorwf	_driveMode& (0+255),w,b
  2258  0043E8  B4D8               	btfsc	status,2,c
  2259  0043EA  EFF9  F021         	goto	u10461
  2260  0043EE  EFFB  F021         	goto	u10460
  2261  0043F2                     u10461:
  2262  0043F2  EF1C  F022         	goto	l9263
  2263  0043F6                     u10460:
  2264  0043F6                     
  2265                           ; BSR set to: 0
  2266                           ;main.c: 207:             if (distLeft > distRight) {
  2267  0043F6  51F7               	movf	_distLeft& (0+255),w,b	;volatile
  2268  0043F8  5DF5               	subwf	_distRight& (0+255),w,b	;volatile
  2269  0043FA  51F8               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  2270  0043FC  59F6               	subwfb	(_distRight+1)& (0+255),w,b	;volatile
  2271  0043FE  B0D8               	btfsc	status,0,c
  2272  004400  EF04  F022         	goto	u10471
  2273  004404  EF06  F022         	goto	u10470
  2274  004408                     u10471:
  2275  004408  EF12  F022         	goto	l9259
  2276  00440C                     u10470:
  2277  00440C                     
  2278                           ; BSR set to: 0
  2279                           ;main.c: 208:                 printf("ReverseRigth\n");
  2280  00440C  0E7A               	movlw	low STR_6
  2281  00440E  0101               	movlb	1	; () banked
  2282  004410  6FAE               	movwf	printf@fmt& (0+255),b
  2283  004412  0E10               	movlw	high STR_6
  2284  004414  6FAF               	movwf	(printf@fmt+1)& (0+255),b
  2285  004416  ECA0  F030         	call	_printf	;wreg free
  2286  00441A                     
  2287                           ;main.c: 209:                 driveMode = ReverseRight;
  2288  00441A  0E02               	movlw	2
  2289  00441C  0100               	movlb	0	; () banked
  2290  00441E  6FFC               	movwf	_driveMode& (0+255),b
  2291                           
  2292                           ;main.c: 210:             } else {
  2293  004420  EF1C  F022         	goto	l9263
  2294  004424                     l9259:
  2295                           
  2296                           ; BSR set to: 0
  2297                           ;main.c: 211:                 printf("ReverseLeft\n");
  2298  004424  0E88               	movlw	low STR_7
  2299  004426  0101               	movlb	1	; () banked
  2300  004428  6FAE               	movwf	printf@fmt& (0+255),b
  2301  00442A  0E10               	movlw	high STR_7
  2302  00442C  6FAF               	movwf	(printf@fmt+1)& (0+255),b
  2303  00442E  ECA0  F030         	call	_printf	;wreg free
  2304  004432                     
  2305                           ;main.c: 212:                 driveMode = ReverseLeft;
  2306  004432  0E03               	movlw	3
  2307  004434  0100               	movlb	0	; () banked
  2308  004436  6FFC               	movwf	_driveMode& (0+255),b
  2309  004438                     l9263:
  2310                           
  2311                           ; BSR set to: 0
  2312                           ;main.c: 216:         if (distFront > (35) || reverseTime > (300)) {
  2313  004438  51FE               	movf	(_distFront+1)& (0+255),w,b	;volatile
  2314  00443A  E107               	bnz	u10481
  2315  00443C  0E24               	movlw	36
  2316  00443E  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
  2317  004440  B0D8               	btfsc	status,0,c
  2318  004442  EF25  F022         	goto	u10481
  2319  004446  EF27  F022         	goto	u10480
  2320  00444A                     u10481:
  2321  00444A  EF36  F022         	goto	l9267
  2322  00444E                     u10480:
  2323  00444E                     
  2324                           ; BSR set to: 0
  2325  00444E  0101               	movlb	1	; () banked
  2326  004450  BF2D               	btfsc	(_reverseTime+1)& (0+255),7,b
  2327  004452  EF34  F022         	goto	u10491
  2328  004456  0E2D               	movlw	45
  2329  004458  5D2C               	subwf	_reverseTime& (0+255),w,b
  2330  00445A  0E01               	movlw	1
  2331  00445C  592D               	subwfb	(_reverseTime+1)& (0+255),w,b
  2332  00445E  A0D8               	btfss	status,0,c
  2333  004460  EF34  F022         	goto	u10491
  2334  004464  EF36  F022         	goto	u10490
  2335  004468                     u10491:
  2336  004468  EF58  F022         	goto	l1316
  2337  00446C                     u10490:
  2338  00446C                     l9267:
  2339                           
  2340                           ;main.c: 217:             printf("Stop Reverse\n");
  2341  00446C  0E6C               	movlw	low STR_8
  2342  00446E  0101               	movlb	1	; () banked
  2343  004470  6FAE               	movwf	printf@fmt& (0+255),b
  2344  004472  0E10               	movlw	high STR_8
  2345  004474  6FAF               	movwf	(printf@fmt+1)& (0+255),b
  2346  004476  ECA0  F030         	call	_printf	;wreg free
  2347  00447A                     
  2348                           ;main.c: 218:             if (distLeft > distRight) {
  2349  00447A  0100               	movlb	0	; () banked
  2350  00447C  51F7               	movf	_distLeft& (0+255),w,b	;volatile
  2351  00447E  5DF5               	subwf	_distRight& (0+255),w,b	;volatile
  2352  004480  51F8               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  2353  004482  59F6               	subwfb	(_distRight+1)& (0+255),w,b	;volatile
  2354  004484  B0D8               	btfsc	status,0,c
  2355  004486  EF47  F022         	goto	u10501
  2356  00448A  EF49  F022         	goto	u10500
  2357  00448E                     u10501:
  2358  00448E  EF4D  F022         	goto	l9273
  2359  004492                     u10500:
  2360  004492                     
  2361                           ; BSR set to: 0
  2362                           ;main.c: 219:                 driveMode = CurveLeft;
  2363  004492  0E04               	movlw	4
  2364  004494  6FFC               	movwf	_driveMode& (0+255),b
  2365                           
  2366                           ;main.c: 220:             } else {
  2367  004496  EF4F  F022         	goto	l1315
  2368  00449A                     l9273:
  2369                           
  2370                           ; BSR set to: 0
  2371                           ;main.c: 221:                 driveMode = CurveRight;
  2372  00449A  0E05               	movlw	5
  2373  00449C  6FFC               	movwf	_driveMode& (0+255),b
  2374  00449E                     l1315:
  2375                           
  2376                           ; BSR set to: 0
  2377                           ;main.c: 224:             reverseCount = 0;
  2378  00449E  0E00               	movlw	0
  2379  0044A0  0101               	movlb	1	; () banked
  2380  0044A2  6F3B               	movwf	(_reverseCount+1)& (0+255),b
  2381  0044A4  0E00               	movlw	0
  2382  0044A6  6F3A               	movwf	_reverseCount& (0+255),b
  2383                           
  2384                           ;main.c: 225:             reverseTime = 0;
  2385  0044A8  0E00               	movlw	0
  2386  0044AA  6F2D               	movwf	(_reverseTime+1)& (0+255),b
  2387  0044AC  0E00               	movlw	0
  2388  0044AE  6F2C               	movwf	_reverseTime& (0+255),b
  2389  0044B0                     l1316:
  2390                           
  2391                           ; BSR set to: 1
  2392  0044B0  0012               	return		;funcret
  2393  0044B2                     __end_of_getReverse:
  2394                           	callstack 0
  2395                           
  2396 ;; *************** function _getCurve *****************
  2397 ;; Defined at:
  2398 ;;		line 133 in file "main.c"
  2399 ;; Parameters:    Size  Location     Type
  2400 ;;		None
  2401 ;; Auto vars:     Size  Location     Type
  2402 ;;  deltaRight      2   23[COMRAM] short 
  2403 ;;  deltaLeft       2   21[COMRAM] short 
  2404 ;; Return value:  Size  Location     Type
  2405 ;;                  1    wreg      void 
  2406 ;; Registers used:
  2407 ;;		wreg, status,2, status,0
  2408 ;; Tracked objects:
  2409 ;;		On entry : 0/0
  2410 ;;		On exit  : 0/0
  2411 ;;		Unchanged: 0/0
  2412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2414 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2415 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2416 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2417 ;;Total ram usage:        6 bytes
  2418 ;; Hardware stack levels used: 1
  2419 ;; Hardware stack levels required when called: 8
  2420 ;; This function calls:
  2421 ;;		Nothing
  2422 ;; This function is called by:
  2423 ;;		_loop
  2424 ;; This function uses a non-reentrant model
  2425 ;;
  2426                           
  2427                           	psect	text4
  2428  003B02                     __ptext4:
  2429                           	callstack 0
  2430  003B02                     _getCurve:
  2431                           	callstack 21
  2432  003B02                     
  2433                           ;main.c: 134:     int16_t deltaLeft;;main.c: 135:     int16_t deltaRight;;main.c: 137:  
      +                             switch (curveMode) {
  2434  003B02  EF4C  F01E         	goto	l7035
  2435  003B06                     l6989:
  2436                           
  2437                           ;main.c: 139:             deltaLeft = (int16_t) (distLeft - oldDistLeft);
  2438  003B06  0101               	movlb	1	; () banked
  2439  003B08  5138               	movf	_oldDistLeft& (0+255),w,b
  2440  003B0A  0100               	movlb	0	; () banked
  2441  003B0C  5DF7               	subwf	_distLeft& (0+255),w,b	;volatile
  2442  003B0E  6E16               	movwf	getCurve@deltaLeft^0,c
  2443  003B10  0101               	movlb	1	; () banked
  2444  003B12  5139               	movf	(_oldDistLeft+1)& (0+255),w,b
  2445  003B14  0100               	movlb	0	; () banked
  2446  003B16  59F8               	subwfb	(_distLeft+1)& (0+255),w,b	;volatile
  2447  003B18  6E17               	movwf	(getCurve@deltaLeft+1)^0,c
  2448                           
  2449                           ;main.c: 140:             deltaRight = (int16_t) (distRight - oldDistRight);
  2450  003B1A  0101               	movlb	1	; () banked
  2451  003B1C  5136               	movf	_oldDistRight& (0+255),w,b
  2452  003B1E  0100               	movlb	0	; () banked
  2453  003B20  5DF5               	subwf	_distRight& (0+255),w,b	;volatile
  2454  003B22  6E18               	movwf	getCurve@deltaRight^0,c
  2455  003B24  0101               	movlb	1	; () banked
  2456  003B26  5137               	movf	(_oldDistRight+1)& (0+255),w,b
  2457  003B28  0100               	movlb	0	; () banked
  2458  003B2A  59F6               	subwfb	(_distRight+1)& (0+255),w,b	;volatile
  2459  003B2C  6E19               	movwf	(getCurve@deltaRight+1)^0,c
  2460                           
  2461                           ;main.c: 143:             if (deltaLeft > (30) && deltaLeft < (300) && oldDistLeft < (12
      +                          5)) {
  2462  003B2E  BE17               	btfsc	(getCurve@deltaLeft+1)^0,7,c
  2463  003B30  EFA3  F01D         	goto	u6791
  2464  003B34  5017               	movf	(getCurve@deltaLeft+1)^0,w,c
  2465  003B36  E109               	bnz	u6790
  2466  003B38  0E1F               	movlw	31
  2467  003B3A  5C16               	subwf	getCurve@deltaLeft^0,w,c
  2468  003B3C  A0D8               	btfss	status,0,c
  2469  003B3E  EFA3  F01D         	goto	u6791
  2470  003B42  EFA5  F01D         	goto	u6790
  2471  003B46                     u6791:
  2472  003B46  EFC9  F01D         	goto	l6999
  2473  003B4A                     u6790:
  2474  003B4A                     
  2475                           ; BSR set to: 0
  2476  003B4A  BE17               	btfsc	(getCurve@deltaLeft+1)^0,7,c
  2477  003B4C  EFB3  F01D         	goto	u6800
  2478  003B50  0E2C               	movlw	44
  2479  003B52  5C16               	subwf	getCurve@deltaLeft^0,w,c
  2480  003B54  0E01               	movlw	1
  2481  003B56  5817               	subwfb	(getCurve@deltaLeft+1)^0,w,c
  2482  003B58  B0D8               	btfsc	status,0,c
  2483  003B5A  EFB1  F01D         	goto	u6801
  2484  003B5E  EFB3  F01D         	goto	u6800
  2485  003B62                     u6801:
  2486  003B62  EFC9  F01D         	goto	l6999
  2487  003B66                     u6800:
  2488  003B66                     
  2489                           ; BSR set to: 0
  2490  003B66  0101               	movlb	1	; () banked
  2491  003B68  5139               	movf	(_oldDistLeft+1)& (0+255),w,b
  2492  003B6A  E107               	bnz	u6811
  2493  003B6C  0E7D               	movlw	125
  2494  003B6E  5D38               	subwf	_oldDistLeft& (0+255),w,b
  2495  003B70  B0D8               	btfsc	status,0,c
  2496  003B72  EFBD  F01D         	goto	u6811
  2497  003B76  EFBF  F01D         	goto	u6810
  2498  003B7A                     u6811:
  2499  003B7A  EFC9  F01D         	goto	l6999
  2500  003B7E                     u6810:
  2501  003B7E                     
  2502                           ; BSR set to: 1
  2503                           ;main.c: 144:                 delay = 0;
  2504  003B7E  0E00               	movlw	0
  2505  003B80  6E40               	movwf	_delay^0,c
  2506                           
  2507                           ;main.c: 145:                 curveMode = BeforeCurve;
  2508  003B82  0E01               	movlw	1
  2509  003B84  6E41               	movwf	_curveMode^0,c
  2510                           
  2511                           ;main.c: 146:                 driveMode = CurveLeft;
  2512  003B86  0E04               	movlw	4
  2513  003B88  0100               	movlb	0	; () banked
  2514  003B8A  6FFC               	movwf	_driveMode& (0+255),b
  2515  003B8C                     
  2516                           ; BSR set to: 0
  2517                           ;main.c: 147:                 ++curveLeftCount;
  2518  003B8C  2BFA               	incf	_curveLeftCount& (0+255),f,b
  2519                           
  2520                           ;main.c: 150:             } else if (deltaRight > (30) && deltaRight < (300) && oldDistR
      +                          ight < (125)) {
  2521  003B8E  EF69  F01E         	goto	l1288
  2522  003B92                     l6999:
  2523  003B92  BE19               	btfsc	(getCurve@deltaRight+1)^0,7,c
  2524  003B94  EFD5  F01D         	goto	u6821
  2525  003B98  5019               	movf	(getCurve@deltaRight+1)^0,w,c
  2526  003B9A  E109               	bnz	u6820
  2527  003B9C  0E1F               	movlw	31
  2528  003B9E  5C18               	subwf	getCurve@deltaRight^0,w,c
  2529  003BA0  A0D8               	btfss	status,0,c
  2530  003BA2  EFD5  F01D         	goto	u6821
  2531  003BA6  EFD7  F01D         	goto	u6820
  2532  003BAA                     u6821:
  2533  003BAA  EF69  F01E         	goto	l1288
  2534  003BAE                     u6820:
  2535  003BAE  BE19               	btfsc	(getCurve@deltaRight+1)^0,7,c
  2536  003BB0  EFE5  F01D         	goto	u6830
  2537  003BB4  0E2C               	movlw	44
  2538  003BB6  5C18               	subwf	getCurve@deltaRight^0,w,c
  2539  003BB8  0E01               	movlw	1
  2540  003BBA  5819               	subwfb	(getCurve@deltaRight+1)^0,w,c
  2541  003BBC  B0D8               	btfsc	status,0,c
  2542  003BBE  EFE3  F01D         	goto	u6831
  2543  003BC2  EFE5  F01D         	goto	u6830
  2544  003BC6                     u6831:
  2545  003BC6  EF69  F01E         	goto	l1288
  2546  003BCA                     u6830:
  2547  003BCA  0101               	movlb	1	; () banked
  2548  003BCC  5137               	movf	(_oldDistRight+1)& (0+255),w,b
  2549  003BCE  E107               	bnz	u6841
  2550  003BD0  0E7D               	movlw	125
  2551  003BD2  5D36               	subwf	_oldDistRight& (0+255),w,b
  2552  003BD4  B0D8               	btfsc	status,0,c
  2553  003BD6  EFEF  F01D         	goto	u6841
  2554  003BDA  EFF1  F01D         	goto	u6840
  2555  003BDE                     u6841:
  2556  003BDE  EF69  F01E         	goto	l1288
  2557  003BE2                     u6840:
  2558  003BE2                     
  2559                           ; BSR set to: 1
  2560                           ;main.c: 151:                 delay = 0;
  2561  003BE2  0E00               	movlw	0
  2562  003BE4  6E40               	movwf	_delay^0,c
  2563                           
  2564                           ;main.c: 152:                 curveMode = BeforeCurve;
  2565  003BE6  0E01               	movlw	1
  2566  003BE8  6E41               	movwf	_curveMode^0,c
  2567                           
  2568                           ;main.c: 153:                 driveMode = CurveRight;
  2569  003BEA  0E05               	movlw	5
  2570  003BEC  0100               	movlb	0	; () banked
  2571  003BEE  6FFC               	movwf	_driveMode& (0+255),b
  2572  003BF0                     
  2573                           ; BSR set to: 0
  2574                           ;main.c: 154:                 ++curveRightCount;
  2575  003BF0  2BF9               	incf	_curveRightCount& (0+255),f,b
  2576  003BF2  EF69  F01E         	goto	l1288
  2577  003BF6                     l7009:
  2578                           
  2579                           ;main.c: 162:             if (delay >= (15)) {
  2580  003BF6  0E0E               	movlw	14
  2581  003BF8  6440               	cpfsgt	_delay^0,c
  2582  003BFA  EF01  F01E         	goto	u6851
  2583  003BFE  EF03  F01E         	goto	u6850
  2584  003C02                     u6851:
  2585  003C02  EF09  F01E         	goto	l7013
  2586  003C06                     u6850:
  2587  003C06                     
  2588                           ;main.c: 163:                 delay = 0;
  2589  003C06  0E00               	movlw	0
  2590  003C08  6E40               	movwf	_delay^0,c
  2591                           
  2592                           ;main.c: 164:                 curveMode = InCurve;
  2593  003C0A  0E02               	movlw	2
  2594  003C0C  6E41               	movwf	_curveMode^0,c
  2595                           
  2596                           ;main.c: 166:             } else {
  2597  003C0E  EF69  F01E         	goto	l1288
  2598  003C12                     l7013:
  2599                           
  2600                           ;main.c: 167:                 ++delay;
  2601  003C12  2A40               	incf	_delay^0,f,c
  2602  003C14  EF69  F01E         	goto	l1288
  2603  003C18                     l7015:
  2604                           
  2605                           ;main.c: 171:             if (delay >= (20)) {
  2606  003C18  0E13               	movlw	19
  2607  003C1A  6440               	cpfsgt	_delay^0,c
  2608  003C1C  EF12  F01E         	goto	u6861
  2609  003C20  EF14  F01E         	goto	u6860
  2610  003C24                     u6861:
  2611  003C24  EF09  F01E         	goto	l7013
  2612  003C28                     u6860:
  2613  003C28                     
  2614                           ;main.c: 172:                 if (distLeft < (45) || distRight < (45) || distFront > (30
      +                          0)) {
  2615  003C28  0100               	movlb	0	; () banked
  2616  003C2A  51F8               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  2617  003C2C  E109               	bnz	u6870
  2618  003C2E  0E2D               	movlw	45
  2619  003C30  5DF7               	subwf	_distLeft& (0+255),w,b	;volatile
  2620  003C32  A0D8               	btfss	status,0,c
  2621  003C34  EF1E  F01E         	goto	u6871
  2622  003C38  EF20  F01E         	goto	u6870
  2623  003C3C                     u6871:
  2624  003C3C  EF36  F01E         	goto	l7023
  2625  003C40                     u6870:
  2626  003C40                     
  2627                           ; BSR set to: 0
  2628  003C40  51F6               	movf	(_distRight+1)& (0+255),w,b	;volatile
  2629  003C42  E109               	bnz	u6880
  2630  003C44  0E2D               	movlw	45
  2631  003C46  5DF5               	subwf	_distRight& (0+255),w,b	;volatile
  2632  003C48  A0D8               	btfss	status,0,c
  2633  003C4A  EF29  F01E         	goto	u6881
  2634  003C4E  EF2B  F01E         	goto	u6880
  2635  003C52                     u6881:
  2636  003C52  EF36  F01E         	goto	l7023
  2637  003C56                     u6880:
  2638  003C56                     
  2639                           ; BSR set to: 0
  2640  003C56  0E2D               	movlw	45
  2641  003C58  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
  2642  003C5A  0E01               	movlw	1
  2643  003C5C  59FE               	subwfb	(_distFront+1)& (0+255),w,b	;volatile
  2644  003C5E  A0D8               	btfss	status,0,c
  2645  003C60  EF34  F01E         	goto	u6891
  2646  003C64  EF36  F01E         	goto	u6890
  2647  003C68                     u6891:
  2648  003C68  EF69  F01E         	goto	l1288
  2649  003C6C                     u6890:
  2650  003C6C                     l7023:
  2651                           
  2652                           ; BSR set to: 0
  2653                           ;main.c: 173:                     delay = 0;
  2654  003C6C  0E00               	movlw	0
  2655  003C6E  6E40               	movwf	_delay^0,c
  2656                           
  2657                           ;main.c: 174:                     curveMode = AfterCurve;
  2658  003C70  0E03               	movlw	3
  2659  003C72  6E41               	movwf	_curveMode^0,c
  2660                           
  2661                           ;main.c: 175:                     driveMode = Straight;
  2662  003C74  0E00               	movlw	0
  2663  003C76  6FFC               	movwf	_driveMode& (0+255),b
  2664  003C78  EF69  F01E         	goto	l1288
  2665  003C7C                     l7027:
  2666                           
  2667                           ;main.c: 183:             if (delay >= (1)) {
  2668  003C7C  5040               	movf	_delay^0,w,c
  2669  003C7E  B4D8               	btfsc	status,2,c
  2670  003C80  EF44  F01E         	goto	u6901
  2671  003C84  EF46  F01E         	goto	u6900
  2672  003C88                     u6901:
  2673  003C88  EF09  F01E         	goto	l7013
  2674  003C8C                     u6900:
  2675  003C8C                     
  2676                           ;main.c: 184:                 delay = 0;
  2677  003C8C  0E00               	movlw	0
  2678  003C8E  6E40               	movwf	_delay^0,c
  2679                           
  2680                           ;main.c: 185:                 curveMode = OutCurve;
  2681  003C90  0E00               	movlw	0
  2682  003C92  6E41               	movwf	_curveMode^0,c
  2683                           
  2684                           ;main.c: 187:             } else {
  2685  003C94  EF69  F01E         	goto	l1288
  2686  003C98                     l7035:
  2687  003C98  5041               	movf	_curveMode^0,w,c
  2688  003C9A  6E14               	movwf	??_getCurve^0,c
  2689  003C9C  6A15               	clrf	(??_getCurve+1)^0,c
  2690                           
  2691                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2692                           ; Switch size 1, requested type "simple"
  2693                           ; Number of cases is 1, Range of values is 0 to 0
  2694                           ; switch strategies available:
  2695                           ; Name         Instructions Cycles
  2696                           ; simple_byte            4     3 (average)
  2697                           ;	Chosen strategy is simple_byte
  2698  003C9E  5015               	movf	(??_getCurve+1)^0,w,c
  2699  003CA0  0A00               	xorlw	0	; case 0
  2700  003CA2  B4D8               	btfsc	status,2,c
  2701  003CA4  EF56  F01E         	goto	l9621
  2702  003CA8  EF69  F01E         	goto	l1288
  2703  003CAC                     l9621:
  2704                           
  2705                           ; Switch size 1, requested type "simple"
  2706                           ; Number of cases is 4, Range of values is 0 to 3
  2707                           ; switch strategies available:
  2708                           ; Name         Instructions Cycles
  2709                           ; simple_byte           13     7 (average)
  2710                           ;	Chosen strategy is simple_byte
  2711  003CAC  5014               	movf	??_getCurve^0,w,c
  2712  003CAE  0A00               	xorlw	0	; case 0
  2713  003CB0  B4D8               	btfsc	status,2,c
  2714  003CB2  EF83  F01D         	goto	l6989
  2715  003CB6  0A01               	xorlw	1	; case 1
  2716  003CB8  B4D8               	btfsc	status,2,c
  2717  003CBA  EFFB  F01D         	goto	l7009
  2718  003CBE  0A03               	xorlw	3	; case 2
  2719  003CC0  B4D8               	btfsc	status,2,c
  2720  003CC2  EF0C  F01E         	goto	l7015
  2721  003CC6  0A01               	xorlw	1	; case 3
  2722  003CC8  B4D8               	btfsc	status,2,c
  2723  003CCA  EF3E  F01E         	goto	l7027
  2724  003CCE  EF69  F01E         	goto	l1288
  2725  003CD2                     l1288:
  2726                           
  2727                           ;main.c: 192:     oldDistLeft = distLeft;
  2728  003CD2  C0F7  F138         	movff	_distLeft,_oldDistLeft	;volatile
  2729  003CD6  C0F8  F139         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  2730                           
  2731                           ;main.c: 193:     oldDistRight = distRight;
  2732  003CDA  C0F5  F136         	movff	_distRight,_oldDistRight	;volatile
  2733  003CDE  C0F6  F137         	movff	_distRight+1,_oldDistRight+1	;volatile
  2734  003CE2  0012               	return		;funcret
  2735  003CE4                     __end_of_getCurve:
  2736                           	callstack 0
  2737                           
  2738 ;; *************** function _checkCurveCount *****************
  2739 ;; Defined at:
  2740 ;;		line 120 in file "main.c"
  2741 ;; Parameters:    Size  Location     Type
  2742 ;;		None
  2743 ;; Auto vars:     Size  Location     Type
  2744 ;;  roundTime       4   16[BANK1 ] float 
  2745 ;; Return value:  Size  Location     Type
  2746 ;;                  1    wreg      void 
  2747 ;; Registers used:
  2748 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2749 ;; Tracked objects:
  2750 ;;		On entry : 0/0
  2751 ;;		On exit  : 0/0
  2752 ;;		Unchanged: 0/0
  2753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2755 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2757 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2758 ;;Total ram usage:        4 bytes
  2759 ;; Hardware stack levels used: 1
  2760 ;; Hardware stack levels required when called: 17
  2761 ;; This function calls:
  2762 ;;		___lwdiv
  2763 ;;		___xxtofl
  2764 ;;		_printf
  2765 ;; This function is called by:
  2766 ;;		_loop
  2767 ;; This function uses a non-reentrant model
  2768 ;;
  2769                           
  2770                           	psect	text5
  2771  004ED2                     __ptext5:
  2772                           	callstack 0
  2773  004ED2                     _checkCurveCount:
  2774                           	callstack 12
  2775  004ED2                     
  2776                           ;main.c: 121:     if (distFront > 480 && roundTimeCount > 500 ) {
  2777  004ED2  0EE1               	movlw	225
  2778  004ED4  0100               	movlb	0	; () banked
  2779  004ED6  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
  2780  004ED8  0E01               	movlw	1
  2781  004EDA  59FE               	subwfb	(_distFront+1)& (0+255),w,b	;volatile
  2782  004EDC  A0D8               	btfss	status,0,c
  2783  004EDE  EF73  F027         	goto	u10661
  2784  004EE2  EF75  F027         	goto	u10660
  2785  004EE6                     u10661:
  2786  004EE6  EFCE  F027         	goto	l1280
  2787  004EEA                     u10660:
  2788  004EEA                     
  2789                           ; BSR set to: 0
  2790  004EEA  0EF5               	movlw	245
  2791  004EEC  5DF1               	subwf	_roundTimeCount& (0+255),w,b	;volatile
  2792  004EEE  0E01               	movlw	1
  2793  004EF0  59F2               	subwfb	(_roundTimeCount+1)& (0+255),w,b	;volatile
  2794  004EF2  A0D8               	btfss	status,0,c
  2795  004EF4  EF7E  F027         	goto	u10671
  2796  004EF8  EF80  F027         	goto	u10670
  2797  004EFC                     u10671:
  2798  004EFC  EFCE  F027         	goto	l1280
  2799  004F00                     u10670:
  2800  004F00                     
  2801                           ; BSR set to: 0
  2802                           ;main.c: 122:         float roundTime = roundTimeCount / 100;
  2803  004F00  0E00               	movlw	0
  2804  004F02  6E17               	movwf	(___lwdiv@divisor+1)^0,c
  2805  004F04  0E64               	movlw	100
  2806  004F06  6E16               	movwf	___lwdiv@divisor^0,c
  2807  004F08  C0F1  F014         	movff	_roundTimeCount,___lwdiv@dividend	;volatile
  2808  004F0C  C0F2  F015         	movff	_roundTimeCount+1,___lwdiv@dividend+1	;volatile
  2809  004F10  EC84  F02B         	call	___lwdiv	;wreg free
  2810  004F14  C014  F01C         	movff	?___lwdiv,___xxtofl@val
  2811  004F18  C015  F01D         	movff	?___lwdiv+1,___xxtofl@val+1
  2812  004F1C  6A1E               	clrf	(___xxtofl@val+2)^0,c
  2813  004F1E  6A1F               	clrf	(___xxtofl@val+3)^0,c
  2814  004F20  0E00               	movlw	0
  2815  004F22  EC62  F01F         	call	___xxtofl
  2816  004F26  C01C  F1B6         	movff	?___xxtofl,checkCurveCount@roundTime
  2817  004F2A  C01D  F1B7         	movff	?___xxtofl+1,checkCurveCount@roundTime+1
  2818  004F2E  C01E  F1B8         	movff	?___xxtofl+2,checkCurveCount@roundTime+2
  2819  004F32  C01F  F1B9         	movff	?___xxtofl+3,checkCurveCount@roundTime+3
  2820  004F36                     
  2821                           ;main.c: 123:         printf("Reset CurveCount!  |   ");
  2822  004F36  0E1B               	movlw	low STR_2
  2823  004F38  0101               	movlb	1	; () banked
  2824  004F3A  6FAE               	movwf	printf@fmt& (0+255),b
  2825  004F3C  0E10               	movlw	high STR_2
  2826  004F3E  6FAF               	movwf	(printf@fmt+1)& (0+255),b
  2827  004F40  ECA0  F030         	call	_printf	;wreg free
  2828  004F44                     
  2829                           ;main.c: 124:         printf("CurveLeftCount: %u   |   ", curveLeftCount);
  2830  004F44  0E01               	movlw	low STR_3
  2831  004F46  0101               	movlb	1	; () banked
  2832  004F48  6FAE               	movwf	printf@fmt& (0+255),b
  2833  004F4A  0E10               	movlw	high STR_3
  2834  004F4C  6FAF               	movwf	(printf@fmt+1)& (0+255),b
  2835  004F4E  C0FA  F1B0         	movff	_curveLeftCount,?_printf+2
  2836  004F52  6BB1               	clrf	(?_printf+3)& (0+255),b
  2837  004F54  ECA0  F030         	call	_printf	;wreg free
  2838  004F58                     
  2839                           ;main.c: 125:         printf("CurveRightCount: %u\n", curveRightCount);
  2840  004F58  0E33               	movlw	low STR_4
  2841  004F5A  0101               	movlb	1	; () banked
  2842  004F5C  6FAE               	movwf	printf@fmt& (0+255),b
  2843  004F5E  0E10               	movlw	high STR_4
  2844  004F60  6FAF               	movwf	(printf@fmt+1)& (0+255),b
  2845  004F62  C0F9  F1B0         	movff	_curveRightCount,?_printf+2
  2846  004F66  6BB1               	clrf	(?_printf+3)& (0+255),b
  2847  004F68  ECA0  F030         	call	_printf	;wreg free
  2848  004F6C                     
  2849                           ;main.c: 126:         printf("RoundTime: %f\n\n", roundTime);
  2850  004F6C  0E5C               	movlw	low STR_5
  2851  004F6E  0101               	movlb	1	; () banked
  2852  004F70  6FAE               	movwf	printf@fmt& (0+255),b
  2853  004F72  0E10               	movlw	high STR_5
  2854  004F74  6FAF               	movwf	(printf@fmt+1)& (0+255),b
  2855  004F76  C1B6  F1B0         	movff	checkCurveCount@roundTime,?_printf+2
  2856  004F7A  C1B7  F1B1         	movff	checkCurveCount@roundTime+1,?_printf+3
  2857  004F7E  C1B8  F1B2         	movff	checkCurveCount@roundTime+2,?_printf+4
  2858  004F82  C1B9  F1B3         	movff	checkCurveCount@roundTime+3,?_printf+5
  2859  004F86  ECA0  F030         	call	_printf	;wreg free
  2860  004F8A                     
  2861                           ;main.c: 127:         roundTimeCount = 0;
  2862  004F8A  0E00               	movlw	0
  2863  004F8C  0100               	movlb	0	; () banked
  2864  004F8E  6FF2               	movwf	(_roundTimeCount+1)& (0+255),b	;volatile
  2865  004F90  0E00               	movlw	0
  2866  004F92  6FF1               	movwf	_roundTimeCount& (0+255),b	;volatile
  2867  004F94                     
  2868                           ; BSR set to: 0
  2869                           ;main.c: 128:         curveRightCount = 0;
  2870  004F94  0E00               	movlw	0
  2871  004F96  6FF9               	movwf	_curveRightCount& (0+255),b
  2872  004F98                     
  2873                           ; BSR set to: 0
  2874                           ;main.c: 129:         curveLeftCount = 0;
  2875  004F98  0E00               	movlw	0
  2876  004F9A  6FFA               	movwf	_curveLeftCount& (0+255),b
  2877  004F9C                     l1280:
  2878                           
  2879                           ; BSR set to: 0
  2880  004F9C  0012               	return		;funcret
  2881  004F9E                     __end_of_checkCurveCount:
  2882                           	callstack 0
  2883                           
  2884 ;; *************** function _printf *****************
  2885 ;; Defined at:
  2886 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
  2887 ;; Parameters:    Size  Location     Type
  2888 ;;  fmt             2    8[BANK1 ] PTR const unsigned char 
  2889 ;;		 -> STR_8(14), STR_7(13), STR_6(14), STR_5(16), 
  2890 ;;		 -> STR_4(21), STR_3(26), STR_2(24), STR_1(20), 
  2891 ;; Auto vars:     Size  Location     Type
  2892 ;;  ap              2   14[BANK1 ] PTR void [1]
  2893 ;;		 -> ?_printf(2), 
  2894 ;;  ret             2    0        int 
  2895 ;; Return value:  Size  Location     Type
  2896 ;;                  2    8[BANK1 ] int 
  2897 ;; Registers used:
  2898 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2899 ;; Tracked objects:
  2900 ;;		On entry : 0/0
  2901 ;;		On exit  : 0/0
  2902 ;;		Unchanged: 0/0
  2903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2904 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2905 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2907 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2908 ;;Total ram usage:        8 bytes
  2909 ;; Hardware stack levels used: 1
  2910 ;; Hardware stack levels required when called: 16
  2911 ;; This function calls:
  2912 ;;		_vfprintf
  2913 ;; This function is called by:
  2914 ;;		_startAccell
  2915 ;;		_checkCurveCount
  2916 ;;		_getReverse
  2917 ;; This function uses a non-reentrant model
  2918 ;;
  2919                           
  2920                           	psect	text6
  2921  006140                     __ptext6:
  2922                           	callstack 0
  2923  006140                     _printf:
  2924                           	callstack 12
  2925  006140  0EB0               	movlw	low (?_printf+2)
  2926  006142  0101               	movlb	1	; () banked
  2927  006144  6FB4               	movwf	printf@ap& (0+255),b
  2928  006146  0E01               	movlw	high (?_printf+2)
  2929  006148  6FB5               	movwf	(printf@ap+1)& (0+255),b
  2930  00614A                     
  2931                           ; BSR set to: 1
  2932  00614A  0E00               	movlw	0
  2933  00614C  6FA6               	movwf	vfprintf@fp& (0+255),b
  2934  00614E  0E00               	movlw	0
  2935  006150  6FA7               	movwf	(vfprintf@fp+1)& (0+255),b
  2936  006152  C1AE  F1A8         	movff	printf@fmt,vfprintf@fmt
  2937  006156  C1AF  F1A9         	movff	printf@fmt+1,vfprintf@fmt+1
  2938  00615A  0EB4               	movlw	low printf@ap
  2939  00615C  6FAA               	movwf	vfprintf@ap& (0+255),b
  2940  00615E  0E01               	movlw	high printf@ap
  2941  006160  6FAB               	movwf	(vfprintf@ap+1)& (0+255),b
  2942  006162  ECBE  F02B         	call	_vfprintf	;wreg free
  2943  006166  0012               	return		;funcret
  2944  006168                     __end_of_printf:
  2945                           	callstack 0
  2946                           
  2947 ;; *************** function _vfprintf *****************
  2948 ;; Defined at:
  2949 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2950 ;; Parameters:    Size  Location     Type
  2951 ;;  fp              2    0[BANK1 ] PTR struct _IO_FILE
  2952 ;;		 -> NULL(0), 
  2953 ;;  fmt             2    2[BANK1 ] PTR const unsigned char 
  2954 ;;		 -> STR_8(14), STR_7(13), STR_6(14), STR_5(16), 
  2955 ;;		 -> STR_4(21), STR_3(26), STR_2(24), STR_1(20), 
  2956 ;;  ap              2    4[BANK1 ] PTR PTR void 
  2957 ;;		 -> printf@ap(2), 
  2958 ;; Auto vars:     Size  Location     Type
  2959 ;;  cfmt            2    6[BANK1 ] PTR unsigned char 
  2960 ;;		 -> STR_8(14), STR_7(13), STR_6(14), STR_5(16), 
  2961 ;;		 -> STR_4(21), STR_3(26), STR_2(24), STR_1(20), 
  2962 ;; Return value:  Size  Location     Type
  2963 ;;                  2    0[BANK1 ] int 
  2964 ;; Registers used:
  2965 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2966 ;; Tracked objects:
  2967 ;;		On entry : 0/0
  2968 ;;		On exit  : 0/0
  2969 ;;		Unchanged: 0/0
  2970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2971 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2972 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2974 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2975 ;;Total ram usage:        8 bytes
  2976 ;; Hardware stack levels used: 1
  2977 ;; Hardware stack levels required when called: 15
  2978 ;; This function calls:
  2979 ;;		_vfpfcnvrt
  2980 ;; This function is called by:
  2981 ;;		_printf
  2982 ;; This function uses a non-reentrant model
  2983 ;;
  2984                           
  2985                           	psect	text7
  2986  00577C                     __ptext7:
  2987                           	callstack 0
  2988  00577C                     _vfprintf:
  2989                           	callstack 12
  2990  00577C                     
  2991                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2992  00577C  C1A8  F1AC         	movff	vfprintf@fmt,vfprintf@cfmt
  2993  005780  C1A9  F1AD         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2994  005784                     
  2995                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2996  005784  0E00               	movlw	0
  2997  005786  0101               	movlb	1	; () banked
  2998  005788  6F29               	movwf	(_nout+1)& (0+255),b
  2999  00578A  0E00               	movlw	0
  3000  00578C  6F28               	movwf	_nout& (0+255),b
  3001                           
  3002                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3003  00578E  EFE0  F02B         	goto	l9091
  3004  005792                     l9089:
  3005                           
  3006                           ; BSR set to: 1
  3007                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3008  005792  C1A6  F0C7         	movff	vfprintf@fp,vfpfcnvrt@fp
  3009  005796  C1A7  F0C8         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3010  00579A  0EAC               	movlw	low vfprintf@cfmt
  3011  00579C  0100               	movlb	0	; () banked
  3012  00579E  6FC9               	movwf	vfpfcnvrt@fmt& (0+255),b
  3013  0057A0  0E01               	movlw	high vfprintf@cfmt
  3014  0057A2  6FCA               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  3015  0057A4  C1AA  F0CB         	movff	vfprintf@ap,vfpfcnvrt@ap
  3016  0057A8  C1AB  F0CC         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3017  0057AC  ECAC  F00E         	call	_vfpfcnvrt	;wreg free
  3018  0057B0  0100               	movlb	0	; () banked
  3019  0057B2  51C7               	movf	?_vfpfcnvrt& (0+255),w,b
  3020  0057B4  0101               	movlb	1	; () banked
  3021  0057B6  2728               	addwf	_nout& (0+255),f,b
  3022  0057B8  0100               	movlb	0	; () banked
  3023  0057BA  51C8               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  3024  0057BC  0101               	movlb	1	; () banked
  3025  0057BE  2329               	addwfc	(_nout+1)& (0+255),f,b
  3026  0057C0                     l9091:
  3027                           
  3028                           ; BSR set to: 1
  3029                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3030  0057C0  0060  F6B3  FFF6   	movff	vfprintf@cfmt,tblptrl
  3031  0057C6  0060  F6B7  FFF7   	movff	vfprintf@cfmt+1,tblptrh
  3032  0057CC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3033  0057CC  6AF8               	clrf	tblptru,c
  3034  0057CE                     	endif
  3035  0057CE                     	if	0	;tblptru may be non-zero
  3036  0057CE                     	endif
  3037  0057CE  0008               	tblrd		*
  3038  0057D0  50F5               	movf	tablat,w,c
  3039  0057D2  0900               	iorlw	0
  3040  0057D4  A4D8               	btfss	status,2,c
  3041  0057D6  EFEF  F02B         	goto	u10241
  3042  0057DA  EFF1  F02B         	goto	u10240
  3043  0057DE                     u10241:
  3044  0057DE  EFC9  F02B         	goto	l9089
  3045  0057E2                     u10240:
  3046  0057E2                     
  3047                           ; BSR set to: 1
  3048                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  3049  0057E2  C128  F1A6         	movff	_nout,?_vfprintf
  3050  0057E6  C129  F1A7         	movff	_nout+1,?_vfprintf+1
  3051  0057EA                     
  3052                           ; BSR set to: 1
  3053  0057EA  0012               	return		;funcret
  3054  0057EC                     __end_of_vfprintf:
  3055                           	callstack 0
  3056                           
  3057 ;; *************** function _vfpfcnvrt *****************
  3058 ;; Defined at:
  3059 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3060 ;; Parameters:    Size  Location     Type
  3061 ;;  fp              2  103[BANK0 ] PTR struct _IO_FILE
  3062 ;;		 -> NULL(0), 
  3063 ;;  fmt             2  105[BANK0 ] PTR PTR unsigned char 
  3064 ;;		 -> vfprintf@cfmt(2), 
  3065 ;;  ap              2  107[BANK0 ] PTR PTR void 
  3066 ;;		 -> printf@ap(2), 
  3067 ;; Auto vars:     Size  Location     Type
  3068 ;;  llu             8  121[BANK0 ] unsigned long long 
  3069 ;;  ll              8  113[BANK0 ] long long 
  3070 ;;  f               4  131[BANK0 ] long long 
  3071 ;;  ct              3  135[BANK0 ] unsigned char [3]
  3072 ;;  vp              3    0        PTR void 
  3073 ;;  cp              3    0        PTR unsigned char 
  3074 ;;  i               2    0        int 
  3075 ;;  done            2    0        int 
  3076 ;;  c               1  138[BANK0 ] unsigned char 
  3077 ;; Return value:  Size  Location     Type
  3078 ;;                  2  103[BANK0 ] int 
  3079 ;; Registers used:
  3080 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3081 ;; Tracked objects:
  3082 ;;		On entry : 0/0
  3083 ;;		On exit  : 0/0
  3084 ;;		Unchanged: 0/0
  3085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3086 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3087 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3088 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3089 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3090 ;;Total ram usage:       36 bytes
  3091 ;; Hardware stack levels used: 1
  3092 ;; Hardware stack levels required when called: 14
  3093 ;; This function calls:
  3094 ;;		_dtoa
  3095 ;;		_efgtoa
  3096 ;;		_fputc
  3097 ;;		_isupper
  3098 ;;		_strncmp
  3099 ;;		_tolower
  3100 ;;		_utoa
  3101 ;; This function is called by:
  3102 ;;		_vfprintf
  3103 ;; This function uses a non-reentrant model
  3104 ;;
  3105                           
  3106                           	psect	text8
  3107  001D58                     __ptext8:
  3108                           	callstack 0
  3109  001D58                     _vfpfcnvrt:
  3110                           	callstack 12
  3111  001D58                     
  3112                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  3113  001D58  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3114  001D5E  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3115  001D64  006F FF7B FFF6     	movff	postinc2,tblptrl
  3116  001D6A  006F FF77 FFF7     	movff	postdec2,tblptrh
  3117  001D70                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3118  001D70  6AF8               	clrf	tblptru,c
  3119  001D72                     	endif
  3120  001D72                     	if	0	;tblptru may be non-zero
  3121  001D72                     	endif
  3122  001D72  0008               	tblrd		*
  3123  001D74  50F5               	movf	tablat,w,c
  3124  001D76  0A25               	xorlw	37
  3125  001D78  A4D8               	btfss	status,2,c
  3126  001D7A  EFC1  F00E         	goto	u9981
  3127  001D7E  EFC3  F00E         	goto	u9980
  3128  001D82                     u9981:
  3129  001D82  EF7D  F011         	goto	l9023
  3130  001D86                     u9980:
  3131  001D86                     
  3132                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  3133  001D86  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3134  001D8C  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3135  001D92  2ADE               	incf	postinc2,f,c
  3136  001D94  0E00               	movlw	0
  3137  001D96  22DD               	addwfc	postdec2,f,c
  3138  001D98                     
  3139                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  3140  001D98  0E00               	movlw	0
  3141  001D9A  6E3B               	movwf	(_width+1)^0,c
  3142  001D9C  0E00               	movlw	0
  3143  001D9E  6E3A               	movwf	_width^0,c
  3144  001DA0  C03A  F03E         	movff	_width,_flags
  3145  001DA4  C03B  F03F         	movff	_width+1,_flags+1
  3146  001DA8                     
  3147                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  3148  001DA8  683C               	setf	_prec^0,c
  3149  001DAA  683D               	setf	(_prec+1)^0,c
  3150  001DAC                     
  3151                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  3152  001DAC  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3153  001DB2  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3154  001DB8  006F FF7B FFF6     	movff	postinc2,tblptrl
  3155  001DBE  006F FF77 FFF7     	movff	postdec2,tblptrh
  3156  001DC4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3157  001DC4  6AF8               	clrf	tblptru,c
  3158  001DC6                     	endif
  3159  001DC6                     	if	0	;tblptru may be non-zero
  3160  001DC6                     	endif
  3161  001DC6  0008               	tblrd		*
  3162  001DC8  50F5               	movf	tablat,w,c
  3163  001DCA  6E1A               	movwf	tolower@c^0,c
  3164  001DCC  6A1B               	clrf	(tolower@c+1)^0,c
  3165  001DCE  EC2B  F02C         	call	_tolower	;wreg free
  3166  001DD2  501A               	movf	?_tolower^0,w,c
  3167  001DD4  0100               	movlb	0	; () banked
  3168  001DD6  6FE7               	movwf	vfpfcnvrt@ct& (0+255),b
  3169  001DD8                     
  3170                           ; BSR set to: 0
  3171                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  3172  001DD8  51E7               	movf	vfpfcnvrt@ct& (0+255),w,b
  3173  001DDA  B4D8               	btfsc	status,2,c
  3174  001DDC  EFF2  F00E         	goto	u9991
  3175  001DE0  EFF4  F00E         	goto	u9990
  3176  001DE4                     u9991:
  3177  001DE4  EF3C  F00F         	goto	l8961
  3178  001DE8                     u9990:
  3179  001DE8                     
  3180                           ; BSR set to: 0
  3181                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  3182  001DE8  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3183  001DEE  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3184  001DF4  006F FF78  F0CD    	movff	postinc2,??_vfpfcnvrt
  3185  001DFA  006F FF74  F0CE    	movff	postdec2,??_vfpfcnvrt+1
  3186  001E00  0E01               	movlw	1
  3187  001E02  27CD               	addwf	??_vfpfcnvrt& (0+255),f,b
  3188  001E04  0E00               	movlw	0
  3189  001E06  23CE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3190  001E08  0060  F337  FFF6   	movff	??_vfpfcnvrt,tblptrl
  3191  001E0E  0060  F33B  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  3192  001E14                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3193  001E14  6AF8               	clrf	tblptru,c
  3194  001E16                     	endif
  3195  001E16                     	if	0	;tblptru may be non-zero
  3196  001E16                     	endif
  3197  001E16  0008               	tblrd		*
  3198  001E18  50F5               	movf	tablat,w,c
  3199  001E1A  6E1A               	movwf	tolower@c^0,c
  3200  001E1C  6A1B               	clrf	(tolower@c+1)^0,c
  3201  001E1E  EC2B  F02C         	call	_tolower	;wreg free
  3202  001E22  501A               	movf	?_tolower^0,w,c
  3203  001E24  0100               	movlb	0	; () banked
  3204  001E26  6FE8               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  3205  001E28                     
  3206                           ; BSR set to: 0
  3207                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  3208  001E28  51E8               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  3209  001E2A  B4D8               	btfsc	status,2,c
  3210  001E2C  EF1A  F00F         	goto	u10001
  3211  001E30  EF1C  F00F         	goto	u10000
  3212  001E34                     u10001:
  3213  001E34  EF3C  F00F         	goto	l8961
  3214  001E38                     u10000:
  3215  001E38                     
  3216                           ; BSR set to: 0
  3217                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  3218  001E38  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3219  001E3E  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3220  001E44  006F FF78  F0CD    	movff	postinc2,??_vfpfcnvrt
  3221  001E4A  006F FF74  F0CE    	movff	postdec2,??_vfpfcnvrt+1
  3222  001E50  0E02               	movlw	2
  3223  001E52  27CD               	addwf	??_vfpfcnvrt& (0+255),f,b
  3224  001E54  0E00               	movlw	0
  3225  001E56  23CE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3226  001E58  0060  F337  FFF6   	movff	??_vfpfcnvrt,tblptrl
  3227  001E5E  0060  F33B  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  3228  001E64                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3229  001E64  6AF8               	clrf	tblptru,c
  3230  001E66                     	endif
  3231  001E66                     	if	0	;tblptru may be non-zero
  3232  001E66                     	endif
  3233  001E66  0008               	tblrd		*
  3234  001E68  50F5               	movf	tablat,w,c
  3235  001E6A  6E1A               	movwf	tolower@c^0,c
  3236  001E6C  6A1B               	clrf	(tolower@c+1)^0,c
  3237  001E6E  EC2B  F02C         	call	_tolower	;wreg free
  3238  001E72  501A               	movf	?_tolower^0,w,c
  3239  001E74  0100               	movlb	0	; () banked
  3240  001E76  6FE9               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  3241  001E78                     l8961:
  3242                           
  3243                           ; BSR set to: 0
  3244                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3245  001E78  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3246  001E7E  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3247  001E84  006F FF7B FFF6     	movff	postinc2,tblptrl
  3248  001E8A  006F FF77 FFF7     	movff	postdec2,tblptrh
  3249  001E90                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3250  001E90  6AF8               	clrf	tblptru,c
  3251  001E92                     	endif
  3252  001E92                     	if	0	;tblptru may be non-zero
  3253  001E92                     	endif
  3254  001E92  0008               	tblrd		*
  3255  001E94  50F5               	movf	tablat,w,c
  3256  001E96  0A64               	xorlw	100
  3257  001E98  B4D8               	btfsc	status,2,c
  3258  001E9A  EF51  F00F         	goto	u10011
  3259  001E9E  EF53  F00F         	goto	u10010
  3260  001EA2                     u10011:
  3261  001EA2  EF6A  F00F         	goto	l8965
  3262  001EA6                     u10010:
  3263  001EA6                     
  3264                           ; BSR set to: 0
  3265  001EA6  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3266  001EAC  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3267  001EB2  006F FF7B FFF6     	movff	postinc2,tblptrl
  3268  001EB8  006F FF77 FFF7     	movff	postdec2,tblptrh
  3269  001EBE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3270  001EBE  6AF8               	clrf	tblptru,c
  3271  001EC0                     	endif
  3272  001EC0                     	if	0	;tblptru may be non-zero
  3273  001EC0                     	endif
  3274  001EC0  0008               	tblrd		*
  3275  001EC2  50F5               	movf	tablat,w,c
  3276  001EC4  0A69               	xorlw	105
  3277  001EC6  A4D8               	btfss	status,2,c
  3278  001EC8  EF68  F00F         	goto	u10021
  3279  001ECC  EF6A  F00F         	goto	u10020
  3280  001ED0                     u10021:
  3281  001ED0  EFB4  F00F         	goto	l8971
  3282  001ED4                     u10020:
  3283  001ED4                     l8965:
  3284                           
  3285                           ; BSR set to: 0
  3286                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  3287  001ED4  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3288  001EDA  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3289  001EE0  2ADE               	incf	postinc2,f,c
  3290  001EE2  0E00               	movlw	0
  3291  001EE4  22DD               	addwfc	postdec2,f,c
  3292                           
  3293                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3294  001EE6  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3295  001EEC  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3296  001EF2  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  3297  001EF8  0E02               	movlw	2
  3298  001EFA  26DE               	addwf	postinc2,f,c
  3299  001EFC  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  3300  001F02  0E00               	movlw	0
  3301  001F04  22DD               	addwfc	postdec2,f,c
  3302  001F06  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3303  001F0C  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3304  001F12  006F FF78  F0D1    	movff	postinc2,vfpfcnvrt@ll
  3305  001F18  006F FF74  F0D2    	movff	postdec2,vfpfcnvrt@ll+1
  3306  001F1E  0E00               	movlw	0
  3307  001F20  BFD2               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  3308  001F22  0EFF               	movlw	-1
  3309  001F24  6FD3               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  3310  001F26  6FD4               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  3311  001F28  6FD5               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  3312  001F2A  6FD6               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  3313  001F2C  6FD7               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  3314  001F2E  6FD8               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  3315  001F30                     
  3316                           ; BSR set to: 0
  3317                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  3318  001F30  C0C7  F060         	movff	vfpfcnvrt@fp,dtoa@fp
  3319  001F34  C0C8  F061         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3320  001F38  C0D1  F062         	movff	vfpfcnvrt@ll,dtoa@d
  3321  001F3C  C0D2  F063         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3322  001F40  C0D3  F064         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3323  001F44  C0D4  F065         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3324  001F48  C0D5  F066         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3325  001F4C  C0D6  F067         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3326  001F50  C0D7  F068         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3327  001F54  C0D8  F069         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3328  001F58  ECF7  F017         	call	_dtoa	;wreg free
  3329  001F5C  C060  F0C7         	movff	?_dtoa,?_vfpfcnvrt
  3330  001F60  C061  F0C8         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3331  001F64  EF9F  F011         	goto	l2268
  3332  001F68                     l8971:
  3333                           
  3334                           ; BSR set to: 0
  3335                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  3336  001F68  0E66               	movlw	102
  3337  001F6A  19E7               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  3338  001F6C  A4D8               	btfss	status,2,c
  3339  001F6E  EFBB  F00F         	goto	u10031
  3340  001F72  EFBD  F00F         	goto	u10030
  3341  001F76                     u10031:
  3342  001F76  EF0F  F010         	goto	l8983
  3343  001F7A                     u10030:
  3344  001F7A                     
  3345                           ; BSR set to: 0
  3346                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  3347  001F7A  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3348  001F80  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3349  001F86  006F FF7B FFF6     	movff	postinc2,tblptrl
  3350  001F8C  006F FF77 FFF7     	movff	postdec2,tblptrh
  3351  001F92                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3352  001F92  6AF8               	clrf	tblptru,c
  3353  001F94                     	endif
  3354  001F94                     	if	0	;tblptru may be non-zero
  3355  001F94                     	endif
  3356  001F94  0008               	tblrd		*
  3357  001F96  006F FFD4  F0EA    	movff	tablat,vfpfcnvrt@c
  3358  001F9C                     
  3359                           ; BSR set to: 0
  3360                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  3361  001F9C  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3362  001FA2  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3363  001FA8  2ADE               	incf	postinc2,f,c
  3364  001FAA  0E00               	movlw	0
  3365  001FAC  22DD               	addwfc	postdec2,f,c
  3366  001FAE                     
  3367                           ; BSR set to: 0
  3368                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3369  001FAE  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3370  001FB4  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3371  001FBA  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  3372  001FC0  0E04               	movlw	4
  3373  001FC2  26DE               	addwf	postinc2,f,c
  3374  001FC4  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  3375  001FCA  0E00               	movlw	0
  3376  001FCC  22DD               	addwfc	postdec2,f,c
  3377  001FCE  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3378  001FD4  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3379  001FDA  006F FF78  F0E3    	movff	postinc2,vfpfcnvrt@f
  3380  001FE0  006F FF78  F0E4    	movff	postinc2,vfpfcnvrt@f+1
  3381  001FE6  006F FF78  F0E5    	movff	postinc2,vfpfcnvrt@f+2
  3382  001FEC  006F FF78  F0E6    	movff	postinc2,vfpfcnvrt@f+3
  3383  001FF2                     
  3384                           ; BSR set to: 0
  3385                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  3386  001FF2  C0C7  F083         	movff	vfpfcnvrt@fp,efgtoa@fp
  3387  001FF6  C0C8  F084         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3388  001FFA  C0E3  F085         	movff	vfpfcnvrt@f,efgtoa@f
  3389  001FFE  C0E4  F086         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3390  002002  C0E5  F087         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3391  002006  C0E6  F088         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3392  00200A  C0EA  F089         	movff	vfpfcnvrt@c,efgtoa@c
  3393  00200E  EC55  F008         	call	_efgtoa	;wreg free
  3394  002012  C083  F0C7         	movff	?_efgtoa,?_vfpfcnvrt
  3395  002016  C084  F0C8         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3396  00201A  EF9F  F011         	goto	l2268
  3397  00201E                     l8983:
  3398                           
  3399                           ; BSR set to: 0
  3400                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3401  00201E  0EE7               	movlw	low vfpfcnvrt@ct
  3402  002020  6E14               	movwf	strncmp@_l^0,c
  3403  002022  0E00               	movlw	high vfpfcnvrt@ct
  3404  002024  6E15               	movwf	(strncmp@_l+1)^0,c
  3405  002026  0EA5               	movlw	low STR_17
  3406  002028  6E16               	movwf	strncmp@_r^0,c
  3407  00202A  0E10               	movlw	high STR_17
  3408  00202C  6E17               	movwf	(strncmp@_r+1)^0,c
  3409  00202E  0E00               	movlw	0
  3410  002030  6E19               	movwf	(strncmp@n+1)^0,c
  3411  002032  0E02               	movlw	2
  3412  002034  6E18               	movwf	strncmp@n^0,c
  3413  002036  EC9E  F025         	call	_strncmp	;wreg free
  3414  00203A  5014               	movf	?_strncmp^0,w,c
  3415  00203C  1015               	iorwf	(?_strncmp+1)^0,w,c
  3416  00203E  A4D8               	btfss	status,2,c
  3417  002040  EF24  F010         	goto	u10041
  3418  002044  EF26  F010         	goto	u10040
  3419  002048                     u10041:
  3420  002048  EFD9  F010         	goto	l8999
  3421  00204C                     u10040:
  3422  00204C                     
  3423                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  3424  00204C  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3425  002052  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3426  002058  006F FF78  F0CD    	movff	postinc2,??_vfpfcnvrt
  3427  00205E  006F FF74  F0CE    	movff	postdec2,??_vfpfcnvrt+1
  3428  002064  0E01               	movlw	1
  3429  002066  0100               	movlb	0	; () banked
  3430  002068  27CD               	addwf	??_vfpfcnvrt& (0+255),f,b
  3431  00206A  0E00               	movlw	0
  3432  00206C  23CE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3433  00206E  0060  F337  FFF6   	movff	??_vfpfcnvrt,tblptrl
  3434  002074  0060  F33B  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  3435  00207A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3436  00207A  6AF8               	clrf	tblptru,c
  3437  00207C                     	endif
  3438  00207C                     	if	0	;tblptru may be non-zero
  3439  00207C                     	endif
  3440  00207C  0008               	tblrd		*
  3441  00207E  006F FFD4  F0EA    	movff	tablat,vfpfcnvrt@c
  3442  002084  0EBF               	movlw	191
  3443  002086  6FCD               	movwf	??_vfpfcnvrt& (0+255),b
  3444  002088  0EFF               	movlw	255
  3445  00208A  6FCE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3446  00208C  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3447  002092  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3448  002098  006F FF7B FFF6     	movff	postinc2,tblptrl
  3449  00209E  006F FF77 FFF7     	movff	postdec2,tblptrh
  3450  0020A4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3451  0020A4  6AF8               	clrf	tblptru,c
  3452  0020A6                     	endif
  3453  0020A6                     	if	0	;tblptru may be non-zero
  3454  0020A6                     	endif
  3455  0020A6  0008               	tblrd		*
  3456  0020A8  50F5               	movf	tablat,w,c
  3457  0020AA  6FCF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3458  0020AC  6BD0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  3459  0020AE  51CD               	movf	??_vfpfcnvrt& (0+255),w,b
  3460  0020B0  27CF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  3461  0020B2  51CE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3462  0020B4  23D0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  3463  0020B6  51D0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3464  0020B8  E10A               	bnz	u10050
  3465  0020BA  0E1A               	movlw	26
  3466  0020BC  5DCF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  3467  0020BE  A0D8               	btfss	status,0,c
  3468  0020C0  EF64  F010         	goto	u10051
  3469  0020C4  EF67  F010         	goto	u10050
  3470  0020C8                     u10051:
  3471  0020C8  0E01               	movlw	1
  3472  0020CA  EF68  F010         	goto	u10060
  3473  0020CE                     u10050:
  3474  0020CE  0E00               	movlw	0
  3475  0020D0                     u10060:
  3476  0020D0  6FE1               	movwf	_vfpfcnvrt$3601& (0+255),b
  3477  0020D2  6BE2               	clrf	(_vfpfcnvrt$3601+1)& (0+255),b
  3478  0020D4                     
  3479                           ; BSR set to: 0
  3480  0020D4  51E1               	movf	_vfpfcnvrt$3601& (0+255),w,b
  3481  0020D6  11E2               	iorwf	(_vfpfcnvrt$3601+1)& (0+255),w,b
  3482  0020D8  B4D8               	btfsc	status,2,c
  3483  0020DA  EF71  F010         	goto	u10071
  3484  0020DE  EF73  F010         	goto	u10070
  3485  0020E2                     u10071:
  3486  0020E2  EF97  F010         	goto	l8993
  3487  0020E6                     u10070:
  3488  0020E6                     
  3489                           ; BSR set to: 0
  3490                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3491  0020E6  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3492  0020EC  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3493  0020F2  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  3494  0020F8  0E04               	movlw	4
  3495  0020FA  26DE               	addwf	postinc2,f,c
  3496  0020FC  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  3497  002102  0E00               	movlw	0
  3498  002104  22DD               	addwfc	postdec2,f,c
  3499  002106  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3500  00210C  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3501  002112  006F FF78  F0E3    	movff	postinc2,vfpfcnvrt@f
  3502  002118  006F FF78  F0E4    	movff	postinc2,vfpfcnvrt@f+1
  3503  00211E  006F FF78  F0E5    	movff	postinc2,vfpfcnvrt@f+2
  3504  002124  006F FF78  F0E6    	movff	postinc2,vfpfcnvrt@f+3
  3505                           
  3506                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  3507  00212A  EFB9  F010         	goto	l2276
  3508  00212E                     l8993:
  3509                           
  3510                           ; BSR set to: 0
  3511                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3512  00212E  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3513  002134  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3514  00213A  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  3515  002140  0E04               	movlw	4
  3516  002142  26DE               	addwf	postinc2,f,c
  3517  002144  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  3518  00214A  0E00               	movlw	0
  3519  00214C  22DD               	addwfc	postdec2,f,c
  3520  00214E  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3521  002154  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3522  00215A  006F FF78  F0E3    	movff	postinc2,vfpfcnvrt@f
  3523  002160  006F FF78  F0E4    	movff	postinc2,vfpfcnvrt@f+1
  3524  002166  006F FF78  F0E5    	movff	postinc2,vfpfcnvrt@f+2
  3525  00216C  006F FF78  F0E6    	movff	postinc2,vfpfcnvrt@f+3
  3526  002172                     l2276:
  3527                           
  3528                           ; BSR set to: 0
  3529                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  3530  002172  0E02               	movlw	2
  3531  002174  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3532  00217A  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3533  002180  26DE               	addwf	postinc2,f,c
  3534  002182  0E00               	movlw	0
  3535  002184  22DD               	addwfc	postdec2,f,c
  3536  002186                     
  3537                           ; BSR set to: 0
  3538                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 960:             
      +                          return efgtoa(fp, f, c);
  3539  002186  C0C7  F083         	movff	vfpfcnvrt@fp,efgtoa@fp
  3540  00218A  C0C8  F084         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3541  00218E  C0E3  F085         	movff	vfpfcnvrt@f,efgtoa@f
  3542  002192  C0E4  F086         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3543  002196  C0E5  F087         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3544  00219A  C0E6  F088         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3545  00219E  C0EA  F089         	movff	vfpfcnvrt@c,efgtoa@c
  3546  0021A2  EC55  F008         	call	_efgtoa	;wreg free
  3547  0021A6  C083  F0C7         	movff	?_efgtoa,?_vfpfcnvrt
  3548  0021AA  C084  F0C8         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3549  0021AE  EF9F  F011         	goto	l2268
  3550  0021B2                     l8999:
  3551                           
  3552                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1204:         if 
      +                          (*fmt[0] == 'u') {
  3553  0021B2  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3554  0021B8  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3555  0021BE  006F FF7B FFF6     	movff	postinc2,tblptrl
  3556  0021C4  006F FF77 FFF7     	movff	postdec2,tblptrh
  3557  0021CA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3558  0021CA  6AF8               	clrf	tblptru,c
  3559  0021CC                     	endif
  3560  0021CC                     	if	0	;tblptru may be non-zero
  3561  0021CC                     	endif
  3562  0021CC  0008               	tblrd		*
  3563  0021CE  50F5               	movf	tablat,w,c
  3564  0021D0  0A75               	xorlw	117
  3565  0021D2  A4D8               	btfss	status,2,c
  3566  0021D4  EFEE  F010         	goto	u10081
  3567  0021D8  EFF0  F010         	goto	u10080
  3568  0021DC                     u10081:
  3569  0021DC  EF3C  F011         	goto	l9007
  3570  0021E0                     u10080:
  3571  0021E0                     
  3572                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1206:            
      +                           ++*fmt;
  3573  0021E0  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3574  0021E6  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3575  0021EC  2ADE               	incf	postinc2,f,c
  3576  0021EE  0E00               	movlw	0
  3577  0021F0  22DD               	addwfc	postdec2,f,c
  3578                           
  3579                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1207:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  3580  0021F2  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3581  0021F8  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3582  0021FE  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  3583  002204  0E02               	movlw	2
  3584  002206  26DE               	addwf	postinc2,f,c
  3585  002208  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  3586  00220E  0E00               	movlw	0
  3587  002210  22DD               	addwfc	postdec2,f,c
  3588  002212  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3589  002218  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3590  00221E  006F FF78  F0CF    	movff	postinc2,??_vfpfcnvrt+2
  3591  002224  006F FF74  F0D0    	movff	postdec2,??_vfpfcnvrt+3
  3592  00222A  C0CF  F0D9         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3593  00222E  C0D0  F0DA         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3594  002232  0100               	movlb	0	; () banked
  3595  002234  6BDB               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  3596  002236  6BDC               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  3597  002238  6BDD               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3598  00223A  6BDE               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3599  00223C  6BDF               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3600  00223E  6BE0               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3601  002240                     
  3602                           ; BSR set to: 0
  3603                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1209:            
      +                           return utoa(fp, llu);
  3604  002240  C0C7  F060         	movff	vfpfcnvrt@fp,utoa@fp
  3605  002244  C0C8  F061         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  3606  002248  C0D9  F062         	movff	vfpfcnvrt@llu,utoa@d
  3607  00224C  C0DA  F063         	movff	vfpfcnvrt@llu+1,utoa@d+1
  3608  002250  C0DB  F064         	movff	vfpfcnvrt@llu+2,utoa@d+2
  3609  002254  C0DC  F065         	movff	vfpfcnvrt@llu+3,utoa@d+3
  3610  002258  C0DD  F066         	movff	vfpfcnvrt@llu+4,utoa@d+4
  3611  00225C  C0DE  F067         	movff	vfpfcnvrt@llu+5,utoa@d+5
  3612  002260  C0DF  F068         	movff	vfpfcnvrt@llu+6,utoa@d+6
  3613  002264  C0E0  F069         	movff	vfpfcnvrt@llu+7,utoa@d+7
  3614  002268  EC82  F01B         	call	_utoa	;wreg free
  3615  00226C  C060  F0C7         	movff	?_utoa,?_vfpfcnvrt
  3616  002270  C061  F0C8         	movff	?_utoa+1,?_vfpfcnvrt+1
  3617  002274  EF9F  F011         	goto	l2268
  3618  002278                     l9007:
  3619                           
  3620                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3621  002278  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3622  00227E  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3623  002284  006F FF7B FFF6     	movff	postinc2,tblptrl
  3624  00228A  006F FF77 FFF7     	movff	postdec2,tblptrh
  3625  002290                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3626  002290  6AF8               	clrf	tblptru,c
  3627  002292                     	endif
  3628  002292                     	if	0	;tblptru may be non-zero
  3629  002292                     	endif
  3630  002292  0008               	tblrd		*
  3631  002294  50F5               	movf	tablat,w,c
  3632  002296  0A25               	xorlw	37
  3633  002298  A4D8               	btfss	status,2,c
  3634  00229A  EF51  F011         	goto	u10091
  3635  00229E  EF53  F011         	goto	u10090
  3636  0022A2                     u10091:
  3637  0022A2  EF6D  F011         	goto	l9017
  3638  0022A6                     u10090:
  3639  0022A6                     
  3640                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3641  0022A6  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3642  0022AC  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3643  0022B2  2ADE               	incf	postinc2,f,c
  3644  0022B4  0E00               	movlw	0
  3645  0022B6  22DD               	addwfc	postdec2,f,c
  3646  0022B8                     
  3647                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3648  0022B8  0E00               	movlw	0
  3649  0022BA  6E17               	movwf	(fputc@c+1)^0,c
  3650  0022BC  0E25               	movlw	37
  3651  0022BE  6E16               	movwf	fputc@c^0,c
  3652  0022C0  C0C7  F018         	movff	vfpfcnvrt@fp,fputc@fp
  3653  0022C4  C0C8  F019         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3654  0022C8  ECA6  F02A         	call	_fputc	;wreg free
  3655  0022CC                     l9013:
  3656                           
  3657                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3658  0022CC  0E00               	movlw	0
  3659  0022CE  0100               	movlb	0	; () banked
  3660  0022D0  6FC8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3661  0022D2  0E01               	movlw	1
  3662  0022D4  6FC7               	movwf	?_vfpfcnvrt& (0+255),b
  3663  0022D6  EF9F  F011         	goto	l2268
  3664  0022DA                     l9017:
  3665                           
  3666                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3667  0022DA  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3668  0022E0  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3669  0022E6  2ADE               	incf	postinc2,f,c
  3670  0022E8  0E00               	movlw	0
  3671  0022EA  22DD               	addwfc	postdec2,f,c
  3672  0022EC                     
  3673                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3674  0022EC  0E00               	movlw	0
  3675  0022EE  0100               	movlb	0	; () banked
  3676  0022F0  6FC8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3677  0022F2  0E00               	movlw	0
  3678  0022F4  6FC7               	movwf	?_vfpfcnvrt& (0+255),b
  3679  0022F6  EF9F  F011         	goto	l2268
  3680  0022FA                     l9023:
  3681                           
  3682                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3683  0022FA  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3684  002300  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3685  002306  006F FF7B FFF6     	movff	postinc2,tblptrl
  3686  00230C  006F FF77 FFF7     	movff	postdec2,tblptrh
  3687  002312                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3688  002312  6AF8               	clrf	tblptru,c
  3689  002314                     	endif
  3690  002314                     	if	0	;tblptru may be non-zero
  3691  002314                     	endif
  3692  002314  0008               	tblrd		*
  3693  002316  50F5               	movf	tablat,w,c
  3694  002318  6E16               	movwf	fputc@c^0,c
  3695  00231A  6A17               	clrf	(fputc@c+1)^0,c
  3696  00231C  C0C7  F018         	movff	vfpfcnvrt@fp,fputc@fp
  3697  002320  C0C8  F019         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3698  002324  ECA6  F02A         	call	_fputc	;wreg free
  3699  002328                     
  3700                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3701  002328  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3702  00232E  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3703  002334  2ADE               	incf	postinc2,f,c
  3704  002336  0E00               	movlw	0
  3705  002338  22DD               	addwfc	postdec2,f,c
  3706  00233A  EF66  F011         	goto	l9013
  3707  00233E                     l2268:
  3708  00233E  0012               	return		;funcret
  3709  002340                     __end_of_vfpfcnvrt:
  3710                           	callstack 0
  3711                           
  3712 ;; *************** function _utoa *****************
  3713 ;; Defined at:
  3714 ;;		line 615 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3715 ;; Parameters:    Size  Location     Type
  3716 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  3717 ;;		 -> NULL(0), 
  3718 ;;  d               8    2[BANK0 ] unsigned long long 
  3719 ;; Auto vars:     Size  Location     Type
  3720 ;;  n               8   14[BANK0 ] unsigned long long 
  3721 ;;  i               2   22[BANK0 ] int 
  3722 ;;  w               2   12[BANK0 ] int 
  3723 ;;  p               2   10[BANK0 ] int 
  3724 ;; Return value:  Size  Location     Type
  3725 ;;                  2    0[BANK0 ] int 
  3726 ;; Registers used:
  3727 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3728 ;; Tracked objects:
  3729 ;;		On entry : 0/0
  3730 ;;		On exit  : 0/0
  3731 ;;		Unchanged: 0/0
  3732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3733 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3734 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3735 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3736 ;;      Totals:         8      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3737 ;;Total ram usage:       32 bytes
  3738 ;; Hardware stack levels used: 1
  3739 ;; Hardware stack levels required when called: 13
  3740 ;; This function calls:
  3741 ;;		___lodiv
  3742 ;;		___lomod
  3743 ;;		_pad
  3744 ;; This function is called by:
  3745 ;;		_vfpfcnvrt
  3746 ;; This function uses a non-reentrant model
  3747 ;;
  3748                           
  3749                           	psect	text9
  3750  003704                     __ptext9:
  3751                           	callstack 0
  3752  003704                     _utoa:
  3753                           	callstack 12
  3754  003704                     
  3755                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 615: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99
      +                          \common\doprnt.c: 616: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\dop
      +                          rnt.c: 617:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common
      +                          \doprnt.c: 618:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sourc
      +                          es\c99\common\doprnt.c: 621:     if (!(prec < 0)) {
  3756  003704  BE3D               	btfsc	(_prec+1)^0,7,c
  3757  003706  EF87  F01B         	goto	u9861
  3758  00370A  EF89  F01B         	goto	u9860
  3759  00370E                     u9861:
  3760  00370E  EF8A  F01B         	goto	l8891
  3761  003712                     u9860:
  3762  003712                     
  3763                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 622:         flag
      +                          s &= ~(1 << 1);
  3764  003712  923E               	bcf	_flags^0,1,c
  3765  003714                     l8891:
  3766                           
  3767                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 624:     p = (0 <
      +                           prec) ? prec : 1;
  3768  003714  BE3D               	btfsc	(_prec+1)^0,7,c
  3769  003716  EF97  F01B         	goto	u9870
  3770  00371A  503D               	movf	(_prec+1)^0,w,c
  3771  00371C  E106               	bnz	u9871
  3772  00371E  043C               	decf	_prec^0,w,c
  3773  003720  B0D8               	btfsc	status,0,c
  3774  003722  EF95  F01B         	goto	u9871
  3775  003726  EF97  F01B         	goto	u9870
  3776  00372A                     u9871:
  3777  00372A  EF9E  F01B         	goto	l2249
  3778  00372E                     u9870:
  3779  00372E  0E00               	movlw	0
  3780  003730  0100               	movlb	0	; () banked
  3781  003732  6F6B               	movwf	(utoa@p+1)& (0+255),b
  3782  003734  0E01               	movlw	1
  3783  003736  6F6A               	movwf	utoa@p& (0+255),b
  3784  003738  EFA2  F01B         	goto	l2251
  3785  00373C                     l2249:
  3786  00373C  C03C  F06A         	movff	_prec,utoa@p
  3787  003740  C03D  F06B         	movff	_prec+1,utoa@p+1
  3788  003744                     l2251:
  3789                           
  3790                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 625:     w = widt
      +                          h;
  3791  003744  C03A  F06C         	movff	_width,utoa@w
  3792  003748  C03B  F06D         	movff	_width+1,utoa@w+1
  3793                           
  3794                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 628:     n = d;
  3795  00374C  C062  F06E         	movff	utoa@d,utoa@n
  3796  003750  C063  F06F         	movff	utoa@d+1,utoa@n+1
  3797  003754  C064  F070         	movff	utoa@d+2,utoa@n+2
  3798  003758  C065  F071         	movff	utoa@d+3,utoa@n+3
  3799  00375C  C066  F072         	movff	utoa@d+4,utoa@n+4
  3800  003760  C067  F073         	movff	utoa@d+5,utoa@n+5
  3801  003764  C068  F074         	movff	utoa@d+6,utoa@n+6
  3802  003768  C069  F075         	movff	utoa@d+7,utoa@n+7
  3803  00376C                     
  3804                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 629:     i = size
      +                          of(dbuf) - 1;
  3805  00376C  0E00               	movlw	0
  3806  00376E  0100               	movlb	0	; () banked
  3807  003770  6F77               	movwf	(utoa@i+1)& (0+255),b
  3808  003772  0E4F               	movlw	79
  3809  003774  6F76               	movwf	utoa@i& (0+255),b
  3810  003776                     
  3811                           ; BSR set to: 0
  3812                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 630:     dbuf[i] 
      +                          = '\0';
  3813  003776  0E00               	movlw	0
  3814  003778  0101               	movlb	1	; () banked
  3815  00377A  6F8F               	movwf	(_dbuf+79)& (0+255),b
  3816                           
  3817                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3818  00377C  EF37  F01C         	goto	l8909
  3819  003780                     l8899:
  3820                           
  3821                           ; BSR set to: 0
  3822                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 632:         --i;
  3823  003780  0776               	decf	utoa@i& (0+255),f,b
  3824  003782  A0D8               	btfss	status,0,c
  3825  003784  0777               	decf	(utoa@i+1)& (0+255),f,b
  3826  003786                     
  3827                           ; BSR set to: 0
  3828                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 633:         dbuf
      +                          [i] = '0' + (n % 10);
  3829  003786  0E40               	movlw	low _dbuf
  3830  003788  2576               	addwf	utoa@i& (0+255),w,b
  3831  00378A  6ED9               	movwf	fsr2l,c
  3832  00378C  0E01               	movlw	high _dbuf
  3833  00378E  2177               	addwfc	(utoa@i+1)& (0+255),w,b
  3834  003790  6EDA               	movwf	fsr2h,c
  3835  003792  C06E  F014         	movff	utoa@n,___lomod@dividend
  3836  003796  C06F  F015         	movff	utoa@n+1,___lomod@dividend+1
  3837  00379A  C070  F016         	movff	utoa@n+2,___lomod@dividend+2
  3838  00379E  C071  F017         	movff	utoa@n+3,___lomod@dividend+3
  3839  0037A2  C072  F018         	movff	utoa@n+4,___lomod@dividend+4
  3840  0037A6  C073  F019         	movff	utoa@n+5,___lomod@dividend+5
  3841  0037AA  C074  F01A         	movff	utoa@n+6,___lomod@dividend+6
  3842  0037AE  C075  F01B         	movff	utoa@n+7,___lomod@dividend+7
  3843  0037B2  0E0A               	movlw	10
  3844  0037B4  6E1C               	movwf	___lomod@divisor^0,c
  3845  0037B6  0E00               	movlw	0
  3846  0037B8  6E1D               	movwf	(___lomod@divisor+1)^0,c
  3847  0037BA  0E00               	movlw	0
  3848  0037BC  6E1E               	movwf	(___lomod@divisor+2)^0,c
  3849  0037BE  0E00               	movlw	0
  3850  0037C0  6E1F               	movwf	(___lomod@divisor+3)^0,c
  3851  0037C2  0E00               	movlw	0
  3852  0037C4  6E20               	movwf	(___lomod@divisor+4)^0,c
  3853  0037C6  0E00               	movlw	0
  3854  0037C8  6E21               	movwf	(___lomod@divisor+5)^0,c
  3855  0037CA  0E00               	movlw	0
  3856  0037CC  6E22               	movwf	(___lomod@divisor+6)^0,c
  3857  0037CE  0E00               	movlw	0
  3858  0037D0  6E23               	movwf	(___lomod@divisor+7)^0,c
  3859  0037D2  EC01  F027         	call	___lomod	;wreg free
  3860  0037D6  C014  F031         	movff	?___lomod,??_utoa
  3861  0037DA  C015  F032         	movff	?___lomod+1,??_utoa+1
  3862  0037DE  C016  F033         	movff	?___lomod+2,??_utoa+2
  3863  0037E2  C017  F034         	movff	?___lomod+3,??_utoa+3
  3864  0037E6  C018  F035         	movff	?___lomod+4,??_utoa+4
  3865  0037EA  C019  F036         	movff	?___lomod+5,??_utoa+5
  3866  0037EE  C01A  F037         	movff	?___lomod+6,??_utoa+6
  3867  0037F2  C01B  F038         	movff	?___lomod+7,??_utoa+7
  3868  0037F6  5031               	movf	??_utoa^0,w,c
  3869  0037F8  0F30               	addlw	48
  3870  0037FA  6EDF               	movwf	indf2,c
  3871  0037FC                     
  3872                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 634:         --p;
  3873  0037FC  0100               	movlb	0	; () banked
  3874  0037FE  076A               	decf	utoa@p& (0+255),f,b
  3875  003800  A0D8               	btfss	status,0,c
  3876  003802  076B               	decf	(utoa@p+1)& (0+255),f,b
  3877  003804                     
  3878                           ; BSR set to: 0
  3879                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 635:         --w;
  3880  003804  076C               	decf	utoa@w& (0+255),f,b
  3881  003806  A0D8               	btfss	status,0,c
  3882  003808  076D               	decf	(utoa@w+1)& (0+255),f,b
  3883  00380A                     
  3884                           ; BSR set to: 0
  3885                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 636:         n = 
      +                          n / 10;
  3886  00380A  C06E  F014         	movff	utoa@n,___lodiv@dividend
  3887  00380E  C06F  F015         	movff	utoa@n+1,___lodiv@dividend+1
  3888  003812  C070  F016         	movff	utoa@n+2,___lodiv@dividend+2
  3889  003816  C071  F017         	movff	utoa@n+3,___lodiv@dividend+3
  3890  00381A  C072  F018         	movff	utoa@n+4,___lodiv@dividend+4
  3891  00381E  C073  F019         	movff	utoa@n+5,___lodiv@dividend+5
  3892  003822  C074  F01A         	movff	utoa@n+6,___lodiv@dividend+6
  3893  003826  C075  F01B         	movff	utoa@n+7,___lodiv@dividend+7
  3894  00382A  0E0A               	movlw	10
  3895  00382C  6E1C               	movwf	___lodiv@divisor^0,c
  3896  00382E  0E00               	movlw	0
  3897  003830  6E1D               	movwf	(___lodiv@divisor+1)^0,c
  3898  003832  0E00               	movlw	0
  3899  003834  6E1E               	movwf	(___lodiv@divisor+2)^0,c
  3900  003836  0E00               	movlw	0
  3901  003838  6E1F               	movwf	(___lodiv@divisor+3)^0,c
  3902  00383A  0E00               	movlw	0
  3903  00383C  6E20               	movwf	(___lodiv@divisor+4)^0,c
  3904  00383E  0E00               	movlw	0
  3905  003840  6E21               	movwf	(___lodiv@divisor+5)^0,c
  3906  003842  0E00               	movlw	0
  3907  003844  6E22               	movwf	(___lodiv@divisor+6)^0,c
  3908  003846  0E00               	movlw	0
  3909  003848  6E23               	movwf	(___lodiv@divisor+7)^0,c
  3910  00384A  EC18  F026         	call	___lodiv	;wreg free
  3911  00384E  C014  F06E         	movff	?___lodiv,utoa@n
  3912  003852  C015  F06F         	movff	?___lodiv+1,utoa@n+1
  3913  003856  C016  F070         	movff	?___lodiv+2,utoa@n+2
  3914  00385A  C017  F071         	movff	?___lodiv+3,utoa@n+3
  3915  00385E  C018  F072         	movff	?___lodiv+4,utoa@n+4
  3916  003862  C019  F073         	movff	?___lodiv+5,utoa@n+5
  3917  003866  C01A  F074         	movff	?___lodiv+6,utoa@n+6
  3918  00386A  C01B  F075         	movff	?___lodiv+7,utoa@n+7
  3919  00386E                     l8909:
  3920                           
  3921                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3922  00386E  0100               	movlb	0	; () banked
  3923  003870  5176               	movf	utoa@i& (0+255),w,b
  3924  003872  1177               	iorwf	(utoa@i+1)& (0+255),w,b
  3925  003874  B4D8               	btfsc	status,2,c
  3926  003876  EF3F  F01C         	goto	u9881
  3927  00387A  EF41  F01C         	goto	u9880
  3928  00387E                     u9881:
  3929  00387E  EF71  F01C         	goto	l8919
  3930  003882                     u9880:
  3931  003882                     
  3932                           ; BSR set to: 0
  3933  003882  516E               	movf	utoa@n& (0+255),w,b
  3934  003884  116F               	iorwf	(utoa@n+1)& (0+255),w,b
  3935  003886  1170               	iorwf	(utoa@n+2)& (0+255),w,b
  3936  003888  1171               	iorwf	(utoa@n+3)& (0+255),w,b
  3937  00388A  1172               	iorwf	(utoa@n+4)& (0+255),w,b
  3938  00388C  1173               	iorwf	(utoa@n+5)& (0+255),w,b
  3939  00388E  1174               	iorwf	(utoa@n+6)& (0+255),w,b
  3940  003890  1175               	iorwf	(utoa@n+7)& (0+255),w,b
  3941  003892  A4D8               	btfss	status,2,c
  3942  003894  EF4E  F01C         	goto	u9891
  3943  003898  EF50  F01C         	goto	u9890
  3944  00389C                     u9891:
  3945  00389C  EFC0  F01B         	goto	l8899
  3946  0038A0                     u9890:
  3947  0038A0                     
  3948                           ; BSR set to: 0
  3949  0038A0  BF6B               	btfsc	(utoa@p+1)& (0+255),7,b
  3950  0038A2  EF5D  F01C         	goto	u9900
  3951  0038A6  516B               	movf	(utoa@p+1)& (0+255),w,b
  3952  0038A8  E106               	bnz	u9901
  3953  0038AA  056A               	decf	utoa@p& (0+255),w,b
  3954  0038AC  B0D8               	btfsc	status,0,c
  3955  0038AE  EF5B  F01C         	goto	u9901
  3956  0038B2  EF5D  F01C         	goto	u9900
  3957  0038B6                     u9901:
  3958  0038B6  EFC0  F01B         	goto	l8899
  3959  0038BA                     u9900:
  3960  0038BA                     
  3961                           ; BSR set to: 0
  3962  0038BA  BF6D               	btfsc	(utoa@w+1)& (0+255),7,b
  3963  0038BC  EF68  F01C         	goto	u9911
  3964  0038C0  516D               	movf	(utoa@w+1)& (0+255),w,b
  3965  0038C2  E108               	bnz	u9910
  3966  0038C4  056C               	decf	utoa@w& (0+255),w,b
  3967  0038C6  A0D8               	btfss	status,0,c
  3968  0038C8  EF68  F01C         	goto	u9911
  3969  0038CC  EF6A  F01C         	goto	u9910
  3970  0038D0                     u9911:
  3971  0038D0  EF71  F01C         	goto	l8919
  3972  0038D4                     u9910:
  3973  0038D4                     
  3974                           ; BSR set to: 0
  3975  0038D4  B23E               	btfsc	_flags^0,1,c
  3976  0038D6  EF6F  F01C         	goto	u9921
  3977  0038DA  EF71  F01C         	goto	u9920
  3978  0038DE                     u9921:
  3979  0038DE  EFC0  F01B         	goto	l8899
  3980  0038E2                     u9920:
  3981  0038E2                     l8919:
  3982                           
  3983                           ; BSR set to: 0
  3984                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 640:     return p
      +                          ad(fp, &dbuf[i], w);
  3985  0038E2  C060  F026         	movff	utoa@fp,pad@fp
  3986  0038E6  C061  F027         	movff	utoa@fp+1,pad@fp+1
  3987  0038EA  0E40               	movlw	low _dbuf
  3988  0038EC  2576               	addwf	utoa@i& (0+255),w,b
  3989  0038EE  6E28               	movwf	pad@buf^0,c
  3990  0038F0  0E01               	movlw	high _dbuf
  3991  0038F2  2177               	addwfc	(utoa@i+1)& (0+255),w,b
  3992  0038F4  6E29               	movwf	(pad@buf+1)^0,c
  3993  0038F6  C06C  F02A         	movff	utoa@w,pad@p
  3994  0038FA  C06D  F02B         	movff	utoa@w+1,pad@p+1
  3995  0038FE  EC96  F028         	call	_pad	;wreg free
  3996  003902  C026  F060         	movff	?_pad,?_utoa
  3997  003906  C027  F061         	movff	?_pad+1,?_utoa+1
  3998  00390A  0012               	return		;funcret
  3999  00390C                     __end_of_utoa:
  4000                           	callstack 0
  4001                           
  4002 ;; *************** function ___lomod *****************
  4003 ;; Defined at:
  4004 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lomod.c"
  4005 ;; Parameters:    Size  Location     Type
  4006 ;;  dividend        8   19[COMRAM] unsigned long long 
  4007 ;;  divisor         8   27[COMRAM] unsigned long long 
  4008 ;; Auto vars:     Size  Location     Type
  4009 ;;  counter         1   35[COMRAM] unsigned char 
  4010 ;; Return value:  Size  Location     Type
  4011 ;;                  8   19[COMRAM] unsigned long long 
  4012 ;; Registers used:
  4013 ;;		wreg, status,2, status,0
  4014 ;; Tracked objects:
  4015 ;;		On entry : 0/0
  4016 ;;		On exit  : 0/0
  4017 ;;		Unchanged: 0/0
  4018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4019 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4020 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4022 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4023 ;;Total ram usage:       17 bytes
  4024 ;; Hardware stack levels used: 1
  4025 ;; Hardware stack levels required when called: 8
  4026 ;; This function calls:
  4027 ;;		Nothing
  4028 ;; This function is called by:
  4029 ;;		_utoa
  4030 ;; This function uses a non-reentrant model
  4031 ;;
  4032                           
  4033                           	psect	text10
  4034  004E02                     __ptext10:
  4035                           	callstack 0
  4036  004E02                     ___lomod:
  4037                           	callstack 16
  4038  004E02  501C               	movf	___lomod@divisor^0,w,c
  4039  004E04  101D               	iorwf	(___lomod@divisor+1)^0,w,c
  4040  004E06  101E               	iorwf	(___lomod@divisor+2)^0,w,c
  4041  004E08  101F               	iorwf	(___lomod@divisor+3)^0,w,c
  4042  004E0A  1020               	iorwf	(___lomod@divisor+4)^0,w,c
  4043  004E0C  1021               	iorwf	(___lomod@divisor+5)^0,w,c
  4044  004E0E  1022               	iorwf	(___lomod@divisor+6)^0,w,c
  4045  004E10  1023               	iorwf	(___lomod@divisor+7)^0,w,c
  4046  004E12  B4D8               	btfsc	status,2,c
  4047  004E14  EF0E  F027         	goto	u8871
  4048  004E18  EF10  F027         	goto	u8870
  4049  004E1C                     u8871:
  4050  004E1C  EF58  F027         	goto	l1851
  4051  004E20                     u8870:
  4052  004E20  0E01               	movlw	1
  4053  004E22  6E24               	movwf	___lomod@counter^0,c
  4054  004E24  EF1E  F027         	goto	l8417
  4055  004E28                     l8415:
  4056  004E28  90D8               	bcf	status,0,c
  4057  004E2A  361C               	rlcf	___lomod@divisor^0,f,c
  4058  004E2C  361D               	rlcf	(___lomod@divisor+1)^0,f,c
  4059  004E2E  361E               	rlcf	(___lomod@divisor+2)^0,f,c
  4060  004E30  361F               	rlcf	(___lomod@divisor+3)^0,f,c
  4061  004E32  3620               	rlcf	(___lomod@divisor+4)^0,f,c
  4062  004E34  3621               	rlcf	(___lomod@divisor+5)^0,f,c
  4063  004E36  3622               	rlcf	(___lomod@divisor+6)^0,f,c
  4064  004E38  3623               	rlcf	(___lomod@divisor+7)^0,f,c
  4065  004E3A  2A24               	incf	___lomod@counter^0,f,c
  4066  004E3C                     l8417:
  4067  004E3C  AE23               	btfss	(___lomod@divisor+7)^0,7,c
  4068  004E3E  EF23  F027         	goto	u8881
  4069  004E42  EF25  F027         	goto	u8880
  4070  004E46                     u8881:
  4071  004E46  EF14  F027         	goto	l8415
  4072  004E4A                     u8880:
  4073  004E4A                     l8419:
  4074  004E4A  501C               	movf	___lomod@divisor^0,w,c
  4075  004E4C  5C14               	subwf	___lomod@dividend^0,w,c
  4076  004E4E  501D               	movf	(___lomod@divisor+1)^0,w,c
  4077  004E50  5815               	subwfb	(___lomod@dividend+1)^0,w,c
  4078  004E52  501E               	movf	(___lomod@divisor+2)^0,w,c
  4079  004E54  5816               	subwfb	(___lomod@dividend+2)^0,w,c
  4080  004E56  501F               	movf	(___lomod@divisor+3)^0,w,c
  4081  004E58  5817               	subwfb	(___lomod@dividend+3)^0,w,c
  4082  004E5A  5020               	movf	(___lomod@divisor+4)^0,w,c
  4083  004E5C  5818               	subwfb	(___lomod@dividend+4)^0,w,c
  4084  004E5E  5021               	movf	(___lomod@divisor+5)^0,w,c
  4085  004E60  5819               	subwfb	(___lomod@dividend+5)^0,w,c
  4086  004E62  5022               	movf	(___lomod@divisor+6)^0,w,c
  4087  004E64  581A               	subwfb	(___lomod@dividend+6)^0,w,c
  4088  004E66  5023               	movf	(___lomod@divisor+7)^0,w,c
  4089  004E68  581B               	subwfb	(___lomod@dividend+7)^0,w,c
  4090  004E6A  A0D8               	btfss	status,0,c
  4091  004E6C  EF3A  F027         	goto	u8891
  4092  004E70  EF3C  F027         	goto	u8890
  4093  004E74                     u8891:
  4094  004E74  EF4C  F027         	goto	l8423
  4095  004E78                     u8890:
  4096  004E78  501C               	movf	___lomod@divisor^0,w,c
  4097  004E7A  5E14               	subwf	___lomod@dividend^0,f,c
  4098  004E7C  501D               	movf	(___lomod@divisor+1)^0,w,c
  4099  004E7E  5A15               	subwfb	(___lomod@dividend+1)^0,f,c
  4100  004E80  501E               	movf	(___lomod@divisor+2)^0,w,c
  4101  004E82  5A16               	subwfb	(___lomod@dividend+2)^0,f,c
  4102  004E84  501F               	movf	(___lomod@divisor+3)^0,w,c
  4103  004E86  5A17               	subwfb	(___lomod@dividend+3)^0,f,c
  4104  004E88  5020               	movf	(___lomod@divisor+4)^0,w,c
  4105  004E8A  5A18               	subwfb	(___lomod@dividend+4)^0,f,c
  4106  004E8C  5021               	movf	(___lomod@divisor+5)^0,w,c
  4107  004E8E  5A19               	subwfb	(___lomod@dividend+5)^0,f,c
  4108  004E90  5022               	movf	(___lomod@divisor+6)^0,w,c
  4109  004E92  5A1A               	subwfb	(___lomod@dividend+6)^0,f,c
  4110  004E94  5023               	movf	(___lomod@divisor+7)^0,w,c
  4111  004E96  5A1B               	subwfb	(___lomod@dividend+7)^0,f,c
  4112  004E98                     l8423:
  4113  004E98  90D8               	bcf	status,0,c
  4114  004E9A  3223               	rrcf	(___lomod@divisor+7)^0,f,c
  4115  004E9C  3222               	rrcf	(___lomod@divisor+6)^0,f,c
  4116  004E9E  3221               	rrcf	(___lomod@divisor+5)^0,f,c
  4117  004EA0  3220               	rrcf	(___lomod@divisor+4)^0,f,c
  4118  004EA2  321F               	rrcf	(___lomod@divisor+3)^0,f,c
  4119  004EA4  321E               	rrcf	(___lomod@divisor+2)^0,f,c
  4120  004EA6  321D               	rrcf	(___lomod@divisor+1)^0,f,c
  4121  004EA8  321C               	rrcf	___lomod@divisor^0,f,c
  4122  004EAA  2E24               	decfsz	___lomod@counter^0,f,c
  4123  004EAC  EF25  F027         	goto	l8419
  4124  004EB0                     l1851:
  4125  004EB0  C014  F014         	movff	___lomod@dividend,?___lomod
  4126  004EB4  C015  F015         	movff	___lomod@dividend+1,?___lomod+1
  4127  004EB8  C016  F016         	movff	___lomod@dividend+2,?___lomod+2
  4128  004EBC  C017  F017         	movff	___lomod@dividend+3,?___lomod+3
  4129  004EC0  C018  F018         	movff	___lomod@dividend+4,?___lomod+4
  4130  004EC4  C019  F019         	movff	___lomod@dividend+5,?___lomod+5
  4131  004EC8  C01A  F01A         	movff	___lomod@dividend+6,?___lomod+6
  4132  004ECC  C01B  F01B         	movff	___lomod@dividend+7,?___lomod+7
  4133  004ED0  0012               	return		;funcret
  4134  004ED2                     __end_of___lomod:
  4135                           	callstack 0
  4136                           
  4137 ;; *************** function ___lodiv *****************
  4138 ;; Defined at:
  4139 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lodiv.c"
  4140 ;; Parameters:    Size  Location     Type
  4141 ;;  dividend        8   19[COMRAM] unsigned long long 
  4142 ;;  divisor         8   27[COMRAM] unsigned long long 
  4143 ;; Auto vars:     Size  Location     Type
  4144 ;;  quotient        8   35[COMRAM] unsigned long long 
  4145 ;;  counter         1   43[COMRAM] unsigned char 
  4146 ;; Return value:  Size  Location     Type
  4147 ;;                  8   19[COMRAM] unsigned long long 
  4148 ;; Registers used:
  4149 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4150 ;; Tracked objects:
  4151 ;;		On entry : 0/0
  4152 ;;		On exit  : 0/0
  4153 ;;		Unchanged: 0/0
  4154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4155 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4156 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4158 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4159 ;;Total ram usage:       25 bytes
  4160 ;; Hardware stack levels used: 1
  4161 ;; Hardware stack levels required when called: 8
  4162 ;; This function calls:
  4163 ;;		Nothing
  4164 ;; This function is called by:
  4165 ;;		_utoa
  4166 ;; This function uses a non-reentrant model
  4167 ;;
  4168                           
  4169                           	psect	text11
  4170  004C30                     __ptext11:
  4171                           	callstack 0
  4172  004C30                     ___lodiv:
  4173                           	callstack 16
  4174  004C30  EE20  F024         	lfsr	2,___lodiv@quotient
  4175  004C34  0E07               	movlw	7
  4176  004C36                     u8831:
  4177  004C36  6ADE               	clrf	postinc2,c
  4178  004C38  06E8               	decf	wreg,f,c
  4179  004C3A  E2FD               	bc	u8831
  4180  004C3C  501C               	movf	___lodiv@divisor^0,w,c
  4181  004C3E  101D               	iorwf	(___lodiv@divisor+1)^0,w,c
  4182  004C40  101E               	iorwf	(___lodiv@divisor+2)^0,w,c
  4183  004C42  101F               	iorwf	(___lodiv@divisor+3)^0,w,c
  4184  004C44  1020               	iorwf	(___lodiv@divisor+4)^0,w,c
  4185  004C46  1021               	iorwf	(___lodiv@divisor+5)^0,w,c
  4186  004C48  1022               	iorwf	(___lodiv@divisor+6)^0,w,c
  4187  004C4A  1023               	iorwf	(___lodiv@divisor+7)^0,w,c
  4188  004C4C  B4D8               	btfsc	status,2,c
  4189  004C4E  EF2B  F026         	goto	u8841
  4190  004C52  EF2D  F026         	goto	u8840
  4191  004C56                     u8841:
  4192  004C56  EF7F  F026         	goto	l1841
  4193  004C5A                     u8840:
  4194  004C5A  0E01               	movlw	1
  4195  004C5C  6E2C               	movwf	___lodiv@counter^0,c
  4196  004C5E  EF3B  F026         	goto	l8397
  4197  004C62                     l8395:
  4198  004C62  90D8               	bcf	status,0,c
  4199  004C64  361C               	rlcf	___lodiv@divisor^0,f,c
  4200  004C66  361D               	rlcf	(___lodiv@divisor+1)^0,f,c
  4201  004C68  361E               	rlcf	(___lodiv@divisor+2)^0,f,c
  4202  004C6A  361F               	rlcf	(___lodiv@divisor+3)^0,f,c
  4203  004C6C  3620               	rlcf	(___lodiv@divisor+4)^0,f,c
  4204  004C6E  3621               	rlcf	(___lodiv@divisor+5)^0,f,c
  4205  004C70  3622               	rlcf	(___lodiv@divisor+6)^0,f,c
  4206  004C72  3623               	rlcf	(___lodiv@divisor+7)^0,f,c
  4207  004C74  2A2C               	incf	___lodiv@counter^0,f,c
  4208  004C76                     l8397:
  4209  004C76  AE23               	btfss	(___lodiv@divisor+7)^0,7,c
  4210  004C78  EF40  F026         	goto	u8851
  4211  004C7C  EF42  F026         	goto	u8850
  4212  004C80                     u8851:
  4213  004C80  EF31  F026         	goto	l8395
  4214  004C84                     u8850:
  4215  004C84                     l8399:
  4216  004C84  90D8               	bcf	status,0,c
  4217  004C86  3624               	rlcf	___lodiv@quotient^0,f,c
  4218  004C88  3625               	rlcf	(___lodiv@quotient+1)^0,f,c
  4219  004C8A  3626               	rlcf	(___lodiv@quotient+2)^0,f,c
  4220  004C8C  3627               	rlcf	(___lodiv@quotient+3)^0,f,c
  4221  004C8E  3628               	rlcf	(___lodiv@quotient+4)^0,f,c
  4222  004C90  3629               	rlcf	(___lodiv@quotient+5)^0,f,c
  4223  004C92  362A               	rlcf	(___lodiv@quotient+6)^0,f,c
  4224  004C94  362B               	rlcf	(___lodiv@quotient+7)^0,f,c
  4225  004C96  501C               	movf	___lodiv@divisor^0,w,c
  4226  004C98  5C14               	subwf	___lodiv@dividend^0,w,c
  4227  004C9A  501D               	movf	(___lodiv@divisor+1)^0,w,c
  4228  004C9C  5815               	subwfb	(___lodiv@dividend+1)^0,w,c
  4229  004C9E  501E               	movf	(___lodiv@divisor+2)^0,w,c
  4230  004CA0  5816               	subwfb	(___lodiv@dividend+2)^0,w,c
  4231  004CA2  501F               	movf	(___lodiv@divisor+3)^0,w,c
  4232  004CA4  5817               	subwfb	(___lodiv@dividend+3)^0,w,c
  4233  004CA6  5020               	movf	(___lodiv@divisor+4)^0,w,c
  4234  004CA8  5818               	subwfb	(___lodiv@dividend+4)^0,w,c
  4235  004CAA  5021               	movf	(___lodiv@divisor+5)^0,w,c
  4236  004CAC  5819               	subwfb	(___lodiv@dividend+5)^0,w,c
  4237  004CAE  5022               	movf	(___lodiv@divisor+6)^0,w,c
  4238  004CB0  581A               	subwfb	(___lodiv@dividend+6)^0,w,c
  4239  004CB2  5023               	movf	(___lodiv@divisor+7)^0,w,c
  4240  004CB4  581B               	subwfb	(___lodiv@dividend+7)^0,w,c
  4241  004CB6  A0D8               	btfss	status,0,c
  4242  004CB8  EF60  F026         	goto	u8861
  4243  004CBC  EF62  F026         	goto	u8860
  4244  004CC0                     u8861:
  4245  004CC0  EF73  F026         	goto	l8407
  4246  004CC4                     u8860:
  4247  004CC4  501C               	movf	___lodiv@divisor^0,w,c
  4248  004CC6  5E14               	subwf	___lodiv@dividend^0,f,c
  4249  004CC8  501D               	movf	(___lodiv@divisor+1)^0,w,c
  4250  004CCA  5A15               	subwfb	(___lodiv@dividend+1)^0,f,c
  4251  004CCC  501E               	movf	(___lodiv@divisor+2)^0,w,c
  4252  004CCE  5A16               	subwfb	(___lodiv@dividend+2)^0,f,c
  4253  004CD0  501F               	movf	(___lodiv@divisor+3)^0,w,c
  4254  004CD2  5A17               	subwfb	(___lodiv@dividend+3)^0,f,c
  4255  004CD4  5020               	movf	(___lodiv@divisor+4)^0,w,c
  4256  004CD6  5A18               	subwfb	(___lodiv@dividend+4)^0,f,c
  4257  004CD8  5021               	movf	(___lodiv@divisor+5)^0,w,c
  4258  004CDA  5A19               	subwfb	(___lodiv@dividend+5)^0,f,c
  4259  004CDC  5022               	movf	(___lodiv@divisor+6)^0,w,c
  4260  004CDE  5A1A               	subwfb	(___lodiv@dividend+6)^0,f,c
  4261  004CE0  5023               	movf	(___lodiv@divisor+7)^0,w,c
  4262  004CE2  5A1B               	subwfb	(___lodiv@dividend+7)^0,f,c
  4263  004CE4  8024               	bsf	___lodiv@quotient^0,0,c
  4264  004CE6                     l8407:
  4265  004CE6  90D8               	bcf	status,0,c
  4266  004CE8  3223               	rrcf	(___lodiv@divisor+7)^0,f,c
  4267  004CEA  3222               	rrcf	(___lodiv@divisor+6)^0,f,c
  4268  004CEC  3221               	rrcf	(___lodiv@divisor+5)^0,f,c
  4269  004CEE  3220               	rrcf	(___lodiv@divisor+4)^0,f,c
  4270  004CF0  321F               	rrcf	(___lodiv@divisor+3)^0,f,c
  4271  004CF2  321E               	rrcf	(___lodiv@divisor+2)^0,f,c
  4272  004CF4  321D               	rrcf	(___lodiv@divisor+1)^0,f,c
  4273  004CF6  321C               	rrcf	___lodiv@divisor^0,f,c
  4274  004CF8  2E2C               	decfsz	___lodiv@counter^0,f,c
  4275  004CFA  EF42  F026         	goto	l8399
  4276  004CFE                     l1841:
  4277  004CFE  C024  F014         	movff	___lodiv@quotient,?___lodiv
  4278  004D02  C025  F015         	movff	___lodiv@quotient+1,?___lodiv+1
  4279  004D06  C026  F016         	movff	___lodiv@quotient+2,?___lodiv+2
  4280  004D0A  C027  F017         	movff	___lodiv@quotient+3,?___lodiv+3
  4281  004D0E  C028  F018         	movff	___lodiv@quotient+4,?___lodiv+4
  4282  004D12  C029  F019         	movff	___lodiv@quotient+5,?___lodiv+5
  4283  004D16  C02A  F01A         	movff	___lodiv@quotient+6,?___lodiv+6
  4284  004D1A  C02B  F01B         	movff	___lodiv@quotient+7,?___lodiv+7
  4285  004D1E  0012               	return		;funcret
  4286  004D20                     __end_of___lodiv:
  4287                           	callstack 0
  4288                           
  4289 ;; *************** function _strncmp *****************
  4290 ;; Defined at:
  4291 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  4292 ;; Parameters:    Size  Location     Type
  4293 ;;  _l              2   19[COMRAM] PTR const unsigned char 
  4294 ;;		 -> vfpfcnvrt@ct(3), 
  4295 ;;  _r              2   21[COMRAM] PTR const unsigned char 
  4296 ;;		 -> STR_19(3), 
  4297 ;;  n               2   23[COMRAM] unsigned int 
  4298 ;; Auto vars:     Size  Location     Type
  4299 ;;  r               2   28[COMRAM] PTR const unsigned char 
  4300 ;;		 -> STR_19(3), 
  4301 ;;  l               2   26[COMRAM] PTR const unsigned char 
  4302 ;;		 -> vfpfcnvrt@ct(3), 
  4303 ;; Return value:  Size  Location     Type
  4304 ;;                  2   19[COMRAM] int 
  4305 ;; Registers used:
  4306 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4307 ;; Tracked objects:
  4308 ;;		On entry : 0/0
  4309 ;;		On exit  : 0/0
  4310 ;;		Unchanged: 0/0
  4311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4312 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4313 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4314 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4315 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4316 ;;Total ram usage:       11 bytes
  4317 ;; Hardware stack levels used: 1
  4318 ;; Hardware stack levels required when called: 8
  4319 ;; This function calls:
  4320 ;;		Nothing
  4321 ;; This function is called by:
  4322 ;;		_vfpfcnvrt
  4323 ;; This function uses a non-reentrant model
  4324 ;;
  4325                           
  4326                           	psect	text12
  4327  004B3C                     __ptext12:
  4328                           	callstack 0
  4329  004B3C                     _strncmp:
  4330                           	callstack 17
  4331  004B3C  C014  F01B         	movff	strncmp@_l,strncmp@l
  4332  004B40  C015  F01C         	movff	strncmp@_l+1,strncmp@l+1
  4333  004B44  C016  F01D         	movff	strncmp@_r,strncmp@r
  4334  004B48  C017  F01E         	movff	strncmp@_r+1,strncmp@r+1
  4335  004B4C  0618               	decf	strncmp@n^0,f,c
  4336  004B4E  A0D8               	btfss	status,0,c
  4337  004B50  0619               	decf	(strncmp@n+1)^0,f,c
  4338  004B52  2818               	incf	strncmp@n^0,w,c
  4339  004B54  E106               	bnz	u9931
  4340  004B56  2819               	incf	(strncmp@n+1)^0,w,c
  4341  004B58  A4D8               	btfss	status,2,c
  4342  004B5A  EFB1  F025         	goto	u9931
  4343  004B5E  EFB3  F025         	goto	u9930
  4344  004B62                     u9931:
  4345  004B62  EFC0  F025         	goto	l8931
  4346  004B66                     u9930:
  4347  004B66  0E00               	movlw	0
  4348  004B68  6E15               	movwf	(?_strncmp+1)^0,c
  4349  004B6A  0E00               	movlw	0
  4350  004B6C  6E14               	movwf	?_strncmp^0,c
  4351  004B6E  EF17  F026         	goto	l2357
  4352  004B72                     l8929:
  4353  004B72  4A1B               	infsnz	strncmp@l^0,f,c
  4354  004B74  2A1C               	incf	(strncmp@l+1)^0,f,c
  4355  004B76  4A1D               	infsnz	strncmp@r^0,f,c
  4356  004B78  2A1E               	incf	(strncmp@r+1)^0,f,c
  4357  004B7A  0618               	decf	strncmp@n^0,f,c
  4358  004B7C  A0D8               	btfss	status,0,c
  4359  004B7E  0619               	decf	(strncmp@n+1)^0,f,c
  4360  004B80                     l8931:
  4361  004B80  0060  F06F  FFD9   	movff	strncmp@l,fsr2l
  4362  004B86  0060  F073  FFDA   	movff	strncmp@l+1,fsr2h
  4363  004B8C  50DF               	movf	indf2,w,c
  4364  004B8E  B4D8               	btfsc	status,2,c
  4365  004B90  EFCC  F025         	goto	u9941
  4366  004B94  EFCE  F025         	goto	u9940
  4367  004B98                     u9941:
  4368  004B98  EF01  F026         	goto	l8939
  4369  004B9C                     u9940:
  4370  004B9C  0060  F077  FFF6   	movff	strncmp@r,tblptrl
  4371  004BA2  0060  F07B  FFF7   	movff	strncmp@r+1,tblptrh
  4372  004BA8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4373  004BA8  6AF8               	clrf	tblptru,c
  4374  004BAA                     	endif
  4375  004BAA                     	if	0	;tblptru may be non-zero
  4376  004BAA                     	endif
  4377  004BAA  0008               	tblrd		*
  4378  004BAC  50F5               	movf	tablat,w,c
  4379  004BAE  0900               	iorlw	0
  4380  004BB0  B4D8               	btfsc	status,2,c
  4381  004BB2  EFDD  F025         	goto	u9951
  4382  004BB6  EFDF  F025         	goto	u9950
  4383  004BBA                     u9951:
  4384  004BBA  EF01  F026         	goto	l8939
  4385  004BBE                     u9950:
  4386  004BBE  5018               	movf	strncmp@n^0,w,c
  4387  004BC0  1019               	iorwf	(strncmp@n+1)^0,w,c
  4388  004BC2  B4D8               	btfsc	status,2,c
  4389  004BC4  EFE6  F025         	goto	u9961
  4390  004BC8  EFE8  F025         	goto	u9960
  4391  004BCC                     u9961:
  4392  004BCC  EF01  F026         	goto	l8939
  4393  004BD0                     u9960:
  4394  004BD0  0060  F06F  FFD9   	movff	strncmp@l,fsr2l
  4395  004BD6  0060  F073  FFDA   	movff	strncmp@l+1,fsr2h
  4396  004BDC  50DF               	movf	indf2,w,c
  4397  004BDE  6E1A               	movwf	??_strncmp^0,c
  4398  004BE0  0060  F077  FFF6   	movff	strncmp@r,tblptrl
  4399  004BE6  0060  F07B  FFF7   	movff	strncmp@r+1,tblptrh
  4400  004BEC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4401  004BEC  6AF8               	clrf	tblptru,c
  4402  004BEE                     	endif
  4403  004BEE                     	if	0	;tblptru may be non-zero
  4404  004BEE                     	endif
  4405  004BEE  0008               	tblrd		*
  4406  004BF0  50F5               	movf	tablat,w,c
  4407  004BF2  181A               	xorwf	??_strncmp^0,w,c
  4408  004BF4  B4D8               	btfsc	status,2,c
  4409  004BF6  EFFF  F025         	goto	u9971
  4410  004BFA  EF01  F026         	goto	u9970
  4411  004BFE                     u9971:
  4412  004BFE  EFB9  F025         	goto	l8929
  4413  004C02                     u9970:
  4414  004C02                     l8939:
  4415  004C02  0060  F06F  FFD9   	movff	strncmp@l,fsr2l
  4416  004C08  0060  F073  FFDA   	movff	strncmp@l+1,fsr2h
  4417  004C0E  50DF               	movf	indf2,w,c
  4418  004C10  6E1A               	movwf	??_strncmp^0,c
  4419  004C12  0060  F077  FFF6   	movff	strncmp@r,tblptrl
  4420  004C18  0060  F07B  FFF7   	movff	strncmp@r+1,tblptrh
  4421  004C1E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4422  004C1E  6AF8               	clrf	tblptru,c
  4423  004C20                     	endif
  4424  004C20                     	if	0	;tblptru may be non-zero
  4425  004C20                     	endif
  4426  004C20  0008               	tblrd		*
  4427  004C22  50F5               	movf	tablat,w,c
  4428  004C24  5C1A               	subwf	??_strncmp^0,w,c
  4429  004C26  6E14               	movwf	?_strncmp^0,c
  4430  004C28  6A15               	clrf	(?_strncmp+1)^0,c
  4431  004C2A  A0D8               	btfss	status,0,c
  4432  004C2C  0615               	decf	(?_strncmp+1)^0,f,c
  4433  004C2E                     l2357:
  4434  004C2E  0012               	return		;funcret
  4435  004C30                     __end_of_strncmp:
  4436                           	callstack 0
  4437                           
  4438 ;; *************** function _efgtoa *****************
  4439 ;; Defined at:
  4440 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4441 ;; Parameters:    Size  Location     Type
  4442 ;;  fp              2   35[BANK0 ] PTR struct _IO_FILE
  4443 ;;		 -> NULL(0), 
  4444 ;;  f               4   37[BANK0 ] PTR struct _IO_FILE
  4445 ;;  c               1   41[BANK0 ] unsigned char 
  4446 ;; Auto vars:     Size  Location     Type
  4447 ;;  u               4   99[BANK0 ] unsigned char 
  4448 ;;  g               4   91[BANK0 ] unsigned char 
  4449 ;;  l               4   85[BANK0 ] unsigned char 
  4450 ;;  h               4   81[BANK0 ] unsigned char 
  4451 ;;  ou              4   67[BANK0 ] unsigned char 
  4452 ;;  n               2   97[BANK0 ] int 
  4453 ;;  e               2   95[BANK0 ] int 
  4454 ;;  i               2   89[BANK0 ] int 
  4455 ;;  w               2   77[BANK0 ] int 
  4456 ;;  p               2   75[BANK0 ] int 
  4457 ;;  sign            2   73[BANK0 ] int 
  4458 ;;  d               2   71[BANK0 ] int 
  4459 ;;  m               2   65[BANK0 ] int 
  4460 ;;  ne              2   63[BANK0 ] int 
  4461 ;;  pp              2   61[BANK0 ] int 
  4462 ;;  t               2   59[BANK0 ] int 
  4463 ;;  mode            1   80[BANK0 ] unsigned char 
  4464 ;;  nmode           1   79[BANK0 ] unsigned char 
  4465 ;; Return value:  Size  Location     Type
  4466 ;;                  2   35[BANK0 ] int 
  4467 ;; Registers used:
  4468 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4469 ;; Tracked objects:
  4470 ;;		On entry : 0/0
  4471 ;;		On exit  : 0/0
  4472 ;;		Unchanged: 0/0
  4473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4474 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4475 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4476 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4477 ;;      Totals:         0      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4478 ;;Total ram usage:       68 bytes
  4479 ;; Hardware stack levels used: 1
  4480 ;; Hardware stack levels required when called: 13
  4481 ;; This function calls:
  4482 ;;		___awdiv
  4483 ;;		___awmod
  4484 ;;		___fladd
  4485 ;;		___fldiv
  4486 ;;		___fleq
  4487 ;;		___flge
  4488 ;;		___flmul
  4489 ;;		___flneg
  4490 ;;		___flsub
  4491 ;;		___fltol
  4492 ;;		___fpclassifyf
  4493 ;;		_floorf
  4494 ;;		_isupper
  4495 ;;		_pad
  4496 ;;		_strcpy
  4497 ;;		_tolower
  4498 ;; This function is called by:
  4499 ;;		_vfpfcnvrt
  4500 ;; This function uses a non-reentrant model
  4501 ;;
  4502                           
  4503                           	psect	text13
  4504  0010AA                     __ptext13:
  4505                           	callstack 0
  4506  0010AA                     _efgtoa:
  4507                           	callstack 12
  4508  0010AA                     
  4509                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  4510  0010AA  0E00               	movlw	0
  4511  0010AC  0100               	movlb	0	; () banked
  4512  0010AE  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  4513  0010B0  0E00               	movlw	0
  4514  0010B2  6FA9               	movwf	efgtoa@sign& (0+255),b
  4515  0010B4                     
  4516                           ; BSR set to: 0
  4517                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  4518  0010B4  C085  F0BB         	movff	efgtoa@f,efgtoa@g
  4519  0010B8  C086  F0BC         	movff	efgtoa@f+1,efgtoa@g+1
  4520  0010BC  C087  F0BD         	movff	efgtoa@f+2,efgtoa@g+2
  4521  0010C0  C088  F0BE         	movff	efgtoa@f+3,efgtoa@g+3
  4522  0010C4                     
  4523                           ; BSR set to: 0
  4524                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  4525  0010C4  BFBE               	btfsc	(efgtoa@g+3)& (0+255),7,b
  4526  0010C6  EF69  F008         	goto	u9320
  4527  0010CA  EF67  F008         	goto	u9321
  4528  0010CE                     u9321:
  4529  0010CE  EF7F  F008         	goto	l8589
  4530  0010D2                     u9320:
  4531  0010D2                     
  4532                           ; BSR set to: 0
  4533                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  4534  0010D2  0E00               	movlw	0
  4535  0010D4  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  4536  0010D6  0E01               	movlw	1
  4537  0010D8  6FA9               	movwf	efgtoa@sign& (0+255),b
  4538  0010DA                     
  4539                           ; BSR set to: 0
  4540                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  4541  0010DA  C0BB  F014         	movff	efgtoa@g,___flneg@f1
  4542  0010DE  C0BC  F015         	movff	efgtoa@g+1,___flneg@f1+1
  4543  0010E2  C0BD  F016         	movff	efgtoa@g+2,___flneg@f1+2
  4544  0010E6  C0BE  F017         	movff	efgtoa@g+3,___flneg@f1+3
  4545  0010EA  EC93  F02E         	call	___flneg	;wreg free
  4546  0010EE  C014  F0BB         	movff	?___flneg,efgtoa@g
  4547  0010F2  C015  F0BC         	movff	?___flneg+1,efgtoa@g+1
  4548  0010F6  C016  F0BD         	movff	?___flneg+2,efgtoa@g+2
  4549  0010FA  C017  F0BE         	movff	?___flneg+3,efgtoa@g+3
  4550  0010FE                     l8589:
  4551                           
  4552                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  4553  0010FE  0E00               	movlw	0
  4554  001100  0100               	movlb	0	; () banked
  4555  001102  6FC2               	movwf	(efgtoa@n+1)& (0+255),b
  4556  001104  0E00               	movlw	0
  4557  001106  6FC1               	movwf	efgtoa@n& (0+255),b
  4558  001108                     
  4559                           ; BSR set to: 0
  4560                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  4561  001108  C03A  F0AD         	movff	_width,efgtoa@w
  4562  00110C  C03B  F0AE         	movff	_width+1,efgtoa@w+1
  4563  001110                     
  4564                           ; BSR set to: 0
  4565                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  4566  001110  51A9               	movf	efgtoa@sign& (0+255),w,b
  4567  001112  11AA               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4568  001114  A4D8               	btfss	status,2,c
  4569  001116  EF8F  F008         	goto	u9331
  4570  00111A  EF91  F008         	goto	u9330
  4571  00111E                     u9331:
  4572  00111E  EF98  F008         	goto	l8597
  4573  001122                     u9330:
  4574  001122                     
  4575                           ; BSR set to: 0
  4576  001122  A43E               	btfss	_flags^0,2,c
  4577  001124  EF96  F008         	goto	u9341
  4578  001128  EF98  F008         	goto	u9340
  4579  00112C                     u9341:
  4580  00112C  EFB2  F008         	goto	l8609
  4581  001130                     u9340:
  4582  001130                     l8597:
  4583                           
  4584                           ; BSR set to: 0
  4585                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  4586  001130  51A9               	movf	efgtoa@sign& (0+255),w,b
  4587  001132  11AA               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4588  001134  A4D8               	btfss	status,2,c
  4589  001136  EF9F  F008         	goto	u9351
  4590  00113A  EFA1  F008         	goto	u9350
  4591  00113E                     u9351:
  4592  00113E  EFA7  F008         	goto	l8601
  4593  001142                     u9350:
  4594  001142                     
  4595                           ; BSR set to: 0
  4596  001142  0E00               	movlw	0
  4597  001144  6F90               	movwf	(_efgtoa$3565+1)& (0+255),b
  4598  001146  0E2B               	movlw	43
  4599  001148  6F8F               	movwf	_efgtoa$3565& (0+255),b
  4600  00114A  EFAB  F008         	goto	l8603
  4601  00114E                     l8601:
  4602                           
  4603                           ; BSR set to: 0
  4604  00114E  0E00               	movlw	0
  4605  001150  6F90               	movwf	(_efgtoa$3565+1)& (0+255),b
  4606  001152  0E2D               	movlw	45
  4607  001154  6F8F               	movwf	_efgtoa$3565& (0+255),b
  4608  001156                     l8603:
  4609                           
  4610                           ; BSR set to: 0
  4611  001156  C08F  F140         	movff	_efgtoa$3565,_dbuf
  4612  00115A                     
  4613                           ; BSR set to: 0
  4614                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  4615  00115A  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  4616  00115C  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  4617  00115E                     
  4618                           ; BSR set to: 0
  4619                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  4620  00115E  07AD               	decf	efgtoa@w& (0+255),f,b
  4621  001160  A0D8               	btfss	status,0,c
  4622  001162  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  4623  001164                     l8609:
  4624                           
  4625                           ; BSR set to: 0
  4626                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4627  001164  C0BB  F014         	movff	efgtoa@g,___fpclassifyf@x
  4628  001168  C0BC  F015         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4629  00116C  C0BD  F016         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4630  001170  C0BE  F017         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4631  001174  EC1F  F025         	call	___fpclassifyf	;wreg free
  4632  001178  0414               	decf	?___fpclassifyf^0,w,c
  4633  00117A  1015               	iorwf	(?___fpclassifyf+1)^0,w,c
  4634  00117C  A4D8               	btfss	status,2,c
  4635  00117E  EFC3  F008         	goto	u9361
  4636  001182  EFC5  F008         	goto	u9360
  4637  001186                     u9361:
  4638  001186  EF1C  F009         	goto	l8627
  4639  00118A                     u9360:
  4640  00118A  0EBF               	movlw	191
  4641  00118C  0100               	movlb	0	; () banked
  4642  00118E  6F8A               	movwf	??_efgtoa& (0+255),b
  4643  001190  0EFF               	movlw	255
  4644  001192  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  4645  001194  5189               	movf	efgtoa@c& (0+255),w,b
  4646  001196  6F8C               	movwf	(??_efgtoa+2)& (0+255),b
  4647  001198  6B8D               	clrf	(??_efgtoa+3)& (0+255),b
  4648  00119A  518A               	movf	??_efgtoa& (0+255),w,b
  4649  00119C  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  4650  00119E  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  4651  0011A0  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4652  0011A2  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  4653  0011A4  E10A               	bnz	u9370
  4654  0011A6  0E1A               	movlw	26
  4655  0011A8  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  4656  0011AA  A0D8               	btfss	status,0,c
  4657  0011AC  EFDA  F008         	goto	u9371
  4658  0011B0  EFDD  F008         	goto	u9370
  4659  0011B4                     u9371:
  4660  0011B4  0E01               	movlw	1
  4661  0011B6  EFDE  F008         	goto	u9380
  4662  0011BA                     u9370:
  4663  0011BA  0E00               	movlw	0
  4664  0011BC                     u9380:
  4665  0011BC  6F91               	movwf	_efgtoa$3566& (0+255),b
  4666  0011BE  6B92               	clrf	(_efgtoa$3566+1)& (0+255),b
  4667  0011C0                     
  4668                           ; BSR set to: 0
  4669  0011C0  5191               	movf	_efgtoa$3566& (0+255),w,b
  4670  0011C2  1192               	iorwf	(_efgtoa$3566+1)& (0+255),w,b
  4671  0011C4  B4D8               	btfsc	status,2,c
  4672  0011C6  EFE7  F008         	goto	u9391
  4673  0011CA  EFE9  F008         	goto	u9390
  4674  0011CE                     u9391:
  4675  0011CE  EFF7  F008         	goto	l8619
  4676  0011D2                     u9390:
  4677  0011D2                     
  4678                           ; BSR set to: 0
  4679                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  4680  0011D2  0E40               	movlw	low _dbuf
  4681  0011D4  25C1               	addwf	efgtoa@n& (0+255),w,b
  4682  0011D6  6E14               	movwf	strcpy@dest^0,c
  4683  0011D8  0E01               	movlw	high _dbuf
  4684  0011DA  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4685  0011DC  6E15               	movwf	(strcpy@dest+1)^0,c
  4686  0011DE  0E95               	movlw	low STR_9
  4687  0011E0  6E16               	movwf	strcpy@src^0,c
  4688  0011E2  0E10               	movlw	high STR_9
  4689  0011E4  6E17               	movwf	(strcpy@src+1)^0,c
  4690  0011E6  ECF6  F02B         	call	_strcpy	;wreg free
  4691                           
  4692                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  4693  0011EA  EF03  F009         	goto	l8621
  4694  0011EE                     l8619:
  4695                           
  4696                           ; BSR set to: 0
  4697                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  4698  0011EE  0E40               	movlw	low _dbuf
  4699  0011F0  25C1               	addwf	efgtoa@n& (0+255),w,b
  4700  0011F2  6E14               	movwf	strcpy@dest^0,c
  4701  0011F4  0E01               	movlw	high _dbuf
  4702  0011F6  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4703  0011F8  6E15               	movwf	(strcpy@dest+1)^0,c
  4704  0011FA  0E9D               	movlw	low STR_10
  4705  0011FC  6E16               	movwf	strcpy@src^0,c
  4706  0011FE  0E10               	movlw	high STR_10
  4707  001200  6E17               	movwf	(strcpy@src+1)^0,c
  4708  001202  ECF6  F02B         	call	_strcpy	;wreg free
  4709  001206                     l8621:
  4710                           
  4711                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  4712  001206  0100               	movlb	0	; () banked
  4713  001208  0EFD               	movlw	253
  4714  00120A  27AD               	addwf	efgtoa@w& (0+255),f,b
  4715  00120C  0EFF               	movlw	255
  4716  00120E  23AE               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4717  001210                     
  4718                           ; BSR set to: 0
  4719                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  4720  001210  C083  F026         	movff	efgtoa@fp,pad@fp
  4721  001214  C084  F027         	movff	efgtoa@fp+1,pad@fp+1
  4722  001218  0E40               	movlw	low _dbuf
  4723  00121A  6E28               	movwf	pad@buf^0,c
  4724  00121C  0E01               	movlw	high _dbuf
  4725  00121E  6E29               	movwf	(pad@buf+1)^0,c
  4726  001220  C0AD  F02A         	movff	efgtoa@w,pad@p
  4727  001224  C0AE  F02B         	movff	efgtoa@w+1,pad@p+1
  4728  001228  EC96  F028         	call	_pad	;wreg free
  4729  00122C  C026  F083         	movff	?_pad,?_efgtoa
  4730  001230  C027  F084         	movff	?_pad+1,?_efgtoa+1
  4731  001234  EFAB  F00E         	goto	l2169
  4732  001238                     l8627:
  4733                           
  4734                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4735  001238  C0BB  F014         	movff	efgtoa@g,___fpclassifyf@x
  4736  00123C  C0BC  F015         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4737  001240  C0BD  F016         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4738  001244  C0BE  F017         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4739  001248  EC1F  F025         	call	___fpclassifyf	;wreg free
  4740  00124C  5014               	movf	?___fpclassifyf^0,w,c
  4741  00124E  1015               	iorwf	(?___fpclassifyf+1)^0,w,c
  4742  001250  A4D8               	btfss	status,2,c
  4743  001252  EF2D  F009         	goto	u9401
  4744  001256  EF2F  F009         	goto	u9400
  4745  00125A                     u9401:
  4746  00125A  EF86  F009         	goto	l8645
  4747  00125E                     u9400:
  4748  00125E  0EBF               	movlw	191
  4749  001260  0100               	movlb	0	; () banked
  4750  001262  6F8A               	movwf	??_efgtoa& (0+255),b
  4751  001264  0EFF               	movlw	255
  4752  001266  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  4753  001268  5189               	movf	efgtoa@c& (0+255),w,b
  4754  00126A  6F8C               	movwf	(??_efgtoa+2)& (0+255),b
  4755  00126C  6B8D               	clrf	(??_efgtoa+3)& (0+255),b
  4756  00126E  518A               	movf	??_efgtoa& (0+255),w,b
  4757  001270  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  4758  001272  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  4759  001274  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4760  001276  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  4761  001278  E10A               	bnz	u9410
  4762  00127A  0E1A               	movlw	26
  4763  00127C  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  4764  00127E  A0D8               	btfss	status,0,c
  4765  001280  EF44  F009         	goto	u9411
  4766  001284  EF47  F009         	goto	u9410
  4767  001288                     u9411:
  4768  001288  0E01               	movlw	1
  4769  00128A  EF48  F009         	goto	u9420
  4770  00128E                     u9410:
  4771  00128E  0E00               	movlw	0
  4772  001290                     u9420:
  4773  001290  6F93               	movwf	_efgtoa$3570& (0+255),b
  4774  001292  6B94               	clrf	(_efgtoa$3570+1)& (0+255),b
  4775  001294                     
  4776                           ; BSR set to: 0
  4777  001294  5193               	movf	_efgtoa$3570& (0+255),w,b
  4778  001296  1194               	iorwf	(_efgtoa$3570+1)& (0+255),w,b
  4779  001298  B4D8               	btfsc	status,2,c
  4780  00129A  EF51  F009         	goto	u9431
  4781  00129E  EF53  F009         	goto	u9430
  4782  0012A2                     u9431:
  4783  0012A2  EF61  F009         	goto	l8637
  4784  0012A6                     u9430:
  4785  0012A6                     
  4786                           ; BSR set to: 0
  4787                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  4788  0012A6  0E40               	movlw	low _dbuf
  4789  0012A8  25C1               	addwf	efgtoa@n& (0+255),w,b
  4790  0012AA  6E14               	movwf	strcpy@dest^0,c
  4791  0012AC  0E01               	movlw	high _dbuf
  4792  0012AE  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4793  0012B0  6E15               	movwf	(strcpy@dest+1)^0,c
  4794  0012B2  0E99               	movlw	low STR_13
  4795  0012B4  6E16               	movwf	strcpy@src^0,c
  4796  0012B6  0E10               	movlw	high STR_13
  4797  0012B8  6E17               	movwf	(strcpy@src+1)^0,c
  4798  0012BA  ECF6  F02B         	call	_strcpy	;wreg free
  4799                           
  4800                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  4801  0012BE  EF6D  F009         	goto	l8639
  4802  0012C2                     l8637:
  4803                           
  4804                           ; BSR set to: 0
  4805                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  4806  0012C2  0E40               	movlw	low _dbuf
  4807  0012C4  25C1               	addwf	efgtoa@n& (0+255),w,b
  4808  0012C6  6E14               	movwf	strcpy@dest^0,c
  4809  0012C8  0E01               	movlw	high _dbuf
  4810  0012CA  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4811  0012CC  6E15               	movwf	(strcpy@dest+1)^0,c
  4812  0012CE  0EA1               	movlw	low STR_14
  4813  0012D0  6E16               	movwf	strcpy@src^0,c
  4814  0012D2  0E10               	movlw	high STR_14
  4815  0012D4  6E17               	movwf	(strcpy@src+1)^0,c
  4816  0012D6  ECF6  F02B         	call	_strcpy	;wreg free
  4817  0012DA                     l8639:
  4818                           
  4819                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 371:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  4820  0012DA  0100               	movlb	0	; () banked
  4821  0012DC  0EFD               	movlw	253
  4822  0012DE  27AD               	addwf	efgtoa@w& (0+255),f,b
  4823  0012E0  0EFF               	movlw	255
  4824  0012E2  23AE               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4825  0012E4                     
  4826                           ; BSR set to: 0
  4827                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 372:         retu
      +                          rn pad(fp, &dbuf[0], w);
  4828  0012E4  C083  F026         	movff	efgtoa@fp,pad@fp
  4829  0012E8  C084  F027         	movff	efgtoa@fp+1,pad@fp+1
  4830  0012EC  0E40               	movlw	low _dbuf
  4831  0012EE  6E28               	movwf	pad@buf^0,c
  4832  0012F0  0E01               	movlw	high _dbuf
  4833  0012F2  6E29               	movwf	(pad@buf+1)^0,c
  4834  0012F4  C0AD  F02A         	movff	efgtoa@w,pad@p
  4835  0012F8  C0AE  F02B         	movff	efgtoa@w+1,pad@p+1
  4836  0012FC  EC96  F028         	call	_pad	;wreg free
  4837  001300  C026  F083         	movff	?_pad,?_efgtoa
  4838  001304  C027  F084         	movff	?_pad+1,?_efgtoa+1
  4839  001308  EFAB  F00E         	goto	l2169
  4840  00130C                     l8645:
  4841                           
  4842                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  4843  00130C  0E00               	movlw	0
  4844  00130E  0100               	movlb	0	; () banked
  4845  001310  6FC3               	movwf	efgtoa@u& (0+255),b
  4846  001312  0E00               	movlw	0
  4847  001314  6FC4               	movwf	(efgtoa@u+1)& (0+255),b
  4848  001316  0E80               	movlw	128
  4849  001318  6FC5               	movwf	(efgtoa@u+2)& (0+255),b
  4850  00131A  0E3F               	movlw	63
  4851  00131C  6FC6               	movwf	(efgtoa@u+3)& (0+255),b
  4852                           
  4853                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  4854  00131E  0E00               	movlw	0
  4855  001320  6FC0               	movwf	(efgtoa@e+1)& (0+255),b
  4856  001322  0E00               	movlw	0
  4857  001324  6FBF               	movwf	efgtoa@e& (0+255),b
  4858  001326                     
  4859                           ; BSR set to: 0
  4860                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  4861  001326  C0BB  F014         	movff	efgtoa@g,___fleq@ff1
  4862  00132A  C0BC  F015         	movff	efgtoa@g+1,___fleq@ff1+1
  4863  00132E  C0BD  F016         	movff	efgtoa@g+2,___fleq@ff1+2
  4864  001332  C0BE  F017         	movff	efgtoa@g+3,___fleq@ff1+3
  4865  001336  0E00               	movlw	0
  4866  001338  6E18               	movwf	___fleq@ff2^0,c
  4867  00133A  0E00               	movlw	0
  4868  00133C  6E19               	movwf	(___fleq@ff2+1)^0,c
  4869  00133E  0E00               	movlw	0
  4870  001340  6E1A               	movwf	(___fleq@ff2+2)^0,c
  4871  001342  0E00               	movlw	0
  4872  001344  6E1B               	movwf	(___fleq@ff2+3)^0,c
  4873  001346  ECAF  F029         	call	___fleq	;wreg free
  4874  00134A  B0D8               	btfsc	status,0,c
  4875  00134C  EFAA  F009         	goto	u9441
  4876  001350  EFAC  F009         	goto	u9440
  4877  001354                     u9441:
  4878  001354  EF31  F00A         	goto	l8663
  4879  001358                     u9440:
  4880  001358  EFCB  F009         	goto	l8655
  4881  00135C                     l8651:
  4882                           
  4883                           ; BSR set to: 0
  4884                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  4885  00135C  C0C3  F02A         	movff	efgtoa@u,___flmul@b
  4886  001360  C0C4  F02B         	movff	efgtoa@u+1,___flmul@b+1
  4887  001364  C0C5  F02C         	movff	efgtoa@u+2,___flmul@b+2
  4888  001368  C0C6  F02D         	movff	efgtoa@u+3,___flmul@b+3
  4889  00136C  0E00               	movlw	0
  4890  00136E  6E2E               	movwf	___flmul@a^0,c
  4891  001370  0E00               	movlw	0
  4892  001372  6E2F               	movwf	(___flmul@a+1)^0,c
  4893  001374  0E20               	movlw	32
  4894  001376  6E30               	movwf	(___flmul@a+2)^0,c
  4895  001378  0E41               	movlw	65
  4896  00137A  6E31               	movwf	(___flmul@a+3)^0,c
  4897  00137C  EC01  F014         	call	___flmul	;wreg free
  4898  001380  C02A  F0C3         	movff	?___flmul,efgtoa@u
  4899  001384  C02B  F0C4         	movff	?___flmul+1,efgtoa@u+1
  4900  001388  C02C  F0C5         	movff	?___flmul+2,efgtoa@u+2
  4901  00138C  C02D  F0C6         	movff	?___flmul+3,efgtoa@u+3
  4902  001390                     
  4903                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  4904  001390  0100               	movlb	0	; () banked
  4905  001392  4BBF               	infsnz	efgtoa@e& (0+255),f,b
  4906  001394  2BC0               	incf	(efgtoa@e+1)& (0+255),f,b
  4907  001396                     l8655:
  4908                           
  4909                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  4910  001396  C0BB  F06D         	movff	efgtoa@g,___flge@ff1
  4911  00139A  C0BC  F06E         	movff	efgtoa@g+1,___flge@ff1+1
  4912  00139E  C0BD  F06F         	movff	efgtoa@g+2,___flge@ff1+2
  4913  0013A2  C0BE  F070         	movff	efgtoa@g+3,___flge@ff1+3
  4914  0013A6  0E00               	movlw	0
  4915  0013A8  6E2E               	movwf	___flmul@a^0,c
  4916  0013AA  0E00               	movlw	0
  4917  0013AC  6E2F               	movwf	(___flmul@a+1)^0,c
  4918  0013AE  0E20               	movlw	32
  4919  0013B0  6E30               	movwf	(___flmul@a+2)^0,c
  4920  0013B2  0E41               	movlw	65
  4921  0013B4  6E31               	movwf	(___flmul@a+3)^0,c
  4922  0013B6  C0C3  F02A         	movff	efgtoa@u,___flmul@b
  4923  0013BA  C0C4  F02B         	movff	efgtoa@u+1,___flmul@b+1
  4924  0013BE  C0C5  F02C         	movff	efgtoa@u+2,___flmul@b+2
  4925  0013C2  C0C6  F02D         	movff	efgtoa@u+3,___flmul@b+3
  4926  0013C6  EC01  F014         	call	___flmul	;wreg free
  4927  0013CA  C02A  F071         	movff	?___flmul,___flge@ff2
  4928  0013CE  C02B  F072         	movff	?___flmul+1,___flge@ff2+1
  4929  0013D2  C02C  F073         	movff	?___flmul+2,___flge@ff2+2
  4930  0013D6  C02D  F074         	movff	?___flmul+3,___flge@ff2+3
  4931  0013DA  EC9C  F024         	call	___flge	;wreg free
  4932  0013DE  0100               	movlb	0	; () banked
  4933  0013E0  B0D8               	btfsc	status,0,c
  4934  0013E2  EFF5  F009         	goto	u9451
  4935  0013E6  EFF7  F009         	goto	u9450
  4936  0013EA                     u9451:
  4937  0013EA  EFAE  F009         	goto	l8651
  4938  0013EE                     u9450:
  4939  0013EE  EF17  F00A         	goto	l8661
  4940  0013F2                     l8657:
  4941                           
  4942                           ; BSR set to: 0
  4943                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  4944  0013F2  C0C3  F02A         	movff	efgtoa@u,___fldiv@b
  4945  0013F6  C0C4  F02B         	movff	efgtoa@u+1,___fldiv@b+1
  4946  0013FA  C0C5  F02C         	movff	efgtoa@u+2,___fldiv@b+2
  4947  0013FE  C0C6  F02D         	movff	efgtoa@u+3,___fldiv@b+3
  4948  001402  0E00               	movlw	0
  4949  001404  6E2E               	movwf	___fldiv@a^0,c
  4950  001406  0E00               	movlw	0
  4951  001408  6E2F               	movwf	(___fldiv@a+1)^0,c
  4952  00140A  0E20               	movlw	32
  4953  00140C  6E30               	movwf	(___fldiv@a+2)^0,c
  4954  00140E  0E41               	movlw	65
  4955  001410  6E31               	movwf	(___fldiv@a+3)^0,c
  4956  001412  EC29  F016         	call	___fldiv	;wreg free
  4957  001416  C02A  F0C3         	movff	?___fldiv,efgtoa@u
  4958  00141A  C02B  F0C4         	movff	?___fldiv+1,efgtoa@u+1
  4959  00141E  C02C  F0C5         	movff	?___fldiv+2,efgtoa@u+2
  4960  001422  C02D  F0C6         	movff	?___fldiv+3,efgtoa@u+3
  4961  001426                     
  4962                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  4963  001426  0100               	movlb	0	; () banked
  4964  001428  07BF               	decf	efgtoa@e& (0+255),f,b
  4965  00142A  A0D8               	btfss	status,0,c
  4966  00142C  07C0               	decf	(efgtoa@e+1)& (0+255),f,b
  4967  00142E                     l8661:
  4968                           
  4969                           ; BSR set to: 0
  4970                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  4971  00142E  C0BB  F06D         	movff	efgtoa@g,___flge@ff1
  4972  001432  C0BC  F06E         	movff	efgtoa@g+1,___flge@ff1+1
  4973  001436  C0BD  F06F         	movff	efgtoa@g+2,___flge@ff1+2
  4974  00143A  C0BE  F070         	movff	efgtoa@g+3,___flge@ff1+3
  4975  00143E  C0C3  F071         	movff	efgtoa@u,___flge@ff2
  4976  001442  C0C4  F072         	movff	efgtoa@u+1,___flge@ff2+1
  4977  001446  C0C5  F073         	movff	efgtoa@u+2,___flge@ff2+2
  4978  00144A  C0C6  F074         	movff	efgtoa@u+3,___flge@ff2+3
  4979  00144E  EC9C  F024         	call	___flge	;wreg free
  4980  001452  0100               	movlb	0	; () banked
  4981  001454  A0D8               	btfss	status,0,c
  4982  001456  EF2F  F00A         	goto	u9461
  4983  00145A  EF31  F00A         	goto	u9460
  4984  00145E                     u9461:
  4985  00145E  EFF9  F009         	goto	l8657
  4986  001462                     u9460:
  4987  001462                     l8663:
  4988                           
  4989                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  4990  001462  C089  F01A         	movff	efgtoa@c,tolower@c
  4991  001466  6A1B               	clrf	(tolower@c+1)^0,c
  4992  001468  EC2B  F02C         	call	_tolower	;wreg free
  4993  00146C  501A               	movf	?_tolower^0,w,c
  4994  00146E  0100               	movlb	0	; () banked
  4995  001470  6FB0               	movwf	efgtoa@mode& (0+255),b
  4996  001472                     
  4997                           ; BSR set to: 0
  4998                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  4999  001472  C0B0  F0AF         	movff	efgtoa@mode,efgtoa@nmode
  5000  001476                     
  5001                           ; BSR set to: 0
  5002                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  5003  001476  0E67               	movlw	103
  5004  001478  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  5005  00147A  A4D8               	btfss	status,2,c
  5006  00147C  EF42  F00A         	goto	u9471
  5007  001480  EF44  F00A         	goto	u9470
  5008  001484                     u9471:
  5009  001484  EF6A  F00A         	goto	l8677
  5010  001488                     u9470:
  5011  001488                     
  5012                           ; BSR set to: 0
  5013                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  5014  001488  503C               	movf	_prec^0,w,c
  5015  00148A  103D               	iorwf	(_prec+1)^0,w,c
  5016  00148C  A4D8               	btfss	status,2,c
  5017  00148E  EF4B  F00A         	goto	u9481
  5018  001492  EF4D  F00A         	goto	u9480
  5019  001496                     u9481:
  5020  001496  EF51  F00A         	goto	l8673
  5021  00149A                     u9480:
  5022  00149A                     
  5023                           ; BSR set to: 0
  5024                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  5025  00149A  0E00               	movlw	0
  5026  00149C  6E3D               	movwf	(_prec+1)^0,c
  5027  00149E  0E01               	movlw	1
  5028  0014A0  6E3C               	movwf	_prec^0,c
  5029  0014A2                     l8673:
  5030                           
  5031                           ; BSR set to: 0
  5032                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  5033  0014A2  BE3D               	btfsc	(_prec+1)^0,7,c
  5034  0014A4  EF5E  F00A         	goto	u9490
  5035  0014A8  503D               	movf	(_prec+1)^0,w,c
  5036  0014AA  E106               	bnz	u9491
  5037  0014AC  043C               	decf	_prec^0,w,c
  5038  0014AE  B0D8               	btfsc	status,0,c
  5039  0014B0  EF5C  F00A         	goto	u9491
  5040  0014B4  EF5E  F00A         	goto	u9490
  5041  0014B8                     u9491:
  5042  0014B8  EF64  F00A         	goto	l2187
  5043  0014BC                     u9490:
  5044  0014BC                     l8675:
  5045                           
  5046                           ; BSR set to: 0
  5047  0014BC  0E00               	movlw	0
  5048  0014BE  6FAC               	movwf	(efgtoa@p+1)& (0+255),b
  5049  0014C0  0E06               	movlw	6
  5050  0014C2  6FAB               	movwf	efgtoa@p& (0+255),b
  5051  0014C4  EF73  F00A         	goto	l8683
  5052  0014C8                     l2187:
  5053                           
  5054                           ; BSR set to: 0
  5055  0014C8  C03C  F0AB         	movff	_prec,efgtoa@p
  5056  0014CC  C03D  F0AC         	movff	_prec+1,efgtoa@p+1
  5057  0014D0  EF73  F00A         	goto	l8683
  5058  0014D4                     l8677:
  5059                           
  5060                           ; BSR set to: 0
  5061                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  5062  0014D4  BE3D               	btfsc	(_prec+1)^0,7,c
  5063  0014D6  EF6F  F00A         	goto	u9501
  5064  0014DA  EF71  F00A         	goto	u9500
  5065  0014DE                     u9501:
  5066  0014DE  EF5E  F00A         	goto	l8675
  5067  0014E2                     u9500:
  5068  0014E2  EF64  F00A         	goto	l2187
  5069  0014E6                     l8683:
  5070                           
  5071                           ; BSR set to: 0
  5072                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  5073  0014E6  0E67               	movlw	103
  5074  0014E8  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  5075  0014EA  A4D8               	btfss	status,2,c
  5076  0014EC  EF7A  F00A         	goto	u9511
  5077  0014F0  EF7C  F00A         	goto	u9510
  5078  0014F4                     u9511:
  5079  0014F4  EFAB  F00A         	goto	l8693
  5080  0014F8                     u9510:
  5081  0014F8                     
  5082                           ; BSR set to: 0
  5083                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  5084  0014F8  AFC0               	btfss	(efgtoa@e+1)& (0+255),7,b
  5085  0014FA  EF8A  F00A         	goto	u9520
  5086  0014FE  0EFC               	movlw	252
  5087  001500  5DBF               	subwf	efgtoa@e& (0+255),w,b
  5088  001502  0EFF               	movlw	255
  5089  001504  59C0               	subwfb	(efgtoa@e+1)& (0+255),w,b
  5090  001506  A0D8               	btfss	status,0,c
  5091  001508  EF88  F00A         	goto	u9521
  5092  00150C  EF8A  F00A         	goto	u9520
  5093  001510                     u9521:
  5094  001510  EFA9  F00A         	goto	l8691
  5095  001514                     u9520:
  5096  001514                     
  5097                           ; BSR set to: 0
  5098  001514  0EFF               	movlw	255
  5099  001516  6F8A               	movwf	??_efgtoa& (0+255),b
  5100  001518  0EFF               	movlw	255
  5101  00151A  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  5102  00151C  C0AB  F08C         	movff	efgtoa@p,??_efgtoa+2
  5103  001520  C0AC  F08D         	movff	efgtoa@p+1,??_efgtoa+3
  5104  001524  518A               	movf	??_efgtoa& (0+255),w,b
  5105  001526  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  5106  001528  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  5107  00152A  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5108  00152C  51BF               	movf	efgtoa@e& (0+255),w,b
  5109  00152E  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  5110  001530  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  5111  001532  0A80               	xorlw	128
  5112  001534  6F8E               	movwf	(??_efgtoa+4)& (0+255),b
  5113  001536  51C0               	movf	(efgtoa@e+1)& (0+255),w,b
  5114  001538  0A80               	xorlw	128
  5115  00153A  598E               	subwfb	(??_efgtoa+4)& (0+255),w,b
  5116  00153C  A0D8               	btfss	status,0,c
  5117  00153E  EFA3  F00A         	goto	u9531
  5118  001542  EFA5  F00A         	goto	u9530
  5119  001546                     u9531:
  5120  001546  EFA9  F00A         	goto	l8691
  5121  00154A                     u9530:
  5122  00154A                     
  5123                           ; BSR set to: 0
  5124                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  5125  00154A  0E66               	movlw	102
  5126  00154C  6FAF               	movwf	efgtoa@nmode& (0+255),b
  5127                           
  5128                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  5129  00154E  EFAB  F00A         	goto	l8693
  5130  001552                     l8691:
  5131                           
  5132                           ; BSR set to: 0
  5133                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  5134  001552  0E65               	movlw	101
  5135  001554  6FAF               	movwf	efgtoa@nmode& (0+255),b
  5136  001556                     l8693:
  5137                           
  5138                           ; BSR set to: 0
  5139                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  5140  001556  C0AB  F0A1         	movff	efgtoa@p,efgtoa@m
  5141  00155A  C0AC  F0A2         	movff	efgtoa@p+1,efgtoa@m+1
  5142  00155E                     
  5143                           ; BSR set to: 0
  5144                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  5145  00155E  0E67               	movlw	103
  5146  001560  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  5147  001562  A4D8               	btfss	status,2,c
  5148  001564  EFB6  F00A         	goto	u9541
  5149  001568  EFB8  F00A         	goto	u9540
  5150  00156C                     u9541:
  5151  00156C  EFC8  F00A         	goto	l8701
  5152  001570                     u9540:
  5153  001570                     
  5154                           ; BSR set to: 0
  5155  001570  0E66               	movlw	102
  5156  001572  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  5157  001574  A4D8               	btfss	status,2,c
  5158  001576  EFBF  F00A         	goto	u9551
  5159  00157A  EFC1  F00A         	goto	u9550
  5160  00157E                     u9551:
  5161  00157E  EFCA  F00A         	goto	l8703
  5162  001582                     u9550:
  5163  001582                     
  5164                           ; BSR set to: 0
  5165  001582  BFC0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5166  001584  EFC8  F00A         	goto	u9560
  5167  001588  EFC6  F00A         	goto	u9561
  5168  00158C                     u9561:
  5169  00158C  EFCA  F00A         	goto	l8703
  5170  001590                     u9560:
  5171  001590                     l8701:
  5172                           
  5173                           ; BSR set to: 0
  5174                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  5175  001590  4BA1               	infsnz	efgtoa@m& (0+255),f,b
  5176  001592  2BA2               	incf	(efgtoa@m+1)& (0+255),f,b
  5177  001594                     l8703:
  5178                           
  5179                           ; BSR set to: 0
  5180                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  5181  001594  0E66               	movlw	102
  5182  001596  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  5183  001598  A4D8               	btfss	status,2,c
  5184  00159A  EFD1  F00A         	goto	u9571
  5185  00159E  EFD3  F00A         	goto	u9570
  5186  0015A2                     u9571:
  5187  0015A2  EFF3  F00A         	goto	l8713
  5188  0015A6                     u9570:
  5189  0015A6                     
  5190                           ; BSR set to: 0
  5191                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  5192  0015A6  BFC0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5193  0015A8  EFDA  F00A         	goto	u9580
  5194  0015AC  EFD8  F00A         	goto	u9581
  5195  0015B0                     u9581:
  5196  0015B0  EFE6  F00A         	goto	l8709
  5197  0015B4                     u9580:
  5198  0015B4                     
  5199                           ; BSR set to: 0
  5200                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  5201  0015B4  0E00               	movlw	0
  5202  0015B6  6FC3               	movwf	efgtoa@u& (0+255),b
  5203  0015B8  0E00               	movlw	0
  5204  0015BA  6FC4               	movwf	(efgtoa@u+1)& (0+255),b
  5205  0015BC  0E80               	movlw	128
  5206  0015BE  6FC5               	movwf	(efgtoa@u+2)& (0+255),b
  5207  0015C0  0E3F               	movlw	63
  5208  0015C2  6FC6               	movwf	(efgtoa@u+3)& (0+255),b
  5209                           
  5210                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  5211  0015C4  0E00               	movlw	0
  5212  0015C6  6FC0               	movwf	(efgtoa@e+1)& (0+255),b
  5213  0015C8  0E00               	movlw	0
  5214  0015CA  6FBF               	movwf	efgtoa@e& (0+255),b
  5215  0015CC                     l8709:
  5216                           
  5217                           ; BSR set to: 0
  5218                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  5219  0015CC  0E67               	movlw	103
  5220  0015CE  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  5221  0015D0  B4D8               	btfsc	status,2,c
  5222  0015D2  EFED  F00A         	goto	u9591
  5223  0015D6  EFEF  F00A         	goto	u9590
  5224  0015DA                     u9591:
  5225  0015DA  EFF3  F00A         	goto	l8713
  5226  0015DE                     u9590:
  5227  0015DE                     
  5228                           ; BSR set to: 0
  5229                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  5230  0015DE  51BF               	movf	efgtoa@e& (0+255),w,b
  5231  0015E0  27A1               	addwf	efgtoa@m& (0+255),f,b
  5232  0015E2  51C0               	movf	(efgtoa@e+1)& (0+255),w,b
  5233  0015E4  23A2               	addwfc	(efgtoa@m+1)& (0+255),f,b
  5234  0015E6                     l8713:
  5235                           
  5236                           ; BSR set to: 0
  5237                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  5238  0015E6  0E00               	movlw	0
  5239  0015E8  6FBA               	movwf	(efgtoa@i+1)& (0+255),b
  5240  0015EA  0E00               	movlw	0
  5241  0015EC  6FB9               	movwf	efgtoa@i& (0+255),b
  5242  0015EE                     
  5243                           ; BSR set to: 0
  5244                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  5245  0015EE  C0BB  F0B1         	movff	efgtoa@g,efgtoa@h
  5246  0015F2  C0BC  F0B2         	movff	efgtoa@g+1,efgtoa@h+1
  5247  0015F6  C0BD  F0B3         	movff	efgtoa@g+2,efgtoa@h+2
  5248  0015FA  C0BE  F0B4         	movff	efgtoa@g+3,efgtoa@h+3
  5249  0015FE                     
  5250                           ; BSR set to: 0
  5251                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  5252  0015FE  C0C3  F0A3         	movff	efgtoa@u,efgtoa@ou
  5253  001602  C0C4  F0A4         	movff	efgtoa@u+1,efgtoa@ou+1
  5254  001606  C0C5  F0A5         	movff	efgtoa@u+2,efgtoa@ou+2
  5255  00160A  C0C6  F0A6         	movff	efgtoa@u+3,efgtoa@ou+3
  5256                           
  5257                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  5258  00160E  EF84  F00B         	goto	l8727
  5259  001612                     l8719:
  5260                           
  5261                           ; BSR set to: 0
  5262                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  5263  001612  C0B1  F02A         	movff	efgtoa@h,___fldiv@b
  5264  001616  C0B2  F02B         	movff	efgtoa@h+1,___fldiv@b+1
  5265  00161A  C0B3  F02C         	movff	efgtoa@h+2,___fldiv@b+2
  5266  00161E  C0B4  F02D         	movff	efgtoa@h+3,___fldiv@b+3
  5267  001622  C0C3  F02E         	movff	efgtoa@u,___fldiv@a
  5268  001626  C0C4  F02F         	movff	efgtoa@u+1,___fldiv@a+1
  5269  00162A  C0C5  F030         	movff	efgtoa@u+2,___fldiv@a+2
  5270  00162E  C0C6  F031         	movff	efgtoa@u+3,___fldiv@a+3
  5271  001632  EC29  F016         	call	___fldiv	;wreg free
  5272  001636  C02A  F036         	movff	?___fldiv,floorf@x
  5273  00163A  C02B  F037         	movff	?___fldiv+1,floorf@x+1
  5274  00163E  C02C  F038         	movff	?___fldiv+2,floorf@x+2
  5275  001642  C02D  F039         	movff	?___fldiv+3,floorf@x+3
  5276  001646  EC77  F01A         	call	_floorf	;wreg free
  5277  00164A  C036  F0B5         	movff	?_floorf,efgtoa@l
  5278  00164E  C037  F0B6         	movff	?_floorf+1,efgtoa@l+1
  5279  001652  C038  F0B7         	movff	?_floorf+2,efgtoa@l+2
  5280  001656  C039  F0B8         	movff	?_floorf+3,efgtoa@l+3
  5281                           
  5282                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  5283  00165A  C0B5  F079         	movff	efgtoa@l,___fltol@f1
  5284  00165E  C0B6  F07A         	movff	efgtoa@l+1,___fltol@f1+1
  5285  001662  C0B7  F07B         	movff	efgtoa@l+2,___fltol@f1+2
  5286  001666  C0B8  F07C         	movff	efgtoa@l+3,___fltol@f1+3
  5287  00166A  EC18  F024         	call	___fltol	;wreg free
  5288  00166E  C079  F0A7         	movff	?___fltol,efgtoa@d
  5289  001672  C07A  F0A8         	movff	?___fltol+1,efgtoa@d+1
  5290  001676                     
  5291                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  5292  001676  C0B1  F079         	movff	efgtoa@h,___flsub@b
  5293  00167A  C0B2  F07A         	movff	efgtoa@h+1,___flsub@b+1
  5294  00167E  C0B3  F07B         	movff	efgtoa@h+2,___flsub@b+2
  5295  001682  C0B4  F07C         	movff	efgtoa@h+3,___flsub@b+3
  5296  001686  C0C3  F02E         	movff	efgtoa@u,___flmul@a
  5297  00168A  C0C4  F02F         	movff	efgtoa@u+1,___flmul@a+1
  5298  00168E  C0C5  F030         	movff	efgtoa@u+2,___flmul@a+2
  5299  001692  C0C6  F031         	movff	efgtoa@u+3,___flmul@a+3
  5300  001696  C0B5  F02A         	movff	efgtoa@l,___flmul@b
  5301  00169A  C0B6  F02B         	movff	efgtoa@l+1,___flmul@b+1
  5302  00169E  C0B7  F02C         	movff	efgtoa@l+2,___flmul@b+2
  5303  0016A2  C0B8  F02D         	movff	efgtoa@l+3,___flmul@b+3
  5304  0016A6  EC01  F014         	call	___flmul	;wreg free
  5305  0016AA  C02A  F07D         	movff	?___flmul,___flsub@a
  5306  0016AE  C02B  F07E         	movff	?___flmul+1,___flsub@a+1
  5307  0016B2  C02C  F07F         	movff	?___flmul+2,___flsub@a+2
  5308  0016B6  C02D  F080         	movff	?___flmul+3,___flsub@a+3
  5309  0016BA  EC77  F02D         	call	___flsub	;wreg free
  5310  0016BE  C079  F0B1         	movff	?___flsub,efgtoa@h
  5311  0016C2  C07A  F0B2         	movff	?___flsub+1,efgtoa@h+1
  5312  0016C6  C07B  F0B3         	movff	?___flsub+2,efgtoa@h+2
  5313  0016CA  C07C  F0B4         	movff	?___flsub+3,efgtoa@h+3
  5314  0016CE                     
  5315                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  5316  0016CE  C0C3  F02A         	movff	efgtoa@u,___fldiv@b
  5317  0016D2  C0C4  F02B         	movff	efgtoa@u+1,___fldiv@b+1
  5318  0016D6  C0C5  F02C         	movff	efgtoa@u+2,___fldiv@b+2
  5319  0016DA  C0C6  F02D         	movff	efgtoa@u+3,___fldiv@b+3
  5320  0016DE  0E00               	movlw	0
  5321  0016E0  6E2E               	movwf	___fldiv@a^0,c
  5322  0016E2  0E00               	movlw	0
  5323  0016E4  6E2F               	movwf	(___fldiv@a+1)^0,c
  5324  0016E6  0E20               	movlw	32
  5325  0016E8  6E30               	movwf	(___fldiv@a+2)^0,c
  5326  0016EA  0E41               	movlw	65
  5327  0016EC  6E31               	movwf	(___fldiv@a+3)^0,c
  5328  0016EE  EC29  F016         	call	___fldiv	;wreg free
  5329  0016F2  C02A  F0C3         	movff	?___fldiv,efgtoa@u
  5330  0016F6  C02B  F0C4         	movff	?___fldiv+1,efgtoa@u+1
  5331  0016FA  C02C  F0C5         	movff	?___fldiv+2,efgtoa@u+2
  5332  0016FE  C02D  F0C6         	movff	?___fldiv+3,efgtoa@u+3
  5333  001702                     
  5334                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  5335  001702  0100               	movlb	0	; () banked
  5336  001704  4BB9               	infsnz	efgtoa@i& (0+255),f,b
  5337  001706  2BBA               	incf	(efgtoa@i+1)& (0+255),f,b
  5338  001708                     l8727:
  5339                           
  5340                           ; BSR set to: 0
  5341                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  5342  001708  51A1               	movf	efgtoa@m& (0+255),w,b
  5343  00170A  5DB9               	subwf	efgtoa@i& (0+255),w,b
  5344  00170C  51BA               	movf	(efgtoa@i+1)& (0+255),w,b
  5345  00170E  0A80               	xorlw	128
  5346  001710  6F8A               	movwf	??_efgtoa& (0+255),b
  5347  001712  51A2               	movf	(efgtoa@m+1)& (0+255),w,b
  5348  001714  0A80               	xorlw	128
  5349  001716  598A               	subwfb	??_efgtoa& (0+255),w,b
  5350  001718  A0D8               	btfss	status,0,c
  5351  00171A  EF91  F00B         	goto	u9601
  5352  00171E  EF93  F00B         	goto	u9600
  5353  001722                     u9601:
  5354  001722  EF09  F00B         	goto	l8719
  5355  001726                     u9600:
  5356  001726                     
  5357                           ; BSR set to: 0
  5358                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  5359  001726  C0C3  F02A         	movff	efgtoa@u,___flmul@b
  5360  00172A  C0C4  F02B         	movff	efgtoa@u+1,___flmul@b+1
  5361  00172E  C0C5  F02C         	movff	efgtoa@u+2,___flmul@b+2
  5362  001732  C0C6  F02D         	movff	efgtoa@u+3,___flmul@b+3
  5363  001736  0E00               	movlw	0
  5364  001738  6E2E               	movwf	___flmul@a^0,c
  5365  00173A  0E00               	movlw	0
  5366  00173C  6E2F               	movwf	(___flmul@a+1)^0,c
  5367  00173E  0EA0               	movlw	160
  5368  001740  6E30               	movwf	(___flmul@a+2)^0,c
  5369  001742  0E40               	movlw	64
  5370  001744  6E31               	movwf	(___flmul@a+3)^0,c
  5371  001746  EC01  F014         	call	___flmul	;wreg free
  5372  00174A  C02A  F0B5         	movff	?___flmul,efgtoa@l
  5373  00174E  C02B  F0B6         	movff	?___flmul+1,efgtoa@l+1
  5374  001752  C02C  F0B7         	movff	?___flmul+2,efgtoa@l+2
  5375  001756  C02D  F0B8         	movff	?___flmul+3,efgtoa@l+3
  5376  00175A                     
  5377                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  5378  00175A  C0B1  F06D         	movff	efgtoa@h,___flge@ff1
  5379  00175E  C0B2  F06E         	movff	efgtoa@h+1,___flge@ff1+1
  5380  001762  C0B3  F06F         	movff	efgtoa@h+2,___flge@ff1+2
  5381  001766  C0B4  F070         	movff	efgtoa@h+3,___flge@ff1+3
  5382  00176A  C0B5  F071         	movff	efgtoa@l,___flge@ff2
  5383  00176E  C0B6  F072         	movff	efgtoa@l+1,___flge@ff2+1
  5384  001772  C0B7  F073         	movff	efgtoa@l+2,___flge@ff2+2
  5385  001776  C0B8  F074         	movff	efgtoa@l+3,___flge@ff2+3
  5386  00177A  EC9C  F024         	call	___flge	;wreg free
  5387  00177E  0100               	movlb	0	; () banked
  5388  001780  B0D8               	btfsc	status,0,c
  5389  001782  EFC5  F00B         	goto	u9611
  5390  001786  EFC7  F00B         	goto	u9610
  5391  00178A                     u9611:
  5392  00178A  EFD1  F00B         	goto	l8735
  5393  00178E                     u9610:
  5394  00178E                     
  5395                           ; BSR set to: 0
  5396                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  5397  00178E  0E00               	movlw	0
  5398  001790  6FB5               	movwf	efgtoa@l& (0+255),b
  5399  001792  0E00               	movlw	0
  5400  001794  6FB6               	movwf	(efgtoa@l+1)& (0+255),b
  5401  001796  0E00               	movlw	0
  5402  001798  6FB7               	movwf	(efgtoa@l+2)& (0+255),b
  5403  00179A  0E00               	movlw	0
  5404  00179C  6FB8               	movwf	(efgtoa@l+3)& (0+255),b
  5405                           
  5406                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  5407  00179E  EFFA  F00B         	goto	l8741
  5408  0017A2                     l8735:
  5409                           
  5410                           ; BSR set to: 0
  5411                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  5412  0017A2  C0B1  F014         	movff	efgtoa@h,___fleq@ff1
  5413  0017A6  C0B2  F015         	movff	efgtoa@h+1,___fleq@ff1+1
  5414  0017AA  C0B3  F016         	movff	efgtoa@h+2,___fleq@ff1+2
  5415  0017AE  C0B4  F017         	movff	efgtoa@h+3,___fleq@ff1+3
  5416  0017B2  C0B5  F018         	movff	efgtoa@l,___fleq@ff2
  5417  0017B6  C0B6  F019         	movff	efgtoa@l+1,___fleq@ff2+1
  5418  0017BA  C0B7  F01A         	movff	efgtoa@l+2,___fleq@ff2+2
  5419  0017BE  C0B8  F01B         	movff	efgtoa@l+3,___fleq@ff2+3
  5420  0017C2  ECAF  F029         	call	___fleq	;wreg free
  5421  0017C6  A0D8               	btfss	status,0,c
  5422  0017C8  EFE8  F00B         	goto	u9621
  5423  0017CC  EFEA  F00B         	goto	u9620
  5424  0017D0                     u9621:
  5425  0017D0  EFFA  F00B         	goto	l8741
  5426  0017D4                     u9620:
  5427  0017D4  0100               	movlb	0	; () banked
  5428  0017D6  B1A7               	btfsc	efgtoa@d& (0+255),0,b
  5429  0017D8  EFF0  F00B         	goto	u9631
  5430  0017DC  EFF2  F00B         	goto	u9630
  5431  0017E0                     u9631:
  5432  0017E0  EFFA  F00B         	goto	l8741
  5433  0017E4                     u9630:
  5434  0017E4                     
  5435                           ; BSR set to: 0
  5436                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  5437  0017E4  0E00               	movlw	0
  5438  0017E6  6FB5               	movwf	efgtoa@l& (0+255),b
  5439  0017E8  0E00               	movlw	0
  5440  0017EA  6FB6               	movwf	(efgtoa@l+1)& (0+255),b
  5441  0017EC  0E00               	movlw	0
  5442  0017EE  6FB7               	movwf	(efgtoa@l+2)& (0+255),b
  5443  0017F0  0E00               	movlw	0
  5444  0017F2  6FB8               	movwf	(efgtoa@l+3)& (0+255),b
  5445  0017F4                     l8741:
  5446                           
  5447                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  5448  0017F4  C0BB  F06D         	movff	efgtoa@g,___fladd@b
  5449  0017F8  C0BC  F06E         	movff	efgtoa@g+1,___fladd@b+1
  5450  0017FC  C0BD  F06F         	movff	efgtoa@g+2,___fladd@b+2
  5451  001800  C0BE  F070         	movff	efgtoa@g+3,___fladd@b+3
  5452  001804  C0B5  F071         	movff	efgtoa@l,___fladd@a
  5453  001808  C0B6  F072         	movff	efgtoa@l+1,___fladd@a+1
  5454  00180C  C0B7  F073         	movff	efgtoa@l+2,___fladd@a+2
  5455  001810  C0B8  F074         	movff	efgtoa@l+3,___fladd@a+3
  5456  001814  ECA0  F011         	call	___fladd	;wreg free
  5457  001818  C06D  F0B1         	movff	?___fladd,efgtoa@h
  5458  00181C  C06E  F0B2         	movff	?___fladd+1,efgtoa@h+1
  5459  001820  C06F  F0B3         	movff	?___fladd+2,efgtoa@h+2
  5460  001824  C070  F0B4         	movff	?___fladd+3,efgtoa@h+3
  5461  001828                     
  5462                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  5463  001828  C0B1  F06D         	movff	efgtoa@h,___flge@ff1
  5464  00182C  C0B2  F06E         	movff	efgtoa@h+1,___flge@ff1+1
  5465  001830  C0B3  F06F         	movff	efgtoa@h+2,___flge@ff1+2
  5466  001834  C0B4  F070         	movff	efgtoa@h+3,___flge@ff1+3
  5467  001838  0E00               	movlw	0
  5468  00183A  6E2E               	movwf	___flmul@a^0,c
  5469  00183C  0E00               	movlw	0
  5470  00183E  6E2F               	movwf	(___flmul@a+1)^0,c
  5471  001840  0E20               	movlw	32
  5472  001842  6E30               	movwf	(___flmul@a+2)^0,c
  5473  001844  0E41               	movlw	65
  5474  001846  6E31               	movwf	(___flmul@a+3)^0,c
  5475  001848  C0A3  F02A         	movff	efgtoa@ou,___flmul@b
  5476  00184C  C0A4  F02B         	movff	efgtoa@ou+1,___flmul@b+1
  5477  001850  C0A5  F02C         	movff	efgtoa@ou+2,___flmul@b+2
  5478  001854  C0A6  F02D         	movff	efgtoa@ou+3,___flmul@b+3
  5479  001858  EC01  F014         	call	___flmul	;wreg free
  5480  00185C  C02A  F071         	movff	?___flmul,___flge@ff2
  5481  001860  C02B  F072         	movff	?___flmul+1,___flge@ff2+1
  5482  001864  C02C  F073         	movff	?___flmul+2,___flge@ff2+2
  5483  001868  C02D  F074         	movff	?___flmul+3,___flge@ff2+3
  5484  00186C  EC9C  F024         	call	___flge	;wreg free
  5485  001870  0100               	movlb	0	; () banked
  5486  001872  A0D8               	btfss	status,0,c
  5487  001874  EF3E  F00C         	goto	u9641
  5488  001878  EF40  F00C         	goto	u9640
  5489  00187C                     u9641:
  5490  00187C  EF68  F00C         	goto	l8753
  5491  001880                     u9640:
  5492  001880                     
  5493                           ; BSR set to: 0
  5494                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  5495  001880  4BBF               	infsnz	efgtoa@e& (0+255),f,b
  5496  001882  2BC0               	incf	(efgtoa@e+1)& (0+255),f,b
  5497  001884                     
  5498                           ; BSR set to: 0
  5499                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  5500  001884  C0A3  F02A         	movff	efgtoa@ou,___flmul@b
  5501  001888  C0A4  F02B         	movff	efgtoa@ou+1,___flmul@b+1
  5502  00188C  C0A5  F02C         	movff	efgtoa@ou+2,___flmul@b+2
  5503  001890  C0A6  F02D         	movff	efgtoa@ou+3,___flmul@b+3
  5504  001894  0E00               	movlw	0
  5505  001896  6E2E               	movwf	___flmul@a^0,c
  5506  001898  0E00               	movlw	0
  5507  00189A  6E2F               	movwf	(___flmul@a+1)^0,c
  5508  00189C  0E20               	movlw	32
  5509  00189E  6E30               	movwf	(___flmul@a+2)^0,c
  5510  0018A0  0E41               	movlw	65
  5511  0018A2  6E31               	movwf	(___flmul@a+3)^0,c
  5512  0018A4  EC01  F014         	call	___flmul	;wreg free
  5513  0018A8  C02A  F0A3         	movff	?___flmul,efgtoa@ou
  5514  0018AC  C02B  F0A4         	movff	?___flmul+1,efgtoa@ou+1
  5515  0018B0  C02C  F0A5         	movff	?___flmul+2,efgtoa@ou+2
  5516  0018B4  C02D  F0A6         	movff	?___flmul+3,efgtoa@ou+3
  5517  0018B8                     
  5518                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  5519  0018B8  0E66               	movlw	102
  5520  0018BA  0100               	movlb	0	; () banked
  5521  0018BC  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  5522  0018BE  A4D8               	btfss	status,2,c
  5523  0018C0  EF64  F00C         	goto	u9651
  5524  0018C4  EF66  F00C         	goto	u9650
  5525  0018C8                     u9651:
  5526  0018C8  EF68  F00C         	goto	l8753
  5527  0018CC                     u9650:
  5528  0018CC                     
  5529                           ; BSR set to: 0
  5530                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  5531  0018CC  4BA1               	infsnz	efgtoa@m& (0+255),f,b
  5532  0018CE  2BA2               	incf	(efgtoa@m+1)& (0+255),f,b
  5533  0018D0                     l8753:
  5534                           
  5535                           ; BSR set to: 0
  5536                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  5537  0018D0  C0A3  F0C3         	movff	efgtoa@ou,efgtoa@u
  5538  0018D4  C0A4  F0C4         	movff	efgtoa@ou+1,efgtoa@u+1
  5539  0018D8  C0A5  F0C5         	movff	efgtoa@ou+2,efgtoa@u+2
  5540  0018DC  C0A6  F0C6         	movff	efgtoa@ou+3,efgtoa@u+3
  5541  0018E0                     
  5542                           ; BSR set to: 0
  5543                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  5544  0018E0  0E65               	movlw	101
  5545  0018E2  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  5546  0018E4  B4D8               	btfsc	status,2,c
  5547  0018E6  EF77  F00C         	goto	u9661
  5548  0018EA  EF79  F00C         	goto	u9660
  5549  0018EE                     u9661:
  5550  0018EE  EF7F  F00C         	goto	l8759
  5551  0018F2                     u9660:
  5552  0018F2                     
  5553                           ; BSR set to: 0
  5554  0018F2  C0BF  F09F         	movff	efgtoa@e,efgtoa@ne
  5555  0018F6  C0C0  F0A0         	movff	efgtoa@e+1,efgtoa@ne+1
  5556  0018FA  EF83  F00C         	goto	l2215
  5557  0018FE                     l8759:
  5558                           
  5559                           ; BSR set to: 0
  5560  0018FE  0E00               	movlw	0
  5561  001900  6FA0               	movwf	(efgtoa@ne+1)& (0+255),b
  5562  001902  0E00               	movlw	0
  5563  001904  6F9F               	movwf	efgtoa@ne& (0+255),b
  5564  001906                     l2215:
  5565                           
  5566                           ; BSR set to: 0
  5567                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  5568  001906  0E00               	movlw	0
  5569  001908  6F9E               	movwf	(efgtoa@pp+1)& (0+255),b
  5570  00190A  0E00               	movlw	0
  5571  00190C  6F9D               	movwf	efgtoa@pp& (0+255),b
  5572                           
  5573                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  5574  00190E  0E00               	movlw	0
  5575  001910  6F9C               	movwf	(efgtoa@t+1)& (0+255),b
  5576  001912  0E00               	movlw	0
  5577  001914  6F9B               	movwf	efgtoa@t& (0+255),b
  5578                           
  5579                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  5580  001916  0E00               	movlw	0
  5581  001918  6FBA               	movwf	(efgtoa@i+1)& (0+255),b
  5582  00191A  0E00               	movlw	0
  5583  00191C  6FB9               	movwf	efgtoa@i& (0+255),b
  5584                           
  5585                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5586  00191E  EF7F  F00D         	goto	l8809
  5587  001922                     l8761:
  5588                           
  5589                           ; BSR set to: 0
  5590                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  5591  001922  C0B1  F02A         	movff	efgtoa@h,___fldiv@b
  5592  001926  C0B2  F02B         	movff	efgtoa@h+1,___fldiv@b+1
  5593  00192A  C0B3  F02C         	movff	efgtoa@h+2,___fldiv@b+2
  5594  00192E  C0B4  F02D         	movff	efgtoa@h+3,___fldiv@b+3
  5595  001932  C0C3  F02E         	movff	efgtoa@u,___fldiv@a
  5596  001936  C0C4  F02F         	movff	efgtoa@u+1,___fldiv@a+1
  5597  00193A  C0C5  F030         	movff	efgtoa@u+2,___fldiv@a+2
  5598  00193E  C0C6  F031         	movff	efgtoa@u+3,___fldiv@a+3
  5599  001942  EC29  F016         	call	___fldiv	;wreg free
  5600  001946  C02A  F036         	movff	?___fldiv,floorf@x
  5601  00194A  C02B  F037         	movff	?___fldiv+1,floorf@x+1
  5602  00194E  C02C  F038         	movff	?___fldiv+2,floorf@x+2
  5603  001952  C02D  F039         	movff	?___fldiv+3,floorf@x+3
  5604  001956  EC77  F01A         	call	_floorf	;wreg free
  5605  00195A  C036  F0B5         	movff	?_floorf,efgtoa@l
  5606  00195E  C037  F0B6         	movff	?_floorf+1,efgtoa@l+1
  5607  001962  C038  F0B7         	movff	?_floorf+2,efgtoa@l+2
  5608  001966  C039  F0B8         	movff	?_floorf+3,efgtoa@l+3
  5609                           
  5610                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  5611  00196A  C0B5  F079         	movff	efgtoa@l,___fltol@f1
  5612  00196E  C0B6  F07A         	movff	efgtoa@l+1,___fltol@f1+1
  5613  001972  C0B7  F07B         	movff	efgtoa@l+2,___fltol@f1+2
  5614  001976  C0B8  F07C         	movff	efgtoa@l+3,___fltol@f1+3
  5615  00197A  EC18  F024         	call	___fltol	;wreg free
  5616  00197E  C079  F0A7         	movff	?___fltol,efgtoa@d
  5617  001982  C07A  F0A8         	movff	?___fltol+1,efgtoa@d+1
  5618  001986                     
  5619                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  5620  001986  B83E               	btfsc	_flags^0,4,c
  5621  001988  EFC8  F00C         	goto	u9671
  5622  00198C  EFCA  F00C         	goto	u9670
  5623  001990                     u9671:
  5624  001990  EFE8  F00C         	goto	l8773
  5625  001994                     u9670:
  5626  001994  0100               	movlb	0	; () banked
  5627  001996  51A7               	movf	efgtoa@d& (0+255),w,b
  5628  001998  11A8               	iorwf	(efgtoa@d+1)& (0+255),w,b
  5629  00199A  A4D8               	btfss	status,2,c
  5630  00199C  EFD2  F00C         	goto	u9681
  5631  0019A0  EFD4  F00C         	goto	u9680
  5632  0019A4                     u9681:
  5633  0019A4  EFE8  F00C         	goto	l8773
  5634  0019A8                     u9680:
  5635  0019A8                     
  5636                           ; BSR set to: 0
  5637  0019A8  0E67               	movlw	103
  5638  0019AA  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  5639  0019AC  A4D8               	btfss	status,2,c
  5640  0019AE  EFDB  F00C         	goto	u9691
  5641  0019B2  EFDD  F00C         	goto	u9690
  5642  0019B6                     u9691:
  5643  0019B6  EFE8  F00C         	goto	l8773
  5644  0019BA                     u9690:
  5645  0019BA                     
  5646                           ; BSR set to: 0
  5647  0019BA  BFA0               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5648  0019BC  EFE4  F00C         	goto	u9700
  5649  0019C0  EFE2  F00C         	goto	u9701
  5650  0019C4                     u9701:
  5651  0019C4  EFE8  F00C         	goto	l8773
  5652  0019C8                     u9700:
  5653  0019C8                     
  5654                           ; BSR set to: 0
  5655                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  5656  0019C8  4B9B               	infsnz	efgtoa@t& (0+255),f,b
  5657  0019CA  2B9C               	incf	(efgtoa@t+1)& (0+255),f,b
  5658                           
  5659                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  5660  0019CC  EF33  F00D         	goto	l8801
  5661  0019D0                     l8773:
  5662                           
  5663                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  5664  0019D0  0100               	movlb	0	; () banked
  5665  0019D2  519D               	movf	efgtoa@pp& (0+255),w,b
  5666  0019D4  119E               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5667  0019D6  A4D8               	btfss	status,2,c
  5668  0019D8  EFF0  F00C         	goto	u9711
  5669  0019DC  EFF2  F00C         	goto	u9710
  5670  0019E0                     u9711:
  5671  0019E0  EF1C  F00D         	goto	l8793
  5672  0019E4                     u9710:
  5673  0019E4                     
  5674                           ; BSR set to: 0
  5675  0019E4  BFA0               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5676  0019E6  EFF9  F00C         	goto	u9720
  5677  0019EA  EFF7  F00C         	goto	u9721
  5678  0019EE                     u9721:
  5679  0019EE  EF1C  F00D         	goto	l8793
  5680  0019F2                     u9720:
  5681  0019F2                     
  5682                           ; BSR set to: 0
  5683                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  5684  0019F2  0E40               	movlw	low _dbuf
  5685  0019F4  25C1               	addwf	efgtoa@n& (0+255),w,b
  5686  0019F6  6ED9               	movwf	fsr2l,c
  5687  0019F8  0E01               	movlw	high _dbuf
  5688  0019FA  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5689  0019FC  6EDA               	movwf	fsr2h,c
  5690  0019FE  0E2E               	movlw	46
  5691  001A00  6EDF               	movwf	indf2,c
  5692  001A02                     
  5693                           ; BSR set to: 0
  5694  001A02  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  5695  001A04  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  5696  001A06                     
  5697                           ; BSR set to: 0
  5698                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  5699  001A06  07AD               	decf	efgtoa@w& (0+255),f,b
  5700  001A08  A0D8               	btfss	status,0,c
  5701  001A0A  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  5702  001A0C                     
  5703                           ; BSR set to: 0
  5704                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  5705  001A0C  0E00               	movlw	0
  5706  001A0E  6F9E               	movwf	(efgtoa@pp+1)& (0+255),b
  5707  001A10  0E01               	movlw	1
  5708  001A12  6F9D               	movwf	efgtoa@pp& (0+255),b
  5709  001A14  EF1C  F00D         	goto	l8793
  5710  001A18                     l8785:
  5711                           
  5712                           ; BSR set to: 0
  5713                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  5714  001A18  0E40               	movlw	low _dbuf
  5715  001A1A  25C1               	addwf	efgtoa@n& (0+255),w,b
  5716  001A1C  6ED9               	movwf	fsr2l,c
  5717  001A1E  0E01               	movlw	high _dbuf
  5718  001A20  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5719  001A22  6EDA               	movwf	fsr2h,c
  5720  001A24  0E30               	movlw	48
  5721  001A26  6EDF               	movwf	indf2,c
  5722  001A28                     
  5723                           ; BSR set to: 0
  5724  001A28  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  5725  001A2A  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  5726  001A2C                     
  5727                           ; BSR set to: 0
  5728                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  5729  001A2C  07AD               	decf	efgtoa@w& (0+255),f,b
  5730  001A2E  A0D8               	btfss	status,0,c
  5731  001A30  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  5732  001A32                     
  5733                           ; BSR set to: 0
  5734                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  5735  001A32  079B               	decf	efgtoa@t& (0+255),f,b
  5736  001A34  A0D8               	btfss	status,0,c
  5737  001A36  079C               	decf	(efgtoa@t+1)& (0+255),f,b
  5738  001A38                     l8793:
  5739                           
  5740                           ; BSR set to: 0
  5741                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  5742  001A38  519B               	movf	efgtoa@t& (0+255),w,b
  5743  001A3A  119C               	iorwf	(efgtoa@t+1)& (0+255),w,b
  5744  001A3C  A4D8               	btfss	status,2,c
  5745  001A3E  EF23  F00D         	goto	u9731
  5746  001A42  EF25  F00D         	goto	u9730
  5747  001A46                     u9731:
  5748  001A46  EF0C  F00D         	goto	l8785
  5749  001A4A                     u9730:
  5750  001A4A                     
  5751                           ; BSR set to: 0
  5752                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  5753  001A4A  0E40               	movlw	low _dbuf
  5754  001A4C  25C1               	addwf	efgtoa@n& (0+255),w,b
  5755  001A4E  6ED9               	movwf	fsr2l,c
  5756  001A50  0E01               	movlw	high _dbuf
  5757  001A52  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5758  001A54  6EDA               	movwf	fsr2h,c
  5759  001A56  51A7               	movf	efgtoa@d& (0+255),w,b
  5760  001A58  0F30               	addlw	48
  5761  001A5A  6EDF               	movwf	indf2,c
  5762  001A5C                     
  5763                           ; BSR set to: 0
  5764  001A5C  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  5765  001A5E  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  5766  001A60                     
  5767                           ; BSR set to: 0
  5768                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  5769  001A60  07AD               	decf	efgtoa@w& (0+255),f,b
  5770  001A62  A0D8               	btfss	status,0,c
  5771  001A64  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  5772  001A66                     l8801:
  5773                           
  5774                           ; BSR set to: 0
  5775                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  5776  001A66  C0B1  F079         	movff	efgtoa@h,___flsub@b
  5777  001A6A  C0B2  F07A         	movff	efgtoa@h+1,___flsub@b+1
  5778  001A6E  C0B3  F07B         	movff	efgtoa@h+2,___flsub@b+2
  5779  001A72  C0B4  F07C         	movff	efgtoa@h+3,___flsub@b+3
  5780  001A76  C0C3  F02E         	movff	efgtoa@u,___flmul@a
  5781  001A7A  C0C4  F02F         	movff	efgtoa@u+1,___flmul@a+1
  5782  001A7E  C0C5  F030         	movff	efgtoa@u+2,___flmul@a+2
  5783  001A82  C0C6  F031         	movff	efgtoa@u+3,___flmul@a+3
  5784  001A86  C0B5  F02A         	movff	efgtoa@l,___flmul@b
  5785  001A8A  C0B6  F02B         	movff	efgtoa@l+1,___flmul@b+1
  5786  001A8E  C0B7  F02C         	movff	efgtoa@l+2,___flmul@b+2
  5787  001A92  C0B8  F02D         	movff	efgtoa@l+3,___flmul@b+3
  5788  001A96  EC01  F014         	call	___flmul	;wreg free
  5789  001A9A  C02A  F07D         	movff	?___flmul,___flsub@a
  5790  001A9E  C02B  F07E         	movff	?___flmul+1,___flsub@a+1
  5791  001AA2  C02C  F07F         	movff	?___flmul+2,___flsub@a+2
  5792  001AA6  C02D  F080         	movff	?___flmul+3,___flsub@a+3
  5793  001AAA  EC77  F02D         	call	___flsub	;wreg free
  5794  001AAE  C079  F0B1         	movff	?___flsub,efgtoa@h
  5795  001AB2  C07A  F0B2         	movff	?___flsub+1,efgtoa@h+1
  5796  001AB6  C07B  F0B3         	movff	?___flsub+2,efgtoa@h+2
  5797  001ABA  C07C  F0B4         	movff	?___flsub+3,efgtoa@h+3
  5798  001ABE                     
  5799                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  5800  001ABE  C0C3  F02A         	movff	efgtoa@u,___fldiv@b
  5801  001AC2  C0C4  F02B         	movff	efgtoa@u+1,___fldiv@b+1
  5802  001AC6  C0C5  F02C         	movff	efgtoa@u+2,___fldiv@b+2
  5803  001ACA  C0C6  F02D         	movff	efgtoa@u+3,___fldiv@b+3
  5804  001ACE  0E00               	movlw	0
  5805  001AD0  6E2E               	movwf	___fldiv@a^0,c
  5806  001AD2  0E00               	movlw	0
  5807  001AD4  6E2F               	movwf	(___fldiv@a+1)^0,c
  5808  001AD6  0E20               	movlw	32
  5809  001AD8  6E30               	movwf	(___fldiv@a+2)^0,c
  5810  001ADA  0E41               	movlw	65
  5811  001ADC  6E31               	movwf	(___fldiv@a+3)^0,c
  5812  001ADE  EC29  F016         	call	___fldiv	;wreg free
  5813  001AE2  C02A  F0C3         	movff	?___fldiv,efgtoa@u
  5814  001AE6  C02B  F0C4         	movff	?___fldiv+1,efgtoa@u+1
  5815  001AEA  C02C  F0C5         	movff	?___fldiv+2,efgtoa@u+2
  5816  001AEE  C02D  F0C6         	movff	?___fldiv+3,efgtoa@u+3
  5817  001AF2                     
  5818                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  5819  001AF2  0100               	movlb	0	; () banked
  5820  001AF4  079F               	decf	efgtoa@ne& (0+255),f,b
  5821  001AF6  A0D8               	btfss	status,0,c
  5822  001AF8  07A0               	decf	(efgtoa@ne+1)& (0+255),f,b
  5823  001AFA                     
  5824                           ; BSR set to: 0
  5825                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  5826  001AFA  4BB9               	infsnz	efgtoa@i& (0+255),f,b
  5827  001AFC  2BBA               	incf	(efgtoa@i+1)& (0+255),f,b
  5828  001AFE                     l8809:
  5829                           
  5830                           ; BSR set to: 0
  5831                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5832  001AFE  51A1               	movf	efgtoa@m& (0+255),w,b
  5833  001B00  5DB9               	subwf	efgtoa@i& (0+255),w,b
  5834  001B02  51BA               	movf	(efgtoa@i+1)& (0+255),w,b
  5835  001B04  0A80               	xorlw	128
  5836  001B06  6F8A               	movwf	??_efgtoa& (0+255),b
  5837  001B08  51A2               	movf	(efgtoa@m+1)& (0+255),w,b
  5838  001B0A  0A80               	xorlw	128
  5839  001B0C  598A               	subwfb	??_efgtoa& (0+255),w,b
  5840  001B0E  B0D8               	btfsc	status,0,c
  5841  001B10  EF8C  F00D         	goto	u9741
  5842  001B14  EF8E  F00D         	goto	u9740
  5843  001B18                     u9741:
  5844  001B18  EF9C  F00D         	goto	l8813
  5845  001B1C                     u9740:
  5846  001B1C                     
  5847                           ; BSR set to: 0
  5848  001B1C  BFC2               	btfsc	(efgtoa@n+1)& (0+255),7,b
  5849  001B1E  EF9A  F00D         	goto	u9751
  5850  001B22  51C2               	movf	(efgtoa@n+1)& (0+255),w,b
  5851  001B24  E109               	bnz	u9750
  5852  001B26  0E4B               	movlw	75
  5853  001B28  5DC1               	subwf	efgtoa@n& (0+255),w,b
  5854  001B2A  A0D8               	btfss	status,0,c
  5855  001B2C  EF9A  F00D         	goto	u9751
  5856  001B30  EF9C  F00D         	goto	u9750
  5857  001B34                     u9751:
  5858  001B34  EF91  F00C         	goto	l8761
  5859  001B38                     u9750:
  5860  001B38                     l8813:
  5861                           
  5862                           ; BSR set to: 0
  5863                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  5864  001B38  519D               	movf	efgtoa@pp& (0+255),w,b
  5865  001B3A  119E               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5866  001B3C  A4D8               	btfss	status,2,c
  5867  001B3E  EFA3  F00D         	goto	u9761
  5868  001B42  EFA5  F00D         	goto	u9760
  5869  001B46                     u9761:
  5870  001B46  EFB6  F00D         	goto	l8821
  5871  001B4A                     u9760:
  5872  001B4A                     
  5873                           ; BSR set to: 0
  5874  001B4A  A83E               	btfss	_flags^0,4,c
  5875  001B4C  EFAA  F00D         	goto	u9771
  5876  001B50  EFAC  F00D         	goto	u9770
  5877  001B54                     u9771:
  5878  001B54  EFB6  F00D         	goto	l8821
  5879  001B58                     u9770:
  5880  001B58                     
  5881                           ; BSR set to: 0
  5882                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  5883  001B58  0E40               	movlw	low _dbuf
  5884  001B5A  25C1               	addwf	efgtoa@n& (0+255),w,b
  5885  001B5C  6ED9               	movwf	fsr2l,c
  5886  001B5E  0E01               	movlw	high _dbuf
  5887  001B60  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5888  001B62  6EDA               	movwf	fsr2h,c
  5889  001B64  0E2E               	movlw	46
  5890  001B66  6EDF               	movwf	indf2,c
  5891  001B68                     
  5892                           ; BSR set to: 0
  5893  001B68  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  5894  001B6A  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  5895  001B6C                     l8821:
  5896                           
  5897                           ; BSR set to: 0
  5898                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  5899  001B6C  0E40               	movlw	low _dbuf
  5900  001B6E  25C1               	addwf	efgtoa@n& (0+255),w,b
  5901  001B70  6ED9               	movwf	fsr2l,c
  5902  001B72  0E01               	movlw	high _dbuf
  5903  001B74  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5904  001B76  6EDA               	movwf	fsr2h,c
  5905  001B78  0E00               	movlw	0
  5906  001B7A  6EDF               	movwf	indf2,c
  5907  001B7C                     
  5908                           ; BSR set to: 0
  5909                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  5910  001B7C  0E65               	movlw	101
  5911  001B7E  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  5912  001B80  A4D8               	btfss	status,2,c
  5913  001B82  EFC5  F00D         	goto	u9781
  5914  001B86  EFC7  F00D         	goto	u9780
  5915  001B8A                     u9781:
  5916  001B8A  EF99  F00E         	goto	l8883
  5917  001B8E                     u9780:
  5918  001B8E                     
  5919                           ; BSR set to: 0
  5920                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  5921  001B8E  0E00               	movlw	0
  5922  001B90  6FBA               	movwf	(efgtoa@i+1)& (0+255),b
  5923  001B92  0E4F               	movlw	79
  5924  001B94  6FB9               	movwf	efgtoa@i& (0+255),b
  5925  001B96                     
  5926                           ; BSR set to: 0
  5927                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  5928  001B96  0E40               	movlw	low _dbuf
  5929  001B98  25B9               	addwf	efgtoa@i& (0+255),w,b
  5930  001B9A  6ED9               	movwf	fsr2l,c
  5931  001B9C  0E01               	movlw	high _dbuf
  5932  001B9E  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5933  001BA0  6EDA               	movwf	fsr2h,c
  5934  001BA2  0E00               	movlw	0
  5935  001BA4  6EDF               	movwf	indf2,c
  5936  001BA6                     
  5937                           ; BSR set to: 0
  5938                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  5939  001BA6  0E00               	movlw	0
  5940  001BA8  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  5941  001BAA  0E00               	movlw	0
  5942  001BAC  6FA9               	movwf	efgtoa@sign& (0+255),b
  5943  001BAE                     
  5944                           ; BSR set to: 0
  5945                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  5946  001BAE  BFC0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5947  001BB0  EFDE  F00D         	goto	u9790
  5948  001BB4  EFDC  F00D         	goto	u9791
  5949  001BB8                     u9791:
  5950  001BB8  EFE6  F00D         	goto	l8837
  5951  001BBC                     u9790:
  5952  001BBC                     
  5953                           ; BSR set to: 0
  5954                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  5955  001BBC  0E00               	movlw	0
  5956  001BBE  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  5957  001BC0  0E01               	movlw	1
  5958  001BC2  6FA9               	movwf	efgtoa@sign& (0+255),b
  5959  001BC4                     
  5960                           ; BSR set to: 0
  5961                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  5962  001BC4  6DBF               	negf	efgtoa@e& (0+255),b
  5963  001BC6  1FC0               	comf	(efgtoa@e+1)& (0+255),f,b
  5964  001BC8  B0D8               	btfsc	status,0,c
  5965  001BCA  2BC0               	incf	(efgtoa@e+1)& (0+255),f,b
  5966  001BCC                     l8837:
  5967                           
  5968                           ; BSR set to: 0
  5969                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  5970  001BCC  0E00               	movlw	0
  5971  001BCE  6FAC               	movwf	(efgtoa@p+1)& (0+255),b
  5972  001BD0  0E02               	movlw	2
  5973  001BD2  6FAB               	movwf	efgtoa@p& (0+255),b
  5974                           
  5975                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  5976  001BD4  EF17  F00E         	goto	l8849
  5977  001BD8                     l8839:
  5978                           
  5979                           ; BSR set to: 0
  5980                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  5981  001BD8  07B9               	decf	efgtoa@i& (0+255),f,b
  5982  001BDA  A0D8               	btfss	status,0,c
  5983  001BDC  07BA               	decf	(efgtoa@i+1)& (0+255),f,b
  5984  001BDE                     
  5985                           ; BSR set to: 0
  5986                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  5987  001BDE  0E40               	movlw	low _dbuf
  5988  001BE0  25B9               	addwf	efgtoa@i& (0+255),w,b
  5989  001BE2  6ED9               	movwf	fsr2l,c
  5990  001BE4  0E01               	movlw	high _dbuf
  5991  001BE6  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5992  001BE8  6EDA               	movwf	fsr2h,c
  5993  001BEA  C0BF  F014         	movff	efgtoa@e,___awmod@dividend
  5994  001BEE  C0C0  F015         	movff	efgtoa@e+1,___awmod@dividend+1
  5995  001BF2  0E00               	movlw	0
  5996  001BF4  6E17               	movwf	(___awmod@divisor+1)^0,c
  5997  001BF6  0E0A               	movlw	10
  5998  001BF8  6E16               	movwf	___awmod@divisor^0,c
  5999  001BFA  EC57  F029         	call	___awmod	;wreg free
  6000  001BFE  5014               	movf	?___awmod^0,w,c
  6001  001C00  0F30               	addlw	48
  6002  001C02  6EDF               	movwf	indf2,c
  6003  001C04                     
  6004                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  6005  001C04  C0BF  F014         	movff	efgtoa@e,___awdiv@dividend
  6006  001C08  C0C0  F015         	movff	efgtoa@e+1,___awdiv@dividend+1
  6007  001C0C  0E00               	movlw	0
  6008  001C0E  6E17               	movwf	(___awdiv@divisor+1)^0,c
  6009  001C10  0E0A               	movlw	10
  6010  001C12  6E16               	movwf	___awdiv@divisor^0,c
  6011  001C14  EC34  F028         	call	___awdiv	;wreg free
  6012  001C18  C014  F0BF         	movff	?___awdiv,efgtoa@e
  6013  001C1C  C015  F0C0         	movff	?___awdiv+1,efgtoa@e+1
  6014  001C20                     
  6015                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  6016  001C20  0100               	movlb	0	; () banked
  6017  001C22  07AB               	decf	efgtoa@p& (0+255),f,b
  6018  001C24  A0D8               	btfss	status,0,c
  6019  001C26  07AC               	decf	(efgtoa@p+1)& (0+255),f,b
  6020  001C28                     
  6021                           ; BSR set to: 0
  6022                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  6023  001C28  07AD               	decf	efgtoa@w& (0+255),f,b
  6024  001C2A  A0D8               	btfss	status,0,c
  6025  001C2C  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  6026  001C2E                     l8849:
  6027                           
  6028                           ; BSR set to: 0
  6029                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  6030  001C2E  51BF               	movf	efgtoa@e& (0+255),w,b
  6031  001C30  11C0               	iorwf	(efgtoa@e+1)& (0+255),w,b
  6032  001C32  A4D8               	btfss	status,2,c
  6033  001C34  EF1E  F00E         	goto	u9801
  6034  001C38  EF20  F00E         	goto	u9800
  6035  001C3C                     u9801:
  6036  001C3C  EFEC  F00D         	goto	l8839
  6037  001C40                     u9800:
  6038  001C40                     
  6039                           ; BSR set to: 0
  6040  001C40  BFAC               	btfsc	(efgtoa@p+1)& (0+255),7,b
  6041  001C42  EF2D  F00E         	goto	u9810
  6042  001C46  51AC               	movf	(efgtoa@p+1)& (0+255),w,b
  6043  001C48  E106               	bnz	u9811
  6044  001C4A  05AB               	decf	efgtoa@p& (0+255),w,b
  6045  001C4C  B0D8               	btfsc	status,0,c
  6046  001C4E  EF2B  F00E         	goto	u9811
  6047  001C52  EF2D  F00E         	goto	u9810
  6048  001C56                     u9811:
  6049  001C56  EFEC  F00D         	goto	l8839
  6050  001C5A                     u9810:
  6051  001C5A                     
  6052                           ; BSR set to: 0
  6053                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  6054  001C5A  07B9               	decf	efgtoa@i& (0+255),f,b
  6055  001C5C  A0D8               	btfss	status,0,c
  6056  001C5E  07BA               	decf	(efgtoa@i+1)& (0+255),f,b
  6057  001C60                     
  6058                           ; BSR set to: 0
  6059                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  6060  001C60  51A9               	movf	efgtoa@sign& (0+255),w,b
  6061  001C62  11AA               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  6062  001C64  A4D8               	btfss	status,2,c
  6063  001C66  EF37  F00E         	goto	u9821
  6064  001C6A  EF39  F00E         	goto	u9820
  6065  001C6E                     u9821:
  6066  001C6E  EF3F  F00E         	goto	l8859
  6067  001C72                     u9820:
  6068  001C72                     
  6069                           ; BSR set to: 0
  6070  001C72  0E00               	movlw	0
  6071  001C74  6F96               	movwf	(_efgtoa$3574+1)& (0+255),b
  6072  001C76  0E2B               	movlw	43
  6073  001C78  6F95               	movwf	_efgtoa$3574& (0+255),b
  6074  001C7A  EF43  F00E         	goto	l8861
  6075  001C7E                     l8859:
  6076                           
  6077                           ; BSR set to: 0
  6078  001C7E  0E00               	movlw	0
  6079  001C80  6F96               	movwf	(_efgtoa$3574+1)& (0+255),b
  6080  001C82  0E2D               	movlw	45
  6081  001C84  6F95               	movwf	_efgtoa$3574& (0+255),b
  6082  001C86                     l8861:
  6083                           
  6084                           ; BSR set to: 0
  6085  001C86  0E40               	movlw	low _dbuf
  6086  001C88  25B9               	addwf	efgtoa@i& (0+255),w,b
  6087  001C8A  6ED9               	movwf	fsr2l,c
  6088  001C8C  0E01               	movlw	high _dbuf
  6089  001C8E  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6090  001C90  6EDA               	movwf	fsr2h,c
  6091  001C92  0060  F257  FFDF   	movff	_efgtoa$3574,indf2
  6092  001C98                     
  6093                           ; BSR set to: 0
  6094                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  6095  001C98  07AD               	decf	efgtoa@w& (0+255),f,b
  6096  001C9A  A0D8               	btfss	status,0,c
  6097  001C9C  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  6098  001C9E                     
  6099                           ; BSR set to: 0
  6100                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  6101  001C9E  07B9               	decf	efgtoa@i& (0+255),f,b
  6102  001CA0  A0D8               	btfss	status,0,c
  6103  001CA2  07BA               	decf	(efgtoa@i+1)& (0+255),f,b
  6104  001CA4                     
  6105                           ; BSR set to: 0
  6106  001CA4  0EBF               	movlw	191
  6107  001CA6  6F8A               	movwf	??_efgtoa& (0+255),b
  6108  001CA8  0EFF               	movlw	255
  6109  001CAA  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  6110  001CAC  5189               	movf	efgtoa@c& (0+255),w,b
  6111  001CAE  6F8C               	movwf	(??_efgtoa+2)& (0+255),b
  6112  001CB0  6B8D               	clrf	(??_efgtoa+3)& (0+255),b
  6113  001CB2  518A               	movf	??_efgtoa& (0+255),w,b
  6114  001CB4  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  6115  001CB6  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  6116  001CB8  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  6117  001CBA  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  6118  001CBC  E10A               	bnz	u9830
  6119  001CBE  0E1A               	movlw	26
  6120  001CC0  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  6121  001CC2  A0D8               	btfss	status,0,c
  6122  001CC4  EF66  F00E         	goto	u9831
  6123  001CC8  EF69  F00E         	goto	u9830
  6124  001CCC                     u9831:
  6125  001CCC  0E01               	movlw	1
  6126  001CCE  EF6A  F00E         	goto	u9840
  6127  001CD2                     u9830:
  6128  001CD2  0E00               	movlw	0
  6129  001CD4                     u9840:
  6130  001CD4  6F99               	movwf	_efgtoa$3576& (0+255),b
  6131  001CD6  6B9A               	clrf	(_efgtoa$3576+1)& (0+255),b
  6132  001CD8                     
  6133                           ; BSR set to: 0
  6134  001CD8  5199               	movf	_efgtoa$3576& (0+255),w,b
  6135  001CDA  119A               	iorwf	(_efgtoa$3576+1)& (0+255),w,b
  6136  001CDC  A4D8               	btfss	status,2,c
  6137  001CDE  EF73  F00E         	goto	u9851
  6138  001CE2  EF75  F00E         	goto	u9850
  6139  001CE6                     u9851:
  6140  001CE6  EF7B  F00E         	goto	l8875
  6141  001CEA                     u9850:
  6142  001CEA                     
  6143                           ; BSR set to: 0
  6144  001CEA  0E00               	movlw	0
  6145  001CEC  6F98               	movwf	(_efgtoa$3575+1)& (0+255),b
  6146  001CEE  0E65               	movlw	101
  6147  001CF0  6F97               	movwf	_efgtoa$3575& (0+255),b
  6148  001CF2  EF7F  F00E         	goto	l8877
  6149  001CF6                     l8875:
  6150                           
  6151                           ; BSR set to: 0
  6152  001CF6  0E00               	movlw	0
  6153  001CF8  6F98               	movwf	(_efgtoa$3575+1)& (0+255),b
  6154  001CFA  0E45               	movlw	69
  6155  001CFC  6F97               	movwf	_efgtoa$3575& (0+255),b
  6156  001CFE                     l8877:
  6157                           
  6158                           ; BSR set to: 0
  6159  001CFE  0E40               	movlw	low _dbuf
  6160  001D00  25B9               	addwf	efgtoa@i& (0+255),w,b
  6161  001D02  6ED9               	movwf	fsr2l,c
  6162  001D04  0E01               	movlw	high _dbuf
  6163  001D06  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6164  001D08  6EDA               	movwf	fsr2h,c
  6165  001D0A  0060  F25F  FFDF   	movff	_efgtoa$3575,indf2
  6166  001D10                     
  6167                           ; BSR set to: 0
  6168                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  6169  001D10  07AD               	decf	efgtoa@w& (0+255),f,b
  6170  001D12  A0D8               	btfss	status,0,c
  6171  001D14  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  6172  001D16                     
  6173                           ; BSR set to: 0
  6174                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  6175  001D16  0E40               	movlw	low _dbuf
  6176  001D18  25C1               	addwf	efgtoa@n& (0+255),w,b
  6177  001D1A  6E14               	movwf	strcpy@dest^0,c
  6178  001D1C  0E01               	movlw	high _dbuf
  6179  001D1E  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6180  001D20  6E15               	movwf	(strcpy@dest+1)^0,c
  6181  001D22  0E40               	movlw	low _dbuf
  6182  001D24  25B9               	addwf	efgtoa@i& (0+255),w,b
  6183  001D26  6E16               	movwf	strcpy@src^0,c
  6184  001D28  0E01               	movlw	high _dbuf
  6185  001D2A  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6186  001D2C  6E17               	movwf	(strcpy@src+1)^0,c
  6187  001D2E  ECF6  F02B         	call	_strcpy	;wreg free
  6188  001D32                     l8883:
  6189                           
  6190                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 524:     return p
      +                          ad(fp, &dbuf[0], w);
  6191  001D32  C083  F026         	movff	efgtoa@fp,pad@fp
  6192  001D36  C084  F027         	movff	efgtoa@fp+1,pad@fp+1
  6193  001D3A  0E40               	movlw	low _dbuf
  6194  001D3C  6E28               	movwf	pad@buf^0,c
  6195  001D3E  0E01               	movlw	high _dbuf
  6196  001D40  6E29               	movwf	(pad@buf+1)^0,c
  6197  001D42  C0AD  F02A         	movff	efgtoa@w,pad@p
  6198  001D46  C0AE  F02B         	movff	efgtoa@w+1,pad@p+1
  6199  001D4A  EC96  F028         	call	_pad	;wreg free
  6200  001D4E  C026  F083         	movff	?_pad,?_efgtoa
  6201  001D52  C027  F084         	movff	?_pad+1,?_efgtoa+1
  6202  001D56                     l2169:
  6203  001D56  0012               	return		;funcret
  6204  001D58                     __end_of_efgtoa:
  6205                           	callstack 0
  6206                           
  6207 ;; *************** function _tolower *****************
  6208 ;; Defined at:
  6209 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  6210 ;; Parameters:    Size  Location     Type
  6211 ;;  c               2   25[COMRAM] int 
  6212 ;; Auto vars:     Size  Location     Type
  6213 ;;		None
  6214 ;; Return value:  Size  Location     Type
  6215 ;;                  2   25[COMRAM] int 
  6216 ;; Registers used:
  6217 ;;		wreg, status,2, status,0
  6218 ;; Tracked objects:
  6219 ;;		On entry : 0/0
  6220 ;;		On exit  : 0/0
  6221 ;;		Unchanged: 0/0
  6222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6223 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6224 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6225 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6226 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6227 ;;Total ram usage:        8 bytes
  6228 ;; Hardware stack levels used: 1
  6229 ;; Hardware stack levels required when called: 9
  6230 ;; This function calls:
  6231 ;;		_isupper
  6232 ;; This function is called by:
  6233 ;;		_efgtoa
  6234 ;;		_vfpfcnvrt
  6235 ;; This function uses a non-reentrant model
  6236 ;;
  6237                           
  6238                           	psect	text14
  6239  005856                     __ptext14:
  6240                           	callstack 0
  6241  005856                     _tolower:
  6242                           	callstack 16
  6243  005856  0EBF               	movlw	191
  6244  005858  6E1C               	movwf	??_tolower^0,c
  6245  00585A  0EFF               	movlw	255
  6246  00585C  6E1D               	movwf	(??_tolower+1)^0,c
  6247  00585E  C01A  F01E         	movff	tolower@c,??_tolower+2
  6248  005862  C01B  F01F         	movff	tolower@c+1,??_tolower+3
  6249  005866  501C               	movf	??_tolower^0,w,c
  6250  005868  261E               	addwf	(??_tolower+2)^0,f,c
  6251  00586A  501D               	movf	(??_tolower+1)^0,w,c
  6252  00586C  221F               	addwfc	(??_tolower+3)^0,f,c
  6253  00586E  501F               	movf	(??_tolower+3)^0,w,c
  6254  005870  E10A               	bnz	u9040
  6255  005872  0E1A               	movlw	26
  6256  005874  5C1E               	subwf	(??_tolower+2)^0,w,c
  6257  005876  A0D8               	btfss	status,0,c
  6258  005878  EF40  F02C         	goto	u9041
  6259  00587C  EF43  F02C         	goto	u9040
  6260  005880                     u9041:
  6261  005880  0E01               	movlw	1
  6262  005882  EF44  F02C         	goto	u9050
  6263  005886                     u9040:
  6264  005886  0E00               	movlw	0
  6265  005888                     u9050:
  6266  005888  6E20               	movwf	_tolower$3695^0,c
  6267  00588A  6A21               	clrf	(_tolower$3695+1)^0,c
  6268  00588C  5020               	movf	_tolower$3695^0,w,c
  6269  00588E  1021               	iorwf	(_tolower$3695+1)^0,w,c
  6270  005890  B4D8               	btfsc	status,2,c
  6271  005892  EF4D  F02C         	goto	u9061
  6272  005896  EF4F  F02C         	goto	u9060
  6273  00589A                     u9061:
  6274  00589A  EF56  F02C         	goto	l2367
  6275  00589E                     u9060:
  6276  00589E  0E20               	movlw	32
  6277  0058A0  101A               	iorwf	tolower@c^0,w,c
  6278  0058A2  6E1A               	movwf	?_tolower^0,c
  6279  0058A4  501B               	movf	(tolower@c+1)^0,w,c
  6280  0058A6  6E1B               	movwf	(?_tolower+1)^0,c
  6281  0058A8  EF5A  F02C         	goto	l2372
  6282  0058AC                     l2367:
  6283  0058AC  C01A  F01A         	movff	tolower@c,?_tolower
  6284  0058B0  C01B  F01B         	movff	tolower@c+1,?_tolower+1
  6285  0058B4                     l2372:
  6286  0058B4  0012               	return		;funcret
  6287  0058B6                     __end_of_tolower:
  6288                           	callstack 0
  6289                           
  6290 ;; *************** function _isupper *****************
  6291 ;; Defined at:
  6292 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  6293 ;; Parameters:    Size  Location     Type
  6294 ;;  c               2   19[COMRAM] int 
  6295 ;; Auto vars:     Size  Location     Type
  6296 ;;		None
  6297 ;; Return value:  Size  Location     Type
  6298 ;;                  2   19[COMRAM] int 
  6299 ;; Registers used:
  6300 ;;		wreg, status,2, status,0
  6301 ;; Tracked objects:
  6302 ;;		On entry : 0/0
  6303 ;;		On exit  : 0/0
  6304 ;;		Unchanged: 0/0
  6305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6306 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6308 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6309 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6310 ;;Total ram usage:        6 bytes
  6311 ;; Hardware stack levels used: 1
  6312 ;; Hardware stack levels required when called: 8
  6313 ;; This function calls:
  6314 ;;		Nothing
  6315 ;; This function is called by:
  6316 ;;		_efgtoa
  6317 ;;		_vfpfcnvrt
  6318 ;;		_tolower
  6319 ;; This function uses a non-reentrant model
  6320 ;;
  6321                           
  6322                           	psect	text15
  6323  005CEE                     __ptext15:
  6324                           	callstack 0
  6325  005CEE                     _isupper:
  6326                           	callstack 16
  6327  005CEE  0EBF               	movlw	191
  6328  005CF0  6E16               	movwf	??_isupper^0,c
  6329  005CF2  0EFF               	movlw	255
  6330  005CF4  6E17               	movwf	(??_isupper+1)^0,c
  6331  005CF6  C014  F018         	movff	isupper@c,??_isupper+2
  6332  005CFA  C015  F019         	movff	isupper@c+1,??_isupper+3
  6333  005CFE  5016               	movf	??_isupper^0,w,c
  6334  005D00  2618               	addwf	(??_isupper+2)^0,f,c
  6335  005D02  5017               	movf	(??_isupper+1)^0,w,c
  6336  005D04  2219               	addwfc	(??_isupper+3)^0,f,c
  6337  005D06  5019               	movf	(??_isupper+3)^0,w,c
  6338  005D08  E10A               	bnz	u7980
  6339  005D0A  0E1A               	movlw	26
  6340  005D0C  5C18               	subwf	(??_isupper+2)^0,w,c
  6341  005D0E  A0D8               	btfss	status,0,c
  6342  005D10  EF8C  F02E         	goto	u7981
  6343  005D14  EF8F  F02E         	goto	u7980
  6344  005D18                     u7981:
  6345  005D18  0E01               	movlw	1
  6346  005D1A  EF90  F02E         	goto	u7990
  6347  005D1E                     u7980:
  6348  005D1E  0E00               	movlw	0
  6349  005D20                     u7990:
  6350  005D20  6E14               	movwf	?_isupper^0,c
  6351  005D22  6A15               	clrf	(?_isupper+1)^0,c
  6352  005D24  0012               	return		;funcret
  6353  005D26                     __end_of_isupper:
  6354                           	callstack 0
  6355                           
  6356 ;; *************** function _strcpy *****************
  6357 ;; Defined at:
  6358 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  6359 ;; Parameters:    Size  Location     Type
  6360 ;;  dest            2   19[COMRAM] PTR unsigned char 
  6361 ;;		 -> dbuf(80), 
  6362 ;;  src             2   21[COMRAM] PTR const unsigned char 
  6363 ;;		 -> STR_14(4), STR_13(4), STR_10(4), STR_9(4), 
  6364 ;;		 -> dbuf(80), 
  6365 ;; Auto vars:     Size  Location     Type
  6366 ;;  d               2   27[COMRAM] PTR unsigned char 
  6367 ;;		 -> dbuf(80), 
  6368 ;;  s               2   25[COMRAM] PTR const unsigned char 
  6369 ;;		 -> STR_14(4), STR_13(4), STR_10(4), STR_9(4), 
  6370 ;;		 -> dbuf(80), 
  6371 ;; Return value:  Size  Location     Type
  6372 ;;                  2   19[COMRAM] PTR unsigned char 
  6373 ;; Registers used:
  6374 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6375 ;; Tracked objects:
  6376 ;;		On entry : 0/0
  6377 ;;		On exit  : 0/0
  6378 ;;		Unchanged: 0/0
  6379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6380 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6381 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6382 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6383 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6384 ;;Total ram usage:       10 bytes
  6385 ;; Hardware stack levels used: 1
  6386 ;; Hardware stack levels required when called: 8
  6387 ;; This function calls:
  6388 ;;		Nothing
  6389 ;; This function is called by:
  6390 ;;		_efgtoa
  6391 ;; This function uses a non-reentrant model
  6392 ;;
  6393                           
  6394                           	psect	text16
  6395  0057EC                     __ptext16:
  6396                           	callstack 0
  6397  0057EC                     _strcpy:
  6398                           	callstack 16
  6399  0057EC  C016  F01A         	movff	strcpy@src,strcpy@s
  6400  0057F0  C017  F01B         	movff	strcpy@src+1,strcpy@s+1
  6401  0057F4  C014  F01C         	movff	strcpy@dest,strcpy@d
  6402  0057F8  C015  F01D         	movff	strcpy@dest+1,strcpy@d+1
  6403  0057FC                     l8477:
  6404  0057FC  501A               	movf	strcpy@s^0,w,c
  6405  0057FE  6E18               	movwf	??_strcpy^0,c
  6406  005800  501B               	movf	(strcpy@s+1)^0,w,c
  6407  005802  6E19               	movwf	(??_strcpy+1)^0,c
  6408  005804  4A1A               	infsnz	strcpy@s^0,f,c
  6409  005806  2A1B               	incf	(strcpy@s+1)^0,f,c
  6410  005808  0060  F063  FFF6   	movff	??_strcpy,tblptrl
  6411  00580E  0060  F067  FFF7   	movff	??_strcpy+1,tblptrh
  6412  005814  0E00               	movlw	low (__smallconst shr (0+16))
  6413  005816  6EF8               	movwf	tblptru,c
  6414  005818  0060  F073  FFD9   	movff	strcpy@d,fsr2l
  6415  00581E  0060  F077  FFDA   	movff	strcpy@d+1,fsr2h
  6416  005824  4A1C               	infsnz	strcpy@d^0,f,c
  6417  005826  2A1D               	incf	(strcpy@d+1)^0,f,c
  6418  005828  0E0F               	movlw	(high __ramtop+-1)
  6419  00582A  64F7               	cpfsgt	tblptrh,c
  6420  00582C  D003               	bra	u9027
  6421  00582E  0008               	tblrd		*
  6422  005830  50F5               	movf	tablat,w,c
  6423  005832  D007               	bra	u9020
  6424  005834                     u9027:
  6425  005834  006F FFDB FFE1     	movff	tblptrl,fsr1l
  6426  00583A  006F FFDF FFE2     	movff	tblptrh,fsr1h
  6427  005840  50E7               	movf	indf1,w,c
  6428  005842                     u9020:
  6429  005842  6EDF               	movwf	indf2,c
  6430  005844  50DF               	movf	indf2,w,c
  6431  005846  A4D8               	btfss	status,2,c
  6432  005848  EF28  F02C         	goto	u9031
  6433  00584C  EF2A  F02C         	goto	u9030
  6434  005850                     u9031:
  6435  005850  EFFE  F02B         	goto	l8477
  6436  005854                     u9030:
  6437  005854  0012               	return		;funcret
  6438  005856                     __end_of_strcpy:
  6439                           	callstack 0
  6440                           
  6441 ;; *************** function _floorf *****************
  6442 ;; Defined at:
  6443 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
  6444 ;; Parameters:    Size  Location     Type
  6445 ;;  x               4   53[COMRAM] float 
  6446 ;; Auto vars:     Size  Location     Type
  6447 ;;  u               4   25[BANK0 ] struct .
  6448 ;;  m               4   19[BANK0 ] unsigned long 
  6449 ;;  e               2   23[BANK0 ] int 
  6450 ;; Return value:  Size  Location     Type
  6451 ;;                  4   53[COMRAM] float 
  6452 ;; Registers used:
  6453 ;;		wreg, status,2, status,0
  6454 ;; Tracked objects:
  6455 ;;		On entry : 0/0
  6456 ;;		On exit  : 0/0
  6457 ;;		Unchanged: 0/0
  6458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6459 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6460 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6461 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6462 ;;      Totals:         4      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6463 ;;Total ram usage:       20 bytes
  6464 ;; Hardware stack levels used: 1
  6465 ;; Hardware stack levels required when called: 8
  6466 ;; This function calls:
  6467 ;;		Nothing
  6468 ;; This function is called by:
  6469 ;;		_efgtoa
  6470 ;; This function uses a non-reentrant model
  6471 ;;
  6472                           
  6473                           	psect	text17
  6474  0034EE                     __ptext17:
  6475                           	callstack 0
  6476  0034EE                     _floorf:
  6477                           	callstack 16
  6478  0034EE  C118  F079         	movff	floorf@F527,floorf@u
  6479  0034F2  C119  F07A         	movff	floorf@F527+1,floorf@u+1
  6480  0034F6  C11A  F07B         	movff	floorf@F527+2,floorf@u+2
  6481  0034FA  C11B  F07C         	movff	floorf@F527+3,floorf@u+3
  6482  0034FE  C036  F079         	movff	floorf@x,floorf@u
  6483  003502  C037  F07A         	movff	floorf@x+1,floorf@u+1
  6484  003506  C038  F07B         	movff	floorf@x+2,floorf@u+2
  6485  00350A  C039  F07C         	movff	floorf@x+3,floorf@u+3
  6486  00350E  0E81               	movlw	129
  6487  003510  0100               	movlb	0	; () banked
  6488  003512  6F6D               	movwf	??_floorf& (0+255),b
  6489  003514  0EFF               	movlw	255
  6490  003516  6F6E               	movwf	(??_floorf+1)& (0+255),b
  6491  003518  C079  F06F         	movff	floorf@u,??_floorf+2
  6492  00351C  C07A  F070         	movff	floorf@u+1,??_floorf+3
  6493  003520  C07B  F071         	movff	floorf@u+2,??_floorf+4
  6494  003524  C07C  F072         	movff	floorf@u+3,??_floorf+5
  6495  003528  0E18               	movlw	24
  6496  00352A  EF9C  F01A         	goto	u9070
  6497  00352E                     u9075:
  6498  00352E  90D8               	bcf	status,0,c
  6499  003530  3372               	rrcf	(??_floorf+5)& (0+255),f,b
  6500  003532  3371               	rrcf	(??_floorf+4)& (0+255),f,b
  6501  003534  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  6502  003536  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  6503  003538                     u9070:
  6504  003538  2EE8               	decfsz	wreg,f,c
  6505  00353A  EF97  F01A         	goto	u9075
  6506  00353E  516F               	movf	(??_floorf+2)& (0+255),w,b
  6507  003540  256D               	addwf	??_floorf& (0+255),w,b
  6508  003542  6F77               	movwf	floorf@e& (0+255),b
  6509  003544  0E00               	movlw	0
  6510  003546  216E               	addwfc	(??_floorf+1)& (0+255),w,b
  6511  003548  6F78               	movwf	(floorf@e+1)& (0+255),b
  6512  00354A  BF78               	btfsc	(floorf@e+1)& (0+255),7,b
  6513  00354C  EFB1  F01A         	goto	u9081
  6514  003550  5178               	movf	(floorf@e+1)& (0+255),w,b
  6515  003552  E109               	bnz	u9080
  6516  003554  0E17               	movlw	23
  6517  003556  5D77               	subwf	floorf@e& (0+255),w,b
  6518  003558  A0D8               	btfss	status,0,c
  6519  00355A  EFB1  F01A         	goto	u9081
  6520  00355E  EFB3  F01A         	goto	u9080
  6521  003562                     u9081:
  6522  003562  EFBD  F01A         	goto	l8495
  6523  003566                     u9080:
  6524  003566                     l8493:
  6525                           
  6526                           ; BSR set to: 0
  6527  003566  C036  F036         	movff	floorf@x,?_floorf
  6528  00356A  C037  F037         	movff	floorf@x+1,?_floorf+1
  6529  00356E  C038  F038         	movff	floorf@x+2,?_floorf+2
  6530  003572  C039  F039         	movff	floorf@x+3,?_floorf+3
  6531  003576  EF81  F01B         	goto	l2308
  6532  00357A                     l8495:
  6533                           
  6534                           ; BSR set to: 0
  6535  00357A  BF78               	btfsc	(floorf@e+1)& (0+255),7,b
  6536  00357C  EFC2  F01A         	goto	u9091
  6537  003580  EFC4  F01A         	goto	u9090
  6538  003584                     u9091:
  6539  003584  EF35  F01B         	goto	l8505
  6540  003588                     u9090:
  6541  003588                     
  6542                           ; BSR set to: 0
  6543  003588  C077  F06D         	movff	floorf@e,??_floorf
  6544  00358C  0EFF               	movlw	255
  6545  00358E  6F6E               	movwf	(??_floorf+1)& (0+255),b
  6546  003590  0EFF               	movlw	255
  6547  003592  6F6F               	movwf	(??_floorf+2)& (0+255),b
  6548  003594  0E7F               	movlw	127
  6549  003596  6F70               	movwf	(??_floorf+3)& (0+255),b
  6550  003598  0E00               	movlw	0
  6551  00359A  6F71               	movwf	(??_floorf+4)& (0+255),b
  6552  00359C                     u9105:
  6553  00359C  676D               	tstfsz	??_floorf& (0+255),b
  6554  00359E  EFD3  F01A         	goto	u9106
  6555  0035A2  EFDB  F01A         	goto	u9107
  6556  0035A6                     u9106:
  6557  0035A6  3571               	rlcf	(??_floorf+4)& (0+255),w,b
  6558  0035A8  3371               	rrcf	(??_floorf+4)& (0+255),f,b
  6559  0035AA  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  6560  0035AC  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  6561  0035AE  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  6562  0035B0  2F6D               	decfsz	??_floorf& (0+255),f,b
  6563  0035B2  EFCE  F01A         	goto	u9105
  6564  0035B6                     u9107:
  6565  0035B6  C06E  F073         	movff	??_floorf+1,floorf@m
  6566  0035BA  C06F  F074         	movff	??_floorf+2,floorf@m+1
  6567  0035BE  C070  F075         	movff	??_floorf+3,floorf@m+2
  6568  0035C2  C071  F076         	movff	??_floorf+4,floorf@m+3
  6569  0035C6  0100               	movlb	0	; () banked
  6570  0035C8  5173               	movf	floorf@m& (0+255),w,b
  6571  0035CA  1579               	andwf	floorf@u& (0+255),w,b
  6572  0035CC  6F6D               	movwf	??_floorf& (0+255),b
  6573  0035CE  5174               	movf	(floorf@m+1)& (0+255),w,b
  6574  0035D0  157A               	andwf	(floorf@u+1)& (0+255),w,b
  6575  0035D2  6F6E               	movwf	(??_floorf+1)& (0+255),b
  6576  0035D4  5175               	movf	(floorf@m+2)& (0+255),w,b
  6577  0035D6  157B               	andwf	(floorf@u+2)& (0+255),w,b
  6578  0035D8  6F6F               	movwf	(??_floorf+2)& (0+255),b
  6579  0035DA  5176               	movf	(floorf@m+3)& (0+255),w,b
  6580  0035DC  157C               	andwf	(floorf@u+3)& (0+255),w,b
  6581  0035DE  6F70               	movwf	(??_floorf+3)& (0+255),b
  6582  0035E0  516D               	movf	??_floorf& (0+255),w,b
  6583  0035E2  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  6584  0035E4  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  6585  0035E6  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  6586  0035E8  A4D8               	btfss	status,2,c
  6587  0035EA  EFF9  F01A         	goto	u9111
  6588  0035EE  EFFB  F01A         	goto	u9110
  6589  0035F2                     u9111:
  6590  0035F2  EFFD  F01A         	goto	l8501
  6591  0035F6                     u9110:
  6592  0035F6  EFB3  F01A         	goto	l8493
  6593  0035FA                     l8501:
  6594                           
  6595                           ; BSR set to: 0
  6596  0035FA  C079  F06D         	movff	floorf@u,??_floorf
  6597  0035FE  C07A  F06E         	movff	floorf@u+1,??_floorf+1
  6598  003602  C07B  F06F         	movff	floorf@u+2,??_floorf+2
  6599  003606  C07C  F070         	movff	floorf@u+3,??_floorf+3
  6600  00360A  0E20               	movlw	32
  6601  00360C  EF0D  F01B         	goto	u9120
  6602  003610                     u9125:
  6603  003610  90D8               	bcf	status,0,c
  6604  003612  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  6605  003614  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  6606  003616  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  6607  003618  336D               	rrcf	??_floorf& (0+255),f,b
  6608  00361A                     u9120:
  6609  00361A  2EE8               	decfsz	wreg,f,c
  6610  00361C  EF08  F01B         	goto	u9125
  6611  003620  516D               	movf	??_floorf& (0+255),w,b
  6612  003622  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  6613  003624  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  6614  003626  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  6615  003628  B4D8               	btfsc	status,2,c
  6616  00362A  EF19  F01B         	goto	u9131
  6617  00362E  EF1B  F01B         	goto	u9130
  6618  003632                     u9131:
  6619  003632  EF23  F01B         	goto	l2311
  6620  003636                     u9130:
  6621  003636                     
  6622                           ; BSR set to: 0
  6623  003636  5173               	movf	floorf@m& (0+255),w,b
  6624  003638  2779               	addwf	floorf@u& (0+255),f,b
  6625  00363A  5174               	movf	(floorf@m+1)& (0+255),w,b
  6626  00363C  237A               	addwfc	(floorf@u+1)& (0+255),f,b
  6627  00363E  5175               	movf	(floorf@m+2)& (0+255),w,b
  6628  003640  237B               	addwfc	(floorf@u+2)& (0+255),f,b
  6629  003642  5176               	movf	(floorf@m+3)& (0+255),w,b
  6630  003644  237C               	addwfc	(floorf@u+3)& (0+255),f,b
  6631  003646                     l2311:
  6632                           
  6633                           ; BSR set to: 0
  6634  003646  1D73               	comf	floorf@m& (0+255),w,b
  6635  003648  6F6D               	movwf	??_floorf& (0+255),b
  6636  00364A  1D74               	comf	(floorf@m+1)& (0+255),w,b
  6637  00364C  6F6E               	movwf	(??_floorf+1)& (0+255),b
  6638  00364E  1D75               	comf	(floorf@m+2)& (0+255),w,b
  6639  003650  6F6F               	movwf	(??_floorf+2)& (0+255),b
  6640  003652  1D76               	comf	(floorf@m+3)& (0+255),w,b
  6641  003654  6F70               	movwf	(??_floorf+3)& (0+255),b
  6642  003656  516D               	movf	??_floorf& (0+255),w,b
  6643  003658  1779               	andwf	floorf@u& (0+255),f,b
  6644  00365A  516E               	movf	(??_floorf+1)& (0+255),w,b
  6645  00365C  177A               	andwf	(floorf@u+1)& (0+255),f,b
  6646  00365E  516F               	movf	(??_floorf+2)& (0+255),w,b
  6647  003660  177B               	andwf	(floorf@u+2)& (0+255),f,b
  6648  003662  5170               	movf	(??_floorf+3)& (0+255),w,b
  6649  003664  177C               	andwf	(floorf@u+3)& (0+255),f,b
  6650  003666  EF79  F01B         	goto	l8513
  6651  00366A                     l8505:
  6652                           
  6653                           ; BSR set to: 0
  6654  00366A  C079  F06D         	movff	floorf@u,??_floorf
  6655  00366E  C07A  F06E         	movff	floorf@u+1,??_floorf+1
  6656  003672  C07B  F06F         	movff	floorf@u+2,??_floorf+2
  6657  003676  C07C  F070         	movff	floorf@u+3,??_floorf+3
  6658  00367A  0E20               	movlw	32
  6659  00367C  EF45  F01B         	goto	u9140
  6660  003680                     u9145:
  6661  003680  90D8               	bcf	status,0,c
  6662  003682  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  6663  003684  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  6664  003686  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  6665  003688  336D               	rrcf	??_floorf& (0+255),f,b
  6666  00368A                     u9140:
  6667  00368A  2EE8               	decfsz	wreg,f,c
  6668  00368C  EF40  F01B         	goto	u9145
  6669  003690  516D               	movf	??_floorf& (0+255),w,b
  6670  003692  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  6671  003694  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  6672  003696  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  6673  003698  A4D8               	btfss	status,2,c
  6674  00369A  EF51  F01B         	goto	u9151
  6675  00369E  EF53  F01B         	goto	u9150
  6676  0036A2                     u9151:
  6677  0036A2  EF5D  F01B         	goto	l8509
  6678  0036A6                     u9150:
  6679  0036A6                     
  6680                           ; BSR set to: 0
  6681  0036A6  0E00               	movlw	0
  6682  0036A8  6F79               	movwf	floorf@u& (0+255),b
  6683  0036AA  0E00               	movlw	0
  6684  0036AC  6F7A               	movwf	(floorf@u+1)& (0+255),b
  6685  0036AE  0E00               	movlw	0
  6686  0036B0  6F7B               	movwf	(floorf@u+2)& (0+255),b
  6687  0036B2  0E00               	movlw	0
  6688  0036B4  6F7C               	movwf	(floorf@u+3)& (0+255),b
  6689  0036B6  EF79  F01B         	goto	l8513
  6690  0036BA                     l8509:
  6691                           
  6692                           ; BSR set to: 0
  6693  0036BA  90D8               	bcf	status,0,c
  6694  0036BC  3579               	rlcf	floorf@u& (0+255),w,b
  6695  0036BE  6F6D               	movwf	??_floorf& (0+255),b
  6696  0036C0  357A               	rlcf	(floorf@u+1)& (0+255),w,b
  6697  0036C2  6F6E               	movwf	(??_floorf+1)& (0+255),b
  6698  0036C4  357B               	rlcf	(floorf@u+2)& (0+255),w,b
  6699  0036C6  6F6F               	movwf	(??_floorf+2)& (0+255),b
  6700  0036C8  357C               	rlcf	(floorf@u+3)& (0+255),w,b
  6701  0036CA  6F70               	movwf	(??_floorf+3)& (0+255),b
  6702  0036CC  516D               	movf	??_floorf& (0+255),w,b
  6703  0036CE  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  6704  0036D0  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  6705  0036D2  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  6706  0036D4  B4D8               	btfsc	status,2,c
  6707  0036D6  EF6F  F01B         	goto	u9161
  6708  0036DA  EF71  F01B         	goto	u9160
  6709  0036DE                     u9161:
  6710  0036DE  EF79  F01B         	goto	l8513
  6711  0036E2                     u9160:
  6712  0036E2                     
  6713                           ; BSR set to: 0
  6714  0036E2  0E00               	movlw	0
  6715  0036E4  6F79               	movwf	floorf@u& (0+255),b
  6716  0036E6  0E00               	movlw	0
  6717  0036E8  6F7A               	movwf	(floorf@u+1)& (0+255),b
  6718  0036EA  0E80               	movlw	128
  6719  0036EC  6F7B               	movwf	(floorf@u+2)& (0+255),b
  6720  0036EE  0EBF               	movlw	191
  6721  0036F0  6F7C               	movwf	(floorf@u+3)& (0+255),b
  6722  0036F2                     l8513:
  6723                           
  6724                           ; BSR set to: 0
  6725  0036F2  C079  F036         	movff	floorf@u,?_floorf
  6726  0036F6  C07A  F037         	movff	floorf@u+1,?_floorf+1
  6727  0036FA  C07B  F038         	movff	floorf@u+2,?_floorf+2
  6728  0036FE  C07C  F039         	movff	floorf@u+3,?_floorf+3
  6729  003702                     l2308:
  6730                           
  6731                           ; BSR set to: 0
  6732  003702  0012               	return		;funcret
  6733  003704                     __end_of_floorf:
  6734                           	callstack 0
  6735                           
  6736 ;; *************** function ___fpclassifyf *****************
  6737 ;; Defined at:
  6738 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
  6739 ;; Parameters:    Size  Location     Type
  6740 ;;  x               4   19[COMRAM] float 
  6741 ;; Auto vars:     Size  Location     Type
  6742 ;;  u               4   29[COMRAM] struct .
  6743 ;;  e               2   27[COMRAM] int 
  6744 ;; Return value:  Size  Location     Type
  6745 ;;                  2   19[COMRAM] int 
  6746 ;; Registers used:
  6747 ;;		wreg, status,2, status,0
  6748 ;; Tracked objects:
  6749 ;;		On entry : 0/0
  6750 ;;		On exit  : 0/0
  6751 ;;		Unchanged: 0/0
  6752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6753 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6754 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6755 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6756 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6757 ;;Total ram usage:       14 bytes
  6758 ;; Hardware stack levels used: 1
  6759 ;; Hardware stack levels required when called: 8
  6760 ;; This function calls:
  6761 ;;		Nothing
  6762 ;; This function is called by:
  6763 ;;		_efgtoa
  6764 ;; This function uses a non-reentrant model
  6765 ;;
  6766                           
  6767                           	psect	text18
  6768  004A3E                     __ptext18:
  6769                           	callstack 0
  6770  004A3E                     ___fpclassifyf:
  6771                           	callstack 16
  6772  004A3E  C11C  F01E         	movff	___fpclassifyf@F465,___fpclassifyf@u
  6773  004A42  C11D  F01F         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  6774  004A46  C11E  F020         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  6775  004A4A  C11F  F021         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  6776  004A4E  C014  F01E         	movff	___fpclassifyf@x,___fpclassifyf@u
  6777  004A52  C015  F01F         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  6778  004A56  C016  F020         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  6779  004A5A  C017  F021         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  6780  004A5E  C01E  F018         	movff	___fpclassifyf@u,??___fpclassifyf
  6781  004A62  C01F  F019         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6782  004A66  C020  F01A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6783  004A6A  C021  F01B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6784  004A6E  0E18               	movlw	24
  6785  004A70  EF3F  F025         	goto	u8950
  6786  004A74                     u8955:
  6787  004A74  90D8               	bcf	status,0,c
  6788  004A76  321B               	rrcf	(??___fpclassifyf+3)^0,f,c
  6789  004A78  321A               	rrcf	(??___fpclassifyf+2)^0,f,c
  6790  004A7A  3219               	rrcf	(??___fpclassifyf+1)^0,f,c
  6791  004A7C  3218               	rrcf	??___fpclassifyf^0,f,c
  6792  004A7E                     u8950:
  6793  004A7E  2EE8               	decfsz	wreg,f,c
  6794  004A80  EF3A  F025         	goto	u8955
  6795  004A84  5018               	movf	??___fpclassifyf^0,w,c
  6796  004A86  6E1C               	movwf	___fpclassifyf@e^0,c
  6797  004A88  6A1D               	clrf	(___fpclassifyf@e+1)^0,c
  6798  004A8A  501C               	movf	___fpclassifyf@e^0,w,c
  6799  004A8C  101D               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6800  004A8E  A4D8               	btfss	status,2,c
  6801  004A90  EF4C  F025         	goto	u8961
  6802  004A94  EF4E  F025         	goto	u8960
  6803  004A98                     u8961:
  6804  004A98  EF6E  F025         	goto	l8465
  6805  004A9C                     u8960:
  6806  004A9C  90D8               	bcf	status,0,c
  6807  004A9E  341E               	rlcf	___fpclassifyf@u^0,w,c
  6808  004AA0  6E18               	movwf	??___fpclassifyf^0,c
  6809  004AA2  341F               	rlcf	(___fpclassifyf@u+1)^0,w,c
  6810  004AA4  6E19               	movwf	(??___fpclassifyf+1)^0,c
  6811  004AA6  3420               	rlcf	(___fpclassifyf@u+2)^0,w,c
  6812  004AA8  6E1A               	movwf	(??___fpclassifyf+2)^0,c
  6813  004AAA  3421               	rlcf	(___fpclassifyf@u+3)^0,w,c
  6814  004AAC  6E1B               	movwf	(??___fpclassifyf+3)^0,c
  6815  004AAE  5018               	movf	??___fpclassifyf^0,w,c
  6816  004AB0  1019               	iorwf	(??___fpclassifyf+1)^0,w,c
  6817  004AB2  101A               	iorwf	(??___fpclassifyf+2)^0,w,c
  6818  004AB4  101B               	iorwf	(??___fpclassifyf+3)^0,w,c
  6819  004AB6  A4D8               	btfss	status,2,c
  6820  004AB8  EF60  F025         	goto	u8971
  6821  004ABC  EF62  F025         	goto	u8970
  6822  004AC0                     u8971:
  6823  004AC0  EF68  F025         	goto	l8461
  6824  004AC4                     u8970:
  6825  004AC4  0E00               	movlw	0
  6826  004AC6  6E15               	movwf	(?___fpclassifyf+1)^0,c
  6827  004AC8  0E02               	movlw	2
  6828  004ACA  6E14               	movwf	?___fpclassifyf^0,c
  6829  004ACC  EF9D  F025         	goto	l2294
  6830  004AD0                     l8461:
  6831  004AD0  0E00               	movlw	0
  6832  004AD2  6E15               	movwf	(?___fpclassifyf+1)^0,c
  6833  004AD4  0E03               	movlw	3
  6834  004AD6  6E14               	movwf	?___fpclassifyf^0,c
  6835  004AD8  EF9D  F025         	goto	l2294
  6836  004ADC                     l8465:
  6837  004ADC  281C               	incf	___fpclassifyf@e^0,w,c
  6838  004ADE  101D               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6839  004AE0  A4D8               	btfss	status,2,c
  6840  004AE2  EF75  F025         	goto	u8981
  6841  004AE6  EF77  F025         	goto	u8980
  6842  004AEA                     u8981:
  6843  004AEA  EF99  F025         	goto	l8471
  6844  004AEE                     u8980:
  6845  004AEE  C01E  F018         	movff	___fpclassifyf@u,??___fpclassifyf
  6846  004AF2  C01F  F019         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6847  004AF6  C020  F01A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6848  004AFA  C021  F01B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6849  004AFE  0E09               	movlw	9
  6850  004B00                     u8995:
  6851  004B00  90D8               	bcf	status,0,c
  6852  004B02  3618               	rlcf	??___fpclassifyf^0,f,c
  6853  004B04  3619               	rlcf	(??___fpclassifyf+1)^0,f,c
  6854  004B06  361A               	rlcf	(??___fpclassifyf+2)^0,f,c
  6855  004B08  361B               	rlcf	(??___fpclassifyf+3)^0,f,c
  6856  004B0A  2EE8               	decfsz	wreg,f,c
  6857  004B0C  EF80  F025         	goto	u8995
  6858  004B10  5018               	movf	??___fpclassifyf^0,w,c
  6859  004B12  1019               	iorwf	(??___fpclassifyf+1)^0,w,c
  6860  004B14  101A               	iorwf	(??___fpclassifyf+2)^0,w,c
  6861  004B16  101B               	iorwf	(??___fpclassifyf+3)^0,w,c
  6862  004B18  B4D8               	btfsc	status,2,c
  6863  004B1A  EF91  F025         	goto	u9001
  6864  004B1E  EF94  F025         	goto	u9000
  6865  004B22                     u9001:
  6866  004B22  0E01               	movlw	1
  6867  004B24  EF95  F025         	goto	u9010
  6868  004B28                     u9000:
  6869  004B28  0E00               	movlw	0
  6870  004B2A                     u9010:
  6871  004B2A  6E14               	movwf	?___fpclassifyf^0,c
  6872  004B2C  6A15               	clrf	(?___fpclassifyf+1)^0,c
  6873  004B2E  EF9D  F025         	goto	l2294
  6874  004B32                     l8471:
  6875  004B32  0E00               	movlw	0
  6876  004B34  6E15               	movwf	(?___fpclassifyf+1)^0,c
  6877  004B36  0E04               	movlw	4
  6878  004B38  6E14               	movwf	?___fpclassifyf^0,c
  6879  004B3A                     l2294:
  6880  004B3A  0012               	return		;funcret
  6881  004B3C                     __end_of___fpclassifyf:
  6882                           	callstack 0
  6883                           
  6884 ;; *************** function ___flsub *****************
  6885 ;; Defined at:
  6886 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  6887 ;; Parameters:    Size  Location     Type
  6888 ;;  b               4   25[BANK0 ] int 
  6889 ;;  a               4   29[BANK0 ] int 
  6890 ;; Auto vars:     Size  Location     Type
  6891 ;;		None
  6892 ;; Return value:  Size  Location     Type
  6893 ;;                  4   25[BANK0 ] int 
  6894 ;; Registers used:
  6895 ;;		wreg, status,2, status,0, cstack
  6896 ;; Tracked objects:
  6897 ;;		On entry : 0/0
  6898 ;;		On exit  : 0/0
  6899 ;;		Unchanged: 0/0
  6900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6901 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6904 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6905 ;;Total ram usage:        8 bytes
  6906 ;; Hardware stack levels used: 1
  6907 ;; Hardware stack levels required when called: 9
  6908 ;; This function calls:
  6909 ;;		___fladd
  6910 ;; This function is called by:
  6911 ;;		_efgtoa
  6912 ;; This function uses a non-reentrant model
  6913 ;;
  6914                           
  6915                           	psect	text19
  6916  005AEE                     __ptext19:
  6917                           	callstack 0
  6918  005AEE                     ___flsub:
  6919                           	callstack 15
  6920  005AEE  0E00               	movlw	0
  6921  005AF0  0100               	movlb	0	; () banked
  6922  005AF2  1B7D               	xorwf	___flsub@a& (0+255),f,b
  6923  005AF4  0E00               	movlw	0
  6924  005AF6  1B7E               	xorwf	(___flsub@a+1)& (0+255),f,b
  6925  005AF8  0E00               	movlw	0
  6926  005AFA  1B7F               	xorwf	(___flsub@a+2)& (0+255),f,b
  6927  005AFC  0E80               	movlw	128
  6928  005AFE  1B80               	xorwf	(___flsub@a+3)& (0+255),f,b
  6929  005B00                     
  6930                           ; BSR set to: 0
  6931  005B00  C079  F06D         	movff	___flsub@b,___fladd@b
  6932  005B04  C07A  F06E         	movff	___flsub@b+1,___fladd@b+1
  6933  005B08  C07B  F06F         	movff	___flsub@b+2,___fladd@b+2
  6934  005B0C  C07C  F070         	movff	___flsub@b+3,___fladd@b+3
  6935  005B10  C07D  F071         	movff	___flsub@a,___fladd@a
  6936  005B14  C07E  F072         	movff	___flsub@a+1,___fladd@a+1
  6937  005B18  C07F  F073         	movff	___flsub@a+2,___fladd@a+2
  6938  005B1C  C080  F074         	movff	___flsub@a+3,___fladd@a+3
  6939  005B20  ECA0  F011         	call	___fladd	;wreg free
  6940  005B24  C06D  F079         	movff	?___fladd,?___flsub
  6941  005B28  C06E  F07A         	movff	?___fladd+1,?___flsub+1
  6942  005B2C  C06F  F07B         	movff	?___fladd+2,?___flsub+2
  6943  005B30  C070  F07C         	movff	?___fladd+3,?___flsub+3
  6944  005B34  0012               	return		;funcret
  6945  005B36                     __end_of___flsub:
  6946                           	callstack 0
  6947                           
  6948 ;; *************** function ___flneg *****************
  6949 ;; Defined at:
  6950 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  6951 ;; Parameters:    Size  Location     Type
  6952 ;;  f1              4   19[COMRAM] int 
  6953 ;; Auto vars:     Size  Location     Type
  6954 ;;		None
  6955 ;; Return value:  Size  Location     Type
  6956 ;;                  4   19[COMRAM] int 
  6957 ;; Registers used:
  6958 ;;		wreg, status,2, status,0
  6959 ;; Tracked objects:
  6960 ;;		On entry : 0/0
  6961 ;;		On exit  : 0/0
  6962 ;;		Unchanged: 0/0
  6963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6964 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6967 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6968 ;;Total ram usage:        4 bytes
  6969 ;; Hardware stack levels used: 1
  6970 ;; Hardware stack levels required when called: 8
  6971 ;; This function calls:
  6972 ;;		Nothing
  6973 ;; This function is called by:
  6974 ;;		_efgtoa
  6975 ;; This function uses a non-reentrant model
  6976 ;;
  6977                           
  6978                           	psect	text20
  6979  005D26                     __ptext20:
  6980                           	callstack 0
  6981  005D26                     ___flneg:
  6982                           	callstack 16
  6983  005D26  5014               	movf	___flneg@f1^0,w,c
  6984  005D28  1015               	iorwf	(___flneg@f1+1)^0,w,c
  6985  005D2A  1016               	iorwf	(___flneg@f1+2)^0,w,c
  6986  005D2C  1017               	iorwf	(___flneg@f1+3)^0,w,c
  6987  005D2E  B4D8               	btfsc	status,2,c
  6988  005D30  EF9C  F02E         	goto	u8751
  6989  005D34  EF9E  F02E         	goto	u8750
  6990  005D38                     u8751:
  6991  005D38  EFA6  F02E         	goto	l8341
  6992  005D3C                     u8750:
  6993  005D3C  0E00               	movlw	0
  6994  005D3E  1A14               	xorwf	___flneg@f1^0,f,c
  6995  005D40  0E00               	movlw	0
  6996  005D42  1A15               	xorwf	(___flneg@f1+1)^0,f,c
  6997  005D44  0E00               	movlw	0
  6998  005D46  1A16               	xorwf	(___flneg@f1+2)^0,f,c
  6999  005D48  0E80               	movlw	128
  7000  005D4A  1A17               	xorwf	(___flneg@f1+3)^0,f,c
  7001  005D4C                     l8341:
  7002  005D4C  C014  F014         	movff	___flneg@f1,?___flneg
  7003  005D50  C015  F015         	movff	___flneg@f1+1,?___flneg+1
  7004  005D54  C016  F016         	movff	___flneg@f1+2,?___flneg+2
  7005  005D58  C017  F017         	movff	___flneg@f1+3,?___flneg+3
  7006  005D5C  0012               	return		;funcret
  7007  005D5E                     __end_of___flneg:
  7008                           	callstack 0
  7009                           
  7010 ;; *************** function ___fleq *****************
  7011 ;; Defined at:
  7012 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
  7013 ;; Parameters:    Size  Location     Type
  7014 ;;  ff1             4   19[COMRAM] int 
  7015 ;;  ff2             4   23[COMRAM] int 
  7016 ;; Auto vars:     Size  Location     Type
  7017 ;;		None
  7018 ;; Return value:  Size  Location     Type
  7019 ;;		None               void
  7020 ;; Registers used:
  7021 ;;		wreg, status,2, status,0
  7022 ;; Tracked objects:
  7023 ;;		On entry : 0/0
  7024 ;;		On exit  : 0/0
  7025 ;;		Unchanged: 0/0
  7026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7027 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7029 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7030 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7031 ;;Total ram usage:       12 bytes
  7032 ;; Hardware stack levels used: 1
  7033 ;; Hardware stack levels required when called: 8
  7034 ;; This function calls:
  7035 ;;		Nothing
  7036 ;; This function is called by:
  7037 ;;		_efgtoa
  7038 ;; This function uses a non-reentrant model
  7039 ;;
  7040                           
  7041                           	psect	text21
  7042  00535E                     __ptext21:
  7043                           	callstack 0
  7044  00535E                     ___fleq:
  7045                           	callstack 16
  7046  00535E  0E00               	movlw	0
  7047  005360  1414               	andwf	___fleq@ff1^0,w,c
  7048  005362  6E1C               	movwf	??___fleq^0,c
  7049  005364  0E00               	movlw	0
  7050  005366  1415               	andwf	(___fleq@ff1+1)^0,w,c
  7051  005368  6E1D               	movwf	(??___fleq+1)^0,c
  7052  00536A  0E80               	movlw	128
  7053  00536C  1416               	andwf	(___fleq@ff1+2)^0,w,c
  7054  00536E  6E1E               	movwf	(??___fleq+2)^0,c
  7055  005370  0E7F               	movlw	127
  7056  005372  1417               	andwf	(___fleq@ff1+3)^0,w,c
  7057  005374  6E1F               	movwf	(??___fleq+3)^0,c
  7058  005376  501C               	movf	??___fleq^0,w,c
  7059  005378  101D               	iorwf	(??___fleq+1)^0,w,c
  7060  00537A  101E               	iorwf	(??___fleq+2)^0,w,c
  7061  00537C  101F               	iorwf	(??___fleq+3)^0,w,c
  7062  00537E  A4D8               	btfss	status,2,c
  7063  005380  EFC4  F029         	goto	u8671
  7064  005384  EFC6  F029         	goto	u8670
  7065  005388                     u8671:
  7066  005388  EFCE  F029         	goto	l8303
  7067  00538C                     u8670:
  7068  00538C  0E00               	movlw	0
  7069  00538E  6E14               	movwf	___fleq@ff1^0,c
  7070  005390  0E00               	movlw	0
  7071  005392  6E15               	movwf	(___fleq@ff1+1)^0,c
  7072  005394  0E00               	movlw	0
  7073  005396  6E16               	movwf	(___fleq@ff1+2)^0,c
  7074  005398  0E00               	movlw	0
  7075  00539A  6E17               	movwf	(___fleq@ff1+3)^0,c
  7076  00539C                     l8303:
  7077  00539C  0E00               	movlw	0
  7078  00539E  1418               	andwf	___fleq@ff2^0,w,c
  7079  0053A0  6E1C               	movwf	??___fleq^0,c
  7080  0053A2  0E00               	movlw	0
  7081  0053A4  1419               	andwf	(___fleq@ff2+1)^0,w,c
  7082  0053A6  6E1D               	movwf	(??___fleq+1)^0,c
  7083  0053A8  0E80               	movlw	128
  7084  0053AA  141A               	andwf	(___fleq@ff2+2)^0,w,c
  7085  0053AC  6E1E               	movwf	(??___fleq+2)^0,c
  7086  0053AE  0E7F               	movlw	127
  7087  0053B0  141B               	andwf	(___fleq@ff2+3)^0,w,c
  7088  0053B2  6E1F               	movwf	(??___fleq+3)^0,c
  7089  0053B4  501C               	movf	??___fleq^0,w,c
  7090  0053B6  101D               	iorwf	(??___fleq+1)^0,w,c
  7091  0053B8  101E               	iorwf	(??___fleq+2)^0,w,c
  7092  0053BA  101F               	iorwf	(??___fleq+3)^0,w,c
  7093  0053BC  A4D8               	btfss	status,2,c
  7094  0053BE  EFE3  F029         	goto	u8681
  7095  0053C2  EFE5  F029         	goto	u8680
  7096  0053C6                     u8681:
  7097  0053C6  EFED  F029         	goto	l8307
  7098  0053CA                     u8680:
  7099  0053CA  0E00               	movlw	0
  7100  0053CC  6E18               	movwf	___fleq@ff2^0,c
  7101  0053CE  0E00               	movlw	0
  7102  0053D0  6E19               	movwf	(___fleq@ff2+1)^0,c
  7103  0053D2  0E00               	movlw	0
  7104  0053D4  6E1A               	movwf	(___fleq@ff2+2)^0,c
  7105  0053D6  0E00               	movlw	0
  7106  0053D8  6E1B               	movwf	(___fleq@ff2+3)^0,c
  7107  0053DA                     l8307:
  7108  0053DA  5018               	movf	___fleq@ff2^0,w,c
  7109  0053DC  1814               	xorwf	___fleq@ff1^0,w,c
  7110  0053DE  E10F               	bnz	u8690
  7111  0053E0  5019               	movf	(___fleq@ff2+1)^0,w,c
  7112  0053E2  1815               	xorwf	(___fleq@ff1+1)^0,w,c
  7113  0053E4  E10C               	bnz	u8690
  7114  0053E6  501A               	movf	(___fleq@ff2+2)^0,w,c
  7115  0053E8  1816               	xorwf	(___fleq@ff1+2)^0,w,c
  7116  0053EA  E109               	bnz	u8690
  7117  0053EC  501B               	movf	(___fleq@ff2+3)^0,w,c
  7118  0053EE  1817               	xorwf	(___fleq@ff1+3)^0,w,c
  7119  0053F0  B4D8               	btfsc	status,2,c
  7120  0053F2  EFFD  F029         	goto	u8691
  7121  0053F6  EFFF  F029         	goto	u8690
  7122  0053FA                     u8691:
  7123  0053FA  EF02  F02A         	goto	l8311
  7124  0053FE                     u8690:
  7125  0053FE  90D8               	bcf	status,0,c
  7126  005400  EF03  F02A         	goto	l1662
  7127  005404                     l8311:
  7128  005404  80D8               	bsf	status,0,c
  7129  005406                     l1662:
  7130  005406  0012               	return		;funcret
  7131  005408                     __end_of___fleq:
  7132                           	callstack 0
  7133                           
  7134 ;; *************** function ___awmod *****************
  7135 ;; Defined at:
  7136 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  7137 ;; Parameters:    Size  Location     Type
  7138 ;;  dividend        2   19[COMRAM] int 
  7139 ;;  divisor         2   21[COMRAM] int 
  7140 ;; Auto vars:     Size  Location     Type
  7141 ;;  sign            1   24[COMRAM] unsigned char 
  7142 ;;  counter         1   23[COMRAM] unsigned char 
  7143 ;; Return value:  Size  Location     Type
  7144 ;;                  2   19[COMRAM] int 
  7145 ;; Registers used:
  7146 ;;		wreg, status,2, status,0
  7147 ;; Tracked objects:
  7148 ;;		On entry : 0/0
  7149 ;;		On exit  : 0/0
  7150 ;;		Unchanged: 0/0
  7151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7152 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7153 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7155 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7156 ;;Total ram usage:        6 bytes
  7157 ;; Hardware stack levels used: 1
  7158 ;; Hardware stack levels required when called: 8
  7159 ;; This function calls:
  7160 ;;		Nothing
  7161 ;; This function is called by:
  7162 ;;		_efgtoa
  7163 ;; This function uses a non-reentrant model
  7164 ;;
  7165                           
  7166                           	psect	text22
  7167  0052AE                     __ptext22:
  7168                           	callstack 0
  7169  0052AE                     ___awmod:
  7170                           	callstack 16
  7171  0052AE  0E00               	movlw	0
  7172  0052B0  6E19               	movwf	___awmod@sign^0,c
  7173  0052B2  BE15               	btfsc	(___awmod@dividend+1)^0,7,c
  7174  0052B4  EF60  F029         	goto	u8610
  7175  0052B8  EF5E  F029         	goto	u8611
  7176  0052BC                     u8611:
  7177  0052BC  EF66  F029         	goto	l8271
  7178  0052C0                     u8610:
  7179  0052C0  6C14               	negf	___awmod@dividend^0,c
  7180  0052C2  1E15               	comf	(___awmod@dividend+1)^0,f,c
  7181  0052C4  B0D8               	btfsc	status,0,c
  7182  0052C6  2A15               	incf	(___awmod@dividend+1)^0,f,c
  7183  0052C8  0E01               	movlw	1
  7184  0052CA  6E19               	movwf	___awmod@sign^0,c
  7185  0052CC                     l8271:
  7186  0052CC  BE17               	btfsc	(___awmod@divisor+1)^0,7,c
  7187  0052CE  EF6D  F029         	goto	u8620
  7188  0052D2  EF6B  F029         	goto	u8621
  7189  0052D6                     u8621:
  7190  0052D6  EF71  F029         	goto	l8275
  7191  0052DA                     u8620:
  7192  0052DA  6C16               	negf	___awmod@divisor^0,c
  7193  0052DC  1E17               	comf	(___awmod@divisor+1)^0,f,c
  7194  0052DE  B0D8               	btfsc	status,0,c
  7195  0052E0  2A17               	incf	(___awmod@divisor+1)^0,f,c
  7196  0052E2                     l8275:
  7197  0052E2  5016               	movf	___awmod@divisor^0,w,c
  7198  0052E4  1017               	iorwf	(___awmod@divisor+1)^0,w,c
  7199  0052E6  B4D8               	btfsc	status,2,c
  7200  0052E8  EF78  F029         	goto	u8631
  7201  0052EC  EF7A  F029         	goto	u8630
  7202  0052F0                     u8631:
  7203  0052F0  EF9E  F029         	goto	l8291
  7204  0052F4                     u8630:
  7205  0052F4  0E01               	movlw	1
  7206  0052F6  6E18               	movwf	___awmod@counter^0,c
  7207  0052F8  EF82  F029         	goto	l8281
  7208  0052FC                     l8279:
  7209  0052FC  90D8               	bcf	status,0,c
  7210  0052FE  3616               	rlcf	___awmod@divisor^0,f,c
  7211  005300  3617               	rlcf	(___awmod@divisor+1)^0,f,c
  7212  005302  2A18               	incf	___awmod@counter^0,f,c
  7213  005304                     l8281:
  7214  005304  AE17               	btfss	(___awmod@divisor+1)^0,7,c
  7215  005306  EF87  F029         	goto	u8641
  7216  00530A  EF89  F029         	goto	u8640
  7217  00530E                     u8641:
  7218  00530E  EF7E  F029         	goto	l8279
  7219  005312                     u8640:
  7220  005312                     l8283:
  7221  005312  5016               	movf	___awmod@divisor^0,w,c
  7222  005314  5C14               	subwf	___awmod@dividend^0,w,c
  7223  005316  5017               	movf	(___awmod@divisor+1)^0,w,c
  7224  005318  5815               	subwfb	(___awmod@dividend+1)^0,w,c
  7225  00531A  A0D8               	btfss	status,0,c
  7226  00531C  EF92  F029         	goto	u8651
  7227  005320  EF94  F029         	goto	u8650
  7228  005324                     u8651:
  7229  005324  EF98  F029         	goto	l8287
  7230  005328                     u8650:
  7231  005328  5016               	movf	___awmod@divisor^0,w,c
  7232  00532A  5E14               	subwf	___awmod@dividend^0,f,c
  7233  00532C  5017               	movf	(___awmod@divisor+1)^0,w,c
  7234  00532E  5A15               	subwfb	(___awmod@dividend+1)^0,f,c
  7235  005330                     l8287:
  7236  005330  90D8               	bcf	status,0,c
  7237  005332  3217               	rrcf	(___awmod@divisor+1)^0,f,c
  7238  005334  3216               	rrcf	___awmod@divisor^0,f,c
  7239  005336  2E18               	decfsz	___awmod@counter^0,f,c
  7240  005338  EF89  F029         	goto	l8283
  7241  00533C                     l8291:
  7242  00533C  5019               	movf	___awmod@sign^0,w,c
  7243  00533E  B4D8               	btfsc	status,2,c
  7244  005340  EFA4  F029         	goto	u8661
  7245  005344  EFA6  F029         	goto	u8660
  7246  005348                     u8661:
  7247  005348  EFAA  F029         	goto	l8295
  7248  00534C                     u8660:
  7249  00534C  6C14               	negf	___awmod@dividend^0,c
  7250  00534E  1E15               	comf	(___awmod@dividend+1)^0,f,c
  7251  005350  B0D8               	btfsc	status,0,c
  7252  005352  2A15               	incf	(___awmod@dividend+1)^0,f,c
  7253  005354                     l8295:
  7254  005354  C014  F014         	movff	___awmod@dividend,?___awmod
  7255  005358  C015  F015         	movff	___awmod@dividend+1,?___awmod+1
  7256  00535C  0012               	return		;funcret
  7257  00535E                     __end_of___awmod:
  7258                           	callstack 0
  7259                           
  7260 ;; *************** function _dtoa *****************
  7261 ;; Defined at:
  7262 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  7263 ;; Parameters:    Size  Location     Type
  7264 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  7265 ;;		 -> NULL(0), 
  7266 ;;  d               8    2[BANK0 ] long long 
  7267 ;; Auto vars:     Size  Location     Type
  7268 ;;  n               8   18[BANK0 ] long long 
  7269 ;;  i               2   26[BANK0 ] int 
  7270 ;;  s               2   16[BANK0 ] int 
  7271 ;;  w               2   14[BANK0 ] int 
  7272 ;;  p               2   12[BANK0 ] int 
  7273 ;; Return value:  Size  Location     Type
  7274 ;;                  2    0[BANK0 ] int 
  7275 ;; Registers used:
  7276 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7277 ;; Tracked objects:
  7278 ;;		On entry : 0/0
  7279 ;;		On exit  : 0/0
  7280 ;;		Unchanged: 0/0
  7281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7282 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7283 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7284 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7285 ;;      Totals:         8      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7286 ;;Total ram usage:       36 bytes
  7287 ;; Hardware stack levels used: 1
  7288 ;; Hardware stack levels required when called: 13
  7289 ;; This function calls:
  7290 ;;		___aodiv
  7291 ;;		___aomod
  7292 ;;		_abs
  7293 ;;		_pad
  7294 ;; This function is called by:
  7295 ;;		_vfpfcnvrt
  7296 ;; This function uses a non-reentrant model
  7297 ;;
  7298                           
  7299                           	psect	text23
  7300  002FEE                     __ptext23:
  7301                           	callstack 0
  7302  002FEE                     _dtoa:
  7303                           	callstack 12
  7304  002FEE                     
  7305                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  7306  002FEE  C062  F072         	movff	dtoa@d,dtoa@n
  7307  002FF2  C063  F073         	movff	dtoa@d+1,dtoa@n+1
  7308  002FF6  C064  F074         	movff	dtoa@d+2,dtoa@n+2
  7309  002FFA  C065  F075         	movff	dtoa@d+3,dtoa@n+3
  7310  002FFE  C066  F076         	movff	dtoa@d+4,dtoa@n+4
  7311  003002  C067  F077         	movff	dtoa@d+5,dtoa@n+5
  7312  003006  C068  F078         	movff	dtoa@d+6,dtoa@n+6
  7313  00300A  C069  F079         	movff	dtoa@d+7,dtoa@n+7
  7314  00300E                     
  7315                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  7316  00300E  0100               	movlb	0	; () banked
  7317  003010  BF79               	btfsc	(dtoa@n+7)& (0+255),7,b
  7318  003012  EF0D  F018         	goto	u9171
  7319  003016  EF10  F018         	goto	u9170
  7320  00301A                     u9171:
  7321  00301A  0E01               	movlw	1
  7322  00301C  EF11  F018         	goto	u9180
  7323  003020                     u9170:
  7324  003020  0E00               	movlw	0
  7325  003022                     u9180:
  7326  003022  6F70               	movwf	dtoa@s& (0+255),b
  7327  003024  6B71               	clrf	(dtoa@s+1)& (0+255),b
  7328                           
  7329                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  7330  003026  5170               	movf	dtoa@s& (0+255),w,b
  7331  003028  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  7332  00302A  B4D8               	btfsc	status,2,c
  7333  00302C  EF1A  F018         	goto	u9191
  7334  003030  EF1C  F018         	goto	u9190
  7335  003034                     u9191:
  7336  003034  EF2C  F018         	goto	l8523
  7337  003038                     u9190:
  7338  003038                     
  7339                           ; BSR set to: 0
  7340                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  7341  003038  1F79               	comf	(dtoa@n+7)& (0+255),f,b
  7342  00303A  1F78               	comf	(dtoa@n+6)& (0+255),f,b
  7343  00303C  1F77               	comf	(dtoa@n+5)& (0+255),f,b
  7344  00303E  1F76               	comf	(dtoa@n+4)& (0+255),f,b
  7345  003040  1F75               	comf	(dtoa@n+3)& (0+255),f,b
  7346  003042  1F74               	comf	(dtoa@n+2)& (0+255),f,b
  7347  003044  1F73               	comf	(dtoa@n+1)& (0+255),f,b
  7348  003046  6D72               	negf	dtoa@n& (0+255),b
  7349  003048  0E00               	movlw	0
  7350  00304A  2373               	addwfc	(dtoa@n+1)& (0+255),f,b
  7351  00304C  2374               	addwfc	(dtoa@n+2)& (0+255),f,b
  7352  00304E  2375               	addwfc	(dtoa@n+3)& (0+255),f,b
  7353  003050  2376               	addwfc	(dtoa@n+4)& (0+255),f,b
  7354  003052  2377               	addwfc	(dtoa@n+5)& (0+255),f,b
  7355  003054  2378               	addwfc	(dtoa@n+6)& (0+255),f,b
  7356  003056  2379               	addwfc	(dtoa@n+7)& (0+255),f,b
  7357  003058                     l8523:
  7358                           
  7359                           ; BSR set to: 0
  7360                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  7361  003058  BE3D               	btfsc	(_prec+1)^0,7,c
  7362  00305A  EF31  F018         	goto	u9201
  7363  00305E  EF33  F018         	goto	u9200
  7364  003062                     u9201:
  7365  003062  EF34  F018         	goto	l8527
  7366  003066                     u9200:
  7367  003066                     
  7368                           ; BSR set to: 0
  7369                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  7370  003066  923E               	bcf	_flags^0,1,c
  7371  003068                     l8527:
  7372                           
  7373                           ; BSR set to: 0
  7374                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  7375  003068  BE3D               	btfsc	(_prec+1)^0,7,c
  7376  00306A  EF41  F018         	goto	u9210
  7377  00306E  503D               	movf	(_prec+1)^0,w,c
  7378  003070  E106               	bnz	u9211
  7379  003072  043C               	decf	_prec^0,w,c
  7380  003074  B0D8               	btfsc	status,0,c
  7381  003076  EF3F  F018         	goto	u9211
  7382  00307A  EF41  F018         	goto	u9210
  7383  00307E                     u9211:
  7384  00307E  EF47  F018         	goto	l2131
  7385  003082                     u9210:
  7386  003082                     
  7387                           ; BSR set to: 0
  7388  003082  0E00               	movlw	0
  7389  003084  6F6D               	movwf	(dtoa@p+1)& (0+255),b
  7390  003086  0E01               	movlw	1
  7391  003088  6F6C               	movwf	dtoa@p& (0+255),b
  7392  00308A  EF4B  F018         	goto	l2133
  7393  00308E                     l2131:
  7394                           
  7395                           ; BSR set to: 0
  7396  00308E  C03C  F06C         	movff	_prec,dtoa@p
  7397  003092  C03D  F06D         	movff	_prec+1,dtoa@p+1
  7398  003096                     l2133:
  7399                           
  7400                           ; BSR set to: 0
  7401                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  7402  003096  C03A  F06E         	movff	_width,dtoa@w
  7403  00309A  C03B  F06F         	movff	_width+1,dtoa@w+1
  7404  00309E                     
  7405                           ; BSR set to: 0
  7406                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  7407  00309E  5170               	movf	dtoa@s& (0+255),w,b
  7408  0030A0  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  7409  0030A2  A4D8               	btfss	status,2,c
  7410  0030A4  EF56  F018         	goto	u9221
  7411  0030A8  EF58  F018         	goto	u9220
  7412  0030AC                     u9221:
  7413  0030AC  EF5F  F018         	goto	l8535
  7414  0030B0                     u9220:
  7415  0030B0                     
  7416                           ; BSR set to: 0
  7417  0030B0  A43E               	btfss	_flags^0,2,c
  7418  0030B2  EF5D  F018         	goto	u9231
  7419  0030B6  EF5F  F018         	goto	u9230
  7420  0030BA                     u9231:
  7421  0030BA  EF62  F018         	goto	l8537
  7422  0030BE                     u9230:
  7423  0030BE                     l8535:
  7424                           
  7425                           ; BSR set to: 0
  7426                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  7427  0030BE  076E               	decf	dtoa@w& (0+255),f,b
  7428  0030C0  A0D8               	btfss	status,0,c
  7429  0030C2  076F               	decf	(dtoa@w+1)& (0+255),f,b
  7430  0030C4                     l8537:
  7431                           
  7432                           ; BSR set to: 0
  7433                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  7434  0030C4  0E00               	movlw	0
  7435  0030C6  6F7B               	movwf	(dtoa@i+1)& (0+255),b
  7436  0030C8  0E4F               	movlw	79
  7437  0030CA  6F7A               	movwf	dtoa@i& (0+255),b
  7438  0030CC                     
  7439                           ; BSR set to: 0
  7440                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  7441  0030CC  0E00               	movlw	0
  7442  0030CE  0101               	movlb	1	; () banked
  7443  0030D0  6F8F               	movwf	(_dbuf+79)& (0+255),b
  7444                           
  7445                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7446  0030D2  EFE8  F018         	goto	l8551
  7447  0030D6                     l8541:
  7448                           
  7449                           ; BSR set to: 0
  7450                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  7451  0030D6  077A               	decf	dtoa@i& (0+255),f,b
  7452  0030D8  A0D8               	btfss	status,0,c
  7453  0030DA  077B               	decf	(dtoa@i+1)& (0+255),f,b
  7454  0030DC                     
  7455                           ; BSR set to: 0
  7456                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  7457  0030DC  0E40               	movlw	low _dbuf
  7458  0030DE  257A               	addwf	dtoa@i& (0+255),w,b
  7459  0030E0  6ED9               	movwf	fsr2l,c
  7460  0030E2  0E01               	movlw	high _dbuf
  7461  0030E4  217B               	addwfc	(dtoa@i+1)& (0+255),w,b
  7462  0030E6  6EDA               	movwf	fsr2h,c
  7463  0030E8  C072  F014         	movff	dtoa@n,___aomod@dividend
  7464  0030EC  C073  F015         	movff	dtoa@n+1,___aomod@dividend+1
  7465  0030F0  C074  F016         	movff	dtoa@n+2,___aomod@dividend+2
  7466  0030F4  C075  F017         	movff	dtoa@n+3,___aomod@dividend+3
  7467  0030F8  C076  F018         	movff	dtoa@n+4,___aomod@dividend+4
  7468  0030FC  C077  F019         	movff	dtoa@n+5,___aomod@dividend+5
  7469  003100  C078  F01A         	movff	dtoa@n+6,___aomod@dividend+6
  7470  003104  C079  F01B         	movff	dtoa@n+7,___aomod@dividend+7
  7471  003108  0E0A               	movlw	10
  7472  00310A  6E1C               	movwf	___aomod@divisor^0,c
  7473  00310C  0E00               	movlw	0
  7474  00310E  6E1D               	movwf	(___aomod@divisor+1)^0,c
  7475  003110  0E00               	movlw	0
  7476  003112  6E1E               	movwf	(___aomod@divisor+2)^0,c
  7477  003114  0E00               	movlw	0
  7478  003116  6E1F               	movwf	(___aomod@divisor+3)^0,c
  7479  003118  0E00               	movlw	0
  7480  00311A  6E20               	movwf	(___aomod@divisor+4)^0,c
  7481  00311C  0E00               	movlw	0
  7482  00311E  6E21               	movwf	(___aomod@divisor+5)^0,c
  7483  003120  0E00               	movlw	0
  7484  003122  6E22               	movwf	(___aomod@divisor+6)^0,c
  7485  003124  0E00               	movlw	0
  7486  003126  6E23               	movwf	(___aomod@divisor+7)^0,c
  7487  003128  EC00  F021         	call	___aomod	;wreg free
  7488  00312C  C014  F031         	movff	?___aomod,??_dtoa
  7489  003130  C015  F032         	movff	?___aomod+1,??_dtoa+1
  7490  003134  C016  F033         	movff	?___aomod+2,??_dtoa+2
  7491  003138  C017  F034         	movff	?___aomod+3,??_dtoa+3
  7492  00313C  C018  F035         	movff	?___aomod+4,??_dtoa+4
  7493  003140  C019  F036         	movff	?___aomod+5,??_dtoa+5
  7494  003144  C01A  F037         	movff	?___aomod+6,??_dtoa+6
  7495  003148  C01B  F038         	movff	?___aomod+7,??_dtoa+7
  7496  00314C  C031  F026         	movff	??_dtoa,abs@a
  7497  003150  C033  F027         	movff	??_dtoa+2,abs@a+1
  7498  003154  ECDF  F02D         	call	_abs	;wreg free
  7499  003158  5026               	movf	?_abs^0,w,c
  7500  00315A  0F30               	addlw	48
  7501  00315C  6EDF               	movwf	indf2,c
  7502  00315E                     
  7503                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  7504  00315E  0100               	movlb	0	; () banked
  7505  003160  076C               	decf	dtoa@p& (0+255),f,b
  7506  003162  A0D8               	btfss	status,0,c
  7507  003164  076D               	decf	(dtoa@p+1)& (0+255),f,b
  7508  003166                     
  7509                           ; BSR set to: 0
  7510                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  7511  003166  076E               	decf	dtoa@w& (0+255),f,b
  7512  003168  A0D8               	btfss	status,0,c
  7513  00316A  076F               	decf	(dtoa@w+1)& (0+255),f,b
  7514  00316C                     
  7515                           ; BSR set to: 0
  7516                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  7517  00316C  C072  F014         	movff	dtoa@n,___aodiv@dividend
  7518  003170  C073  F015         	movff	dtoa@n+1,___aodiv@dividend+1
  7519  003174  C074  F016         	movff	dtoa@n+2,___aodiv@dividend+2
  7520  003178  C075  F017         	movff	dtoa@n+3,___aodiv@dividend+3
  7521  00317C  C076  F018         	movff	dtoa@n+4,___aodiv@dividend+4
  7522  003180  C077  F019         	movff	dtoa@n+5,___aodiv@dividend+5
  7523  003184  C078  F01A         	movff	dtoa@n+6,___aodiv@dividend+6
  7524  003188  C079  F01B         	movff	dtoa@n+7,___aodiv@dividend+7
  7525  00318C  0E0A               	movlw	10
  7526  00318E  6E1C               	movwf	___aodiv@divisor^0,c
  7527  003190  0E00               	movlw	0
  7528  003192  6E1D               	movwf	(___aodiv@divisor+1)^0,c
  7529  003194  0E00               	movlw	0
  7530  003196  6E1E               	movwf	(___aodiv@divisor+2)^0,c
  7531  003198  0E00               	movlw	0
  7532  00319A  6E1F               	movwf	(___aodiv@divisor+3)^0,c
  7533  00319C  0E00               	movlw	0
  7534  00319E  6E20               	movwf	(___aodiv@divisor+4)^0,c
  7535  0031A0  0E00               	movlw	0
  7536  0031A2  6E21               	movwf	(___aodiv@divisor+5)^0,c
  7537  0031A4  0E00               	movlw	0
  7538  0031A6  6E22               	movwf	(___aodiv@divisor+6)^0,c
  7539  0031A8  0E00               	movlw	0
  7540  0031AA  6E23               	movwf	(___aodiv@divisor+7)^0,c
  7541  0031AC  EC3C  F020         	call	___aodiv	;wreg free
  7542  0031B0  C014  F072         	movff	?___aodiv,dtoa@n
  7543  0031B4  C015  F073         	movff	?___aodiv+1,dtoa@n+1
  7544  0031B8  C016  F074         	movff	?___aodiv+2,dtoa@n+2
  7545  0031BC  C017  F075         	movff	?___aodiv+3,dtoa@n+3
  7546  0031C0  C018  F076         	movff	?___aodiv+4,dtoa@n+4
  7547  0031C4  C019  F077         	movff	?___aodiv+5,dtoa@n+5
  7548  0031C8  C01A  F078         	movff	?___aodiv+6,dtoa@n+6
  7549  0031CC  C01B  F079         	movff	?___aodiv+7,dtoa@n+7
  7550  0031D0                     l8551:
  7551                           
  7552                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7553  0031D0  0100               	movlb	0	; () banked
  7554  0031D2  BF7B               	btfsc	(dtoa@i+1)& (0+255),7,b
  7555  0031D4  EFF4  F018         	goto	u9241
  7556  0031D8  517B               	movf	(dtoa@i+1)& (0+255),w,b
  7557  0031DA  E108               	bnz	u9240
  7558  0031DC  057A               	decf	dtoa@i& (0+255),w,b
  7559  0031DE  A0D8               	btfss	status,0,c
  7560  0031E0  EFF4  F018         	goto	u9241
  7561  0031E4  EFF6  F018         	goto	u9240
  7562  0031E8                     u9241:
  7563  0031E8  EF26  F019         	goto	l8561
  7564  0031EC                     u9240:
  7565  0031EC                     
  7566                           ; BSR set to: 0
  7567  0031EC  5172               	movf	dtoa@n& (0+255),w,b
  7568  0031EE  1173               	iorwf	(dtoa@n+1)& (0+255),w,b
  7569  0031F0  1174               	iorwf	(dtoa@n+2)& (0+255),w,b
  7570  0031F2  1175               	iorwf	(dtoa@n+3)& (0+255),w,b
  7571  0031F4  1176               	iorwf	(dtoa@n+4)& (0+255),w,b
  7572  0031F6  1177               	iorwf	(dtoa@n+5)& (0+255),w,b
  7573  0031F8  1178               	iorwf	(dtoa@n+6)& (0+255),w,b
  7574  0031FA  1179               	iorwf	(dtoa@n+7)& (0+255),w,b
  7575  0031FC  A4D8               	btfss	status,2,c
  7576  0031FE  EF03  F019         	goto	u9251
  7577  003202  EF05  F019         	goto	u9250
  7578  003206                     u9251:
  7579  003206  EF6B  F018         	goto	l8541
  7580  00320A                     u9250:
  7581  00320A                     
  7582                           ; BSR set to: 0
  7583  00320A  BF6D               	btfsc	(dtoa@p+1)& (0+255),7,b
  7584  00320C  EF12  F019         	goto	u9260
  7585  003210  516D               	movf	(dtoa@p+1)& (0+255),w,b
  7586  003212  E106               	bnz	u9261
  7587  003214  056C               	decf	dtoa@p& (0+255),w,b
  7588  003216  B0D8               	btfsc	status,0,c
  7589  003218  EF10  F019         	goto	u9261
  7590  00321C  EF12  F019         	goto	u9260
  7591  003220                     u9261:
  7592  003220  EF6B  F018         	goto	l8541
  7593  003224                     u9260:
  7594  003224                     
  7595                           ; BSR set to: 0
  7596  003224  BF6F               	btfsc	(dtoa@w+1)& (0+255),7,b
  7597  003226  EF1D  F019         	goto	u9271
  7598  00322A  516F               	movf	(dtoa@w+1)& (0+255),w,b
  7599  00322C  E108               	bnz	u9270
  7600  00322E  056E               	decf	dtoa@w& (0+255),w,b
  7601  003230  A0D8               	btfss	status,0,c
  7602  003232  EF1D  F019         	goto	u9271
  7603  003236  EF1F  F019         	goto	u9270
  7604  00323A                     u9271:
  7605  00323A  EF26  F019         	goto	l8561
  7606  00323E                     u9270:
  7607  00323E                     
  7608                           ; BSR set to: 0
  7609  00323E  B23E               	btfsc	_flags^0,1,c
  7610  003240  EF24  F019         	goto	u9281
  7611  003244  EF26  F019         	goto	u9280
  7612  003248                     u9281:
  7613  003248  EF6B  F018         	goto	l8541
  7614  00324C                     u9280:
  7615  00324C                     l8561:
  7616                           
  7617                           ; BSR set to: 0
  7618                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  7619  00324C  5170               	movf	dtoa@s& (0+255),w,b
  7620  00324E  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  7621  003250  A4D8               	btfss	status,2,c
  7622  003252  EF2D  F019         	goto	u9291
  7623  003256  EF2F  F019         	goto	u9290
  7624  00325A                     u9291:
  7625  00325A  EF36  F019         	goto	l8565
  7626  00325E                     u9290:
  7627  00325E                     
  7628                           ; BSR set to: 0
  7629  00325E  A43E               	btfss	_flags^0,2,c
  7630  003260  EF34  F019         	goto	u9301
  7631  003264  EF36  F019         	goto	u9300
  7632  003268                     u9301:
  7633  003268  EF55  F019         	goto	l8575
  7634  00326C                     u9300:
  7635  00326C                     l8565:
  7636                           
  7637                           ; BSR set to: 0
  7638                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  7639  00326C  077A               	decf	dtoa@i& (0+255),f,b
  7640  00326E  A0D8               	btfss	status,0,c
  7641  003270  077B               	decf	(dtoa@i+1)& (0+255),f,b
  7642  003272                     
  7643                           ; BSR set to: 0
  7644                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  7645  003272  5170               	movf	dtoa@s& (0+255),w,b
  7646  003274  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  7647  003276  A4D8               	btfss	status,2,c
  7648  003278  EF40  F019         	goto	u9311
  7649  00327C  EF42  F019         	goto	u9310
  7650  003280                     u9311:
  7651  003280  EF48  F019         	goto	l8571
  7652  003284                     u9310:
  7653  003284                     
  7654                           ; BSR set to: 0
  7655  003284  0E00               	movlw	0
  7656  003286  6F6B               	movwf	(_dtoa$3541+1)& (0+255),b
  7657  003288  0E2B               	movlw	43
  7658  00328A  6F6A               	movwf	_dtoa$3541& (0+255),b
  7659  00328C  EF4C  F019         	goto	l8573
  7660  003290                     l8571:
  7661                           
  7662                           ; BSR set to: 0
  7663  003290  0E00               	movlw	0
  7664  003292  6F6B               	movwf	(_dtoa$3541+1)& (0+255),b
  7665  003294  0E2D               	movlw	45
  7666  003296  6F6A               	movwf	_dtoa$3541& (0+255),b
  7667  003298                     l8573:
  7668                           
  7669                           ; BSR set to: 0
  7670  003298  0E40               	movlw	low _dbuf
  7671  00329A  257A               	addwf	dtoa@i& (0+255),w,b
  7672  00329C  6ED9               	movwf	fsr2l,c
  7673  00329E  0E01               	movlw	high _dbuf
  7674  0032A0  217B               	addwfc	(dtoa@i+1)& (0+255),w,b
  7675  0032A2  6EDA               	movwf	fsr2h,c
  7676  0032A4  0060  F1AB  FFDF   	movff	_dtoa$3541,indf2
  7677  0032AA                     l8575:
  7678                           
  7679                           ; BSR set to: 0
  7680                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  7681  0032AA  C060  F026         	movff	dtoa@fp,pad@fp
  7682  0032AE  C061  F027         	movff	dtoa@fp+1,pad@fp+1
  7683  0032B2  0E40               	movlw	low _dbuf
  7684  0032B4  257A               	addwf	dtoa@i& (0+255),w,b
  7685  0032B6  6E28               	movwf	pad@buf^0,c
  7686  0032B8  0E01               	movlw	high _dbuf
  7687  0032BA  217B               	addwfc	(dtoa@i+1)& (0+255),w,b
  7688  0032BC  6E29               	movwf	(pad@buf+1)^0,c
  7689  0032BE  C06E  F02A         	movff	dtoa@w,pad@p
  7690  0032C2  C06F  F02B         	movff	dtoa@w+1,pad@p+1
  7691  0032C6  EC96  F028         	call	_pad	;wreg free
  7692  0032CA  C026  F060         	movff	?_pad,?_dtoa
  7693  0032CE  C027  F061         	movff	?_pad+1,?_dtoa+1
  7694  0032D2  0012               	return		;funcret
  7695  0032D4                     __end_of_dtoa:
  7696                           	callstack 0
  7697                           
  7698 ;; *************** function _pad *****************
  7699 ;; Defined at:
  7700 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  7701 ;; Parameters:    Size  Location     Type
  7702 ;;  fp              2   37[COMRAM] PTR struct _IO_FILE
  7703 ;;		 -> NULL(0), 
  7704 ;;  buf             2   39[COMRAM] PTR unsigned char 
  7705 ;;		 -> dbuf(80), 
  7706 ;;  p               2   41[COMRAM] int 
  7707 ;; Auto vars:     Size  Location     Type
  7708 ;;  w               2   46[COMRAM] int 
  7709 ;;  i               2   44[COMRAM] int 
  7710 ;; Return value:  Size  Location     Type
  7711 ;;                  2   37[COMRAM] int 
  7712 ;; Registers used:
  7713 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7714 ;; Tracked objects:
  7715 ;;		On entry : 0/0
  7716 ;;		On exit  : 0/0
  7717 ;;		Unchanged: 0/0
  7718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7719 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7720 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7721 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7722 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7723 ;;Total ram usage:       11 bytes
  7724 ;; Hardware stack levels used: 1
  7725 ;; Hardware stack levels required when called: 12
  7726 ;; This function calls:
  7727 ;;		_fputc
  7728 ;;		_fputs
  7729 ;;		_strlen
  7730 ;; This function is called by:
  7731 ;;		_dtoa
  7732 ;;		_efgtoa
  7733 ;;		_utoa
  7734 ;; This function uses a non-reentrant model
  7735 ;;
  7736                           
  7737                           	psect	text24
  7738  00512C                     __ptext24:
  7739                           	callstack 0
  7740  00512C                     _pad:
  7741                           	callstack 12
  7742  00512C                     
  7743                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  7744  00512C  A03E               	btfss	_flags^0,0,c
  7745  00512E  EF9B  F028         	goto	u8901
  7746  005132  EF9D  F028         	goto	u8900
  7747  005136                     u8901:
  7748  005136  EFA7  F028         	goto	l8431
  7749  00513A                     u8900:
  7750  00513A                     
  7751                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  7752  00513A  C028  F01F         	movff	pad@buf,fputs@s
  7753  00513E  C029  F020         	movff	pad@buf+1,fputs@s+1
  7754  005142  C026  F021         	movff	pad@fp,fputs@fp
  7755  005146  C027  F022         	movff	pad@fp+1,fputs@fp+1
  7756  00514A  EC9B  F02D         	call	_fputs	;wreg free
  7757  00514E                     l8431:
  7758                           
  7759                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  7760  00514E  BE2B               	btfsc	(pad@p+1)^0,7,c
  7761  005150  EFAC  F028         	goto	u8911
  7762  005154  EFAE  F028         	goto	u8910
  7763  005158                     u8911:
  7764  005158  EFB4  F028         	goto	l8435
  7765  00515C                     u8910:
  7766  00515C  C02A  F02F         	movff	pad@p,pad@w
  7767  005160  C02B  F030         	movff	pad@p+1,pad@w+1
  7768  005164  EFB8  F028         	goto	l2120
  7769  005168                     l8435:
  7770  005168  0E00               	movlw	0
  7771  00516A  6E30               	movwf	(pad@w+1)^0,c
  7772  00516C  0E00               	movlw	0
  7773  00516E  6E2F               	movwf	pad@w^0,c
  7774  005170                     l2120:
  7775                           
  7776                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  7777  005170  0E00               	movlw	0
  7778  005172  6E2E               	movwf	(pad@i+1)^0,c
  7779  005174  0E00               	movlw	0
  7780  005176  6E2D               	movwf	pad@i^0,c
  7781                           
  7782                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7783  005178  EFCA  F028         	goto	l8441
  7784  00517C                     l8437:
  7785                           
  7786                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  7787  00517C  0E00               	movlw	0
  7788  00517E  6E17               	movwf	(fputc@c+1)^0,c
  7789  005180  0E20               	movlw	32
  7790  005182  6E16               	movwf	fputc@c^0,c
  7791  005184  C026  F018         	movff	pad@fp,fputc@fp
  7792  005188  C027  F019         	movff	pad@fp+1,fputc@fp+1
  7793  00518C  ECA6  F02A         	call	_fputc	;wreg free
  7794  005190                     
  7795                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  7796  005190  4A2D               	infsnz	pad@i^0,f,c
  7797  005192  2A2E               	incf	(pad@i+1)^0,f,c
  7798  005194                     l8441:
  7799                           
  7800                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7801  005194  502F               	movf	pad@w^0,w,c
  7802  005196  5C2D               	subwf	pad@i^0,w,c
  7803  005198  502E               	movf	(pad@i+1)^0,w,c
  7804  00519A  0A80               	xorlw	128
  7805  00519C  6E2C               	movwf	??_pad^0,c
  7806  00519E  5030               	movf	(pad@w+1)^0,w,c
  7807  0051A0  0A80               	xorlw	128
  7808  0051A2  582C               	subwfb	??_pad^0,w,c
  7809  0051A4  A0D8               	btfss	status,0,c
  7810  0051A6  EFD7  F028         	goto	u8921
  7811  0051AA  EFD9  F028         	goto	u8920
  7812  0051AE                     u8921:
  7813  0051AE  EFBE  F028         	goto	l8437
  7814  0051B2                     u8920:
  7815  0051B2                     
  7816                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  7817  0051B2  B03E               	btfsc	_flags^0,0,c
  7818  0051B4  EFDE  F028         	goto	u8931
  7819  0051B8  EFE0  F028         	goto	u8930
  7820  0051BC                     u8931:
  7821  0051BC  EFEA  F028         	goto	l8445
  7822  0051C0                     u8930:
  7823  0051C0                     
  7824                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  7825  0051C0  C028  F01F         	movff	pad@buf,fputs@s
  7826  0051C4  C029  F020         	movff	pad@buf+1,fputs@s+1
  7827  0051C8  C026  F021         	movff	pad@fp,fputs@fp
  7828  0051CC  C027  F022         	movff	pad@fp+1,fputs@fp+1
  7829  0051D0  EC9B  F02D         	call	_fputs	;wreg free
  7830  0051D4                     l8445:
  7831                           
  7832                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  7833  0051D4  C028  F014         	movff	pad@buf,strlen@s
  7834  0051D8  C029  F015         	movff	pad@buf+1,strlen@s+1
  7835  0051DC  EC1E  F02E         	call	_strlen	;wreg free
  7836  0051E0  502F               	movf	pad@w^0,w,c
  7837  0051E2  2414               	addwf	?_strlen^0,w,c
  7838  0051E4  6E26               	movwf	?_pad^0,c
  7839  0051E6  5030               	movf	(pad@w+1)^0,w,c
  7840  0051E8  2015               	addwfc	(?_strlen+1)^0,w,c
  7841  0051EA  6E27               	movwf	(?_pad+1)^0,c
  7842  0051EC  0012               	return		;funcret
  7843  0051EE                     __end_of_pad:
  7844                           	callstack 0
  7845                           
  7846 ;; *************** function _strlen *****************
  7847 ;; Defined at:
  7848 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  7849 ;; Parameters:    Size  Location     Type
  7850 ;;  s               2   19[COMRAM] PTR const unsigned char 
  7851 ;;		 -> dbuf(80), 
  7852 ;; Auto vars:     Size  Location     Type
  7853 ;;  a               2   21[COMRAM] PTR const unsigned char 
  7854 ;;		 -> dbuf(80), 
  7855 ;; Return value:  Size  Location     Type
  7856 ;;                  2   19[COMRAM] unsigned int 
  7857 ;; Registers used:
  7858 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7859 ;; Tracked objects:
  7860 ;;		On entry : 0/0
  7861 ;;		On exit  : 0/0
  7862 ;;		Unchanged: 0/0
  7863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7864 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7865 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7867 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7868 ;;Total ram usage:        4 bytes
  7869 ;; Hardware stack levels used: 1
  7870 ;; Hardware stack levels required when called: 8
  7871 ;; This function calls:
  7872 ;;		Nothing
  7873 ;; This function is called by:
  7874 ;;		_pad
  7875 ;; This function uses a non-reentrant model
  7876 ;;
  7877                           
  7878                           	psect	text25
  7879  005C3C                     __ptext25:
  7880                           	callstack 0
  7881  005C3C                     _strlen:
  7882                           	callstack 15
  7883  005C3C  C014  F016         	movff	strlen@s,strlen@a
  7884  005C40  C015  F017         	movff	strlen@s+1,strlen@a+1
  7885  005C44  EF26  F02E         	goto	l7855
  7886  005C48                     l7853:
  7887  005C48  4A14               	infsnz	strlen@s^0,f,c
  7888  005C4A  2A15               	incf	(strlen@s+1)^0,f,c
  7889  005C4C                     l7855:
  7890  005C4C  0060  F053  FFD9   	movff	strlen@s,fsr2l
  7891  005C52  0060  F057  FFDA   	movff	strlen@s+1,fsr2h
  7892  005C58  50DF               	movf	indf2,w,c
  7893  005C5A  A4D8               	btfss	status,2,c
  7894  005C5C  EF32  F02E         	goto	u7971
  7895  005C60  EF34  F02E         	goto	u7970
  7896  005C64                     u7971:
  7897  005C64  EF24  F02E         	goto	l7853
  7898  005C68                     u7970:
  7899  005C68  5016               	movf	strlen@a^0,w,c
  7900  005C6A  5C14               	subwf	strlen@s^0,w,c
  7901  005C6C  6E14               	movwf	?_strlen^0,c
  7902  005C6E  5017               	movf	(strlen@a+1)^0,w,c
  7903  005C70  5815               	subwfb	(strlen@s+1)^0,w,c
  7904  005C72  6E15               	movwf	(?_strlen+1)^0,c
  7905  005C74  0012               	return		;funcret
  7906  005C76                     __end_of_strlen:
  7907                           	callstack 0
  7908                           
  7909 ;; *************** function _fputs *****************
  7910 ;; Defined at:
  7911 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  7912 ;; Parameters:    Size  Location     Type
  7913 ;;  s               2   30[COMRAM] PTR const unsigned char 
  7914 ;;		 -> dbuf(80), 
  7915 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  7916 ;;		 -> NULL(0), 
  7917 ;; Auto vars:     Size  Location     Type
  7918 ;;  i               2   35[COMRAM] int 
  7919 ;;  c               1   34[COMRAM] unsigned char 
  7920 ;; Return value:  Size  Location     Type
  7921 ;;                  2   30[COMRAM] int 
  7922 ;; Registers used:
  7923 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7924 ;; Tracked objects:
  7925 ;;		On entry : 0/0
  7926 ;;		On exit  : 0/0
  7927 ;;		Unchanged: 0/0
  7928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7929 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7930 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7932 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7933 ;;Total ram usage:        7 bytes
  7934 ;; Hardware stack levels used: 1
  7935 ;; Hardware stack levels required when called: 11
  7936 ;; This function calls:
  7937 ;;		_fputc
  7938 ;; This function is called by:
  7939 ;;		_pad
  7940 ;; This function uses a non-reentrant model
  7941 ;;
  7942                           
  7943                           	psect	text26
  7944  005B36                     __ptext26:
  7945                           	callstack 0
  7946  005B36                     _fputs:
  7947                           	callstack 12
  7948  005B36  0E00               	movlw	0
  7949  005B38  6E25               	movwf	(fputs@i+1)^0,c
  7950  005B3A  0E00               	movlw	0
  7951  005B3C  6E24               	movwf	fputs@i^0,c
  7952  005B3E  EFAC  F02D         	goto	l7849
  7953  005B42                     l7845:
  7954  005B42  C023  F016         	movff	fputs@c,fputc@c
  7955  005B46  6A17               	clrf	(fputc@c+1)^0,c
  7956  005B48  C021  F018         	movff	fputs@fp,fputc@fp
  7957  005B4C  C022  F019         	movff	fputs@fp+1,fputc@fp+1
  7958  005B50  ECA6  F02A         	call	_fputc	;wreg free
  7959  005B54  4A24               	infsnz	fputs@i^0,f,c
  7960  005B56  2A25               	incf	(fputs@i+1)^0,f,c
  7961  005B58                     l7849:
  7962  005B58  5024               	movf	fputs@i^0,w,c
  7963  005B5A  241F               	addwf	fputs@s^0,w,c
  7964  005B5C  6ED9               	movwf	fsr2l,c
  7965  005B5E  5025               	movf	(fputs@i+1)^0,w,c
  7966  005B60  2020               	addwfc	(fputs@s+1)^0,w,c
  7967  005B62  6EDA               	movwf	fsr2h,c
  7968  005B64  50DF               	movf	indf2,w,c
  7969  005B66  6E23               	movwf	fputs@c^0,c
  7970  005B68  5023               	movf	fputs@c^0,w,c
  7971  005B6A  A4D8               	btfss	status,2,c
  7972  005B6C  EFBA  F02D         	goto	u7961
  7973  005B70  EFBC  F02D         	goto	u7960
  7974  005B74                     u7961:
  7975  005B74  EFA1  F02D         	goto	l7845
  7976  005B78                     u7960:
  7977  005B78  0012               	return		;funcret
  7978  005B7A                     __end_of_fputs:
  7979                           	callstack 0
  7980                           
  7981 ;; *************** function _fputc *****************
  7982 ;; Defined at:
  7983 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  7984 ;; Parameters:    Size  Location     Type
  7985 ;;  c               2   21[COMRAM] int 
  7986 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
  7987 ;;		 -> NULL(0), 
  7988 ;; Auto vars:     Size  Location     Type
  7989 ;;		None
  7990 ;; Return value:  Size  Location     Type
  7991 ;;                  2   21[COMRAM] int 
  7992 ;; Registers used:
  7993 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7994 ;; Tracked objects:
  7995 ;;		On entry : 0/0
  7996 ;;		On exit  : 0/0
  7997 ;;		Unchanged: 0/0
  7998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7999 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8001 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8002 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8003 ;;Total ram usage:        9 bytes
  8004 ;; Hardware stack levels used: 1
  8005 ;; Hardware stack levels required when called: 10
  8006 ;; This function calls:
  8007 ;;		_putch
  8008 ;; This function is called by:
  8009 ;;		_pad
  8010 ;;		_vfpfcnvrt
  8011 ;;		_fputs
  8012 ;; This function uses a non-reentrant model
  8013 ;;
  8014                           
  8015                           	psect	text27
  8016  00554C                     __ptext27:
  8017                           	callstack 0
  8018  00554C                     _fputc:
  8019                           	callstack 12
  8020  00554C  5018               	movf	fputc@fp^0,w,c
  8021  00554E  1019               	iorwf	(fputc@fp+1)^0,w,c
  8022  005550  B4D8               	btfsc	status,2,c
  8023  005552  EFAD  F02A         	goto	u7531
  8024  005556  EFAF  F02A         	goto	u7530
  8025  00555A                     u7531:
  8026  00555A  EFB8  F02A         	goto	l7631
  8027  00555E                     u7530:
  8028  00555E  5018               	movf	fputc@fp^0,w,c
  8029  005560  1019               	iorwf	(fputc@fp+1)^0,w,c
  8030  005562  A4D8               	btfss	status,2,c
  8031  005564  EFB6  F02A         	goto	u7541
  8032  005568  EFB8  F02A         	goto	u7540
  8033  00556C                     u7541:
  8034  00556C  EFBD  F02A         	goto	l7633
  8035  005570                     u7540:
  8036  005570                     l7631:
  8037  005570  5016               	movf	fputc@c^0,w,c
  8038  005572  EC64  F031         	call	_putch
  8039  005576  EFF0  F02A         	goto	l2333
  8040  00557A                     l7633:
  8041  00557A  EE20 F004          	lfsr	2,4
  8042  00557E  5018               	movf	fputc@fp^0,w,c
  8043  005580  26D9               	addwf	fsr2l,f,c
  8044  005582  5019               	movf	(fputc@fp+1)^0,w,c
  8045  005584  22DA               	addwfc	fsr2h,f,c
  8046  005586  50DE               	movf	postinc2,w,c
  8047  005588  10DE               	iorwf	postinc2,w,c
  8048  00558A  B4D8               	btfsc	status,2,c
  8049  00558C  EFCA  F02A         	goto	u7551
  8050  005590  EFCC  F02A         	goto	u7550
  8051  005594                     u7551:
  8052  005594  EFE7  F02A         	goto	l7637
  8053  005598                     u7550:
  8054  005598  EE20 F004          	lfsr	2,4
  8055  00559C  5018               	movf	fputc@fp^0,w,c
  8056  00559E  26D9               	addwf	fsr2l,f,c
  8057  0055A0  5019               	movf	(fputc@fp+1)^0,w,c
  8058  0055A2  22DA               	addwfc	fsr2h,f,c
  8059  0055A4  EE10 F002          	lfsr	1,2
  8060  0055A8  5018               	movf	fputc@fp^0,w,c
  8061  0055AA  26E1               	addwf	fsr1l,f,c
  8062  0055AC  5019               	movf	(fputc@fp+1)^0,w,c
  8063  0055AE  22E2               	addwfc	fsr1h,f,c
  8064  0055B0  50DE               	movf	postinc2,w,c
  8065  0055B2  5CE6               	subwf	postinc1,w,c
  8066  0055B4  50E6               	movf	postinc1,w,c
  8067  0055B6  0A80               	xorlw	128
  8068  0055B8  6E1E               	movwf	(??_fputc+4)^0,c
  8069  0055BA  50DE               	movf	postinc2,w,c
  8070  0055BC  0A80               	xorlw	128
  8071  0055BE  581E               	subwfb	(??_fputc+4)^0,w,c
  8072  0055C0  B0D8               	btfsc	status,0,c
  8073  0055C2  EFE5  F02A         	goto	u7561
  8074  0055C6  EFE7  F02A         	goto	u7560
  8075  0055CA                     u7561:
  8076  0055CA  EFF0  F02A         	goto	l2333
  8077  0055CE                     u7560:
  8078  0055CE                     l7637:
  8079  0055CE  EE20 F002          	lfsr	2,2
  8080  0055D2  5018               	movf	fputc@fp^0,w,c
  8081  0055D4  26D9               	addwf	fsr2l,f,c
  8082  0055D6  5019               	movf	(fputc@fp+1)^0,w,c
  8083  0055D8  22DA               	addwfc	fsr2h,f,c
  8084  0055DA  2ADE               	incf	postinc2,f,c
  8085  0055DC  0E00               	movlw	0
  8086  0055DE  22DD               	addwfc	postdec2,f,c
  8087  0055E0                     l2333:
  8088  0055E0  0012               	return		;funcret
  8089  0055E2                     __end_of_fputc:
  8090                           	callstack 0
  8091                           
  8092 ;; *************** function _putch *****************
  8093 ;; Defined at:
  8094 ;;		line 230 in file "mcc_generated_files/uart1.c"
  8095 ;; Parameters:    Size  Location     Type
  8096 ;;  txData          1    wreg     unsigned char 
  8097 ;; Auto vars:     Size  Location     Type
  8098 ;;  txData          1   20[COMRAM] unsigned char 
  8099 ;; Return value:  Size  Location     Type
  8100 ;;                  1    wreg      void 
  8101 ;; Registers used:
  8102 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8103 ;; Tracked objects:
  8104 ;;		On entry : 0/0
  8105 ;;		On exit  : 0/0
  8106 ;;		Unchanged: 0/0
  8107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8109 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8111 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8112 ;;Total ram usage:        1 bytes
  8113 ;; Hardware stack levels used: 1
  8114 ;; Hardware stack levels required when called: 9
  8115 ;; This function calls:
  8116 ;;		_UART1_Write
  8117 ;; This function is called by:
  8118 ;;		_fputc
  8119 ;; This function uses a non-reentrant model
  8120 ;;
  8121                           
  8122                           	psect	text28
  8123  0062C8                     __ptext28:
  8124                           	callstack 0
  8125  0062C8                     _putch:
  8126                           	callstack 12
  8127                           
  8128                           ;incstack = 0
  8129                           ;putch@txData stored from wreg
  8130  0062C8  6E15               	movwf	putch@txData^0,c
  8131  0062CA                     
  8132                           ;mcc_generated_files/uart1.c: 230: void putch(char txData);mcc_generated_files/uart1.c: 
      +                          231: {;mcc_generated_files/uart1.c: 232:     UART1_Write(txData);
  8133  0062CA  5015               	movf	putch@txData^0,w,c
  8134  0062CC  EC5B  F02C         	call	_UART1_Write
  8135  0062D0  0012               	return		;funcret
  8136  0062D2                     __end_of_putch:
  8137                           	callstack 0
  8138                           
  8139 ;; *************** function _UART1_Write *****************
  8140 ;; Defined at:
  8141 ;;		line 202 in file "mcc_generated_files/uart1.c"
  8142 ;; Parameters:    Size  Location     Type
  8143 ;;  txData          1    wreg     unsigned char 
  8144 ;; Auto vars:     Size  Location     Type
  8145 ;;  txData          1   19[COMRAM] unsigned char 
  8146 ;; Return value:  Size  Location     Type
  8147 ;;                  1    wreg      void 
  8148 ;; Registers used:
  8149 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8150 ;; Tracked objects:
  8151 ;;		On entry : 0/0
  8152 ;;		On exit  : 0/0
  8153 ;;		Unchanged: 0/0
  8154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8156 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8158 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8159 ;;Total ram usage:        1 bytes
  8160 ;; Hardware stack levels used: 1
  8161 ;; Hardware stack levels required when called: 8
  8162 ;; This function calls:
  8163 ;;		Nothing
  8164 ;; This function is called by:
  8165 ;;		_putch
  8166 ;; This function uses a non-reentrant model
  8167 ;;
  8168                           
  8169                           	psect	text29
  8170  0058B6                     __ptext29:
  8171                           	callstack 0
  8172  0058B6                     _UART1_Write:
  8173                           	callstack 12
  8174                           
  8175                           ;incstack = 0
  8176                           ;UART1_Write@txData stored from wreg
  8177  0058B6  6E14               	movwf	UART1_Write@txData^0,c
  8178  0058B8                     l7609:
  8179                           
  8180                           ;mcc_generated_files/uart1.c: 204:     while(0 == uart1TxBufferRemaining)
  8181  0058B8  504C               	movf	_uart1TxBufferRemaining^0,w,c	;volatile
  8182  0058BA  B4D8               	btfsc	status,2,c
  8183  0058BC  EF62  F02C         	goto	u7501
  8184  0058C0  EF64  F02C         	goto	u7500
  8185  0058C4                     u7501:
  8186  0058C4  EF5C  F02C         	goto	l7609
  8187  0058C8                     u7500:
  8188  0058C8                     
  8189                           ;mcc_generated_files/uart1.c: 208:     if(0 == PIE3bits.U1TXIE)
  8190  0058C8  0139               	movlb	57	; () banked
  8191  0058CA  B993               	btfsc	147,4,b	;volatile
  8192  0058CC  EF6A  F02C         	goto	u7511
  8193  0058D0  EF6C  F02C         	goto	u7510
  8194  0058D4                     u7511:
  8195  0058D4  EF71  F02C         	goto	l309
  8196  0058D8                     u7510:
  8197  0058D8                     
  8198                           ; BSR set to: 57
  8199                           ;mcc_generated_files/uart1.c: 209:     {;mcc_generated_files/uart1.c: 210:         U1TXB
      +                           = txData;
  8200  0058D8  0060  F053  FDEA   	movff	UART1_Write@txData,15850	;volatile
  8201                           
  8202                           ;mcc_generated_files/uart1.c: 211:     }
  8203  0058DE  EF87  F02C         	goto	l7623
  8204  0058E2                     l309:
  8205                           
  8206                           ; BSR set to: 57
  8207                           ;mcc_generated_files/uart1.c: 213:     {;mcc_generated_files/uart1.c: 214:         PIE3b
      +                          its.U1TXIE = 0;
  8208  0058E2  9993               	bcf	147,4,b	;volatile
  8209  0058E4                     
  8210                           ; BSR set to: 57
  8211                           ;mcc_generated_files/uart1.c: 215:         uart1TxBuffer[uart1TxHead++] = txData;
  8212  0058E4  0E10               	movlw	low _uart1TxBuffer
  8213  0058E6  2447               	addwf	_uart1TxHead^0,w,c	;volatile
  8214  0058E8  6ED9               	movwf	fsr2l,c
  8215  0058EA  6ADA               	clrf	fsr2h,c
  8216  0058EC  0E01               	movlw	high _uart1TxBuffer
  8217  0058EE  22DA               	addwfc	fsr2h,f,c
  8218  0058F0  0060  F053  FFDF   	movff	UART1_Write@txData,indf2
  8219  0058F6                     
  8220                           ; BSR set to: 57
  8221  0058F6  2A47               	incf	_uart1TxHead^0,f,c	;volatile
  8222  0058F8                     
  8223                           ; BSR set to: 57
  8224                           ;mcc_generated_files/uart1.c: 216:         if(sizeof(uart1TxBuffer) <= uart1TxHead)
  8225  0058F8  0E07               	movlw	7
  8226  0058FA  6447               	cpfsgt	_uart1TxHead^0,c	;volatile
  8227  0058FC  EF82  F02C         	goto	u7521
  8228  005900  EF84  F02C         	goto	u7520
  8229  005904                     u7521:
  8230  005904  EF86  F02C         	goto	l7621
  8231  005908                     u7520:
  8232  005908                     
  8233                           ; BSR set to: 57
  8234                           ;mcc_generated_files/uart1.c: 217:         {;mcc_generated_files/uart1.c: 218:          
      +                             uart1TxHead = 0;
  8235  005908  0E00               	movlw	0
  8236  00590A  6E47               	movwf	_uart1TxHead^0,c	;volatile
  8237  00590C                     l7621:
  8238                           
  8239                           ; BSR set to: 57
  8240                           ;mcc_generated_files/uart1.c: 220:         uart1TxBufferRemaining--;
  8241  00590C  064C               	decf	_uart1TxBufferRemaining^0,f,c	;volatile
  8242  00590E                     l7623:
  8243                           
  8244                           ; BSR set to: 57
  8245                           ;mcc_generated_files/uart1.c: 222:     PIE3bits.U1TXIE = 1;
  8246  00590E  8993               	bsf	147,4,b	;volatile
  8247  005910                     
  8248                           ; BSR set to: 57
  8249  005910  0012               	return		;funcret
  8250  005912                     __end_of_UART1_Write:
  8251                           	callstack 0
  8252                           
  8253 ;; *************** function _abs *****************
  8254 ;; Defined at:
  8255 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  8256 ;; Parameters:    Size  Location     Type
  8257 ;;  a               2   37[COMRAM] int 
  8258 ;; Auto vars:     Size  Location     Type
  8259 ;;		None
  8260 ;; Return value:  Size  Location     Type
  8261 ;;                  2   37[COMRAM] int 
  8262 ;; Registers used:
  8263 ;;		wreg, status,2, status,0
  8264 ;; Tracked objects:
  8265 ;;		On entry : 0/0
  8266 ;;		On exit  : 0/0
  8267 ;;		Unchanged: 0/0
  8268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8269 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8271 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8272 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8273 ;;Total ram usage:        4 bytes
  8274 ;; Hardware stack levels used: 1
  8275 ;; Hardware stack levels required when called: 8
  8276 ;; This function calls:
  8277 ;;		Nothing
  8278 ;; This function is called by:
  8279 ;;		_dtoa
  8280 ;; This function uses a non-reentrant model
  8281 ;;
  8282                           
  8283                           	psect	text30
  8284  005BBE                     __ptext30:
  8285                           	callstack 0
  8286  005BBE                     _abs:
  8287                           	callstack 16
  8288  005BBE  BE27               	btfsc	(abs@a+1)^0,7,c
  8289  005BC0  EFEC  F02D         	goto	u8940
  8290  005BC4  5027               	movf	(abs@a+1)^0,w,c
  8291  005BC6  E106               	bnz	u8941
  8292  005BC8  0426               	decf	abs@a^0,w,c
  8293  005BCA  B0D8               	btfsc	status,0,c
  8294  005BCC  EFEA  F02D         	goto	u8941
  8295  005BD0  EFEC  F02D         	goto	u8940
  8296  005BD4                     u8941:
  8297  005BD4  EFFA  F02D         	goto	l2299
  8298  005BD8                     u8940:
  8299  005BD8  C026  F028         	movff	abs@a,??_abs
  8300  005BDC  C027  F029         	movff	abs@a+1,??_abs+1
  8301  005BE0  1E28               	comf	??_abs^0,f,c
  8302  005BE2  1E29               	comf	(??_abs+1)^0,f,c
  8303  005BE4  4A28               	infsnz	??_abs^0,f,c
  8304  005BE6  2A29               	incf	(??_abs+1)^0,f,c
  8305  005BE8  C028  F026         	movff	??_abs,?_abs
  8306  005BEC  C029  F027         	movff	??_abs+1,?_abs+1
  8307  005BF0  EFFE  F02D         	goto	l2302
  8308  005BF4                     l2299:
  8309  005BF4  C026  F026         	movff	abs@a,?_abs
  8310  005BF8  C027  F027         	movff	abs@a+1,?_abs+1
  8311  005BFC                     l2302:
  8312  005BFC  0012               	return		;funcret
  8313  005BFE                     __end_of_abs:
  8314                           	callstack 0
  8315                           
  8316 ;; *************** function ___aomod *****************
  8317 ;; Defined at:
  8318 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  8319 ;; Parameters:    Size  Location     Type
  8320 ;;  dividend        8   19[COMRAM] long long 
  8321 ;;  divisor         8   27[COMRAM] long long 
  8322 ;; Auto vars:     Size  Location     Type
  8323 ;;  sign            1   36[COMRAM] unsigned char 
  8324 ;;  counter         1   35[COMRAM] unsigned char 
  8325 ;; Return value:  Size  Location     Type
  8326 ;;                  8   19[COMRAM] long long 
  8327 ;; Registers used:
  8328 ;;		wreg, status,2, status,0
  8329 ;; Tracked objects:
  8330 ;;		On entry : 0/0
  8331 ;;		On exit  : 0/0
  8332 ;;		Unchanged: 0/0
  8333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8334 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8335 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8337 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8338 ;;Total ram usage:       18 bytes
  8339 ;; Hardware stack levels used: 1
  8340 ;; Hardware stack levels required when called: 8
  8341 ;; This function calls:
  8342 ;;		Nothing
  8343 ;; This function is called by:
  8344 ;;		_dtoa
  8345 ;; This function uses a non-reentrant model
  8346 ;;
  8347                           
  8348                           	psect	text31
  8349  004200                     __ptext31:
  8350                           	callstack 0
  8351  004200                     ___aomod:
  8352                           	callstack 16
  8353  004200  0E00               	movlw	0
  8354  004202  6E25               	movwf	___aomod@sign^0,c
  8355  004204  BE1B               	btfsc	(___aomod@dividend+7)^0,7,c
  8356  004206  EF09  F021         	goto	u8070
  8357  00420A  EF07  F021         	goto	u8071
  8358  00420E                     u8071:
  8359  00420E  EF1B  F021         	goto	l7917
  8360  004212                     u8070:
  8361  004212  1E1B               	comf	(___aomod@dividend+7)^0,f,c
  8362  004214  1E1A               	comf	(___aomod@dividend+6)^0,f,c
  8363  004216  1E19               	comf	(___aomod@dividend+5)^0,f,c
  8364  004218  1E18               	comf	(___aomod@dividend+4)^0,f,c
  8365  00421A  1E17               	comf	(___aomod@dividend+3)^0,f,c
  8366  00421C  1E16               	comf	(___aomod@dividend+2)^0,f,c
  8367  00421E  1E15               	comf	(___aomod@dividend+1)^0,f,c
  8368  004220  6C14               	negf	___aomod@dividend^0,c
  8369  004222  0E00               	movlw	0
  8370  004224  2215               	addwfc	(___aomod@dividend+1)^0,f,c
  8371  004226  2216               	addwfc	(___aomod@dividend+2)^0,f,c
  8372  004228  2217               	addwfc	(___aomod@dividend+3)^0,f,c
  8373  00422A  2218               	addwfc	(___aomod@dividend+4)^0,f,c
  8374  00422C  2219               	addwfc	(___aomod@dividend+5)^0,f,c
  8375  00422E  221A               	addwfc	(___aomod@dividend+6)^0,f,c
  8376  004230  221B               	addwfc	(___aomod@dividend+7)^0,f,c
  8377  004232  0E01               	movlw	1
  8378  004234  6E25               	movwf	___aomod@sign^0,c
  8379  004236                     l7917:
  8380  004236  BE23               	btfsc	(___aomod@divisor+7)^0,7,c
  8381  004238  EF22  F021         	goto	u8080
  8382  00423C  EF20  F021         	goto	u8081
  8383  004240                     u8081:
  8384  004240  EF32  F021         	goto	l7921
  8385  004244                     u8080:
  8386  004244  1E23               	comf	(___aomod@divisor+7)^0,f,c
  8387  004246  1E22               	comf	(___aomod@divisor+6)^0,f,c
  8388  004248  1E21               	comf	(___aomod@divisor+5)^0,f,c
  8389  00424A  1E20               	comf	(___aomod@divisor+4)^0,f,c
  8390  00424C  1E1F               	comf	(___aomod@divisor+3)^0,f,c
  8391  00424E  1E1E               	comf	(___aomod@divisor+2)^0,f,c
  8392  004250  1E1D               	comf	(___aomod@divisor+1)^0,f,c
  8393  004252  6C1C               	negf	___aomod@divisor^0,c
  8394  004254  0E00               	movlw	0
  8395  004256  221D               	addwfc	(___aomod@divisor+1)^0,f,c
  8396  004258  221E               	addwfc	(___aomod@divisor+2)^0,f,c
  8397  00425A  221F               	addwfc	(___aomod@divisor+3)^0,f,c
  8398  00425C  2220               	addwfc	(___aomod@divisor+4)^0,f,c
  8399  00425E  2221               	addwfc	(___aomod@divisor+5)^0,f,c
  8400  004260  2222               	addwfc	(___aomod@divisor+6)^0,f,c
  8401  004262  2223               	addwfc	(___aomod@divisor+7)^0,f,c
  8402  004264                     l7921:
  8403  004264  501C               	movf	___aomod@divisor^0,w,c
  8404  004266  101D               	iorwf	(___aomod@divisor+1)^0,w,c
  8405  004268  101E               	iorwf	(___aomod@divisor+2)^0,w,c
  8406  00426A  101F               	iorwf	(___aomod@divisor+3)^0,w,c
  8407  00426C  1020               	iorwf	(___aomod@divisor+4)^0,w,c
  8408  00426E  1021               	iorwf	(___aomod@divisor+5)^0,w,c
  8409  004270  1022               	iorwf	(___aomod@divisor+6)^0,w,c
  8410  004272  1023               	iorwf	(___aomod@divisor+7)^0,w,c
  8411  004274  B4D8               	btfsc	status,2,c
  8412  004276  EF3F  F021         	goto	u8091
  8413  00427A  EF41  F021         	goto	u8090
  8414  00427E                     u8091:
  8415  00427E  EF89  F021         	goto	l7937
  8416  004282                     u8090:
  8417  004282  0E01               	movlw	1
  8418  004284  6E24               	movwf	___aomod@counter^0,c
  8419  004286  EF4F  F021         	goto	l7927
  8420  00428A                     l7925:
  8421  00428A  90D8               	bcf	status,0,c
  8422  00428C  361C               	rlcf	___aomod@divisor^0,f,c
  8423  00428E  361D               	rlcf	(___aomod@divisor+1)^0,f,c
  8424  004290  361E               	rlcf	(___aomod@divisor+2)^0,f,c
  8425  004292  361F               	rlcf	(___aomod@divisor+3)^0,f,c
  8426  004294  3620               	rlcf	(___aomod@divisor+4)^0,f,c
  8427  004296  3621               	rlcf	(___aomod@divisor+5)^0,f,c
  8428  004298  3622               	rlcf	(___aomod@divisor+6)^0,f,c
  8429  00429A  3623               	rlcf	(___aomod@divisor+7)^0,f,c
  8430  00429C  2A24               	incf	___aomod@counter^0,f,c
  8431  00429E                     l7927:
  8432  00429E  AE23               	btfss	(___aomod@divisor+7)^0,7,c
  8433  0042A0  EF54  F021         	goto	u8101
  8434  0042A4  EF56  F021         	goto	u8100
  8435  0042A8                     u8101:
  8436  0042A8  EF45  F021         	goto	l7925
  8437  0042AC                     u8100:
  8438  0042AC                     l7929:
  8439  0042AC  501C               	movf	___aomod@divisor^0,w,c
  8440  0042AE  5C14               	subwf	___aomod@dividend^0,w,c
  8441  0042B0  501D               	movf	(___aomod@divisor+1)^0,w,c
  8442  0042B2  5815               	subwfb	(___aomod@dividend+1)^0,w,c
  8443  0042B4  501E               	movf	(___aomod@divisor+2)^0,w,c
  8444  0042B6  5816               	subwfb	(___aomod@dividend+2)^0,w,c
  8445  0042B8  501F               	movf	(___aomod@divisor+3)^0,w,c
  8446  0042BA  5817               	subwfb	(___aomod@dividend+3)^0,w,c
  8447  0042BC  5020               	movf	(___aomod@divisor+4)^0,w,c
  8448  0042BE  5818               	subwfb	(___aomod@dividend+4)^0,w,c
  8449  0042C0  5021               	movf	(___aomod@divisor+5)^0,w,c
  8450  0042C2  5819               	subwfb	(___aomod@dividend+5)^0,w,c
  8451  0042C4  5022               	movf	(___aomod@divisor+6)^0,w,c
  8452  0042C6  581A               	subwfb	(___aomod@dividend+6)^0,w,c
  8453  0042C8  5023               	movf	(___aomod@divisor+7)^0,w,c
  8454  0042CA  581B               	subwfb	(___aomod@dividend+7)^0,w,c
  8455  0042CC  A0D8               	btfss	status,0,c
  8456  0042CE  EF6B  F021         	goto	u8111
  8457  0042D2  EF6D  F021         	goto	u8110
  8458  0042D6                     u8111:
  8459  0042D6  EF7D  F021         	goto	l7933
  8460  0042DA                     u8110:
  8461  0042DA  501C               	movf	___aomod@divisor^0,w,c
  8462  0042DC  5E14               	subwf	___aomod@dividend^0,f,c
  8463  0042DE  501D               	movf	(___aomod@divisor+1)^0,w,c
  8464  0042E0  5A15               	subwfb	(___aomod@dividend+1)^0,f,c
  8465  0042E2  501E               	movf	(___aomod@divisor+2)^0,w,c
  8466  0042E4  5A16               	subwfb	(___aomod@dividend+2)^0,f,c
  8467  0042E6  501F               	movf	(___aomod@divisor+3)^0,w,c
  8468  0042E8  5A17               	subwfb	(___aomod@dividend+3)^0,f,c
  8469  0042EA  5020               	movf	(___aomod@divisor+4)^0,w,c
  8470  0042EC  5A18               	subwfb	(___aomod@dividend+4)^0,f,c
  8471  0042EE  5021               	movf	(___aomod@divisor+5)^0,w,c
  8472  0042F0  5A19               	subwfb	(___aomod@dividend+5)^0,f,c
  8473  0042F2  5022               	movf	(___aomod@divisor+6)^0,w,c
  8474  0042F4  5A1A               	subwfb	(___aomod@dividend+6)^0,f,c
  8475  0042F6  5023               	movf	(___aomod@divisor+7)^0,w,c
  8476  0042F8  5A1B               	subwfb	(___aomod@dividend+7)^0,f,c
  8477  0042FA                     l7933:
  8478  0042FA  90D8               	bcf	status,0,c
  8479  0042FC  3223               	rrcf	(___aomod@divisor+7)^0,f,c
  8480  0042FE  3222               	rrcf	(___aomod@divisor+6)^0,f,c
  8481  004300  3221               	rrcf	(___aomod@divisor+5)^0,f,c
  8482  004302  3220               	rrcf	(___aomod@divisor+4)^0,f,c
  8483  004304  321F               	rrcf	(___aomod@divisor+3)^0,f,c
  8484  004306  321E               	rrcf	(___aomod@divisor+2)^0,f,c
  8485  004308  321D               	rrcf	(___aomod@divisor+1)^0,f,c
  8486  00430A  321C               	rrcf	___aomod@divisor^0,f,c
  8487  00430C  2E24               	decfsz	___aomod@counter^0,f,c
  8488  00430E  EF56  F021         	goto	l7929
  8489  004312                     l7937:
  8490  004312  5025               	movf	___aomod@sign^0,w,c
  8491  004314  B4D8               	btfsc	status,2,c
  8492  004316  EF8F  F021         	goto	u8121
  8493  00431A  EF91  F021         	goto	u8120
  8494  00431E                     u8121:
  8495  00431E  EFA1  F021         	goto	l7941
  8496  004322                     u8120:
  8497  004322  1E1B               	comf	(___aomod@dividend+7)^0,f,c
  8498  004324  1E1A               	comf	(___aomod@dividend+6)^0,f,c
  8499  004326  1E19               	comf	(___aomod@dividend+5)^0,f,c
  8500  004328  1E18               	comf	(___aomod@dividend+4)^0,f,c
  8501  00432A  1E17               	comf	(___aomod@dividend+3)^0,f,c
  8502  00432C  1E16               	comf	(___aomod@dividend+2)^0,f,c
  8503  00432E  1E15               	comf	(___aomod@dividend+1)^0,f,c
  8504  004330  6C14               	negf	___aomod@dividend^0,c
  8505  004332  0E00               	movlw	0
  8506  004334  2215               	addwfc	(___aomod@dividend+1)^0,f,c
  8507  004336  2216               	addwfc	(___aomod@dividend+2)^0,f,c
  8508  004338  2217               	addwfc	(___aomod@dividend+3)^0,f,c
  8509  00433A  2218               	addwfc	(___aomod@dividend+4)^0,f,c
  8510  00433C  2219               	addwfc	(___aomod@dividend+5)^0,f,c
  8511  00433E  221A               	addwfc	(___aomod@dividend+6)^0,f,c
  8512  004340  221B               	addwfc	(___aomod@dividend+7)^0,f,c
  8513  004342                     l7941:
  8514  004342  C014  F014         	movff	___aomod@dividend,?___aomod
  8515  004346  C015  F015         	movff	___aomod@dividend+1,?___aomod+1
  8516  00434A  C016  F016         	movff	___aomod@dividend+2,?___aomod+2
  8517  00434E  C017  F017         	movff	___aomod@dividend+3,?___aomod+3
  8518  004352  C018  F018         	movff	___aomod@dividend+4,?___aomod+4
  8519  004356  C019  F019         	movff	___aomod@dividend+5,?___aomod+5
  8520  00435A  C01A  F01A         	movff	___aomod@dividend+6,?___aomod+6
  8521  00435E  C01B  F01B         	movff	___aomod@dividend+7,?___aomod+7
  8522  004362  0012               	return		;funcret
  8523  004364                     __end_of___aomod:
  8524                           	callstack 0
  8525                           
  8526 ;; *************** function ___aodiv *****************
  8527 ;; Defined at:
  8528 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  8529 ;; Parameters:    Size  Location     Type
  8530 ;;  dividend        8   19[COMRAM] long long 
  8531 ;;  divisor         8   27[COMRAM] long long 
  8532 ;; Auto vars:     Size  Location     Type
  8533 ;;  quotient        8   37[COMRAM] long long 
  8534 ;;  sign            1   36[COMRAM] unsigned char 
  8535 ;;  counter         1   35[COMRAM] unsigned char 
  8536 ;; Return value:  Size  Location     Type
  8537 ;;                  8   19[COMRAM] long long 
  8538 ;; Registers used:
  8539 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8540 ;; Tracked objects:
  8541 ;;		On entry : 0/0
  8542 ;;		On exit  : 0/0
  8543 ;;		Unchanged: 0/0
  8544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8545 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8546 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8548 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8549 ;;Total ram usage:       26 bytes
  8550 ;; Hardware stack levels used: 1
  8551 ;; Hardware stack levels required when called: 8
  8552 ;; This function calls:
  8553 ;;		Nothing
  8554 ;; This function is called by:
  8555 ;;		_dtoa
  8556 ;; This function uses a non-reentrant model
  8557 ;;
  8558                           
  8559                           	psect	text32
  8560  004078                     __ptext32:
  8561                           	callstack 0
  8562  004078                     ___aodiv:
  8563                           	callstack 16
  8564  004078  0E00               	movlw	0
  8565  00407A  6E25               	movwf	___aodiv@sign^0,c
  8566  00407C  BE23               	btfsc	(___aodiv@divisor+7)^0,7,c
  8567  00407E  EF45  F020         	goto	u8000
  8568  004082  EF43  F020         	goto	u8001
  8569  004086                     u8001:
  8570  004086  EF57  F020         	goto	l7873
  8571  00408A                     u8000:
  8572  00408A  1E23               	comf	(___aodiv@divisor+7)^0,f,c
  8573  00408C  1E22               	comf	(___aodiv@divisor+6)^0,f,c
  8574  00408E  1E21               	comf	(___aodiv@divisor+5)^0,f,c
  8575  004090  1E20               	comf	(___aodiv@divisor+4)^0,f,c
  8576  004092  1E1F               	comf	(___aodiv@divisor+3)^0,f,c
  8577  004094  1E1E               	comf	(___aodiv@divisor+2)^0,f,c
  8578  004096  1E1D               	comf	(___aodiv@divisor+1)^0,f,c
  8579  004098  6C1C               	negf	___aodiv@divisor^0,c
  8580  00409A  0E00               	movlw	0
  8581  00409C  221D               	addwfc	(___aodiv@divisor+1)^0,f,c
  8582  00409E  221E               	addwfc	(___aodiv@divisor+2)^0,f,c
  8583  0040A0  221F               	addwfc	(___aodiv@divisor+3)^0,f,c
  8584  0040A2  2220               	addwfc	(___aodiv@divisor+4)^0,f,c
  8585  0040A4  2221               	addwfc	(___aodiv@divisor+5)^0,f,c
  8586  0040A6  2222               	addwfc	(___aodiv@divisor+6)^0,f,c
  8587  0040A8  2223               	addwfc	(___aodiv@divisor+7)^0,f,c
  8588  0040AA  0E01               	movlw	1
  8589  0040AC  6E25               	movwf	___aodiv@sign^0,c
  8590  0040AE                     l7873:
  8591  0040AE  BE1B               	btfsc	(___aodiv@dividend+7)^0,7,c
  8592  0040B0  EF5E  F020         	goto	u8010
  8593  0040B4  EF5C  F020         	goto	u8011
  8594  0040B8                     u8011:
  8595  0040B8  EF70  F020         	goto	l7879
  8596  0040BC                     u8010:
  8597  0040BC  1E1B               	comf	(___aodiv@dividend+7)^0,f,c
  8598  0040BE  1E1A               	comf	(___aodiv@dividend+6)^0,f,c
  8599  0040C0  1E19               	comf	(___aodiv@dividend+5)^0,f,c
  8600  0040C2  1E18               	comf	(___aodiv@dividend+4)^0,f,c
  8601  0040C4  1E17               	comf	(___aodiv@dividend+3)^0,f,c
  8602  0040C6  1E16               	comf	(___aodiv@dividend+2)^0,f,c
  8603  0040C8  1E15               	comf	(___aodiv@dividend+1)^0,f,c
  8604  0040CA  6C14               	negf	___aodiv@dividend^0,c
  8605  0040CC  0E00               	movlw	0
  8606  0040CE  2215               	addwfc	(___aodiv@dividend+1)^0,f,c
  8607  0040D0  2216               	addwfc	(___aodiv@dividend+2)^0,f,c
  8608  0040D2  2217               	addwfc	(___aodiv@dividend+3)^0,f,c
  8609  0040D4  2218               	addwfc	(___aodiv@dividend+4)^0,f,c
  8610  0040D6  2219               	addwfc	(___aodiv@dividend+5)^0,f,c
  8611  0040D8  221A               	addwfc	(___aodiv@dividend+6)^0,f,c
  8612  0040DA  221B               	addwfc	(___aodiv@dividend+7)^0,f,c
  8613  0040DC  0E01               	movlw	1
  8614  0040DE  1A25               	xorwf	___aodiv@sign^0,f,c
  8615  0040E0                     l7879:
  8616  0040E0  EE20  F026         	lfsr	2,___aodiv@quotient
  8617  0040E4  0E07               	movlw	7
  8618  0040E6                     u8021:
  8619  0040E6  6ADE               	clrf	postinc2,c
  8620  0040E8  06E8               	decf	wreg,f,c
  8621  0040EA  E2FD               	bc	u8021
  8622  0040EC  501C               	movf	___aodiv@divisor^0,w,c
  8623  0040EE  101D               	iorwf	(___aodiv@divisor+1)^0,w,c
  8624  0040F0  101E               	iorwf	(___aodiv@divisor+2)^0,w,c
  8625  0040F2  101F               	iorwf	(___aodiv@divisor+3)^0,w,c
  8626  0040F4  1020               	iorwf	(___aodiv@divisor+4)^0,w,c
  8627  0040F6  1021               	iorwf	(___aodiv@divisor+5)^0,w,c
  8628  0040F8  1022               	iorwf	(___aodiv@divisor+6)^0,w,c
  8629  0040FA  1023               	iorwf	(___aodiv@divisor+7)^0,w,c
  8630  0040FC  B4D8               	btfsc	status,2,c
  8631  0040FE  EF83  F020         	goto	u8031
  8632  004102  EF85  F020         	goto	u8030
  8633  004106                     u8031:
  8634  004106  EFD7  F020         	goto	l7901
  8635  00410A                     u8030:
  8636  00410A  0E01               	movlw	1
  8637  00410C  6E24               	movwf	___aodiv@counter^0,c
  8638  00410E  EF93  F020         	goto	l7887
  8639  004112                     l7885:
  8640  004112  90D8               	bcf	status,0,c
  8641  004114  361C               	rlcf	___aodiv@divisor^0,f,c
  8642  004116  361D               	rlcf	(___aodiv@divisor+1)^0,f,c
  8643  004118  361E               	rlcf	(___aodiv@divisor+2)^0,f,c
  8644  00411A  361F               	rlcf	(___aodiv@divisor+3)^0,f,c
  8645  00411C  3620               	rlcf	(___aodiv@divisor+4)^0,f,c
  8646  00411E  3621               	rlcf	(___aodiv@divisor+5)^0,f,c
  8647  004120  3622               	rlcf	(___aodiv@divisor+6)^0,f,c
  8648  004122  3623               	rlcf	(___aodiv@divisor+7)^0,f,c
  8649  004124  2A24               	incf	___aodiv@counter^0,f,c
  8650  004126                     l7887:
  8651  004126  AE23               	btfss	(___aodiv@divisor+7)^0,7,c
  8652  004128  EF98  F020         	goto	u8041
  8653  00412C  EF9A  F020         	goto	u8040
  8654  004130                     u8041:
  8655  004130  EF89  F020         	goto	l7885
  8656  004134                     u8040:
  8657  004134                     l7889:
  8658  004134  90D8               	bcf	status,0,c
  8659  004136  3626               	rlcf	___aodiv@quotient^0,f,c
  8660  004138  3627               	rlcf	(___aodiv@quotient+1)^0,f,c
  8661  00413A  3628               	rlcf	(___aodiv@quotient+2)^0,f,c
  8662  00413C  3629               	rlcf	(___aodiv@quotient+3)^0,f,c
  8663  00413E  362A               	rlcf	(___aodiv@quotient+4)^0,f,c
  8664  004140  362B               	rlcf	(___aodiv@quotient+5)^0,f,c
  8665  004142  362C               	rlcf	(___aodiv@quotient+6)^0,f,c
  8666  004144  362D               	rlcf	(___aodiv@quotient+7)^0,f,c
  8667  004146  501C               	movf	___aodiv@divisor^0,w,c
  8668  004148  5C14               	subwf	___aodiv@dividend^0,w,c
  8669  00414A  501D               	movf	(___aodiv@divisor+1)^0,w,c
  8670  00414C  5815               	subwfb	(___aodiv@dividend+1)^0,w,c
  8671  00414E  501E               	movf	(___aodiv@divisor+2)^0,w,c
  8672  004150  5816               	subwfb	(___aodiv@dividend+2)^0,w,c
  8673  004152  501F               	movf	(___aodiv@divisor+3)^0,w,c
  8674  004154  5817               	subwfb	(___aodiv@dividend+3)^0,w,c
  8675  004156  5020               	movf	(___aodiv@divisor+4)^0,w,c
  8676  004158  5818               	subwfb	(___aodiv@dividend+4)^0,w,c
  8677  00415A  5021               	movf	(___aodiv@divisor+5)^0,w,c
  8678  00415C  5819               	subwfb	(___aodiv@dividend+5)^0,w,c
  8679  00415E  5022               	movf	(___aodiv@divisor+6)^0,w,c
  8680  004160  581A               	subwfb	(___aodiv@dividend+6)^0,w,c
  8681  004162  5023               	movf	(___aodiv@divisor+7)^0,w,c
  8682  004164  581B               	subwfb	(___aodiv@dividend+7)^0,w,c
  8683  004166  A0D8               	btfss	status,0,c
  8684  004168  EFB8  F020         	goto	u8051
  8685  00416C  EFBA  F020         	goto	u8050
  8686  004170                     u8051:
  8687  004170  EFCB  F020         	goto	l7897
  8688  004174                     u8050:
  8689  004174  501C               	movf	___aodiv@divisor^0,w,c
  8690  004176  5E14               	subwf	___aodiv@dividend^0,f,c
  8691  004178  501D               	movf	(___aodiv@divisor+1)^0,w,c
  8692  00417A  5A15               	subwfb	(___aodiv@dividend+1)^0,f,c
  8693  00417C  501E               	movf	(___aodiv@divisor+2)^0,w,c
  8694  00417E  5A16               	subwfb	(___aodiv@dividend+2)^0,f,c
  8695  004180  501F               	movf	(___aodiv@divisor+3)^0,w,c
  8696  004182  5A17               	subwfb	(___aodiv@dividend+3)^0,f,c
  8697  004184  5020               	movf	(___aodiv@divisor+4)^0,w,c
  8698  004186  5A18               	subwfb	(___aodiv@dividend+4)^0,f,c
  8699  004188  5021               	movf	(___aodiv@divisor+5)^0,w,c
  8700  00418A  5A19               	subwfb	(___aodiv@dividend+5)^0,f,c
  8701  00418C  5022               	movf	(___aodiv@divisor+6)^0,w,c
  8702  00418E  5A1A               	subwfb	(___aodiv@dividend+6)^0,f,c
  8703  004190  5023               	movf	(___aodiv@divisor+7)^0,w,c
  8704  004192  5A1B               	subwfb	(___aodiv@dividend+7)^0,f,c
  8705  004194  8026               	bsf	___aodiv@quotient^0,0,c
  8706  004196                     l7897:
  8707  004196  90D8               	bcf	status,0,c
  8708  004198  3223               	rrcf	(___aodiv@divisor+7)^0,f,c
  8709  00419A  3222               	rrcf	(___aodiv@divisor+6)^0,f,c
  8710  00419C  3221               	rrcf	(___aodiv@divisor+5)^0,f,c
  8711  00419E  3220               	rrcf	(___aodiv@divisor+4)^0,f,c
  8712  0041A0  321F               	rrcf	(___aodiv@divisor+3)^0,f,c
  8713  0041A2  321E               	rrcf	(___aodiv@divisor+2)^0,f,c
  8714  0041A4  321D               	rrcf	(___aodiv@divisor+1)^0,f,c
  8715  0041A6  321C               	rrcf	___aodiv@divisor^0,f,c
  8716  0041A8  2E24               	decfsz	___aodiv@counter^0,f,c
  8717  0041AA  EF9A  F020         	goto	l7889
  8718  0041AE                     l7901:
  8719  0041AE  5025               	movf	___aodiv@sign^0,w,c
  8720  0041B0  B4D8               	btfsc	status,2,c
  8721  0041B2  EFDD  F020         	goto	u8061
  8722  0041B6  EFDF  F020         	goto	u8060
  8723  0041BA                     u8061:
  8724  0041BA  EFEF  F020         	goto	l7905
  8725  0041BE                     u8060:
  8726  0041BE  1E2D               	comf	(___aodiv@quotient+7)^0,f,c
  8727  0041C0  1E2C               	comf	(___aodiv@quotient+6)^0,f,c
  8728  0041C2  1E2B               	comf	(___aodiv@quotient+5)^0,f,c
  8729  0041C4  1E2A               	comf	(___aodiv@quotient+4)^0,f,c
  8730  0041C6  1E29               	comf	(___aodiv@quotient+3)^0,f,c
  8731  0041C8  1E28               	comf	(___aodiv@quotient+2)^0,f,c
  8732  0041CA  1E27               	comf	(___aodiv@quotient+1)^0,f,c
  8733  0041CC  6C26               	negf	___aodiv@quotient^0,c
  8734  0041CE  0E00               	movlw	0
  8735  0041D0  2227               	addwfc	(___aodiv@quotient+1)^0,f,c
  8736  0041D2  2228               	addwfc	(___aodiv@quotient+2)^0,f,c
  8737  0041D4  2229               	addwfc	(___aodiv@quotient+3)^0,f,c
  8738  0041D6  222A               	addwfc	(___aodiv@quotient+4)^0,f,c
  8739  0041D8  222B               	addwfc	(___aodiv@quotient+5)^0,f,c
  8740  0041DA  222C               	addwfc	(___aodiv@quotient+6)^0,f,c
  8741  0041DC  222D               	addwfc	(___aodiv@quotient+7)^0,f,c
  8742  0041DE                     l7905:
  8743  0041DE  C026  F014         	movff	___aodiv@quotient,?___aodiv
  8744  0041E2  C027  F015         	movff	___aodiv@quotient+1,?___aodiv+1
  8745  0041E6  C028  F016         	movff	___aodiv@quotient+2,?___aodiv+2
  8746  0041EA  C029  F017         	movff	___aodiv@quotient+3,?___aodiv+3
  8747  0041EE  C02A  F018         	movff	___aodiv@quotient+4,?___aodiv+4
  8748  0041F2  C02B  F019         	movff	___aodiv@quotient+5,?___aodiv+5
  8749  0041F6  C02C  F01A         	movff	___aodiv@quotient+6,?___aodiv+6
  8750  0041FA  C02D  F01B         	movff	___aodiv@quotient+7,?___aodiv+7
  8751  0041FE  0012               	return		;funcret
  8752  004200                     __end_of___aodiv:
  8753                           	callstack 0
  8754                           
  8755 ;; *************** function ___lwdiv *****************
  8756 ;; Defined at:
  8757 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
  8758 ;; Parameters:    Size  Location     Type
  8759 ;;  dividend        2   19[COMRAM] unsigned int 
  8760 ;;  divisor         2   21[COMRAM] unsigned int 
  8761 ;; Auto vars:     Size  Location     Type
  8762 ;;  quotient        2   24[COMRAM] unsigned int 
  8763 ;;  counter         1   23[COMRAM] unsigned char 
  8764 ;; Return value:  Size  Location     Type
  8765 ;;                  2   19[COMRAM] unsigned int 
  8766 ;; Registers used:
  8767 ;;		wreg, status,2, status,0
  8768 ;; Tracked objects:
  8769 ;;		On entry : 0/0
  8770 ;;		On exit  : 0/0
  8771 ;;		Unchanged: 0/0
  8772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8773 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8774 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8776 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8777 ;;Total ram usage:        7 bytes
  8778 ;; Hardware stack levels used: 1
  8779 ;; Hardware stack levels required when called: 8
  8780 ;; This function calls:
  8781 ;;		Nothing
  8782 ;; This function is called by:
  8783 ;;		_checkCurveCount
  8784 ;; This function uses a non-reentrant model
  8785 ;;
  8786                           
  8787                           	psect	text33
  8788  005708                     __ptext33:
  8789                           	callstack 0
  8790  005708                     ___lwdiv:
  8791                           	callstack 20
  8792  005708  0E00               	movlw	0
  8793  00570A  6E1A               	movwf	(___lwdiv@quotient+1)^0,c
  8794  00570C  0E00               	movlw	0
  8795  00570E  6E19               	movwf	___lwdiv@quotient^0,c
  8796  005710  5016               	movf	___lwdiv@divisor^0,w,c
  8797  005712  1017               	iorwf	(___lwdiv@divisor+1)^0,w,c
  8798  005714  B4D8               	btfsc	status,2,c
  8799  005716  EF8F  F02B         	goto	u10331
  8800  00571A  EF91  F02B         	goto	u10330
  8801  00571E                     u10331:
  8802  00571E  EFB9  F02B         	goto	l1894
  8803  005722                     u10330:
  8804  005722  0E01               	movlw	1
  8805  005724  6E18               	movwf	___lwdiv@counter^0,c
  8806  005726  EF99  F02B         	goto	l9171
  8807  00572A                     l9169:
  8808  00572A  90D8               	bcf	status,0,c
  8809  00572C  3616               	rlcf	___lwdiv@divisor^0,f,c
  8810  00572E  3617               	rlcf	(___lwdiv@divisor+1)^0,f,c
  8811  005730  2A18               	incf	___lwdiv@counter^0,f,c
  8812  005732                     l9171:
  8813  005732  AE17               	btfss	(___lwdiv@divisor+1)^0,7,c
  8814  005734  EF9E  F02B         	goto	u10341
  8815  005738  EFA0  F02B         	goto	u10340
  8816  00573C                     u10341:
  8817  00573C  EF95  F02B         	goto	l9169
  8818  005740                     u10340:
  8819  005740                     l9173:
  8820  005740  90D8               	bcf	status,0,c
  8821  005742  3619               	rlcf	___lwdiv@quotient^0,f,c
  8822  005744  361A               	rlcf	(___lwdiv@quotient+1)^0,f,c
  8823  005746  5016               	movf	___lwdiv@divisor^0,w,c
  8824  005748  5C14               	subwf	___lwdiv@dividend^0,w,c
  8825  00574A  5017               	movf	(___lwdiv@divisor+1)^0,w,c
  8826  00574C  5815               	subwfb	(___lwdiv@dividend+1)^0,w,c
  8827  00574E  A0D8               	btfss	status,0,c
  8828  005750  EFAC  F02B         	goto	u10351
  8829  005754  EFAE  F02B         	goto	u10350
  8830  005758                     u10351:
  8831  005758  EFB3  F02B         	goto	l9181
  8832  00575C                     u10350:
  8833  00575C  5016               	movf	___lwdiv@divisor^0,w,c
  8834  00575E  5E14               	subwf	___lwdiv@dividend^0,f,c
  8835  005760  5017               	movf	(___lwdiv@divisor+1)^0,w,c
  8836  005762  5A15               	subwfb	(___lwdiv@dividend+1)^0,f,c
  8837  005764  8019               	bsf	___lwdiv@quotient^0,0,c
  8838  005766                     l9181:
  8839  005766  90D8               	bcf	status,0,c
  8840  005768  3217               	rrcf	(___lwdiv@divisor+1)^0,f,c
  8841  00576A  3216               	rrcf	___lwdiv@divisor^0,f,c
  8842  00576C  2E18               	decfsz	___lwdiv@counter^0,f,c
  8843  00576E  EFA0  F02B         	goto	l9173
  8844  005772                     l1894:
  8845  005772  C019  F014         	movff	___lwdiv@quotient,?___lwdiv
  8846  005776  C01A  F015         	movff	___lwdiv@quotient+1,?___lwdiv+1
  8847  00577A  0012               	return		;funcret
  8848  00577C                     __end_of___lwdiv:
  8849                           	callstack 0
  8850                           
  8851 ;; *************** function _checkBatt *****************
  8852 ;; Defined at:
  8853 ;;		line 90 in file "main.c"
  8854 ;; Parameters:    Size  Location     Type
  8855 ;;		None
  8856 ;; Auto vars:     Size  Location     Type
  8857 ;;		None
  8858 ;; Return value:  Size  Location     Type
  8859 ;;                  1    wreg      _Bool 
  8860 ;; Registers used:
  8861 ;;		wreg, status,2, status,0, cstack
  8862 ;; Tracked objects:
  8863 ;;		On entry : 0/0
  8864 ;;		On exit  : 0/0
  8865 ;;		Unchanged: 0/0
  8866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8871 ;;Total ram usage:        0 bytes
  8872 ;; Hardware stack levels used: 1
  8873 ;; Hardware stack levels required when called: 10
  8874 ;; This function calls:
  8875 ;;		___flge
  8876 ;;		___xxtofl
  8877 ;;		_getBatteryVoltage
  8878 ;;		_setSteering
  8879 ;; This function is called by:
  8880 ;;		_loop
  8881 ;; This function uses a non-reentrant model
  8882 ;;
  8883                           
  8884                           	psect	text34
  8885  005676                     __ptext34:
  8886                           	callstack 0
  8887  005676                     _checkBatt:
  8888                           	callstack 19
  8889  005676                     
  8890                           ;main.c: 91:     ++battCheckCount;
  8891  005676  0101               	movlb	1	; () banked
  8892  005678  4B34               	infsnz	_battCheckCount& (0+255),f,b
  8893  00567A  2B35               	incf	(_battCheckCount+1)& (0+255),f,b
  8894  00567C                     
  8895                           ; BSR set to: 1
  8896                           ;main.c: 92:     if (battCheckCount > (500)) {
  8897  00567C  0EF5               	movlw	245
  8898  00567E  5D34               	subwf	_battCheckCount& (0+255),w,b
  8899  005680  0E01               	movlw	1
  8900  005682  5935               	subwfb	(_battCheckCount+1)& (0+255),w,b
  8901  005684  A0D8               	btfss	status,0,c
  8902  005686  EF47  F02B         	goto	u10391
  8903  00568A  EF49  F02B         	goto	u10390
  8904  00568E                     u10391:
  8905  00568E  EF82  F02B         	goto	l9231
  8906  005692                     u10390:
  8907  005692                     
  8908                           ; BSR set to: 1
  8909                           ;main.c: 93:         battCheckCount = 0;
  8910  005692  0E00               	movlw	0
  8911  005694  6F35               	movwf	(_battCheckCount+1)& (0+255),b
  8912  005696  0E00               	movlw	0
  8913  005698  6F34               	movwf	_battCheckCount& (0+255),b
  8914  00569A                     
  8915                           ; BSR set to: 1
  8916                           ;main.c: 94:         getBatteryVoltage();
  8917  00569A  EC55  F031         	call	_getBatteryVoltage	;wreg free
  8918  00569E                     
  8919                           ;main.c: 96:         if (BatteryVolt < (7.4) * 409.6) {
  8920  00569E  C12A  F01C         	movff	_BatteryVolt,___xxtofl@val
  8921  0056A2  C12B  F01D         	movff	_BatteryVolt+1,___xxtofl@val+1
  8922  0056A6  6A1E               	clrf	(___xxtofl@val+2)^0,c
  8923  0056A8  6A1F               	clrf	(___xxtofl@val+3)^0,c
  8924  0056AA  0E00               	movlw	0
  8925  0056AC  EC62  F01F         	call	___xxtofl
  8926  0056B0  C01C  F06D         	movff	?___xxtofl,___flge@ff1
  8927  0056B4  C01D  F06E         	movff	?___xxtofl+1,___flge@ff1+1
  8928  0056B8  C01E  F06F         	movff	?___xxtofl+2,___flge@ff1+2
  8929  0056BC  C01F  F070         	movff	?___xxtofl+3,___flge@ff1+3
  8930  0056C0  0EA4               	movlw	164
  8931  0056C2  0100               	movlb	0	; () banked
  8932  0056C4  6F71               	movwf	___flge@ff2& (0+255),b
  8933  0056C6  0E70               	movlw	112
  8934  0056C8  6F72               	movwf	(___flge@ff2+1)& (0+255),b
  8935  0056CA  0E3D               	movlw	61
  8936  0056CC  6F73               	movwf	(___flge@ff2+2)& (0+255),b
  8937  0056CE  0E45               	movlw	69
  8938  0056D0  6F74               	movwf	(___flge@ff2+3)& (0+255),b
  8939  0056D2  EC9C  F024         	call	___flge	;wreg free
  8940  0056D6  0100               	movlb	0	; () banked
  8941  0056D8  B0D8               	btfsc	status,0,c
  8942  0056DA  EF71  F02B         	goto	u10401
  8943  0056DE  EF73  F02B         	goto	u10400
  8944  0056E2                     u10401:
  8945  0056E2  EF82  F02B         	goto	l9231
  8946  0056E6                     u10400:
  8947  0056E6                     
  8948                           ; BSR set to: 0
  8949                           ;main.c: 97:             setSpeed = 0;
  8950  0056E6  0E00               	movlw	0
  8951  0056E8  6FF0               	movwf	(_setSpeed+1)& (0+255),b
  8952  0056EA  0E00               	movlw	0
  8953  0056EC  6FEF               	movwf	_setSpeed& (0+255),b
  8954  0056EE                     
  8955                           ; BSR set to: 0
  8956                           ;main.c: 98:             setSteering(0, Front);
  8957  0056EE  0E00               	movlw	0
  8958  0056F0  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  8959  0056F2  0E00               	movlw	0
  8960  0056F4  6F83               	movwf	setSteering@steering& (0+255),b
  8961  0056F6  0E03               	movlw	3
  8962  0056F8  6F85               	movwf	setSteering@steeringMode& (0+255),b
  8963  0056FA  EC86  F01C         	call	_setSteering	;wreg free
  8964  0056FE                     
  8965                           ;main.c: 99:             return 1;
  8966  0056FE  0E01               	movlw	1
  8967  005700  EF83  F02B         	goto	l1265
  8968  005704                     l9231:
  8969                           
  8970                           ;main.c: 102:     return 0;
  8971  005704  0E00               	movlw	0
  8972  005706                     l1265:
  8973  005706  0012               	return		;funcret
  8974  005708                     __end_of_checkBatt:
  8975                           	callstack 0
  8976                           
  8977 ;; *************** function _getBatteryVoltage *****************
  8978 ;; Defined at:
  8979 ;;		line 85 in file "main.c"
  8980 ;; Parameters:    Size  Location     Type
  8981 ;;		None
  8982 ;; Auto vars:     Size  Location     Type
  8983 ;;		None
  8984 ;; Return value:  Size  Location     Type
  8985 ;;                  1    wreg      void 
  8986 ;; Registers used:
  8987 ;;		wreg, status,2, status,0, cstack
  8988 ;; Tracked objects:
  8989 ;;		On entry : 0/0
  8990 ;;		On exit  : 0/0
  8991 ;;		Unchanged: 0/0
  8992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8997 ;;Total ram usage:        0 bytes
  8998 ;; Hardware stack levels used: 1
  8999 ;; Hardware stack levels required when called: 9
  9000 ;; This function calls:
  9001 ;;		_ADCC_GetSingleConversion
  9002 ;; This function is called by:
  9003 ;;		_loop
  9004 ;;		_checkBatt
  9005 ;; This function uses a non-reentrant model
  9006 ;;
  9007                           
  9008                           	psect	text35
  9009  0062AA                     __ptext35:
  9010                           	callstack 0
  9011  0062AA                     _getBatteryVoltage:
  9012                           	callstack 20
  9013  0062AA                     
  9014                           ;main.c: 86:     BatteryVolt = ADCC_GetSingleConversion(aiBatt);
  9015  0062AA  0E22               	movlw	34
  9016  0062AC  ECB8  F02F         	call	_ADCC_GetSingleConversion
  9017  0062B0  C014  F12A         	movff	?_ADCC_GetSingleConversion,_BatteryVolt
  9018  0062B4  C015  F12B         	movff	?_ADCC_GetSingleConversion+1,_BatteryVolt+1
  9019  0062B8  0012               	return		;funcret
  9020  0062BA                     __end_of_getBatteryVoltage:
  9021                           	callstack 0
  9022                           
  9023 ;; *************** function _ADCC_GetSingleConversion *****************
  9024 ;; Defined at:
  9025 ;;		line 137 in file "mcc_generated_files/adcc.c"
  9026 ;; Parameters:    Size  Location     Type
  9027 ;;  channel         1    wreg     enum E16058
  9028 ;; Auto vars:     Size  Location     Type
  9029 ;;  channel         1   23[COMRAM] enum E16058
  9030 ;; Return value:  Size  Location     Type
  9031 ;;                  2   19[COMRAM] unsigned short 
  9032 ;; Registers used:
  9033 ;;		wreg, status,2, status,0
  9034 ;; Tracked objects:
  9035 ;;		On entry : 0/0
  9036 ;;		On exit  : 0/0
  9037 ;;		Unchanged: 0/0
  9038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9039 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9040 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9041 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9042 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9043 ;;Total ram usage:        5 bytes
  9044 ;; Hardware stack levels used: 1
  9045 ;; Hardware stack levels required when called: 8
  9046 ;; This function calls:
  9047 ;;		Nothing
  9048 ;; This function is called by:
  9049 ;;		_getBatteryVoltage
  9050 ;; This function uses a non-reentrant model
  9051 ;;
  9052                           
  9053                           	psect	text36
  9054  005F70                     __ptext36:
  9055                           	callstack 0
  9056  005F70                     _ADCC_GetSingleConversion:
  9057                           	callstack 20
  9058                           
  9059                           ;incstack = 0
  9060                           ;ADCC_GetSingleConversion@channel stored from wreg
  9061  005F70  6E18               	movwf	ADCC_GetSingleConversion@channel^0,c
  9062  005F72                     
  9063                           ;mcc_generated_files/adcc.c: 137: adc_result_t ADCC_GetSingleConversion(adcc_channel_t c
      +                          hannel);mcc_generated_files/adcc.c: 138: {;mcc_generated_files/adcc.c: 140:     ADPCH = 
      +                          channel;
  9064  005F72  0060  F063  FEF1   	movff	ADCC_GetSingleConversion@channel,16113	;volatile
  9065  005F78                     
  9066                           ;mcc_generated_files/adcc.c: 143:     ADCON0bits.ADON = 1;
  9067  005F78  013E               	movlb	62	; () banked
  9068  005F7A  8FF8               	bsf	248,7,b	;volatile
  9069  005F7C                     
  9070                           ; BSR set to: 62
  9071                           ;mcc_generated_files/adcc.c: 146:     ADCON0bits.ADCONT = 0;
  9072  005F7C  9DF8               	bcf	248,6,b	;volatile
  9073  005F7E                     
  9074                           ; BSR set to: 62
  9075                           ;mcc_generated_files/adcc.c: 149:     ADCON0bits.ADGO = 1;
  9076  005F7E  81F8               	bsf	248,0,b	;volatile
  9077  005F80                     l1054:
  9078                           
  9079                           ; BSR set to: 62
  9080                           ;mcc_generated_files/adcc.c: 153:     while (ADCON0bits.ADGO)
  9081  005F80  B1F8               	btfsc	248,0,b	;volatile
  9082  005F82  EFC5  F02F         	goto	u6411
  9083  005F86  EFC7  F02F         	goto	u6410
  9084  005F8A                     u6411:
  9085  005F8A  EFC0  F02F         	goto	l1054
  9086  005F8E                     u6410:
  9087  005F8E                     
  9088                           ; BSR set to: 62
  9089                           ;mcc_generated_files/adcc.c: 159:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  9090  005F8E  51F0               	movf	240,w,b	;volatile
  9091  005F90  6E17               	movwf	(??_ADCC_GetSingleConversion+1)^0,c
  9092  005F92  6A16               	clrf	??_ADCC_GetSingleConversion^0,c
  9093  005F94  51EF               	movf	239,w,b	;volatile
  9094  005F96  2416               	addwf	??_ADCC_GetSingleConversion^0,w,c
  9095  005F98  6E14               	movwf	?_ADCC_GetSingleConversion^0,c
  9096  005F9A  0E00               	movlw	0
  9097  005F9C  2017               	addwfc	(??_ADCC_GetSingleConversion+1)^0,w,c
  9098  005F9E  6E15               	movwf	(?_ADCC_GetSingleConversion+1)^0,c
  9099  005FA0                     
  9100                           ; BSR set to: 62
  9101  005FA0  0012               	return		;funcret
  9102  005FA2                     __end_of_ADCC_GetSingleConversion:
  9103                           	callstack 0
  9104                           
  9105 ;; *************** function ___flge *****************
  9106 ;; Defined at:
  9107 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  9108 ;; Parameters:    Size  Location     Type
  9109 ;;  ff1             4   13[BANK0 ] unsigned short 
  9110 ;;  ff2             4   17[BANK0 ] unsigned short 
  9111 ;; Auto vars:     Size  Location     Type
  9112 ;;		None
  9113 ;; Return value:  Size  Location     Type
  9114 ;;		None               void
  9115 ;; Registers used:
  9116 ;;		wreg, status,2, status,0
  9117 ;; Tracked objects:
  9118 ;;		On entry : 0/0
  9119 ;;		On exit  : 0/0
  9120 ;;		Unchanged: 0/0
  9121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9122 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9124 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9125 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9126 ;;Total ram usage:       12 bytes
  9127 ;; Hardware stack levels used: 1
  9128 ;; Hardware stack levels required when called: 8
  9129 ;; This function calls:
  9130 ;;		Nothing
  9131 ;; This function is called by:
  9132 ;;		_loop
  9133 ;;		_checkBatt
  9134 ;;		_efgtoa
  9135 ;; This function uses a non-reentrant model
  9136 ;;
  9137                           
  9138                           	psect	text37
  9139  004938                     __ptext37:
  9140                           	callstack 0
  9141  004938                     ___flge:
  9142                           	callstack 16
  9143  004938  0E00               	movlw	0
  9144  00493A  0100               	movlb	0	; () banked
  9145  00493C  156D               	andwf	___flge@ff1& (0+255),w,b
  9146  00493E  6E36               	movwf	??___flge^0,c
  9147  004940  0E00               	movlw	0
  9148  004942  156E               	andwf	(___flge@ff1+1)& (0+255),w,b
  9149  004944  6E37               	movwf	(??___flge+1)^0,c
  9150  004946  0E80               	movlw	128
  9151  004948  156F               	andwf	(___flge@ff1+2)& (0+255),w,b
  9152  00494A  6E38               	movwf	(??___flge+2)^0,c
  9153  00494C  0E7F               	movlw	127
  9154  00494E  1570               	andwf	(___flge@ff1+3)& (0+255),w,b
  9155  004950  6E39               	movwf	(??___flge+3)^0,c
  9156  004952  5036               	movf	??___flge^0,w,c
  9157  004954  1037               	iorwf	(??___flge+1)^0,w,c
  9158  004956  1038               	iorwf	(??___flge+2)^0,w,c
  9159  004958  1039               	iorwf	(??___flge+3)^0,w,c
  9160  00495A  A4D8               	btfss	status,2,c
  9161  00495C  EFB2  F024         	goto	u8701
  9162  004960  EFB4  F024         	goto	u8700
  9163  004964                     u8701:
  9164  004964  EFBC  F024         	goto	l8319
  9165  004968                     u8700:
  9166  004968                     
  9167                           ; BSR set to: 0
  9168  004968  0E00               	movlw	0
  9169  00496A  6F6D               	movwf	___flge@ff1& (0+255),b
  9170  00496C  0E00               	movlw	0
  9171  00496E  6F6E               	movwf	(___flge@ff1+1)& (0+255),b
  9172  004970  0E00               	movlw	0
  9173  004972  6F6F               	movwf	(___flge@ff1+2)& (0+255),b
  9174  004974  0E00               	movlw	0
  9175  004976  6F70               	movwf	(___flge@ff1+3)& (0+255),b
  9176  004978                     l8319:
  9177                           
  9178                           ; BSR set to: 0
  9179  004978  0E00               	movlw	0
  9180  00497A  1571               	andwf	___flge@ff2& (0+255),w,b
  9181  00497C  6E36               	movwf	??___flge^0,c
  9182  00497E  0E00               	movlw	0
  9183  004980  1572               	andwf	(___flge@ff2+1)& (0+255),w,b
  9184  004982  6E37               	movwf	(??___flge+1)^0,c
  9185  004984  0E80               	movlw	128
  9186  004986  1573               	andwf	(___flge@ff2+2)& (0+255),w,b
  9187  004988  6E38               	movwf	(??___flge+2)^0,c
  9188  00498A  0E7F               	movlw	127
  9189  00498C  1574               	andwf	(___flge@ff2+3)& (0+255),w,b
  9190  00498E  6E39               	movwf	(??___flge+3)^0,c
  9191  004990  5036               	movf	??___flge^0,w,c
  9192  004992  1037               	iorwf	(??___flge+1)^0,w,c
  9193  004994  1038               	iorwf	(??___flge+2)^0,w,c
  9194  004996  1039               	iorwf	(??___flge+3)^0,w,c
  9195  004998  A4D8               	btfss	status,2,c
  9196  00499A  EFD1  F024         	goto	u8711
  9197  00499E  EFD3  F024         	goto	u8710
  9198  0049A2                     u8711:
  9199  0049A2  EFDB  F024         	goto	l8323
  9200  0049A6                     u8710:
  9201  0049A6                     
  9202                           ; BSR set to: 0
  9203  0049A6  0E00               	movlw	0
  9204  0049A8  6F71               	movwf	___flge@ff2& (0+255),b
  9205  0049AA  0E00               	movlw	0
  9206  0049AC  6F72               	movwf	(___flge@ff2+1)& (0+255),b
  9207  0049AE  0E00               	movlw	0
  9208  0049B0  6F73               	movwf	(___flge@ff2+2)& (0+255),b
  9209  0049B2  0E00               	movlw	0
  9210  0049B4  6F74               	movwf	(___flge@ff2+3)& (0+255),b
  9211  0049B6                     l8323:
  9212                           
  9213                           ; BSR set to: 0
  9214  0049B6  AF70               	btfss	(___flge@ff1+3)& (0+255),7,b
  9215  0049B8  EFE0  F024         	goto	u8721
  9216  0049BC  EFE2  F024         	goto	u8720
  9217  0049C0                     u8721:
  9218  0049C0  EFEB  F024         	goto	l8327
  9219  0049C4                     u8720:
  9220  0049C4                     
  9221                           ; BSR set to: 0
  9222  0049C4  6D6D               	negf	___flge@ff1& (0+255),b
  9223  0049C6  1F6E               	comf	(___flge@ff1+1)& (0+255),f,b
  9224  0049C8  B0D8               	btfsc	status,0,c
  9225  0049CA  2B6E               	incf	(___flge@ff1+1)& (0+255),f,b
  9226  0049CC  1F6F               	comf	(___flge@ff1+2)& (0+255),f,b
  9227  0049CE  B0D8               	btfsc	status,0,c
  9228  0049D0  2B6F               	incf	(___flge@ff1+2)& (0+255),f,b
  9229  0049D2  0E80               	movlw	128
  9230  0049D4  5770               	subfwb	(___flge@ff1+3)& (0+255),f,b
  9231  0049D6                     l8327:
  9232                           
  9233                           ; BSR set to: 0
  9234  0049D6  AF74               	btfss	(___flge@ff2+3)& (0+255),7,b
  9235  0049D8  EFF0  F024         	goto	u8731
  9236  0049DC  EFF2  F024         	goto	u8730
  9237  0049E0                     u8731:
  9238  0049E0  EFFB  F024         	goto	l1668
  9239  0049E4                     u8730:
  9240  0049E4                     
  9241                           ; BSR set to: 0
  9242  0049E4  6D71               	negf	___flge@ff2& (0+255),b
  9243  0049E6  1F72               	comf	(___flge@ff2+1)& (0+255),f,b
  9244  0049E8  B0D8               	btfsc	status,0,c
  9245  0049EA  2B72               	incf	(___flge@ff2+1)& (0+255),f,b
  9246  0049EC  1F73               	comf	(___flge@ff2+2)& (0+255),f,b
  9247  0049EE  B0D8               	btfsc	status,0,c
  9248  0049F0  2B73               	incf	(___flge@ff2+2)& (0+255),f,b
  9249  0049F2  0E80               	movlw	128
  9250  0049F4  5774               	subfwb	(___flge@ff2+3)& (0+255),f,b
  9251  0049F6                     l1668:
  9252                           
  9253                           ; BSR set to: 0
  9254  0049F6  0E00               	movlw	0
  9255  0049F8  1B6D               	xorwf	___flge@ff1& (0+255),f,b
  9256  0049FA  0E00               	movlw	0
  9257  0049FC  1B6E               	xorwf	(___flge@ff1+1)& (0+255),f,b
  9258  0049FE  0E00               	movlw	0
  9259  004A00  1B6F               	xorwf	(___flge@ff1+2)& (0+255),f,b
  9260  004A02  0E80               	movlw	128
  9261  004A04  1B70               	xorwf	(___flge@ff1+3)& (0+255),f,b
  9262  004A06  0E00               	movlw	0
  9263  004A08  1B71               	xorwf	___flge@ff2& (0+255),f,b
  9264  004A0A  0E00               	movlw	0
  9265  004A0C  1B72               	xorwf	(___flge@ff2+1)& (0+255),f,b
  9266  004A0E  0E00               	movlw	0
  9267  004A10  1B73               	xorwf	(___flge@ff2+2)& (0+255),f,b
  9268  004A12  0E80               	movlw	128
  9269  004A14  1B74               	xorwf	(___flge@ff2+3)& (0+255),f,b
  9270  004A16  5171               	movf	___flge@ff2& (0+255),w,b
  9271  004A18  5D6D               	subwf	___flge@ff1& (0+255),w,b
  9272  004A1A  5172               	movf	(___flge@ff2+1)& (0+255),w,b
  9273  004A1C  596E               	subwfb	(___flge@ff1+1)& (0+255),w,b
  9274  004A1E  5173               	movf	(___flge@ff2+2)& (0+255),w,b
  9275  004A20  596F               	subwfb	(___flge@ff1+2)& (0+255),w,b
  9276  004A22  5174               	movf	(___flge@ff2+3)& (0+255),w,b
  9277  004A24  5970               	subwfb	(___flge@ff1+3)& (0+255),w,b
  9278  004A26  B0D8               	btfsc	status,0,c
  9279  004A28  EF18  F025         	goto	u8741
  9280  004A2C  EF1A  F025         	goto	u8740
  9281  004A30                     u8741:
  9282  004A30  EF1D  F025         	goto	l8333
  9283  004A34                     u8740:
  9284  004A34                     
  9285                           ; BSR set to: 0
  9286  004A34  90D8               	bcf	status,0,c
  9287  004A36  EF1E  F025         	goto	l1673
  9288  004A3A                     l8333:
  9289                           
  9290                           ; BSR set to: 0
  9291  004A3A  80D8               	bsf	status,0,c
  9292  004A3C                     l1673:
  9293                           
  9294                           ; BSR set to: 0
  9295  004A3C  0012               	return		;funcret
  9296  004A3E                     __end_of___flge:
  9297                           	callstack 0
  9298                           
  9299 ;; *************** function _calcSteering *****************
  9300 ;; Defined at:
  9301 ;;		line 230 in file "main.c"
  9302 ;; Parameters:    Size  Location     Type
  9303 ;;		None
  9304 ;; Auto vars:     Size  Location     Type
  9305 ;;  delta           2   46[BANK0 ] short 
  9306 ;; Return value:  Size  Location     Type
  9307 ;;                  1    wreg      void 
  9308 ;; Registers used:
  9309 ;;		wreg, status,2, status,0, cstack
  9310 ;; Tracked objects:
  9311 ;;		On entry : 0/0
  9312 ;;		On exit  : 0/0
  9313 ;;		Unchanged: 0/0
  9314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9316 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9317 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9318 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9319 ;;Total ram usage:        4 bytes
  9320 ;; Hardware stack levels used: 1
  9321 ;; Hardware stack levels required when called: 10
  9322 ;; This function calls:
  9323 ;;		_setSteering
  9324 ;; This function is called by:
  9325 ;;		_loop
  9326 ;; This function uses a non-reentrant model
  9327 ;;
  9328                           
  9329                           	psect	text38
  9330  003CE4                     __ptext38:
  9331                           	callstack 0
  9332  003CE4                     _calcSteering:
  9333                           	callstack 19
  9334  003CE4                     
  9335                           ;main.c: 231:     int16_t delta = (int16_t) (distLeft - distRight) - (int16_t) ((0) * 1.
      +                          4142135);
  9336  003CE4  0100               	movlb	0	; () banked
  9337  003CE6  51F5               	movf	_distRight& (0+255),w,b	;volatile
  9338  003CE8  5DF7               	subwf	_distLeft& (0+255),w,b	;volatile
  9339  003CEA  6F8E               	movwf	calcSteering@delta& (0+255),b
  9340  003CEC  51F6               	movf	(_distRight+1)& (0+255),w,b	;volatile
  9341  003CEE  59F8               	subwfb	(_distLeft+1)& (0+255),w,b	;volatile
  9342  003CF0  6F8F               	movwf	(calcSteering@delta+1)& (0+255),b
  9343                           
  9344                           ;main.c: 235:     switch (driveMode) {
  9345  003CF2  EFA3  F01E         	goto	l9287
  9346  003CF6                     l1322:
  9347  003CF6                     l9277:
  9348                           
  9349                           ; BSR set to: 0
  9350                           ;main.c: 240:             if (delta > (40)) {
  9351  003CF6  BF8F               	btfsc	(calcSteering@delta+1)& (0+255),7,b
  9352  003CF8  EF87  F01E         	goto	u10511
  9353  003CFC  518F               	movf	(calcSteering@delta+1)& (0+255),w,b
  9354  003CFE  E109               	bnz	u10510
  9355  003D00  0E29               	movlw	41
  9356  003D02  5D8E               	subwf	calcSteering@delta& (0+255),w,b
  9357  003D04  A0D8               	btfss	status,0,c
  9358  003D06  EF87  F01E         	goto	u10511
  9359  003D0A  EF89  F01E         	goto	u10510
  9360  003D0E                     u10511:
  9361  003D0E  EF8F  F01E         	goto	l9281
  9362  003D12                     u10510:
  9363  003D12                     
  9364                           ; BSR set to: 0
  9365                           ;main.c: 241:                 delta = (40);
  9366  003D12  0E00               	movlw	0
  9367  003D14  6F8F               	movwf	(calcSteering@delta+1)& (0+255),b
  9368  003D16  0E28               	movlw	40
  9369  003D18  6F8E               	movwf	calcSteering@delta& (0+255),b
  9370                           
  9371                           ;main.c: 242:             } else if (delta < -(40)) {
  9372  003D1A  EF34  F01F         	goto	l9319
  9373  003D1E                     l9281:
  9374                           
  9375                           ; BSR set to: 0
  9376  003D1E  AF8F               	btfss	(calcSteering@delta+1)& (0+255),7,b
  9377  003D20  EF9B  F01E         	goto	u10521
  9378  003D24  0ED8               	movlw	216
  9379  003D26  5D8E               	subwf	calcSteering@delta& (0+255),w,b
  9380  003D28  0EFF               	movlw	255
  9381  003D2A  598F               	subwfb	(calcSteering@delta+1)& (0+255),w,b
  9382  003D2C  B0D8               	btfsc	status,0,c
  9383  003D2E  EF9B  F01E         	goto	u10521
  9384  003D32  EF9D  F01E         	goto	u10520
  9385  003D36                     u10521:
  9386  003D36  EFC0  F01E         	goto	l1327
  9387  003D3A                     u10520:
  9388  003D3A                     
  9389                           ; BSR set to: 0
  9390                           ;main.c: 243:                 delta = -(40);
  9391  003D3A  0EFF               	movlw	255
  9392  003D3C  6F8F               	movwf	(calcSteering@delta+1)& (0+255),b
  9393  003D3E  0ED8               	movlw	216
  9394  003D40  6F8E               	movwf	calcSteering@delta& (0+255),b
  9395  003D42  EF34  F01F         	goto	l9319
  9396  003D46                     l9287:
  9397                           
  9398                           ; BSR set to: 0
  9399  003D46  51FC               	movf	_driveMode& (0+255),w,b
  9400  003D48  6F8C               	movwf	??_calcSteering& (0+255),b
  9401  003D4A  6B8D               	clrf	(??_calcSteering+1)& (0+255),b
  9402                           
  9403                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9404                           ; Switch size 1, requested type "simple"
  9405                           ; Number of cases is 1, Range of values is 0 to 0
  9406                           ; switch strategies available:
  9407                           ; Name         Instructions Cycles
  9408                           ; simple_byte            4     3 (average)
  9409                           ;	Chosen strategy is simple_byte
  9410  003D4C  518D               	movf	(??_calcSteering+1)& (0+255),w,b
  9411  003D4E  0A00               	xorlw	0	; case 0
  9412  003D50  B4D8               	btfsc	status,2,c
  9413  003D52  EFAD  F01E         	goto	l9623
  9414  003D56  EF34  F01F         	goto	l9319
  9415  003D5A                     l9623:
  9416                           
  9417                           ; BSR set to: 0
  9418                           ; Switch size 1, requested type "simple"
  9419                           ; Number of cases is 4, Range of values is 0 to 5
  9420                           ; switch strategies available:
  9421                           ; Name         Instructions Cycles
  9422                           ; simple_byte           13     7 (average)
  9423                           ;	Chosen strategy is simple_byte
  9424  003D5A  518C               	movf	??_calcSteering& (0+255),w,b
  9425  003D5C  0A00               	xorlw	0	; case 0
  9426  003D5E  B4D8               	btfsc	status,2,c
  9427  003D60  EF7B  F01E         	goto	l9277
  9428  003D64  0A01               	xorlw	1	; case 1
  9429  003D66  B4D8               	btfsc	status,2,c
  9430  003D68  EF7B  F01E         	goto	l1322
  9431  003D6C  0A05               	xorlw	5	; case 4
  9432  003D6E  B4D8               	btfsc	status,2,c
  9433  003D70  EF7B  F01E         	goto	l9277
  9434  003D74  0A01               	xorlw	1	; case 5
  9435  003D76  B4D8               	btfsc	status,2,c
  9436  003D78  EF7B  F01E         	goto	l9277
  9437  003D7C  EF34  F01F         	goto	l9319
  9438  003D80                     l1327:
  9439                           
  9440                           ; BSR set to: 0
  9441                           ;main.c: 250:     switch (driveMode) {
  9442  003D80  EF34  F01F         	goto	l9319
  9443  003D84                     l9289:
  9444                           
  9445                           ; BSR set to: 0
  9446                           ;main.c: 252:             setSteering(delta, Ratio);
  9447  003D84  C08E  F083         	movff	calcSteering@delta,setSteering@steering
  9448  003D88  C08F  F084         	movff	calcSteering@delta+1,setSteering@steering+1
  9449  003D8C  0E02               	movlw	2
  9450  003D8E  6F85               	movwf	setSteering@steeringMode& (0+255),b
  9451  003D90  EC86  F01C         	call	_setSteering	;wreg free
  9452                           
  9453                           ;main.c: 253:             break;
  9454  003D94  EF61  F01F         	goto	l1343
  9455  003D98                     l9291:
  9456                           
  9457                           ; BSR set to: 0
  9458                           ;main.c: 255:             setSteering(delta, Front);
  9459  003D98  C08E  F083         	movff	calcSteering@delta,setSteering@steering
  9460  003D9C  C08F  F084         	movff	calcSteering@delta+1,setSteering@steering+1
  9461  003DA0  0E03               	movlw	3
  9462  003DA2  6F85               	movwf	setSteering@steeringMode& (0+255),b
  9463  003DA4  EC86  F01C         	call	_setSteering	;wreg free
  9464                           
  9465                           ;main.c: 256:             break;
  9466  003DA8  EF61  F01F         	goto	l1343
  9467  003DAC                     l9293:
  9468                           
  9469                           ; BSR set to: 0
  9470                           ;main.c: 258:             setSteering(-(50), Inverted);
  9471  003DAC  0EFF               	movlw	255
  9472  003DAE  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  9473  003DB0  0ECE               	movlw	206
  9474  003DB2  6F83               	movwf	setSteering@steering& (0+255),b
  9475  003DB4  0E00               	movlw	0
  9476  003DB6  6F85               	movwf	setSteering@steeringMode& (0+255),b
  9477  003DB8  EC86  F01C         	call	_setSteering	;wreg free
  9478                           
  9479                           ;main.c: 259:             break;
  9480  003DBC  EF61  F01F         	goto	l1343
  9481  003DC0                     l9295:
  9482                           
  9483                           ; BSR set to: 0
  9484                           ;main.c: 261:             setSteering((50), Inverted);
  9485  003DC0  0E00               	movlw	0
  9486  003DC2  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  9487  003DC4  0E32               	movlw	50
  9488  003DC6  6F83               	movwf	setSteering@steering& (0+255),b
  9489  003DC8  0E00               	movlw	0
  9490  003DCA  6F85               	movwf	setSteering@steeringMode& (0+255),b
  9491  003DCC  EC86  F01C         	call	_setSteering	;wreg free
  9492                           
  9493                           ;main.c: 262:             break;
  9494  003DD0  EF61  F01F         	goto	l1343
  9495  003DD4                     l9297:
  9496                           
  9497                           ; BSR set to: 0
  9498                           ;main.c: 264:             if (curveMode == InCurve) {
  9499  003DD4  0E02               	movlw	2
  9500  003DD6  1841               	xorwf	_curveMode^0,w,c
  9501  003DD8  A4D8               	btfss	status,2,c
  9502  003DDA  EFF1  F01E         	goto	u10531
  9503  003DDE  EFF3  F01E         	goto	u10530
  9504  003DE2                     u10531:
  9505  003DE2  EFCC  F01E         	goto	l9291
  9506  003DE6                     u10530:
  9507  003DE6                     
  9508                           ; BSR set to: 0
  9509                           ;main.c: 265:                 setSteering((50), Ratio);
  9510  003DE6  0E00               	movlw	0
  9511  003DE8  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  9512  003DEA  0E32               	movlw	50
  9513  003DEC  6F83               	movwf	setSteering@steering& (0+255),b
  9514  003DEE  0E02               	movlw	2
  9515  003DF0  6F85               	movwf	setSteering@steeringMode& (0+255),b
  9516  003DF2  EC86  F01C         	call	_setSteering	;wreg free
  9517                           
  9518                           ;main.c: 266:             } else {
  9519  003DF6  EF61  F01F         	goto	l1343
  9520  003DFA                     l9303:
  9521                           
  9522                           ; BSR set to: 0
  9523                           ;main.c: 271:             if (curveMode == InCurve) {
  9524  003DFA  0E02               	movlw	2
  9525  003DFC  1841               	xorwf	_curveMode^0,w,c
  9526  003DFE  A4D8               	btfss	status,2,c
  9527  003E00  EF04  F01F         	goto	u10541
  9528  003E04  EF06  F01F         	goto	u10540
  9529  003E08                     u10541:
  9530  003E08  EFCC  F01E         	goto	l9291
  9531  003E0C                     u10540:
  9532  003E0C                     
  9533                           ; BSR set to: 0
  9534                           ;main.c: 272:                 setSteering(-(50), Ratio);
  9535  003E0C  0EFF               	movlw	255
  9536  003E0E  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  9537  003E10  0ECE               	movlw	206
  9538  003E12  6F83               	movwf	setSteering@steering& (0+255),b
  9539  003E14  0E02               	movlw	2
  9540  003E16  6F85               	movwf	setSteering@steeringMode& (0+255),b
  9541  003E18  EC86  F01C         	call	_setSteering	;wreg free
  9542                           
  9543                           ;main.c: 273:             } else {
  9544  003E1C  EF61  F01F         	goto	l1343
  9545  003E20                     l9309:
  9546                           
  9547                           ; BSR set to: 0
  9548                           ;main.c: 278:             delta = (50) - distLeft;
  9549  003E20  51F7               	movf	_distLeft& (0+255),w,b	;volatile
  9550  003E22  0832               	sublw	50
  9551  003E24  6F8E               	movwf	calcSteering@delta& (0+255),b
  9552  003E26  51F8               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  9553  003E28  A0D8               	btfss	status,0,c
  9554  003E2A  2AE8               	incf	wreg,f,c
  9555  003E2C  0800               	sublw	0
  9556  003E2E  6F8F               	movwf	(calcSteering@delta+1)& (0+255),b
  9557  003E30  EFCC  F01E         	goto	l9291
  9558  003E34                     l9313:
  9559                           
  9560                           ; BSR set to: 0
  9561                           ;main.c: 282:             delta = (50) - distRight;
  9562  003E34  51F5               	movf	_distRight& (0+255),w,b	;volatile
  9563  003E36  0832               	sublw	50
  9564  003E38  6F8E               	movwf	calcSteering@delta& (0+255),b
  9565  003E3A  51F6               	movf	(_distRight+1)& (0+255),w,b	;volatile
  9566  003E3C  A0D8               	btfss	status,0,c
  9567  003E3E  2AE8               	incf	wreg,f,c
  9568  003E40  0800               	sublw	0
  9569  003E42  6F8F               	movwf	(calcSteering@delta+1)& (0+255),b
  9570  003E44                     
  9571                           ; BSR set to: 0
  9572                           ;main.c: 283:             setSteering(-delta, Front);
  9573  003E44  C08E  F08C         	movff	calcSteering@delta,??_calcSteering
  9574  003E48  C08F  F08D         	movff	calcSteering@delta+1,??_calcSteering+1
  9575  003E4C  1F8C               	comf	??_calcSteering& (0+255),f,b
  9576  003E4E  1F8D               	comf	(??_calcSteering+1)& (0+255),f,b
  9577  003E50  4B8C               	infsnz	??_calcSteering& (0+255),f,b
  9578  003E52  2B8D               	incf	(??_calcSteering+1)& (0+255),f,b
  9579  003E54  C08C  F083         	movff	??_calcSteering,setSteering@steering
  9580  003E58  C08D  F084         	movff	??_calcSteering+1,setSteering@steering+1
  9581  003E5C  0E03               	movlw	3
  9582  003E5E  6F85               	movwf	setSteering@steeringMode& (0+255),b
  9583  003E60  EC86  F01C         	call	_setSteering	;wreg free
  9584                           
  9585                           ;main.c: 284:             break;
  9586  003E64  EF61  F01F         	goto	l1343
  9587  003E68                     l9319:
  9588                           
  9589                           ; BSR set to: 0
  9590  003E68  51FC               	movf	_driveMode& (0+255),w,b
  9591  003E6A  6F8C               	movwf	??_calcSteering& (0+255),b
  9592  003E6C  6B8D               	clrf	(??_calcSteering+1)& (0+255),b
  9593                           
  9594                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9595                           ; Switch size 1, requested type "simple"
  9596                           ; Number of cases is 1, Range of values is 0 to 0
  9597                           ; switch strategies available:
  9598                           ; Name         Instructions Cycles
  9599                           ; simple_byte            4     3 (average)
  9600                           ;	Chosen strategy is simple_byte
  9601  003E6E  518D               	movf	(??_calcSteering+1)& (0+255),w,b
  9602  003E70  0A00               	xorlw	0	; case 0
  9603  003E72  B4D8               	btfsc	status,2,c
  9604  003E74  EF3E  F01F         	goto	l9625
  9605  003E78  EF61  F01F         	goto	l1343
  9606  003E7C                     l9625:
  9607                           
  9608                           ; BSR set to: 0
  9609                           ; Switch size 1, requested type "simple"
  9610                           ; Number of cases is 8, Range of values is 0 to 7
  9611                           ; switch strategies available:
  9612                           ; Name         Instructions Cycles
  9613                           ; simple_byte           25    13 (average)
  9614                           ;	Chosen strategy is simple_byte
  9615  003E7C  518C               	movf	??_calcSteering& (0+255),w,b
  9616  003E7E  0A00               	xorlw	0	; case 0
  9617  003E80  B4D8               	btfsc	status,2,c
  9618  003E82  EFCC  F01E         	goto	l9291
  9619  003E86  0A01               	xorlw	1	; case 1
  9620  003E88  B4D8               	btfsc	status,2,c
  9621  003E8A  EFC2  F01E         	goto	l9289
  9622  003E8E  0A03               	xorlw	3	; case 2
  9623  003E90  B4D8               	btfsc	status,2,c
  9624  003E92  EFD6  F01E         	goto	l9293
  9625  003E96  0A01               	xorlw	1	; case 3
  9626  003E98  B4D8               	btfsc	status,2,c
  9627  003E9A  EFE0  F01E         	goto	l9295
  9628  003E9E  0A07               	xorlw	7	; case 4
  9629  003EA0  B4D8               	btfsc	status,2,c
  9630  003EA2  EFEA  F01E         	goto	l9297
  9631  003EA6  0A01               	xorlw	1	; case 5
  9632  003EA8  B4D8               	btfsc	status,2,c
  9633  003EAA  EFFD  F01E         	goto	l9303
  9634  003EAE  0A03               	xorlw	3	; case 6
  9635  003EB0  B4D8               	btfsc	status,2,c
  9636  003EB2  EF10  F01F         	goto	l9309
  9637  003EB6  0A01               	xorlw	1	; case 7
  9638  003EB8  B4D8               	btfsc	status,2,c
  9639  003EBA  EF1A  F01F         	goto	l9313
  9640  003EBE  EF61  F01F         	goto	l1343
  9641  003EC2                     l1343:
  9642  003EC2  0012               	return		;funcret
  9643  003EC4                     __end_of_calcSteering:
  9644                           	callstack 0
  9645                           
  9646 ;; *************** function _setSteering *****************
  9647 ;; Defined at:
  9648 ;;		line 399 in file "main.c"
  9649 ;; Parameters:    Size  Location     Type
  9650 ;;  steering        2   35[BANK0 ] short 
  9651 ;;  steeringMode    1   37[BANK0 ] enum E17305
  9652 ;; Auto vars:     Size  Location     Type
  9653 ;;  steeringB       2   42[BANK0 ] short 
  9654 ;;  steeringF       2   40[BANK0 ] short 
  9655 ;; Return value:  Size  Location     Type
  9656 ;;                  1    wreg      void 
  9657 ;; Registers used:
  9658 ;;		wreg, status,2, status,0, cstack
  9659 ;; Tracked objects:
  9660 ;;		On entry : 0/0
  9661 ;;		On exit  : 0/0
  9662 ;;		Unchanged: 0/0
  9663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9664 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9665 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9666 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9667 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9668 ;;Total ram usage:        9 bytes
  9669 ;; Hardware stack levels used: 1
  9670 ;; Hardware stack levels required when called: 9
  9671 ;; This function calls:
  9672 ;;		_PWM5_LoadDutyValue
  9673 ;;		_PWM6_LoadDutyValue
  9674 ;;		___fldiv
  9675 ;;		___fltol
  9676 ;;		___xxtofl
  9677 ;; This function is called by:
  9678 ;;		_loop
  9679 ;;		_checkBatt
  9680 ;;		_startAccell
  9681 ;;		_calcSteering
  9682 ;; This function uses a non-reentrant model
  9683 ;;
  9684                           
  9685                           	psect	text39
  9686  00390C                     __ptext39:
  9687                           	callstack 0
  9688  00390C                     _setSteering:
  9689                           	callstack 19
  9690  00390C  0E00               	movlw	0
  9691  00390E  0100               	movlb	0	; () banked
  9692  003910  6F8B               	movwf	(setSteering@steeringB+1)& (0+255),b
  9693  003912  0E00               	movlw	0
  9694  003914  6F8A               	movwf	setSteering@steeringB& (0+255),b
  9695                           
  9696                           ;main.c: 401:     switch (steeringMode) {
  9697  003916  EF01  F01D         	goto	l9129
  9698  00391A                     l1387:
  9699                           
  9700                           ; BSR set to: 0
  9701                           ;main.c: 403:             steeringF = (+steering);
  9702  00391A  C083  F088         	movff	setSteering@steering,setSteering@steeringF
  9703  00391E  C084  F089         	movff	setSteering@steering+1,setSteering@steeringF+1
  9704                           
  9705                           ;main.c: 404:             steeringB = -steering;
  9706  003922  C083  F086         	movff	setSteering@steering,??_setSteering
  9707  003926  C084  F087         	movff	setSteering@steering+1,??_setSteering+1
  9708  00392A  1F86               	comf	??_setSteering& (0+255),f,b
  9709  00392C  1F87               	comf	(??_setSteering+1)& (0+255),f,b
  9710  00392E  4B86               	infsnz	??_setSteering& (0+255),f,b
  9711  003930  2B87               	incf	(??_setSteering+1)& (0+255),f,b
  9712  003932  C086  F08A         	movff	??_setSteering,setSteering@steeringB
  9713  003936  C087  F08B         	movff	??_setSteering+1,setSteering@steeringB+1
  9714                           
  9715                           ;main.c: 405:             break;
  9716  00393A  EF22  F01D         	goto	l9131
  9717  00393E                     l1389:
  9718                           
  9719                           ; BSR set to: 0
  9720                           ;main.c: 407:             steeringF = (+steering);
  9721  00393E  C083  F088         	movff	setSteering@steering,setSteering@steeringF
  9722  003942  C084  F089         	movff	setSteering@steering+1,setSteering@steeringF+1
  9723                           
  9724                           ;main.c: 408:             steeringB = (+steering);
  9725  003946  C083  F08A         	movff	setSteering@steering,setSteering@steeringB
  9726  00394A  C084  F08B         	movff	setSteering@steering+1,setSteering@steeringB+1
  9727                           
  9728                           ;main.c: 409:             break;
  9729  00394E  EF22  F01D         	goto	l9131
  9730  003952                     l1390:
  9731                           
  9732                           ; BSR set to: 0
  9733                           ;main.c: 411:             steeringF = (+steering);
  9734  003952  C083  F088         	movff	setSteering@steering,setSteering@steeringF
  9735  003956  C084  F089         	movff	setSteering@steering+1,setSteering@steeringF+1
  9736  00395A                     
  9737                           ; BSR set to: 0
  9738                           ;main.c: 412:             steeringB = (-steering / (1.25));
  9739  00395A  0E00               	movlw	0
  9740  00395C  6E2E               	movwf	___fldiv@a^0,c
  9741  00395E  0E00               	movlw	0
  9742  003960  6E2F               	movwf	(___fldiv@a+1)^0,c
  9743  003962  0EA0               	movlw	160
  9744  003964  6E30               	movwf	(___fldiv@a+2)^0,c
  9745  003966  0E3F               	movlw	63
  9746  003968  6E31               	movwf	(___fldiv@a+3)^0,c
  9747  00396A  C083  F086         	movff	setSteering@steering,??_setSteering
  9748  00396E  C084  F087         	movff	setSteering@steering+1,??_setSteering+1
  9749  003972  1F86               	comf	??_setSteering& (0+255),f,b
  9750  003974  1F87               	comf	(??_setSteering+1)& (0+255),f,b
  9751  003976  4B86               	infsnz	??_setSteering& (0+255),f,b
  9752  003978  2B87               	incf	(??_setSteering+1)& (0+255),f,b
  9753  00397A  C086  F01C         	movff	??_setSteering,___xxtofl@val
  9754  00397E  C087  F01D         	movff	??_setSteering+1,___xxtofl@val+1
  9755  003982  0E00               	movlw	0
  9756  003984  BE1D               	btfsc	(___xxtofl@val+1)^0,7,c
  9757  003986  0EFF               	movlw	-1
  9758  003988  6E1E               	movwf	(___xxtofl@val+2)^0,c
  9759  00398A  6E1F               	movwf	(___xxtofl@val+3)^0,c
  9760  00398C  0E01               	movlw	1
  9761  00398E  EC62  F01F         	call	___xxtofl
  9762  003992  C01C  F02A         	movff	?___xxtofl,___fldiv@b
  9763  003996  C01D  F02B         	movff	?___xxtofl+1,___fldiv@b+1
  9764  00399A  C01E  F02C         	movff	?___xxtofl+2,___fldiv@b+2
  9765  00399E  C01F  F02D         	movff	?___xxtofl+3,___fldiv@b+3
  9766  0039A2  EC29  F016         	call	___fldiv	;wreg free
  9767  0039A6  C02A  F079         	movff	?___fldiv,___fltol@f1
  9768  0039AA  C02B  F07A         	movff	?___fldiv+1,___fltol@f1+1
  9769  0039AE  C02C  F07B         	movff	?___fldiv+2,___fltol@f1+2
  9770  0039B2  C02D  F07C         	movff	?___fldiv+3,___fltol@f1+3
  9771  0039B6  EC18  F024         	call	___fltol	;wreg free
  9772  0039BA  C079  F08A         	movff	?___fltol,setSteering@steeringB
  9773  0039BE  C07A  F08B         	movff	?___fltol+1,setSteering@steeringB+1
  9774                           
  9775                           ;main.c: 413:             break;
  9776  0039C2  EF22  F01D         	goto	l9131
  9777  0039C6                     l1391:
  9778                           
  9779                           ; BSR set to: 0
  9780                           ;main.c: 415:             steeringF = (+steering);
  9781  0039C6  C083  F088         	movff	setSteering@steering,setSteering@steeringF
  9782  0039CA  C084  F089         	movff	setSteering@steering+1,setSteering@steeringF+1
  9783  0039CE                     
  9784                           ; BSR set to: 0
  9785                           ;main.c: 416:             steeringB = 0;
  9786  0039CE  0E00               	movlw	0
  9787  0039D0  6F8B               	movwf	(setSteering@steeringB+1)& (0+255),b
  9788  0039D2  0E00               	movlw	0
  9789  0039D4  6F8A               	movwf	setSteering@steeringB& (0+255),b
  9790                           
  9791                           ;main.c: 417:             break;
  9792  0039D6  EF22  F01D         	goto	l9131
  9793  0039DA                     l9121:
  9794                           
  9795                           ; BSR set to: 0
  9796                           ;main.c: 419:             steeringF = 0;
  9797  0039DA  0E00               	movlw	0
  9798  0039DC  6F89               	movwf	(setSteering@steeringF+1)& (0+255),b
  9799  0039DE  0E00               	movlw	0
  9800  0039E0  6F88               	movwf	setSteering@steeringF& (0+255),b
  9801  0039E2                     
  9802                           ; BSR set to: 0
  9803                           ;main.c: 420:             steeringB = (+steering);
  9804  0039E2  C083  F08A         	movff	setSteering@steering,setSteering@steeringB
  9805  0039E6  C084  F08B         	movff	setSteering@steering+1,setSteering@steeringB+1
  9806                           
  9807                           ;main.c: 421:             break;
  9808  0039EA  EF22  F01D         	goto	l9131
  9809  0039EE                     l9125:
  9810                           
  9811                           ; BSR set to: 0
  9812                           ;main.c: 423:             steeringF = 0;
  9813  0039EE  0E00               	movlw	0
  9814  0039F0  6F89               	movwf	(setSteering@steeringF+1)& (0+255),b
  9815  0039F2  0E00               	movlw	0
  9816  0039F4  6F88               	movwf	setSteering@steeringF& (0+255),b
  9817                           
  9818                           ;main.c: 424:             steeringB = 0;
  9819  0039F6  0E00               	movlw	0
  9820  0039F8  6F8B               	movwf	(setSteering@steeringB+1)& (0+255),b
  9821  0039FA  0E00               	movlw	0
  9822  0039FC  6F8A               	movwf	setSteering@steeringB& (0+255),b
  9823                           
  9824                           ;main.c: 425:             break;
  9825  0039FE  EF22  F01D         	goto	l9131
  9826  003A02                     l9129:
  9827                           
  9828                           ; BSR set to: 0
  9829  003A02  5185               	movf	setSteering@steeringMode& (0+255),w,b
  9830  003A04  6F86               	movwf	??_setSteering& (0+255),b
  9831  003A06  6B87               	clrf	(??_setSteering+1)& (0+255),b
  9832                           
  9833                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9834                           ; Switch size 1, requested type "simple"
  9835                           ; Number of cases is 1, Range of values is 0 to 0
  9836                           ; switch strategies available:
  9837                           ; Name         Instructions Cycles
  9838                           ; simple_byte            4     3 (average)
  9839                           ;	Chosen strategy is simple_byte
  9840  003A08  5187               	movf	(??_setSteering+1)& (0+255),w,b
  9841  003A0A  0A00               	xorlw	0	; case 0
  9842  003A0C  B4D8               	btfsc	status,2,c
  9843  003A0E  EF0B  F01D         	goto	l9627
  9844  003A12  EFF7  F01C         	goto	l9125
  9845  003A16                     l9627:
  9846                           
  9847                           ; BSR set to: 0
  9848                           ; Switch size 1, requested type "simple"
  9849                           ; Number of cases is 5, Range of values is 0 to 4
  9850                           ; switch strategies available:
  9851                           ; Name         Instructions Cycles
  9852                           ; simple_byte           16     9 (average)
  9853                           ;	Chosen strategy is simple_byte
  9854  003A16  5186               	movf	??_setSteering& (0+255),w,b
  9855  003A18  0A00               	xorlw	0	; case 0
  9856  003A1A  B4D8               	btfsc	status,2,c
  9857  003A1C  EF8D  F01C         	goto	l1387
  9858  003A20  0A01               	xorlw	1	; case 1
  9859  003A22  B4D8               	btfsc	status,2,c
  9860  003A24  EF9F  F01C         	goto	l1389
  9861  003A28  0A03               	xorlw	3	; case 2
  9862  003A2A  B4D8               	btfsc	status,2,c
  9863  003A2C  EFA9  F01C         	goto	l1390
  9864  003A30  0A01               	xorlw	1	; case 3
  9865  003A32  B4D8               	btfsc	status,2,c
  9866  003A34  EFE3  F01C         	goto	l1391
  9867  003A38  0A07               	xorlw	7	; case 4
  9868  003A3A  B4D8               	btfsc	status,2,c
  9869  003A3C  EFED  F01C         	goto	l9121
  9870  003A40  EFF7  F01C         	goto	l9125
  9871  003A44                     l9131:
  9872                           
  9873                           ;main.c: 428:     if (steeringF > ((65))) {
  9874  003A44  0100               	movlb	0	; () banked
  9875  003A46  BF89               	btfsc	(setSteering@steeringF+1)& (0+255),7,b
  9876  003A48  EF2F  F01D         	goto	u10291
  9877  003A4C  5189               	movf	(setSteering@steeringF+1)& (0+255),w,b
  9878  003A4E  E109               	bnz	u10290
  9879  003A50  0E42               	movlw	66
  9880  003A52  5D88               	subwf	setSteering@steeringF& (0+255),w,b
  9881  003A54  A0D8               	btfss	status,0,c
  9882  003A56  EF2F  F01D         	goto	u10291
  9883  003A5A  EF31  F01D         	goto	u10290
  9884  003A5E                     u10291:
  9885  003A5E  EF37  F01D         	goto	l9135
  9886  003A62                     u10290:
  9887  003A62                     
  9888                           ; BSR set to: 0
  9889                           ;main.c: 429:         steeringF = ((65));
  9890  003A62  0E00               	movlw	0
  9891  003A64  6F89               	movwf	(setSteering@steeringF+1)& (0+255),b
  9892  003A66  0E41               	movlw	65
  9893  003A68  6F88               	movwf	setSteering@steeringF& (0+255),b
  9894                           
  9895                           ;main.c: 430:     } else if (steeringF < (-(65))) {
  9896  003A6A  EF49  F01D         	goto	l9139
  9897  003A6E                     l9135:
  9898                           
  9899                           ; BSR set to: 0
  9900  003A6E  AF89               	btfss	(setSteering@steeringF+1)& (0+255),7,b
  9901  003A70  EF43  F01D         	goto	u10301
  9902  003A74  0EBF               	movlw	191
  9903  003A76  5D88               	subwf	setSteering@steeringF& (0+255),w,b
  9904  003A78  0EFF               	movlw	255
  9905  003A7A  5989               	subwfb	(setSteering@steeringF+1)& (0+255),w,b
  9906  003A7C  B0D8               	btfsc	status,0,c
  9907  003A7E  EF43  F01D         	goto	u10301
  9908  003A82  EF45  F01D         	goto	u10300
  9909  003A86                     u10301:
  9910  003A86  EF49  F01D         	goto	l9139
  9911  003A8A                     u10300:
  9912  003A8A                     
  9913                           ; BSR set to: 0
  9914                           ;main.c: 431:         steeringF = (-(65));
  9915  003A8A  0EFF               	movlw	255
  9916  003A8C  6F89               	movwf	(setSteering@steeringF+1)& (0+255),b
  9917  003A8E  0EBF               	movlw	191
  9918  003A90  6F88               	movwf	setSteering@steeringF& (0+255),b
  9919  003A92                     l9139:
  9920                           
  9921                           ; BSR set to: 0
  9922                           ;main.c: 434:     if (steeringB > ((40))) {
  9923  003A92  BF8B               	btfsc	(setSteering@steeringB+1)& (0+255),7,b
  9924  003A94  EF55  F01D         	goto	u10311
  9925  003A98  518B               	movf	(setSteering@steeringB+1)& (0+255),w,b
  9926  003A9A  E109               	bnz	u10310
  9927  003A9C  0E29               	movlw	41
  9928  003A9E  5D8A               	subwf	setSteering@steeringB& (0+255),w,b
  9929  003AA0  A0D8               	btfss	status,0,c
  9930  003AA2  EF55  F01D         	goto	u10311
  9931  003AA6  EF57  F01D         	goto	u10310
  9932  003AAA                     u10311:
  9933  003AAA  EF5D  F01D         	goto	l9143
  9934  003AAE                     u10310:
  9935  003AAE                     
  9936                           ; BSR set to: 0
  9937                           ;main.c: 435:         steeringB = ((40));
  9938  003AAE  0E00               	movlw	0
  9939  003AB0  6F8B               	movwf	(setSteering@steeringB+1)& (0+255),b
  9940  003AB2  0E28               	movlw	40
  9941  003AB4  6F8A               	movwf	setSteering@steeringB& (0+255),b
  9942                           
  9943                           ;main.c: 436:     } else if (steeringB < (-(40))) {
  9944  003AB6  EF6F  F01D         	goto	l9147
  9945  003ABA                     l9143:
  9946                           
  9947                           ; BSR set to: 0
  9948  003ABA  AF8B               	btfss	(setSteering@steeringB+1)& (0+255),7,b
  9949  003ABC  EF69  F01D         	goto	u10321
  9950  003AC0  0ED8               	movlw	216
  9951  003AC2  5D8A               	subwf	setSteering@steeringB& (0+255),w,b
  9952  003AC4  0EFF               	movlw	255
  9953  003AC6  598B               	subwfb	(setSteering@steeringB+1)& (0+255),w,b
  9954  003AC8  B0D8               	btfsc	status,0,c
  9955  003ACA  EF69  F01D         	goto	u10321
  9956  003ACE  EF6B  F01D         	goto	u10320
  9957  003AD2                     u10321:
  9958  003AD2  EF6F  F01D         	goto	l9147
  9959  003AD6                     u10320:
  9960  003AD6                     
  9961                           ; BSR set to: 0
  9962                           ;main.c: 437:         steeringB = (-(40));
  9963  003AD6  0EFF               	movlw	255
  9964  003AD8  6F8B               	movwf	(setSteering@steeringB+1)& (0+255),b
  9965  003ADA  0ED8               	movlw	216
  9966  003ADC  6F8A               	movwf	setSteering@steeringB& (0+255),b
  9967  003ADE                     l9147:
  9968                           
  9969                           ; BSR set to: 0
  9970                           ;main.c: 441:     PWM6_LoadDutyValue((uint16_t) ((352) + steeringF));
  9971  003ADE  0E60               	movlw	96
  9972  003AE0  2588               	addwf	setSteering@steeringF& (0+255),w,b
  9973  003AE2  6E14               	movwf	PWM6_LoadDutyValue@dutyValue^0,c
  9974  003AE4  0E01               	movlw	1
  9975  003AE6  2189               	addwfc	(setSteering@steeringF+1)& (0+255),w,b
  9976  003AE8  6E15               	movwf	(PWM6_LoadDutyValue@dutyValue+1)^0,c
  9977  003AEA  EC1C  F02F         	call	_PWM6_LoadDutyValue	;wreg free
  9978  003AEE                     
  9979                           ;main.c: 442:     PWM5_LoadDutyValue((uint16_t) ((357) + steeringB));
  9980  003AEE  0E65               	movlw	101
  9981  003AF0  0100               	movlb	0	; () banked
  9982  003AF2  258A               	addwf	setSteering@steeringB& (0+255),w,b
  9983  003AF4  6E14               	movwf	PWM5_LoadDutyValue@dutyValue^0,c
  9984  003AF6  0E01               	movlw	1
  9985  003AF8  218B               	addwfc	(setSteering@steeringB+1)& (0+255),w,b
  9986  003AFA  6E15               	movwf	(PWM5_LoadDutyValue@dutyValue+1)^0,c
  9987  003AFC  EC36  F02F         	call	_PWM5_LoadDutyValue	;wreg free
  9988  003B00  0012               	return		;funcret
  9989  003B02                     __end_of_setSteering:
  9990                           	callstack 0
  9991                           
  9992 ;; *************** function ___fldiv *****************
  9993 ;; Defined at:
  9994 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  9995 ;; Parameters:    Size  Location     Type
  9996 ;;  b               4   41[COMRAM] void 
  9997 ;;  a               4   45[COMRAM] void 
  9998 ;; Auto vars:     Size  Location     Type
  9999 ;;  grs             4    7[BANK0 ] unsigned long 
 10000 ;;  rem             4    0[BANK0 ] unsigned long 
 10001 ;;  new_exp         2    5[BANK0 ] short 
 10002 ;;  aexp            1   12[BANK0 ] unsigned char 
 10003 ;;  bexp            1   11[BANK0 ] unsigned char 
 10004 ;;  sign            1    4[BANK0 ] unsigned char 
 10005 ;; Return value:  Size  Location     Type
 10006 ;;                  4   41[COMRAM] unsigned char 
 10007 ;; Registers used:
 10008 ;;		wreg, status,2, status,0
 10009 ;; Tracked objects:
 10010 ;;		On entry : 0/0
 10011 ;;		On exit  : 0/0
 10012 ;;		Unchanged: 0/0
 10013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10014 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10015 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10016 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10017 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10018 ;;Total ram usage:       25 bytes
 10019 ;; Hardware stack levels used: 1
 10020 ;; Hardware stack levels required when called: 8
 10021 ;; This function calls:
 10022 ;;		Nothing
 10023 ;; This function is called by:
 10024 ;;		_setSteering
 10025 ;;		_efgtoa
 10026 ;; This function uses a non-reentrant model
 10027 ;;
 10028                           
 10029                           	psect	text40
 10030  002C52                     __ptext40:
 10031                           	callstack 0
 10032  002C52                     ___fldiv:
 10033                           	callstack 19
 10034  002C52  502D               	movf	(___fldiv@b+3)^0,w,c
 10035  002C54  0B80               	andlw	128
 10036  002C56  0100               	movlb	0	; () banked
 10037  002C58  6F64               	movwf	___fldiv@sign& (0+255),b
 10038  002C5A  502D               	movf	(___fldiv@b+3)^0,w,c
 10039  002C5C  242D               	addwf	(___fldiv@b+3)^0,w,c
 10040  002C5E  6F6B               	movwf	___fldiv@bexp& (0+255),b
 10041  002C60                     
 10042                           ; BSR set to: 0
 10043  002C60  AE2C               	btfss	(___fldiv@b+2)^0,7,c
 10044  002C62  EF35  F016         	goto	u8131
 10045  002C66  EF37  F016         	goto	u8130
 10046  002C6A                     u8131:
 10047  002C6A  EF38  F016         	goto	l7951
 10048  002C6E                     u8130:
 10049  002C6E                     
 10050                           ; BSR set to: 0
 10051  002C6E  816B               	bsf	___fldiv@bexp& (0+255),0,b
 10052  002C70                     l7951:
 10053                           
 10054                           ; BSR set to: 0
 10055  002C70  516B               	movf	___fldiv@bexp& (0+255),w,b
 10056  002C72  B4D8               	btfsc	status,2,c
 10057  002C74  EF3E  F016         	goto	u8141
 10058  002C78  EF40  F016         	goto	u8140
 10059  002C7C                     u8141:
 10060  002C7C  EF55  F016         	goto	l7961
 10061  002C80                     u8140:
 10062  002C80                     
 10063                           ; BSR set to: 0
 10064  002C80  296B               	incf	___fldiv@bexp& (0+255),w,b
 10065  002C82  A4D8               	btfss	status,2,c
 10066  002C84  EF46  F016         	goto	u8151
 10067  002C88  EF48  F016         	goto	u8150
 10068  002C8C                     u8151:
 10069  002C8C  EF50  F016         	goto	l7957
 10070  002C90                     u8150:
 10071  002C90                     
 10072                           ; BSR set to: 0
 10073  002C90  0E00               	movlw	0
 10074  002C92  6E2A               	movwf	___fldiv@b^0,c
 10075  002C94  0E00               	movlw	0
 10076  002C96  6E2B               	movwf	(___fldiv@b+1)^0,c
 10077  002C98  0E00               	movlw	0
 10078  002C9A  6E2C               	movwf	(___fldiv@b+2)^0,c
 10079  002C9C  0E00               	movlw	0
 10080  002C9E  6E2D               	movwf	(___fldiv@b+3)^0,c
 10081  002CA0                     l7957:
 10082                           
 10083                           ; BSR set to: 0
 10084  002CA0  8E2C               	bsf	(___fldiv@b+2)^0,7,c
 10085  002CA2                     
 10086                           ; BSR set to: 0
 10087  002CA2  0E00               	movlw	0
 10088  002CA4  6E2D               	movwf	(___fldiv@b+3)^0,c
 10089  002CA6  EF5D  F016         	goto	l7963
 10090  002CAA                     l7961:
 10091                           
 10092                           ; BSR set to: 0
 10093  002CAA  0E00               	movlw	0
 10094  002CAC  6E2A               	movwf	___fldiv@b^0,c
 10095  002CAE  0E00               	movlw	0
 10096  002CB0  6E2B               	movwf	(___fldiv@b+1)^0,c
 10097  002CB2  0E00               	movlw	0
 10098  002CB4  6E2C               	movwf	(___fldiv@b+2)^0,c
 10099  002CB6  0E00               	movlw	0
 10100  002CB8  6E2D               	movwf	(___fldiv@b+3)^0,c
 10101  002CBA                     l7963:
 10102                           
 10103                           ; BSR set to: 0
 10104  002CBA  5031               	movf	(___fldiv@a+3)^0,w,c
 10105  002CBC  0B80               	andlw	128
 10106  002CBE  1B64               	xorwf	___fldiv@sign& (0+255),f,b
 10107  002CC0                     
 10108                           ; BSR set to: 0
 10109  002CC0  5031               	movf	(___fldiv@a+3)^0,w,c
 10110  002CC2  2431               	addwf	(___fldiv@a+3)^0,w,c
 10111  002CC4  6F6C               	movwf	___fldiv@aexp& (0+255),b
 10112  002CC6                     
 10113                           ; BSR set to: 0
 10114  002CC6  AE30               	btfss	(___fldiv@a+2)^0,7,c
 10115  002CC8  EF68  F016         	goto	u8161
 10116  002CCC  EF6A  F016         	goto	u8160
 10117  002CD0                     u8161:
 10118  002CD0  EF6B  F016         	goto	l7971
 10119  002CD4                     u8160:
 10120  002CD4                     
 10121                           ; BSR set to: 0
 10122  002CD4  816C               	bsf	___fldiv@aexp& (0+255),0,b
 10123  002CD6                     l7971:
 10124                           
 10125                           ; BSR set to: 0
 10126  002CD6  516C               	movf	___fldiv@aexp& (0+255),w,b
 10127  002CD8  B4D8               	btfsc	status,2,c
 10128  002CDA  EF71  F016         	goto	u8171
 10129  002CDE  EF73  F016         	goto	u8170
 10130  002CE2                     u8171:
 10131  002CE2  EF88  F016         	goto	l7981
 10132  002CE6                     u8170:
 10133  002CE6                     
 10134                           ; BSR set to: 0
 10135  002CE6  296C               	incf	___fldiv@aexp& (0+255),w,b
 10136  002CE8  A4D8               	btfss	status,2,c
 10137  002CEA  EF79  F016         	goto	u8181
 10138  002CEE  EF7B  F016         	goto	u8180
 10139  002CF2                     u8181:
 10140  002CF2  EF83  F016         	goto	l7977
 10141  002CF6                     u8180:
 10142  002CF6                     
 10143                           ; BSR set to: 0
 10144  002CF6  0E00               	movlw	0
 10145  002CF8  6E2E               	movwf	___fldiv@a^0,c
 10146  002CFA  0E00               	movlw	0
 10147  002CFC  6E2F               	movwf	(___fldiv@a+1)^0,c
 10148  002CFE  0E00               	movlw	0
 10149  002D00  6E30               	movwf	(___fldiv@a+2)^0,c
 10150  002D02  0E00               	movlw	0
 10151  002D04  6E31               	movwf	(___fldiv@a+3)^0,c
 10152  002D06                     l7977:
 10153                           
 10154                           ; BSR set to: 0
 10155  002D06  8E30               	bsf	(___fldiv@a+2)^0,7,c
 10156  002D08                     
 10157                           ; BSR set to: 0
 10158  002D08  0E00               	movlw	0
 10159  002D0A  6E31               	movwf	(___fldiv@a+3)^0,c
 10160  002D0C  EF90  F016         	goto	l7983
 10161  002D10                     l7981:
 10162                           
 10163                           ; BSR set to: 0
 10164  002D10  0E00               	movlw	0
 10165  002D12  6E2E               	movwf	___fldiv@a^0,c
 10166  002D14  0E00               	movlw	0
 10167  002D16  6E2F               	movwf	(___fldiv@a+1)^0,c
 10168  002D18  0E00               	movlw	0
 10169  002D1A  6E30               	movwf	(___fldiv@a+2)^0,c
 10170  002D1C  0E00               	movlw	0
 10171  002D1E  6E31               	movwf	(___fldiv@a+3)^0,c
 10172  002D20                     l7983:
 10173                           
 10174                           ; BSR set to: 0
 10175  002D20  502E               	movf	___fldiv@a^0,w,c
 10176  002D22  102F               	iorwf	(___fldiv@a+1)^0,w,c
 10177  002D24  1030               	iorwf	(___fldiv@a+2)^0,w,c
 10178  002D26  1031               	iorwf	(___fldiv@a+3)^0,w,c
 10179  002D28  A4D8               	btfss	status,2,c
 10180  002D2A  EF99  F016         	goto	u8191
 10181  002D2E  EF9B  F016         	goto	u8190
 10182  002D32                     u8191:
 10183  002D32  EFB3  F016         	goto	l7995
 10184  002D36                     u8190:
 10185  002D36                     
 10186                           ; BSR set to: 0
 10187  002D36  0E00               	movlw	0
 10188  002D38  6E2A               	movwf	___fldiv@b^0,c
 10189  002D3A  0E00               	movlw	0
 10190  002D3C  6E2B               	movwf	(___fldiv@b+1)^0,c
 10191  002D3E  0E00               	movlw	0
 10192  002D40  6E2C               	movwf	(___fldiv@b+2)^0,c
 10193  002D42  0E00               	movlw	0
 10194  002D44  6E2D               	movwf	(___fldiv@b+3)^0,c
 10195  002D46                     
 10196                           ; BSR set to: 0
 10197  002D46  0E80               	movlw	128
 10198  002D48  122C               	iorwf	(___fldiv@b+2)^0,f,c
 10199  002D4A  0E7F               	movlw	127
 10200  002D4C  122D               	iorwf	(___fldiv@b+3)^0,f,c
 10201  002D4E                     l7989:
 10202                           
 10203                           ; BSR set to: 0
 10204  002D4E  5164               	movf	___fldiv@sign& (0+255),w,b
 10205  002D50  122D               	iorwf	(___fldiv@b+3)^0,f,c
 10206  002D52                     
 10207                           ; BSR set to: 0
 10208  002D52  C02A  F02A         	movff	___fldiv@b,?___fldiv
 10209  002D56  C02B  F02B         	movff	___fldiv@b+1,?___fldiv+1
 10210  002D5A  C02C  F02C         	movff	___fldiv@b+2,?___fldiv+2
 10211  002D5E  C02D  F02D         	movff	___fldiv@b+3,?___fldiv+3
 10212  002D62  EFF6  F017         	goto	l1985
 10213  002D66                     l7995:
 10214                           
 10215                           ; BSR set to: 0
 10216  002D66  516B               	movf	___fldiv@bexp& (0+255),w,b
 10217  002D68  A4D8               	btfss	status,2,c
 10218  002D6A  EFB9  F016         	goto	u8201
 10219  002D6E  EFBB  F016         	goto	u8200
 10220  002D72                     u8201:
 10221  002D72  EFC5  F016         	goto	l8003
 10222  002D76                     u8200:
 10223  002D76                     
 10224                           ; BSR set to: 0
 10225  002D76  0E00               	movlw	0
 10226  002D78  6E2A               	movwf	?___fldiv^0,c
 10227  002D7A  0E00               	movlw	0
 10228  002D7C  6E2B               	movwf	(?___fldiv+1)^0,c
 10229  002D7E  0E00               	movlw	0
 10230  002D80  6E2C               	movwf	(?___fldiv+2)^0,c
 10231  002D82  0E00               	movlw	0
 10232  002D84  6E2D               	movwf	(?___fldiv+3)^0,c
 10233  002D86  EFF6  F017         	goto	l1985
 10234  002D8A                     l8003:
 10235                           
 10236                           ; BSR set to: 0
 10237  002D8A  516C               	movf	___fldiv@aexp& (0+255),w,b
 10238  002D8C  C06B  F032         	movff	___fldiv@bexp,??___fldiv
 10239  002D90  6A33               	clrf	(??___fldiv+1)^0,c
 10240  002D92  5E32               	subwf	??___fldiv^0,f,c
 10241  002D94  0E00               	movlw	0
 10242  002D96  5A33               	subwfb	(??___fldiv+1)^0,f,c
 10243  002D98  0E7F               	movlw	127
 10244  002D9A  2432               	addwf	??___fldiv^0,w,c
 10245  002D9C  6F65               	movwf	___fldiv@new_exp& (0+255),b
 10246  002D9E  0E00               	movlw	0
 10247  002DA0  2033               	addwfc	(??___fldiv+1)^0,w,c
 10248  002DA2  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10249  002DA4                     
 10250                           ; BSR set to: 0
 10251  002DA4  C02A  F060         	movff	___fldiv@b,___fldiv@rem
 10252  002DA8  C02B  F061         	movff	___fldiv@b+1,___fldiv@rem+1
 10253  002DAC  C02C  F062         	movff	___fldiv@b+2,___fldiv@rem+2
 10254  002DB0  C02D  F063         	movff	___fldiv@b+3,___fldiv@rem+3
 10255  002DB4                     
 10256                           ; BSR set to: 0
 10257  002DB4  0E00               	movlw	0
 10258  002DB6  6E2A               	movwf	___fldiv@b^0,c
 10259  002DB8  0E00               	movlw	0
 10260  002DBA  6E2B               	movwf	(___fldiv@b+1)^0,c
 10261  002DBC  0E00               	movlw	0
 10262  002DBE  6E2C               	movwf	(___fldiv@b+2)^0,c
 10263  002DC0  0E00               	movlw	0
 10264  002DC2  6E2D               	movwf	(___fldiv@b+3)^0,c
 10265  002DC4                     
 10266                           ; BSR set to: 0
 10267  002DC4  0E00               	movlw	0
 10268  002DC6  6F67               	movwf	___fldiv@grs& (0+255),b
 10269  002DC8  0E00               	movlw	0
 10270  002DCA  6F68               	movwf	(___fldiv@grs+1)& (0+255),b
 10271  002DCC  0E00               	movlw	0
 10272  002DCE  6F69               	movwf	(___fldiv@grs+2)& (0+255),b
 10273  002DD0  0E00               	movlw	0
 10274  002DD2  6F6A               	movwf	(___fldiv@grs+3)& (0+255),b
 10275  002DD4                     
 10276                           ; BSR set to: 0
 10277  002DD4  0E00               	movlw	0
 10278  002DD6  6F6C               	movwf	___fldiv@aexp& (0+255),b
 10279  002DD8  EF26  F017         	goto	l1987
 10280  002DDC                     l8013:
 10281                           
 10282                           ; BSR set to: 0
 10283  002DDC  516C               	movf	___fldiv@aexp& (0+255),w,b
 10284  002DDE  B4D8               	btfsc	status,2,c
 10285  002DE0  EFF4  F016         	goto	u8211
 10286  002DE4  EFF6  F016         	goto	u8210
 10287  002DE8                     u8211:
 10288  002DE8  EF0D  F017         	goto	l8021
 10289  002DEC                     u8210:
 10290  002DEC                     
 10291                           ; BSR set to: 0
 10292  002DEC  90D8               	bcf	status,0,c
 10293  002DEE  3760               	rlcf	___fldiv@rem& (0+255),f,b
 10294  002DF0  3761               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 10295  002DF2  3762               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 10296  002DF4  3763               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 10297  002DF6  90D8               	bcf	status,0,c
 10298  002DF8  362A               	rlcf	___fldiv@b^0,f,c
 10299  002DFA  362B               	rlcf	(___fldiv@b+1)^0,f,c
 10300  002DFC  362C               	rlcf	(___fldiv@b+2)^0,f,c
 10301  002DFE  362D               	rlcf	(___fldiv@b+3)^0,f,c
 10302  002E00                     
 10303                           ; BSR set to: 0
 10304  002E00  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10305  002E02  EF05  F017         	goto	u8221
 10306  002E06  EF07  F017         	goto	u8220
 10307  002E0A                     u8221:
 10308  002E0A  EF08  F017         	goto	l1990
 10309  002E0E                     u8220:
 10310  002E0E                     
 10311                           ; BSR set to: 0
 10312  002E0E  802A               	bsf	___fldiv@b^0,0,c
 10313  002E10                     l1990:
 10314                           
 10315                           ; BSR set to: 0
 10316  002E10  90D8               	bcf	status,0,c
 10317  002E12  3767               	rlcf	___fldiv@grs& (0+255),f,b
 10318  002E14  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 10319  002E16  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 10320  002E18  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 10321  002E1A                     l8021:
 10322                           
 10323                           ; BSR set to: 0
 10324  002E1A  502E               	movf	___fldiv@a^0,w,c
 10325  002E1C  5D60               	subwf	___fldiv@rem& (0+255),w,b
 10326  002E1E  502F               	movf	(___fldiv@a+1)^0,w,c
 10327  002E20  5961               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 10328  002E22  5030               	movf	(___fldiv@a+2)^0,w,c
 10329  002E24  5962               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 10330  002E26  5031               	movf	(___fldiv@a+3)^0,w,c
 10331  002E28  5963               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 10332  002E2A  A0D8               	btfss	status,0,c
 10333  002E2C  EF1A  F017         	goto	u8231
 10334  002E30  EF1C  F017         	goto	u8230
 10335  002E34                     u8231:
 10336  002E34  EF25  F017         	goto	l8027
 10337  002E38                     u8230:
 10338  002E38                     
 10339                           ; BSR set to: 0
 10340  002E38  8D6A               	bsf	(___fldiv@grs+3)& (0+255),6,b
 10341  002E3A                     
 10342                           ; BSR set to: 0
 10343  002E3A  502E               	movf	___fldiv@a^0,w,c
 10344  002E3C  5F60               	subwf	___fldiv@rem& (0+255),f,b
 10345  002E3E  502F               	movf	(___fldiv@a+1)^0,w,c
 10346  002E40  5B61               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 10347  002E42  5030               	movf	(___fldiv@a+2)^0,w,c
 10348  002E44  5B62               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 10349  002E46  5031               	movf	(___fldiv@a+3)^0,w,c
 10350  002E48  5B63               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 10351  002E4A                     l8027:
 10352                           
 10353                           ; BSR set to: 0
 10354  002E4A  2B6C               	incf	___fldiv@aexp& (0+255),f,b
 10355  002E4C                     l1987:
 10356                           
 10357                           ; BSR set to: 0
 10358  002E4C  0E19               	movlw	25
 10359  002E4E  656C               	cpfsgt	___fldiv@aexp& (0+255),b
 10360  002E50  EF2C  F017         	goto	u8241
 10361  002E54  EF2E  F017         	goto	u8240
 10362  002E58                     u8241:
 10363  002E58  EFEE  F016         	goto	l8013
 10364  002E5C                     u8240:
 10365  002E5C                     
 10366                           ; BSR set to: 0
 10367  002E5C  5160               	movf	___fldiv@rem& (0+255),w,b
 10368  002E5E  1161               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 10369  002E60  1162               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 10370  002E62  1163               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 10371  002E64  B4D8               	btfsc	status,2,c
 10372  002E66  EF37  F017         	goto	u8251
 10373  002E6A  EF39  F017         	goto	u8250
 10374  002E6E                     u8251:
 10375  002E6E  EF51  F017         	goto	l8039
 10376  002E72                     u8250:
 10377  002E72                     
 10378                           ; BSR set to: 0
 10379  002E72  8167               	bsf	___fldiv@grs& (0+255),0,b
 10380  002E74  EF51  F017         	goto	l8039
 10381  002E78                     l8033:
 10382                           
 10383                           ; BSR set to: 0
 10384  002E78  90D8               	bcf	status,0,c
 10385  002E7A  362A               	rlcf	___fldiv@b^0,f,c
 10386  002E7C  362B               	rlcf	(___fldiv@b+1)^0,f,c
 10387  002E7E  362C               	rlcf	(___fldiv@b+2)^0,f,c
 10388  002E80  362D               	rlcf	(___fldiv@b+3)^0,f,c
 10389  002E82                     
 10390                           ; BSR set to: 0
 10391  002E82  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10392  002E84  EF46  F017         	goto	u8261
 10393  002E88  EF48  F017         	goto	u8260
 10394  002E8C                     u8261:
 10395  002E8C  EF49  F017         	goto	l1996
 10396  002E90                     u8260:
 10397  002E90                     
 10398                           ; BSR set to: 0
 10399  002E90  802A               	bsf	___fldiv@b^0,0,c
 10400  002E92                     l1996:
 10401                           
 10402                           ; BSR set to: 0
 10403  002E92  90D8               	bcf	status,0,c
 10404  002E94  3767               	rlcf	___fldiv@grs& (0+255),f,b
 10405  002E96  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 10406  002E98  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 10407  002E9A  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 10408  002E9C  0765               	decf	___fldiv@new_exp& (0+255),f,b
 10409  002E9E  A0D8               	btfss	status,0,c
 10410  002EA0  0766               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 10411  002EA2                     l8039:
 10412                           
 10413                           ; BSR set to: 0
 10414  002EA2  AE2C               	btfss	(___fldiv@b+2)^0,7,c
 10415  002EA4  EF56  F017         	goto	u8271
 10416  002EA8  EF58  F017         	goto	u8270
 10417  002EAC                     u8271:
 10418  002EAC  EF3C  F017         	goto	l8033
 10419  002EB0                     u8270:
 10420  002EB0                     
 10421                           ; BSR set to: 0
 10422  002EB0  0E00               	movlw	0
 10423  002EB2  6F6C               	movwf	___fldiv@aexp& (0+255),b
 10424  002EB4                     
 10425                           ; BSR set to: 0
 10426  002EB4  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10427  002EB6  EF5F  F017         	goto	u8281
 10428  002EBA  EF61  F017         	goto	u8280
 10429  002EBE                     u8281:
 10430  002EBE  EF85  F017         	goto	l1998
 10431  002EC2                     u8280:
 10432  002EC2                     
 10433                           ; BSR set to: 0
 10434  002EC2  0EFF               	movlw	255
 10435  002EC4  1567               	andwf	___fldiv@grs& (0+255),w,b
 10436  002EC6  6E32               	movwf	??___fldiv^0,c
 10437  002EC8  0EFF               	movlw	255
 10438  002ECA  1568               	andwf	(___fldiv@grs+1)& (0+255),w,b
 10439  002ECC  6E33               	movwf	(??___fldiv+1)^0,c
 10440  002ECE  0EFF               	movlw	255
 10441  002ED0  1569               	andwf	(___fldiv@grs+2)& (0+255),w,b
 10442  002ED2  6E34               	movwf	(??___fldiv+2)^0,c
 10443  002ED4  0E7F               	movlw	127
 10444  002ED6  156A               	andwf	(___fldiv@grs+3)& (0+255),w,b
 10445  002ED8  6E35               	movwf	(??___fldiv+3)^0,c
 10446  002EDA  5032               	movf	??___fldiv^0,w,c
 10447  002EDC  1033               	iorwf	(??___fldiv+1)^0,w,c
 10448  002EDE  1034               	iorwf	(??___fldiv+2)^0,w,c
 10449  002EE0  1035               	iorwf	(??___fldiv+3)^0,w,c
 10450  002EE2  B4D8               	btfsc	status,2,c
 10451  002EE4  EF76  F017         	goto	u8291
 10452  002EE8  EF78  F017         	goto	u8290
 10453  002EEC                     u8291:
 10454  002EEC  EF7C  F017         	goto	l1999
 10455  002EF0                     u8290:
 10456  002EF0                     l8047:
 10457                           
 10458                           ; BSR set to: 0
 10459  002EF0  0E01               	movlw	1
 10460  002EF2  6F6C               	movwf	___fldiv@aexp& (0+255),b
 10461  002EF4  EF85  F017         	goto	l1998
 10462  002EF8                     l1999:
 10463                           
 10464                           ; BSR set to: 0
 10465  002EF8  A02A               	btfss	___fldiv@b^0,0,c
 10466  002EFA  EF81  F017         	goto	u8301
 10467  002EFE  EF83  F017         	goto	u8300
 10468  002F02                     u8301:
 10469  002F02  EF85  F017         	goto	l1998
 10470  002F06                     u8300:
 10471  002F06  EF78  F017         	goto	l8047
 10472  002F0A                     l1998:
 10473                           
 10474                           ; BSR set to: 0
 10475  002F0A  516C               	movf	___fldiv@aexp& (0+255),w,b
 10476  002F0C  B4D8               	btfsc	status,2,c
 10477  002F0E  EF8B  F017         	goto	u8311
 10478  002F12  EF8D  F017         	goto	u8310
 10479  002F16                     u8311:
 10480  002F16  EFB1  F017         	goto	l8059
 10481  002F1A                     u8310:
 10482  002F1A                     
 10483                           ; BSR set to: 0
 10484  002F1A  0E01               	movlw	1
 10485  002F1C  262A               	addwf	___fldiv@b^0,f,c
 10486  002F1E  0E00               	movlw	0
 10487  002F20  222B               	addwfc	(___fldiv@b+1)^0,f,c
 10488  002F22  222C               	addwfc	(___fldiv@b+2)^0,f,c
 10489  002F24  222D               	addwfc	(___fldiv@b+3)^0,f,c
 10490  002F26                     
 10491                           ; BSR set to: 0
 10492  002F26  A02D               	btfss	(___fldiv@b+3)^0,0,c
 10493  002F28  EF98  F017         	goto	u8321
 10494  002F2C  EF9A  F017         	goto	u8320
 10495  002F30                     u8321:
 10496  002F30  EFB1  F017         	goto	l8059
 10497  002F34                     u8320:
 10498  002F34                     
 10499                           ; BSR set to: 0
 10500  002F34  C02A  F032         	movff	___fldiv@b,??___fldiv
 10501  002F38  C02B  F033         	movff	___fldiv@b+1,??___fldiv+1
 10502  002F3C  C02C  F034         	movff	___fldiv@b+2,??___fldiv+2
 10503  002F40  C02D  F035         	movff	___fldiv@b+3,??___fldiv+3
 10504  002F44  3435               	rlcf	(??___fldiv+3)^0,w,c
 10505  002F46  3235               	rrcf	(??___fldiv+3)^0,f,c
 10506  002F48  3234               	rrcf	(??___fldiv+2)^0,f,c
 10507  002F4A  3233               	rrcf	(??___fldiv+1)^0,f,c
 10508  002F4C  3232               	rrcf	??___fldiv^0,f,c
 10509  002F4E  C032  F02A         	movff	??___fldiv,___fldiv@b
 10510  002F52  C033  F02B         	movff	??___fldiv+1,___fldiv@b+1
 10511  002F56  C034  F02C         	movff	??___fldiv+2,___fldiv@b+2
 10512  002F5A  C035  F02D         	movff	??___fldiv+3,___fldiv@b+3
 10513  002F5E                     
 10514                           ; BSR set to: 0
 10515  002F5E  4B65               	infsnz	___fldiv@new_exp& (0+255),f,b
 10516  002F60  2B66               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 10517  002F62                     l8059:
 10518                           
 10519                           ; BSR set to: 0
 10520  002F62  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 10521  002F64  EFBC  F017         	goto	u8331
 10522  002F68  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 10523  002F6A  E108               	bnz	u8330
 10524  002F6C  2965               	incf	___fldiv@new_exp& (0+255),w,b
 10525  002F6E  A0D8               	btfss	status,0,c
 10526  002F70  EFBC  F017         	goto	u8331
 10527  002F74  EFBE  F017         	goto	u8330
 10528  002F78                     u8331:
 10529  002F78  EFC9  F017         	goto	l8063
 10530  002F7C                     u8330:
 10531  002F7C                     
 10532                           ; BSR set to: 0
 10533  002F7C  0E00               	movlw	0
 10534  002F7E  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10535  002F80  6965               	setf	___fldiv@new_exp& (0+255),b
 10536  002F82  0E00               	movlw	0
 10537  002F84  6E2A               	movwf	___fldiv@b^0,c
 10538  002F86  0E00               	movlw	0
 10539  002F88  6E2B               	movwf	(___fldiv@b+1)^0,c
 10540  002F8A  0E00               	movlw	0
 10541  002F8C  6E2C               	movwf	(___fldiv@b+2)^0,c
 10542  002F8E  0E00               	movlw	0
 10543  002F90  6E2D               	movwf	(___fldiv@b+3)^0,c
 10544  002F92                     l8063:
 10545                           
 10546                           ; BSR set to: 0
 10547  002F92  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 10548  002F94  EFD6  F017         	goto	u8340
 10549  002F98  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 10550  002F9A  E106               	bnz	u8341
 10551  002F9C  0565               	decf	___fldiv@new_exp& (0+255),w,b
 10552  002F9E  B0D8               	btfsc	status,0,c
 10553  002FA0  EFD4  F017         	goto	u8341
 10554  002FA4  EFD6  F017         	goto	u8340
 10555  002FA8                     u8341:
 10556  002FA8  EFE4  F017         	goto	l8067
 10557  002FAC                     u8340:
 10558  002FAC                     
 10559                           ; BSR set to: 0
 10560  002FAC  0E00               	movlw	0
 10561  002FAE  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10562  002FB0  0E00               	movlw	0
 10563  002FB2  6F65               	movwf	___fldiv@new_exp& (0+255),b
 10564  002FB4  0E00               	movlw	0
 10565  002FB6  6E2A               	movwf	___fldiv@b^0,c
 10566  002FB8  0E00               	movlw	0
 10567  002FBA  6E2B               	movwf	(___fldiv@b+1)^0,c
 10568  002FBC  0E00               	movlw	0
 10569  002FBE  6E2C               	movwf	(___fldiv@b+2)^0,c
 10570  002FC0  0E00               	movlw	0
 10571  002FC2  6E2D               	movwf	(___fldiv@b+3)^0,c
 10572  002FC4  0E00               	movlw	0
 10573  002FC6  6F64               	movwf	___fldiv@sign& (0+255),b
 10574  002FC8                     l8067:
 10575                           
 10576                           ; BSR set to: 0
 10577  002FC8  C065  F06B         	movff	___fldiv@new_exp,___fldiv@bexp
 10578  002FCC                     
 10579                           ; BSR set to: 0
 10580  002FCC  A16B               	btfss	___fldiv@bexp& (0+255),0,b
 10581  002FCE  EFEB  F017         	goto	u8351
 10582  002FD2  EFED  F017         	goto	u8350
 10583  002FD6                     u8351:
 10584  002FD6  EFF0  F017         	goto	l8073
 10585  002FDA                     u8350:
 10586  002FDA                     
 10587                           ; BSR set to: 0
 10588  002FDA  8E2C               	bsf	(___fldiv@b+2)^0,7,c
 10589  002FDC  EFF1  F017         	goto	l8075
 10590  002FE0                     l8073:
 10591                           
 10592                           ; BSR set to: 0
 10593  002FE0  9E2C               	bcf	(___fldiv@b+2)^0,7,c
 10594  002FE2                     l8075:
 10595                           
 10596                           ; BSR set to: 0
 10597  002FE2  90D8               	bcf	status,0,c
 10598  002FE4  316B               	rrcf	___fldiv@bexp& (0+255),w,b
 10599  002FE6  6E2D               	movwf	(___fldiv@b+3)^0,c
 10600  002FE8  EFA7  F016         	goto	l7989
 10601  002FEC                     l1985:
 10602                           
 10603                           ; BSR set to: 0
 10604  002FEC  0012               	return		;funcret
 10605  002FEE                     __end_of___fldiv:
 10606                           	callstack 0
 10607                           
 10608 ;; *************** function _PWM6_LoadDutyValue *****************
 10609 ;; Defined at:
 10610 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 10611 ;; Parameters:    Size  Location     Type
 10612 ;;  dutyValue       2   19[COMRAM] unsigned short 
 10613 ;; Auto vars:     Size  Location     Type
 10614 ;;		None
 10615 ;; Return value:  Size  Location     Type
 10616 ;;                  1    wreg      void 
 10617 ;; Registers used:
 10618 ;;		wreg, status,2, status,0
 10619 ;; Tracked objects:
 10620 ;;		On entry : 0/0
 10621 ;;		On exit  : 0/0
 10622 ;;		Unchanged: 0/0
 10623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10624 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10626 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10627 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10628 ;;Total ram usage:        4 bytes
 10629 ;; Hardware stack levels used: 1
 10630 ;; Hardware stack levels required when called: 8
 10631 ;; This function calls:
 10632 ;;		Nothing
 10633 ;; This function is called by:
 10634 ;;		_setSteering
 10635 ;; This function uses a non-reentrant model
 10636 ;;
 10637                           
 10638                           	psect	text41
 10639  005E38                     __ptext41:
 10640                           	callstack 0
 10641  005E38                     _PWM6_LoadDutyValue:
 10642                           	callstack 19
 10643  005E38                     
 10644                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 10645  005E38  C014  F016         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
 10646  005E3C  C015  F017         	movff	PWM6_LoadDutyValue@dutyValue+1,??_PWM6_LoadDutyValue+1
 10647  005E40  90D8               	bcf	status,0,c
 10648  005E42  3217               	rrcf	(??_PWM6_LoadDutyValue+1)^0,f,c
 10649  005E44  3216               	rrcf	??_PWM6_LoadDutyValue^0,f,c
 10650  005E46  90D8               	bcf	status,0,c
 10651  005E48  3217               	rrcf	(??_PWM6_LoadDutyValue+1)^0,f,c
 10652  005E4A  3216               	rrcf	??_PWM6_LoadDutyValue^0,f,c
 10653  005E4C  5016               	movf	??_PWM6_LoadDutyValue^0,w,c
 10654  005E4E  6E69               	movwf	105,c	;volatile
 10655                           
 10656                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
 10657  005E50  C014  F016         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
 10658  005E54  0E03               	movlw	3
 10659  005E56  1616               	andwf	??_PWM6_LoadDutyValue^0,f,c
 10660  005E58  0E06               	movlw	6
 10661  005E5A  6E17               	movwf	(??_PWM6_LoadDutyValue+1)^0,c
 10662  005E5C                     u10135:
 10663  005E5C  90D8               	bcf	status,0,c
 10664  005E5E  3616               	rlcf	??_PWM6_LoadDutyValue^0,f,c
 10665  005E60  2E17               	decfsz	(??_PWM6_LoadDutyValue+1)^0,f,c
 10666  005E62  EF2E  F02F         	goto	u10135
 10667  005E66  5016               	movf	??_PWM6_LoadDutyValue^0,w,c
 10668  005E68  6E68               	movwf	104,c	;volatile
 10669  005E6A  0012               	return		;funcret
 10670  005E6C                     __end_of_PWM6_LoadDutyValue:
 10671                           	callstack 0
 10672                           
 10673 ;; *************** function _PWM5_LoadDutyValue *****************
 10674 ;; Defined at:
 10675 ;;		line 74 in file "mcc_generated_files/pwm5.c"
 10676 ;; Parameters:    Size  Location     Type
 10677 ;;  dutyValue       2   19[COMRAM] unsigned short 
 10678 ;; Auto vars:     Size  Location     Type
 10679 ;;		None
 10680 ;; Return value:  Size  Location     Type
 10681 ;;                  1    wreg      void 
 10682 ;; Registers used:
 10683 ;;		wreg, status,2, status,0
 10684 ;; Tracked objects:
 10685 ;;		On entry : 0/0
 10686 ;;		On exit  : 0/0
 10687 ;;		Unchanged: 0/0
 10688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10689 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10691 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10692 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10693 ;;Total ram usage:        4 bytes
 10694 ;; Hardware stack levels used: 1
 10695 ;; Hardware stack levels required when called: 8
 10696 ;; This function calls:
 10697 ;;		Nothing
 10698 ;; This function is called by:
 10699 ;;		_setSteering
 10700 ;; This function uses a non-reentrant model
 10701 ;;
 10702                           
 10703                           	psect	text42
 10704  005E6C                     __ptext42:
 10705                           	callstack 0
 10706  005E6C                     _PWM5_LoadDutyValue:
 10707                           	callstack 19
 10708  005E6C                     
 10709                           ;mcc_generated_files/pwm5.c: 74:  void PWM5_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm5.c: 75:  {;mcc_generated_files/pwm5.c: 77:      PWM5DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 10710  005E6C  C014  F016         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
 10711  005E70  C015  F017         	movff	PWM5_LoadDutyValue@dutyValue+1,??_PWM5_LoadDutyValue+1
 10712  005E74  90D8               	bcf	status,0,c
 10713  005E76  3217               	rrcf	(??_PWM5_LoadDutyValue+1)^0,f,c
 10714  005E78  3216               	rrcf	??_PWM5_LoadDutyValue^0,f,c
 10715  005E7A  90D8               	bcf	status,0,c
 10716  005E7C  3217               	rrcf	(??_PWM5_LoadDutyValue+1)^0,f,c
 10717  005E7E  3216               	rrcf	??_PWM5_LoadDutyValue^0,f,c
 10718  005E80  5016               	movf	??_PWM5_LoadDutyValue^0,w,c
 10719  005E82  6E6D               	movwf	109,c	;volatile
 10720                           
 10721                           ;mcc_generated_files/pwm5.c: 80:      PWM5DCL = (dutyValue & 0x0003)<<6;
 10722  005E84  C014  F016         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
 10723  005E88  0E03               	movlw	3
 10724  005E8A  1616               	andwf	??_PWM5_LoadDutyValue^0,f,c
 10725  005E8C  0E06               	movlw	6
 10726  005E8E  6E17               	movwf	(??_PWM5_LoadDutyValue+1)^0,c
 10727  005E90                     u10125:
 10728  005E90  90D8               	bcf	status,0,c
 10729  005E92  3616               	rlcf	??_PWM5_LoadDutyValue^0,f,c
 10730  005E94  2E17               	decfsz	(??_PWM5_LoadDutyValue+1)^0,f,c
 10731  005E96  EF48  F02F         	goto	u10125
 10732  005E9A  5016               	movf	??_PWM5_LoadDutyValue^0,w,c
 10733  005E9C  6E6C               	movwf	108,c	;volatile
 10734  005E9E  0012               	return		;funcret
 10735  005EA0                     __end_of_PWM5_LoadDutyValue:
 10736                           	callstack 0
 10737                           
 10738 ;; *************** function _calcSpeed *****************
 10739 ;; Defined at:
 10740 ;;		line 288 in file "main.c"
 10741 ;; Parameters:    Size  Location     Type
 10742 ;;		None
 10743 ;; Auto vars:     Size  Location     Type
 10744 ;;  speed           2   39[BANK0 ] short 
 10745 ;; Return value:  Size  Location     Type
 10746 ;;                  1    wreg      void 
 10747 ;; Registers used:
 10748 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10749 ;; Tracked objects:
 10750 ;;		On entry : 0/0
 10751 ;;		On exit  : 0/0
 10752 ;;		Unchanged: 0/0
 10753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10755 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10756 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10757 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10758 ;;Total ram usage:        6 bytes
 10759 ;; Hardware stack levels used: 1
 10760 ;; Hardware stack levels required when called: 9
 10761 ;; This function calls:
 10762 ;;		___fladd
 10763 ;;		___flmul
 10764 ;;		___fltol
 10765 ;;		___xxtofl
 10766 ;; This function is called by:
 10767 ;;		_loop
 10768 ;; This function uses a non-reentrant model
 10769 ;;
 10770                           
 10771                           	psect	text43
 10772  0032D4                     __ptext43:
 10773                           	callstack 0
 10774  0032D4                     _calcSpeed:
 10775                           	callstack 20
 10776  0032D4                     
 10777                           ;main.c: 289:     int16_t speed = 0;
 10778  0032D4  0E00               	movlw	0
 10779  0032D6  0100               	movlb	0	; () banked
 10780  0032D8  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10781  0032DA  0E00               	movlw	0
 10782  0032DC  6F87               	movwf	calcSpeed@speed& (0+255),b
 10783                           
 10784                           ;main.c: 291:     switch (driveMode) {
 10785  0032DE  EF20  F01A         	goto	l9373
 10786  0032E2                     l9335:
 10787                           
 10788                           ; BSR set to: 0
 10789                           ;main.c: 293:             if (distFront > (30)) {
 10790  0032E2  51FE               	movf	(_distFront+1)& (0+255),w,b	;volatile
 10791  0032E4  E109               	bnz	u10550
 10792  0032E6  0E1F               	movlw	31
 10793  0032E8  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
 10794  0032EA  A0D8               	btfss	status,0,c
 10795  0032EC  EF7A  F019         	goto	u10551
 10796  0032F0  EF7C  F019         	goto	u10550
 10797  0032F4                     u10551:
 10798  0032F4  EF7E  F019         	goto	l9339
 10799  0032F8                     u10550:
 10800  0032F8                     
 10801                           ; BSR set to: 0
 10802                           ;main.c: 294:                 driveMode = Straight;
 10803  0032F8  0E00               	movlw	0
 10804  0032FA  6FFC               	movwf	_driveMode& (0+255),b
 10805  0032FC                     l9339:
 10806                           
 10807                           ; BSR set to: 0
 10808                           ;main.c: 296:             if (setSpeed > (115)) {
 10809  0032FC  BFF0               	btfsc	(_setSpeed+1)& (0+255),7,b
 10810  0032FE  EF8A  F019         	goto	u10561
 10811  003302  51F0               	movf	(_setSpeed+1)& (0+255),w,b
 10812  003304  E109               	bnz	u10560
 10813  003306  0E74               	movlw	116
 10814  003308  5DEF               	subwf	_setSpeed& (0+255),w,b
 10815  00330A  A0D8               	btfss	status,0,c
 10816  00330C  EF8A  F019         	goto	u10561
 10817  003310  EF8C  F019         	goto	u10560
 10818  003314                     u10561:
 10819  003314  EF4D  F01A         	goto	l9375
 10820  003318                     u10560:
 10821  003318                     
 10822                           ; BSR set to: 0
 10823                           ;main.c: 297:                     speed = setSpeed;
 10824  003318  C0EF  F087         	movff	_setSpeed,calcSpeed@speed
 10825  00331C  C0F0  F088         	movff	_setSpeed+1,calcSpeed@speed+1
 10826  003320                     
 10827                           ; BSR set to: 0
 10828                           ;main.c: 298:                 if (distFront < (15)) {
 10829  003320  51FE               	movf	(_distFront+1)& (0+255),w,b	;volatile
 10830  003322  E107               	bnz	u10571
 10831  003324  0E0F               	movlw	15
 10832  003326  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
 10833  003328  B0D8               	btfsc	status,0,c
 10834  00332A  EF99  F019         	goto	u10571
 10835  00332E  EF9B  F019         	goto	u10570
 10836  003332                     u10571:
 10837  003332  EFA1  F019         	goto	l9347
 10838  003336                     u10570:
 10839  003336                     
 10840                           ; BSR set to: 0
 10841                           ;main.c: 299:                     speed -= 4;
 10842  003336  0EFC               	movlw	252
 10843  003338  2787               	addwf	calcSpeed@speed& (0+255),f,b
 10844  00333A  0EFF               	movlw	255
 10845  00333C  2388               	addwfc	(calcSpeed@speed+1)& (0+255),f,b
 10846                           
 10847                           ;main.c: 300:                 } else {
 10848  00333E  EF4D  F01A         	goto	l9375
 10849  003342                     l9347:
 10850                           
 10851                           ; BSR set to: 0
 10852                           ;main.c: 301:                     speed -= 2;
 10853  003342  0EFE               	movlw	254
 10854  003344  2787               	addwf	calcSpeed@speed& (0+255),f,b
 10855  003346  0EFF               	movlw	255
 10856  003348  2388               	addwfc	(calcSpeed@speed+1)& (0+255),f,b
 10857  00334A  EF4D  F01A         	goto	l9375
 10858  00334E                     l9349:
 10859                           
 10860                           ; BSR set to: 0
 10861                           ;main.c: 306:             if (distFront < (30)) {
 10862  00334E  51FE               	movf	(_distFront+1)& (0+255),w,b	;volatile
 10863  003350  E107               	bnz	u10581
 10864  003352  0E1E               	movlw	30
 10865  003354  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
 10866  003356  B0D8               	btfsc	status,0,c
 10867  003358  EFB0  F019         	goto	u10581
 10868  00335C  EFB2  F019         	goto	u10580
 10869  003360                     u10581:
 10870  003360  EFB4  F019         	goto	l9353
 10871  003364                     u10580:
 10872  003364                     
 10873                           ; BSR set to: 0
 10874                           ;main.c: 307:                 driveMode = Brake;
 10875  003364  0E01               	movlw	1
 10876  003366  6FFC               	movwf	_driveMode& (0+255),b
 10877  003368                     l9353:
 10878                           
 10879                           ; BSR set to: 0
 10880                           ;main.c: 310:             if (distFront >= (150)) {
 10881  003368  51FE               	movf	(_distFront+1)& (0+255),w,b	;volatile
 10882  00336A  E109               	bnz	u10590
 10883  00336C  0E96               	movlw	150
 10884  00336E  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
 10885  003370  A0D8               	btfss	status,0,c
 10886  003372  EFBD  F019         	goto	u10591
 10887  003376  EFBF  F019         	goto	u10590
 10888  00337A                     u10591:
 10889  00337A  EF08  F01A         	goto	l9357
 10890  00337E                     u10590:
 10891  00337E                     
 10892                           ; BSR set to: 0
 10893                           ;main.c: 311:                 speed = (int16_t) ((0.85) * (distFront - (150)) + (275));
 10894  00337E  0E00               	movlw	0
 10895  003380  6F71               	movwf	___fladd@a& (0+255),b
 10896  003382  0E80               	movlw	128
 10897  003384  6F72               	movwf	(___fladd@a+1)& (0+255),b
 10898  003386  0E89               	movlw	137
 10899  003388  6F73               	movwf	(___fladd@a+2)& (0+255),b
 10900  00338A  0E43               	movlw	67
 10901  00338C  6F74               	movwf	(___fladd@a+3)& (0+255),b
 10902  00338E  0E9A               	movlw	154
 10903  003390  6E2E               	movwf	___flmul@a^0,c
 10904  003392  0E99               	movlw	153
 10905  003394  6E2F               	movwf	(___flmul@a+1)^0,c
 10906  003396  0E59               	movlw	89
 10907  003398  6E30               	movwf	(___flmul@a+2)^0,c
 10908  00339A  0E3F               	movlw	63
 10909  00339C  6E31               	movwf	(___flmul@a+3)^0,c
 10910  00339E  0E6A               	movlw	106
 10911  0033A0  6F83               	movwf	??_calcSpeed& (0+255),b
 10912  0033A2  0EFF               	movlw	255
 10913  0033A4  6F84               	movwf	(??_calcSpeed+1)& (0+255),b
 10914  0033A6  C0FD  F085         	movff	_distFront,??_calcSpeed+2	;volatile
 10915  0033AA  C0FE  F086         	movff	_distFront+1,??_calcSpeed+3	;volatile
 10916  0033AE  5183               	movf	??_calcSpeed& (0+255),w,b
 10917  0033B0  2785               	addwf	(??_calcSpeed+2)& (0+255),f,b
 10918  0033B2  5184               	movf	(??_calcSpeed+1)& (0+255),w,b
 10919  0033B4  2386               	addwfc	(??_calcSpeed+3)& (0+255),f,b
 10920  0033B6  C085  F01C         	movff	??_calcSpeed+2,___xxtofl@val
 10921  0033BA  C086  F01D         	movff	??_calcSpeed+3,___xxtofl@val+1
 10922  0033BE  6A1E               	clrf	(___xxtofl@val+2)^0,c
 10923  0033C0  6A1F               	clrf	(___xxtofl@val+3)^0,c
 10924  0033C2  0E00               	movlw	0
 10925  0033C4  EC62  F01F         	call	___xxtofl
 10926  0033C8  C01C  F02A         	movff	?___xxtofl,___flmul@b
 10927  0033CC  C01D  F02B         	movff	?___xxtofl+1,___flmul@b+1
 10928  0033D0  C01E  F02C         	movff	?___xxtofl+2,___flmul@b+2
 10929  0033D4  C01F  F02D         	movff	?___xxtofl+3,___flmul@b+3
 10930  0033D8  EC01  F014         	call	___flmul	;wreg free
 10931  0033DC  C02A  F06D         	movff	?___flmul,___fladd@b
 10932  0033E0  C02B  F06E         	movff	?___flmul+1,___fladd@b+1
 10933  0033E4  C02C  F06F         	movff	?___flmul+2,___fladd@b+2
 10934  0033E8  C02D  F070         	movff	?___flmul+3,___fladd@b+3
 10935  0033EC  ECA0  F011         	call	___fladd	;wreg free
 10936  0033F0  C06D  F079         	movff	?___fladd,___fltol@f1
 10937  0033F4  C06E  F07A         	movff	?___fladd+1,___fltol@f1+1
 10938  0033F8  C06F  F07B         	movff	?___fladd+2,___fltol@f1+2
 10939  0033FC  C070  F07C         	movff	?___fladd+3,___fltol@f1+3
 10940  003400  EC18  F024         	call	___fltol	;wreg free
 10941  003404  C079  F087         	movff	?___fltol,calcSpeed@speed
 10942  003408  C07A  F088         	movff	?___fltol+1,calcSpeed@speed+1
 10943                           
 10944                           ;main.c: 312:             } else {
 10945  00340C  EF4D  F01A         	goto	l9375
 10946  003410                     l9357:
 10947                           
 10948                           ; BSR set to: 0
 10949                           ;main.c: 313:                 speed = (275);
 10950  003410  0E01               	movlw	1
 10951  003412  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10952  003414  0E13               	movlw	19
 10953  003416  6F87               	movwf	calcSpeed@speed& (0+255),b
 10954  003418  EF4D  F01A         	goto	l9375
 10955  00341C                     l9359:
 10956                           
 10957                           ; BSR set to: 0
 10958                           ;main.c: 318:             speed = (-125);
 10959  00341C  0EFF               	movlw	255
 10960  00341E  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10961  003420  0E83               	movlw	131
 10962  003422  6F87               	movwf	calcSpeed@speed& (0+255),b
 10963                           
 10964                           ;main.c: 319:             break;
 10965  003424  EF4D  F01A         	goto	l9375
 10966  003428                     l9363:
 10967                           
 10968                           ; BSR set to: 0
 10969                           ;main.c: 324:             speed = (200);
 10970  003428  0E00               	movlw	0
 10971  00342A  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10972  00342C  0EC8               	movlw	200
 10973  00342E  6F87               	movwf	calcSpeed@speed& (0+255),b
 10974                           
 10975                           ;main.c: 325:             break;
 10976  003430  EF4D  F01A         	goto	l9375
 10977  003434                     l9367:
 10978                           
 10979                           ; BSR set to: 0
 10980                           ;main.c: 330:             speed = (250);
 10981  003434  0E00               	movlw	0
 10982  003436  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10983  003438  0EFA               	movlw	250
 10984  00343A  6F87               	movwf	calcSpeed@speed& (0+255),b
 10985                           
 10986                           ;main.c: 331:             break;
 10987  00343C  EF4D  F01A         	goto	l9375
 10988  003440                     l9373:
 10989                           
 10990                           ; BSR set to: 0
 10991  003440  51FC               	movf	_driveMode& (0+255),w,b
 10992  003442  6F83               	movwf	??_calcSpeed& (0+255),b
 10993  003444  6B84               	clrf	(??_calcSpeed+1)& (0+255),b
 10994                           
 10995                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10996                           ; Switch size 1, requested type "simple"
 10997                           ; Number of cases is 1, Range of values is 0 to 0
 10998                           ; switch strategies available:
 10999                           ; Name         Instructions Cycles
 11000                           ; simple_byte            4     3 (average)
 11001                           ;	Chosen strategy is simple_byte
 11002  003446  5184               	movf	(??_calcSpeed+1)& (0+255),w,b
 11003  003448  0A00               	xorlw	0	; case 0
 11004  00344A  B4D8               	btfsc	status,2,c
 11005  00344C  EF2A  F01A         	goto	l9629
 11006  003450  EF4D  F01A         	goto	l9375
 11007  003454                     l9629:
 11008                           
 11009                           ; BSR set to: 0
 11010                           ; Switch size 1, requested type "simple"
 11011                           ; Number of cases is 8, Range of values is 0 to 7
 11012                           ; switch strategies available:
 11013                           ; Name         Instructions Cycles
 11014                           ; simple_byte           25    13 (average)
 11015                           ;	Chosen strategy is simple_byte
 11016  003454  5183               	movf	??_calcSpeed& (0+255),w,b
 11017  003456  0A00               	xorlw	0	; case 0
 11018  003458  B4D8               	btfsc	status,2,c
 11019  00345A  EFA7  F019         	goto	l9349
 11020  00345E  0A01               	xorlw	1	; case 1
 11021  003460  B4D8               	btfsc	status,2,c
 11022  003462  EF71  F019         	goto	l9335
 11023  003466  0A03               	xorlw	3	; case 2
 11024  003468  B4D8               	btfsc	status,2,c
 11025  00346A  EF0E  F01A         	goto	l9359
 11026  00346E  0A01               	xorlw	1	; case 3
 11027  003470  B4D8               	btfsc	status,2,c
 11028  003472  EF0E  F01A         	goto	l9359
 11029  003476  0A07               	xorlw	7	; case 4
 11030  003478  B4D8               	btfsc	status,2,c
 11031  00347A  EF14  F01A         	goto	l9363
 11032  00347E  0A01               	xorlw	1	; case 5
 11033  003480  B4D8               	btfsc	status,2,c
 11034  003482  EF14  F01A         	goto	l9363
 11035  003486  0A03               	xorlw	3	; case 6
 11036  003488  B4D8               	btfsc	status,2,c
 11037  00348A  EF1A  F01A         	goto	l9367
 11038  00348E  0A01               	xorlw	1	; case 7
 11039  003490  B4D8               	btfsc	status,2,c
 11040  003492  EF1A  F01A         	goto	l9367
 11041  003496  EF4D  F01A         	goto	l9375
 11042  00349A                     l9375:
 11043                           
 11044                           ;main.c: 337:     if (speed > (400)) {
 11045  00349A  0100               	movlb	0	; () banked
 11046  00349C  BF88               	btfsc	(calcSpeed@speed+1)& (0+255),7,b
 11047  00349E  EF5A  F01A         	goto	u10601
 11048  0034A2  0E91               	movlw	145
 11049  0034A4  5D87               	subwf	calcSpeed@speed& (0+255),w,b
 11050  0034A6  0E01               	movlw	1
 11051  0034A8  5988               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
 11052  0034AA  A0D8               	btfss	status,0,c
 11053  0034AC  EF5A  F01A         	goto	u10601
 11054  0034B0  EF5C  F01A         	goto	u10600
 11055  0034B4                     u10601:
 11056  0034B4  EF60  F01A         	goto	l9379
 11057  0034B8                     u10600:
 11058  0034B8                     
 11059                           ; BSR set to: 0
 11060                           ;main.c: 338:         speed = (400);
 11061  0034B8  0E01               	movlw	1
 11062  0034BA  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 11063  0034BC  0E90               	movlw	144
 11064  0034BE  6F87               	movwf	calcSpeed@speed& (0+255),b
 11065  0034C0                     l9379:
 11066                           
 11067                           ; BSR set to: 0
 11068                           ;main.c: 340:     if (speed < (-250)) {
 11069  0034C0  AF88               	btfss	(calcSpeed@speed+1)& (0+255),7,b
 11070  0034C2  EF6C  F01A         	goto	u10611
 11071  0034C6  0E06               	movlw	6
 11072  0034C8  5D87               	subwf	calcSpeed@speed& (0+255),w,b
 11073  0034CA  0EFF               	movlw	255
 11074  0034CC  5988               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
 11075  0034CE  B0D8               	btfsc	status,0,c
 11076  0034D0  EF6C  F01A         	goto	u10611
 11077  0034D4  EF6E  F01A         	goto	u10610
 11078  0034D8                     u10611:
 11079  0034D8  EF72  F01A         	goto	l9383
 11080  0034DC                     u10610:
 11081  0034DC                     
 11082                           ; BSR set to: 0
 11083                           ;main.c: 341:         speed = (-250);
 11084  0034DC  0EFF               	movlw	255
 11085  0034DE  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 11086  0034E0  0E06               	movlw	6
 11087  0034E2  6F87               	movwf	calcSpeed@speed& (0+255),b
 11088  0034E4                     l9383:
 11089                           
 11090                           ; BSR set to: 0
 11091                           ;main.c: 343:     setSpeed = speed;
 11092  0034E4  C087  F0EF         	movff	calcSpeed@speed,_setSpeed
 11093  0034E8  C088  F0F0         	movff	calcSpeed@speed+1,_setSpeed+1
 11094  0034EC                     
 11095                           ; BSR set to: 0
 11096  0034EC  0012               	return		;funcret
 11097  0034EE                     __end_of_calcSpeed:
 11098                           	callstack 0
 11099                           
 11100 ;; *************** function ___fladd *****************
 11101 ;; Defined at:
 11102 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
 11103 ;; Parameters:    Size  Location     Type
 11104 ;;  b               4   13[BANK0 ] void 
 11105 ;;  a               4   17[BANK0 ] void 
 11106 ;; Auto vars:     Size  Location     Type
 11107 ;;  grs             1   24[BANK0 ] unsigned char 
 11108 ;;  bexp            1   23[BANK0 ] unsigned char 
 11109 ;;  aexp            1   22[BANK0 ] unsigned char 
 11110 ;;  signs           1   21[BANK0 ] unsigned char 
 11111 ;; Return value:  Size  Location     Type
 11112 ;;                  4   13[BANK0 ] unsigned char 
 11113 ;; Registers used:
 11114 ;;		wreg, status,2, status,0
 11115 ;; Tracked objects:
 11116 ;;		On entry : 0/0
 11117 ;;		On exit  : 0/0
 11118 ;;		Unchanged: 0/0
 11119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11120 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11121 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11122 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11123 ;;      Totals:         4      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11124 ;;Total ram usage:       16 bytes
 11125 ;; Hardware stack levels used: 1
 11126 ;; Hardware stack levels required when called: 8
 11127 ;; This function calls:
 11128 ;;		Nothing
 11129 ;; This function is called by:
 11130 ;;		_calcSpeed
 11131 ;;		___flsub
 11132 ;;		_efgtoa
 11133 ;; This function uses a non-reentrant model
 11134 ;;
 11135                           
 11136                           	psect	text44
 11137  002340                     __ptext44:
 11138                           	callstack 0
 11139  002340                     ___fladd:
 11140                           	callstack 15
 11141  002340  0100               	movlb	0	; () banked
 11142  002342  5170               	movf	(___fladd@b+3)& (0+255),w,b
 11143  002344  0B80               	andlw	128
 11144  002346  6F75               	movwf	___fladd@signs& (0+255),b
 11145  002348  5170               	movf	(___fladd@b+3)& (0+255),w,b
 11146  00234A  2570               	addwf	(___fladd@b+3)& (0+255),w,b
 11147  00234C  6F77               	movwf	___fladd@bexp& (0+255),b
 11148  00234E                     
 11149                           ; BSR set to: 0
 11150  00234E  AF6F               	btfss	(___fladd@b+2)& (0+255),7,b
 11151  002350  EFAC  F011         	goto	u7571
 11152  002354  EFAE  F011         	goto	u7570
 11153  002358                     u7571:
 11154  002358  EFAF  F011         	goto	l7647
 11155  00235C                     u7570:
 11156  00235C                     
 11157                           ; BSR set to: 0
 11158  00235C  8177               	bsf	___fladd@bexp& (0+255),0,b
 11159  00235E                     l7647:
 11160                           
 11161                           ; BSR set to: 0
 11162  00235E  5177               	movf	___fladd@bexp& (0+255),w,b
 11163  002360  B4D8               	btfsc	status,2,c
 11164  002362  EFB5  F011         	goto	u7581
 11165  002366  EFB7  F011         	goto	u7580
 11166  00236A                     u7581:
 11167  00236A  EFCC  F011         	goto	l7657
 11168  00236E                     u7580:
 11169  00236E                     
 11170                           ; BSR set to: 0
 11171  00236E  2977               	incf	___fladd@bexp& (0+255),w,b
 11172  002370  A4D8               	btfss	status,2,c
 11173  002372  EFBD  F011         	goto	u7591
 11174  002376  EFBF  F011         	goto	u7590
 11175  00237A                     u7591:
 11176  00237A  EFC7  F011         	goto	l7653
 11177  00237E                     u7590:
 11178  00237E                     
 11179                           ; BSR set to: 0
 11180  00237E  0E00               	movlw	0
 11181  002380  6F6D               	movwf	___fladd@b& (0+255),b
 11182  002382  0E00               	movlw	0
 11183  002384  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 11184  002386  0E00               	movlw	0
 11185  002388  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 11186  00238A  0E00               	movlw	0
 11187  00238C  6F70               	movwf	(___fladd@b+3)& (0+255),b
 11188  00238E                     l7653:
 11189                           
 11190                           ; BSR set to: 0
 11191  00238E  8F6F               	bsf	(___fladd@b+2)& (0+255),7,b
 11192  002390                     
 11193                           ; BSR set to: 0
 11194  002390  0E00               	movlw	0
 11195  002392  6F70               	movwf	(___fladd@b+3)& (0+255),b
 11196  002394  EFD4  F011         	goto	l7659
 11197  002398                     l7657:
 11198                           
 11199                           ; BSR set to: 0
 11200  002398  0E00               	movlw	0
 11201  00239A  6F6D               	movwf	___fladd@b& (0+255),b
 11202  00239C  0E00               	movlw	0
 11203  00239E  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 11204  0023A0  0E00               	movlw	0
 11205  0023A2  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 11206  0023A4  0E00               	movlw	0
 11207  0023A6  6F70               	movwf	(___fladd@b+3)& (0+255),b
 11208  0023A8                     l7659:
 11209                           
 11210                           ; BSR set to: 0
 11211  0023A8  5174               	movf	(___fladd@a+3)& (0+255),w,b
 11212  0023AA  0B80               	andlw	128
 11213  0023AC  6F76               	movwf	___fladd@aexp& (0+255),b
 11214  0023AE                     
 11215                           ; BSR set to: 0
 11216  0023AE  5175               	movf	___fladd@signs& (0+255),w,b
 11217  0023B0  1976               	xorwf	___fladd@aexp& (0+255),w,b
 11218  0023B2  B4D8               	btfsc	status,2,c
 11219  0023B4  EFDE  F011         	goto	u7601
 11220  0023B8  EFE0  F011         	goto	u7600
 11221  0023BC                     u7601:
 11222  0023BC  EFE1  F011         	goto	l7665
 11223  0023C0                     u7600:
 11224  0023C0                     
 11225                           ; BSR set to: 0
 11226  0023C0  8D75               	bsf	___fladd@signs& (0+255),6,b
 11227  0023C2                     l7665:
 11228                           
 11229                           ; BSR set to: 0
 11230  0023C2  5174               	movf	(___fladd@a+3)& (0+255),w,b
 11231  0023C4  2574               	addwf	(___fladd@a+3)& (0+255),w,b
 11232  0023C6  6F76               	movwf	___fladd@aexp& (0+255),b
 11233  0023C8                     
 11234                           ; BSR set to: 0
 11235  0023C8  AF73               	btfss	(___fladd@a+2)& (0+255),7,b
 11236  0023CA  EFE9  F011         	goto	u7611
 11237  0023CE  EFEB  F011         	goto	u7610
 11238  0023D2                     u7611:
 11239  0023D2  EFEC  F011         	goto	l7671
 11240  0023D6                     u7610:
 11241  0023D6                     
 11242                           ; BSR set to: 0
 11243  0023D6  8176               	bsf	___fladd@aexp& (0+255),0,b
 11244  0023D8                     l7671:
 11245                           
 11246                           ; BSR set to: 0
 11247  0023D8  5176               	movf	___fladd@aexp& (0+255),w,b
 11248  0023DA  B4D8               	btfsc	status,2,c
 11249  0023DC  EFF2  F011         	goto	u7621
 11250  0023E0  EFF4  F011         	goto	u7620
 11251  0023E4                     u7621:
 11252  0023E4  EF09  F012         	goto	l7681
 11253  0023E8                     u7620:
 11254  0023E8                     
 11255                           ; BSR set to: 0
 11256  0023E8  2976               	incf	___fladd@aexp& (0+255),w,b
 11257  0023EA  A4D8               	btfss	status,2,c
 11258  0023EC  EFFA  F011         	goto	u7631
 11259  0023F0  EFFC  F011         	goto	u7630
 11260  0023F4                     u7631:
 11261  0023F4  EF04  F012         	goto	l7677
 11262  0023F8                     u7630:
 11263  0023F8                     
 11264                           ; BSR set to: 0
 11265  0023F8  0E00               	movlw	0
 11266  0023FA  6F71               	movwf	___fladd@a& (0+255),b
 11267  0023FC  0E00               	movlw	0
 11268  0023FE  6F72               	movwf	(___fladd@a+1)& (0+255),b
 11269  002400  0E00               	movlw	0
 11270  002402  6F73               	movwf	(___fladd@a+2)& (0+255),b
 11271  002404  0E00               	movlw	0
 11272  002406  6F74               	movwf	(___fladd@a+3)& (0+255),b
 11273  002408                     l7677:
 11274                           
 11275                           ; BSR set to: 0
 11276  002408  8F73               	bsf	(___fladd@a+2)& (0+255),7,b
 11277  00240A                     
 11278                           ; BSR set to: 0
 11279  00240A  0E00               	movlw	0
 11280  00240C  6F74               	movwf	(___fladd@a+3)& (0+255),b
 11281  00240E  EF11  F012         	goto	l7683
 11282  002412                     l7681:
 11283                           
 11284                           ; BSR set to: 0
 11285  002412  0E00               	movlw	0
 11286  002414  6F71               	movwf	___fladd@a& (0+255),b
 11287  002416  0E00               	movlw	0
 11288  002418  6F72               	movwf	(___fladd@a+1)& (0+255),b
 11289  00241A  0E00               	movlw	0
 11290  00241C  6F73               	movwf	(___fladd@a+2)& (0+255),b
 11291  00241E  0E00               	movlw	0
 11292  002420  6F74               	movwf	(___fladd@a+3)& (0+255),b
 11293  002422                     l7683:
 11294                           
 11295                           ; BSR set to: 0
 11296  002422  5177               	movf	___fladd@bexp& (0+255),w,b
 11297  002424  5D76               	subwf	___fladd@aexp& (0+255),w,b
 11298  002426  B0D8               	btfsc	status,0,c
 11299  002428  EF18  F012         	goto	u7641
 11300  00242C  EF1A  F012         	goto	u7640
 11301  002430                     u7641:
 11302  002430  EF41  F012         	goto	l7719
 11303  002434                     u7640:
 11304  002434                     
 11305                           ; BSR set to: 0
 11306  002434  AD75               	btfss	___fladd@signs& (0+255),6,b
 11307  002436  EF1F  F012         	goto	u7651
 11308  00243A  EF21  F012         	goto	u7650
 11309  00243E                     u7651:
 11310  00243E  EF23  F012         	goto	l7689
 11311  002442                     u7650:
 11312  002442                     
 11313                           ; BSR set to: 0
 11314  002442  0E80               	movlw	128
 11315  002444  1B75               	xorwf	___fladd@signs& (0+255),f,b
 11316  002446                     l7689:
 11317                           
 11318                           ; BSR set to: 0
 11319  002446  C077  F078         	movff	___fladd@bexp,___fladd@grs
 11320  00244A                     
 11321                           ; BSR set to: 0
 11322  00244A  C076  F077         	movff	___fladd@aexp,___fladd@bexp
 11323  00244E                     
 11324                           ; BSR set to: 0
 11325  00244E  C078  F076         	movff	___fladd@grs,___fladd@aexp
 11326  002452                     
 11327                           ; BSR set to: 0
 11328  002452  C06D  F078         	movff	___fladd@b,___fladd@grs
 11329  002456                     
 11330                           ; BSR set to: 0
 11331  002456  C071  F06D         	movff	___fladd@a,___fladd@b
 11332  00245A                     
 11333                           ; BSR set to: 0
 11334  00245A  C078  F071         	movff	___fladd@grs,___fladd@a
 11335  00245E                     
 11336                           ; BSR set to: 0
 11337  00245E  C06E  F078         	movff	___fladd@b+1,___fladd@grs
 11338  002462                     
 11339                           ; BSR set to: 0
 11340  002462  C072  F06E         	movff	___fladd@a+1,___fladd@b+1
 11341  002466                     
 11342                           ; BSR set to: 0
 11343  002466  C078  F072         	movff	___fladd@grs,___fladd@a+1
 11344  00246A                     
 11345                           ; BSR set to: 0
 11346  00246A  C06F  F078         	movff	___fladd@b+2,___fladd@grs
 11347  00246E                     
 11348                           ; BSR set to: 0
 11349  00246E  C073  F06F         	movff	___fladd@a+2,___fladd@b+2
 11350  002472                     
 11351                           ; BSR set to: 0
 11352  002472  C078  F073         	movff	___fladd@grs,___fladd@a+2
 11353  002476                     
 11354                           ; BSR set to: 0
 11355  002476  C070  F078         	movff	___fladd@b+3,___fladd@grs
 11356  00247A                     
 11357                           ; BSR set to: 0
 11358  00247A  C074  F070         	movff	___fladd@a+3,___fladd@b+3
 11359  00247E                     
 11360                           ; BSR set to: 0
 11361  00247E  C078  F074         	movff	___fladd@grs,___fladd@a+3
 11362  002482                     l7719:
 11363                           
 11364                           ; BSR set to: 0
 11365  002482  0E00               	movlw	0
 11366  002484  6F78               	movwf	___fladd@grs& (0+255),b
 11367  002486                     
 11368                           ; BSR set to: 0
 11369  002486  5177               	movf	___fladd@bexp& (0+255),w,b
 11370  002488  C076  F036         	movff	___fladd@aexp,??___fladd
 11371  00248C  6A37               	clrf	(??___fladd+1)^0,c
 11372  00248E  5E36               	subwf	??___fladd^0,f,c
 11373  002490  0E00               	movlw	0
 11374  002492  5A37               	subwfb	(??___fladd+1)^0,f,c
 11375  002494  BE37               	btfsc	(??___fladd+1)^0,7,c
 11376  002496  EF56  F012         	goto	u7661
 11377  00249A  5037               	movf	(??___fladd+1)^0,w,c
 11378  00249C  E109               	bnz	u7660
 11379  00249E  0E1A               	movlw	26
 11380  0024A0  5C36               	subwf	??___fladd^0,w,c
 11381  0024A2  A0D8               	btfss	status,0,c
 11382  0024A4  EF56  F012         	goto	u7661
 11383  0024A8  EF58  F012         	goto	u7660
 11384  0024AC                     u7661:
 11385  0024AC  EF8F  F012         	goto	l1932
 11386  0024B0                     u7660:
 11387  0024B0                     
 11388                           ; BSR set to: 0
 11389  0024B0  516D               	movf	___fladd@b& (0+255),w,b
 11390  0024B2  116E               	iorwf	(___fladd@b+1)& (0+255),w,b
 11391  0024B4  116F               	iorwf	(___fladd@b+2)& (0+255),w,b
 11392  0024B6  1170               	iorwf	(___fladd@b+3)& (0+255),w,b
 11393  0024B8  A4D8               	btfss	status,2,c
 11394  0024BA  EF61  F012         	goto	u7671
 11395  0024BE  EF64  F012         	goto	u7670
 11396  0024C2                     u7671:
 11397  0024C2  0E01               	movlw	1
 11398  0024C4  EF65  F012         	goto	u7680
 11399  0024C8                     u7670:
 11400  0024C8  0E00               	movlw	0
 11401  0024CA                     u7680:
 11402  0024CA  6F78               	movwf	___fladd@grs& (0+255),b
 11403  0024CC                     
 11404                           ; BSR set to: 0
 11405  0024CC  0E00               	movlw	0
 11406  0024CE  6F6D               	movwf	___fladd@b& (0+255),b
 11407  0024D0  0E00               	movlw	0
 11408  0024D2  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 11409  0024D4  0E00               	movlw	0
 11410  0024D6  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 11411  0024D8  0E00               	movlw	0
 11412  0024DA  6F70               	movwf	(___fladd@b+3)& (0+255),b
 11413  0024DC                     
 11414                           ; BSR set to: 0
 11415  0024DC  C076  F077         	movff	___fladd@aexp,___fladd@bexp
 11416  0024E0  EF98  F012         	goto	l1931
 11417  0024E4                     l1933:
 11418                           
 11419                           ; BSR set to: 0
 11420  0024E4  A178               	btfss	___fladd@grs& (0+255),0,b
 11421  0024E6  EF77  F012         	goto	u7691
 11422  0024EA  EF79  F012         	goto	u7690
 11423  0024EE                     u7691:
 11424  0024EE  EF7F  F012         	goto	l7731
 11425  0024F2                     u7690:
 11426  0024F2                     
 11427                           ; BSR set to: 0
 11428  0024F2  90D8               	bcf	status,0,c
 11429  0024F4  3178               	rrcf	___fladd@grs& (0+255),w,b
 11430  0024F6  0901               	iorlw	1
 11431  0024F8  6F78               	movwf	___fladd@grs& (0+255),b
 11432  0024FA  EF81  F012         	goto	l7733
 11433  0024FE                     l7731:
 11434                           
 11435                           ; BSR set to: 0
 11436  0024FE  90D8               	bcf	status,0,c
 11437  002500  3378               	rrcf	___fladd@grs& (0+255),f,b
 11438  002502                     l7733:
 11439                           
 11440                           ; BSR set to: 0
 11441  002502  A16D               	btfss	___fladd@b& (0+255),0,b
 11442  002504  EF86  F012         	goto	u7701
 11443  002508  EF88  F012         	goto	u7700
 11444  00250C                     u7701:
 11445  00250C  EF89  F012         	goto	l7737
 11446  002510                     u7700:
 11447  002510                     
 11448                           ; BSR set to: 0
 11449  002510  8F78               	bsf	___fladd@grs& (0+255),7,b
 11450  002512                     l7737:
 11451                           
 11452                           ; BSR set to: 0
 11453  002512  3570               	rlcf	(___fladd@b+3)& (0+255),w,b
 11454  002514  3370               	rrcf	(___fladd@b+3)& (0+255),f,b
 11455  002516  336F               	rrcf	(___fladd@b+2)& (0+255),f,b
 11456  002518  336E               	rrcf	(___fladd@b+1)& (0+255),f,b
 11457  00251A  336D               	rrcf	___fladd@b& (0+255),f,b
 11458  00251C                     
 11459                           ; BSR set to: 0
 11460  00251C  2B77               	incf	___fladd@bexp& (0+255),f,b
 11461  00251E                     l1932:
 11462                           
 11463                           ; BSR set to: 0
 11464  00251E  5176               	movf	___fladd@aexp& (0+255),w,b
 11465  002520  5D77               	subwf	___fladd@bexp& (0+255),w,b
 11466  002522  A0D8               	btfss	status,0,c
 11467  002524  EF96  F012         	goto	u7711
 11468  002528  EF98  F012         	goto	u7710
 11469  00252C                     u7711:
 11470  00252C  EF72  F012         	goto	l1933
 11471  002530                     u7710:
 11472  002530                     l1931:
 11473                           
 11474                           ; BSR set to: 0
 11475  002530  BD75               	btfsc	___fladd@signs& (0+255),6,b
 11476  002532  EF9D  F012         	goto	u7721
 11477  002536  EF9F  F012         	goto	u7720
 11478  00253A                     u7721:
 11479  00253A  EFDF  F012         	goto	l7765
 11480  00253E                     u7720:
 11481  00253E                     
 11482                           ; BSR set to: 0
 11483  00253E  5177               	movf	___fladd@bexp& (0+255),w,b
 11484  002540  A4D8               	btfss	status,2,c
 11485  002542  EFA5  F012         	goto	u7731
 11486  002546  EFA7  F012         	goto	u7730
 11487  00254A                     u7731:
 11488  00254A  EFB1  F012         	goto	l7747
 11489  00254E                     u7730:
 11490  00254E                     
 11491                           ; BSR set to: 0
 11492  00254E  0E00               	movlw	0
 11493  002550  6F6D               	movwf	?___fladd& (0+255),b
 11494  002552  0E00               	movlw	0
 11495  002554  6F6E               	movwf	(?___fladd+1)& (0+255),b
 11496  002556  0E00               	movlw	0
 11497  002558  6F6F               	movwf	(?___fladd+2)& (0+255),b
 11498  00255A  0E00               	movlw	0
 11499  00255C  6F70               	movwf	(?___fladd+3)& (0+255),b
 11500  00255E  EF00  F014         	goto	l1940
 11501  002562                     l7747:
 11502                           
 11503                           ; BSR set to: 0
 11504  002562  5171               	movf	___fladd@a& (0+255),w,b
 11505  002564  276D               	addwf	___fladd@b& (0+255),f,b
 11506  002566  5172               	movf	(___fladd@a+1)& (0+255),w,b
 11507  002568  236E               	addwfc	(___fladd@b+1)& (0+255),f,b
 11508  00256A  5173               	movf	(___fladd@a+2)& (0+255),w,b
 11509  00256C  236F               	addwfc	(___fladd@b+2)& (0+255),f,b
 11510  00256E  5174               	movf	(___fladd@a+3)& (0+255),w,b
 11511  002570  2370               	addwfc	(___fladd@b+3)& (0+255),f,b
 11512  002572                     
 11513                           ; BSR set to: 0
 11514  002572  A170               	btfss	(___fladd@b+3)& (0+255),0,b
 11515  002574  EFBE  F012         	goto	u7741
 11516  002578  EFC0  F012         	goto	u7740
 11517  00257C                     u7741:
 11518  00257C  EF6C  F013         	goto	l7801
 11519  002580                     u7740:
 11520  002580                     
 11521                           ; BSR set to: 0
 11522  002580  A178               	btfss	___fladd@grs& (0+255),0,b
 11523  002582  EFC5  F012         	goto	u7751
 11524  002586  EFC7  F012         	goto	u7750
 11525  00258A                     u7751:
 11526  00258A  EFCD  F012         	goto	l7755
 11527  00258E                     u7750:
 11528  00258E                     
 11529                           ; BSR set to: 0
 11530  00258E  90D8               	bcf	status,0,c
 11531  002590  3178               	rrcf	___fladd@grs& (0+255),w,b
 11532  002592  0901               	iorlw	1
 11533  002594  6F78               	movwf	___fladd@grs& (0+255),b
 11534  002596  EFCF  F012         	goto	l7757
 11535  00259A                     l7755:
 11536                           
 11537                           ; BSR set to: 0
 11538  00259A  90D8               	bcf	status,0,c
 11539  00259C  3378               	rrcf	___fladd@grs& (0+255),f,b
 11540  00259E                     l7757:
 11541                           
 11542                           ; BSR set to: 0
 11543  00259E  A16D               	btfss	___fladd@b& (0+255),0,b
 11544  0025A0  EFD4  F012         	goto	u7761
 11545  0025A4  EFD6  F012         	goto	u7760
 11546  0025A8                     u7761:
 11547  0025A8  EFD7  F012         	goto	l7761
 11548  0025AC                     u7760:
 11549  0025AC                     
 11550                           ; BSR set to: 0
 11551  0025AC  8F78               	bsf	___fladd@grs& (0+255),7,b
 11552  0025AE                     l7761:
 11553                           
 11554                           ; BSR set to: 0
 11555  0025AE  3570               	rlcf	(___fladd@b+3)& (0+255),w,b
 11556  0025B0  3370               	rrcf	(___fladd@b+3)& (0+255),f,b
 11557  0025B2  336F               	rrcf	(___fladd@b+2)& (0+255),f,b
 11558  0025B4  336E               	rrcf	(___fladd@b+1)& (0+255),f,b
 11559  0025B6  336D               	rrcf	___fladd@b& (0+255),f,b
 11560  0025B8                     
 11561                           ; BSR set to: 0
 11562  0025B8  2B77               	incf	___fladd@bexp& (0+255),f,b
 11563  0025BA  EF6C  F013         	goto	l7801
 11564  0025BE                     l7765:
 11565                           
 11566                           ; BSR set to: 0
 11567  0025BE  5171               	movf	___fladd@a& (0+255),w,b
 11568  0025C0  5D6D               	subwf	___fladd@b& (0+255),w,b
 11569  0025C2  5172               	movf	(___fladd@a+1)& (0+255),w,b
 11570  0025C4  596E               	subwfb	(___fladd@b+1)& (0+255),w,b
 11571  0025C6  5173               	movf	(___fladd@a+2)& (0+255),w,b
 11572  0025C8  596F               	subwfb	(___fladd@b+2)& (0+255),w,b
 11573  0025CA  5170               	movf	(___fladd@b+3)& (0+255),w,b
 11574  0025CC  0A80               	xorlw	128
 11575  0025CE  6E36               	movwf	??___fladd^0,c
 11576  0025D0  5174               	movf	(___fladd@a+3)& (0+255),w,b
 11577  0025D2  0A80               	xorlw	128
 11578  0025D4  5836               	subwfb	??___fladd^0,w,c
 11579  0025D6  B0D8               	btfsc	status,0,c
 11580  0025D8  EFF0  F012         	goto	u7771
 11581  0025DC  EFF2  F012         	goto	u7770
 11582  0025E0                     u7771:
 11583  0025E0  EF1D  F013         	goto	l7775
 11584  0025E4                     u7770:
 11585  0025E4                     
 11586                           ; BSR set to: 0
 11587  0025E4  516D               	movf	___fladd@b& (0+255),w,b
 11588  0025E6  5D71               	subwf	___fladd@a& (0+255),w,b
 11589  0025E8  6E36               	movwf	??___fladd^0,c
 11590  0025EA  516E               	movf	(___fladd@b+1)& (0+255),w,b
 11591  0025EC  5972               	subwfb	(___fladd@a+1)& (0+255),w,b
 11592  0025EE  6E37               	movwf	(??___fladd+1)^0,c
 11593  0025F0  516F               	movf	(___fladd@b+2)& (0+255),w,b
 11594  0025F2  5973               	subwfb	(___fladd@a+2)& (0+255),w,b
 11595  0025F4  6E38               	movwf	(??___fladd+2)^0,c
 11596  0025F6  5170               	movf	(___fladd@b+3)& (0+255),w,b
 11597  0025F8  5974               	subwfb	(___fladd@a+3)& (0+255),w,b
 11598  0025FA  6E39               	movwf	(??___fladd+3)^0,c
 11599  0025FC  0EFF               	movlw	255
 11600  0025FE  2436               	addwf	??___fladd^0,w,c
 11601  002600  6F6D               	movwf	___fladd@b& (0+255),b
 11602  002602  0EFF               	movlw	255
 11603  002604  2037               	addwfc	(??___fladd+1)^0,w,c
 11604  002606  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 11605  002608  0EFF               	movlw	255
 11606  00260A  2038               	addwfc	(??___fladd+2)^0,w,c
 11607  00260C  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 11608  00260E  0EFF               	movlw	255
 11609  002610  2039               	addwfc	(??___fladd+3)^0,w,c
 11610  002612  6F70               	movwf	(___fladd@b+3)& (0+255),b
 11611  002614  0E80               	movlw	128
 11612  002616  1B75               	xorwf	___fladd@signs& (0+255),f,b
 11613  002618                     
 11614                           ; BSR set to: 0
 11615  002618  6D78               	negf	___fladd@grs& (0+255),b
 11616  00261A                     
 11617                           ; BSR set to: 0
 11618  00261A  5178               	movf	___fladd@grs& (0+255),w,b
 11619  00261C  A4D8               	btfss	status,2,c
 11620  00261E  EF13  F013         	goto	u7781
 11621  002622  EF15  F013         	goto	u7780
 11622  002626                     u7781:
 11623  002626  EF25  F013         	goto	l1948
 11624  00262A                     u7780:
 11625  00262A                     
 11626                           ; BSR set to: 0
 11627  00262A  0E01               	movlw	1
 11628  00262C  276D               	addwf	___fladd@b& (0+255),f,b
 11629  00262E  0E00               	movlw	0
 11630  002630  236E               	addwfc	(___fladd@b+1)& (0+255),f,b
 11631  002632  236F               	addwfc	(___fladd@b+2)& (0+255),f,b
 11632  002634  2370               	addwfc	(___fladd@b+3)& (0+255),f,b
 11633  002636  EF25  F013         	goto	l1948
 11634  00263A                     l7775:
 11635                           
 11636                           ; BSR set to: 0
 11637  00263A  5171               	movf	___fladd@a& (0+255),w,b
 11638  00263C  5F6D               	subwf	___fladd@b& (0+255),f,b
 11639  00263E  5172               	movf	(___fladd@a+1)& (0+255),w,b
 11640  002640  5B6E               	subwfb	(___fladd@b+1)& (0+255),f,b
 11641  002642  5173               	movf	(___fladd@a+2)& (0+255),w,b
 11642  002644  5B6F               	subwfb	(___fladd@b+2)& (0+255),f,b
 11643  002646  5174               	movf	(___fladd@a+3)& (0+255),w,b
 11644  002648  5B70               	subwfb	(___fladd@b+3)& (0+255),f,b
 11645  00264A                     l1948:
 11646                           
 11647                           ; BSR set to: 0
 11648  00264A  516D               	movf	___fladd@b& (0+255),w,b
 11649  00264C  116E               	iorwf	(___fladd@b+1)& (0+255),w,b
 11650  00264E  116F               	iorwf	(___fladd@b+2)& (0+255),w,b
 11651  002650  1170               	iorwf	(___fladd@b+3)& (0+255),w,b
 11652  002652  A4D8               	btfss	status,2,c
 11653  002654  EF2E  F013         	goto	u7791
 11654  002658  EF30  F013         	goto	u7790
 11655  00265C                     u7791:
 11656  00265C  EF65  F013         	goto	l7799
 11657  002660                     u7790:
 11658  002660                     
 11659                           ; BSR set to: 0
 11660  002660  5178               	movf	___fladd@grs& (0+255),w,b
 11661  002662  A4D8               	btfss	status,2,c
 11662  002664  EF36  F013         	goto	u7801
 11663  002668  EF38  F013         	goto	u7800
 11664  00266C                     u7801:
 11665  00266C  EF65  F013         	goto	l7799
 11666  002670                     u7800:
 11667  002670                     
 11668                           ; BSR set to: 0
 11669  002670  0E00               	movlw	0
 11670  002672  6F6D               	movwf	?___fladd& (0+255),b
 11671  002674  0E00               	movlw	0
 11672  002676  6F6E               	movwf	(?___fladd+1)& (0+255),b
 11673  002678  0E00               	movlw	0
 11674  00267A  6F6F               	movwf	(?___fladd+2)& (0+255),b
 11675  00267C  0E00               	movlw	0
 11676  00267E  6F70               	movwf	(?___fladd+3)& (0+255),b
 11677  002680  EF00  F014         	goto	l1940
 11678  002684                     l7783:
 11679                           
 11680                           ; BSR set to: 0
 11681  002684  90D8               	bcf	status,0,c
 11682  002686  376D               	rlcf	___fladd@b& (0+255),f,b
 11683  002688  376E               	rlcf	(___fladd@b+1)& (0+255),f,b
 11684  00268A  376F               	rlcf	(___fladd@b+2)& (0+255),f,b
 11685  00268C  3770               	rlcf	(___fladd@b+3)& (0+255),f,b
 11686  00268E                     
 11687                           ; BSR set to: 0
 11688  00268E  AF78               	btfss	___fladd@grs& (0+255),7,b
 11689  002690  EF4C  F013         	goto	u7811
 11690  002694  EF4E  F013         	goto	u7810
 11691  002698                     u7811:
 11692  002698  EF4F  F013         	goto	l7789
 11693  00269C                     u7810:
 11694  00269C                     
 11695                           ; BSR set to: 0
 11696  00269C  816D               	bsf	___fladd@b& (0+255),0,b
 11697  00269E                     l7789:
 11698                           
 11699                           ; BSR set to: 0
 11700  00269E  A178               	btfss	___fladd@grs& (0+255),0,b
 11701  0026A0  EF54  F013         	goto	u7821
 11702  0026A4  EF56  F013         	goto	u7820
 11703  0026A8                     u7821:
 11704  0026A8  EF5A  F013         	goto	l7793
 11705  0026AC                     u7820:
 11706  0026AC                     
 11707                           ; BSR set to: 0
 11708  0026AC  80D8               	bsf	status,0,c
 11709  0026AE  3778               	rlcf	___fladd@grs& (0+255),f,b
 11710  0026B0  EF5C  F013         	goto	l7795
 11711  0026B4                     l7793:
 11712                           
 11713                           ; BSR set to: 0
 11714  0026B4  90D8               	bcf	status,0,c
 11715  0026B6  3778               	rlcf	___fladd@grs& (0+255),f,b
 11716  0026B8                     l7795:
 11717                           
 11718                           ; BSR set to: 0
 11719  0026B8  5177               	movf	___fladd@bexp& (0+255),w,b
 11720  0026BA  B4D8               	btfsc	status,2,c
 11721  0026BC  EF62  F013         	goto	u7831
 11722  0026C0  EF64  F013         	goto	u7830
 11723  0026C4                     u7831:
 11724  0026C4  EF65  F013         	goto	l7799
 11725  0026C8                     u7830:
 11726  0026C8                     
 11727                           ; BSR set to: 0
 11728  0026C8  0777               	decf	___fladd@bexp& (0+255),f,b
 11729  0026CA                     l7799:
 11730                           
 11731                           ; BSR set to: 0
 11732  0026CA  AF6F               	btfss	(___fladd@b+2)& (0+255),7,b
 11733  0026CC  EF6A  F013         	goto	u7841
 11734  0026D0  EF6C  F013         	goto	u7840
 11735  0026D4                     u7841:
 11736  0026D4  EF42  F013         	goto	l7783
 11737  0026D8                     u7840:
 11738  0026D8                     l7801:
 11739                           
 11740                           ; BSR set to: 0
 11741  0026D8  0E00               	movlw	0
 11742  0026DA  6F76               	movwf	___fladd@aexp& (0+255),b
 11743  0026DC                     
 11744                           ; BSR set to: 0
 11745  0026DC  AF78               	btfss	___fladd@grs& (0+255),7,b
 11746  0026DE  EF73  F013         	goto	u7851
 11747  0026E2  EF75  F013         	goto	u7850
 11748  0026E6                     u7851:
 11749  0026E6  EF8D  F013         	goto	l1957
 11750  0026EA                     u7850:
 11751  0026EA                     
 11752                           ; BSR set to: 0
 11753  0026EA  C078  F036         	movff	___fladd@grs,??___fladd
 11754  0026EE  0E7F               	movlw	127
 11755  0026F0  1636               	andwf	??___fladd^0,f,c
 11756  0026F2  B4D8               	btfsc	status,2,c
 11757  0026F4  EF7E  F013         	goto	u7861
 11758  0026F8  EF80  F013         	goto	u7860
 11759  0026FC                     u7861:
 11760  0026FC  EF84  F013         	goto	l1958
 11761  002700                     u7860:
 11762  002700                     l7807:
 11763                           
 11764                           ; BSR set to: 0
 11765  002700  0E01               	movlw	1
 11766  002702  6F76               	movwf	___fladd@aexp& (0+255),b
 11767  002704  EF8D  F013         	goto	l1957
 11768  002708                     l1958:
 11769                           
 11770                           ; BSR set to: 0
 11771  002708  A16D               	btfss	___fladd@b& (0+255),0,b
 11772  00270A  EF89  F013         	goto	u7871
 11773  00270E  EF8B  F013         	goto	u7870
 11774  002712                     u7871:
 11775  002712  EF8D  F013         	goto	l1957
 11776  002716                     u7870:
 11777  002716  EF80  F013         	goto	l7807
 11778  00271A                     l1957:
 11779                           
 11780                           ; BSR set to: 0
 11781  00271A  5176               	movf	___fladd@aexp& (0+255),w,b
 11782  00271C  B4D8               	btfsc	status,2,c
 11783  00271E  EF93  F013         	goto	u7881
 11784  002722  EF95  F013         	goto	u7880
 11785  002726                     u7881:
 11786  002726  EFC0  F013         	goto	l7819
 11787  00272A                     u7880:
 11788  00272A                     
 11789                           ; BSR set to: 0
 11790  00272A  0E01               	movlw	1
 11791  00272C  276D               	addwf	___fladd@b& (0+255),f,b
 11792  00272E  0E00               	movlw	0
 11793  002730  236E               	addwfc	(___fladd@b+1)& (0+255),f,b
 11794  002732  236F               	addwfc	(___fladd@b+2)& (0+255),f,b
 11795  002734  2370               	addwfc	(___fladd@b+3)& (0+255),f,b
 11796  002736                     
 11797                           ; BSR set to: 0
 11798  002736  A170               	btfss	(___fladd@b+3)& (0+255),0,b
 11799  002738  EFA0  F013         	goto	u7891
 11800  00273C  EFA2  F013         	goto	u7890
 11801  002740                     u7891:
 11802  002740  EFC0  F013         	goto	l7819
 11803  002744                     u7890:
 11804  002744                     
 11805                           ; BSR set to: 0
 11806  002744  C06D  F036         	movff	___fladd@b,??___fladd
 11807  002748  C06E  F037         	movff	___fladd@b+1,??___fladd+1
 11808  00274C  C06F  F038         	movff	___fladd@b+2,??___fladd+2
 11809  002750  C070  F039         	movff	___fladd@b+3,??___fladd+3
 11810  002754  3439               	rlcf	(??___fladd+3)^0,w,c
 11811  002756  3239               	rrcf	(??___fladd+3)^0,f,c
 11812  002758  3238               	rrcf	(??___fladd+2)^0,f,c
 11813  00275A  3237               	rrcf	(??___fladd+1)^0,f,c
 11814  00275C  3236               	rrcf	??___fladd^0,f,c
 11815  00275E  C036  F06D         	movff	??___fladd,___fladd@b
 11816  002762  C037  F06E         	movff	??___fladd+1,___fladd@b+1
 11817  002766  C038  F06F         	movff	??___fladd+2,___fladd@b+2
 11818  00276A  C039  F070         	movff	??___fladd+3,___fladd@b+3
 11819  00276E  2977               	incf	___fladd@bexp& (0+255),w,b
 11820  002770  B4D8               	btfsc	status,2,c
 11821  002772  EFBD  F013         	goto	u7901
 11822  002776  EFBF  F013         	goto	u7900
 11823  00277A                     u7901:
 11824  00277A  EFC0  F013         	goto	l7819
 11825  00277E                     u7900:
 11826  00277E                     
 11827                           ; BSR set to: 0
 11828  00277E  2B77               	incf	___fladd@bexp& (0+255),f,b
 11829  002780                     l7819:
 11830                           
 11831                           ; BSR set to: 0
 11832  002780  2977               	incf	___fladd@bexp& (0+255),w,b
 11833  002782  B4D8               	btfsc	status,2,c
 11834  002784  EFC6  F013         	goto	u7911
 11835  002788  EFC8  F013         	goto	u7910
 11836  00278C                     u7911:
 11837  00278C  EFD0  F013         	goto	l7823
 11838  002790                     u7910:
 11839  002790                     
 11840                           ; BSR set to: 0
 11841  002790  5177               	movf	___fladd@bexp& (0+255),w,b
 11842  002792  A4D8               	btfss	status,2,c
 11843  002794  EFCE  F013         	goto	u7921
 11844  002798  EFD0  F013         	goto	u7920
 11845  00279C                     u7921:
 11846  00279C  EFE2  F013         	goto	l7827
 11847  0027A0                     u7920:
 11848  0027A0                     l7823:
 11849                           
 11850                           ; BSR set to: 0
 11851  0027A0  0E00               	movlw	0
 11852  0027A2  6F6D               	movwf	___fladd@b& (0+255),b
 11853  0027A4  0E00               	movlw	0
 11854  0027A6  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 11855  0027A8  0E00               	movlw	0
 11856  0027AA  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 11857  0027AC  0E00               	movlw	0
 11858  0027AE  6F70               	movwf	(___fladd@b+3)& (0+255),b
 11859  0027B0  5177               	movf	___fladd@bexp& (0+255),w,b
 11860  0027B2  A4D8               	btfss	status,2,c
 11861  0027B4  EFDE  F013         	goto	u7931
 11862  0027B8  EFE0  F013         	goto	u7930
 11863  0027BC                     u7931:
 11864  0027BC  EFE2  F013         	goto	l7827
 11865  0027C0                     u7930:
 11866  0027C0                     
 11867                           ; BSR set to: 0
 11868  0027C0  0E00               	movlw	0
 11869  0027C2  6F75               	movwf	___fladd@signs& (0+255),b
 11870  0027C4                     l7827:
 11871                           
 11872                           ; BSR set to: 0
 11873  0027C4  A177               	btfss	___fladd@bexp& (0+255),0,b
 11874  0027C6  EFE7  F013         	goto	u7941
 11875  0027CA  EFE9  F013         	goto	u7940
 11876  0027CE                     u7941:
 11877  0027CE  EFEC  F013         	goto	l7831
 11878  0027D2                     u7940:
 11879  0027D2                     
 11880                           ; BSR set to: 0
 11881  0027D2  8F6F               	bsf	(___fladd@b+2)& (0+255),7,b
 11882  0027D4  EFED  F013         	goto	l7833
 11883  0027D8                     l7831:
 11884                           
 11885                           ; BSR set to: 0
 11886  0027D8  9F6F               	bcf	(___fladd@b+2)& (0+255),7,b
 11887  0027DA                     l7833:
 11888                           
 11889                           ; BSR set to: 0
 11890  0027DA  90D8               	bcf	status,0,c
 11891  0027DC  3177               	rrcf	___fladd@bexp& (0+255),w,b
 11892  0027DE  6F70               	movwf	(___fladd@b+3)& (0+255),b
 11893  0027E0                     
 11894                           ; BSR set to: 0
 11895  0027E0  AF75               	btfss	___fladd@signs& (0+255),7,b
 11896  0027E2  EFF5  F013         	goto	u7951
 11897  0027E6  EFF7  F013         	goto	u7950
 11898  0027EA                     u7951:
 11899  0027EA  EFF8  F013         	goto	l7839
 11900  0027EE                     u7950:
 11901  0027EE                     
 11902                           ; BSR set to: 0
 11903  0027EE  8F70               	bsf	(___fladd@b+3)& (0+255),7,b
 11904  0027F0                     l7839:
 11905                           
 11906                           ; BSR set to: 0
 11907  0027F0  C06D  F06D         	movff	___fladd@b,?___fladd
 11908  0027F4  C06E  F06E         	movff	___fladd@b+1,?___fladd+1
 11909  0027F8  C06F  F06F         	movff	___fladd@b+2,?___fladd+2
 11910  0027FC  C070  F070         	movff	___fladd@b+3,?___fladd+3
 11911  002800                     l1940:
 11912                           
 11913                           ; BSR set to: 0
 11914  002800  0012               	return		;funcret
 11915  002802                     __end_of___fladd:
 11916                           	callstack 0
 11917                           
 11918 ;; *************** function _calcMotorPow *****************
 11919 ;; Defined at:
 11920 ;;		line 346 in file "main.c"
 11921 ;; Parameters:    Size  Location     Type
 11922 ;;		None
 11923 ;; Auto vars:     Size  Location     Type
 11924 ;;  oldSpeedDelt    2   39[BANK0 ] short 
 11925 ;;  setSpeedDelt    2   37[BANK0 ] short 
 11926 ;;  addMPow         1   41[BANK0 ] char 
 11927 ;; Return value:  Size  Location     Type
 11928 ;;                  1    wreg      void 
 11929 ;; Registers used:
 11930 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11931 ;; Tracked objects:
 11932 ;;		On entry : 0/0
 11933 ;;		On exit  : 0/0
 11934 ;;		Unchanged: 0/0
 11935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11937 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11938 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11939 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11940 ;;Total ram usage:        7 bytes
 11941 ;; Hardware stack levels used: 1
 11942 ;; Hardware stack levels required when called: 10
 11943 ;; This function calls:
 11944 ;;		___awdiv
 11945 ;;		___flmul
 11946 ;;		___fltol
 11947 ;;		___xxtofl
 11948 ;;		_actSpeed
 11949 ;;		_setMotor
 11950 ;; This function is called by:
 11951 ;;		_loop
 11952 ;; This function uses a non-reentrant model
 11953 ;;
 11954                           
 11955                           	psect	text45
 11956  0044B2                     __ptext45:
 11957                           	callstack 0
 11958  0044B2                     _calcMotorPow:
 11959                           	callstack 19
 11960  0044B2                     
 11961                           ;main.c: 347:     currentSpeed = actSpeed();
 11962  0044B2  ECF1  F02A         	call	_actSpeed	;wreg free
 11963  0044B6  C022  F0ED         	movff	?_actSpeed,_currentSpeed
 11964  0044BA  C023  F0EE         	movff	?_actSpeed+1,_currentSpeed+1
 11965  0044BE                     
 11966                           ;main.c: 349:     int16_t setSpeedDelta = setSpeed - currentSpeed;
 11967  0044BE  0100               	movlb	0	; () banked
 11968  0044C0  51ED               	movf	_currentSpeed& (0+255),w,b
 11969  0044C2  5DEF               	subwf	_setSpeed& (0+255),w,b
 11970  0044C4  6F85               	movwf	calcMotorPow@setSpeedDelta& (0+255),b
 11971  0044C6  51EE               	movf	(_currentSpeed+1)& (0+255),w,b
 11972  0044C8  59F0               	subwfb	(_setSpeed+1)& (0+255),w,b
 11973  0044CA  6F86               	movwf	(calcMotorPow@setSpeedDelta+1)& (0+255),b
 11974  0044CC                     
 11975                           ; BSR set to: 0
 11976                           ;main.c: 350:     int16_t oldSpeedDelta = currentSpeed - oldSpeed;
 11977  0044CC  0101               	movlb	1	; () banked
 11978  0044CE  512E               	movf	_oldSpeed& (0+255),w,b
 11979  0044D0  0100               	movlb	0	; () banked
 11980  0044D2  5DED               	subwf	_currentSpeed& (0+255),w,b
 11981  0044D4  6F87               	movwf	calcMotorPow@oldSpeedDelta& (0+255),b
 11982  0044D6  0101               	movlb	1	; () banked
 11983  0044D8  512F               	movf	(_oldSpeed+1)& (0+255),w,b
 11984  0044DA  0100               	movlb	0	; () banked
 11985  0044DC  59EE               	subwfb	(_currentSpeed+1)& (0+255),w,b
 11986  0044DE  6F88               	movwf	(calcMotorPow@oldSpeedDelta+1)& (0+255),b
 11987  0044E0                     
 11988                           ; BSR set to: 0
 11989                           ;main.c: 356:     addMPow = (int8_t) ((0.020) * (setSpeedDelta - (oldSpeedDelta / (2))))
      +                          ;
 11990  0044E0  0E0A               	movlw	10
 11991  0044E2  6E2E               	movwf	___flmul@a^0,c
 11992  0044E4  0ED7               	movlw	215
 11993  0044E6  6E2F               	movwf	(___flmul@a+1)^0,c
 11994  0044E8  0EA3               	movlw	163
 11995  0044EA  6E30               	movwf	(___flmul@a+2)^0,c
 11996  0044EC  0E3C               	movlw	60
 11997  0044EE  6E31               	movwf	(___flmul@a+3)^0,c
 11998  0044F0  0E00               	movlw	0
 11999  0044F2  6E17               	movwf	(___awdiv@divisor+1)^0,c
 12000  0044F4  0E02               	movlw	2
 12001  0044F6  6E16               	movwf	___awdiv@divisor^0,c
 12002  0044F8  C087  F014         	movff	calcMotorPow@oldSpeedDelta,___awdiv@dividend
 12003  0044FC  C088  F015         	movff	calcMotorPow@oldSpeedDelta+1,___awdiv@dividend+1
 12004  004500  EC34  F028         	call	___awdiv	;wreg free
 12005  004504  C085  F083         	movff	calcMotorPow@setSpeedDelta,??_calcMotorPow
 12006  004508  C086  F084         	movff	calcMotorPow@setSpeedDelta+1,??_calcMotorPow+1
 12007  00450C  5014               	movf	?___awdiv^0,w,c
 12008  00450E  0100               	movlb	0	; () banked
 12009  004510  5F83               	subwf	??_calcMotorPow& (0+255),f,b
 12010  004512  5015               	movf	(?___awdiv+1)^0,w,c
 12011  004514  5B84               	subwfb	(??_calcMotorPow+1)& (0+255),f,b
 12012  004516  C083  F01C         	movff	??_calcMotorPow,___xxtofl@val
 12013  00451A  C084  F01D         	movff	??_calcMotorPow+1,___xxtofl@val+1
 12014  00451E  0E00               	movlw	0
 12015  004520  BE1D               	btfsc	(___xxtofl@val+1)^0,7,c
 12016  004522  0EFF               	movlw	-1
 12017  004524  6E1E               	movwf	(___xxtofl@val+2)^0,c
 12018  004526  6E1F               	movwf	(___xxtofl@val+3)^0,c
 12019  004528  0E01               	movlw	1
 12020  00452A  EC62  F01F         	call	___xxtofl
 12021  00452E  C01C  F02A         	movff	?___xxtofl,___flmul@b
 12022  004532  C01D  F02B         	movff	?___xxtofl+1,___flmul@b+1
 12023  004536  C01E  F02C         	movff	?___xxtofl+2,___flmul@b+2
 12024  00453A  C01F  F02D         	movff	?___xxtofl+3,___flmul@b+3
 12025  00453E  EC01  F014         	call	___flmul	;wreg free
 12026  004542  C02A  F079         	movff	?___flmul,___fltol@f1
 12027  004546  C02B  F07A         	movff	?___flmul+1,___fltol@f1+1
 12028  00454A  C02C  F07B         	movff	?___flmul+2,___fltol@f1+2
 12029  00454E  C02D  F07C         	movff	?___flmul+3,___fltol@f1+3
 12030  004552  EC18  F024         	call	___fltol	;wreg free
 12031  004556  0100               	movlb	0	; () banked
 12032  004558  5179               	movf	?___fltol& (0+255),w,b
 12033  00455A  6F89               	movwf	calcMotorPow@addMPow& (0+255),b
 12034  00455C                     
 12035                           ; BSR set to: 0
 12036                           ;main.c: 358:     if (addMPow > (3)) {
 12037  00455C  5189               	movf	calcMotorPow@addMPow& (0+255),w,b
 12038  00455E  0A80               	xorlw	128
 12039  004560  0F7C               	addlw	-132
 12040  004562  A0D8               	btfss	status,0,c
 12041  004564  EFB6  F022         	goto	u10621
 12042  004568  EFB8  F022         	goto	u10620
 12043  00456C                     u10621:
 12044  00456C  EFBC  F022         	goto	l9403
 12045  004570                     u10620:
 12046  004570                     
 12047                           ; BSR set to: 0
 12048                           ;main.c: 359:         addMPow = (3);
 12049  004570  0E03               	movlw	3
 12050  004572  6F89               	movwf	calcMotorPow@addMPow& (0+255),b
 12051                           
 12052                           ;main.c: 360:     } else if (addMPow < -(3)) {
 12053  004574  EFC8  F022         	goto	l9407
 12054  004578                     l9403:
 12055                           
 12056                           ; BSR set to: 0
 12057  004578  5189               	movf	calcMotorPow@addMPow& (0+255),w,b
 12058  00457A  0A80               	xorlw	128
 12059  00457C  0F83               	addlw	131
 12060  00457E  B0D8               	btfsc	status,0,c
 12061  004580  EFC4  F022         	goto	u10631
 12062  004584  EFC6  F022         	goto	u10630
 12063  004588                     u10631:
 12064  004588  EFC8  F022         	goto	l9407
 12065  00458C                     u10630:
 12066  00458C                     
 12067                           ; BSR set to: 0
 12068                           ;main.c: 361:         addMPow = -(3);
 12069  00458C  0EFD               	movlw	253
 12070  00458E  6F89               	movwf	calcMotorPow@addMPow& (0+255),b
 12071  004590                     l9407:
 12072                           
 12073                           ; BSR set to: 0
 12074                           ;main.c: 364:     actMotorPow += addMPow;
 12075  004590  5189               	movf	calcMotorPow@addMPow& (0+255),w,b
 12076  004592  27EB               	addwf	_actMotorPow& (0+255),f,b
 12077  004594  0E00               	movlw	0
 12078  004596  BF89               	btfsc	calcMotorPow@addMPow& (0+255),7,b
 12079  004598  0EFF               	movlw	255
 12080  00459A  23EC               	addwfc	(_actMotorPow+1)& (0+255),f,b
 12081  00459C                     
 12082                           ; BSR set to: 0
 12083                           ;main.c: 366:     if (actMotorPow > (700)) {
 12084  00459C  BFEC               	btfsc	(_actMotorPow+1)& (0+255),7,b
 12085  00459E  EFDA  F022         	goto	u10641
 12086  0045A2  0EBD               	movlw	189
 12087  0045A4  5DEB               	subwf	_actMotorPow& (0+255),w,b
 12088  0045A6  0E02               	movlw	2
 12089  0045A8  59EC               	subwfb	(_actMotorPow+1)& (0+255),w,b
 12090  0045AA  A0D8               	btfss	status,0,c
 12091  0045AC  EFDA  F022         	goto	u10641
 12092  0045B0  EFDC  F022         	goto	u10640
 12093  0045B4                     u10641:
 12094  0045B4  EFE2  F022         	goto	l9413
 12095  0045B8                     u10640:
 12096  0045B8                     
 12097                           ; BSR set to: 0
 12098                           ;main.c: 367:         actMotorPow = (700);
 12099  0045B8  0E02               	movlw	2
 12100  0045BA  6FEC               	movwf	(_actMotorPow+1)& (0+255),b
 12101  0045BC  0EBC               	movlw	188
 12102  0045BE  6FEB               	movwf	_actMotorPow& (0+255),b
 12103                           
 12104                           ;main.c: 368:     } else if (actMotorPow < (-400)) {
 12105  0045C0  EFF4  F022         	goto	l9417
 12106  0045C4                     l9413:
 12107                           
 12108                           ; BSR set to: 0
 12109  0045C4  AFEC               	btfss	(_actMotorPow+1)& (0+255),7,b
 12110  0045C6  EFEE  F022         	goto	u10651
 12111  0045CA  0E70               	movlw	112
 12112  0045CC  5DEB               	subwf	_actMotorPow& (0+255),w,b
 12113  0045CE  0EFE               	movlw	254
 12114  0045D0  59EC               	subwfb	(_actMotorPow+1)& (0+255),w,b
 12115  0045D2  B0D8               	btfsc	status,0,c
 12116  0045D4  EFEE  F022         	goto	u10651
 12117  0045D8  EFF0  F022         	goto	u10650
 12118  0045DC                     u10651:
 12119  0045DC  EFF4  F022         	goto	l9417
 12120  0045E0                     u10650:
 12121  0045E0                     
 12122                           ; BSR set to: 0
 12123                           ;main.c: 369:         actMotorPow = (-400);
 12124  0045E0  0EFE               	movlw	254
 12125  0045E2  6FEC               	movwf	(_actMotorPow+1)& (0+255),b
 12126  0045E4  0E70               	movlw	112
 12127  0045E6  6FEB               	movwf	_actMotorPow& (0+255),b
 12128  0045E8                     l9417:
 12129                           
 12130                           ; BSR set to: 0
 12131                           ;main.c: 372:     setMotor(actMotorPow);
 12132  0045E8  C0EB  F018         	movff	_actMotorPow,setMotor@motorPower
 12133  0045EC  C0EC  F019         	movff	_actMotorPow+1,setMotor@motorPower+1
 12134  0045F0  EC90  F026         	call	_setMotor	;wreg free
 12135  0045F4                     
 12136                           ;main.c: 374:     oldSpeed = currentSpeed;
 12137  0045F4  C0ED  F12E         	movff	_currentSpeed,_oldSpeed
 12138  0045F8  C0EE  F12F         	movff	_currentSpeed+1,_oldSpeed+1
 12139  0045FC  0012               	return		;funcret
 12140  0045FE                     __end_of_calcMotorPow:
 12141                           	callstack 0
 12142                           
 12143 ;; *************** function _setMotor *****************
 12144 ;; Defined at:
 12145 ;;		line 377 in file "main.c"
 12146 ;; Parameters:    Size  Location     Type
 12147 ;;  motorPower      2   23[COMRAM] short 
 12148 ;; Auto vars:     Size  Location     Type
 12149 ;;		None
 12150 ;; Return value:  Size  Location     Type
 12151 ;;                  1    wreg      void 
 12152 ;; Registers used:
 12153 ;;		wreg, status,2, status,0, cstack
 12154 ;; Tracked objects:
 12155 ;;		On entry : 0/0
 12156 ;;		On exit  : 0/0
 12157 ;;		Unchanged: 0/0
 12158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12159 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12161 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12162 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12163 ;;Total ram usage:        4 bytes
 12164 ;; Hardware stack levels used: 1
 12165 ;; Hardware stack levels required when called: 9
 12166 ;; This function calls:
 12167 ;;		_PWM7_LoadDutyValue
 12168 ;;		_PWM8_LoadDutyValue
 12169 ;; This function is called by:
 12170 ;;		_loop
 12171 ;;		_startAccell
 12172 ;;		_calcMotorPow
 12173 ;; This function uses a non-reentrant model
 12174 ;;
 12175                           
 12176                           	psect	text46
 12177  004D20                     __ptext46:
 12178                           	callstack 0
 12179  004D20                     _setMotor:
 12180                           	callstack 19
 12181  004D20                     
 12182                           ;main.c: 378:     if (motorPower >= (100)) {
 12183  004D20  BE19               	btfsc	(setMotor@motorPower+1)^0,7,c
 12184  004D22  EF9C  F026         	goto	u10251
 12185  004D26  5019               	movf	(setMotor@motorPower+1)^0,w,c
 12186  004D28  E109               	bnz	u10250
 12187  004D2A  0E64               	movlw	100
 12188  004D2C  5C18               	subwf	setMotor@motorPower^0,w,c
 12189  004D2E  A0D8               	btfss	status,0,c
 12190  004D30  EF9C  F026         	goto	u10251
 12191  004D34  EF9E  F026         	goto	u10250
 12192  004D38                     u10251:
 12193  004D38  EFBE  F026         	goto	l9103
 12194  004D3C                     u10250:
 12195  004D3C                     
 12196                           ;main.c: 379:         if (motorPower > (700)) {
 12197  004D3C  BE19               	btfsc	(setMotor@motorPower+1)^0,7,c
 12198  004D3E  EFAA  F026         	goto	u10261
 12199  004D42  0EBD               	movlw	189
 12200  004D44  5C18               	subwf	setMotor@motorPower^0,w,c
 12201  004D46  0E02               	movlw	2
 12202  004D48  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
 12203  004D4A  A0D8               	btfss	status,0,c
 12204  004D4C  EFAA  F026         	goto	u10261
 12205  004D50  EFAC  F026         	goto	u10260
 12206  004D54                     u10261:
 12207  004D54  EFB0  F026         	goto	l9099
 12208  004D58                     u10260:
 12209  004D58                     
 12210                           ;main.c: 380:             motorPower = (700);
 12211  004D58  0E02               	movlw	2
 12212  004D5A  6E19               	movwf	(setMotor@motorPower+1)^0,c
 12213  004D5C  0EBC               	movlw	188
 12214  004D5E  6E18               	movwf	setMotor@motorPower^0,c
 12215  004D60                     l9099:
 12216                           
 12217                           ;main.c: 382:         PWM7_LoadDutyValue((uint16_t) (motorPower));
 12218  004D60  C018  F014         	movff	setMotor@motorPower,PWM7_LoadDutyValue@dutyValue
 12219  004D64  C019  F015         	movff	setMotor@motorPower+1,PWM7_LoadDutyValue@dutyValue+1
 12220  004D68  EC6A  F02F         	call	_PWM7_LoadDutyValue	;wreg free
 12221  004D6C                     
 12222                           ;main.c: 383:         PWM8_LoadDutyValue(0);
 12223  004D6C  0E00               	movlw	0
 12224  004D6E  6E15               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
 12225  004D70  0E00               	movlw	0
 12226  004D72  6E14               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
 12227  004D74  EC50  F02F         	call	_PWM8_LoadDutyValue	;wreg free
 12228                           
 12229                           ;main.c: 384:     } else if (motorPower <= -(100)) {
 12230  004D78  EF00  F027         	goto	l1383
 12231  004D7C                     l9103:
 12232  004D7C  AE19               	btfss	(setMotor@motorPower+1)^0,7,c
 12233  004D7E  EFCA  F026         	goto	u10271
 12234  004D82  0E9D               	movlw	157
 12235  004D84  5C18               	subwf	setMotor@motorPower^0,w,c
 12236  004D86  0EFF               	movlw	255
 12237  004D88  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
 12238  004D8A  B0D8               	btfsc	status,0,c
 12239  004D8C  EFCA  F026         	goto	u10271
 12240  004D90  EFCC  F026         	goto	u10270
 12241  004D94                     u10271:
 12242  004D94  EFF4  F026         	goto	l9113
 12243  004D98                     u10270:
 12244  004D98                     
 12245                           ;main.c: 385:         if (motorPower < (-400)) {
 12246  004D98  AE19               	btfss	(setMotor@motorPower+1)^0,7,c
 12247  004D9A  EFD8  F026         	goto	u10281
 12248  004D9E  0E70               	movlw	112
 12249  004DA0  5C18               	subwf	setMotor@motorPower^0,w,c
 12250  004DA2  0EFE               	movlw	254
 12251  004DA4  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
 12252  004DA6  B0D8               	btfsc	status,0,c
 12253  004DA8  EFD8  F026         	goto	u10281
 12254  004DAC  EFDA  F026         	goto	u10280
 12255  004DB0                     u10281:
 12256  004DB0  EFDE  F026         	goto	l9109
 12257  004DB4                     u10280:
 12258  004DB4                     
 12259                           ;main.c: 386:             motorPower = (-400);
 12260  004DB4  0EFE               	movlw	254
 12261  004DB6  6E19               	movwf	(setMotor@motorPower+1)^0,c
 12262  004DB8  0E70               	movlw	112
 12263  004DBA  6E18               	movwf	setMotor@motorPower^0,c
 12264  004DBC                     l9109:
 12265                           
 12266                           ;main.c: 388:         PWM7_LoadDutyValue(0);
 12267  004DBC  0E00               	movlw	0
 12268  004DBE  6E15               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
 12269  004DC0  0E00               	movlw	0
 12270  004DC2  6E14               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
 12271  004DC4  EC6A  F02F         	call	_PWM7_LoadDutyValue	;wreg free
 12272  004DC8                     
 12273                           ;main.c: 389:         PWM8_LoadDutyValue((uint16_t) (-motorPower));
 12274  004DC8  C018  F01A         	movff	setMotor@motorPower,??_setMotor
 12275  004DCC  C019  F01B         	movff	setMotor@motorPower+1,??_setMotor+1
 12276  004DD0  1E1A               	comf	??_setMotor^0,f,c
 12277  004DD2  1E1B               	comf	(??_setMotor+1)^0,f,c
 12278  004DD4  4A1A               	infsnz	??_setMotor^0,f,c
 12279  004DD6  2A1B               	incf	(??_setMotor+1)^0,f,c
 12280  004DD8  C01A  F014         	movff	??_setMotor,PWM8_LoadDutyValue@dutyValue
 12281  004DDC  C01B  F015         	movff	??_setMotor+1,PWM8_LoadDutyValue@dutyValue+1
 12282  004DE0  EC50  F02F         	call	_PWM8_LoadDutyValue	;wreg free
 12283                           
 12284                           ;main.c: 390:     } else {
 12285  004DE4  EF00  F027         	goto	l1383
 12286  004DE8                     l9113:
 12287                           
 12288                           ;main.c: 391:         PWM7_LoadDutyValue(0);
 12289  004DE8  0E00               	movlw	0
 12290  004DEA  6E15               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
 12291  004DEC  0E00               	movlw	0
 12292  004DEE  6E14               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
 12293  004DF0  EC6A  F02F         	call	_PWM7_LoadDutyValue	;wreg free
 12294                           
 12295                           ;main.c: 392:         PWM8_LoadDutyValue(0);
 12296  004DF4  0E00               	movlw	0
 12297  004DF6  6E15               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
 12298  004DF8  0E00               	movlw	0
 12299  004DFA  6E14               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
 12300  004DFC  EC50  F02F         	call	_PWM8_LoadDutyValue	;wreg free
 12301  004E00                     l1383:
 12302  004E00  0012               	return		;funcret
 12303  004E02                     __end_of_setMotor:
 12304                           	callstack 0
 12305                           
 12306 ;; *************** function _PWM8_LoadDutyValue *****************
 12307 ;; Defined at:
 12308 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 12309 ;; Parameters:    Size  Location     Type
 12310 ;;  dutyValue       2   19[COMRAM] unsigned short 
 12311 ;; Auto vars:     Size  Location     Type
 12312 ;;		None
 12313 ;; Return value:  Size  Location     Type
 12314 ;;                  1    wreg      void 
 12315 ;; Registers used:
 12316 ;;		wreg, status,2, status,0
 12317 ;; Tracked objects:
 12318 ;;		On entry : 0/0
 12319 ;;		On exit  : 0/0
 12320 ;;		Unchanged: 0/0
 12321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12322 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12324 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12325 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12326 ;;Total ram usage:        4 bytes
 12327 ;; Hardware stack levels used: 1
 12328 ;; Hardware stack levels required when called: 8
 12329 ;; This function calls:
 12330 ;;		Nothing
 12331 ;; This function is called by:
 12332 ;;		_setMotor
 12333 ;; This function uses a non-reentrant model
 12334 ;;
 12335                           
 12336                           	psect	text47
 12337  005EA0                     __ptext47:
 12338                           	callstack 0
 12339  005EA0                     _PWM8_LoadDutyValue:
 12340                           	callstack 19
 12341  005EA0                     
 12342                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 12343  005EA0  C014  F016         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
 12344  005EA4  C015  F017         	movff	PWM8_LoadDutyValue@dutyValue+1,??_PWM8_LoadDutyValue+1
 12345  005EA8  90D8               	bcf	status,0,c
 12346  005EAA  3217               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
 12347  005EAC  3216               	rrcf	??_PWM8_LoadDutyValue^0,f,c
 12348  005EAE  90D8               	bcf	status,0,c
 12349  005EB0  3217               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
 12350  005EB2  3216               	rrcf	??_PWM8_LoadDutyValue^0,f,c
 12351  005EB4  5016               	movf	??_PWM8_LoadDutyValue^0,w,c
 12352  005EB6  6E61               	movwf	97,c	;volatile
 12353                           
 12354                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 12355  005EB8  C014  F016         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
 12356  005EBC  0E03               	movlw	3
 12357  005EBE  1616               	andwf	??_PWM8_LoadDutyValue^0,f,c
 12358  005EC0  0E06               	movlw	6
 12359  005EC2  6E17               	movwf	(??_PWM8_LoadDutyValue+1)^0,c
 12360  005EC4                     u10115:
 12361  005EC4  90D8               	bcf	status,0,c
 12362  005EC6  3616               	rlcf	??_PWM8_LoadDutyValue^0,f,c
 12363  005EC8  2E17               	decfsz	(??_PWM8_LoadDutyValue+1)^0,f,c
 12364  005ECA  EF62  F02F         	goto	u10115
 12365  005ECE  5016               	movf	??_PWM8_LoadDutyValue^0,w,c
 12366  005ED0  6E60               	movwf	96,c	;volatile
 12367  005ED2  0012               	return		;funcret
 12368  005ED4                     __end_of_PWM8_LoadDutyValue:
 12369                           	callstack 0
 12370                           
 12371 ;; *************** function _PWM7_LoadDutyValue *****************
 12372 ;; Defined at:
 12373 ;;		line 74 in file "mcc_generated_files/pwm7.c"
 12374 ;; Parameters:    Size  Location     Type
 12375 ;;  dutyValue       2   19[COMRAM] unsigned short 
 12376 ;; Auto vars:     Size  Location     Type
 12377 ;;		None
 12378 ;; Return value:  Size  Location     Type
 12379 ;;                  1    wreg      void 
 12380 ;; Registers used:
 12381 ;;		wreg, status,2, status,0
 12382 ;; Tracked objects:
 12383 ;;		On entry : 0/0
 12384 ;;		On exit  : 0/0
 12385 ;;		Unchanged: 0/0
 12386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12387 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12389 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12390 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12391 ;;Total ram usage:        4 bytes
 12392 ;; Hardware stack levels used: 1
 12393 ;; Hardware stack levels required when called: 8
 12394 ;; This function calls:
 12395 ;;		Nothing
 12396 ;; This function is called by:
 12397 ;;		_setMotor
 12398 ;; This function uses a non-reentrant model
 12399 ;;
 12400                           
 12401                           	psect	text48
 12402  005ED4                     __ptext48:
 12403                           	callstack 0
 12404  005ED4                     _PWM7_LoadDutyValue:
 12405                           	callstack 19
 12406  005ED4                     
 12407                           ;mcc_generated_files/pwm7.c: 74:  void PWM7_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm7.c: 75:  {;mcc_generated_files/pwm7.c: 77:      PWM7DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 12408  005ED4  C014  F016         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
 12409  005ED8  C015  F017         	movff	PWM7_LoadDutyValue@dutyValue+1,??_PWM7_LoadDutyValue+1
 12410  005EDC  90D8               	bcf	status,0,c
 12411  005EDE  3217               	rrcf	(??_PWM7_LoadDutyValue+1)^0,f,c
 12412  005EE0  3216               	rrcf	??_PWM7_LoadDutyValue^0,f,c
 12413  005EE2  90D8               	bcf	status,0,c
 12414  005EE4  3217               	rrcf	(??_PWM7_LoadDutyValue+1)^0,f,c
 12415  005EE6  3216               	rrcf	??_PWM7_LoadDutyValue^0,f,c
 12416  005EE8  5016               	movf	??_PWM7_LoadDutyValue^0,w,c
 12417  005EEA  6E65               	movwf	101,c	;volatile
 12418                           
 12419                           ;mcc_generated_files/pwm7.c: 80:      PWM7DCL = (dutyValue & 0x0003)<<6;
 12420  005EEC  C014  F016         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
 12421  005EF0  0E03               	movlw	3
 12422  005EF2  1616               	andwf	??_PWM7_LoadDutyValue^0,f,c
 12423  005EF4  0E06               	movlw	6
 12424  005EF6  6E17               	movwf	(??_PWM7_LoadDutyValue+1)^0,c
 12425  005EF8                     u10105:
 12426  005EF8  90D8               	bcf	status,0,c
 12427  005EFA  3616               	rlcf	??_PWM7_LoadDutyValue^0,f,c
 12428  005EFC  2E17               	decfsz	(??_PWM7_LoadDutyValue+1)^0,f,c
 12429  005EFE  EF7C  F02F         	goto	u10105
 12430  005F02  5016               	movf	??_PWM7_LoadDutyValue^0,w,c
 12431  005F04  6E64               	movwf	100,c	;volatile
 12432  005F06  0012               	return		;funcret
 12433  005F08                     __end_of_PWM7_LoadDutyValue:
 12434                           	callstack 0
 12435                           
 12436 ;; *************** function _actSpeed *****************
 12437 ;; Defined at:
 12438 ;;		line 73 in file "main.c"
 12439 ;; Parameters:    Size  Location     Type
 12440 ;;		None
 12441 ;; Auto vars:     Size  Location     Type
 12442 ;;  speed           2   35[COMRAM] short 
 12443 ;; Return value:  Size  Location     Type
 12444 ;;                  2   33[COMRAM] short 
 12445 ;; Registers used:
 12446 ;;		wreg, status,2, status,0, cstack
 12447 ;; Tracked objects:
 12448 ;;		On entry : 0/0
 12449 ;;		On exit  : 0/0
 12450 ;;		Unchanged: 0/0
 12451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12452 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12453 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12455 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12456 ;;Total ram usage:        4 bytes
 12457 ;; Hardware stack levels used: 1
 12458 ;; Hardware stack levels required when called: 9
 12459 ;; This function calls:
 12460 ;;		___aldiv
 12461 ;; This function is called by:
 12462 ;;		_calcMotorPow
 12463 ;; This function uses a non-reentrant model
 12464 ;;
 12465                           
 12466                           	psect	text49
 12467  0055E2                     __ptext49:
 12468                           	callstack 0
 12469  0055E2                     _actSpeed:
 12470                           	callstack 19
 12471  0055E2                     
 12472                           ;main.c: 74:     int16_t speed = 0;
 12473  0055E2  0E00               	movlw	0
 12474  0055E4  6E25               	movwf	(actSpeed@speed+1)^0,c
 12475  0055E6  0E00               	movlw	0
 12476  0055E8  6E24               	movwf	actSpeed@speed^0,c
 12477  0055EA                     
 12478                           ;main.c: 75:     if (smtPeriod) {
 12479  0055EA  5048               	movf	_smtPeriod^0,w,c	;volatile
 12480  0055EC  1049               	iorwf	(_smtPeriod+1)^0,w,c	;volatile
 12481  0055EE  104A               	iorwf	(_smtPeriod+2)^0,w,c	;volatile
 12482  0055F0  104B               	iorwf	(_smtPeriod+3)^0,w,c	;volatile
 12483  0055F2  B4D8               	btfsc	status,2,c
 12484  0055F4  EFFE  F02A         	goto	u6691
 12485  0055F8  EF00  F02B         	goto	u6690
 12486  0055FC                     u6691:
 12487  0055FC  EF36  F02B         	goto	l6797
 12488  005600                     u6690:
 12489  005600                     
 12490                           ;main.c: 76:         if (CLC3CONbits.LC3OUT) {
 12491  005600  013C               	movlb	60	; () banked
 12492  005602  AB60               	btfss	96,5,b	;volatile
 12493  005604  EF06  F02B         	goto	u6701
 12494  005608  EF08  F02B         	goto	u6700
 12495  00560C                     u6701:
 12496  00560C  EF20  F02B         	goto	l6795
 12497  005610                     u6700:
 12498  005610                     
 12499                           ; BSR set to: 60
 12500                           ;main.c: 77:             speed = (int16_t) ((int32_t) (500000 / (int32_t) smtPeriod));
 12501  005610  0E20               	movlw	32
 12502  005612  6E14               	movwf	___aldiv@dividend^0,c
 12503  005614  0EA1               	movlw	161
 12504  005616  6E15               	movwf	(___aldiv@dividend+1)^0,c
 12505  005618  0E07               	movlw	7
 12506  00561A  6E16               	movwf	(___aldiv@dividend+2)^0,c
 12507  00561C  0E00               	movlw	0
 12508  00561E  6E17               	movwf	(___aldiv@dividend+3)^0,c
 12509  005620  C048  F018         	movff	_smtPeriod,___aldiv@divisor	;volatile
 12510  005624  C049  F019         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
 12511  005628  C04A  F01A         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
 12512  00562C  C04B  F01B         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
 12513  005630  EC92  F023         	call	___aldiv	;wreg free
 12514  005634  C014  F024         	movff	?___aldiv,actSpeed@speed
 12515  005638  C015  F025         	movff	?___aldiv+1,actSpeed@speed+1
 12516                           
 12517                           ;main.c: 78:         } else {
 12518  00563C  EF36  F02B         	goto	l6797
 12519  005640                     l6795:
 12520                           
 12521                           ; BSR set to: 60
 12522                           ;main.c: 79:             speed = (int16_t) ((int32_t) (-500000 / (int32_t) smtPeriod));
 12523  005640  0EE0               	movlw	224
 12524  005642  6E14               	movwf	___aldiv@dividend^0,c
 12525  005644  0E5E               	movlw	94
 12526  005646  6E15               	movwf	(___aldiv@dividend+1)^0,c
 12527  005648  0EF8               	movlw	248
 12528  00564A  6E16               	movwf	(___aldiv@dividend+2)^0,c
 12529  00564C  0EFF               	movlw	255
 12530  00564E  6E17               	movwf	(___aldiv@dividend+3)^0,c
 12531  005650  C048  F018         	movff	_smtPeriod,___aldiv@divisor	;volatile
 12532  005654  C049  F019         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
 12533  005658  C04A  F01A         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
 12534  00565C  C04B  F01B         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
 12535  005660  EC92  F023         	call	___aldiv	;wreg free
 12536  005664  C014  F024         	movff	?___aldiv,actSpeed@speed
 12537  005668  C015  F025         	movff	?___aldiv+1,actSpeed@speed+1
 12538  00566C                     l6797:
 12539                           
 12540                           ;main.c: 82:     return speed;
 12541  00566C  C024  F022         	movff	actSpeed@speed,?_actSpeed
 12542  005670  C025  F023         	movff	actSpeed@speed+1,?_actSpeed+1
 12543  005674  0012               	return		;funcret
 12544  005676                     __end_of_actSpeed:
 12545                           	callstack 0
 12546                           
 12547 ;; *************** function ___aldiv *****************
 12548 ;; Defined at:
 12549 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aldiv.c"
 12550 ;; Parameters:    Size  Location     Type
 12551 ;;  dividend        4   19[COMRAM] long 
 12552 ;;  divisor         4   23[COMRAM] long 
 12553 ;; Auto vars:     Size  Location     Type
 12554 ;;  quotient        4   29[COMRAM] long 
 12555 ;;  sign            1   28[COMRAM] unsigned char 
 12556 ;;  counter         1   27[COMRAM] unsigned char 
 12557 ;; Return value:  Size  Location     Type
 12558 ;;                  4   19[COMRAM] long 
 12559 ;; Registers used:
 12560 ;;		wreg, status,2, status,0
 12561 ;; Tracked objects:
 12562 ;;		On entry : 0/0
 12563 ;;		On exit  : 0/0
 12564 ;;		Unchanged: 0/0
 12565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12566 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12567 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12569 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12570 ;;Total ram usage:       14 bytes
 12571 ;; Hardware stack levels used: 1
 12572 ;; Hardware stack levels required when called: 8
 12573 ;; This function calls:
 12574 ;;		Nothing
 12575 ;; This function is called by:
 12576 ;;		_actSpeed
 12577 ;; This function uses a non-reentrant model
 12578 ;;
 12579                           
 12580                           	psect	text50
 12581  004724                     __ptext50:
 12582                           	callstack 0
 12583  004724                     ___aldiv:
 12584                           	callstack 19
 12585  004724  0E00               	movlw	0
 12586  004726  6E1D               	movwf	___aldiv@sign^0,c
 12587  004728  BE1B               	btfsc	(___aldiv@divisor+3)^0,7,c
 12588  00472A  EF9B  F023         	goto	u6420
 12589  00472E  EF99  F023         	goto	u6421
 12590  004732                     u6421:
 12591  004732  EFA5  F023         	goto	l6589
 12592  004736                     u6420:
 12593  004736  1E1B               	comf	(___aldiv@divisor+3)^0,f,c
 12594  004738  1E1A               	comf	(___aldiv@divisor+2)^0,f,c
 12595  00473A  1E19               	comf	(___aldiv@divisor+1)^0,f,c
 12596  00473C  6C18               	negf	___aldiv@divisor^0,c
 12597  00473E  0E00               	movlw	0
 12598  004740  2219               	addwfc	(___aldiv@divisor+1)^0,f,c
 12599  004742  221A               	addwfc	(___aldiv@divisor+2)^0,f,c
 12600  004744  221B               	addwfc	(___aldiv@divisor+3)^0,f,c
 12601  004746  0E01               	movlw	1
 12602  004748  6E1D               	movwf	___aldiv@sign^0,c
 12603  00474A                     l6589:
 12604  00474A  BE17               	btfsc	(___aldiv@dividend+3)^0,7,c
 12605  00474C  EFAC  F023         	goto	u6430
 12606  004750  EFAA  F023         	goto	u6431
 12607  004754                     u6431:
 12608  004754  EFB6  F023         	goto	l6595
 12609  004758                     u6430:
 12610  004758  1E17               	comf	(___aldiv@dividend+3)^0,f,c
 12611  00475A  1E16               	comf	(___aldiv@dividend+2)^0,f,c
 12612  00475C  1E15               	comf	(___aldiv@dividend+1)^0,f,c
 12613  00475E  6C14               	negf	___aldiv@dividend^0,c
 12614  004760  0E00               	movlw	0
 12615  004762  2215               	addwfc	(___aldiv@dividend+1)^0,f,c
 12616  004764  2216               	addwfc	(___aldiv@dividend+2)^0,f,c
 12617  004766  2217               	addwfc	(___aldiv@dividend+3)^0,f,c
 12618  004768  0E01               	movlw	1
 12619  00476A  1A1D               	xorwf	___aldiv@sign^0,f,c
 12620  00476C                     l6595:
 12621  00476C  0E00               	movlw	0
 12622  00476E  6E1E               	movwf	___aldiv@quotient^0,c
 12623  004770  0E00               	movlw	0
 12624  004772  6E1F               	movwf	(___aldiv@quotient+1)^0,c
 12625  004774  0E00               	movlw	0
 12626  004776  6E20               	movwf	(___aldiv@quotient+2)^0,c
 12627  004778  0E00               	movlw	0
 12628  00477A  6E21               	movwf	(___aldiv@quotient+3)^0,c
 12629  00477C  5018               	movf	___aldiv@divisor^0,w,c
 12630  00477E  1019               	iorwf	(___aldiv@divisor+1)^0,w,c
 12631  004780  101A               	iorwf	(___aldiv@divisor+2)^0,w,c
 12632  004782  101B               	iorwf	(___aldiv@divisor+3)^0,w,c
 12633  004784  B4D8               	btfsc	status,2,c
 12634  004786  EFC7  F023         	goto	u6441
 12635  00478A  EFC9  F023         	goto	u6440
 12636  00478E                     u6441:
 12637  00478E  EFFF  F023         	goto	l6617
 12638  004792                     u6440:
 12639  004792  0E01               	movlw	1
 12640  004794  6E1C               	movwf	___aldiv@counter^0,c
 12641  004796  EFD3  F023         	goto	l6603
 12642  00479A                     l6601:
 12643  00479A  90D8               	bcf	status,0,c
 12644  00479C  3618               	rlcf	___aldiv@divisor^0,f,c
 12645  00479E  3619               	rlcf	(___aldiv@divisor+1)^0,f,c
 12646  0047A0  361A               	rlcf	(___aldiv@divisor+2)^0,f,c
 12647  0047A2  361B               	rlcf	(___aldiv@divisor+3)^0,f,c
 12648  0047A4  2A1C               	incf	___aldiv@counter^0,f,c
 12649  0047A6                     l6603:
 12650  0047A6  AE1B               	btfss	(___aldiv@divisor+3)^0,7,c
 12651  0047A8  EFD8  F023         	goto	u6451
 12652  0047AC  EFDA  F023         	goto	u6450
 12653  0047B0                     u6451:
 12654  0047B0  EFCD  F023         	goto	l6601
 12655  0047B4                     u6450:
 12656  0047B4                     l6605:
 12657  0047B4  90D8               	bcf	status,0,c
 12658  0047B6  361E               	rlcf	___aldiv@quotient^0,f,c
 12659  0047B8  361F               	rlcf	(___aldiv@quotient+1)^0,f,c
 12660  0047BA  3620               	rlcf	(___aldiv@quotient+2)^0,f,c
 12661  0047BC  3621               	rlcf	(___aldiv@quotient+3)^0,f,c
 12662  0047BE  5018               	movf	___aldiv@divisor^0,w,c
 12663  0047C0  5C14               	subwf	___aldiv@dividend^0,w,c
 12664  0047C2  5019               	movf	(___aldiv@divisor+1)^0,w,c
 12665  0047C4  5815               	subwfb	(___aldiv@dividend+1)^0,w,c
 12666  0047C6  501A               	movf	(___aldiv@divisor+2)^0,w,c
 12667  0047C8  5816               	subwfb	(___aldiv@dividend+2)^0,w,c
 12668  0047CA  501B               	movf	(___aldiv@divisor+3)^0,w,c
 12669  0047CC  5817               	subwfb	(___aldiv@dividend+3)^0,w,c
 12670  0047CE  A0D8               	btfss	status,0,c
 12671  0047D0  EFEC  F023         	goto	u6461
 12672  0047D4  EFEE  F023         	goto	u6460
 12673  0047D8                     u6461:
 12674  0047D8  EFF7  F023         	goto	l6613
 12675  0047DC                     u6460:
 12676  0047DC  5018               	movf	___aldiv@divisor^0,w,c
 12677  0047DE  5E14               	subwf	___aldiv@dividend^0,f,c
 12678  0047E0  5019               	movf	(___aldiv@divisor+1)^0,w,c
 12679  0047E2  5A15               	subwfb	(___aldiv@dividend+1)^0,f,c
 12680  0047E4  501A               	movf	(___aldiv@divisor+2)^0,w,c
 12681  0047E6  5A16               	subwfb	(___aldiv@dividend+2)^0,f,c
 12682  0047E8  501B               	movf	(___aldiv@divisor+3)^0,w,c
 12683  0047EA  5A17               	subwfb	(___aldiv@dividend+3)^0,f,c
 12684  0047EC  801E               	bsf	___aldiv@quotient^0,0,c
 12685  0047EE                     l6613:
 12686  0047EE  90D8               	bcf	status,0,c
 12687  0047F0  321B               	rrcf	(___aldiv@divisor+3)^0,f,c
 12688  0047F2  321A               	rrcf	(___aldiv@divisor+2)^0,f,c
 12689  0047F4  3219               	rrcf	(___aldiv@divisor+1)^0,f,c
 12690  0047F6  3218               	rrcf	___aldiv@divisor^0,f,c
 12691  0047F8  2E1C               	decfsz	___aldiv@counter^0,f,c
 12692  0047FA  EFDA  F023         	goto	l6605
 12693  0047FE                     l6617:
 12694  0047FE  501D               	movf	___aldiv@sign^0,w,c
 12695  004800  B4D8               	btfsc	status,2,c
 12696  004802  EF05  F024         	goto	u6471
 12697  004806  EF07  F024         	goto	u6470
 12698  00480A                     u6471:
 12699  00480A  EF0F  F024         	goto	l6621
 12700  00480E                     u6470:
 12701  00480E  1E21               	comf	(___aldiv@quotient+3)^0,f,c
 12702  004810  1E20               	comf	(___aldiv@quotient+2)^0,f,c
 12703  004812  1E1F               	comf	(___aldiv@quotient+1)^0,f,c
 12704  004814  6C1E               	negf	___aldiv@quotient^0,c
 12705  004816  0E00               	movlw	0
 12706  004818  221F               	addwfc	(___aldiv@quotient+1)^0,f,c
 12707  00481A  2220               	addwfc	(___aldiv@quotient+2)^0,f,c
 12708  00481C  2221               	addwfc	(___aldiv@quotient+3)^0,f,c
 12709  00481E                     l6621:
 12710  00481E  C01E  F014         	movff	___aldiv@quotient,?___aldiv
 12711  004822  C01F  F015         	movff	___aldiv@quotient+1,?___aldiv+1
 12712  004826  C020  F016         	movff	___aldiv@quotient+2,?___aldiv+2
 12713  00482A  C021  F017         	movff	___aldiv@quotient+3,?___aldiv+3
 12714  00482E  0012               	return		;funcret
 12715  004830                     __end_of___aldiv:
 12716                           	callstack 0
 12717                           
 12718 ;; *************** function ___xxtofl *****************
 12719 ;; Defined at:
 12720 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
 12721 ;; Parameters:    Size  Location     Type
 12722 ;;  sign            1    wreg     unsigned char 
 12723 ;;  val             4   27[COMRAM] long 
 12724 ;; Auto vars:     Size  Location     Type
 12725 ;;  sign            1   35[COMRAM] unsigned char 
 12726 ;;  arg             4   37[COMRAM] unsigned long 
 12727 ;;  exp             1   36[COMRAM] unsigned char 
 12728 ;; Return value:  Size  Location     Type
 12729 ;;                  4   27[COMRAM] unsigned char 
 12730 ;; Registers used:
 12731 ;;		wreg, status,2, status,0
 12732 ;; Tracked objects:
 12733 ;;		On entry : 0/0
 12734 ;;		On exit  : 0/0
 12735 ;;		Unchanged: 0/0
 12736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12737 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12738 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12739 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12740 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12741 ;;Total ram usage:       14 bytes
 12742 ;; Hardware stack levels used: 1
 12743 ;; Hardware stack levels required when called: 8
 12744 ;; This function calls:
 12745 ;;		Nothing
 12746 ;; This function is called by:
 12747 ;;		_loop
 12748 ;;		_checkBatt
 12749 ;;		_checkCurveCount
 12750 ;;		_calcSpeed
 12751 ;;		_calcMotorPow
 12752 ;;		_setSteering
 12753 ;; This function uses a non-reentrant model
 12754 ;;
 12755                           
 12756                           	psect	text51
 12757  003EC4                     __ptext51:
 12758                           	callstack 0
 12759  003EC4                     ___xxtofl:
 12760                           	callstack 19
 12761                           
 12762                           ;incstack = 0
 12763                           ;___xxtofl@sign stored from wreg
 12764  003EC4  6E24               	movwf	___xxtofl@sign^0,c
 12765  003EC6  5024               	movf	___xxtofl@sign^0,w,c
 12766  003EC8  B4D8               	btfsc	status,2,c
 12767  003ECA  EF69  F01F         	goto	u10141
 12768  003ECE  EF6B  F01F         	goto	u10140
 12769  003ED2                     u10141:
 12770  003ED2  EF8D  F01F         	goto	l2058
 12771  003ED6                     u10140:
 12772  003ED6  BE1F               	btfsc	(___xxtofl@val+3)^0,7,c
 12773  003ED8  EF72  F01F         	goto	u10150
 12774  003EDC  EF70  F01F         	goto	u10151
 12775  003EE0                     u10151:
 12776  003EE0  EF8D  F01F         	goto	l2058
 12777  003EE4                     u10150:
 12778  003EE4  C01C  F020         	movff	___xxtofl@val,??___xxtofl
 12779  003EE8  C01D  F021         	movff	___xxtofl@val+1,??___xxtofl+1
 12780  003EEC  C01E  F022         	movff	___xxtofl@val+2,??___xxtofl+2
 12781  003EF0  C01F  F023         	movff	___xxtofl@val+3,??___xxtofl+3
 12782  003EF4  1E20               	comf	??___xxtofl^0,f,c
 12783  003EF6  1E21               	comf	(??___xxtofl+1)^0,f,c
 12784  003EF8  1E22               	comf	(??___xxtofl+2)^0,f,c
 12785  003EFA  1E23               	comf	(??___xxtofl+3)^0,f,c
 12786  003EFC  2A20               	incf	??___xxtofl^0,f,c
 12787  003EFE  0E00               	movlw	0
 12788  003F00  2221               	addwfc	(??___xxtofl+1)^0,f,c
 12789  003F02  2222               	addwfc	(??___xxtofl+2)^0,f,c
 12790  003F04  2223               	addwfc	(??___xxtofl+3)^0,f,c
 12791  003F06  C020  F026         	movff	??___xxtofl,___xxtofl@arg
 12792  003F0A  C021  F027         	movff	??___xxtofl+1,___xxtofl@arg+1
 12793  003F0E  C022  F028         	movff	??___xxtofl+2,___xxtofl@arg+2
 12794  003F12  C023  F029         	movff	??___xxtofl+3,___xxtofl@arg+3
 12795  003F16  EF95  F01F         	goto	l9045
 12796  003F1A                     l2058:
 12797  003F1A  C01C  F026         	movff	___xxtofl@val,___xxtofl@arg
 12798  003F1E  C01D  F027         	movff	___xxtofl@val+1,___xxtofl@arg+1
 12799  003F22  C01E  F028         	movff	___xxtofl@val+2,___xxtofl@arg+2
 12800  003F26  C01F  F029         	movff	___xxtofl@val+3,___xxtofl@arg+3
 12801  003F2A                     l9045:
 12802  003F2A  501C               	movf	___xxtofl@val^0,w,c
 12803  003F2C  101D               	iorwf	(___xxtofl@val+1)^0,w,c
 12804  003F2E  101E               	iorwf	(___xxtofl@val+2)^0,w,c
 12805  003F30  101F               	iorwf	(___xxtofl@val+3)^0,w,c
 12806  003F32  A4D8               	btfss	status,2,c
 12807  003F34  EF9E  F01F         	goto	u10161
 12808  003F38  EFA0  F01F         	goto	u10160
 12809  003F3C                     u10161:
 12810  003F3C  EFAA  F01F         	goto	l9051
 12811  003F40                     u10160:
 12812  003F40  0E00               	movlw	0
 12813  003F42  6E1C               	movwf	?___xxtofl^0,c
 12814  003F44  0E00               	movlw	0
 12815  003F46  6E1D               	movwf	(?___xxtofl+1)^0,c
 12816  003F48  0E00               	movlw	0
 12817  003F4A  6E1E               	movwf	(?___xxtofl+2)^0,c
 12818  003F4C  0E00               	movlw	0
 12819  003F4E  6E1F               	movwf	(?___xxtofl+3)^0,c
 12820  003F50  EF3B  F020         	goto	l2061
 12821  003F54                     l9051:
 12822  003F54  0E96               	movlw	150
 12823  003F56  6E25               	movwf	___xxtofl@exp^0,c
 12824  003F58  EFB4  F01F         	goto	l9055
 12825  003F5C                     l9053:
 12826  003F5C  2A25               	incf	___xxtofl@exp^0,f,c
 12827  003F5E  90D8               	bcf	status,0,c
 12828  003F60  3229               	rrcf	(___xxtofl@arg+3)^0,f,c
 12829  003F62  3228               	rrcf	(___xxtofl@arg+2)^0,f,c
 12830  003F64  3227               	rrcf	(___xxtofl@arg+1)^0,f,c
 12831  003F66  3226               	rrcf	___xxtofl@arg^0,f,c
 12832  003F68                     l9055:
 12833  003F68  0E00               	movlw	0
 12834  003F6A  1426               	andwf	___xxtofl@arg^0,w,c
 12835  003F6C  6E20               	movwf	??___xxtofl^0,c
 12836  003F6E  0E00               	movlw	0
 12837  003F70  1427               	andwf	(___xxtofl@arg+1)^0,w,c
 12838  003F72  6E21               	movwf	(??___xxtofl+1)^0,c
 12839  003F74  0E00               	movlw	0
 12840  003F76  1428               	andwf	(___xxtofl@arg+2)^0,w,c
 12841  003F78  6E22               	movwf	(??___xxtofl+2)^0,c
 12842  003F7A  0EFE               	movlw	254
 12843  003F7C  1429               	andwf	(___xxtofl@arg+3)^0,w,c
 12844  003F7E  6E23               	movwf	(??___xxtofl+3)^0,c
 12845  003F80  5020               	movf	??___xxtofl^0,w,c
 12846  003F82  1021               	iorwf	(??___xxtofl+1)^0,w,c
 12847  003F84  1022               	iorwf	(??___xxtofl+2)^0,w,c
 12848  003F86  1023               	iorwf	(??___xxtofl+3)^0,w,c
 12849  003F88  A4D8               	btfss	status,2,c
 12850  003F8A  EFC9  F01F         	goto	u10171
 12851  003F8E  EFCB  F01F         	goto	u10170
 12852  003F92                     u10171:
 12853  003F92  EFAE  F01F         	goto	l9053
 12854  003F96                     u10170:
 12855  003F96  EFD9  F01F         	goto	l2065
 12856  003F9A                     l9057:
 12857  003F9A  2A25               	incf	___xxtofl@exp^0,f,c
 12858  003F9C  0E01               	movlw	1
 12859  003F9E  2626               	addwf	___xxtofl@arg^0,f,c
 12860  003FA0  0E00               	movlw	0
 12861  003FA2  2227               	addwfc	(___xxtofl@arg+1)^0,f,c
 12862  003FA4  2228               	addwfc	(___xxtofl@arg+2)^0,f,c
 12863  003FA6  2229               	addwfc	(___xxtofl@arg+3)^0,f,c
 12864  003FA8  90D8               	bcf	status,0,c
 12865  003FAA  3229               	rrcf	(___xxtofl@arg+3)^0,f,c
 12866  003FAC  3228               	rrcf	(___xxtofl@arg+2)^0,f,c
 12867  003FAE  3227               	rrcf	(___xxtofl@arg+1)^0,f,c
 12868  003FB0  3226               	rrcf	___xxtofl@arg^0,f,c
 12869  003FB2                     l2065:
 12870  003FB2  0E00               	movlw	0
 12871  003FB4  1426               	andwf	___xxtofl@arg^0,w,c
 12872  003FB6  6E20               	movwf	??___xxtofl^0,c
 12873  003FB8  0E00               	movlw	0
 12874  003FBA  1427               	andwf	(___xxtofl@arg+1)^0,w,c
 12875  003FBC  6E21               	movwf	(??___xxtofl+1)^0,c
 12876  003FBE  0E00               	movlw	0
 12877  003FC0  1428               	andwf	(___xxtofl@arg+2)^0,w,c
 12878  003FC2  6E22               	movwf	(??___xxtofl+2)^0,c
 12879  003FC4  0EFF               	movlw	255
 12880  003FC6  1429               	andwf	(___xxtofl@arg+3)^0,w,c
 12881  003FC8  6E23               	movwf	(??___xxtofl+3)^0,c
 12882  003FCA  5020               	movf	??___xxtofl^0,w,c
 12883  003FCC  1021               	iorwf	(??___xxtofl+1)^0,w,c
 12884  003FCE  1022               	iorwf	(??___xxtofl+2)^0,w,c
 12885  003FD0  1023               	iorwf	(??___xxtofl+3)^0,w,c
 12886  003FD2  A4D8               	btfss	status,2,c
 12887  003FD4  EFEE  F01F         	goto	u10181
 12888  003FD8  EFF0  F01F         	goto	u10180
 12889  003FDC                     u10181:
 12890  003FDC  EFCD  F01F         	goto	l9057
 12891  003FE0                     u10180:
 12892  003FE0  EFF8  F01F         	goto	l9065
 12893  003FE4                     l9063:
 12894  003FE4  0625               	decf	___xxtofl@exp^0,f,c
 12895  003FE6  90D8               	bcf	status,0,c
 12896  003FE8  3626               	rlcf	___xxtofl@arg^0,f,c
 12897  003FEA  3627               	rlcf	(___xxtofl@arg+1)^0,f,c
 12898  003FEC  3628               	rlcf	(___xxtofl@arg+2)^0,f,c
 12899  003FEE  3629               	rlcf	(___xxtofl@arg+3)^0,f,c
 12900  003FF0                     l9065:
 12901  003FF0  BE28               	btfsc	(___xxtofl@arg+2)^0,7,c
 12902  003FF2  EFFD  F01F         	goto	u10191
 12903  003FF6  EFFF  F01F         	goto	u10190
 12904  003FFA                     u10191:
 12905  003FFA  EF07  F020         	goto	l2072
 12906  003FFE                     u10190:
 12907  003FFE  0E02               	movlw	2
 12908  004000  6025               	cpfslt	___xxtofl@exp^0,c
 12909  004002  EF05  F020         	goto	u10201
 12910  004006  EF07  F020         	goto	u10200
 12911  00400A                     u10201:
 12912  00400A  EFF2  F01F         	goto	l9063
 12913  00400E                     u10200:
 12914  00400E                     l2072:
 12915  00400E  B025               	btfsc	___xxtofl@exp^0,0,c
 12916  004010  EF0C  F020         	goto	u10211
 12917  004014  EF0E  F020         	goto	u10210
 12918  004018                     u10211:
 12919  004018  EF0F  F020         	goto	l9071
 12920  00401C                     u10210:
 12921  00401C  9E28               	bcf	(___xxtofl@arg+2)^0,7,c
 12922  00401E                     l9071:
 12923  00401E  90D8               	bcf	status,0,c
 12924  004020  3225               	rrcf	___xxtofl@exp^0,f,c
 12925  004022  C025  F020         	movff	___xxtofl@exp,??___xxtofl
 12926  004026  6A21               	clrf	(??___xxtofl+1)^0,c
 12927  004028  6A22               	clrf	(??___xxtofl+2)^0,c
 12928  00402A  6A23               	clrf	(??___xxtofl+3)^0,c
 12929  00402C  C020  F023         	movff	??___xxtofl,??___xxtofl+3
 12930  004030  6A22               	clrf	(??___xxtofl+2)^0,c
 12931  004032  6A21               	clrf	(??___xxtofl+1)^0,c
 12932  004034  6A20               	clrf	??___xxtofl^0,c
 12933  004036  5020               	movf	??___xxtofl^0,w,c
 12934  004038  1226               	iorwf	___xxtofl@arg^0,f,c
 12935  00403A  5021               	movf	(??___xxtofl+1)^0,w,c
 12936  00403C  1227               	iorwf	(___xxtofl@arg+1)^0,f,c
 12937  00403E  5022               	movf	(??___xxtofl+2)^0,w,c
 12938  004040  1228               	iorwf	(___xxtofl@arg+2)^0,f,c
 12939  004042  5023               	movf	(??___xxtofl+3)^0,w,c
 12940  004044  1229               	iorwf	(___xxtofl@arg+3)^0,f,c
 12941  004046  5024               	movf	___xxtofl@sign^0,w,c
 12942  004048  B4D8               	btfsc	status,2,c
 12943  00404A  EF29  F020         	goto	u10221
 12944  00404E  EF2B  F020         	goto	u10220
 12945  004052                     u10221:
 12946  004052  EF33  F020         	goto	l9081
 12947  004056                     u10220:
 12948  004056  BE1F               	btfsc	(___xxtofl@val+3)^0,7,c
 12949  004058  EF32  F020         	goto	u10230
 12950  00405C  EF30  F020         	goto	u10231
 12951  004060                     u10231:
 12952  004060  EF33  F020         	goto	l9081
 12953  004064                     u10230:
 12954  004064  8E29               	bsf	(___xxtofl@arg+3)^0,7,c
 12955  004066                     l9081:
 12956  004066  C026  F01C         	movff	___xxtofl@arg,?___xxtofl
 12957  00406A  C027  F01D         	movff	___xxtofl@arg+1,?___xxtofl+1
 12958  00406E  C028  F01E         	movff	___xxtofl@arg+2,?___xxtofl+2
 12959  004072  C029  F01F         	movff	___xxtofl@arg+3,?___xxtofl+3
 12960  004076                     l2061:
 12961  004076  0012               	return		;funcret
 12962  004078                     __end_of___xxtofl:
 12963                           	callstack 0
 12964                           
 12965 ;; *************** function ___fltol *****************
 12966 ;; Defined at:
 12967 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
 12968 ;; Parameters:    Size  Location     Type
 12969 ;;  f1              4   25[BANK0 ] unsigned char 
 12970 ;; Auto vars:     Size  Location     Type
 12971 ;;  exp1            1   34[BANK0 ] unsigned char 
 12972 ;;  sign1           1   33[BANK0 ] unsigned char 
 12973 ;; Return value:  Size  Location     Type
 12974 ;;                  4   25[BANK0 ] long 
 12975 ;; Registers used:
 12976 ;;		wreg, status,2, status,0
 12977 ;; Tracked objects:
 12978 ;;		On entry : 0/0
 12979 ;;		On exit  : 0/0
 12980 ;;		Unchanged: 0/0
 12981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12982 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12983 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12984 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12985 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12986 ;;Total ram usage:       10 bytes
 12987 ;; Hardware stack levels used: 1
 12988 ;; Hardware stack levels required when called: 8
 12989 ;; This function calls:
 12990 ;;		Nothing
 12991 ;; This function is called by:
 12992 ;;		_calcSpeed
 12993 ;;		_calcMotorPow
 12994 ;;		_setSteering
 12995 ;;		_efgtoa
 12996 ;; This function uses a non-reentrant model
 12997 ;;
 12998                           
 12999                           	psect	text52
 13000  004830                     __ptext52:
 13001                           	callstack 0
 13002  004830                     ___fltol:
 13003                           	callstack 19
 13004  004830  0100               	movlb	0	; () banked
 13005  004832  357B               	rlcf	(___fltol@f1+2)& (0+255),w,b
 13006  004834  357C               	rlcf	(___fltol@f1+3)& (0+255),w,b
 13007  004836  6F82               	movwf	___fltol@exp1& (0+255),b
 13008  004838  5182               	movf	___fltol@exp1& (0+255),w,b
 13009  00483A  A4D8               	btfss	status,2,c
 13010  00483C  EF22  F024         	goto	u8761
 13011  004840  EF24  F024         	goto	u8760
 13012  004844                     u8761:
 13013  004844  EF2E  F024         	goto	l8351
 13014  004848                     u8760:
 13015  004848                     l8347:
 13016                           
 13017                           ; BSR set to: 0
 13018  004848  0E00               	movlw	0
 13019  00484A  6F79               	movwf	?___fltol& (0+255),b
 13020  00484C  0E00               	movlw	0
 13021  00484E  6F7A               	movwf	(?___fltol+1)& (0+255),b
 13022  004850  0E00               	movlw	0
 13023  004852  6F7B               	movwf	(?___fltol+2)& (0+255),b
 13024  004854  0E00               	movlw	0
 13025  004856  6F7C               	movwf	(?___fltol+3)& (0+255),b
 13026  004858  EF9B  F024         	goto	l1700
 13027  00485C                     l8351:
 13028                           
 13029                           ; BSR set to: 0
 13030  00485C  C079  F07D         	movff	___fltol@f1,??___fltol
 13031  004860  C07A  F07E         	movff	___fltol@f1+1,??___fltol+1
 13032  004864  C07B  F07F         	movff	___fltol@f1+2,??___fltol+2
 13033  004868  C07C  F080         	movff	___fltol@f1+3,??___fltol+3
 13034  00486C  0E20               	movlw	32
 13035  00486E  EF3E  F024         	goto	u8770
 13036  004872                     u8775:
 13037  004872  90D8               	bcf	status,0,c
 13038  004874  3380               	rrcf	(??___fltol+3)& (0+255),f,b
 13039  004876  337F               	rrcf	(??___fltol+2)& (0+255),f,b
 13040  004878  337E               	rrcf	(??___fltol+1)& (0+255),f,b
 13041  00487A  337D               	rrcf	??___fltol& (0+255),f,b
 13042  00487C                     u8770:
 13043  00487C  2EE8               	decfsz	wreg,f,c
 13044  00487E  EF39  F024         	goto	u8775
 13045  004882  517D               	movf	??___fltol& (0+255),w,b
 13046  004884  6F81               	movwf	___fltol@sign1& (0+255),b
 13047  004886                     
 13048                           ; BSR set to: 0
 13049  004886  8F7B               	bsf	(___fltol@f1+2)& (0+255),7,b
 13050  004888                     
 13051                           ; BSR set to: 0
 13052  004888  0EFF               	movlw	255
 13053  00488A  1779               	andwf	___fltol@f1& (0+255),f,b
 13054  00488C  0EFF               	movlw	255
 13055  00488E  177A               	andwf	(___fltol@f1+1)& (0+255),f,b
 13056  004890  0EFF               	movlw	255
 13057  004892  177B               	andwf	(___fltol@f1+2)& (0+255),f,b
 13058  004894  0E00               	movlw	0
 13059  004896  177C               	andwf	(___fltol@f1+3)& (0+255),f,b
 13060  004898                     
 13061                           ; BSR set to: 0
 13062  004898  0E96               	movlw	150
 13063  00489A  5F82               	subwf	___fltol@exp1& (0+255),f,b
 13064  00489C                     
 13065                           ; BSR set to: 0
 13066  00489C  BF82               	btfsc	___fltol@exp1& (0+255),7,b
 13067  00489E  EF55  F024         	goto	u8780
 13068  0048A2  EF53  F024         	goto	u8781
 13069  0048A6                     u8781:
 13070  0048A6  EF6B  F024         	goto	l8371
 13071  0048AA                     u8780:
 13072  0048AA                     
 13073                           ; BSR set to: 0
 13074  0048AA  5182               	movf	___fltol@exp1& (0+255),w,b
 13075  0048AC  0A80               	xorlw	128
 13076  0048AE  0F97               	addlw	151
 13077  0048B0  B0D8               	btfsc	status,0,c
 13078  0048B2  EF5D  F024         	goto	u8791
 13079  0048B6  EF5F  F024         	goto	u8790
 13080  0048BA                     u8791:
 13081  0048BA  EF61  F024         	goto	l8367
 13082  0048BE                     u8790:
 13083  0048BE  EF24  F024         	goto	l8347
 13084  0048C2                     l8367:
 13085                           
 13086                           ; BSR set to: 0
 13087  0048C2  90D8               	bcf	status,0,c
 13088  0048C4  337C               	rrcf	(___fltol@f1+3)& (0+255),f,b
 13089  0048C6  337B               	rrcf	(___fltol@f1+2)& (0+255),f,b
 13090  0048C8  337A               	rrcf	(___fltol@f1+1)& (0+255),f,b
 13091  0048CA  3379               	rrcf	___fltol@f1& (0+255),f,b
 13092  0048CC                     
 13093                           ; BSR set to: 0
 13094  0048CC  3F82               	incfsz	___fltol@exp1& (0+255),f,b
 13095  0048CE  EF61  F024         	goto	l8367
 13096  0048D2  EF83  F024         	goto	l8381
 13097  0048D6                     l8371:
 13098                           
 13099                           ; BSR set to: 0
 13100  0048D6  0E1F               	movlw	31
 13101  0048D8  6582               	cpfsgt	___fltol@exp1& (0+255),b
 13102  0048DA  EF71  F024         	goto	u8801
 13103  0048DE  EF73  F024         	goto	u8800
 13104  0048E2                     u8801:
 13105  0048E2  EF7B  F024         	goto	l8379
 13106  0048E6                     u8800:
 13107  0048E6  EF24  F024         	goto	l8347
 13108  0048EA                     l8377:
 13109                           
 13110                           ; BSR set to: 0
 13111  0048EA  90D8               	bcf	status,0,c
 13112  0048EC  3779               	rlcf	___fltol@f1& (0+255),f,b
 13113  0048EE  377A               	rlcf	(___fltol@f1+1)& (0+255),f,b
 13114  0048F0  377B               	rlcf	(___fltol@f1+2)& (0+255),f,b
 13115  0048F2  377C               	rlcf	(___fltol@f1+3)& (0+255),f,b
 13116  0048F4  0782               	decf	___fltol@exp1& (0+255),f,b
 13117  0048F6                     l8379:
 13118                           
 13119                           ; BSR set to: 0
 13120  0048F6  5182               	movf	___fltol@exp1& (0+255),w,b
 13121  0048F8  A4D8               	btfss	status,2,c
 13122  0048FA  EF81  F024         	goto	u8811
 13123  0048FE  EF83  F024         	goto	u8810
 13124  004902                     u8811:
 13125  004902  EF75  F024         	goto	l8377
 13126  004906                     u8810:
 13127  004906                     l8381:
 13128                           
 13129                           ; BSR set to: 0
 13130  004906  5181               	movf	___fltol@sign1& (0+255),w,b
 13131  004908  B4D8               	btfsc	status,2,c
 13132  00490A  EF89  F024         	goto	u8821
 13133  00490E  EF8B  F024         	goto	u8820
 13134  004912                     u8821:
 13135  004912  EF93  F024         	goto	l8385
 13136  004916                     u8820:
 13137  004916                     
 13138                           ; BSR set to: 0
 13139  004916  1F7C               	comf	(___fltol@f1+3)& (0+255),f,b
 13140  004918  1F7B               	comf	(___fltol@f1+2)& (0+255),f,b
 13141  00491A  1F7A               	comf	(___fltol@f1+1)& (0+255),f,b
 13142  00491C  6D79               	negf	___fltol@f1& (0+255),b
 13143  00491E  0E00               	movlw	0
 13144  004920  237A               	addwfc	(___fltol@f1+1)& (0+255),f,b
 13145  004922  237B               	addwfc	(___fltol@f1+2)& (0+255),f,b
 13146  004924  237C               	addwfc	(___fltol@f1+3)& (0+255),f,b
 13147  004926                     l8385:
 13148                           
 13149                           ; BSR set to: 0
 13150  004926  C079  F079         	movff	___fltol@f1,?___fltol
 13151  00492A  C07A  F07A         	movff	___fltol@f1+1,?___fltol+1
 13152  00492E  C07B  F07B         	movff	___fltol@f1+2,?___fltol+2
 13153  004932  C07C  F07C         	movff	___fltol@f1+3,?___fltol+3
 13154  004936                     l1700:
 13155                           
 13156                           ; BSR set to: 0
 13157  004936  0012               	return		;funcret
 13158  004938                     __end_of___fltol:
 13159                           	callstack 0
 13160                           
 13161 ;; *************** function ___flmul *****************
 13162 ;; Defined at:
 13163 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
 13164 ;; Parameters:    Size  Location     Type
 13165 ;;  b               4   41[COMRAM] long 
 13166 ;;  a               4   45[COMRAM] long 
 13167 ;; Auto vars:     Size  Location     Type
 13168 ;;  prod            4    7[BANK0 ] struct .
 13169 ;;  grs             4    2[BANK0 ] unsigned long 
 13170 ;;  temp            2   11[BANK0 ] struct .
 13171 ;;  bexp            1    6[BANK0 ] unsigned char 
 13172 ;;  aexp            1    1[BANK0 ] unsigned char 
 13173 ;;  sign            1    0[BANK0 ] unsigned char 
 13174 ;; Return value:  Size  Location     Type
 13175 ;;                  4   41[COMRAM] unsigned char 
 13176 ;; Registers used:
 13177 ;;		wreg, status,2, status,0, prodl, prodh
 13178 ;; Tracked objects:
 13179 ;;		On entry : 0/0
 13180 ;;		On exit  : 0/0
 13181 ;;		Unchanged: 0/0
 13182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13183 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13184 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13185 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13186 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13187 ;;Total ram usage:       25 bytes
 13188 ;; Hardware stack levels used: 1
 13189 ;; Hardware stack levels required when called: 8
 13190 ;; This function calls:
 13191 ;;		Nothing
 13192 ;; This function is called by:
 13193 ;;		_calcSpeed
 13194 ;;		_calcMotorPow
 13195 ;;		_efgtoa
 13196 ;; This function uses a non-reentrant model
 13197 ;;
 13198                           
 13199                           	psect	text53
 13200  002802                     __ptext53:
 13201                           	callstack 0
 13202  002802                     ___flmul:
 13203                           	callstack 16
 13204  002802  502D               	movf	(___flmul@b+3)^0,w,c
 13205  002804  0B80               	andlw	128
 13206  002806  0100               	movlb	0	; () banked
 13207  002808  6F60               	movwf	___flmul@sign& (0+255),b
 13208  00280A  502D               	movf	(___flmul@b+3)^0,w,c
 13209  00280C  242D               	addwf	(___flmul@b+3)^0,w,c
 13210  00280E  6F66               	movwf	___flmul@bexp& (0+255),b
 13211  002810                     
 13212                           ; BSR set to: 0
 13213  002810  AE2C               	btfss	(___flmul@b+2)^0,7,c
 13214  002812  EF0D  F014         	goto	u8361
 13215  002816  EF0F  F014         	goto	u8360
 13216  00281A                     u8361:
 13217  00281A  EF10  F014         	goto	l8089
 13218  00281E                     u8360:
 13219  00281E                     
 13220                           ; BSR set to: 0
 13221  00281E  8166               	bsf	___flmul@bexp& (0+255),0,b
 13222  002820                     l8089:
 13223                           
 13224                           ; BSR set to: 0
 13225  002820  5166               	movf	___flmul@bexp& (0+255),w,b
 13226  002822  B4D8               	btfsc	status,2,c
 13227  002824  EF16  F014         	goto	u8371
 13228  002828  EF18  F014         	goto	u8370
 13229  00282C                     u8371:
 13230  00282C  EF2B  F014         	goto	l8097
 13231  002830                     u8370:
 13232  002830                     
 13233                           ; BSR set to: 0
 13234  002830  2966               	incf	___flmul@bexp& (0+255),w,b
 13235  002832  A4D8               	btfss	status,2,c
 13236  002834  EF1E  F014         	goto	u8381
 13237  002838  EF20  F014         	goto	u8380
 13238  00283C                     u8381:
 13239  00283C  EF28  F014         	goto	l8095
 13240  002840                     u8380:
 13241  002840                     
 13242                           ; BSR set to: 0
 13243  002840  0E00               	movlw	0
 13244  002842  6E2A               	movwf	___flmul@b^0,c
 13245  002844  0E00               	movlw	0
 13246  002846  6E2B               	movwf	(___flmul@b+1)^0,c
 13247  002848  0E00               	movlw	0
 13248  00284A  6E2C               	movwf	(___flmul@b+2)^0,c
 13249  00284C  0E00               	movlw	0
 13250  00284E  6E2D               	movwf	(___flmul@b+3)^0,c
 13251  002850                     l8095:
 13252                           
 13253                           ; BSR set to: 0
 13254  002850  8E2C               	bsf	(___flmul@b+2)^0,7,c
 13255  002852  EF33  F014         	goto	l8099
 13256  002856                     l8097:
 13257                           
 13258                           ; BSR set to: 0
 13259  002856  0E00               	movlw	0
 13260  002858  6E2A               	movwf	___flmul@b^0,c
 13261  00285A  0E00               	movlw	0
 13262  00285C  6E2B               	movwf	(___flmul@b+1)^0,c
 13263  00285E  0E00               	movlw	0
 13264  002860  6E2C               	movwf	(___flmul@b+2)^0,c
 13265  002862  0E00               	movlw	0
 13266  002864  6E2D               	movwf	(___flmul@b+3)^0,c
 13267  002866                     l8099:
 13268                           
 13269                           ; BSR set to: 0
 13270  002866  5031               	movf	(___flmul@a+3)^0,w,c
 13271  002868  0B80               	andlw	128
 13272  00286A  1B60               	xorwf	___flmul@sign& (0+255),f,b
 13273  00286C                     
 13274                           ; BSR set to: 0
 13275  00286C  5031               	movf	(___flmul@a+3)^0,w,c
 13276  00286E  2431               	addwf	(___flmul@a+3)^0,w,c
 13277  002870  6F61               	movwf	___flmul@aexp& (0+255),b
 13278  002872                     
 13279                           ; BSR set to: 0
 13280  002872  AE30               	btfss	(___flmul@a+2)^0,7,c
 13281  002874  EF3E  F014         	goto	u8391
 13282  002878  EF40  F014         	goto	u8390
 13283  00287C                     u8391:
 13284  00287C  EF41  F014         	goto	l8107
 13285  002880                     u8390:
 13286  002880                     
 13287                           ; BSR set to: 0
 13288  002880  8161               	bsf	___flmul@aexp& (0+255),0,b
 13289  002882                     l8107:
 13290                           
 13291                           ; BSR set to: 0
 13292  002882  5161               	movf	___flmul@aexp& (0+255),w,b
 13293  002884  B4D8               	btfsc	status,2,c
 13294  002886  EF47  F014         	goto	u8401
 13295  00288A  EF49  F014         	goto	u8400
 13296  00288E                     u8401:
 13297  00288E  EF5C  F014         	goto	l8115
 13298  002892                     u8400:
 13299  002892                     
 13300                           ; BSR set to: 0
 13301  002892  2961               	incf	___flmul@aexp& (0+255),w,b
 13302  002894  A4D8               	btfss	status,2,c
 13303  002896  EF4F  F014         	goto	u8411
 13304  00289A  EF51  F014         	goto	u8410
 13305  00289E                     u8411:
 13306  00289E  EF59  F014         	goto	l8113
 13307  0028A2                     u8410:
 13308  0028A2                     
 13309                           ; BSR set to: 0
 13310  0028A2  0E00               	movlw	0
 13311  0028A4  6E2E               	movwf	___flmul@a^0,c
 13312  0028A6  0E00               	movlw	0
 13313  0028A8  6E2F               	movwf	(___flmul@a+1)^0,c
 13314  0028AA  0E00               	movlw	0
 13315  0028AC  6E30               	movwf	(___flmul@a+2)^0,c
 13316  0028AE  0E00               	movlw	0
 13317  0028B0  6E31               	movwf	(___flmul@a+3)^0,c
 13318  0028B2                     l8113:
 13319                           
 13320                           ; BSR set to: 0
 13321  0028B2  8E30               	bsf	(___flmul@a+2)^0,7,c
 13322  0028B4  EF64  F014         	goto	l2017
 13323  0028B8                     l8115:
 13324                           
 13325                           ; BSR set to: 0
 13326  0028B8  0E00               	movlw	0
 13327  0028BA  6E2E               	movwf	___flmul@a^0,c
 13328  0028BC  0E00               	movlw	0
 13329  0028BE  6E2F               	movwf	(___flmul@a+1)^0,c
 13330  0028C0  0E00               	movlw	0
 13331  0028C2  6E30               	movwf	(___flmul@a+2)^0,c
 13332  0028C4  0E00               	movlw	0
 13333  0028C6  6E31               	movwf	(___flmul@a+3)^0,c
 13334  0028C8                     l2017:
 13335                           
 13336                           ; BSR set to: 0
 13337  0028C8  5161               	movf	___flmul@aexp& (0+255),w,b
 13338  0028CA  B4D8               	btfsc	status,2,c
 13339  0028CC  EF6A  F014         	goto	u8421
 13340  0028D0  EF6C  F014         	goto	u8420
 13341  0028D4                     u8421:
 13342  0028D4  EF74  F014         	goto	l8119
 13343  0028D8                     u8420:
 13344  0028D8                     
 13345                           ; BSR set to: 0
 13346  0028D8  5166               	movf	___flmul@bexp& (0+255),w,b
 13347  0028DA  A4D8               	btfss	status,2,c
 13348  0028DC  EF72  F014         	goto	u8431
 13349  0028E0  EF74  F014         	goto	u8430
 13350  0028E4                     u8431:
 13351  0028E4  EF7E  F014         	goto	l8123
 13352  0028E8                     u8430:
 13353  0028E8                     l8119:
 13354                           
 13355                           ; BSR set to: 0
 13356  0028E8  0E00               	movlw	0
 13357  0028EA  6E2A               	movwf	?___flmul^0,c
 13358  0028EC  0E00               	movlw	0
 13359  0028EE  6E2B               	movwf	(?___flmul+1)^0,c
 13360  0028F0  0E00               	movlw	0
 13361  0028F2  6E2C               	movwf	(?___flmul+2)^0,c
 13362  0028F4  0E00               	movlw	0
 13363  0028F6  6E2D               	movwf	(?___flmul+3)^0,c
 13364  0028F8  EF28  F016         	goto	l2021
 13365  0028FC                     l8123:
 13366                           
 13367                           ; BSR set to: 0
 13368  0028FC  5030               	movf	(___flmul@a+2)^0,w,c
 13369  0028FE  022A               	mulwf	___flmul@b^0,c
 13370  002900  006F FFCC  F06B    	movff	prodl,___flmul@temp
 13371  002906  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 13372  00290C                     
 13373                           ; BSR set to: 0
 13374  00290C  516B               	movf	___flmul@temp& (0+255),w,b
 13375  00290E  6F62               	movwf	___flmul@grs& (0+255),b
 13376  002910  6B63               	clrf	(___flmul@grs+1)& (0+255),b
 13377  002912  6B64               	clrf	(___flmul@grs+2)& (0+255),b
 13378  002914  6B65               	clrf	(___flmul@grs+3)& (0+255),b
 13379  002916                     
 13380                           ; BSR set to: 0
 13381  002916  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13382  002918  6F67               	movwf	___flmul@prod& (0+255),b
 13383  00291A  6B68               	clrf	(___flmul@prod+1)& (0+255),b
 13384  00291C  6B69               	clrf	(___flmul@prod+2)& (0+255),b
 13385  00291E  6B6A               	clrf	(___flmul@prod+3)& (0+255),b
 13386  002920  502F               	movf	(___flmul@a+1)^0,w,c
 13387  002922  022B               	mulwf	(___flmul@b+1)^0,c
 13388  002924  006F FFCC  F06B    	movff	prodl,___flmul@temp
 13389  00292A  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 13390  002930                     
 13391                           ; BSR set to: 0
 13392  002930  516B               	movf	___flmul@temp& (0+255),w,b
 13393  002932  2762               	addwf	___flmul@grs& (0+255),f,b
 13394  002934  0E00               	movlw	0
 13395  002936  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 13396  002938  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 13397  00293A  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 13398  00293C                     
 13399                           ; BSR set to: 0
 13400  00293C  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13401  00293E  2767               	addwf	___flmul@prod& (0+255),f,b
 13402  002940  0E00               	movlw	0
 13403  002942  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 13404  002944  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 13405  002946  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 13406  002948  502E               	movf	___flmul@a^0,w,c
 13407  00294A  022C               	mulwf	(___flmul@b+2)^0,c
 13408  00294C  006F FFCC  F06B    	movff	prodl,___flmul@temp
 13409  002952  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 13410  002958                     
 13411                           ; BSR set to: 0
 13412  002958  516B               	movf	___flmul@temp& (0+255),w,b
 13413  00295A  2762               	addwf	___flmul@grs& (0+255),f,b
 13414  00295C  0E00               	movlw	0
 13415  00295E  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 13416  002960  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 13417  002962  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 13418  002964                     
 13419                           ; BSR set to: 0
 13420  002964  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13421  002966  2767               	addwf	___flmul@prod& (0+255),f,b
 13422  002968  0E00               	movlw	0
 13423  00296A  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 13424  00296C  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 13425  00296E  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 13426  002970                     
 13427                           ; BSR set to: 0
 13428  002970  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
 13429  002974  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
 13430  002978  C062  F063         	movff	___flmul@grs,___flmul@grs+1
 13431  00297C  6B62               	clrf	___flmul@grs& (0+255),b
 13432  00297E                     
 13433                           ; BSR set to: 0
 13434  00297E  502E               	movf	___flmul@a^0,w,c
 13435  002980  022B               	mulwf	(___flmul@b+1)^0,c
 13436  002982  006F FFCC  F06B    	movff	prodl,___flmul@temp
 13437  002988  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 13438  00298E                     
 13439                           ; BSR set to: 0
 13440  00298E  516B               	movf	___flmul@temp& (0+255),w,b
 13441  002990  2762               	addwf	___flmul@grs& (0+255),f,b
 13442  002992  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13443  002994  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 13444  002996  0E00               	movlw	0
 13445  002998  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 13446  00299A  0E00               	movlw	0
 13447  00299C  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 13448  00299E                     
 13449                           ; BSR set to: 0
 13450  00299E  502F               	movf	(___flmul@a+1)^0,w,c
 13451  0029A0  022A               	mulwf	___flmul@b^0,c
 13452  0029A2  006F FFCC  F06B    	movff	prodl,___flmul@temp
 13453  0029A8  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 13454  0029AE                     
 13455                           ; BSR set to: 0
 13456  0029AE  516B               	movf	___flmul@temp& (0+255),w,b
 13457  0029B0  2762               	addwf	___flmul@grs& (0+255),f,b
 13458  0029B2  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13459  0029B4  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 13460  0029B6  0E00               	movlw	0
 13461  0029B8  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 13462  0029BA  0E00               	movlw	0
 13463  0029BC  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 13464  0029BE                     
 13465                           ; BSR set to: 0
 13466  0029BE  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
 13467  0029C2  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
 13468  0029C6  C062  F063         	movff	___flmul@grs,___flmul@grs+1
 13469  0029CA  6B62               	clrf	___flmul@grs& (0+255),b
 13470  0029CC  502E               	movf	___flmul@a^0,w,c
 13471  0029CE  022A               	mulwf	___flmul@b^0,c
 13472  0029D0  006F FFCC  F06B    	movff	prodl,___flmul@temp
 13473  0029D6  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 13474  0029DC                     
 13475                           ; BSR set to: 0
 13476  0029DC  516B               	movf	___flmul@temp& (0+255),w,b
 13477  0029DE  2762               	addwf	___flmul@grs& (0+255),f,b
 13478  0029E0  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13479  0029E2  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 13480  0029E4  0E00               	movlw	0
 13481  0029E6  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 13482  0029E8  0E00               	movlw	0
 13483  0029EA  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 13484  0029EC                     
 13485                           ; BSR set to: 0
 13486  0029EC  5030               	movf	(___flmul@a+2)^0,w,c
 13487  0029EE  022B               	mulwf	(___flmul@b+1)^0,c
 13488  0029F0  006F FFCC  F06B    	movff	prodl,___flmul@temp
 13489  0029F6  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 13490  0029FC  516B               	movf	___flmul@temp& (0+255),w,b
 13491  0029FE  2767               	addwf	___flmul@prod& (0+255),f,b
 13492  002A00  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13493  002A02  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 13494  002A04  0E00               	movlw	0
 13495  002A06  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 13496  002A08  0E00               	movlw	0
 13497  002A0A  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 13498  002A0C                     
 13499                           ; BSR set to: 0
 13500  002A0C  502F               	movf	(___flmul@a+1)^0,w,c
 13501  002A0E  022C               	mulwf	(___flmul@b+2)^0,c
 13502  002A10  006F FFCC  F06B    	movff	prodl,___flmul@temp
 13503  002A16  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 13504  002A1C                     
 13505                           ; BSR set to: 0
 13506  002A1C  516B               	movf	___flmul@temp& (0+255),w,b
 13507  002A1E  2767               	addwf	___flmul@prod& (0+255),f,b
 13508  002A20  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13509  002A22  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 13510  002A24  0E00               	movlw	0
 13511  002A26  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 13512  002A28  0E00               	movlw	0
 13513  002A2A  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 13514  002A2C  5030               	movf	(___flmul@a+2)^0,w,c
 13515  002A2E  022C               	mulwf	(___flmul@b+2)^0,c
 13516  002A30  006F FFCC  F06B    	movff	prodl,___flmul@temp
 13517  002A36  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 13518  002A3C                     
 13519                           ; BSR set to: 0
 13520  002A3C  516B               	movf	___flmul@temp& (0+255),w,b
 13521  002A3E  6E32               	movwf	??___flmul^0,c
 13522  002A40  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13523  002A42  6E33               	movwf	(??___flmul+1)^0,c
 13524  002A44  6A34               	clrf	(??___flmul+2)^0,c
 13525  002A46  6A35               	clrf	(??___flmul+3)^0,c
 13526  002A48  C034  F035         	movff	??___flmul+2,??___flmul+3
 13527  002A4C  C033  F034         	movff	??___flmul+1,??___flmul+2
 13528  002A50  C032  F033         	movff	??___flmul,??___flmul+1
 13529  002A54  6A32               	clrf	??___flmul^0,c
 13530  002A56  5032               	movf	??___flmul^0,w,c
 13531  002A58  2767               	addwf	___flmul@prod& (0+255),f,b
 13532  002A5A  5033               	movf	(??___flmul+1)^0,w,c
 13533  002A5C  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 13534  002A5E  5034               	movf	(??___flmul+2)^0,w,c
 13535  002A60  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 13536  002A62  5035               	movf	(??___flmul+3)^0,w,c
 13537  002A64  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 13538  002A66                     
 13539                           ; BSR set to: 0
 13540  002A66  C062  F032         	movff	___flmul@grs,??___flmul
 13541  002A6A  C063  F033         	movff	___flmul@grs+1,??___flmul+1
 13542  002A6E  C064  F034         	movff	___flmul@grs+2,??___flmul+2
 13543  002A72  C065  F035         	movff	___flmul@grs+3,??___flmul+3
 13544  002A76  0E19               	movlw	25
 13545  002A78  EF43  F015         	goto	u8440
 13546  002A7C                     u8445:
 13547  002A7C  90D8               	bcf	status,0,c
 13548  002A7E  3235               	rrcf	(??___flmul+3)^0,f,c
 13549  002A80  3234               	rrcf	(??___flmul+2)^0,f,c
 13550  002A82  3233               	rrcf	(??___flmul+1)^0,f,c
 13551  002A84  3232               	rrcf	??___flmul^0,f,c
 13552  002A86                     u8440:
 13553  002A86  2EE8               	decfsz	wreg,f,c
 13554  002A88  EF3E  F015         	goto	u8445
 13555  002A8C  5032               	movf	??___flmul^0,w,c
 13556  002A8E  2767               	addwf	___flmul@prod& (0+255),f,b
 13557  002A90  5033               	movf	(??___flmul+1)^0,w,c
 13558  002A92  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 13559  002A94  5034               	movf	(??___flmul+2)^0,w,c
 13560  002A96  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 13561  002A98  5035               	movf	(??___flmul+3)^0,w,c
 13562  002A9A  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 13563  002A9C                     
 13564                           ; BSR set to: 0
 13565  002A9C  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
 13566  002AA0  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
 13567  002AA4  C062  F063         	movff	___flmul@grs,___flmul@grs+1
 13568  002AA8  6B62               	clrf	___flmul@grs& (0+255),b
 13569  002AAA                     
 13570                           ; BSR set to: 0
 13571  002AAA  5161               	movf	___flmul@aexp& (0+255),w,b
 13572  002AAC  C066  F032         	movff	___flmul@bexp,??___flmul
 13573  002AB0  6A33               	clrf	(??___flmul+1)^0,c
 13574  002AB2  2632               	addwf	??___flmul^0,f,c
 13575  002AB4  0E00               	movlw	0
 13576  002AB6  2233               	addwfc	(??___flmul+1)^0,f,c
 13577  002AB8  0E82               	movlw	130
 13578  002ABA  2432               	addwf	??___flmul^0,w,c
 13579  002ABC  6F6B               	movwf	___flmul@temp& (0+255),b
 13580  002ABE  0EFF               	movlw	255
 13581  002AC0  2033               	addwfc	(??___flmul+1)^0,w,c
 13582  002AC2  6F6C               	movwf	(___flmul@temp+1)& (0+255),b
 13583  002AC4  EF79  F015         	goto	l8171
 13584  002AC8                     l8165:
 13585                           
 13586                           ; BSR set to: 0
 13587  002AC8  90D8               	bcf	status,0,c
 13588  002ACA  3767               	rlcf	___flmul@prod& (0+255),f,b
 13589  002ACC  3768               	rlcf	(___flmul@prod+1)& (0+255),f,b
 13590  002ACE  3769               	rlcf	(___flmul@prod+2)& (0+255),f,b
 13591  002AD0  376A               	rlcf	(___flmul@prod+3)& (0+255),f,b
 13592  002AD2                     
 13593                           ; BSR set to: 0
 13594  002AD2  AF65               	btfss	(___flmul@grs+3)& (0+255),7,b
 13595  002AD4  EF6E  F015         	goto	u8451
 13596  002AD8  EF70  F015         	goto	u8450
 13597  002ADC                     u8451:
 13598  002ADC  EF71  F015         	goto	l2024
 13599  002AE0                     u8450:
 13600  002AE0                     
 13601                           ; BSR set to: 0
 13602  002AE0  8167               	bsf	___flmul@prod& (0+255),0,b
 13603  002AE2                     l2024:
 13604                           
 13605                           ; BSR set to: 0
 13606  002AE2  90D8               	bcf	status,0,c
 13607  002AE4  3762               	rlcf	___flmul@grs& (0+255),f,b
 13608  002AE6  3763               	rlcf	(___flmul@grs+1)& (0+255),f,b
 13609  002AE8  3764               	rlcf	(___flmul@grs+2)& (0+255),f,b
 13610  002AEA  3765               	rlcf	(___flmul@grs+3)& (0+255),f,b
 13611  002AEC  076B               	decf	___flmul@temp& (0+255),f,b
 13612  002AEE  A0D8               	btfss	status,0,c
 13613  002AF0  076C               	decf	(___flmul@temp+1)& (0+255),f,b
 13614  002AF2                     l8171:
 13615                           
 13616                           ; BSR set to: 0
 13617  002AF2  AF69               	btfss	(___flmul@prod+2)& (0+255),7,b
 13618  002AF4  EF7E  F015         	goto	u8461
 13619  002AF8  EF80  F015         	goto	u8460
 13620  002AFC                     u8461:
 13621  002AFC  EF64  F015         	goto	l8165
 13622  002B00                     u8460:
 13623  002B00                     
 13624                           ; BSR set to: 0
 13625  002B00  0E00               	movlw	0
 13626  002B02  6F61               	movwf	___flmul@aexp& (0+255),b
 13627  002B04                     
 13628                           ; BSR set to: 0
 13629  002B04  AF65               	btfss	(___flmul@grs+3)& (0+255),7,b
 13630  002B06  EF87  F015         	goto	u8471
 13631  002B0A  EF89  F015         	goto	u8470
 13632  002B0E                     u8471:
 13633  002B0E  EFAD  F015         	goto	l2026
 13634  002B12                     u8470:
 13635  002B12                     
 13636                           ; BSR set to: 0
 13637  002B12  0EFF               	movlw	255
 13638  002B14  1562               	andwf	___flmul@grs& (0+255),w,b
 13639  002B16  6E32               	movwf	??___flmul^0,c
 13640  002B18  0EFF               	movlw	255
 13641  002B1A  1563               	andwf	(___flmul@grs+1)& (0+255),w,b
 13642  002B1C  6E33               	movwf	(??___flmul+1)^0,c
 13643  002B1E  0EFF               	movlw	255
 13644  002B20  1564               	andwf	(___flmul@grs+2)& (0+255),w,b
 13645  002B22  6E34               	movwf	(??___flmul+2)^0,c
 13646  002B24  0E7F               	movlw	127
 13647  002B26  1565               	andwf	(___flmul@grs+3)& (0+255),w,b
 13648  002B28  6E35               	movwf	(??___flmul+3)^0,c
 13649  002B2A  5032               	movf	??___flmul^0,w,c
 13650  002B2C  1033               	iorwf	(??___flmul+1)^0,w,c
 13651  002B2E  1034               	iorwf	(??___flmul+2)^0,w,c
 13652  002B30  1035               	iorwf	(??___flmul+3)^0,w,c
 13653  002B32  B4D8               	btfsc	status,2,c
 13654  002B34  EF9E  F015         	goto	u8481
 13655  002B38  EFA0  F015         	goto	u8480
 13656  002B3C                     u8481:
 13657  002B3C  EFA4  F015         	goto	l2027
 13658  002B40                     u8480:
 13659  002B40                     l8179:
 13660                           
 13661                           ; BSR set to: 0
 13662  002B40  0E01               	movlw	1
 13663  002B42  6F61               	movwf	___flmul@aexp& (0+255),b
 13664  002B44  EFAD  F015         	goto	l2026
 13665  002B48                     l2027:
 13666                           
 13667                           ; BSR set to: 0
 13668  002B48  A167               	btfss	___flmul@prod& (0+255),0,b
 13669  002B4A  EFA9  F015         	goto	u8491
 13670  002B4E  EFAB  F015         	goto	u8490
 13671  002B52                     u8491:
 13672  002B52  EFAD  F015         	goto	l2026
 13673  002B56                     u8490:
 13674  002B56  EFA0  F015         	goto	l8179
 13675  002B5A                     l2026:
 13676                           
 13677                           ; BSR set to: 0
 13678  002B5A  5161               	movf	___flmul@aexp& (0+255),w,b
 13679  002B5C  B4D8               	btfsc	status,2,c
 13680  002B5E  EFB3  F015         	goto	u8501
 13681  002B62  EFB5  F015         	goto	u8500
 13682  002B66                     u8501:
 13683  002B66  EFD9  F015         	goto	l8191
 13684  002B6A                     u8500:
 13685  002B6A                     
 13686                           ; BSR set to: 0
 13687  002B6A  0E01               	movlw	1
 13688  002B6C  2767               	addwf	___flmul@prod& (0+255),f,b
 13689  002B6E  0E00               	movlw	0
 13690  002B70  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 13691  002B72  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 13692  002B74  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 13693  002B76                     
 13694                           ; BSR set to: 0
 13695  002B76  A16A               	btfss	(___flmul@prod+3)& (0+255),0,b
 13696  002B78  EFC0  F015         	goto	u8511
 13697  002B7C  EFC2  F015         	goto	u8510
 13698  002B80                     u8511:
 13699  002B80  EFD9  F015         	goto	l8191
 13700  002B84                     u8510:
 13701  002B84                     
 13702                           ; BSR set to: 0
 13703  002B84  C067  F032         	movff	___flmul@prod,??___flmul
 13704  002B88  C068  F033         	movff	___flmul@prod+1,??___flmul+1
 13705  002B8C  C069  F034         	movff	___flmul@prod+2,??___flmul+2
 13706  002B90  C06A  F035         	movff	___flmul@prod+3,??___flmul+3
 13707  002B94  3435               	rlcf	(??___flmul+3)^0,w,c
 13708  002B96  3235               	rrcf	(??___flmul+3)^0,f,c
 13709  002B98  3234               	rrcf	(??___flmul+2)^0,f,c
 13710  002B9A  3233               	rrcf	(??___flmul+1)^0,f,c
 13711  002B9C  3232               	rrcf	??___flmul^0,f,c
 13712  002B9E  C032  F067         	movff	??___flmul,___flmul@prod
 13713  002BA2  C033  F068         	movff	??___flmul+1,___flmul@prod+1
 13714  002BA6  C034  F069         	movff	??___flmul+2,___flmul@prod+2
 13715  002BAA  C035  F06A         	movff	??___flmul+3,___flmul@prod+3
 13716  002BAE                     
 13717                           ; BSR set to: 0
 13718  002BAE  4B6B               	infsnz	___flmul@temp& (0+255),f,b
 13719  002BB0  2B6C               	incf	(___flmul@temp+1)& (0+255),f,b
 13720  002BB2                     l8191:
 13721                           
 13722                           ; BSR set to: 0
 13723  002BB2  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 13724  002BB4  EFE4  F015         	goto	u8521
 13725  002BB8  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13726  002BBA  E108               	bnz	u8520
 13727  002BBC  296B               	incf	___flmul@temp& (0+255),w,b
 13728  002BBE  A0D8               	btfss	status,0,c
 13729  002BC0  EFE4  F015         	goto	u8521
 13730  002BC4  EFE6  F015         	goto	u8520
 13731  002BC8                     u8521:
 13732  002BC8  EFF0  F015         	goto	l8195
 13733  002BCC                     u8520:
 13734  002BCC                     
 13735                           ; BSR set to: 0
 13736  002BCC  0E00               	movlw	0
 13737  002BCE  6F67               	movwf	___flmul@prod& (0+255),b
 13738  002BD0  0E00               	movlw	0
 13739  002BD2  6F68               	movwf	(___flmul@prod+1)& (0+255),b
 13740  002BD4  0E80               	movlw	128
 13741  002BD6  6F69               	movwf	(___flmul@prod+2)& (0+255),b
 13742  002BD8  0E7F               	movlw	127
 13743  002BDA  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
 13744  002BDC  EF1E  F016         	goto	l8207
 13745  002BE0                     l8195:
 13746                           
 13747                           ; BSR set to: 0
 13748  002BE0  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 13749  002BE2  EFFD  F015         	goto	u8530
 13750  002BE6  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13751  002BE8  E106               	bnz	u8531
 13752  002BEA  056B               	decf	___flmul@temp& (0+255),w,b
 13753  002BEC  B0D8               	btfsc	status,0,c
 13754  002BEE  EFFB  F015         	goto	u8531
 13755  002BF2  EFFD  F015         	goto	u8530
 13756  002BF6                     u8531:
 13757  002BF6  EF09  F016         	goto	l2034
 13758  002BFA                     u8530:
 13759  002BFA                     
 13760                           ; BSR set to: 0
 13761  002BFA  0E00               	movlw	0
 13762  002BFC  6F67               	movwf	___flmul@prod& (0+255),b
 13763  002BFE  0E00               	movlw	0
 13764  002C00  6F68               	movwf	(___flmul@prod+1)& (0+255),b
 13765  002C02  0E00               	movlw	0
 13766  002C04  6F69               	movwf	(___flmul@prod+2)& (0+255),b
 13767  002C06  0E00               	movlw	0
 13768  002C08  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
 13769  002C0A  0E00               	movlw	0
 13770  002C0C  6F60               	movwf	___flmul@sign& (0+255),b
 13771  002C0E  EF1E  F016         	goto	l8207
 13772  002C12                     l2034:
 13773                           
 13774                           ; BSR set to: 0
 13775  002C12  C06B  F066         	movff	___flmul@temp,___flmul@bexp
 13776  002C16                     
 13777                           ; BSR set to: 0
 13778  002C16  0EFF               	movlw	255
 13779  002C18  1767               	andwf	___flmul@prod& (0+255),f,b
 13780  002C1A  0EFF               	movlw	255
 13781  002C1C  1768               	andwf	(___flmul@prod+1)& (0+255),f,b
 13782  002C1E  0E7F               	movlw	127
 13783  002C20  1769               	andwf	(___flmul@prod+2)& (0+255),f,b
 13784  002C22  0E00               	movlw	0
 13785  002C24  176A               	andwf	(___flmul@prod+3)& (0+255),f,b
 13786  002C26                     
 13787                           ; BSR set to: 0
 13788  002C26  A166               	btfss	___flmul@bexp& (0+255),0,b
 13789  002C28  EF18  F016         	goto	u8541
 13790  002C2C  EF1A  F016         	goto	u8540
 13791  002C30                     u8541:
 13792  002C30  EF1B  F016         	goto	l8205
 13793  002C34                     u8540:
 13794  002C34                     
 13795                           ; BSR set to: 0
 13796  002C34  8F69               	bsf	(___flmul@prod+2)& (0+255),7,b
 13797  002C36                     l8205:
 13798                           
 13799                           ; BSR set to: 0
 13800  002C36  90D8               	bcf	status,0,c
 13801  002C38  3166               	rrcf	___flmul@bexp& (0+255),w,b
 13802  002C3A  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
 13803  002C3C                     l8207:
 13804                           
 13805                           ; BSR set to: 0
 13806  002C3C  5160               	movf	___flmul@sign& (0+255),w,b
 13807  002C3E  136A               	iorwf	(___flmul@prod+3)& (0+255),f,b
 13808  002C40                     
 13809                           ; BSR set to: 0
 13810  002C40  C067  F02A         	movff	___flmul@prod,?___flmul
 13811  002C44  C068  F02B         	movff	___flmul@prod+1,?___flmul+1
 13812  002C48  C069  F02C         	movff	___flmul@prod+2,?___flmul+2
 13813  002C4C  C06A  F02D         	movff	___flmul@prod+3,?___flmul+3
 13814  002C50                     l2021:
 13815                           
 13816                           ; BSR set to: 0
 13817  002C50  0012               	return		;funcret
 13818  002C52                     __end_of___flmul:
 13819                           	callstack 0
 13820                           
 13821 ;; *************** function ___awdiv *****************
 13822 ;; Defined at:
 13823 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
 13824 ;; Parameters:    Size  Location     Type
 13825 ;;  dividend        2   19[COMRAM] int 
 13826 ;;  divisor         2   21[COMRAM] int 
 13827 ;; Auto vars:     Size  Location     Type
 13828 ;;  quotient        2   25[COMRAM] int 
 13829 ;;  sign            1   24[COMRAM] unsigned char 
 13830 ;;  counter         1   23[COMRAM] unsigned char 
 13831 ;; Return value:  Size  Location     Type
 13832 ;;                  2   19[COMRAM] int 
 13833 ;; Registers used:
 13834 ;;		wreg, status,2, status,0
 13835 ;; Tracked objects:
 13836 ;;		On entry : 0/0
 13837 ;;		On exit  : 0/0
 13838 ;;		Unchanged: 0/0
 13839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13840 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13841 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13843 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13844 ;;Total ram usage:        8 bytes
 13845 ;; Hardware stack levels used: 1
 13846 ;; Hardware stack levels required when called: 8
 13847 ;; This function calls:
 13848 ;;		Nothing
 13849 ;; This function is called by:
 13850 ;;		_calcMotorPow
 13851 ;;		_efgtoa
 13852 ;; This function uses a non-reentrant model
 13853 ;;
 13854                           
 13855                           	psect	text54
 13856  005068                     __ptext54:
 13857                           	callstack 0
 13858  005068                     ___awdiv:
 13859                           	callstack 16
 13860  005068  0E00               	movlw	0
 13861  00506A  6E19               	movwf	___awdiv@sign^0,c
 13862  00506C  BE17               	btfsc	(___awdiv@divisor+1)^0,7,c
 13863  00506E  EF3D  F028         	goto	u8550
 13864  005072  EF3B  F028         	goto	u8551
 13865  005076                     u8551:
 13866  005076  EF43  F028         	goto	l8227
 13867  00507A                     u8550:
 13868  00507A  6C16               	negf	___awdiv@divisor^0,c
 13869  00507C  1E17               	comf	(___awdiv@divisor+1)^0,f,c
 13870  00507E  B0D8               	btfsc	status,0,c
 13871  005080  2A17               	incf	(___awdiv@divisor+1)^0,f,c
 13872  005082  0E01               	movlw	1
 13873  005084  6E19               	movwf	___awdiv@sign^0,c
 13874  005086                     l8227:
 13875  005086  BE15               	btfsc	(___awdiv@dividend+1)^0,7,c
 13876  005088  EF4A  F028         	goto	u8560
 13877  00508C  EF48  F028         	goto	u8561
 13878  005090                     u8561:
 13879  005090  EF50  F028         	goto	l8233
 13880  005094                     u8560:
 13881  005094  6C14               	negf	___awdiv@dividend^0,c
 13882  005096  1E15               	comf	(___awdiv@dividend+1)^0,f,c
 13883  005098  B0D8               	btfsc	status,0,c
 13884  00509A  2A15               	incf	(___awdiv@dividend+1)^0,f,c
 13885  00509C  0E01               	movlw	1
 13886  00509E  1A19               	xorwf	___awdiv@sign^0,f,c
 13887  0050A0                     l8233:
 13888  0050A0  0E00               	movlw	0
 13889  0050A2  6E1B               	movwf	(___awdiv@quotient+1)^0,c
 13890  0050A4  0E00               	movlw	0
 13891  0050A6  6E1A               	movwf	___awdiv@quotient^0,c
 13892  0050A8  5016               	movf	___awdiv@divisor^0,w,c
 13893  0050AA  1017               	iorwf	(___awdiv@divisor+1)^0,w,c
 13894  0050AC  B4D8               	btfsc	status,2,c
 13895  0050AE  EF5B  F028         	goto	u8571
 13896  0050B2  EF5D  F028         	goto	u8570
 13897  0050B6                     u8571:
 13898  0050B6  EF85  F028         	goto	l8255
 13899  0050BA                     u8570:
 13900  0050BA  0E01               	movlw	1
 13901  0050BC  6E18               	movwf	___awdiv@counter^0,c
 13902  0050BE  EF65  F028         	goto	l8241
 13903  0050C2                     l8239:
 13904  0050C2  90D8               	bcf	status,0,c
 13905  0050C4  3616               	rlcf	___awdiv@divisor^0,f,c
 13906  0050C6  3617               	rlcf	(___awdiv@divisor+1)^0,f,c
 13907  0050C8  2A18               	incf	___awdiv@counter^0,f,c
 13908  0050CA                     l8241:
 13909  0050CA  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
 13910  0050CC  EF6A  F028         	goto	u8581
 13911  0050D0  EF6C  F028         	goto	u8580
 13912  0050D4                     u8581:
 13913  0050D4  EF61  F028         	goto	l8239
 13914  0050D8                     u8580:
 13915  0050D8                     l8243:
 13916  0050D8  90D8               	bcf	status,0,c
 13917  0050DA  361A               	rlcf	___awdiv@quotient^0,f,c
 13918  0050DC  361B               	rlcf	(___awdiv@quotient+1)^0,f,c
 13919  0050DE  5016               	movf	___awdiv@divisor^0,w,c
 13920  0050E0  5C14               	subwf	___awdiv@dividend^0,w,c
 13921  0050E2  5017               	movf	(___awdiv@divisor+1)^0,w,c
 13922  0050E4  5815               	subwfb	(___awdiv@dividend+1)^0,w,c
 13923  0050E6  A0D8               	btfss	status,0,c
 13924  0050E8  EF78  F028         	goto	u8591
 13925  0050EC  EF7A  F028         	goto	u8590
 13926  0050F0                     u8591:
 13927  0050F0  EF7F  F028         	goto	l8251
 13928  0050F4                     u8590:
 13929  0050F4  5016               	movf	___awdiv@divisor^0,w,c
 13930  0050F6  5E14               	subwf	___awdiv@dividend^0,f,c
 13931  0050F8  5017               	movf	(___awdiv@divisor+1)^0,w,c
 13932  0050FA  5A15               	subwfb	(___awdiv@dividend+1)^0,f,c
 13933  0050FC  801A               	bsf	___awdiv@quotient^0,0,c
 13934  0050FE                     l8251:
 13935  0050FE  90D8               	bcf	status,0,c
 13936  005100  3217               	rrcf	(___awdiv@divisor+1)^0,f,c
 13937  005102  3216               	rrcf	___awdiv@divisor^0,f,c
 13938  005104  2E18               	decfsz	___awdiv@counter^0,f,c
 13939  005106  EF6C  F028         	goto	l8243
 13940  00510A                     l8255:
 13941  00510A  5019               	movf	___awdiv@sign^0,w,c
 13942  00510C  B4D8               	btfsc	status,2,c
 13943  00510E  EF8B  F028         	goto	u8601
 13944  005112  EF8D  F028         	goto	u8600
 13945  005116                     u8601:
 13946  005116  EF91  F028         	goto	l8259
 13947  00511A                     u8600:
 13948  00511A  6C1A               	negf	___awdiv@quotient^0,c
 13949  00511C  1E1B               	comf	(___awdiv@quotient+1)^0,f,c
 13950  00511E  B0D8               	btfsc	status,0,c
 13951  005120  2A1B               	incf	(___awdiv@quotient+1)^0,f,c
 13952  005122                     l8259:
 13953  005122  C01A  F014         	movff	___awdiv@quotient,?___awdiv
 13954  005126  C01B  F015         	movff	___awdiv@quotient+1,?___awdiv+1
 13955  00512A  0012               	return		;funcret
 13956  00512C                     __end_of___awdiv:
 13957                           	callstack 0
 13958                           
 13959 ;; *************** function _SYSTEM_Initialize *****************
 13960 ;; Defined at:
 13961 ;;		line 50 in file "mcc_generated_files/mcc.c"
 13962 ;; Parameters:    Size  Location     Type
 13963 ;;		None
 13964 ;; Auto vars:     Size  Location     Type
 13965 ;;		None
 13966 ;; Return value:  Size  Location     Type
 13967 ;;                  1    wreg      void 
 13968 ;; Registers used:
 13969 ;;		wreg, status,2, status,0, cstack
 13970 ;; Tracked objects:
 13971 ;;		On entry : 0/0
 13972 ;;		On exit  : 0/0
 13973 ;;		Unchanged: 0/0
 13974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13979 ;;Total ram usage:        0 bytes
 13980 ;; Hardware stack levels used: 1
 13981 ;; Hardware stack levels required when called: 10
 13982 ;; This function calls:
 13983 ;;		_ADCC_Initialize
 13984 ;;		_CCP3_Initialize
 13985 ;;		_CCP4_Initialize
 13986 ;;		_CLC3_Initialize
 13987 ;;		_INTERRUPT_Initialize
 13988 ;;		_OSCILLATOR_Initialize
 13989 ;;		_PIN_MANAGER_Initialize
 13990 ;;		_PMD_Initialize
 13991 ;;		_PWM5_Initialize
 13992 ;;		_PWM6_Initialize
 13993 ;;		_PWM7_Initialize
 13994 ;;		_PWM8_Initialize
 13995 ;;		_SMT1_Initialize
 13996 ;;		_TMR2_Initialize
 13997 ;;		_TMR3_Initialize
 13998 ;;		_TMR4_Initialize
 13999 ;;		_TMR5_Initialize
 14000 ;;		_UART1_Initialize
 14001 ;; This function is called by:
 14002 ;;		_main
 14003 ;; This function uses a non-reentrant model
 14004 ;;
 14005                           
 14006                           	psect	text55
 14007  005A10                     __ptext55:
 14008                           	callstack 0
 14009  005A10                     _SYSTEM_Initialize:
 14010                           	callstack 20
 14011  005A10                     
 14012                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 14013  005A10  ECE2  F02C         	call	_INTERRUPT_Initialize	;wreg free
 14014                           
 14015                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 14016  005A14  ECC8  F030         	call	_PMD_Initialize	;wreg free
 14017                           
 14018                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 14019  005A18  ECCF  F027         	call	_PIN_MANAGER_Initialize	;wreg free
 14020                           
 14021                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 14022  005A1C  EC49  F031         	call	_OSCILLATOR_Initialize	;wreg free
 14023  005A20                     
 14024                           ;mcc_generated_files/mcc.c: 56:     CCP3_Initialize();
 14025  005A20  EC1A  F030         	call	_CCP3_Initialize	;wreg free
 14026  005A24                     
 14027                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 14028  005A24  EC89  F02C         	call	_ADCC_Initialize	;wreg free
 14029                           
 14030                           ;mcc_generated_files/mcc.c: 58:     TMR4_Initialize();
 14031  005A28  EC48  F030         	call	_TMR4_Initialize	;wreg free
 14032  005A2C                     
 14033                           ;mcc_generated_files/mcc.c: 59:     SMT1_Initialize();
 14034  005A2C  ECEB  F02F         	call	_SMT1_Initialize	;wreg free
 14035  005A30                     
 14036                           ;mcc_generated_files/mcc.c: 60:     PWM8_Initialize();
 14037  005A30  EC19  F031         	call	_PWM8_Initialize	;wreg free
 14038  005A34                     
 14039                           ;mcc_generated_files/mcc.c: 61:     TMR2_Initialize();
 14040  005A34  EC0B  F031         	call	_TMR2_Initialize	;wreg free
 14041  005A38                     
 14042                           ;mcc_generated_files/mcc.c: 62:     PWM6_Initialize();
 14043  005A38  EC31  F031         	call	_PWM6_Initialize	;wreg free
 14044                           
 14045                           ;mcc_generated_files/mcc.c: 63:     CCP4_Initialize();
 14046  005A3C  EC03  F030         	call	_CCP4_Initialize	;wreg free
 14047  005A40                     
 14048                           ;mcc_generated_files/mcc.c: 64:     CLC3_Initialize();
 14049  005A40  EC5E  F030         	call	_CLC3_Initialize	;wreg free
 14050  005A44                     
 14051                           ;mcc_generated_files/mcc.c: 65:     TMR3_Initialize();
 14052  005A44  ECAF  F02E         	call	_TMR3_Initialize	;wreg free
 14053                           
 14054                           ;mcc_generated_files/mcc.c: 66:     PWM5_Initialize();
 14055  005A48  EC3D  F031         	call	_PWM5_Initialize	;wreg free
 14056  005A4C                     
 14057                           ;mcc_generated_files/mcc.c: 67:     TMR5_Initialize();
 14058  005A4C  EC2D  F02D         	call	_TMR5_Initialize	;wreg free
 14059  005A50                     
 14060                           ;mcc_generated_files/mcc.c: 68:     PWM7_Initialize();
 14061  005A50  EC25  F031         	call	_PWM7_Initialize	;wreg free
 14062                           
 14063                           ;mcc_generated_files/mcc.c: 69:     UART1_Initialize();
 14064  005A54  EC04  F02A         	call	_UART1_Initialize	;wreg free
 14065  005A58  0012               	return		;funcret
 14066  005A5A                     __end_of_SYSTEM_Initialize:
 14067                           	callstack 0
 14068                           
 14069 ;; *************** function _UART1_Initialize *****************
 14070 ;; Defined at:
 14071 ;;		line 87 in file "mcc_generated_files/uart1.c"
 14072 ;; Parameters:    Size  Location     Type
 14073 ;;		None
 14074 ;; Auto vars:     Size  Location     Type
 14075 ;;		None
 14076 ;; Return value:  Size  Location     Type
 14077 ;;                  1    wreg      void 
 14078 ;; Registers used:
 14079 ;;		wreg, status,2, status,0, cstack
 14080 ;; Tracked objects:
 14081 ;;		On entry : 0/0
 14082 ;;		On exit  : 0/0
 14083 ;;		Unchanged: 0/0
 14084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14089 ;;Total ram usage:        0 bytes
 14090 ;; Hardware stack levels used: 1
 14091 ;; Hardware stack levels required when called: 9
 14092 ;; This function calls:
 14093 ;;		_UART1_SetErrorHandler
 14094 ;;		_UART1_SetFramingErrorHandler
 14095 ;;		_UART1_SetOverrunErrorHandler
 14096 ;;		_UART1_SetRxInterruptHandler
 14097 ;;		_UART1_SetTxInterruptHandler
 14098 ;; This function is called by:
 14099 ;;		_SYSTEM_Initialize
 14100 ;; This function uses a non-reentrant model
 14101 ;;
 14102                           
 14103                           	psect	text56
 14104  005408                     __ptext56:
 14105                           	callstack 0
 14106  005408                     _UART1_Initialize:
 14107                           	callstack 20
 14108  005408                     
 14109                           ;mcc_generated_files/uart1.c: 90:     PIE3bits.U1RXIE = 0;
 14110  005408  0139               	movlb	57	; () banked
 14111  00540A  9793               	bcf	147,3,b	;volatile
 14112  00540C                     
 14113                           ; BSR set to: 57
 14114                           ;mcc_generated_files/uart1.c: 91:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 14115  00540C  0EEE               	movlw	low _UART1_Receive_ISR
 14116  00540E  6E14               	movwf	UART1_SetRxInterruptHandler@InterruptHandler^0,c
 14117  005410  0E51               	movlw	high _UART1_Receive_ISR
 14118  005412  6E15               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)^0,c
 14119  005414  EC6E  F031         	call	_UART1_SetRxInterruptHandler	;wreg free
 14120  005418                     
 14121                           ;mcc_generated_files/uart1.c: 92:     PIE3bits.U1TXIE = 0;
 14122  005418  0139               	movlb	57	; () banked
 14123  00541A  9993               	bcf	147,4,b	;volatile
 14124                           
 14125                           ;mcc_generated_files/uart1.c: 93:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 14126  00541C  0E7A               	movlw	low _UART1_Transmit_ISR
 14127  00541E  6E14               	movwf	UART1_SetTxInterruptHandler@InterruptHandler^0,c
 14128  005420  0E5B               	movlw	high _UART1_Transmit_ISR
 14129  005422  6E15               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)^0,c
 14130  005424  EC69  F031         	call	_UART1_SetTxInterruptHandler	;wreg free
 14131  005428                     
 14132                           ;mcc_generated_files/uart1.c: 98:     U1P1L = 0x00;
 14133  005428  0E00               	movlw	0
 14134  00542A  013D               	movlb	61	; () banked
 14135  00542C  6FEC               	movwf	236,b	;volatile
 14136  00542E                     
 14137                           ; BSR set to: 61
 14138                           ;mcc_generated_files/uart1.c: 101:     U1P1H = 0x00;
 14139  00542E  0E00               	movlw	0
 14140  005430  6FED               	movwf	237,b	;volatile
 14141  005432                     
 14142                           ; BSR set to: 61
 14143                           ;mcc_generated_files/uart1.c: 104:     U1P2L = 0x00;
 14144  005432  0E00               	movlw	0
 14145  005434  6FEE               	movwf	238,b	;volatile
 14146  005436                     
 14147                           ; BSR set to: 61
 14148                           ;mcc_generated_files/uart1.c: 107:     U1P2H = 0x00;
 14149  005436  0E00               	movlw	0
 14150  005438  6FEF               	movwf	239,b	;volatile
 14151  00543A                     
 14152                           ; BSR set to: 61
 14153                           ;mcc_generated_files/uart1.c: 110:     U1P3L = 0x00;
 14154  00543A  0E00               	movlw	0
 14155  00543C  6FF0               	movwf	240,b	;volatile
 14156  00543E                     
 14157                           ; BSR set to: 61
 14158                           ;mcc_generated_files/uart1.c: 113:     U1P3H = 0x00;
 14159  00543E  0E00               	movlw	0
 14160  005440  6FF1               	movwf	241,b	;volatile
 14161  005442                     
 14162                           ; BSR set to: 61
 14163                           ;mcc_generated_files/uart1.c: 116:     U1CON0 = 0xB0;
 14164  005442  0EB0               	movlw	176
 14165  005444  6FF2               	movwf	242,b	;volatile
 14166  005446                     
 14167                           ; BSR set to: 61
 14168                           ;mcc_generated_files/uart1.c: 119:     U1CON1 = 0x80;
 14169  005446  0E80               	movlw	128
 14170  005448  6FF3               	movwf	243,b	;volatile
 14171  00544A                     
 14172                           ; BSR set to: 61
 14173                           ;mcc_generated_files/uart1.c: 122:     U1CON2 = 0x00;
 14174  00544A  0E00               	movlw	0
 14175  00544C  6FF4               	movwf	244,b	;volatile
 14176  00544E                     
 14177                           ; BSR set to: 61
 14178                           ;mcc_generated_files/uart1.c: 125:     U1BRGL = 0x8A;
 14179  00544E  0E8A               	movlw	138
 14180  005450  6FF5               	movwf	245,b	;volatile
 14181  005452                     
 14182                           ; BSR set to: 61
 14183                           ;mcc_generated_files/uart1.c: 128:     U1BRGH = 0x00;
 14184  005452  0E00               	movlw	0
 14185  005454  6FF6               	movwf	246,b	;volatile
 14186  005456                     
 14187                           ; BSR set to: 61
 14188                           ;mcc_generated_files/uart1.c: 131:     U1FIFO = 0x00;
 14189  005456  0E00               	movlw	0
 14190  005458  6FF7               	movwf	247,b	;volatile
 14191  00545A                     
 14192                           ; BSR set to: 61
 14193                           ;mcc_generated_files/uart1.c: 134:     U1UIR = 0x00;
 14194  00545A  0E00               	movlw	0
 14195  00545C  6FF8               	movwf	248,b	;volatile
 14196  00545E                     
 14197                           ; BSR set to: 61
 14198                           ;mcc_generated_files/uart1.c: 137:     U1ERRIR = 0x00;
 14199  00545E  0E00               	movlw	0
 14200  005460  6FF9               	movwf	249,b	;volatile
 14201  005462                     
 14202                           ; BSR set to: 61
 14203                           ;mcc_generated_files/uart1.c: 140:     U1ERRIE = 0x00;
 14204  005462  0E00               	movlw	0
 14205  005464  6FFA               	movwf	250,b	;volatile
 14206  005466                     
 14207                           ; BSR set to: 61
 14208                           ;mcc_generated_files/uart1.c: 143:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
 14209  005466  0E3E               	movlw	low _UART1_DefaultFramingErrorHandler
 14210  005468  6E14               	movwf	UART1_SetFramingErrorHandler@interruptHandler^0,c
 14211  00546A  0E63               	movlw	high _UART1_DefaultFramingErrorHandler
 14212  00546C  6E15               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^0,c
 14213  00546E  EC78  F031         	call	_UART1_SetFramingErrorHandler	;wreg free
 14214  005472                     
 14215                           ;mcc_generated_files/uart1.c: 144:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
 14216  005472  0E3C               	movlw	low _UART1_DefaultOverrunErrorHandler
 14217  005474  6E14               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^0,c
 14218  005476  0E63               	movlw	high _UART1_DefaultOverrunErrorHandler
 14219  005478  6E15               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
 14220  00547A  EC73  F031         	call	_UART1_SetOverrunErrorHandler	;wreg free
 14221  00547E                     
 14222                           ;mcc_generated_files/uart1.c: 145:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
 14223  00547E  0E36               	movlw	low _UART1_DefaultErrorHandler
 14224  005480  6E14               	movwf	UART1_SetErrorHandler@interruptHandler^0,c
 14225  005482  0E63               	movlw	high _UART1_DefaultErrorHandler
 14226  005484  6E15               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^0,c
 14227  005486  EC7D  F031         	call	_UART1_SetErrorHandler	;wreg free
 14228                           
 14229                           ;mcc_generated_files/uart1.c: 147:     uart1RxLastError.status = 0;
 14230  00548A  0E00               	movlw	0
 14231  00548C  6E42               	movwf	_uart1RxLastError^0,c	;volatile
 14232                           
 14233                           ;mcc_generated_files/uart1.c: 150:     uart1TxHead = 0;
 14234  00548E  0E00               	movlw	0
 14235  005490  6E47               	movwf	_uart1TxHead^0,c	;volatile
 14236                           
 14237                           ;mcc_generated_files/uart1.c: 151:     uart1TxTail = 0;
 14238  005492  0E00               	movlw	0
 14239  005494  6E46               	movwf	_uart1TxTail^0,c	;volatile
 14240                           
 14241                           ;mcc_generated_files/uart1.c: 152:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 14242  005496  0E08               	movlw	8
 14243  005498  6E4C               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 14244                           
 14245                           ;mcc_generated_files/uart1.c: 153:     uart1RxHead = 0;
 14246  00549A  0E00               	movlw	0
 14247  00549C  6E45               	movwf	_uart1RxHead^0,c	;volatile
 14248                           
 14249                           ;mcc_generated_files/uart1.c: 154:     uart1RxTail = 0;
 14250  00549E  0E00               	movlw	0
 14251  0054A0  6E44               	movwf	_uart1RxTail^0,c	;volatile
 14252                           
 14253                           ;mcc_generated_files/uart1.c: 155:     uart1RxCount = 0;
 14254  0054A2  0E00               	movlw	0
 14255  0054A4  6E43               	movwf	_uart1RxCount^0,c	;volatile
 14256  0054A6                     
 14257                           ;mcc_generated_files/uart1.c: 158:     PIE3bits.U1RXIE = 1;
 14258  0054A6  0139               	movlb	57	; () banked
 14259  0054A8  8793               	bsf	147,3,b	;volatile
 14260  0054AA                     
 14261                           ; BSR set to: 57
 14262  0054AA  0012               	return		;funcret
 14263  0054AC                     __end_of_UART1_Initialize:
 14264                           	callstack 0
 14265                           
 14266 ;; *************** function _UART1_SetTxInterruptHandler *****************
 14267 ;; Defined at:
 14268 ;;		line 333 in file "mcc_generated_files/uart1.c"
 14269 ;; Parameters:    Size  Location     Type
 14270 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
 14271 ;;		 -> UART1_Transmit_ISR(1), 
 14272 ;; Auto vars:     Size  Location     Type
 14273 ;;		None
 14274 ;; Return value:  Size  Location     Type
 14275 ;;                  1    wreg      void 
 14276 ;; Registers used:
 14277 ;;		wreg, status,2, status,0
 14278 ;; Tracked objects:
 14279 ;;		On entry : 0/0
 14280 ;;		On exit  : 0/0
 14281 ;;		Unchanged: 0/0
 14282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14283 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14286 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14287 ;;Total ram usage:        2 bytes
 14288 ;; Hardware stack levels used: 1
 14289 ;; Hardware stack levels required when called: 8
 14290 ;; This function calls:
 14291 ;;		Nothing
 14292 ;; This function is called by:
 14293 ;;		_UART1_Initialize
 14294 ;; This function uses a non-reentrant model
 14295 ;;
 14296                           
 14297                           	psect	text57
 14298  0062D2                     __ptext57:
 14299                           	callstack 0
 14300  0062D2                     _UART1_SetTxInterruptHandler:
 14301                           	callstack 20
 14302  0062D2                     
 14303                           ;mcc_generated_files/uart1.c: 334:     UART1_TxInterruptHandler = InterruptHandler;
 14304  0062D2  C014  F1A2         	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
 14305  0062D6  C015  F1A3         	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
 14306  0062DA  0012               	return		;funcret
 14307  0062DC                     __end_of_UART1_SetTxInterruptHandler:
 14308                           	callstack 0
 14309                           
 14310 ;; *************** function _UART1_SetRxInterruptHandler *****************
 14311 ;; Defined at:
 14312 ;;		line 329 in file "mcc_generated_files/uart1.c"
 14313 ;; Parameters:    Size  Location     Type
 14314 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
 14315 ;;		 -> UART1_Receive_ISR(1), 
 14316 ;; Auto vars:     Size  Location     Type
 14317 ;;		None
 14318 ;; Return value:  Size  Location     Type
 14319 ;;                  1    wreg      void 
 14320 ;; Registers used:
 14321 ;;		wreg, status,2, status,0
 14322 ;; Tracked objects:
 14323 ;;		On entry : 0/0
 14324 ;;		On exit  : 0/0
 14325 ;;		Unchanged: 0/0
 14326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14327 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14330 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14331 ;;Total ram usage:        2 bytes
 14332 ;; Hardware stack levels used: 1
 14333 ;; Hardware stack levels required when called: 8
 14334 ;; This function calls:
 14335 ;;		Nothing
 14336 ;; This function is called by:
 14337 ;;		_UART1_Initialize
 14338 ;; This function uses a non-reentrant model
 14339 ;;
 14340                           
 14341                           	psect	text58
 14342  0062DC                     __ptext58:
 14343                           	callstack 0
 14344  0062DC                     _UART1_SetRxInterruptHandler:
 14345                           	callstack 20
 14346  0062DC                     
 14347                           ;mcc_generated_files/uart1.c: 330:     UART1_RxInterruptHandler = InterruptHandler;
 14348  0062DC  C014  F1A4         	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
 14349  0062E0  C015  F1A5         	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
 14350  0062E4  0012               	return		;funcret
 14351  0062E6                     __end_of_UART1_SetRxInterruptHandler:
 14352                           	callstack 0
 14353                           
 14354 ;; *************** function _UART1_SetOverrunErrorHandler *****************
 14355 ;; Defined at:
 14356 ;;		line 319 in file "mcc_generated_files/uart1.c"
 14357 ;; Parameters:    Size  Location     Type
 14358 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
 14359 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
 14360 ;; Auto vars:     Size  Location     Type
 14361 ;;		None
 14362 ;; Return value:  Size  Location     Type
 14363 ;;                  1    wreg      void 
 14364 ;; Registers used:
 14365 ;;		wreg, status,2, status,0
 14366 ;; Tracked objects:
 14367 ;;		On entry : 0/0
 14368 ;;		On exit  : 0/0
 14369 ;;		Unchanged: 0/0
 14370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14371 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14374 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14375 ;;Total ram usage:        2 bytes
 14376 ;; Hardware stack levels used: 1
 14377 ;; Hardware stack levels required when called: 8
 14378 ;; This function calls:
 14379 ;;		Nothing
 14380 ;; This function is called by:
 14381 ;;		_UART1_Initialize
 14382 ;; This function uses a non-reentrant model
 14383 ;;
 14384                           
 14385                           	psect	text59
 14386  0062E6                     __ptext59:
 14387                           	callstack 0
 14388  0062E6                     _UART1_SetOverrunErrorHandler:
 14389                           	callstack 20
 14390  0062E6                     
 14391                           ;mcc_generated_files/uart1.c: 320:     UART1_OverrunErrorHandler = interruptHandler;
 14392  0062E6  C014  F19E         	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
 14393  0062EA  C015  F19F         	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
 14394  0062EE  0012               	return		;funcret
 14395  0062F0                     __end_of_UART1_SetOverrunErrorHandler:
 14396                           	callstack 0
 14397                           
 14398 ;; *************** function _UART1_SetFramingErrorHandler *****************
 14399 ;; Defined at:
 14400 ;;		line 315 in file "mcc_generated_files/uart1.c"
 14401 ;; Parameters:    Size  Location     Type
 14402 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
 14403 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
 14404 ;; Auto vars:     Size  Location     Type
 14405 ;;		None
 14406 ;; Return value:  Size  Location     Type
 14407 ;;                  1    wreg      void 
 14408 ;; Registers used:
 14409 ;;		wreg, status,2, status,0
 14410 ;; Tracked objects:
 14411 ;;		On entry : 0/0
 14412 ;;		On exit  : 0/0
 14413 ;;		Unchanged: 0/0
 14414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14415 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14418 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14419 ;;Total ram usage:        2 bytes
 14420 ;; Hardware stack levels used: 1
 14421 ;; Hardware stack levels required when called: 8
 14422 ;; This function calls:
 14423 ;;		Nothing
 14424 ;; This function is called by:
 14425 ;;		_UART1_Initialize
 14426 ;; This function uses a non-reentrant model
 14427 ;;
 14428                           
 14429                           	psect	text60
 14430  0062F0                     __ptext60:
 14431                           	callstack 0
 14432  0062F0                     _UART1_SetFramingErrorHandler:
 14433                           	callstack 20
 14434  0062F0                     
 14435                           ;mcc_generated_files/uart1.c: 316:     UART1_FramingErrorHandler = interruptHandler;
 14436  0062F0  C014  F1A0         	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
 14437  0062F4  C015  F1A1         	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
 14438  0062F8  0012               	return		;funcret
 14439  0062FA                     __end_of_UART1_SetFramingErrorHandler:
 14440                           	callstack 0
 14441                           
 14442 ;; *************** function _UART1_SetErrorHandler *****************
 14443 ;; Defined at:
 14444 ;;		line 323 in file "mcc_generated_files/uart1.c"
 14445 ;; Parameters:    Size  Location     Type
 14446 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
 14447 ;;		 -> UART1_DefaultErrorHandler(1), 
 14448 ;; Auto vars:     Size  Location     Type
 14449 ;;		None
 14450 ;; Return value:  Size  Location     Type
 14451 ;;                  1    wreg      void 
 14452 ;; Registers used:
 14453 ;;		wreg, status,2, status,0
 14454 ;; Tracked objects:
 14455 ;;		On entry : 0/0
 14456 ;;		On exit  : 0/0
 14457 ;;		Unchanged: 0/0
 14458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14459 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14462 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14463 ;;Total ram usage:        2 bytes
 14464 ;; Hardware stack levels used: 1
 14465 ;; Hardware stack levels required when called: 8
 14466 ;; This function calls:
 14467 ;;		Nothing
 14468 ;; This function is called by:
 14469 ;;		_UART1_Initialize
 14470 ;; This function uses a non-reentrant model
 14471 ;;
 14472                           
 14473                           	psect	text61
 14474  0062FA                     __ptext61:
 14475                           	callstack 0
 14476  0062FA                     _UART1_SetErrorHandler:
 14477                           	callstack 20
 14478  0062FA                     
 14479                           ;mcc_generated_files/uart1.c: 324:     UART1_ErrorHandler = interruptHandler;
 14480  0062FA  C014  F19C         	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
 14481  0062FE  C015  F19D         	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
 14482  006302  0012               	return		;funcret
 14483  006304                     __end_of_UART1_SetErrorHandler:
 14484                           	callstack 0
 14485                           
 14486 ;; *************** function _TMR5_Initialize *****************
 14487 ;; Defined at:
 14488 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 14489 ;; Parameters:    Size  Location     Type
 14490 ;;		None
 14491 ;; Auto vars:     Size  Location     Type
 14492 ;;		None
 14493 ;; Return value:  Size  Location     Type
 14494 ;;                  1    wreg      void 
 14495 ;; Registers used:
 14496 ;;		wreg, status,2, status,0, cstack
 14497 ;; Tracked objects:
 14498 ;;		On entry : 0/0
 14499 ;;		On exit  : 0/0
 14500 ;;		Unchanged: 0/0
 14501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14504 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14505 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14506 ;;Total ram usage:        2 bytes
 14507 ;; Hardware stack levels used: 1
 14508 ;; Hardware stack levels required when called: 9
 14509 ;; This function calls:
 14510 ;;		_TMR5_SetGateInterruptHandler
 14511 ;; This function is called by:
 14512 ;;		_SYSTEM_Initialize
 14513 ;; This function uses a non-reentrant model
 14514 ;;
 14515                           
 14516                           	psect	text62
 14517  005A5A                     __ptext62:
 14518                           	callstack 0
 14519  005A5A                     _TMR5_Initialize:
 14520                           	callstack 20
 14521  005A5A                     
 14522                           ;mcc_generated_files/tmr5.c: 72:     T5GCON = 0xC0;
 14523  005A5A  0EC0               	movlw	192
 14524  005A5C  6E9B               	movwf	155,c	;volatile
 14525                           
 14526                           ;mcc_generated_files/tmr5.c: 75:     T5GATE = 0x00;
 14527  005A5E  0E00               	movlw	0
 14528  005A60  6E9C               	movwf	156,c	;volatile
 14529                           
 14530                           ;mcc_generated_files/tmr5.c: 78:     T5CLK = 0x05;
 14531  005A62  0E05               	movlw	5
 14532  005A64  6E9D               	movwf	157,c	;volatile
 14533                           
 14534                           ;mcc_generated_files/tmr5.c: 81:     TMR5H = 0x00;
 14535  005A66  0E00               	movlw	0
 14536  005A68  6E99               	movwf	153,c	;volatile
 14537                           
 14538                           ;mcc_generated_files/tmr5.c: 84:     TMR5L = 0x00;
 14539  005A6A  0E00               	movlw	0
 14540  005A6C  6E98               	movwf	152,c	;volatile
 14541  005A6E                     
 14542                           ;mcc_generated_files/tmr5.c: 87:     PIR8bits.TMR5IF = 0;
 14543  005A6E  0139               	movlb	57	; () banked
 14544  005A70  9DA8               	bcf	168,6,b	;volatile
 14545  005A72                     
 14546                           ; BSR set to: 57
 14547                           ;mcc_generated_files/tmr5.c: 90:     timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 14548  005A72  5098               	movf	152,w,c	;volatile
 14549  005A74  006F FE64  F016    	movff	16281,??_TMR5_Initialize	;volatile
 14550  005A7A  6A17               	clrf	(??_TMR5_Initialize+1)^0,c
 14551  005A7C  C016  F017         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 14552  005A80  6A16               	clrf	??_TMR5_Initialize^0,c
 14553  005A82  1016               	iorwf	??_TMR5_Initialize^0,w,c
 14554  005A84  0101               	movlb	1	; () banked
 14555  005A86  6F96               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 14556  005A88  5017               	movf	(??_TMR5_Initialize+1)^0,w,c
 14557  005A8A  6F97               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 14558  005A8C                     
 14559                           ; BSR set to: 1
 14560                           ;mcc_generated_files/tmr5.c: 93:     PIR8bits.TMR5GIF = 0;
 14561  005A8C  0139               	movlb	57	; () banked
 14562  005A8E  9FA8               	bcf	168,7,b	;volatile
 14563  005A90                     
 14564                           ; BSR set to: 57
 14565                           ;mcc_generated_files/tmr5.c: 96:     PIE8bits.TMR5GIE = 1;
 14566  005A90  8F98               	bsf	152,7,b	;volatile
 14567  005A92                     
 14568                           ; BSR set to: 57
 14569                           ;mcc_generated_files/tmr5.c: 99:     TMR5_SetGateInterruptHandler(TMR5_DefaultGateInterr
      +                          uptHandler);
 14570  005A92  0EF8               	movlw	low _TMR5_DefaultGateInterruptHandler
 14571  005A94  6E14               	movwf	TMR5_SetGateInterruptHandler@InterruptHandler^0,c
 14572  005A96  0E61               	movlw	high _TMR5_DefaultGateInterruptHandler
 14573  005A98  6E15               	movwf	(TMR5_SetGateInterruptHandler@InterruptHandler+1)^0,c
 14574  005A9A  EC82  F031         	call	_TMR5_SetGateInterruptHandler	;wreg free
 14575  005A9E                     
 14576                           ;mcc_generated_files/tmr5.c: 102:     T5CON = 0x03;
 14577  005A9E  0E03               	movlw	3
 14578  005AA0  6E9A               	movwf	154,c	;volatile
 14579  005AA2  0012               	return		;funcret
 14580  005AA4                     __end_of_TMR5_Initialize:
 14581                           	callstack 0
 14582                           
 14583 ;; *************** function _TMR5_SetGateInterruptHandler *****************
 14584 ;; Defined at:
 14585 ;;		line 186 in file "mcc_generated_files/tmr5.c"
 14586 ;; Parameters:    Size  Location     Type
 14587 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
 14588 ;;		 -> TMR5_DefaultGateInterruptHandler(1), 
 14589 ;; Auto vars:     Size  Location     Type
 14590 ;;		None
 14591 ;; Return value:  Size  Location     Type
 14592 ;;                  1    wreg      void 
 14593 ;; Registers used:
 14594 ;;		wreg, status,2, status,0
 14595 ;; Tracked objects:
 14596 ;;		On entry : 0/0
 14597 ;;		On exit  : 0/0
 14598 ;;		Unchanged: 0/0
 14599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14600 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14603 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14604 ;;Total ram usage:        2 bytes
 14605 ;; Hardware stack levels used: 1
 14606 ;; Hardware stack levels required when called: 8
 14607 ;; This function calls:
 14608 ;;		Nothing
 14609 ;; This function is called by:
 14610 ;;		_TMR5_Initialize
 14611 ;; This function uses a non-reentrant model
 14612 ;;
 14613                           
 14614                           	psect	text63
 14615  006304                     __ptext63:
 14616                           	callstack 0
 14617  006304                     _TMR5_SetGateInterruptHandler:
 14618                           	callstack 20
 14619  006304                     
 14620                           ;mcc_generated_files/tmr5.c: 187:     TMR5_GateInterruptHandler = InterruptHandler;
 14621  006304  C014  F194         	movff	TMR5_SetGateInterruptHandler@InterruptHandler,_TMR5_GateInterruptHandler
 14622  006308  C015  F195         	movff	TMR5_SetGateInterruptHandler@InterruptHandler+1,_TMR5_GateInterruptHandler+1
 14623  00630C  0012               	return		;funcret
 14624  00630E                     __end_of_TMR5_SetGateInterruptHandler:
 14625                           	callstack 0
 14626                           
 14627 ;; *************** function _TMR4_Initialize *****************
 14628 ;; Defined at:
 14629 ;;		line 65 in file "mcc_generated_files/tmr4.c"
 14630 ;; Parameters:    Size  Location     Type
 14631 ;;		None
 14632 ;; Auto vars:     Size  Location     Type
 14633 ;;		None
 14634 ;; Return value:  Size  Location     Type
 14635 ;;                  1    wreg      void 
 14636 ;; Registers used:
 14637 ;;		wreg, status,2, status,0, cstack
 14638 ;; Tracked objects:
 14639 ;;		On entry : 0/0
 14640 ;;		On exit  : 0/0
 14641 ;;		Unchanged: 0/0
 14642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14647 ;;Total ram usage:        0 bytes
 14648 ;; Hardware stack levels used: 1
 14649 ;; Hardware stack levels required when called: 9
 14650 ;; This function calls:
 14651 ;;		_TMR4_SetInterruptHandler
 14652 ;; This function is called by:
 14653 ;;		_SYSTEM_Initialize
 14654 ;; This function uses a non-reentrant model
 14655 ;;
 14656                           
 14657                           	psect	text64
 14658  006090                     __ptext64:
 14659                           	callstack 0
 14660  006090                     _TMR4_Initialize:
 14661                           	callstack 20
 14662  006090                     
 14663                           ;mcc_generated_files/tmr4.c: 70:     T4CLKCON = 0x01;
 14664  006090  0E01               	movlw	1
 14665  006092  6EA2               	movwf	162,c	;volatile
 14666                           
 14667                           ;mcc_generated_files/tmr4.c: 73:     T4HLT = 0x00;
 14668  006094  0E00               	movlw	0
 14669  006096  6EA1               	movwf	161,c	;volatile
 14670                           
 14671                           ;mcc_generated_files/tmr4.c: 76:     T4RST = 0x00;
 14672  006098  0E00               	movlw	0
 14673  00609A  6EA3               	movwf	163,c	;volatile
 14674                           
 14675                           ;mcc_generated_files/tmr4.c: 79:     T4PR = 0xF9;
 14676  00609C  0EF9               	movlw	249
 14677  00609E  6E9F               	movwf	159,c	;volatile
 14678                           
 14679                           ;mcc_generated_files/tmr4.c: 82:     T4TMR = 0x00;
 14680  0060A0  0E00               	movlw	0
 14681  0060A2  6E9E               	movwf	158,c	;volatile
 14682  0060A4                     
 14683                           ;mcc_generated_files/tmr4.c: 85:     PIR7bits.TMR4IF = 0;
 14684  0060A4  0139               	movlb	57	; () banked
 14685  0060A6  91A7               	bcf	167,0,b	;volatile
 14686  0060A8                     
 14687                           ; BSR set to: 57
 14688                           ;mcc_generated_files/tmr4.c: 88:     PIE7bits.TMR4IE = 1;
 14689  0060A8  8197               	bsf	151,0,b	;volatile
 14690  0060AA                     
 14691                           ; BSR set to: 57
 14692                           ;mcc_generated_files/tmr4.c: 91:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
 14693  0060AA  0E40               	movlw	low _TMR4_DefaultInterruptHandler
 14694  0060AC  6E14               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
 14695  0060AE  0E63               	movlw	high _TMR4_DefaultInterruptHandler
 14696  0060B0  6E15               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
 14697  0060B2  EC87  F031         	call	_TMR4_SetInterruptHandler	;wreg free
 14698  0060B6                     
 14699                           ;mcc_generated_files/tmr4.c: 94:     T4CON = 0xE0;
 14700  0060B6  0EE0               	movlw	224
 14701  0060B8  6EA0               	movwf	160,c	;volatile
 14702  0060BA  0012               	return		;funcret
 14703  0060BC                     __end_of_TMR4_Initialize:
 14704                           	callstack 0
 14705                           
 14706 ;; *************** function _TMR4_SetInterruptHandler *****************
 14707 ;; Defined at:
 14708 ;;		line 194 in file "mcc_generated_files/tmr4.c"
 14709 ;; Parameters:    Size  Location     Type
 14710 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
 14711 ;;		 -> TMR4_10msISR(1), TMR4_DefaultInterruptHandler(1), 
 14712 ;; Auto vars:     Size  Location     Type
 14713 ;;		None
 14714 ;; Return value:  Size  Location     Type
 14715 ;;                  1    wreg      void 
 14716 ;; Registers used:
 14717 ;;		wreg, status,2, status,0
 14718 ;; Tracked objects:
 14719 ;;		On entry : 0/0
 14720 ;;		On exit  : 0/0
 14721 ;;		Unchanged: 0/0
 14722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14723 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14726 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14727 ;;Total ram usage:        2 bytes
 14728 ;; Hardware stack levels used: 1
 14729 ;; Hardware stack levels required when called: 8
 14730 ;; This function calls:
 14731 ;;		Nothing
 14732 ;; This function is called by:
 14733 ;;		_TMR4_Initialize
 14734 ;;		_main
 14735 ;; This function uses a non-reentrant model
 14736 ;;
 14737                           
 14738                           	psect	text65
 14739  00630E                     __ptext65:
 14740                           	callstack 0
 14741  00630E                     _TMR4_SetInterruptHandler:
 14742                           	callstack 22
 14743  00630E                     
 14744                           ;mcc_generated_files/tmr4.c: 195:     TMR4_InterruptHandler = InterruptHandler;
 14745  00630E  C014  F190         	movff	TMR4_SetInterruptHandler@InterruptHandler,_TMR4_InterruptHandler
 14746  006312  C015  F191         	movff	TMR4_SetInterruptHandler@InterruptHandler+1,_TMR4_InterruptHandler+1
 14747  006316  0012               	return		;funcret
 14748  006318                     __end_of_TMR4_SetInterruptHandler:
 14749                           	callstack 0
 14750                           
 14751 ;; *************** function _TMR3_Initialize *****************
 14752 ;; Defined at:
 14753 ;;		line 63 in file "mcc_generated_files/tmr3.c"
 14754 ;; Parameters:    Size  Location     Type
 14755 ;;		None
 14756 ;; Auto vars:     Size  Location     Type
 14757 ;;		None
 14758 ;; Return value:  Size  Location     Type
 14759 ;;                  1    wreg      void 
 14760 ;; Registers used:
 14761 ;;		wreg, status,2, status,0
 14762 ;; Tracked objects:
 14763 ;;		On entry : 0/0
 14764 ;;		On exit  : 0/0
 14765 ;;		Unchanged: 0/0
 14766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14769 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14770 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14771 ;;Total ram usage:        2 bytes
 14772 ;; Hardware stack levels used: 1
 14773 ;; Hardware stack levels required when called: 8
 14774 ;; This function calls:
 14775 ;;		Nothing
 14776 ;; This function is called by:
 14777 ;;		_SYSTEM_Initialize
 14778 ;; This function uses a non-reentrant model
 14779 ;;
 14780                           
 14781                           	psect	text66
 14782  005D5E                     __ptext66:
 14783                           	callstack 0
 14784  005D5E                     _TMR3_Initialize:
 14785                           	callstack 21
 14786  005D5E                     
 14787                           ;mcc_generated_files/tmr3.c: 68:     T3GCON = 0x00;
 14788  005D5E  0E00               	movlw	0
 14789  005D60  6EA7               	movwf	167,c	;volatile
 14790                           
 14791                           ;mcc_generated_files/tmr3.c: 71:     T3GATE = 0x00;
 14792  005D62  0E00               	movlw	0
 14793  005D64  6EA8               	movwf	168,c	;volatile
 14794                           
 14795                           ;mcc_generated_files/tmr3.c: 74:     T3CLK = 0x05;
 14796  005D66  0E05               	movlw	5
 14797  005D68  6EA9               	movwf	169,c	;volatile
 14798                           
 14799                           ;mcc_generated_files/tmr3.c: 77:     TMR3H = 0x00;
 14800  005D6A  0E00               	movlw	0
 14801  005D6C  6EA5               	movwf	165,c	;volatile
 14802                           
 14803                           ;mcc_generated_files/tmr3.c: 80:     TMR3L = 0x00;
 14804  005D6E  0E00               	movlw	0
 14805  005D70  6EA4               	movwf	164,c	;volatile
 14806  005D72                     
 14807                           ;mcc_generated_files/tmr3.c: 83:     PIR6bits.TMR3IF = 0;
 14808  005D72  0139               	movlb	57	; () banked
 14809  005D74  9DA6               	bcf	166,6,b	;volatile
 14810  005D76                     
 14811                           ; BSR set to: 57
 14812                           ;mcc_generated_files/tmr3.c: 86:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 14813  005D76  50A4               	movf	164,w,c	;volatile
 14814  005D78  006F FE94  F014    	movff	16293,??_TMR3_Initialize	;volatile
 14815  005D7E  6A15               	clrf	(??_TMR3_Initialize+1)^0,c
 14816  005D80  C014  F015         	movff	??_TMR3_Initialize,??_TMR3_Initialize+1
 14817  005D84  6A14               	clrf	??_TMR3_Initialize^0,c
 14818  005D86  1014               	iorwf	??_TMR3_Initialize^0,w,c
 14819  005D88  0101               	movlb	1	; () banked
 14820  005D8A  6F92               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 14821  005D8C  5015               	movf	(??_TMR3_Initialize+1)^0,w,c
 14822  005D8E  6F93               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 14823  005D90                     
 14824                           ; BSR set to: 1
 14825                           ;mcc_generated_files/tmr3.c: 89:     T3CON = 0x01;
 14826  005D90  0E01               	movlw	1
 14827  005D92  6EA6               	movwf	166,c	;volatile
 14828  005D94                     
 14829                           ; BSR set to: 1
 14830  005D94  0012               	return		;funcret
 14831  005D96                     __end_of_TMR3_Initialize:
 14832                           	callstack 0
 14833                           
 14834 ;; *************** function _TMR2_Initialize *****************
 14835 ;; Defined at:
 14836 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 14837 ;; Parameters:    Size  Location     Type
 14838 ;;		None
 14839 ;; Auto vars:     Size  Location     Type
 14840 ;;		None
 14841 ;; Return value:  Size  Location     Type
 14842 ;;                  1    wreg      void 
 14843 ;; Registers used:
 14844 ;;		wreg, status,2
 14845 ;; Tracked objects:
 14846 ;;		On entry : 0/0
 14847 ;;		On exit  : 0/0
 14848 ;;		Unchanged: 0/0
 14849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14854 ;;Total ram usage:        0 bytes
 14855 ;; Hardware stack levels used: 1
 14856 ;; Hardware stack levels required when called: 8
 14857 ;; This function calls:
 14858 ;;		Nothing
 14859 ;; This function is called by:
 14860 ;;		_SYSTEM_Initialize
 14861 ;; This function uses a non-reentrant model
 14862 ;;
 14863                           
 14864                           	psect	text67
 14865  006216                     __ptext67:
 14866                           	callstack 0
 14867  006216                     _TMR2_Initialize:
 14868                           	callstack 21
 14869  006216                     
 14870                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x05;
 14871  006216  0E05               	movlw	5
 14872  006218  6EAE               	movwf	174,c	;volatile
 14873                           
 14874                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 14875  00621A  0E00               	movlw	0
 14876  00621C  6EAD               	movwf	173,c	;volatile
 14877                           
 14878                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 14879  00621E  0E00               	movlw	0
 14880  006220  6EAF               	movwf	175,c	;volatile
 14881  006222                     
 14882                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
 14883  006222  68AB               	setf	171,c	;volatile
 14884                           
 14885                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 14886  006224  0E00               	movlw	0
 14887  006226  6EAA               	movwf	170,c	;volatile
 14888  006228                     
 14889                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 14890  006228  0139               	movlb	57	; () banked
 14891  00622A  95A4               	bcf	164,2,b	;volatile
 14892                           
 14893                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xB0;
 14894  00622C  0EB0               	movlw	176
 14895  00622E  6EAC               	movwf	172,c	;volatile
 14896  006230                     
 14897                           ; BSR set to: 57
 14898  006230  0012               	return		;funcret
 14899  006232                     __end_of_TMR2_Initialize:
 14900                           	callstack 0
 14901                           
 14902 ;; *************** function _SMT1_Initialize *****************
 14903 ;; Defined at:
 14904 ;;		line 60 in file "mcc_generated_files/smt1.c"
 14905 ;; Parameters:    Size  Location     Type
 14906 ;;		None
 14907 ;; Auto vars:     Size  Location     Type
 14908 ;;		None
 14909 ;; Return value:  Size  Location     Type
 14910 ;;                  1    wreg      void 
 14911 ;; Registers used:
 14912 ;;		wreg, status,2
 14913 ;; Tracked objects:
 14914 ;;		On entry : 0/0
 14915 ;;		On exit  : 0/0
 14916 ;;		Unchanged: 0/0
 14917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14922 ;;Total ram usage:        0 bytes
 14923 ;; Hardware stack levels used: 1
 14924 ;; Hardware stack levels required when called: 8
 14925 ;; This function calls:
 14926 ;;		Nothing
 14927 ;; This function is called by:
 14928 ;;		_SYSTEM_Initialize
 14929 ;; This function uses a non-reentrant model
 14930 ;;
 14931                           
 14932                           	psect	text68
 14933  005FD6                     __ptext68:
 14934                           	callstack 0
 14935  005FD6                     _SMT1_Initialize:
 14936                           	callstack 21
 14937  005FD6                     
 14938                           ;mcc_generated_files/smt1.c: 63:     SMT1CON0 = 0x80;
 14939  005FD6  0E80               	movlw	128
 14940  005FD8  013F               	movlb	63	; () banked
 14941  005FDA  6F1E               	movwf	30,b	;volatile
 14942                           
 14943                           ;mcc_generated_files/smt1.c: 66:     SMT1CON1 = 0x42;
 14944  005FDC  0E42               	movlw	66
 14945  005FDE  6F1F               	movwf	31,b	;volatile
 14946                           
 14947                           ;mcc_generated_files/smt1.c: 69:     SMT1STAT = 0x00;
 14948  005FE0  0E00               	movlw	0
 14949  005FE2  6F20               	movwf	32,b	;volatile
 14950                           
 14951                           ;mcc_generated_files/smt1.c: 72:     SMT1CLK = 0x04;
 14952  005FE4  0E04               	movlw	4
 14953  005FE6  6F21               	movwf	33,b	;volatile
 14954                           
 14955                           ;mcc_generated_files/smt1.c: 75:     SMT1WIN = 0x00;
 14956  005FE8  0E00               	movlw	0
 14957  005FEA  6F23               	movwf	35,b	;volatile
 14958                           
 14959                           ;mcc_generated_files/smt1.c: 78:     SMT1SIG = 0x00;
 14960  005FEC  0E00               	movlw	0
 14961  005FEE  6F22               	movwf	34,b	;volatile
 14962                           
 14963                           ;mcc_generated_files/smt1.c: 81:     SMT1PRU = 0x01;
 14964  005FF0  0E01               	movlw	1
 14965  005FF2  6F1D               	movwf	29,b	;volatile
 14966  005FF4                     
 14967                           ; BSR set to: 63
 14968                           ;mcc_generated_files/smt1.c: 84:     SMT1PRH = 0xFF;
 14969  005FF4  691C               	setf	28,b	;volatile
 14970  005FF6                     
 14971                           ; BSR set to: 63
 14972                           ;mcc_generated_files/smt1.c: 87:     SMT1PRL = 0xFF;
 14973  005FF6  691B               	setf	27,b	;volatile
 14974  005FF8                     
 14975                           ; BSR set to: 63
 14976                           ;mcc_generated_files/smt1.c: 90:     PIE1bits.SMT1IE = 1;
 14977  005FF8  0139               	movlb	57	; () banked
 14978  005FFA  8B91               	bsf	145,5,b	;volatile
 14979  005FFC                     
 14980                           ; BSR set to: 57
 14981                           ;mcc_generated_files/smt1.c: 93:     PIE1bits.SMT1PWAIE = 1;
 14982  005FFC  8F91               	bsf	145,7,b	;volatile
 14983  005FFE                     
 14984                           ; BSR set to: 57
 14985                           ;mcc_generated_files/smt1.c: 96:     PIE1bits.SMT1PRAIE = 1;
 14986  005FFE  8D91               	bsf	145,6,b	;volatile
 14987  006000                     
 14988                           ; BSR set to: 57
 14989                           ;mcc_generated_files/smt1.c: 99:     SMT1CON1bits.SMT1GO = 1;
 14990  006000  013F               	movlb	63	; () banked
 14991  006002  8F1F               	bsf	31,7,b	;volatile
 14992  006004                     
 14993                           ; BSR set to: 63
 14994  006004  0012               	return		;funcret
 14995  006006                     __end_of_SMT1_Initialize:
 14996                           	callstack 0
 14997                           
 14998 ;; *************** function _PWM8_Initialize *****************
 14999 ;; Defined at:
 15000 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 15001 ;; Parameters:    Size  Location     Type
 15002 ;;		None
 15003 ;; Auto vars:     Size  Location     Type
 15004 ;;		None
 15005 ;; Return value:  Size  Location     Type
 15006 ;;                  1    wreg      void 
 15007 ;; Registers used:
 15008 ;;		wreg, status,2
 15009 ;; Tracked objects:
 15010 ;;		On entry : 0/0
 15011 ;;		On exit  : 0/0
 15012 ;;		Unchanged: 0/0
 15013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15018 ;;Total ram usage:        0 bytes
 15019 ;; Hardware stack levels used: 1
 15020 ;; Hardware stack levels required when called: 8
 15021 ;; This function calls:
 15022 ;;		Nothing
 15023 ;; This function is called by:
 15024 ;;		_SYSTEM_Initialize
 15025 ;; This function uses a non-reentrant model
 15026 ;;
 15027                           
 15028                           	psect	text69
 15029  006232                     __ptext69:
 15030                           	callstack 0
 15031  006232                     _PWM8_Initialize:
 15032                           	callstack 21
 15033  006232                     
 15034                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 15035  006232  0E80               	movlw	128
 15036  006234  6E62               	movwf	98,c	;volatile
 15037                           
 15038                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 15039  006236  0E00               	movlw	0
 15040  006238  6E61               	movwf	97,c	;volatile
 15041                           
 15042                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x00;
 15043  00623A  0E00               	movlw	0
 15044  00623C  6E60               	movwf	96,c	;volatile
 15045                           
 15046                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 2;
 15047  00623E  013F               	movlb	63	; () banked
 15048  006240  515F               	movf	95,w,b	;volatile
 15049  006242  0B3F               	andlw	-193
 15050  006244  0980               	iorlw	128
 15051  006246  6F5F               	movwf	95,b	;volatile
 15052  006248                     
 15053                           ; BSR set to: 63
 15054  006248  0012               	return		;funcret
 15055  00624A                     __end_of_PWM8_Initialize:
 15056                           	callstack 0
 15057                           
 15058 ;; *************** function _PWM7_Initialize *****************
 15059 ;; Defined at:
 15060 ;;		line 58 in file "mcc_generated_files/pwm7.c"
 15061 ;; Parameters:    Size  Location     Type
 15062 ;;		None
 15063 ;; Auto vars:     Size  Location     Type
 15064 ;;		None
 15065 ;; Return value:  Size  Location     Type
 15066 ;;                  1    wreg      void 
 15067 ;; Registers used:
 15068 ;;		wreg, status,2
 15069 ;; Tracked objects:
 15070 ;;		On entry : 0/0
 15071 ;;		On exit  : 0/0
 15072 ;;		Unchanged: 0/0
 15073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15078 ;;Total ram usage:        0 bytes
 15079 ;; Hardware stack levels used: 1
 15080 ;; Hardware stack levels required when called: 8
 15081 ;; This function calls:
 15082 ;;		Nothing
 15083 ;; This function is called by:
 15084 ;;		_SYSTEM_Initialize
 15085 ;; This function uses a non-reentrant model
 15086 ;;
 15087                           
 15088                           	psect	text70
 15089  00624A                     __ptext70:
 15090                           	callstack 0
 15091  00624A                     _PWM7_Initialize:
 15092                           	callstack 21
 15093  00624A                     
 15094                           ;mcc_generated_files/pwm7.c: 62:     PWM7CON = 0x80;
 15095  00624A  0E80               	movlw	128
 15096  00624C  6E66               	movwf	102,c	;volatile
 15097                           
 15098                           ;mcc_generated_files/pwm7.c: 65:     PWM7DCH = 0x00;
 15099  00624E  0E00               	movlw	0
 15100  006250  6E65               	movwf	101,c	;volatile
 15101                           
 15102                           ;mcc_generated_files/pwm7.c: 68:     PWM7DCL = 0x00;
 15103  006252  0E00               	movlw	0
 15104  006254  6E64               	movwf	100,c	;volatile
 15105                           
 15106                           ;mcc_generated_files/pwm7.c: 71:     CCPTMRS1bits.P7TSEL = 2;
 15107  006256  013F               	movlb	63	; () banked
 15108  006258  515F               	movf	95,w,b	;volatile
 15109  00625A  0BCF               	andlw	-49
 15110  00625C  0920               	iorlw	32
 15111  00625E  6F5F               	movwf	95,b	;volatile
 15112  006260                     
 15113                           ; BSR set to: 63
 15114  006260  0012               	return		;funcret
 15115  006262                     __end_of_PWM7_Initialize:
 15116                           	callstack 0
 15117                           
 15118 ;; *************** function _PWM6_Initialize *****************
 15119 ;; Defined at:
 15120 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 15121 ;; Parameters:    Size  Location     Type
 15122 ;;		None
 15123 ;; Auto vars:     Size  Location     Type
 15124 ;;		None
 15125 ;; Return value:  Size  Location     Type
 15126 ;;                  1    wreg      void 
 15127 ;; Registers used:
 15128 ;;		wreg, status,2
 15129 ;; Tracked objects:
 15130 ;;		On entry : 0/0
 15131 ;;		On exit  : 0/0
 15132 ;;		Unchanged: 0/0
 15133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15138 ;;Total ram usage:        0 bytes
 15139 ;; Hardware stack levels used: 1
 15140 ;; Hardware stack levels required when called: 8
 15141 ;; This function calls:
 15142 ;;		Nothing
 15143 ;; This function is called by:
 15144 ;;		_SYSTEM_Initialize
 15145 ;; This function uses a non-reentrant model
 15146 ;;
 15147                           
 15148                           	psect	text71
 15149  006262                     __ptext71:
 15150                           	callstack 0
 15151  006262                     _PWM6_Initialize:
 15152                           	callstack 21
 15153  006262                     
 15154                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
 15155  006262  0E80               	movlw	128
 15156  006264  6E6A               	movwf	106,c	;volatile
 15157                           
 15158                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x59;
 15159  006266  0E59               	movlw	89
 15160  006268  6E69               	movwf	105,c	;volatile
 15161                           
 15162                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0x40;
 15163  00626A  0E40               	movlw	64
 15164  00626C  6E68               	movwf	104,c	;volatile
 15165                           
 15166                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
 15167  00626E  013F               	movlb	63	; () banked
 15168  006270  515F               	movf	95,w,b	;volatile
 15169  006272  0BF3               	andlw	-13
 15170  006274  0904               	iorlw	4
 15171  006276  6F5F               	movwf	95,b	;volatile
 15172  006278                     
 15173                           ; BSR set to: 63
 15174  006278  0012               	return		;funcret
 15175  00627A                     __end_of_PWM6_Initialize:
 15176                           	callstack 0
 15177                           
 15178 ;; *************** function _PWM5_Initialize *****************
 15179 ;; Defined at:
 15180 ;;		line 58 in file "mcc_generated_files/pwm5.c"
 15181 ;; Parameters:    Size  Location     Type
 15182 ;;		None
 15183 ;; Auto vars:     Size  Location     Type
 15184 ;;		None
 15185 ;; Return value:  Size  Location     Type
 15186 ;;                  1    wreg      void 
 15187 ;; Registers used:
 15188 ;;		wreg, status,2
 15189 ;; Tracked objects:
 15190 ;;		On entry : 0/0
 15191 ;;		On exit  : 0/0
 15192 ;;		Unchanged: 0/0
 15193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15197 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15198 ;;Total ram usage:        0 bytes
 15199 ;; Hardware stack levels used: 1
 15200 ;; Hardware stack levels required when called: 8
 15201 ;; This function calls:
 15202 ;;		Nothing
 15203 ;; This function is called by:
 15204 ;;		_SYSTEM_Initialize
 15205 ;; This function uses a non-reentrant model
 15206 ;;
 15207                           
 15208                           	psect	text72
 15209  00627A                     __ptext72:
 15210                           	callstack 0
 15211  00627A                     _PWM5_Initialize:
 15212                           	callstack 21
 15213  00627A                     
 15214                           ;mcc_generated_files/pwm5.c: 62:     PWM5CON = 0x80;
 15215  00627A  0E80               	movlw	128
 15216  00627C  6E6E               	movwf	110,c	;volatile
 15217                           
 15218                           ;mcc_generated_files/pwm5.c: 65:     PWM5DCH = 0x59;
 15219  00627E  0E59               	movlw	89
 15220  006280  6E6D               	movwf	109,c	;volatile
 15221                           
 15222                           ;mcc_generated_files/pwm5.c: 68:     PWM5DCL = 0x40;
 15223  006282  0E40               	movlw	64
 15224  006284  6E6C               	movwf	108,c	;volatile
 15225                           
 15226                           ;mcc_generated_files/pwm5.c: 71:     CCPTMRS1bits.P5TSEL = 1;
 15227  006286  013F               	movlb	63	; () banked
 15228  006288  515F               	movf	95,w,b	;volatile
 15229  00628A  0BFC               	andlw	-4
 15230  00628C  0901               	iorlw	1
 15231  00628E  6F5F               	movwf	95,b	;volatile
 15232  006290                     
 15233                           ; BSR set to: 63
 15234  006290  0012               	return		;funcret
 15235  006292                     __end_of_PWM5_Initialize:
 15236                           	callstack 0
 15237                           
 15238 ;; *************** function _PMD_Initialize *****************
 15239 ;; Defined at:
 15240 ;;		line 86 in file "mcc_generated_files/mcc.c"
 15241 ;; Parameters:    Size  Location     Type
 15242 ;;		None
 15243 ;; Auto vars:     Size  Location     Type
 15244 ;;		None
 15245 ;; Return value:  Size  Location     Type
 15246 ;;                  1    wreg      void 
 15247 ;; Registers used:
 15248 ;;		wreg, status,2
 15249 ;; Tracked objects:
 15250 ;;		On entry : 0/0
 15251 ;;		On exit  : 0/0
 15252 ;;		Unchanged: 0/0
 15253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15258 ;;Total ram usage:        0 bytes
 15259 ;; Hardware stack levels used: 1
 15260 ;; Hardware stack levels required when called: 8
 15261 ;; This function calls:
 15262 ;;		Nothing
 15263 ;; This function is called by:
 15264 ;;		_SYSTEM_Initialize
 15265 ;; This function uses a non-reentrant model
 15266 ;;
 15267                           
 15268                           	psect	text73
 15269  006190                     __ptext73:
 15270                           	callstack 0
 15271  006190                     _PMD_Initialize:
 15272                           	callstack 21
 15273  006190                     
 15274                           ;mcc_generated_files/mcc.c: 89:     PMD0 = 0x00;
 15275  006190  0E00               	movlw	0
 15276  006192  0139               	movlb	57	; () banked
 15277  006194  6FC0               	movwf	192,b	;volatile
 15278                           
 15279                           ;mcc_generated_files/mcc.c: 91:     PMD1 = 0x00;
 15280  006196  0E00               	movlw	0
 15281  006198  6FC1               	movwf	193,b	;volatile
 15282                           
 15283                           ;mcc_generated_files/mcc.c: 93:     PMD2 = 0x00;
 15284  00619A  0E00               	movlw	0
 15285  00619C  6FC2               	movwf	194,b	;volatile
 15286                           
 15287                           ;mcc_generated_files/mcc.c: 95:     PMD3 = 0x00;
 15288  00619E  0E00               	movlw	0
 15289  0061A0  6FC3               	movwf	195,b	;volatile
 15290                           
 15291                           ;mcc_generated_files/mcc.c: 97:     PMD4 = 0x00;
 15292  0061A2  0E00               	movlw	0
 15293  0061A4  6FC4               	movwf	196,b	;volatile
 15294                           
 15295                           ;mcc_generated_files/mcc.c: 99:     PMD5 = 0x00;
 15296  0061A6  0E00               	movlw	0
 15297  0061A8  6FC5               	movwf	197,b	;volatile
 15298                           
 15299                           ;mcc_generated_files/mcc.c: 101:     PMD6 = 0x00;
 15300  0061AA  0E00               	movlw	0
 15301  0061AC  6FC6               	movwf	198,b	;volatile
 15302                           
 15303                           ;mcc_generated_files/mcc.c: 103:     PMD7 = 0x00;
 15304  0061AE  0E00               	movlw	0
 15305  0061B0  6FC7               	movwf	199,b	;volatile
 15306  0061B2                     
 15307                           ; BSR set to: 57
 15308  0061B2  0012               	return		;funcret
 15309  0061B4                     __end_of_PMD_Initialize:
 15310                           	callstack 0
 15311                           
 15312 ;; *************** function _PIN_MANAGER_Initialize *****************
 15313 ;; Defined at:
 15314 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 15315 ;; Parameters:    Size  Location     Type
 15316 ;;		None
 15317 ;; Auto vars:     Size  Location     Type
 15318 ;;		None
 15319 ;; Return value:  Size  Location     Type
 15320 ;;                  1    wreg      void 
 15321 ;; Registers used:
 15322 ;;		wreg, status,2
 15323 ;; Tracked objects:
 15324 ;;		On entry : 0/0
 15325 ;;		On exit  : 0/0
 15326 ;;		Unchanged: 0/0
 15327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15332 ;;Total ram usage:        0 bytes
 15333 ;; Hardware stack levels used: 1
 15334 ;; Hardware stack levels required when called: 8
 15335 ;; This function calls:
 15336 ;;		Nothing
 15337 ;; This function is called by:
 15338 ;;		_SYSTEM_Initialize
 15339 ;; This function uses a non-reentrant model
 15340 ;;
 15341                           
 15342                           	psect	text74
 15343  004F9E                     __ptext74:
 15344                           	callstack 0
 15345  004F9E                     _PIN_MANAGER_Initialize:
 15346                           	callstack 21
 15347  004F9E                     
 15348                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 15349  004F9E  0E00               	movlw	0
 15350  004FA0  6EBE               	movwf	190,c	;volatile
 15351                           
 15352                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 15353  004FA2  0E00               	movlw	0
 15354  004FA4  6EBD               	movwf	189,c	;volatile
 15355                           
 15356                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x24;
 15357  004FA6  0E24               	movlw	36
 15358  004FA8  6EBA               	movwf	186,c	;volatile
 15359                           
 15360                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 15361  004FAA  0E00               	movlw	0
 15362  004FAC  6EBB               	movwf	187,c	;volatile
 15363                           
 15364                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 15365  004FAE  0E00               	movlw	0
 15366  004FB0  6EBC               	movwf	188,c	;volatile
 15367                           
 15368                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
 15369  004FB2  0E07               	movlw	7
 15370  004FB4  6EC6               	movwf	198,c	;volatile
 15371                           
 15372                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xC0;
 15373  004FB6  0EC0               	movlw	192
 15374  004FB8  6EC2               	movwf	194,c	;volatile
 15375                           
 15376                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xF7;
 15377  004FBA  0EF7               	movlw	247
 15378  004FBC  6EC3               	movwf	195,c	;volatile
 15379  004FBE                     
 15380                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
 15381  004FBE  68C4               	setf	196,c	;volatile
 15382  004FC0                     
 15383                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
 15384  004FC0  68C5               	setf	197,c	;volatile
 15385                           
 15386                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x1F;
 15387  004FC2  0E1F               	movlw	31
 15388  004FC4  013A               	movlb	58	; () banked
 15389  004FC6  6F70               	movwf	112,b	;volatile
 15390  004FC8                     
 15391                           ; BSR set to: 58
 15392                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xFF;
 15393  004FC8  6960               	setf	96,b	;volatile
 15394                           
 15395                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xC0;
 15396  004FCA  0EC0               	movlw	192
 15397  004FCC  6F50               	movwf	80,b	;volatile
 15398                           
 15399                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
 15400  004FCE  0E07               	movlw	7
 15401  004FD0  6F80               	movwf	128,b	;volatile
 15402                           
 15403                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x7F;
 15404  004FD2  0E7F               	movlw	127
 15405  004FD4  6F40               	movwf	64,b	;volatile
 15406                           
 15407                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 15408  004FD6  0E00               	movlw	0
 15409  004FD8  6F71               	movwf	113,b	;volatile
 15410                           
 15411                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 15412  004FDA  0E00               	movlw	0
 15413  004FDC  6F81               	movwf	129,b	;volatile
 15414                           
 15415                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
 15416  004FDE  0E00               	movlw	0
 15417  004FE0  6F51               	movwf	81,b	;volatile
 15418                           
 15419                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 15420  004FE2  0E00               	movlw	0
 15421  004FE4  6F41               	movwf	65,b	;volatile
 15422                           
 15423                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 15424  004FE6  0E00               	movlw	0
 15425  004FE8  6F61               	movwf	97,b	;volatile
 15426                           
 15427                           ;mcc_generated_files/pin_manager.c: 96:     RB1I2C = 0x00;
 15428  004FEA  0E00               	movlw	0
 15429  004FEC  6F5A               	movwf	90,b	;volatile
 15430                           
 15431                           ;mcc_generated_files/pin_manager.c: 97:     RB2I2C = 0x00;
 15432  004FEE  0E00               	movlw	0
 15433  004FF0  6F5B               	movwf	91,b	;volatile
 15434                           
 15435                           ;mcc_generated_files/pin_manager.c: 98:     RC3I2C = 0x00;
 15436  004FF2  0E00               	movlw	0
 15437  004FF4  6F6A               	movwf	106,b	;volatile
 15438                           
 15439                           ;mcc_generated_files/pin_manager.c: 99:     RC4I2C = 0x00;
 15440  004FF6  0E00               	movlw	0
 15441  004FF8  6F6B               	movwf	107,b	;volatile
 15442                           
 15443                           ;mcc_generated_files/pin_manager.c: 100:     RD0I2C = 0x00;
 15444  004FFA  0E00               	movlw	0
 15445  004FFC  6F7A               	movwf	122,b	;volatile
 15446                           
 15447                           ;mcc_generated_files/pin_manager.c: 101:     RD1I2C = 0x00;
 15448  004FFE  0E00               	movlw	0
 15449  005000  6F7B               	movwf	123,b	;volatile
 15450                           
 15451                           ;mcc_generated_files/pin_manager.c: 106:     ODCONE = 0x00;
 15452  005002  0E00               	movlw	0
 15453  005004  6F82               	movwf	130,b	;volatile
 15454                           
 15455                           ;mcc_generated_files/pin_manager.c: 107:     ODCONA = 0x00;
 15456  005006  0E00               	movlw	0
 15457  005008  6F42               	movwf	66,b	;volatile
 15458                           
 15459                           ;mcc_generated_files/pin_manager.c: 108:     ODCONB = 0x00;
 15460  00500A  0E00               	movlw	0
 15461  00500C  6F52               	movwf	82,b	;volatile
 15462                           
 15463                           ;mcc_generated_files/pin_manager.c: 109:     ODCONC = 0x00;
 15464  00500E  0E00               	movlw	0
 15465  005010  6F62               	movwf	98,b	;volatile
 15466                           
 15467                           ;mcc_generated_files/pin_manager.c: 110:     ODCOND = 0x00;
 15468  005012  0E00               	movlw	0
 15469  005014  6F72               	movwf	114,b	;volatile
 15470  005016                     
 15471                           ; BSR set to: 58
 15472                           ;mcc_generated_files/pin_manager.c: 115:     SLRCONA = 0xFF;
 15473  005016  6943               	setf	67,b	;volatile
 15474  005018                     
 15475                           ; BSR set to: 58
 15476                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONB = 0xFF;
 15477  005018  6953               	setf	83,b	;volatile
 15478  00501A                     
 15479                           ; BSR set to: 58
 15480                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONC = 0xFF;
 15481  00501A  6963               	setf	99,b	;volatile
 15482  00501C                     
 15483                           ; BSR set to: 58
 15484                           ;mcc_generated_files/pin_manager.c: 118:     SLRCOND = 0xFF;
 15485  00501C  6973               	setf	115,b	;volatile
 15486                           
 15487                           ;mcc_generated_files/pin_manager.c: 119:     SLRCONE = 0x07;
 15488  00501E  0E07               	movlw	7
 15489  005020  6F83               	movwf	131,b	;volatile
 15490  005022                     
 15491                           ; BSR set to: 58
 15492                           ;mcc_generated_files/pin_manager.c: 124:     INLVLA = 0xFF;
 15493  005022  6944               	setf	68,b	;volatile
 15494  005024                     
 15495                           ; BSR set to: 58
 15496                           ;mcc_generated_files/pin_manager.c: 125:     INLVLB = 0xFF;
 15497  005024  6954               	setf	84,b	;volatile
 15498  005026                     
 15499                           ; BSR set to: 58
 15500                           ;mcc_generated_files/pin_manager.c: 126:     INLVLC = 0xFF;
 15501  005026  6964               	setf	100,b	;volatile
 15502  005028                     
 15503                           ; BSR set to: 58
 15504                           ;mcc_generated_files/pin_manager.c: 127:     INLVLD = 0xFF;
 15505  005028  6974               	setf	116,b	;volatile
 15506                           
 15507                           ;mcc_generated_files/pin_manager.c: 128:     INLVLE = 0x0F;
 15508  00502A  0E0F               	movlw	15
 15509  00502C  6F84               	movwf	132,b	;volatile
 15510                           
 15511                           ;mcc_generated_files/pin_manager.c: 137:     CCP3PPS = 0x1F;
 15512  00502E  0E1F               	movlw	31
 15513  005030  6FCF               	movwf	207,b	;volatile
 15514                           
 15515                           ;mcc_generated_files/pin_manager.c: 138:     CLCIN3PPS = 0x09;
 15516  005032  0E09               	movlw	9
 15517  005034  6FDC               	movwf	220,b	;volatile
 15518                           
 15519                           ;mcc_generated_files/pin_manager.c: 139:     RA1PPS = 0x0E;
 15520  005036  0E0E               	movlw	14
 15521  005038  6F01               	movwf	1,b	;volatile
 15522                           
 15523                           ;mcc_generated_files/pin_manager.c: 140:     U1RXPPS = 0x0A;
 15524  00503A  0E0A               	movlw	10
 15525  00503C  6FE5               	movwf	229,b	;volatile
 15526                           
 15527                           ;mcc_generated_files/pin_manager.c: 141:     RA0PPS = 0x0D;
 15528  00503E  0E0D               	movlw	13
 15529  005040  6F00               	movwf	0,b	;volatile
 15530                           
 15531                           ;mcc_generated_files/pin_manager.c: 142:     T5GPPS = 0x1D;
 15532  005042  0E1D               	movlw	29
 15533  005044  6FC9               	movwf	201,b	;volatile
 15534                           
 15535                           ;mcc_generated_files/pin_manager.c: 143:     RA4PPS = 0x10;
 15536  005046  0E10               	movlw	16
 15537  005048  6F04               	movwf	4,b	;volatile
 15538                           
 15539                           ;mcc_generated_files/pin_manager.c: 144:     CLCIN0PPS = 0x07;
 15540  00504A  0E07               	movlw	7
 15541  00504C  6FD9               	movwf	217,b	;volatile
 15542                           
 15543                           ;mcc_generated_files/pin_manager.c: 145:     SMT1WINPPS = 0x09;
 15544  00504E  0E09               	movlw	9
 15545  005050  6FD1               	movwf	209,b	;volatile
 15546                           
 15547                           ;mcc_generated_files/pin_manager.c: 146:     RA3PPS = 0x0F;
 15548  005052  0E0F               	movlw	15
 15549  005054  6F03               	movwf	3,b	;volatile
 15550                           
 15551                           ;mcc_generated_files/pin_manager.c: 147:     RB3PPS = 0x13;
 15552  005056  0E13               	movlw	19
 15553  005058  6F0B               	movwf	11,b	;volatile
 15554                           
 15555                           ;mcc_generated_files/pin_manager.c: 148:     CLCIN2PPS = 0x08;
 15556  00505A  0E08               	movlw	8
 15557  00505C  6FDB               	movwf	219,b	;volatile
 15558                           
 15559                           ;mcc_generated_files/pin_manager.c: 149:     SMT1SIGPPS = 0x08;
 15560  00505E  0E08               	movlw	8
 15561  005060  6FD2               	movwf	210,b	;volatile
 15562                           
 15563                           ;mcc_generated_files/pin_manager.c: 150:     CCP4PPS = 0x1E;
 15564  005062  0E1E               	movlw	30
 15565  005064  6FD0               	movwf	208,b	;volatile
 15566  005066                     
 15567                           ; BSR set to: 58
 15568  005066  0012               	return		;funcret
 15569  005068                     __end_of_PIN_MANAGER_Initialize:
 15570                           	callstack 0
 15571                           
 15572 ;; *************** function _OSCILLATOR_Initialize *****************
 15573 ;; Defined at:
 15574 ;;		line 72 in file "mcc_generated_files/mcc.c"
 15575 ;; Parameters:    Size  Location     Type
 15576 ;;		None
 15577 ;; Auto vars:     Size  Location     Type
 15578 ;;		None
 15579 ;; Return value:  Size  Location     Type
 15580 ;;                  1    wreg      void 
 15581 ;; Registers used:
 15582 ;;		wreg, status,2
 15583 ;; Tracked objects:
 15584 ;;		On entry : 0/0
 15585 ;;		On exit  : 0/0
 15586 ;;		Unchanged: 0/0
 15587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15592 ;;Total ram usage:        0 bytes
 15593 ;; Hardware stack levels used: 1
 15594 ;; Hardware stack levels required when called: 8
 15595 ;; This function calls:
 15596 ;;		Nothing
 15597 ;; This function is called by:
 15598 ;;		_SYSTEM_Initialize
 15599 ;; This function uses a non-reentrant model
 15600 ;;
 15601                           
 15602                           	psect	text75
 15603  006292                     __ptext75:
 15604                           	callstack 0
 15605  006292                     _OSCILLATOR_Initialize:
 15606                           	callstack 21
 15607  006292                     
 15608                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x60;
 15609  006292  0E60               	movlw	96
 15610  006294  0139               	movlb	57	; () banked
 15611  006296  6FD9               	movwf	217,b	;volatile
 15612                           
 15613                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 15614  006298  0E00               	movlw	0
 15615  00629A  6FDB               	movwf	219,b	;volatile
 15616                           
 15617                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 15618  00629C  0E00               	movlw	0
 15619  00629E  6FDD               	movwf	221,b	;volatile
 15620                           
 15621                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x08;
 15622  0062A0  0E08               	movlw	8
 15623  0062A2  6FDF               	movwf	223,b	;volatile
 15624                           
 15625                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 15626  0062A4  0E00               	movlw	0
 15627  0062A6  6FDE               	movwf	222,b	;volatile
 15628  0062A8                     
 15629                           ; BSR set to: 57
 15630  0062A8  0012               	return		;funcret
 15631  0062AA                     __end_of_OSCILLATOR_Initialize:
 15632                           	callstack 0
 15633                           
 15634 ;; *************** function _INTERRUPT_Initialize *****************
 15635 ;; Defined at:
 15636 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 15637 ;; Parameters:    Size  Location     Type
 15638 ;;		None
 15639 ;; Auto vars:     Size  Location     Type
 15640 ;;  state           1   19[COMRAM] _Bool 
 15641 ;; Return value:  Size  Location     Type
 15642 ;;                  1    wreg      void 
 15643 ;; Registers used:
 15644 ;;		wreg, status,2
 15645 ;; Tracked objects:
 15646 ;;		On entry : 0/0
 15647 ;;		On exit  : 0/0
 15648 ;;		Unchanged: 0/0
 15649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15651 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15653 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15654 ;;Total ram usage:        1 bytes
 15655 ;; Hardware stack levels used: 1
 15656 ;; Hardware stack levels required when called: 8
 15657 ;; This function calls:
 15658 ;;		Nothing
 15659 ;; This function is called by:
 15660 ;;		_SYSTEM_Initialize
 15661 ;; This function uses a non-reentrant model
 15662 ;;
 15663                           
 15664                           	psect	text76
 15665  0059C4                     __ptext76:
 15666                           	callstack 0
 15667  0059C4                     _INTERRUPT_Initialize:
 15668                           	callstack 21
 15669  0059C4                     
 15670                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 15671  0059C4  8AD2               	bsf	210,5,c	;volatile
 15672  0059C6                     
 15673                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 15674  0059C6  0E00               	movlw	0
 15675  0059C8  BED2               	btfsc	16338,7,c	;volatile
 15676  0059CA  0E01               	movlw	1
 15677  0059CC  6E14               	movwf	INTERRUPT_Initialize@state^0,c
 15678  0059CE                     
 15679                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 15680  0059CE  9ED2               	bcf	16338,7,c	;volatile
 15681                           
 15682                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 15683  0059D0  0E55               	movlw	85
 15684  0059D2  6ED4               	movwf	212,c	;volatile
 15685                           
 15686                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 15687  0059D4  0EAA               	movlw	170
 15688  0059D6  6ED4               	movwf	212,c	;volatile
 15689  0059D8                     
 15690                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 15691  0059D8  90D4               	bcf	212,0,c	;volatile
 15692                           
 15693                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTBASEU = 0;
 15694  0059DA  0E00               	movlw	0
 15695  0059DC  6ED7               	movwf	215,c	;volatile
 15696                           
 15697                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTBASEH = 0;
 15698  0059DE  0E00               	movlw	0
 15699  0059E0  6ED6               	movwf	214,c	;volatile
 15700                           
 15701                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTBASEL = 8;
 15702  0059E2  0E08               	movlw	8
 15703  0059E4  6ED5               	movwf	213,c	;volatile
 15704                           
 15705                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 15706  0059E6  0E55               	movlw	85
 15707  0059E8  6ED4               	movwf	212,c	;volatile
 15708                           
 15709                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 15710  0059EA  0EAA               	movlw	170
 15711  0059EC  6ED4               	movwf	212,c	;volatile
 15712  0059EE                     
 15713                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 15714  0059EE  80D4               	bsf	212,0,c	;volatile
 15715  0059F0                     
 15716                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 15717  0059F0  B014               	btfsc	INTERRUPT_Initialize@state^0,0,c
 15718  0059F2  D002               	bra	u2985
 15719  0059F4  9ED2               	bcf	16338,7,c	;volatile
 15720  0059F6  D001               	bra	u2986
 15721  0059F8                     u2985:
 15722  0059F8  8ED2               	bsf	16338,7,c	;volatile
 15723  0059FA                     u2986:
 15724  0059FA                     
 15725                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR3bits.U1TXIP = 0;
 15726  0059FA  0139               	movlb	57	; () banked
 15727  0059FC  9983               	bcf	131,4,b	;volatile
 15728  0059FE                     
 15729                           ; BSR set to: 57
 15730                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR3bits.U1RXIP = 0;
 15731  0059FE  9783               	bcf	131,3,b	;volatile
 15732  005A00                     
 15733                           ; BSR set to: 57
 15734                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR1bits.SMT1PWAIP = 1;
 15735  005A00  8F81               	bsf	129,7,b	;volatile
 15736  005A02                     
 15737                           ; BSR set to: 57
 15738                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR1bits.SMT1IP = 1;
 15739  005A02  8B81               	bsf	129,5,b	;volatile
 15740  005A04                     
 15741                           ; BSR set to: 57
 15742                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR1bits.SMT1PRAIP = 1;
 15743  005A04  8D81               	bsf	129,6,b	;volatile
 15744  005A06                     
 15745                           ; BSR set to: 57
 15746                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR10bits.CCP4IP = 1;
 15747  005A06  818A               	bsf	138,0,b	;volatile
 15748  005A08                     
 15749                           ; BSR set to: 57
 15750                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR8bits.TMR5GIP = 1;
 15751  005A08  8F88               	bsf	136,7,b	;volatile
 15752  005A0A                     
 15753                           ; BSR set to: 57
 15754                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR7bits.TMR4IP = 0;
 15755  005A0A  9187               	bcf	135,0,b	;volatile
 15756  005A0C                     
 15757                           ; BSR set to: 57
 15758                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR9bits.CCP3IP = 1;
 15759  005A0C  8389               	bsf	137,1,b	;volatile
 15760  005A0E                     
 15761                           ; BSR set to: 57
 15762  005A0E  0012               	return		;funcret
 15763  005A10                     __end_of_INTERRUPT_Initialize:
 15764                           	callstack 0
 15765                           
 15766 ;; *************** function _CLC3_Initialize *****************
 15767 ;; Defined at:
 15768 ;;		line 58 in file "mcc_generated_files/clc3.c"
 15769 ;; Parameters:    Size  Location     Type
 15770 ;;		None
 15771 ;; Auto vars:     Size  Location     Type
 15772 ;;		None
 15773 ;; Return value:  Size  Location     Type
 15774 ;;                  1    wreg      void 
 15775 ;; Registers used:
 15776 ;;		wreg, status,2
 15777 ;; Tracked objects:
 15778 ;;		On entry : 0/0
 15779 ;;		On exit  : 0/0
 15780 ;;		Unchanged: 0/0
 15781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15786 ;;Total ram usage:        0 bytes
 15787 ;; Hardware stack levels used: 1
 15788 ;; Hardware stack levels required when called: 8
 15789 ;; This function calls:
 15790 ;;		Nothing
 15791 ;; This function is called by:
 15792 ;;		_SYSTEM_Initialize
 15793 ;; This function uses a non-reentrant model
 15794 ;;
 15795                           
 15796                           	psect	text77
 15797  0060BC                     __ptext77:
 15798                           	callstack 0
 15799  0060BC                     _CLC3_Initialize:
 15800                           	callstack 21
 15801  0060BC                     
 15802                           ;mcc_generated_files/clc3.c: 63:     CLC3POL = 0x00;
 15803  0060BC  0E00               	movlw	0
 15804  0060BE  013C               	movlb	60	; () banked
 15805  0060C0  6F61               	movwf	97,b	;volatile
 15806                           
 15807                           ;mcc_generated_files/clc3.c: 65:     CLC3SEL0 = 0x03;
 15808  0060C2  0E03               	movlw	3
 15809  0060C4  6F62               	movwf	98,b	;volatile
 15810                           
 15811                           ;mcc_generated_files/clc3.c: 67:     CLC3SEL1 = 0x02;
 15812  0060C6  0E02               	movlw	2
 15813  0060C8  6F63               	movwf	99,b	;volatile
 15814                           
 15815                           ;mcc_generated_files/clc3.c: 69:     CLC3SEL2 = 0x00;
 15816  0060CA  0E00               	movlw	0
 15817  0060CC  6F64               	movwf	100,b	;volatile
 15818                           
 15819                           ;mcc_generated_files/clc3.c: 71:     CLC3SEL3 = 0x00;
 15820  0060CE  0E00               	movlw	0
 15821  0060D0  6F65               	movwf	101,b	;volatile
 15822                           
 15823                           ;mcc_generated_files/clc3.c: 73:     CLC3GLS0 = 0x02;
 15824  0060D2  0E02               	movlw	2
 15825  0060D4  6F66               	movwf	102,b	;volatile
 15826                           
 15827                           ;mcc_generated_files/clc3.c: 75:     CLC3GLS1 = 0x08;
 15828  0060D6  0E08               	movlw	8
 15829  0060D8  6F67               	movwf	103,b	;volatile
 15830                           
 15831                           ;mcc_generated_files/clc3.c: 77:     CLC3GLS2 = 0x00;
 15832  0060DA  0E00               	movlw	0
 15833  0060DC  6F68               	movwf	104,b	;volatile
 15834                           
 15835                           ;mcc_generated_files/clc3.c: 79:     CLC3GLS3 = 0x00;
 15836  0060DE  0E00               	movlw	0
 15837  0060E0  6F69               	movwf	105,b	;volatile
 15838                           
 15839                           ;mcc_generated_files/clc3.c: 81:     CLC3CON = 0x85;
 15840  0060E2  0E85               	movlw	133
 15841  0060E4  6F60               	movwf	96,b	;volatile
 15842  0060E6                     
 15843                           ; BSR set to: 60
 15844  0060E6  0012               	return		;funcret
 15845  0060E8                     __end_of_CLC3_Initialize:
 15846                           	callstack 0
 15847                           
 15848 ;; *************** function _CCP4_Initialize *****************
 15849 ;; Defined at:
 15850 ;;		line 78 in file "mcc_generated_files/ccp4.c"
 15851 ;; Parameters:    Size  Location     Type
 15852 ;;		None
 15853 ;; Auto vars:     Size  Location     Type
 15854 ;;		None
 15855 ;; Return value:  Size  Location     Type
 15856 ;;                  1    wreg      void 
 15857 ;; Registers used:
 15858 ;;		wreg, status,2, status,0, cstack
 15859 ;; Tracked objects:
 15860 ;;		On entry : 0/0
 15861 ;;		On exit  : 0/0
 15862 ;;		Unchanged: 0/0
 15863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15868 ;;Total ram usage:        0 bytes
 15869 ;; Hardware stack levels used: 1
 15870 ;; Hardware stack levels required when called: 9
 15871 ;; This function calls:
 15872 ;;		_CCP4_SetCallBack
 15873 ;; This function is called by:
 15874 ;;		_SYSTEM_Initialize
 15875 ;; This function uses a non-reentrant model
 15876 ;;
 15877                           
 15878                           	psect	text78
 15879  006006                     __ptext78:
 15880                           	callstack 0
 15881  006006                     _CCP4_Initialize:
 15882                           	callstack 20
 15883  006006                     
 15884                           ;mcc_generated_files/ccp4.c: 83:  CCP4CON = 0x83;
 15885  006006  0E83               	movlw	131
 15886  006008  6E72               	movwf	114,c	;volatile
 15887                           
 15888                           ;mcc_generated_files/ccp4.c: 86:  CCP4CAP = 0x00;
 15889  00600A  0E00               	movlw	0
 15890  00600C  6E73               	movwf	115,c	;volatile
 15891                           
 15892                           ;mcc_generated_files/ccp4.c: 89:  CCPR4H = 0x00;
 15893  00600E  0E00               	movlw	0
 15894  006010  6E71               	movwf	113,c	;volatile
 15895                           
 15896                           ;mcc_generated_files/ccp4.c: 92:  CCPR4L = 0x00;
 15897  006012  0E00               	movlw	0
 15898  006014  6E70               	movwf	112,c	;volatile
 15899  006016                     
 15900                           ;mcc_generated_files/ccp4.c: 95:     CCP4_SetCallBack(CCP4_DefaultCallBack);
 15901  006016  0E02               	movlw	low _CCP4_DefaultCallBack
 15902  006018  6E14               	movwf	CCP4_SetCallBack@customCallBack^0,c
 15903  00601A  0E5E               	movlw	high _CCP4_DefaultCallBack
 15904  00601C  6E15               	movwf	(CCP4_SetCallBack@customCallBack+1)^0,c
 15905  00601E  EC8C  F031         	call	_CCP4_SetCallBack	;wreg free
 15906  006022                     
 15907                           ;mcc_generated_files/ccp4.c: 98:  CCPTMRS0bits.C4TSEL = 0x2;
 15908  006022  013F               	movlb	63	; () banked
 15909  006024  515E               	movf	94,w,b	;volatile
 15910  006026  0B3F               	andlw	-193
 15911  006028  0980               	iorlw	128
 15912  00602A  6F5E               	movwf	94,b	;volatile
 15913  00602C                     
 15914                           ; BSR set to: 63
 15915                           ;mcc_generated_files/ccp4.c: 101:     PIR10bits.CCP4IF = 0;
 15916  00602C  0139               	movlb	57	; () banked
 15917  00602E  91AA               	bcf	170,0,b	;volatile
 15918  006030                     
 15919                           ; BSR set to: 57
 15920                           ;mcc_generated_files/ccp4.c: 104:     PIE10bits.CCP4IE = 1;
 15921  006030  819A               	bsf	154,0,b	;volatile
 15922  006032                     
 15923                           ; BSR set to: 57
 15924  006032  0012               	return		;funcret
 15925  006034                     __end_of_CCP4_Initialize:
 15926                           	callstack 0
 15927                           
 15928 ;; *************** function _CCP4_SetCallBack *****************
 15929 ;; Defined at:
 15930 ;;		line 75 in file "mcc_generated_files/ccp4.c"
 15931 ;; Parameters:    Size  Location     Type
 15932 ;;  customCallBa    2   19[COMRAM] PTR FTN(unsigned short ,
 15933 ;;		 -> CCP4_DefaultCallBack(1), 
 15934 ;; Auto vars:     Size  Location     Type
 15935 ;;		None
 15936 ;; Return value:  Size  Location     Type
 15937 ;;                  1    wreg      void 
 15938 ;; Registers used:
 15939 ;;		wreg, status,2, status,0
 15940 ;; Tracked objects:
 15941 ;;		On entry : 0/0
 15942 ;;		On exit  : 0/0
 15943 ;;		Unchanged: 0/0
 15944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15945 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15948 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15949 ;;Total ram usage:        2 bytes
 15950 ;; Hardware stack levels used: 1
 15951 ;; Hardware stack levels required when called: 8
 15952 ;; This function calls:
 15953 ;;		Nothing
 15954 ;; This function is called by:
 15955 ;;		_CCP4_Initialize
 15956 ;; This function uses a non-reentrant model
 15957 ;;
 15958                           
 15959                           	psect	text79
 15960  006318                     __ptext79:
 15961                           	callstack 0
 15962  006318                     _CCP4_SetCallBack:
 15963                           	callstack 20
 15964  006318                     
 15965                           ;mcc_generated_files/ccp4.c: 76:     CCP4_CallBack = customCallBack;
 15966  006318  C014  F198         	movff	CCP4_SetCallBack@customCallBack,_CCP4_CallBack
 15967  00631C  C015  F199         	movff	CCP4_SetCallBack@customCallBack+1,_CCP4_CallBack+1
 15968  006320  0012               	return		;funcret
 15969  006322                     __end_of_CCP4_SetCallBack:
 15970                           	callstack 0
 15971                           
 15972 ;; *************** function _CCP3_Initialize *****************
 15973 ;; Defined at:
 15974 ;;		line 75 in file "mcc_generated_files/ccp3.c"
 15975 ;; Parameters:    Size  Location     Type
 15976 ;;		None
 15977 ;; Auto vars:     Size  Location     Type
 15978 ;;		None
 15979 ;; Return value:  Size  Location     Type
 15980 ;;                  1    wreg      void 
 15981 ;; Registers used:
 15982 ;;		wreg, status,2, status,0, cstack
 15983 ;; Tracked objects:
 15984 ;;		On entry : 0/0
 15985 ;;		On exit  : 0/0
 15986 ;;		Unchanged: 0/0
 15987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15992 ;;Total ram usage:        0 bytes
 15993 ;; Hardware stack levels used: 1
 15994 ;; Hardware stack levels required when called: 9
 15995 ;; This function calls:
 15996 ;;		_CCP3_SetCallBack
 15997 ;; This function is called by:
 15998 ;;		_SYSTEM_Initialize
 15999 ;; This function uses a non-reentrant model
 16000 ;;
 16001                           
 16002                           	psect	text80
 16003  006034                     __ptext80:
 16004                           	callstack 0
 16005  006034                     _CCP3_Initialize:
 16006                           	callstack 20
 16007  006034                     
 16008                           ;mcc_generated_files/ccp3.c: 80:  CCP3CON = 0x83;
 16009  006034  0E83               	movlw	131
 16010  006036  6E76               	movwf	118,c	;volatile
 16011                           
 16012                           ;mcc_generated_files/ccp3.c: 83:  CCP3CAP = 0x00;
 16013  006038  0E00               	movlw	0
 16014  00603A  6E77               	movwf	119,c	;volatile
 16015                           
 16016                           ;mcc_generated_files/ccp3.c: 86:  CCPR3H = 0x00;
 16017  00603C  0E00               	movlw	0
 16018  00603E  6E75               	movwf	117,c	;volatile
 16019                           
 16020                           ;mcc_generated_files/ccp3.c: 89:  CCPR3L = 0x00;
 16021  006040  0E00               	movlw	0
 16022  006042  6E74               	movwf	116,c	;volatile
 16023  006044                     
 16024                           ;mcc_generated_files/ccp3.c: 92:     CCP3_SetCallBack(CCP3_DefaultCallBack);
 16025  006044  0ECC               	movlw	low _CCP3_DefaultCallBack
 16026  006046  6E14               	movwf	CCP3_SetCallBack@customCallBack^0,c
 16027  006048  0E5D               	movlw	high _CCP3_DefaultCallBack
 16028  00604A  6E15               	movwf	(CCP3_SetCallBack@customCallBack+1)^0,c
 16029  00604C  EC91  F031         	call	_CCP3_SetCallBack	;wreg free
 16030  006050                     
 16031                           ;mcc_generated_files/ccp3.c: 95:  CCPTMRS0bits.C3TSEL = 0x2;
 16032  006050  013F               	movlb	63	; () banked
 16033  006052  515E               	movf	94,w,b	;volatile
 16034  006054  0BCF               	andlw	-49
 16035  006056  0920               	iorlw	32
 16036  006058  6F5E               	movwf	94,b	;volatile
 16037  00605A                     
 16038                           ; BSR set to: 63
 16039                           ;mcc_generated_files/ccp3.c: 98:     PIR9bits.CCP3IF = 0;
 16040  00605A  0139               	movlb	57	; () banked
 16041  00605C  93A9               	bcf	169,1,b	;volatile
 16042  00605E                     
 16043                           ; BSR set to: 57
 16044                           ;mcc_generated_files/ccp3.c: 101:     PIE9bits.CCP3IE = 1;
 16045  00605E  8399               	bsf	153,1,b	;volatile
 16046  006060                     
 16047                           ; BSR set to: 57
 16048  006060  0012               	return		;funcret
 16049  006062                     __end_of_CCP3_Initialize:
 16050                           	callstack 0
 16051                           
 16052 ;; *************** function _CCP3_SetCallBack *****************
 16053 ;; Defined at:
 16054 ;;		line 119 in file "mcc_generated_files/ccp3.c"
 16055 ;; Parameters:    Size  Location     Type
 16056 ;;  customCallBa    2   19[COMRAM] PTR FTN(unsigned short ,
 16057 ;;		 -> CCP3_DefaultCallBack(1), 
 16058 ;; Auto vars:     Size  Location     Type
 16059 ;;		None
 16060 ;; Return value:  Size  Location     Type
 16061 ;;                  1    wreg      void 
 16062 ;; Registers used:
 16063 ;;		wreg, status,2, status,0
 16064 ;; Tracked objects:
 16065 ;;		On entry : 0/0
 16066 ;;		On exit  : 0/0
 16067 ;;		Unchanged: 0/0
 16068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16069 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16072 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16073 ;;Total ram usage:        2 bytes
 16074 ;; Hardware stack levels used: 1
 16075 ;; Hardware stack levels required when called: 8
 16076 ;; This function calls:
 16077 ;;		Nothing
 16078 ;; This function is called by:
 16079 ;;		_CCP3_Initialize
 16080 ;; This function uses a non-reentrant model
 16081 ;;
 16082                           
 16083                           	psect	text81
 16084  006322                     __ptext81:
 16085                           	callstack 0
 16086  006322                     _CCP3_SetCallBack:
 16087                           	callstack 20
 16088  006322                     
 16089                           ;mcc_generated_files/ccp3.c: 120:     CCP3_CallBack = customCallBack;
 16090  006322  C014  F19A         	movff	CCP3_SetCallBack@customCallBack,_CCP3_CallBack
 16091  006326  C015  F19B         	movff	CCP3_SetCallBack@customCallBack+1,_CCP3_CallBack+1
 16092  00632A  0012               	return		;funcret
 16093  00632C                     __end_of_CCP3_SetCallBack:
 16094                           	callstack 0
 16095                           
 16096 ;; *************** function _ADCC_Initialize *****************
 16097 ;; Defined at:
 16098 ;;		line 62 in file "mcc_generated_files/adcc.c"
 16099 ;; Parameters:    Size  Location     Type
 16100 ;;		None
 16101 ;; Auto vars:     Size  Location     Type
 16102 ;;		None
 16103 ;; Return value:  Size  Location     Type
 16104 ;;                  1    wreg      void 
 16105 ;; Registers used:
 16106 ;;		wreg, status,2
 16107 ;; Tracked objects:
 16108 ;;		On entry : 0/0
 16109 ;;		On exit  : 0/0
 16110 ;;		Unchanged: 0/0
 16111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16116 ;;Total ram usage:        0 bytes
 16117 ;; Hardware stack levels used: 1
 16118 ;; Hardware stack levels required when called: 8
 16119 ;; This function calls:
 16120 ;;		Nothing
 16121 ;; This function is called by:
 16122 ;;		_SYSTEM_Initialize
 16123 ;; This function uses a non-reentrant model
 16124 ;;
 16125                           
 16126                           	psect	text82
 16127  005912                     __ptext82:
 16128                           	callstack 0
 16129  005912                     _ADCC_Initialize:
 16130                           	callstack 21
 16131  005912                     
 16132                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
 16133  005912  0E00               	movlw	0
 16134  005914  013E               	movlb	62	; () banked
 16135  005916  6FDE               	movwf	222,b	;volatile
 16136                           
 16137                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
 16138  005918  0E00               	movlw	0
 16139  00591A  6FDF               	movwf	223,b	;volatile
 16140                           
 16141                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
 16142  00591C  0E00               	movlw	0
 16143  00591E  6FE0               	movwf	224,b	;volatile
 16144                           
 16145                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
 16146  005920  0E00               	movlw	0
 16147  005922  6FE1               	movwf	225,b	;volatile
 16148                           
 16149                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
 16150  005924  0E00               	movlw	0
 16151  005926  6FE4               	movwf	228,b	;volatile
 16152                           
 16153                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
 16154  005928  0E00               	movlw	0
 16155  00592A  6FE5               	movwf	229,b	;volatile
 16156                           
 16157                           ;mcc_generated_files/adcc.c: 78:     ADACCU = 0x00;
 16158  00592C  0E00               	movlw	0
 16159  00592E  6FEA               	movwf	234,b	;volatile
 16160                           
 16161                           ;mcc_generated_files/adcc.c: 80:     ADRPT = 0x00;
 16162  005930  0E00               	movlw	0
 16163  005932  6FEC               	movwf	236,b	;volatile
 16164                           
 16165                           ;mcc_generated_files/adcc.c: 82:     ADPCH = 0x00;
 16166  005934  0E00               	movlw	0
 16167  005936  6FF1               	movwf	241,b	;volatile
 16168                           
 16169                           ;mcc_generated_files/adcc.c: 84:     ADACQL = 0x58;
 16170  005938  0E58               	movlw	88
 16171  00593A  6FF3               	movwf	243,b	;volatile
 16172                           
 16173                           ;mcc_generated_files/adcc.c: 86:     ADACQH = 0x02;
 16174  00593C  0E02               	movlw	2
 16175  00593E  6FF4               	movwf	244,b	;volatile
 16176                           
 16177                           ;mcc_generated_files/adcc.c: 88:     ADCAP = 0x00;
 16178  005940  0E00               	movlw	0
 16179  005942  6FF5               	movwf	245,b	;volatile
 16180                           
 16181                           ;mcc_generated_files/adcc.c: 90:     ADPREL = 0x00;
 16182  005944  0E00               	movlw	0
 16183  005946  6FF6               	movwf	246,b	;volatile
 16184                           
 16185                           ;mcc_generated_files/adcc.c: 92:     ADPREH = 0x00;
 16186  005948  0E00               	movlw	0
 16187  00594A  6FF7               	movwf	247,b	;volatile
 16188                           
 16189                           ;mcc_generated_files/adcc.c: 94:     ADCON1 = 0x00;
 16190  00594C  0E00               	movlw	0
 16191  00594E  6FF9               	movwf	249,b	;volatile
 16192                           
 16193                           ;mcc_generated_files/adcc.c: 96:     ADCON2 = 0x00;
 16194  005950  0E00               	movlw	0
 16195  005952  6FFA               	movwf	250,b	;volatile
 16196                           
 16197                           ;mcc_generated_files/adcc.c: 98:     ADCON3 = 0x00;
 16198  005954  0E00               	movlw	0
 16199  005956  6FFB               	movwf	251,b	;volatile
 16200                           
 16201                           ;mcc_generated_files/adcc.c: 100:     ADSTAT = 0x00;
 16202  005958  0E00               	movlw	0
 16203  00595A  6FFC               	movwf	252,b	;volatile
 16204                           
 16205                           ;mcc_generated_files/adcc.c: 102:     ADREF = 0x00;
 16206  00595C  0E00               	movlw	0
 16207  00595E  6FFD               	movwf	253,b	;volatile
 16208                           
 16209                           ;mcc_generated_files/adcc.c: 104:     ADACT = 0x00;
 16210  005960  0E00               	movlw	0
 16211  005962  6FFE               	movwf	254,b	;volatile
 16212                           
 16213                           ;mcc_generated_files/adcc.c: 106:     ADCLK = 0x1F;
 16214  005964  0E1F               	movlw	31
 16215  005966  6FFF               	movwf	255,b	;volatile
 16216                           
 16217                           ;mcc_generated_files/adcc.c: 108:     ADCON0 = 0x84;
 16218  005968  0E84               	movlw	132
 16219  00596A  6FF8               	movwf	248,b	;volatile
 16220  00596C                     
 16221                           ; BSR set to: 62
 16222  00596C  0012               	return		;funcret
 16223  00596E                     __end_of_ADCC_Initialize:
 16224                           	callstack 0
 16225                           
 16226 ;; *************** function _UART1_tx_vect_isr *****************
 16227 ;; Defined at:
 16228 ;;		line 235 in file "mcc_generated_files/uart1.c"
 16229 ;; Parameters:    Size  Location     Type
 16230 ;;		None
 16231 ;; Auto vars:     Size  Location     Type
 16232 ;;		None
 16233 ;; Return value:  Size  Location     Type
 16234 ;;                  1    wreg      void 
 16235 ;; Registers used:
 16236 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 16237 ;; Tracked objects:
 16238 ;;		On entry : 0/0
 16239 ;;		On exit  : 0/0
 16240 ;;		Unchanged: 0/0
 16241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16244 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16245 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16246 ;;Total ram usage:        1 bytes
 16247 ;; Hardware stack levels used: 1
 16248 ;; Hardware stack levels required when called: 5
 16249 ;; This function calls:
 16250 ;;		Absolute function
 16251 ;;		_UART1_Transmit_ISR
 16252 ;; This function is called by:
 16253 ;;		Interrupt level 1
 16254 ;; This function uses a non-reentrant model
 16255 ;;
 16256                           
 16257                           	psect	text83
 16258  005C78                     __ptext83:
 16259                           	callstack 0
 16260  005C78                     _UART1_tx_vect_isr:
 16261                           	callstack 14
 16262                           
 16263                           ; BSR set to: 62
 16264                           ;incstack = 0
 16265  005C78  006F FF60  F011    	movff	status,??_UART1_tx_vect_isr
 16266  005C7E                     
 16267                           ;mcc_generated_files/uart1.c: 237:     if(UART1_TxInterruptHandler)
 16268  005C7E  0101               	movlb	1	; () banked
 16269  005C80  51A2               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 16270  005C82  11A3               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 16271  005C84  B4D8               	btfsc	status,2,c
 16272  005C86  EF47  F02E         	goto	i1u739_21
 16273  005C8A  EF49  F02E         	goto	i1u739_20
 16274  005C8E                     i1u739_21:
 16275  005C8E  EF55  F02E         	goto	i1l324
 16276  005C92                     i1u739_20:
 16277  005C92                     
 16278                           ; BSR set to: 1
 16279                           ;mcc_generated_files/uart1.c: 238:     {;mcc_generated_files/uart1.c: 239:         UART1
      +                          _TxInterruptHandler();
 16280  005C92  D802               	call	i1u740_28
 16281  005C94  EF55  F02E         	goto	i1u740_29
 16282  005C98                     i1u740_28:
 16283  005C98  0005               	push	
 16284  005C9A  6EFA               	movwf	pclath,c
 16285  005C9C  51A2               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 16286  005C9E  6EFD               	movwf	tosl,c
 16287  005CA0  51A3               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 16288  005CA2  6EFE               	movwf	tosh,c
 16289  005CA4  6AFF               	clrf	tosu,c
 16290  005CA6  50FA               	movf	pclath,w,c
 16291  005CA8  0012               	return		;indir
 16292  005CAA                     i1u740_29:
 16293  005CAA                     i1l324:
 16294  005CAA  0060  F047  FFD8   	movff	??_UART1_tx_vect_isr,status
 16295  005CB0  0011               	retfie		f
 16296  005CB2                     __end_of_UART1_tx_vect_isr:
 16297                           	callstack 0
 16298                           
 16299 ;; *************** function _UART1_Transmit_ISR *****************
 16300 ;; Defined at:
 16301 ;;		line 253 in file "mcc_generated_files/uart1.c"
 16302 ;; Parameters:    Size  Location     Type
 16303 ;;		None
 16304 ;; Auto vars:     Size  Location     Type
 16305 ;;		None
 16306 ;; Return value:  Size  Location     Type
 16307 ;;                  1    wreg      void 
 16308 ;; Registers used:
 16309 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16310 ;; Tracked objects:
 16311 ;;		On entry : 0/0
 16312 ;;		On exit  : 0/0
 16313 ;;		Unchanged: 0/0
 16314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16319 ;;Total ram usage:        0 bytes
 16320 ;; Hardware stack levels used: 1
 16321 ;; Hardware stack levels required when called: 4
 16322 ;; This function calls:
 16323 ;;		Nothing
 16324 ;; This function is called by:
 16325 ;;		_UART1_Initialize
 16326 ;;		_UART1_tx_vect_isr
 16327 ;; This function uses a non-reentrant model
 16328 ;;
 16329                           
 16330                           	psect	text84
 16331  005B7A                     __ptext84:
 16332                           	callstack 0
 16333  005B7A                     _UART1_Transmit_ISR:
 16334                           	callstack 14
 16335  005B7A                     
 16336                           ;mcc_generated_files/uart1.c: 256:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
 16337  005B7A  0E08               	movlw	8
 16338  005B7C  604C               	cpfslt	_uart1TxBufferRemaining^0,c	;volatile
 16339  005B7E  EFC3  F02D         	goto	i1u720_21
 16340  005B82  EFC5  F02D         	goto	i1u720_20
 16341  005B86                     i1u720_21:
 16342  005B86  EFDC  F02D         	goto	i1l333
 16343  005B8A                     i1u720_20:
 16344  005B8A                     
 16345                           ;mcc_generated_files/uart1.c: 257:     {;mcc_generated_files/uart1.c: 258:         U1TXB
      +                           = uart1TxBuffer[uart1TxTail++];
 16346  005B8A  0E10               	movlw	low _uart1TxBuffer
 16347  005B8C  2446               	addwf	_uart1TxTail^0,w,c	;volatile
 16348  005B8E  6ED9               	movwf	fsr2l,c
 16349  005B90  6ADA               	clrf	fsr2h,c
 16350  005B92  0E01               	movlw	high _uart1TxBuffer
 16351  005B94  22DA               	addwfc	fsr2h,f,c
 16352  005B96  50DF               	movf	indf2,w,c
 16353  005B98  013D               	movlb	61	; () banked
 16354  005B9A  6FEA               	movwf	234,b	;volatile
 16355  005B9C                     
 16356                           ; BSR set to: 61
 16357  005B9C  2A46               	incf	_uart1TxTail^0,f,c	;volatile
 16358  005B9E                     
 16359                           ; BSR set to: 61
 16360                           ;mcc_generated_files/uart1.c: 259:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
 16361  005B9E  0E07               	movlw	7
 16362  005BA0  6446               	cpfsgt	_uart1TxTail^0,c	;volatile
 16363  005BA2  EFD5  F02D         	goto	i1u721_21
 16364  005BA6  EFD7  F02D         	goto	i1u721_20
 16365  005BAA                     i1u721_21:
 16366  005BAA  EFD9  F02D         	goto	i1l7303
 16367  005BAE                     i1u721_20:
 16368  005BAE                     
 16369                           ; BSR set to: 61
 16370                           ;mcc_generated_files/uart1.c: 260:         {;mcc_generated_files/uart1.c: 261:          
      +                             uart1TxTail = 0;
 16371  005BAE  0E00               	movlw	0
 16372  005BB0  6E46               	movwf	_uart1TxTail^0,c	;volatile
 16373  005BB2                     i1l7303:
 16374                           
 16375                           ; BSR set to: 61
 16376                           ;mcc_generated_files/uart1.c: 263:         uart1TxBufferRemaining++;
 16377  005BB2  2A4C               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 16378                           
 16379                           ;mcc_generated_files/uart1.c: 264:     }
 16380  005BB4  EFDE  F02D         	goto	i1l336
 16381  005BB8                     i1l333:
 16382                           
 16383                           ;mcc_generated_files/uart1.c: 266:     {;mcc_generated_files/uart1.c: 267:         PIE3b
      +                          its.U1TXIE = 0;
 16384  005BB8  0139               	movlb	57	; () banked
 16385  005BBA  9993               	bcf	147,4,b	;volatile
 16386  005BBC                     i1l336:
 16387  005BBC  0012               	return		;funcret
 16388  005BBE                     __end_of_UART1_Transmit_ISR:
 16389                           	callstack 0
 16390                           
 16391 ;; *************** function _UART1_rx_vect_isr *****************
 16392 ;; Defined at:
 16393 ;;		line 243 in file "mcc_generated_files/uart1.c"
 16394 ;; Parameters:    Size  Location     Type
 16395 ;;		None
 16396 ;; Auto vars:     Size  Location     Type
 16397 ;;		None
 16398 ;; Return value:  Size  Location     Type
 16399 ;;                  1    wreg      void 
 16400 ;; Registers used:
 16401 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 16402 ;; Tracked objects:
 16403 ;;		On entry : 0/0
 16404 ;;		On exit  : 0/0
 16405 ;;		Unchanged: 0/0
 16406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16409 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16410 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16411 ;;Total ram usage:        1 bytes
 16412 ;; Hardware stack levels used: 1
 16413 ;; Hardware stack levels required when called: 7
 16414 ;; This function calls:
 16415 ;;		Absolute function
 16416 ;;		_UART1_Receive_ISR
 16417 ;; This function is called by:
 16418 ;;		Interrupt level 1
 16419 ;; This function uses a non-reentrant model
 16420 ;;
 16421                           
 16422                           	psect	text85
 16423  005CB4                     __ptext85:
 16424                           	callstack 0
 16425  005CB4                     _UART1_rx_vect_isr:
 16426                           	callstack 12
 16427                           
 16428                           ;incstack = 0
 16429  005CB4  006F FF60  F012    	movff	status,??_UART1_rx_vect_isr
 16430  005CBA                     
 16431                           ;mcc_generated_files/uart1.c: 245:     if(UART1_RxInterruptHandler)
 16432  005CBA  0101               	movlb	1	; () banked
 16433  005CBC  51A4               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 16434  005CBE  11A5               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 16435  005CC0  B4D8               	btfsc	status,2,c
 16436  005CC2  EF65  F02E         	goto	i1u741_21
 16437  005CC6  EF67  F02E         	goto	i1u741_20
 16438  005CCA                     i1u741_21:
 16439  005CCA  EF73  F02E         	goto	i1l330
 16440  005CCE                     i1u741_20:
 16441  005CCE                     
 16442                           ; BSR set to: 1
 16443                           ;mcc_generated_files/uart1.c: 246:     {;mcc_generated_files/uart1.c: 247:         UART1
      +                          _RxInterruptHandler();
 16444  005CCE  D802               	call	i1u742_28
 16445  005CD0  EF73  F02E         	goto	i1u742_29
 16446  005CD4                     i1u742_28:
 16447  005CD4  0005               	push	
 16448  005CD6  6EFA               	movwf	pclath,c
 16449  005CD8  51A4               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 16450  005CDA  6EFD               	movwf	tosl,c
 16451  005CDC  51A5               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 16452  005CDE  6EFE               	movwf	tosh,c
 16453  005CE0  6AFF               	clrf	tosu,c
 16454  005CE2  50FA               	movf	pclath,w,c
 16455  005CE4  0012               	return		;indir
 16456  005CE6                     i1u742_29:
 16457  005CE6                     i1l330:
 16458  005CE6  0060  F04B  FFD8   	movff	??_UART1_rx_vect_isr,status
 16459  005CEC  0011               	retfie		f
 16460  005CEE                     __end_of_UART1_rx_vect_isr:
 16461                           	callstack 0
 16462                           
 16463 ;; *************** function _UART1_Receive_ISR *****************
 16464 ;; Defined at:
 16465 ;;		line 273 in file "mcc_generated_files/uart1.c"
 16466 ;; Parameters:    Size  Location     Type
 16467 ;;		None
 16468 ;; Auto vars:     Size  Location     Type
 16469 ;;		None
 16470 ;; Return value:  Size  Location     Type
 16471 ;;                  1    wreg      void 
 16472 ;; Registers used:
 16473 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 16474 ;; Tracked objects:
 16475 ;;		On entry : 0/0
 16476 ;;		On exit  : 0/0
 16477 ;;		Unchanged: 0/0
 16478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16483 ;;Total ram usage:        0 bytes
 16484 ;; Hardware stack levels used: 1
 16485 ;; Hardware stack levels required when called: 6
 16486 ;; This function calls:
 16487 ;;		Absolute function
 16488 ;;		_UART1_DefaultErrorHandler
 16489 ;;		_UART1_DefaultFramingErrorHandler
 16490 ;;		_UART1_DefaultOverrunErrorHandler
 16491 ;;		_UART1_RxDataHandler
 16492 ;; This function is called by:
 16493 ;;		_UART1_Initialize
 16494 ;;		_UART1_rx_vect_isr
 16495 ;; This function uses a non-reentrant model
 16496 ;;
 16497                           
 16498                           	psect	text86
 16499  0051EE                     __ptext86:
 16500                           	callstack 0
 16501  0051EE                     _UART1_Receive_ISR:
 16502                           	callstack 12
 16503  0051EE                     
 16504                           ;mcc_generated_files/uart1.c: 276:     uart1RxStatusBuffer[uart1RxHead].status = 0;
 16505  0051EE  0E00               	movlw	low _uart1RxStatusBuffer
 16506  0051F0  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 16507  0051F2  6ED9               	movwf	fsr2l,c
 16508  0051F4  6ADA               	clrf	fsr2h,c
 16509  0051F6  0E01               	movlw	high _uart1RxStatusBuffer
 16510  0051F8  22DA               	addwfc	fsr2h,f,c
 16511  0051FA  0E00               	movlw	0
 16512  0051FC  6EDF               	movwf	indf2,c
 16513  0051FE                     
 16514                           ;mcc_generated_files/uart1.c: 278:     if(U1ERRIRbits.FERIF){
 16515  0051FE  013D               	movlb	61	; () banked
 16516  005200  A7F9               	btfss	249,3,b	;volatile
 16517  005202  EF05  F029         	goto	i1u722_21
 16518  005206  EF07  F029         	goto	i1u722_20
 16519  00520A                     i1u722_21:
 16520  00520A  EF1B  F029         	goto	i1l7313
 16521  00520E                     i1u722_20:
 16522  00520E                     
 16523                           ; BSR set to: 61
 16524                           ;mcc_generated_files/uart1.c: 279:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
 16525  00520E  0E00               	movlw	low _uart1RxStatusBuffer
 16526  005210  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 16527  005212  6ED9               	movwf	fsr2l,c
 16528  005214  6ADA               	clrf	fsr2h,c
 16529  005216  0E01               	movlw	high _uart1RxStatusBuffer
 16530  005218  22DA               	addwfc	fsr2h,f,c
 16531  00521A  0101               	movlb	1	; () banked
 16532  00521C  82DF               	bsf	indf2,1,c
 16533  00521E                     
 16534                           ; BSR set to: 1
 16535                           ;mcc_generated_files/uart1.c: 280:         UART1_FramingErrorHandler();
 16536  00521E  D802               	call	i1u723_28
 16537  005220  EF1B  F029         	goto	i1u723_29
 16538  005224                     i1u723_28:
 16539  005224  0005               	push	
 16540  005226  6EFA               	movwf	pclath,c
 16541  005228  51A0               	movf	_UART1_FramingErrorHandler& (0+255),w,b
 16542  00522A  6EFD               	movwf	tosl,c
 16543  00522C  51A1               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
 16544  00522E  6EFE               	movwf	tosh,c
 16545  005230  6AFF               	clrf	tosu,c
 16546  005232  50FA               	movf	pclath,w,c
 16547  005234  0012               	return		;indir
 16548  005236                     i1u723_29:
 16549  005236                     i1l7313:
 16550                           
 16551                           ;mcc_generated_files/uart1.c: 283:     if(U1ERRIRbits.RXFOIF){
 16552  005236  013D               	movlb	61	; () banked
 16553  005238  A3F9               	btfss	249,1,b	;volatile
 16554  00523A  EF21  F029         	goto	i1u724_21
 16555  00523E  EF23  F029         	goto	i1u724_20
 16556  005242                     i1u724_21:
 16557  005242  EF37  F029         	goto	i1l7319
 16558  005246                     i1u724_20:
 16559  005246                     
 16560                           ; BSR set to: 61
 16561                           ;mcc_generated_files/uart1.c: 284:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
 16562  005246  0E00               	movlw	low _uart1RxStatusBuffer
 16563  005248  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 16564  00524A  6ED9               	movwf	fsr2l,c
 16565  00524C  6ADA               	clrf	fsr2h,c
 16566  00524E  0E01               	movlw	high _uart1RxStatusBuffer
 16567  005250  22DA               	addwfc	fsr2h,f,c
 16568  005252  0101               	movlb	1	; () banked
 16569  005254  84DF               	bsf	indf2,2,c
 16570  005256                     
 16571                           ; BSR set to: 1
 16572                           ;mcc_generated_files/uart1.c: 285:         UART1_OverrunErrorHandler();
 16573  005256  D802               	call	i1u725_28
 16574  005258  EF37  F029         	goto	i1u725_29
 16575  00525C                     i1u725_28:
 16576  00525C  0005               	push	
 16577  00525E  6EFA               	movwf	pclath,c
 16578  005260  519E               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
 16579  005262  6EFD               	movwf	tosl,c
 16580  005264  519F               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
 16581  005266  6EFE               	movwf	tosh,c
 16582  005268  6AFF               	clrf	tosu,c
 16583  00526A  50FA               	movf	pclath,w,c
 16584  00526C  0012               	return		;indir
 16585  00526E                     i1u725_29:
 16586  00526E                     i1l7319:
 16587                           
 16588                           ;mcc_generated_files/uart1.c: 288:     if(uart1RxStatusBuffer[uart1RxHead].status){
 16589  00526E  0E00               	movlw	low _uart1RxStatusBuffer
 16590  005270  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 16591  005272  6ED9               	movwf	fsr2l,c
 16592  005274  6ADA               	clrf	fsr2h,c
 16593  005276  0E01               	movlw	high _uart1RxStatusBuffer
 16594  005278  22DA               	addwfc	fsr2h,f,c
 16595  00527A  50DF               	movf	indf2,w,c
 16596  00527C  B4D8               	btfsc	status,2,c
 16597  00527E  EF43  F029         	goto	i1u726_21
 16598  005282  EF45  F029         	goto	i1u726_20
 16599  005286                     i1u726_21:
 16600  005286  EF54  F029         	goto	i1l7323
 16601  00528A                     i1u726_20:
 16602  00528A                     
 16603                           ;mcc_generated_files/uart1.c: 289:         UART1_ErrorHandler();
 16604  00528A  D802               	call	i1u727_28
 16605  00528C  EF52  F029         	goto	i1u727_29
 16606  005290                     i1u727_28:
 16607  005290  0005               	push	
 16608  005292  6EFA               	movwf	pclath,c
 16609  005294  0101               	movlb	1	; () banked
 16610  005296  519C               	movf	_UART1_ErrorHandler& (0+255),w,b
 16611  005298  6EFD               	movwf	tosl,c
 16612  00529A  519D               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
 16613  00529C  6EFE               	movwf	tosh,c
 16614  00529E  6AFF               	clrf	tosu,c
 16615  0052A0  50FA               	movf	pclath,w,c
 16616  0052A2  0012               	return		;indir
 16617  0052A4                     i1u727_29:
 16618                           
 16619                           ;mcc_generated_files/uart1.c: 290:     } else {
 16620  0052A4  EF56  F029         	goto	i1l343
 16621  0052A8                     i1l7323:
 16622                           
 16623                           ;mcc_generated_files/uart1.c: 291:         UART1_RxDataHandler();
 16624  0052A8  EC74  F030         	call	_UART1_RxDataHandler	;wreg free
 16625  0052AC                     i1l343:
 16626  0052AC  0012               	return		;funcret
 16627  0052AE                     __end_of_UART1_Receive_ISR:
 16628                           	callstack 0
 16629                           
 16630 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
 16631 ;; Defined at:
 16632 ;;		line 309 in file "mcc_generated_files/uart1.c"
 16633 ;; Parameters:    Size  Location     Type
 16634 ;;		None
 16635 ;; Auto vars:     Size  Location     Type
 16636 ;;		None
 16637 ;; Return value:  Size  Location     Type
 16638 ;;                  1    wreg      void 
 16639 ;; Registers used:
 16640 ;;		None
 16641 ;; Tracked objects:
 16642 ;;		On entry : 0/0
 16643 ;;		On exit  : 0/0
 16644 ;;		Unchanged: 0/0
 16645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16650 ;;Total ram usage:        0 bytes
 16651 ;; Hardware stack levels used: 1
 16652 ;; Hardware stack levels required when called: 4
 16653 ;; This function calls:
 16654 ;;		Nothing
 16655 ;; This function is called by:
 16656 ;;		_UART1_Initialize
 16657 ;;		_UART1_Receive_ISR
 16658 ;; This function uses a non-reentrant model
 16659 ;;
 16660                           
 16661                           	psect	text87
 16662  00633C                     __ptext87:
 16663                           	callstack 0
 16664  00633C                     _UART1_DefaultOverrunErrorHandler:
 16665                           	callstack 13
 16666  00633C  0012               	return		;funcret
 16667  00633E                     __end_of_UART1_DefaultOverrunErrorHandler:
 16668                           	callstack 0
 16669                           
 16670 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
 16671 ;; Defined at:
 16672 ;;		line 307 in file "mcc_generated_files/uart1.c"
 16673 ;; Parameters:    Size  Location     Type
 16674 ;;		None
 16675 ;; Auto vars:     Size  Location     Type
 16676 ;;		None
 16677 ;; Return value:  Size  Location     Type
 16678 ;;                  1    wreg      void 
 16679 ;; Registers used:
 16680 ;;		None
 16681 ;; Tracked objects:
 16682 ;;		On entry : 0/0
 16683 ;;		On exit  : 0/0
 16684 ;;		Unchanged: 0/0
 16685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16690 ;;Total ram usage:        0 bytes
 16691 ;; Hardware stack levels used: 1
 16692 ;; Hardware stack levels required when called: 4
 16693 ;; This function calls:
 16694 ;;		Nothing
 16695 ;; This function is called by:
 16696 ;;		_UART1_Initialize
 16697 ;;		_UART1_Receive_ISR
 16698 ;; This function uses a non-reentrant model
 16699 ;;
 16700                           
 16701                           	psect	text88
 16702  00633E                     __ptext88:
 16703                           	callstack 0
 16704  00633E                     _UART1_DefaultFramingErrorHandler:
 16705                           	callstack 13
 16706  00633E  0012               	return		;funcret
 16707  006340                     __end_of_UART1_DefaultFramingErrorHandler:
 16708                           	callstack 0
 16709                           
 16710 ;; *************** function _UART1_DefaultErrorHandler *****************
 16711 ;; Defined at:
 16712 ;;		line 311 in file "mcc_generated_files/uart1.c"
 16713 ;; Parameters:    Size  Location     Type
 16714 ;;		None
 16715 ;; Auto vars:     Size  Location     Type
 16716 ;;		None
 16717 ;; Return value:  Size  Location     Type
 16718 ;;                  1    wreg      void 
 16719 ;; Registers used:
 16720 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16721 ;; Tracked objects:
 16722 ;;		On entry : 0/0
 16723 ;;		On exit  : 0/0
 16724 ;;		Unchanged: 0/0
 16725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16729 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16730 ;;Total ram usage:        0 bytes
 16731 ;; Hardware stack levels used: 1
 16732 ;; Hardware stack levels required when called: 5
 16733 ;; This function calls:
 16734 ;;		_UART1_RxDataHandler
 16735 ;; This function is called by:
 16736 ;;		_UART1_Initialize
 16737 ;;		_UART1_Receive_ISR
 16738 ;; This function uses a non-reentrant model
 16739 ;;
 16740                           
 16741                           	psect	text89
 16742  006336                     __ptext89:
 16743                           	callstack 0
 16744  006336                     _UART1_DefaultErrorHandler:
 16745                           	callstack 12
 16746  006336                     
 16747                           ;mcc_generated_files/uart1.c: 312:     UART1_RxDataHandler();
 16748  006336  EC74  F030         	call	_UART1_RxDataHandler	;wreg free
 16749  00633A  0012               	return		;funcret
 16750  00633C                     __end_of_UART1_DefaultErrorHandler:
 16751                           	callstack 0
 16752                           
 16753 ;; *************** function _UART1_RxDataHandler *****************
 16754 ;; Defined at:
 16755 ;;		line 297 in file "mcc_generated_files/uart1.c"
 16756 ;; Parameters:    Size  Location     Type
 16757 ;;		None
 16758 ;; Auto vars:     Size  Location     Type
 16759 ;;		None
 16760 ;; Return value:  Size  Location     Type
 16761 ;;                  1    wreg      void 
 16762 ;; Registers used:
 16763 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16764 ;; Tracked objects:
 16765 ;;		On entry : 0/0
 16766 ;;		On exit  : 0/0
 16767 ;;		Unchanged: 0/0
 16768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16773 ;;Total ram usage:        0 bytes
 16774 ;; Hardware stack levels used: 1
 16775 ;; Hardware stack levels required when called: 4
 16776 ;; This function calls:
 16777 ;;		Nothing
 16778 ;; This function is called by:
 16779 ;;		_UART1_Receive_ISR
 16780 ;;		_UART1_DefaultErrorHandler
 16781 ;; This function uses a non-reentrant model
 16782 ;;
 16783                           
 16784                           	psect	text90
 16785  0060E8                     __ptext90:
 16786                           	callstack 0
 16787  0060E8                     _UART1_RxDataHandler:
 16788                           	callstack 13
 16789  0060E8                     
 16790                           ;mcc_generated_files/uart1.c: 299:     uart1RxBuffer[uart1RxHead++] = U1RXB;
 16791  0060E8  0E08               	movlw	low _uart1RxBuffer
 16792  0060EA  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 16793  0060EC  6ED9               	movwf	fsr2l,c
 16794  0060EE  6ADA               	clrf	fsr2h,c
 16795  0060F0  0E01               	movlw	high _uart1RxBuffer
 16796  0060F2  22DA               	addwfc	fsr2h,f,c
 16797  0060F4  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 16798  0060FA  2A45               	incf	_uart1RxHead^0,f,c	;volatile
 16799  0060FC                     
 16800                           ;mcc_generated_files/uart1.c: 300:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 16801  0060FC  0E07               	movlw	7
 16802  0060FE  6445               	cpfsgt	_uart1RxHead^0,c	;volatile
 16803  006100  EF84  F030         	goto	i1u659_21
 16804  006104  EF86  F030         	goto	i1u659_20
 16805  006108                     i1u659_21:
 16806  006108  EF88  F030         	goto	i1l6697
 16807  00610C                     i1u659_20:
 16808  00610C                     
 16809                           ;mcc_generated_files/uart1.c: 301:     {;mcc_generated_files/uart1.c: 302:         uart1
      +                          RxHead = 0;
 16810  00610C  0E00               	movlw	0
 16811  00610E  6E45               	movwf	_uart1RxHead^0,c	;volatile
 16812  006110                     i1l6697:
 16813                           
 16814                           ;mcc_generated_files/uart1.c: 304:     uart1RxCount++;
 16815  006110  2A43               	incf	_uart1RxCount^0,f,c	;volatile
 16816  006112  0012               	return		;funcret
 16817  006114                     __end_of_UART1_RxDataHandler:
 16818                           	callstack 0
 16819                           
 16820 ;; *************** function _TMR4_ISR *****************
 16821 ;; Defined at:
 16822 ;;		line 166 in file "mcc_generated_files/tmr4.c"
 16823 ;; Parameters:    Size  Location     Type
 16824 ;;		None
 16825 ;; Auto vars:     Size  Location     Type
 16826 ;;		None
 16827 ;; Return value:  Size  Location     Type
 16828 ;;                  1    wreg      void 
 16829 ;; Registers used:
 16830 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 16831 ;; Tracked objects:
 16832 ;;		On entry : 0/0
 16833 ;;		On exit  : 0/0
 16834 ;;		Unchanged: 0/0
 16835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16838 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16839 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16840 ;;Total ram usage:        1 bytes
 16841 ;; Hardware stack levels used: 1
 16842 ;; Hardware stack levels required when called: 6
 16843 ;; This function calls:
 16844 ;;		_TMR4_CallBack
 16845 ;; This function is called by:
 16846 ;;		Interrupt level 1
 16847 ;; This function uses a non-reentrant model
 16848 ;;
 16849                           
 16850                           	psect	text91
 16851  005C00                     __ptext91:
 16852                           	callstack 0
 16853  005C00                     _TMR4_ISR:
 16854                           	callstack 13
 16855                           
 16856                           ;incstack = 0
 16857  005C00  006F FF60  F013    	movff	status,??_TMR4_ISR
 16858  005C06                     
 16859                           ;mcc_generated_files/tmr4.c: 168:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr4.c: 171:     PIR7bits.TMR4IF = 0;
 16860  005C06  0139               	movlb	57	; () banked
 16861  005C08  91A7               	bcf	167,0,b	;volatile
 16862  005C0A                     
 16863                           ; BSR set to: 57
 16864                           ;mcc_generated_files/tmr4.c: 174:     if (++CountCallBack >= 10)
 16865  005C0A  0100               	movlb	0	; () banked
 16866  005C0C  4BF3               	infsnz	TMR4_ISR@CountCallBack& (0+255),f,b	;volatile
 16867  005C0E  2BF4               	incf	(TMR4_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 16868  005C10  51F4               	movf	(TMR4_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 16869  005C12  E109               	bnz	i1u747_20
 16870  005C14  0E0A               	movlw	10
 16871  005C16  5DF3               	subwf	TMR4_ISR@CountCallBack& (0+255),w,b	;volatile
 16872  005C18  A0D8               	btfss	status,0,c
 16873  005C1A  EF11  F02E         	goto	i1u747_21
 16874  005C1E  EF13  F02E         	goto	i1u747_20
 16875  005C22                     i1u747_21:
 16876  005C22  EF1A  F02E         	goto	i1l688
 16877  005C26                     i1u747_20:
 16878  005C26                     
 16879                           ; BSR set to: 0
 16880                           ;mcc_generated_files/tmr4.c: 175:     {;mcc_generated_files/tmr4.c: 177:         TMR4_Ca
      +                          llBack();
 16881  005C26  EC31  F030         	call	_TMR4_CallBack	;wreg free
 16882  005C2A                     
 16883                           ;mcc_generated_files/tmr4.c: 180:         CountCallBack = 0;
 16884  005C2A  0E00               	movlw	0
 16885  005C2C  0100               	movlb	0	; () banked
 16886  005C2E  6FF4               	movwf	(TMR4_ISR@CountCallBack+1)& (0+255),b	;volatile
 16887  005C30  0E00               	movlw	0
 16888  005C32  6FF3               	movwf	TMR4_ISR@CountCallBack& (0+255),b	;volatile
 16889  005C34                     i1l688:
 16890                           
 16891                           ; BSR set to: 0
 16892  005C34  0060  F04F  FFD8   	movff	??_TMR4_ISR,status
 16893  005C3A  0011               	retfie		f
 16894  005C3C                     __end_of_TMR4_ISR:
 16895                           	callstack 0
 16896                           
 16897 ;; *************** function _TMR4_CallBack *****************
 16898 ;; Defined at:
 16899 ;;		line 184 in file "mcc_generated_files/tmr4.c"
 16900 ;; Parameters:    Size  Location     Type
 16901 ;;		None
 16902 ;; Auto vars:     Size  Location     Type
 16903 ;;		None
 16904 ;; Return value:  Size  Location     Type
 16905 ;;                  1    wreg      void 
 16906 ;; Registers used:
 16907 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 16908 ;; Tracked objects:
 16909 ;;		On entry : 0/0
 16910 ;;		On exit  : 0/0
 16911 ;;		Unchanged: 0/0
 16912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16917 ;;Total ram usage:        0 bytes
 16918 ;; Hardware stack levels used: 1
 16919 ;; Hardware stack levels required when called: 5
 16920 ;; This function calls:
 16921 ;;		Absolute function
 16922 ;;		_TMR4_10msISR
 16923 ;;		_TMR4_DefaultInterruptHandler
 16924 ;; This function is called by:
 16925 ;;		_TMR4_ISR
 16926 ;; This function uses a non-reentrant model
 16927 ;;
 16928                           
 16929                           	psect	text92
 16930  006062                     __ptext92:
 16931                           	callstack 0
 16932  006062                     _TMR4_CallBack:
 16933                           	callstack 13
 16934  006062                     
 16935                           ;mcc_generated_files/tmr4.c: 188:     if(TMR4_InterruptHandler)
 16936  006062  0101               	movlb	1	; () banked
 16937  006064  5190               	movf	_TMR4_InterruptHandler& (0+255),w,b
 16938  006066  1191               	iorwf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 16939  006068  B4D8               	btfsc	status,2,c
 16940  00606A  EF39  F030         	goto	i1u731_21
 16941  00606E  EF3B  F030         	goto	i1u731_20
 16942  006072                     i1u731_21:
 16943  006072  EF47  F030         	goto	i1l692
 16944  006076                     i1u731_20:
 16945  006076                     
 16946                           ; BSR set to: 1
 16947                           ;mcc_generated_files/tmr4.c: 189:     {;mcc_generated_files/tmr4.c: 190:         TMR4_In
      +                          terruptHandler();
 16948  006076  D802               	call	i1u732_28
 16949  006078  EF47  F030         	goto	i1u732_29
 16950  00607C                     i1u732_28:
 16951  00607C  0005               	push	
 16952  00607E  6EFA               	movwf	pclath,c
 16953  006080  5190               	movf	_TMR4_InterruptHandler& (0+255),w,b
 16954  006082  6EFD               	movwf	tosl,c
 16955  006084  5191               	movf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 16956  006086  6EFE               	movwf	tosh,c
 16957  006088  6AFF               	clrf	tosu,c
 16958  00608A  50FA               	movf	pclath,w,c
 16959  00608C  0012               	return		;indir
 16960  00608E                     i1u732_29:
 16961  00608E                     i1l692:
 16962  00608E  0012               	return		;funcret
 16963  006090                     __end_of_TMR4_CallBack:
 16964                           	callstack 0
 16965                           
 16966 ;; *************** function _TMR4_10msISR *****************
 16967 ;; Defined at:
 16968 ;;		line 68 in file "main.c"
 16969 ;; Parameters:    Size  Location     Type
 16970 ;;		None
 16971 ;; Auto vars:     Size  Location     Type
 16972 ;;		None
 16973 ;; Return value:  Size  Location     Type
 16974 ;;                  1    wreg      void 
 16975 ;; Registers used:
 16976 ;;		status,2, status,0
 16977 ;; Tracked objects:
 16978 ;;		On entry : 0/0
 16979 ;;		On exit  : 0/0
 16980 ;;		Unchanged: 0/0
 16981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16986 ;;Total ram usage:        0 bytes
 16987 ;; Hardware stack levels used: 1
 16988 ;; Hardware stack levels required when called: 4
 16989 ;; This function calls:
 16990 ;;		Nothing
 16991 ;; This function is called by:
 16992 ;;		_main
 16993 ;;		_TMR4_CallBack
 16994 ;; This function uses a non-reentrant model
 16995 ;;
 16996                           
 16997                           	psect	text93
 16998  00632C                     __ptext93:
 16999                           	callstack 0
 17000  00632C                     _TMR4_10msISR:
 17001                           	callstack 13
 17002  00632C                     
 17003                           ;main.c: 69:     ++cycle10ms;
 17004  00632C  0100               	movlb	0	; () banked
 17005  00632E  2BFB               	incf	_cycle10ms& (0+255),f,b	;volatile
 17006                           
 17007                           ;main.c: 70:     ++roundTimeCount;
 17008  006330  4BF1               	infsnz	_roundTimeCount& (0+255),f,b	;volatile
 17009  006332  2BF2               	incf	(_roundTimeCount+1)& (0+255),f,b	;volatile
 17010  006334                     
 17011                           ; BSR set to: 0
 17012  006334  0012               	return		;funcret
 17013  006336                     __end_of_TMR4_10msISR:
 17014                           	callstack 0
 17015                           
 17016 ;; *************** function _TMR4_DefaultInterruptHandler *****************
 17017 ;; Defined at:
 17018 ;;		line 198 in file "mcc_generated_files/tmr4.c"
 17019 ;; Parameters:    Size  Location     Type
 17020 ;;		None
 17021 ;; Auto vars:     Size  Location     Type
 17022 ;;		None
 17023 ;; Return value:  Size  Location     Type
 17024 ;;                  1    wreg      void 
 17025 ;; Registers used:
 17026 ;;		None
 17027 ;; Tracked objects:
 17028 ;;		On entry : 0/0
 17029 ;;		On exit  : 0/0
 17030 ;;		Unchanged: 0/0
 17031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17036 ;;Total ram usage:        0 bytes
 17037 ;; Hardware stack levels used: 1
 17038 ;; Hardware stack levels required when called: 4
 17039 ;; This function calls:
 17040 ;;		Nothing
 17041 ;; This function is called by:
 17042 ;;		_TMR4_Initialize
 17043 ;;		_TMR4_CallBack
 17044 ;; This function uses a non-reentrant model
 17045 ;;
 17046                           
 17047                           	psect	text94
 17048  006340                     __ptext94:
 17049                           	callstack 0
 17050  006340                     _TMR4_DefaultInterruptHandler:
 17051                           	callstack 13
 17052  006340  0012               	return		;funcret
 17053  006342                     __end_of_TMR4_DefaultInterruptHandler:
 17054                           	callstack 0
 17055                           
 17056 ;; *************** function _Default_ISR *****************
 17057 ;; Defined at:
 17058 ;;		line 83 in file "mcc_generated_files/interrupt_manager.c"
 17059 ;; Parameters:    Size  Location     Type
 17060 ;;		None
 17061 ;; Auto vars:     Size  Location     Type
 17062 ;;		None
 17063 ;; Return value:  Size  Location     Type
 17064 ;;                  1    wreg      void 
 17065 ;; Registers used:
 17066 ;;		None
 17067 ;; Tracked objects:
 17068 ;;		On entry : 0/0
 17069 ;;		On exit  : 0/0
 17070 ;;		Unchanged: 0/0
 17071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17076 ;;Total ram usage:        0 bytes
 17077 ;; Hardware stack levels used: 1
 17078 ;; This function calls:
 17079 ;;		Nothing
 17080 ;; This function is called by:
 17081 ;;		Interrupt level 2
 17082 ;; This function uses a non-reentrant model
 17083 ;;
 17084                           
 17085                           	psect	text95
 17086  006344                     __ptext95:
 17087                           	callstack 0
 17088  006344                     _Default_ISR:
 17089                           	callstack 15
 17090  006344  0011               	retfie		f
 17091  006346                     __end_of_Default_ISR:
 17092                           	callstack 0
 17093                           
 17094 ;; *************** function _CCP3_CaptureISR *****************
 17095 ;; Defined at:
 17096 ;;		line 104 in file "mcc_generated_files/ccp3.c"
 17097 ;; Parameters:    Size  Location     Type
 17098 ;;		None
 17099 ;; Auto vars:     Size  Location     Type
 17100 ;;  module          2    2[COMRAM] struct CCPR3Reg_tag
 17101 ;; Return value:  Size  Location     Type
 17102 ;;                  1    wreg      void 
 17103 ;; Registers used:
 17104 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 17105 ;; Tracked objects:
 17106 ;;		On entry : 0/0
 17107 ;;		On exit  : 0/0
 17108 ;;		Unchanged: 0/0
 17109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17111 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17113 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17114 ;;Total ram usage:        2 bytes
 17115 ;; Hardware stack levels used: 1
 17116 ;; Hardware stack levels required when called: 1
 17117 ;; This function calls:
 17118 ;;		Absolute function
 17119 ;;		_CCP3_DefaultCallBack
 17120 ;; This function is called by:
 17121 ;;		Interrupt level 2
 17122 ;; This function uses a non-reentrant model
 17123 ;;
 17124                           
 17125                           	psect	text96
 17126  005F08                     __ptext96:
 17127                           	callstack 0
 17128  005F08                     _CCP3_CaptureISR:
 17129                           	callstack 14
 17130  005F08                     
 17131                           ;mcc_generated_files/ccp3.c: 106:     CCP3_PERIOD_REG_T module;;mcc_generated_files/ccp3
      +                          .c: 109:     PIR9bits.CCP3IF = 0;
 17132  005F08  0139               	movlb	57	; () banked
 17133  005F0A  93A9               	bcf	169,1,b	;volatile
 17134                           
 17135                           ;mcc_generated_files/ccp3.c: 112:     module.ccpr3l = CCPR3L;
 17136  005F0C  006F FDD0  F003    	movff	16244,CCP3_CaptureISR@module	;volatile
 17137                           
 17138                           ;mcc_generated_files/ccp3.c: 113:     module.ccpr3h = CCPR3H;
 17139  005F12  006F FDD4  F004    	movff	16245,CCP3_CaptureISR@module+1	;volatile
 17140  005F18                     
 17141                           ; BSR set to: 57
 17142                           ;mcc_generated_files/ccp3.c: 116:     CCP3_CallBack(module.ccpr3_16Bit);
 17143  005F18  C003  F001         	movff	CCP3_CaptureISR@module,CCP3_DefaultCallBack@capturedValue
 17144  005F1C  C004  F002         	movff	CCP3_CaptureISR@module+1,CCP3_DefaultCallBack@capturedValue+1
 17145  005F20  D802               	call	i2u743_48
 17146  005F22  EF9D  F02F         	goto	i2u743_49
 17147  005F26                     i2u743_48:
 17148  005F26  0005               	push	
 17149  005F28  6EFA               	movwf	pclath,c
 17150  005F2A  0101               	movlb	1	; () banked
 17151  005F2C  519A               	movf	_CCP3_CallBack& (0+255),w,b
 17152  005F2E  6EFD               	movwf	tosl,c
 17153  005F30  519B               	movf	(_CCP3_CallBack+1)& (0+255),w,b
 17154  005F32  6EFE               	movwf	tosh,c
 17155  005F34  6AFF               	clrf	tosu,c
 17156  005F36  50FA               	movf	pclath,w,c
 17157  005F38  0012               	return		;indir
 17158  005F3A                     i2u743_49:
 17159  005F3A  0011               	retfie		f
 17160  005F3C                     __end_of_CCP3_CaptureISR:
 17161                           	callstack 0
 17162                           
 17163 ;; *************** function _CCP3_DefaultCallBack *****************
 17164 ;; Defined at:
 17165 ;;		line 64 in file "mcc_generated_files/ccp3.c"
 17166 ;; Parameters:    Size  Location     Type
 17167 ;;  capturedValu    2    0[COMRAM] unsigned short 
 17168 ;; Auto vars:     Size  Location     Type
 17169 ;;		None
 17170 ;; Return value:  Size  Location     Type
 17171 ;;                  1    wreg      void 
 17172 ;; Registers used:
 17173 ;;		wreg, status,2, status,0
 17174 ;; Tracked objects:
 17175 ;;		On entry : 0/0
 17176 ;;		On exit  : 0/0
 17177 ;;		Unchanged: 0/0
 17178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17179 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17182 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17183 ;;Total ram usage:        2 bytes
 17184 ;; Hardware stack levels used: 1
 17185 ;; This function calls:
 17186 ;;		Nothing
 17187 ;; This function is called by:
 17188 ;;		_CCP3_Initialize
 17189 ;;		_CCP3_CaptureISR
 17190 ;; This function uses a non-reentrant model
 17191 ;;
 17192                           
 17193                           	psect	text97
 17194  005DCC                     __ptext97:
 17195                           	callstack 0
 17196  005DCC                     _CCP3_DefaultCallBack:
 17197                           	callstack 14
 17198  005DCC                     
 17199                           ;mcc_generated_files/ccp3.c: 64: static void CCP3_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp3.c: 65: {;mcc_generated_files/ccp3.c: 67:     if(PORTDbits.RD7
      +                          ) {
 17200  005DCC  AECD               	btfss	205,7,c	;volatile
 17201  005DCE  EFEB  F02E         	goto	i2u728_41
 17202  005DD2  EFED  F02E         	goto	i2u728_40
 17203  005DD6                     i2u728_41:
 17204  005DD6  EFF3  F02E         	goto	i2l7329
 17205  005DDA                     i2u728_40:
 17206  005DDA                     
 17207                           ;mcc_generated_files/ccp3.c: 68:         distLeftM = capturedValue;
 17208  005DDA  C001  F13E         	movff	CCP3_DefaultCallBack@capturedValue,_distLeftM
 17209  005DDE  C002  F13F         	movff	CCP3_DefaultCallBack@capturedValue+1,_distLeftM+1
 17210                           
 17211                           ;mcc_generated_files/ccp3.c: 69:     } else {
 17212  005DE2  EF00  F02F         	goto	i2l438
 17213  005DE6                     i2l7329:
 17214                           
 17215                           ;mcc_generated_files/ccp3.c: 70:         distLeft = capturedValue - distLeftM;
 17216  005DE6  0101               	movlb	1	; () banked
 17217  005DE8  513E               	movf	_distLeftM& (0+255),w,b
 17218  005DEA  5C01               	subwf	CCP3_DefaultCallBack@capturedValue^0,w,c
 17219  005DEC  0100               	movlb	0	; () banked
 17220  005DEE  6FF7               	movwf	_distLeft& (0+255),b	;volatile
 17221  005DF0  0101               	movlb	1	; () banked
 17222  005DF2  513F               	movf	(_distLeftM+1)& (0+255),w,b
 17223  005DF4  5802               	subwfb	(CCP3_DefaultCallBack@capturedValue+1)^0,w,c
 17224  005DF6  0100               	movlb	0	; () banked
 17225  005DF8  6FF8               	movwf	(_distLeft+1)& (0+255),b	;volatile
 17226  005DFA                     
 17227                           ; BSR set to: 0
 17228                           ;mcc_generated_files/ccp3.c: 71:         distLeft >>= 1;
 17229  005DFA  90D8               	bcf	status,0,c
 17230  005DFC  33F8               	rrcf	(_distLeft+1)& (0+255),f,b	;volatile
 17231  005DFE  33F7               	rrcf	_distLeft& (0+255),f,b	;volatile
 17232  005E00                     i2l438:
 17233  005E00  0012               	return		;funcret
 17234  005E02                     __end_of_CCP3_DefaultCallBack:
 17235                           	callstack 0
 17236                           
 17237 ;; *************** function _CCP4_CaptureISR *****************
 17238 ;; Defined at:
 17239 ;;		line 107 in file "mcc_generated_files/ccp4.c"
 17240 ;; Parameters:    Size  Location     Type
 17241 ;;		None
 17242 ;; Auto vars:     Size  Location     Type
 17243 ;;  module          2    6[COMRAM] struct CCPR4Reg_tag
 17244 ;; Return value:  Size  Location     Type
 17245 ;;                  1    wreg      void 
 17246 ;; Registers used:
 17247 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 17248 ;; Tracked objects:
 17249 ;;		On entry : 0/0
 17250 ;;		On exit  : 0/0
 17251 ;;		Unchanged: 0/0
 17252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17254 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17256 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17257 ;;Total ram usage:        2 bytes
 17258 ;; Hardware stack levels used: 1
 17259 ;; Hardware stack levels required when called: 1
 17260 ;; This function calls:
 17261 ;;		Absolute function
 17262 ;;		_CCP4_DefaultCallBack
 17263 ;; This function is called by:
 17264 ;;		Interrupt level 2
 17265 ;; This function uses a non-reentrant model
 17266 ;;
 17267                           
 17268                           	psect	text98
 17269  005F3C                     __ptext98:
 17270                           	callstack 0
 17271  005F3C                     _CCP4_CaptureISR:
 17272                           	callstack 14
 17273  005F3C                     
 17274                           ;mcc_generated_files/ccp4.c: 109:     CCP4_PERIOD_REG_T module;;mcc_generated_files/ccp4
      +                          .c: 112:     PIR10bits.CCP4IF = 0;
 17275  005F3C  0139               	movlb	57	; () banked
 17276  005F3E  91AA               	bcf	170,0,b	;volatile
 17277                           
 17278                           ;mcc_generated_files/ccp4.c: 115:     module.ccpr4l = CCPR4L;
 17279  005F40  006F FDC0  F007    	movff	16240,CCP4_CaptureISR@module	;volatile
 17280                           
 17281                           ;mcc_generated_files/ccp4.c: 116:     module.ccpr4h = CCPR4H;
 17282  005F46  006F FDC4  F008    	movff	16241,CCP4_CaptureISR@module+1	;volatile
 17283  005F4C                     
 17284                           ; BSR set to: 57
 17285                           ;mcc_generated_files/ccp4.c: 119:     CCP4_CallBack(module.ccpr4_16Bit);
 17286  005F4C  C007  F005         	movff	CCP4_CaptureISR@module,CCP4_DefaultCallBack@capturedValue
 17287  005F50  C008  F006         	movff	CCP4_CaptureISR@module+1,CCP4_DefaultCallBack@capturedValue+1
 17288  005F54  D802               	call	i2u744_48
 17289  005F56  EFB7  F02F         	goto	i2u744_49
 17290  005F5A                     i2u744_48:
 17291  005F5A  0005               	push	
 17292  005F5C  6EFA               	movwf	pclath,c
 17293  005F5E  0101               	movlb	1	; () banked
 17294  005F60  5198               	movf	_CCP4_CallBack& (0+255),w,b
 17295  005F62  6EFD               	movwf	tosl,c
 17296  005F64  5199               	movf	(_CCP4_CallBack+1)& (0+255),w,b
 17297  005F66  6EFE               	movwf	tosh,c
 17298  005F68  6AFF               	clrf	tosu,c
 17299  005F6A  50FA               	movf	pclath,w,c
 17300  005F6C  0012               	return		;indir
 17301  005F6E                     i2u744_49:
 17302  005F6E  0011               	retfie		f
 17303  005F70                     __end_of_CCP4_CaptureISR:
 17304                           	callstack 0
 17305                           
 17306 ;; *************** function _CCP4_DefaultCallBack *****************
 17307 ;; Defined at:
 17308 ;;		line 64 in file "mcc_generated_files/ccp4.c"
 17309 ;; Parameters:    Size  Location     Type
 17310 ;;  capturedValu    2    4[COMRAM] unsigned short 
 17311 ;; Auto vars:     Size  Location     Type
 17312 ;;		None
 17313 ;; Return value:  Size  Location     Type
 17314 ;;                  1    wreg      void 
 17315 ;; Registers used:
 17316 ;;		wreg, status,2, status,0
 17317 ;; Tracked objects:
 17318 ;;		On entry : 0/0
 17319 ;;		On exit  : 0/0
 17320 ;;		Unchanged: 0/0
 17321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17322 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17325 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17326 ;;Total ram usage:        2 bytes
 17327 ;; Hardware stack levels used: 1
 17328 ;; This function calls:
 17329 ;;		Nothing
 17330 ;; This function is called by:
 17331 ;;		_CCP4_Initialize
 17332 ;;		_CCP4_CaptureISR
 17333 ;; This function uses a non-reentrant model
 17334 ;;
 17335                           
 17336                           	psect	text99
 17337  005E02                     __ptext99:
 17338                           	callstack 0
 17339  005E02                     _CCP4_DefaultCallBack:
 17340                           	callstack 14
 17341  005E02                     
 17342                           ;mcc_generated_files/ccp4.c: 64: static void CCP4_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp4.c: 65: {;mcc_generated_files/ccp4.c: 67:     if(PORTDbits.RD6
      +                          ) {
 17343  005E02  ACCD               	btfss	205,6,c	;volatile
 17344  005E04  EF06  F02F         	goto	i2u729_41
 17345  005E08  EF08  F02F         	goto	i2u729_40
 17346  005E0C                     i2u729_41:
 17347  005E0C  EF0E  F02F         	goto	i2l7337
 17348  005E10                     i2u729_40:
 17349  005E10                     
 17350                           ;mcc_generated_files/ccp4.c: 68:         distRightM = capturedValue;
 17351  005E10  C005  F13C         	movff	CCP4_DefaultCallBack@capturedValue,_distRightM
 17352  005E14  C006  F13D         	movff	CCP4_DefaultCallBack@capturedValue+1,_distRightM+1
 17353                           
 17354                           ;mcc_generated_files/ccp4.c: 70:     } else {
 17355  005E18  EF1B  F02F         	goto	i2l476
 17356  005E1C                     i2l7337:
 17357                           
 17358                           ;mcc_generated_files/ccp4.c: 71:         distRight = capturedValue - distRightM;
 17359  005E1C  0101               	movlb	1	; () banked
 17360  005E1E  513C               	movf	_distRightM& (0+255),w,b
 17361  005E20  5C05               	subwf	CCP4_DefaultCallBack@capturedValue^0,w,c
 17362  005E22  0100               	movlb	0	; () banked
 17363  005E24  6FF5               	movwf	_distRight& (0+255),b	;volatile
 17364  005E26  0101               	movlb	1	; () banked
 17365  005E28  513D               	movf	(_distRightM+1)& (0+255),w,b
 17366  005E2A  5806               	subwfb	(CCP4_DefaultCallBack@capturedValue+1)^0,w,c
 17367  005E2C  0100               	movlb	0	; () banked
 17368  005E2E  6FF6               	movwf	(_distRight+1)& (0+255),b	;volatile
 17369  005E30                     
 17370                           ; BSR set to: 0
 17371                           ;mcc_generated_files/ccp4.c: 72:         distRight >>= 1;
 17372  005E30  90D8               	bcf	status,0,c
 17373  005E32  33F6               	rrcf	(_distRight+1)& (0+255),f,b	;volatile
 17374  005E34  33F5               	rrcf	_distRight& (0+255),f,b	;volatile
 17375  005E36                     i2l476:
 17376  005E36  0012               	return		;funcret
 17377  005E38                     __end_of_CCP4_DefaultCallBack:
 17378                           	callstack 0
 17379                           
 17380 ;; *************** function _TMR5_GATE_ISR *****************
 17381 ;; Defined at:
 17382 ;;		line 175 in file "mcc_generated_files/tmr5.c"
 17383 ;; Parameters:    Size  Location     Type
 17384 ;;		None
 17385 ;; Auto vars:     Size  Location     Type
 17386 ;;		None
 17387 ;; Return value:  Size  Location     Type
 17388 ;;                  1    wreg      void 
 17389 ;; Registers used:
 17390 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 17391 ;; Tracked objects:
 17392 ;;		On entry : 0/0
 17393 ;;		On exit  : 0/0
 17394 ;;		Unchanged: 0/0
 17395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17400 ;;Total ram usage:        0 bytes
 17401 ;; Hardware stack levels used: 1
 17402 ;; Hardware stack levels required when called: 3
 17403 ;; This function calls:
 17404 ;;		Absolute function
 17405 ;;		_TMR5_DefaultGateInterruptHandler
 17406 ;; This function is called by:
 17407 ;;		Interrupt level 2
 17408 ;; This function uses a non-reentrant model
 17409 ;;
 17410                           
 17411                           	psect	text100
 17412  005FA4                     __ptext100:
 17413                           	callstack 0
 17414  005FA4                     _TMR5_GATE_ISR:
 17415                           	callstack 12
 17416  005FA4                     
 17417                           ;mcc_generated_files/tmr5.c: 178:     PIR8bits.TMR5GIF = 0;
 17418  005FA4  0139               	movlb	57	; () banked
 17419  005FA6  9FA8               	bcf	168,7,b	;volatile
 17420  005FA8                     
 17421                           ; BSR set to: 57
 17422                           ;mcc_generated_files/tmr5.c: 180:     if(TMR5_GateInterruptHandler)
 17423  005FA8  0101               	movlb	1	; () banked
 17424  005FAA  5194               	movf	_TMR5_GateInterruptHandler& (0+255),w,b
 17425  005FAC  1195               	iorwf	(_TMR5_GateInterruptHandler+1)& (0+255),w,b
 17426  005FAE  B4D8               	btfsc	status,2,c
 17427  005FB0  EFDC  F02F         	goto	i2u745_41
 17428  005FB4  EFDE  F02F         	goto	i2u745_40
 17429  005FB8                     i2u745_41:
 17430  005FB8  EFEA  F02F         	goto	i2l552
 17431  005FBC                     i2u745_40:
 17432  005FBC                     
 17433                           ; BSR set to: 1
 17434                           ;mcc_generated_files/tmr5.c: 181:     {;mcc_generated_files/tmr5.c: 182:         TMR5_Ga
      +                          teInterruptHandler();
 17435  005FBC  D802               	call	i2u746_48
 17436  005FBE  EFEA  F02F         	goto	i2u746_49
 17437  005FC2                     i2u746_48:
 17438  005FC2  0005               	push	
 17439  005FC4  6EFA               	movwf	pclath,c
 17440  005FC6  5194               	movf	_TMR5_GateInterruptHandler& (0+255),w,b
 17441  005FC8  6EFD               	movwf	tosl,c
 17442  005FCA  5195               	movf	(_TMR5_GateInterruptHandler+1)& (0+255),w,b
 17443  005FCC  6EFE               	movwf	tosh,c
 17444  005FCE  6AFF               	clrf	tosu,c
 17445  005FD0  50FA               	movf	pclath,w,c
 17446  005FD2  0012               	return		;indir
 17447  005FD4                     i2u746_49:
 17448  005FD4                     i2l552:
 17449  005FD4  0011               	retfie		f
 17450  005FD6                     __end_of_TMR5_GATE_ISR:
 17451                           	callstack 0
 17452                           
 17453 ;; *************** function _TMR5_DefaultGateInterruptHandler *****************
 17454 ;; Defined at:
 17455 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 17456 ;; Parameters:    Size  Location     Type
 17457 ;;		None
 17458 ;; Auto vars:     Size  Location     Type
 17459 ;;		None
 17460 ;; Return value:  Size  Location     Type
 17461 ;;                  1    wreg      void 
 17462 ;; Registers used:
 17463 ;;		wreg, status,2, status,0, cstack
 17464 ;; Tracked objects:
 17465 ;;		On entry : 0/0
 17466 ;;		On exit  : 0/0
 17467 ;;		Unchanged: 0/0
 17468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17473 ;;Total ram usage:        0 bytes
 17474 ;; Hardware stack levels used: 1
 17475 ;; Hardware stack levels required when called: 2
 17476 ;; This function calls:
 17477 ;;		_TMR5_ReadTimer
 17478 ;;		_TMR5_Reload
 17479 ;; This function is called by:
 17480 ;;		_TMR5_Initialize
 17481 ;;		_TMR5_GATE_ISR
 17482 ;; This function uses a non-reentrant model
 17483 ;;
 17484                           
 17485                           	psect	text101
 17486  0061F8                     __ptext101:
 17487                           	callstack 0
 17488  0061F8                     _TMR5_DefaultGateInterruptHandler:
 17489                           	callstack 12
 17490  0061F8                     
 17491                           ;mcc_generated_files/tmr5.c: 194:     distFront = TMR5_ReadTimer();
 17492  0061F8  ECDA  F030         	call	_TMR5_ReadTimer	;wreg free
 17493  0061FC  C009  F0FD         	movff	?_TMR5_ReadTimer,_distFront	;volatile
 17494  006200  C00A  F0FE         	movff	?_TMR5_ReadTimer+1,_distFront+1	;volatile
 17495  006204                     
 17496                           ;mcc_generated_files/tmr5.c: 195:     distFront >>= 1;
 17497  006204  0100               	movlb	0	; () banked
 17498  006206  90D8               	bcf	status,0,c
 17499  006208  33FE               	rrcf	(_distFront+1)& (0+255),f,b	;volatile
 17500  00620A  33FD               	rrcf	_distFront& (0+255),f,b	;volatile
 17501  00620C                     
 17502                           ; BSR set to: 0
 17503                           ;mcc_generated_files/tmr5.c: 196:     TMR5_Reload();
 17504  00620C  EC5D  F031         	call	_TMR5_Reload	;wreg free
 17505  006210                     
 17506                           ;mcc_generated_files/tmr5.c: 197:     PIR8bits.TMR5GIF = 0;
 17507  006210  0139               	movlb	57	; () banked
 17508  006212  9FA8               	bcf	168,7,b	;volatile
 17509  006214                     
 17510                           ; BSR set to: 57
 17511  006214  0012               	return		;funcret
 17512  006216                     __end_of_TMR5_DefaultGateInterruptHandler:
 17513                           	callstack 0
 17514                           
 17515 ;; *************** function _TMR5_Reload *****************
 17516 ;; Defined at:
 17517 ;;		line 155 in file "mcc_generated_files/tmr5.c"
 17518 ;; Parameters:    Size  Location     Type
 17519 ;;		None
 17520 ;; Auto vars:     Size  Location     Type
 17521 ;;		None
 17522 ;; Return value:  Size  Location     Type
 17523 ;;                  1    wreg      void 
 17524 ;; Registers used:
 17525 ;;		wreg, status,2, cstack
 17526 ;; Tracked objects:
 17527 ;;		On entry : 0/0
 17528 ;;		On exit  : 0/0
 17529 ;;		Unchanged: 0/0
 17530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17535 ;;Total ram usage:        0 bytes
 17536 ;; Hardware stack levels used: 1
 17537 ;; Hardware stack levels required when called: 1
 17538 ;; This function calls:
 17539 ;;		_TMR5_WriteTimer
 17540 ;; This function is called by:
 17541 ;;		_TMR5_DefaultGateInterruptHandler
 17542 ;; This function uses a non-reentrant model
 17543 ;;
 17544                           
 17545                           	psect	text102
 17546  0062BA                     __ptext102:
 17547                           	callstack 0
 17548  0062BA                     _TMR5_Reload:
 17549                           	callstack 12
 17550  0062BA                     
 17551                           ;mcc_generated_files/tmr5.c: 157:     TMR5_WriteTimer(timer5ReloadVal);
 17552  0062BA  C196  F009         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 17553  0062BE  C197  F00A         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 17554  0062C2  EC8A  F030         	call	_TMR5_WriteTimer	;wreg free
 17555  0062C6  0012               	return		;funcret
 17556  0062C8                     __end_of_TMR5_Reload:
 17557                           	callstack 0
 17558                           
 17559 ;; *************** function _TMR5_WriteTimer *****************
 17560 ;; Defined at:
 17561 ;;		line 133 in file "mcc_generated_files/tmr5.c"
 17562 ;; Parameters:    Size  Location     Type
 17563 ;;  timerVal        2    8[COMRAM] unsigned short 
 17564 ;; Auto vars:     Size  Location     Type
 17565 ;;		None
 17566 ;; Return value:  Size  Location     Type
 17567 ;;                  1    wreg      void 
 17568 ;; Registers used:
 17569 ;;		wreg, status,2
 17570 ;; Tracked objects:
 17571 ;;		On entry : 0/0
 17572 ;;		On exit  : 0/0
 17573 ;;		Unchanged: 0/0
 17574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17575 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17578 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17579 ;;Total ram usage:        2 bytes
 17580 ;; Hardware stack levels used: 1
 17581 ;; This function calls:
 17582 ;;		Nothing
 17583 ;; This function is called by:
 17584 ;;		_TMR5_Reload
 17585 ;; This function uses a non-reentrant model
 17586 ;;
 17587                           
 17588                           	psect	text103
 17589  006114                     __ptext103:
 17590                           	callstack 0
 17591  006114                     _TMR5_WriteTimer:
 17592                           	callstack 12
 17593  006114                     
 17594                           ;mcc_generated_files/tmr5.c: 133: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 134: {;mcc_generated_files/tmr5.c: 135:     if (T5CONbits.NOT_SYNC == 1)
 17595  006114  A49A               	btfss	154,2,c	;volatile
 17596  006116  EF8F  F030         	goto	i2u660_41
 17597  00611A  EF91  F030         	goto	i2u660_40
 17598  00611E                     i2u660_41:
 17599  00611E  EF9A  F030         	goto	i2l6715
 17600  006122                     i2u660_40:
 17601  006122                     
 17602                           ;mcc_generated_files/tmr5.c: 136:     {;mcc_generated_files/tmr5.c: 138:         T5CONbi
      +                          ts.TMR5ON = 0;
 17603  006122  909A               	bcf	154,0,c	;volatile
 17604  006124                     
 17605                           ;mcc_generated_files/tmr5.c: 141:         TMR5H = (uint8_t)(timerVal >> 8);
 17606  006124  500A               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
 17607  006126  6E99               	movwf	153,c	;volatile
 17608  006128                     
 17609                           ;mcc_generated_files/tmr5.c: 142:         TMR5L = (uint8_t)timerVal;
 17610  006128  0060  F027  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 17611  00612E                     
 17612                           ;mcc_generated_files/tmr5.c: 145:         T5CONbits.TMR5ON =1;
 17613  00612E  809A               	bsf	154,0,c	;volatile
 17614                           
 17615                           ;mcc_generated_files/tmr5.c: 146:     }
 17616  006130  EF9F  F030         	goto	i2l534
 17617  006134                     i2l6715:
 17618                           
 17619                           ;mcc_generated_files/tmr5.c: 148:     {;mcc_generated_files/tmr5.c: 150:         TMR5H =
      +                           (uint8_t)(timerVal >> 8);
 17620  006134  500A               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
 17621  006136  6E99               	movwf	153,c	;volatile
 17622  006138                     
 17623                           ;mcc_generated_files/tmr5.c: 151:         TMR5L = (uint8_t)timerVal;
 17624  006138  0060  F027  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 17625  00613E                     i2l534:
 17626  00613E  0012               	return		;funcret
 17627  006140                     __end_of_TMR5_WriteTimer:
 17628                           	callstack 0
 17629                           
 17630 ;; *************** function _TMR5_ReadTimer *****************
 17631 ;; Defined at:
 17632 ;;		line 117 in file "mcc_generated_files/tmr5.c"
 17633 ;; Parameters:    Size  Location     Type
 17634 ;;		None
 17635 ;; Auto vars:     Size  Location     Type
 17636 ;;  readVal         2   12[COMRAM] unsigned short 
 17637 ;;  readValLow      1   15[COMRAM] unsigned char 
 17638 ;;  readValHigh     1   14[COMRAM] unsigned char 
 17639 ;; Return value:  Size  Location     Type
 17640 ;;                  2    8[COMRAM] unsigned short 
 17641 ;; Registers used:
 17642 ;;		wreg, status,2
 17643 ;; Tracked objects:
 17644 ;;		On entry : 0/0
 17645 ;;		On exit  : 0/0
 17646 ;;		Unchanged: 0/0
 17647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17648 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17649 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17650 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17651 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17652 ;;Total ram usage:        8 bytes
 17653 ;; Hardware stack levels used: 1
 17654 ;; This function calls:
 17655 ;;		Nothing
 17656 ;; This function is called by:
 17657 ;;		_TMR5_DefaultGateInterruptHandler
 17658 ;; This function uses a non-reentrant model
 17659 ;;
 17660                           
 17661                           	psect	text104
 17662  0061B4                     __ptext104:
 17663                           	callstack 0
 17664  0061B4                     _TMR5_ReadTimer:
 17665                           	callstack 13
 17666  0061B4                     
 17667                           ;mcc_generated_files/tmr5.c: 119:     uint16_t readVal;;mcc_generated_files/tmr5.c: 120:
      +                               uint8_t readValHigh;;mcc_generated_files/tmr5.c: 121:     uint8_t readValLow;;mcc_g
      +                          enerated_files/tmr5.c: 123:     T5CONbits.T5RD16 = 1;
 17668  0061B4  829A               	bsf	154,1,c	;volatile
 17669                           
 17670                           ;mcc_generated_files/tmr5.c: 125:     readValLow = TMR5L;
 17671  0061B6  006F FE60  F010    	movff	16280,TMR5_ReadTimer@readValLow	;volatile
 17672                           
 17673                           ;mcc_generated_files/tmr5.c: 126:     readValHigh = TMR5H;
 17674  0061BC  006F FE64  F00F    	movff	16281,TMR5_ReadTimer@readValHigh	;volatile
 17675  0061C2                     
 17676                           ;mcc_generated_files/tmr5.c: 128:     readVal = ((uint16_t)readValHigh << 8) | readValLo
      +                          w;
 17677  0061C2  500F               	movf	TMR5_ReadTimer@readValHigh^0,w,c
 17678  0061C4  6E0B               	movwf	??_TMR5_ReadTimer^0,c
 17679  0061C6  5010               	movf	TMR5_ReadTimer@readValLow^0,w,c
 17680  0061C8  6E0D               	movwf	TMR5_ReadTimer@readVal^0,c
 17681  0061CA  C00B  F00E         	movff	??_TMR5_ReadTimer,TMR5_ReadTimer@readVal+1
 17682  0061CE                     
 17683                           ;mcc_generated_files/tmr5.c: 130:     return readVal;
 17684  0061CE  C00D  F009         	movff	TMR5_ReadTimer@readVal,?_TMR5_ReadTimer
 17685  0061D2  C00E  F00A         	movff	TMR5_ReadTimer@readVal+1,?_TMR5_ReadTimer+1
 17686  0061D6  0012               	return		;funcret
 17687  0061D8                     __end_of_TMR5_ReadTimer:
 17688                           	callstack 0
 17689                           
 17690 ;; *************** function _SMT1_PR_ACQ_ISR *****************
 17691 ;; Defined at:
 17692 ;;		line 192 in file "mcc_generated_files/smt1.c"
 17693 ;; Parameters:    Size  Location     Type
 17694 ;;		None
 17695 ;; Auto vars:     Size  Location     Type
 17696 ;;		None
 17697 ;; Return value:  Size  Location     Type
 17698 ;;                  1    wreg      void 
 17699 ;; Registers used:
 17700 ;;		wreg, status,2, status,0
 17701 ;; Tracked objects:
 17702 ;;		On entry : 0/0
 17703 ;;		On exit  : 0/0
 17704 ;;		Unchanged: 0/0
 17705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17710 ;;Total ram usage:        0 bytes
 17711 ;; Hardware stack levels used: 1
 17712 ;; This function calls:
 17713 ;;		Nothing
 17714 ;; This function is called by:
 17715 ;;		Interrupt level 2
 17716 ;; This function uses a non-reentrant model
 17717 ;;
 17718                           
 17719                           	psect	text105
 17720  005AA4                     __ptext105:
 17721                           	callstack 0
 17722  005AA4                     _SMT1_PR_ACQ_ISR:
 17723                           	callstack 15
 17724  005AA4                     
 17725                           ;mcc_generated_files/smt1.c: 196:     PIR1bits.SMT1PRAIF = 0;
 17726  005AA4  0139               	movlb	57	; () banked
 17727  005AA6  9DA1               	bcf	161,6,b	;volatile
 17728  005AA8                     
 17729                           ; BSR set to: 57
 17730                           ;mcc_generated_files/smt1.c: 197:     smtPeriod = SMT1CPR;
 17731  005AA8  013F               	movlb	63	; () banked
 17732  005AAA  5115               	movf	21,w,b	;volatile
 17733  005AAC  6E48               	movwf	_smtPeriod^0,c	;volatile
 17734  005AAE  5116               	movf	22,w,b	;volatile
 17735  005AB0  6E49               	movwf	(_smtPeriod+1)^0,c	;volatile
 17736  005AB2  5117               	movf	23,w,b	;volatile
 17737  005AB4  6E4A               	movwf	(_smtPeriod+2)^0,c	;volatile
 17738  005AB6  6A4B               	clrf	(_smtPeriod+3)^0,c	;volatile
 17739  005AB8                     
 17740                           ; BSR set to: 63
 17741                           ;mcc_generated_files/smt1.c: 198:     if(CLC3CONbits.LC3OUT) smtWay++;
 17742  005AB8  013C               	movlb	60	; () banked
 17743  005ABA  AB60               	btfss	96,5,b	;volatile
 17744  005ABC  EF62  F02D         	goto	i2u748_41
 17745  005AC0  EF64  F02D         	goto	i2u748_40
 17746  005AC4                     i2u748_41:
 17747  005AC4  EF6D  F02D         	goto	i2l7453
 17748  005AC8                     i2u748_40:
 17749  005AC8                     
 17750                           ; BSR set to: 60
 17751  005AC8  0E01               	movlw	1
 17752  005ACA  0101               	movlb	1	; () banked
 17753  005ACC  2720               	addwf	_smtWay& (0+255),f,b	;volatile
 17754  005ACE  0E00               	movlw	0
 17755  005AD0  2321               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 17756  005AD2  2322               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 17757  005AD4  2323               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 17758  005AD6  EF76  F02D         	goto	i2l856
 17759  005ADA                     i2l7453:
 17760                           
 17761                           ; BSR set to: 60
 17762  005ADA  0EFF               	movlw	255
 17763  005ADC  0101               	movlb	1	; () banked
 17764  005ADE  2720               	addwf	_smtWay& (0+255),f,b	;volatile
 17765  005AE0  0EFF               	movlw	255
 17766  005AE2  2321               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 17767  005AE4  0EFF               	movlw	255
 17768  005AE6  2322               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 17769  005AE8  0EFF               	movlw	255
 17770  005AEA  2323               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 17771  005AEC                     i2l856:
 17772                           
 17773                           ; BSR set to: 1
 17774  005AEC  0011               	retfie		f
 17775  005AEE                     __end_of_SMT1_PR_ACQ_ISR:
 17776                           	callstack 0
 17777                           
 17778 ;; *************** function _SMT1_PW_ACQ_ISR *****************
 17779 ;; Defined at:
 17780 ;;		line 203 in file "mcc_generated_files/smt1.c"
 17781 ;; Parameters:    Size  Location     Type
 17782 ;;		None
 17783 ;; Auto vars:     Size  Location     Type
 17784 ;;		None
 17785 ;; Return value:  Size  Location     Type
 17786 ;;                  1    wreg      void 
 17787 ;; Registers used:
 17788 ;;		wreg, status,2, status,0
 17789 ;; Tracked objects:
 17790 ;;		On entry : 0/0
 17791 ;;		On exit  : 0/0
 17792 ;;		Unchanged: 0/0
 17793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17798 ;;Total ram usage:        0 bytes
 17799 ;; Hardware stack levels used: 1
 17800 ;; This function calls:
 17801 ;;		Nothing
 17802 ;; This function is called by:
 17803 ;;		Interrupt level 2
 17804 ;; This function uses a non-reentrant model
 17805 ;;
 17806                           
 17807                           	psect	text106
 17808  005970                     __ptext106:
 17809                           	callstack 0
 17810  005970                     _SMT1_PW_ACQ_ISR:
 17811                           	callstack 15
 17812  005970                     
 17813                           ;mcc_generated_files/smt1.c: 207:     PIR1bits.SMT1PWAIF = 0;
 17814  005970  0139               	movlb	57	; () banked
 17815  005972  9FA1               	bcf	161,7,b	;volatile
 17816  005974                     
 17817                           ; BSR set to: 57
 17818                           ;mcc_generated_files/smt1.c: 208:     smtDuty = SMT1CPW;
 17819  005974  013F               	movlb	63	; () banked
 17820  005976  5118               	movf	24,w,b	;volatile
 17821  005978  0101               	movlb	1	; () banked
 17822  00597A  6F24               	movwf	_smtDuty& (0+255),b	;volatile
 17823  00597C  013F               	movlb	63	; () banked
 17824  00597E  5119               	movf	25,w,b	;volatile
 17825  005980  0101               	movlb	1	; () banked
 17826  005982  6F25               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 17827  005984  013F               	movlb	63	; () banked
 17828  005986  511A               	movf	26,w,b	;volatile
 17829  005988  0101               	movlb	1	; () banked
 17830  00598A  6F26               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 17831  00598C  6B27               	clrf	(_smtDuty+3)& (0+255),b	;volatile
 17832  00598E                     
 17833                           ; BSR set to: 1
 17834                           ;mcc_generated_files/smt1.c: 209:     if(CLC3CONbits.LC3OUT) smtWay++;
 17835  00598E  013C               	movlb	60	; () banked
 17836  005990  AB60               	btfss	96,5,b	;volatile
 17837  005992  EFCD  F02C         	goto	i2u749_41
 17838  005996  EFCF  F02C         	goto	i2u749_40
 17839  00599A                     i2u749_41:
 17840  00599A  EFD8  F02C         	goto	i2l7463
 17841  00599E                     i2u749_40:
 17842  00599E                     
 17843                           ; BSR set to: 60
 17844  00599E  0E01               	movlw	1
 17845  0059A0  0101               	movlb	1	; () banked
 17846  0059A2  2720               	addwf	_smtWay& (0+255),f,b	;volatile
 17847  0059A4  0E00               	movlw	0
 17848  0059A6  2321               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 17849  0059A8  2322               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 17850  0059AA  2323               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 17851  0059AC  EFE1  F02C         	goto	i2l863
 17852  0059B0                     i2l7463:
 17853                           
 17854                           ; BSR set to: 60
 17855  0059B0  0EFF               	movlw	255
 17856  0059B2  0101               	movlb	1	; () banked
 17857  0059B4  2720               	addwf	_smtWay& (0+255),f,b	;volatile
 17858  0059B6  0EFF               	movlw	255
 17859  0059B8  2321               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 17860  0059BA  0EFF               	movlw	255
 17861  0059BC  2322               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 17862  0059BE  0EFF               	movlw	255
 17863  0059C0  2323               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 17864  0059C2                     i2l863:
 17865                           
 17866                           ; BSR set to: 1
 17867  0059C2  0011               	retfie		f
 17868  0059C4                     __end_of_SMT1_PW_ACQ_ISR:
 17869                           	callstack 0
 17870                           
 17871 ;; *************** function _SMT1_Overflow_ISR *****************
 17872 ;; Defined at:
 17873 ;;		line 213 in file "mcc_generated_files/smt1.c"
 17874 ;; Parameters:    Size  Location     Type
 17875 ;;		None
 17876 ;; Auto vars:     Size  Location     Type
 17877 ;;		None
 17878 ;; Return value:  Size  Location     Type
 17879 ;;                  1    wreg      void 
 17880 ;; Registers used:
 17881 ;;		wreg, status,2
 17882 ;; Tracked objects:
 17883 ;;		On entry : 0/0
 17884 ;;		On exit  : 0/0
 17885 ;;		Unchanged: 0/0
 17886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17891 ;;Total ram usage:        0 bytes
 17892 ;; Hardware stack levels used: 1
 17893 ;; This function calls:
 17894 ;;		Nothing
 17895 ;; This function is called by:
 17896 ;;		Interrupt level 2
 17897 ;; This function uses a non-reentrant model
 17898 ;;
 17899                           
 17900                           	psect	text107
 17901  006168                     __ptext107:
 17902                           	callstack 0
 17903  006168                     _SMT1_Overflow_ISR:
 17904                           	callstack 15
 17905  006168                     
 17906                           ;mcc_generated_files/smt1.c: 217:     PIR1bits.SMT1IF = 0;
 17907  006168  0139               	movlb	57	; () banked
 17908  00616A  9BA1               	bcf	161,5,b	;volatile
 17909  00616C                     
 17910                           ; BSR set to: 57
 17911                           ;mcc_generated_files/smt1.c: 218:     smtPeriod = 0;
 17912  00616C  0E00               	movlw	0
 17913  00616E  6E48               	movwf	_smtPeriod^0,c	;volatile
 17914  006170  0E00               	movlw	0
 17915  006172  6E49               	movwf	(_smtPeriod+1)^0,c	;volatile
 17916  006174  0E00               	movlw	0
 17917  006176  6E4A               	movwf	(_smtPeriod+2)^0,c	;volatile
 17918  006178  0E00               	movlw	0
 17919  00617A  6E4B               	movwf	(_smtPeriod+3)^0,c	;volatile
 17920                           
 17921                           ;mcc_generated_files/smt1.c: 219:     smtDuty = 0;
 17922  00617C  0E00               	movlw	0
 17923  00617E  0101               	movlb	1	; () banked
 17924  006180  6F24               	movwf	_smtDuty& (0+255),b	;volatile
 17925  006182  0E00               	movlw	0
 17926  006184  6F25               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 17927  006186  0E00               	movlw	0
 17928  006188  6F26               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 17929  00618A  0E00               	movlw	0
 17930  00618C  6F27               	movwf	(_smtDuty+3)& (0+255),b	;volatile
 17931  00618E                     
 17932                           ; BSR set to: 1
 17933  00618E  0011               	retfie		f
 17934  006190                     __end_of_SMT1_Overflow_ISR:
 17935                           	callstack 0
 17936                           
 17937                           ;
 17938                           ; Interrupt Vector Table @ 0x8
 17939                           ;
 17940                           
 17941                           	psect	ivt0x8
 17942  000008                     __pivt0x8:
 17943                           	callstack 0
 17944  000008                     ivt0x8_base:
 17945                           	callstack 0
 17946                           
 17947                           ; Vector 0 : SWINT
 17948  000008  18D1               	dw	_Default_ISR shr (0+2)
 17949                           
 17950                           ; Vector 1 : HLVD
 17951  00000A  18D1               	dw	_Default_ISR shr (0+2)
 17952                           
 17953                           ; Vector 2 : OSF
 17954  00000C  18D1               	dw	_Default_ISR shr (0+2)
 17955                           
 17956                           ; Vector 3 : CSW
 17957  00000E  18D1               	dw	_Default_ISR shr (0+2)
 17958                           
 17959                           ; Vector 4 : NVM
 17960  000010  18D1               	dw	_Default_ISR shr (0+2)
 17961                           
 17962                           ; Vector 5 : SCAN
 17963  000012  18D1               	dw	_Default_ISR shr (0+2)
 17964                           
 17965                           ; Vector 6 : CRC
 17966  000014  18D1               	dw	_Default_ISR shr (0+2)
 17967                           
 17968                           ; Vector 7 : IOC
 17969  000016  18D1               	dw	_Default_ISR shr (0+2)
 17970                           
 17971                           ; Vector 8 : INT0
 17972  000018  18D1               	dw	_Default_ISR shr (0+2)
 17973                           
 17974                           ; Vector 9 : ZCD
 17975  00001A  18D1               	dw	_Default_ISR shr (0+2)
 17976                           
 17977                           ; Vector 10 : AD
 17978  00001C  18D1               	dw	_Default_ISR shr (0+2)
 17979                           
 17980                           ; Vector 11 : ADT
 17981  00001E  18D1               	dw	_Default_ISR shr (0+2)
 17982                           
 17983                           ; Vector 12 : CMP1
 17984  000020  18D1               	dw	_Default_ISR shr (0+2)
 17985                           
 17986                           ; Vector 13 : SMT1
 17987  000022  185A               	dw	_SMT1_Overflow_ISR shr (0+2)
 17988                           
 17989                           ; Vector 14 : SMT1PRA
 17990  000024  16A9               	dw	_SMT1_PR_ACQ_ISR shr (0+2)
 17991                           
 17992                           ; Vector 15 : SMT1PRW
 17993  000026  165C               	dw	_SMT1_PW_ACQ_ISR shr (0+2)
 17994                           
 17995                           ; Vector 16 : DMA1SCNT
 17996  000028  18D1               	dw	_Default_ISR shr (0+2)
 17997                           
 17998                           ; Vector 17 : DMA1DCNT
 17999  00002A  18D1               	dw	_Default_ISR shr (0+2)
 18000                           
 18001                           ; Vector 18 : DMA1OR
 18002  00002C  18D1               	dw	_Default_ISR shr (0+2)
 18003                           
 18004                           ; Vector 19 : DMA1A
 18005  00002E  18D1               	dw	_Default_ISR shr (0+2)
 18006                           
 18007                           ; Vector 20 : SPI1RX
 18008  000030  18D1               	dw	_Default_ISR shr (0+2)
 18009                           
 18010                           ; Vector 21 : SPI1TX
 18011  000032  18D1               	dw	_Default_ISR shr (0+2)
 18012                           
 18013                           ; Vector 22 : SPI1
 18014  000034  18D1               	dw	_Default_ISR shr (0+2)
 18015                           
 18016                           ; Vector 23 : I2C1RX
 18017  000036  18D1               	dw	_Default_ISR shr (0+2)
 18018                           
 18019                           ; Vector 24 : I2C1TX
 18020  000038  18D1               	dw	_Default_ISR shr (0+2)
 18021                           
 18022                           ; Vector 25 : I2C1
 18023  00003A  18D1               	dw	_Default_ISR shr (0+2)
 18024                           
 18025                           ; Vector 26 : I2C1E
 18026  00003C  18D1               	dw	_Default_ISR shr (0+2)
 18027                           
 18028                           ; Vector 27 : U1RX
 18029  00003E  172D               	dw	_UART1_rx_vect_isr shr (0+2)
 18030                           
 18031                           ; Vector 28 : U1TX
 18032  000040  171E               	dw	_UART1_tx_vect_isr shr (0+2)
 18033                           
 18034                           ; Vector 29 : U1E
 18035  000042  18D1               	dw	_Default_ISR shr (0+2)
 18036                           
 18037                           ; Vector 30 : U1
 18038  000044  18D1               	dw	_Default_ISR shr (0+2)
 18039                           
 18040                           ; Vector 31 : TMR0
 18041  000046  18D1               	dw	_Default_ISR shr (0+2)
 18042                           
 18043                           ; Vector 32 : TMR1
 18044  000048  18D1               	dw	_Default_ISR shr (0+2)
 18045                           
 18046                           ; Vector 33 : TMR1G
 18047  00004A  18D1               	dw	_Default_ISR shr (0+2)
 18048                           
 18049                           ; Vector 34 : TMR2
 18050  00004C  18D1               	dw	_Default_ISR shr (0+2)
 18051                           
 18052                           ; Vector 35 : CCP1
 18053  00004E  18D1               	dw	_Default_ISR shr (0+2)
 18054                           
 18055                           ; Vector 36 : Undefined
 18056  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 18057                           
 18058                           ; Vector 37 : NCO1
 18059  000052  18D1               	dw	_Default_ISR shr (0+2)
 18060                           
 18061                           ; Vector 38 : CWG1
 18062  000054  18D1               	dw	_Default_ISR shr (0+2)
 18063                           
 18064                           ; Vector 39 : CLC1
 18065  000056  18D1               	dw	_Default_ISR shr (0+2)
 18066                           
 18067                           ; Vector 40 : INT1
 18068  000058  18D1               	dw	_Default_ISR shr (0+2)
 18069                           
 18070                           ; Vector 41 : CMP2
 18071  00005A  18D1               	dw	_Default_ISR shr (0+2)
 18072                           
 18073                           ; Vector 42 : DMA2SCNT
 18074  00005C  18D1               	dw	_Default_ISR shr (0+2)
 18075                           
 18076                           ; Vector 43 : DMA2DCNT
 18077  00005E  18D1               	dw	_Default_ISR shr (0+2)
 18078                           
 18079                           ; Vector 44 : DMA2OR
 18080  000060  18D1               	dw	_Default_ISR shr (0+2)
 18081                           
 18082                           ; Vector 45 : DMA2A
 18083  000062  18D1               	dw	_Default_ISR shr (0+2)
 18084                           
 18085                           ; Vector 46 : I2C2RX
 18086  000064  18D1               	dw	_Default_ISR shr (0+2)
 18087                           
 18088                           ; Vector 47 : I2C2TX
 18089  000066  18D1               	dw	_Default_ISR shr (0+2)
 18090                           
 18091                           ; Vector 48 : I2C2
 18092  000068  18D1               	dw	_Default_ISR shr (0+2)
 18093                           
 18094                           ; Vector 49 : I2C2E
 18095  00006A  18D1               	dw	_Default_ISR shr (0+2)
 18096                           
 18097                           ; Vector 50 : U2RX
 18098  00006C  18D1               	dw	_Default_ISR shr (0+2)
 18099                           
 18100                           ; Vector 51 : U2TX
 18101  00006E  18D1               	dw	_Default_ISR shr (0+2)
 18102                           
 18103                           ; Vector 52 : U2E
 18104  000070  18D1               	dw	_Default_ISR shr (0+2)
 18105                           
 18106                           ; Vector 53 : U2
 18107  000072  18D1               	dw	_Default_ISR shr (0+2)
 18108                           
 18109                           ; Vector 54 : TMR3
 18110  000074  18D1               	dw	_Default_ISR shr (0+2)
 18111                           
 18112                           ; Vector 55 : TMR3G
 18113  000076  18D1               	dw	_Default_ISR shr (0+2)
 18114                           
 18115                           ; Vector 56 : TMR4
 18116  000078  1700               	dw	_TMR4_ISR shr (0+2)
 18117                           
 18118                           ; Vector 57 : CCP2
 18119  00007A  18D1               	dw	_Default_ISR shr (0+2)
 18120                           
 18121                           ; Vector 58 : Undefined
 18122  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 18123                           
 18124                           ; Vector 59 : CWG2
 18125  00007E  18D1               	dw	_Default_ISR shr (0+2)
 18126                           
 18127                           ; Vector 60 : CLC2
 18128  000080  18D1               	dw	_Default_ISR shr (0+2)
 18129                           
 18130                           ; Vector 61 : INT2
 18131  000082  18D1               	dw	_Default_ISR shr (0+2)
 18132                           
 18133                           ; Vector 62 : Undefined
 18134  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 18135                           
 18136                           ; Vector 63 : Undefined
 18137  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 18138                           
 18139                           ; Vector 64 : Undefined
 18140  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 18141                           
 18142                           ; Vector 65 : Undefined
 18143  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 18144                           
 18145                           ; Vector 66 : Undefined
 18146  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 18147                           
 18148                           ; Vector 67 : Undefined
 18149  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 18150                           
 18151                           ; Vector 68 : Undefined
 18152  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 18153                           
 18154                           ; Vector 69 : Undefined
 18155  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 18156                           
 18157                           ; Vector 70 : TMR5
 18158  000094  18D1               	dw	_Default_ISR shr (0+2)
 18159                           
 18160                           ; Vector 71 : TMR5G
 18161  000096  17E9               	dw	_TMR5_GATE_ISR shr (0+2)
 18162                           
 18163                           ; Vector 72 : TMR6
 18164  000098  18D1               	dw	_Default_ISR shr (0+2)
 18165                           
 18166                           ; Vector 73 : CCP3
 18167  00009A  17C2               	dw	_CCP3_CaptureISR shr (0+2)
 18168                           
 18169                           ; Vector 74 : CWG3
 18170  00009C  18D1               	dw	_Default_ISR shr (0+2)
 18171                           
 18172                           ; Vector 75 : CLC3
 18173  00009E  18D1               	dw	_Default_ISR shr (0+2)
 18174                           
 18175                           ; Vector 76 : Undefined
 18176  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 18177                           
 18178                           ; Vector 77 : Undefined
 18179  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 18180                           
 18181                           ; Vector 78 : Undefined
 18182  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 18183                           
 18184                           ; Vector 79 : Undefined
 18185  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 18186                           
 18187                           ; Vector 80 : CCP4
 18188  0000A8  17CF               	dw	_CCP4_CaptureISR shr (0+2)
 18189                           
 18190                           ; Vector 81 : CLC4
 18191  0000AA  18D1               	dw	_Default_ISR shr (0+2)
 18192  0000AC                     ivt0x8_undefint:
 18193                           	callstack 0
 18194  0000AC  00FF               	reset	
 18195                           
 18196                           	psect	text108
 18197  000000                     __ptext108:
 18198                           	callstack 0
 18199  000000                     
 18200                           	psect	rparam
 18201  0000                     
 18202                           	psect	idloc
 18203                           
 18204                           ;Config register IDLOC0 @ 0x200000
 18205                           ;	unspecified, using default values
 18206  200000                     	org	2097152
 18207  200000  0FFF               	dw	4095
 18208                           
 18209                           ;Config register IDLOC1 @ 0x200002
 18210                           ;	unspecified, using default values
 18211  200002                     	org	2097154
 18212  200002  0FFF               	dw	4095
 18213                           
 18214                           ;Config register IDLOC2 @ 0x200004
 18215                           ;	unspecified, using default values
 18216  200004                     	org	2097156
 18217  200004  0FFF               	dw	4095
 18218                           
 18219                           ;Config register IDLOC3 @ 0x200006
 18220                           ;	unspecified, using default values
 18221  200006                     	org	2097158
 18222  200006  0FFF               	dw	4095
 18223                           
 18224                           ;Config register IDLOC4 @ 0x200008
 18225                           ;	unspecified, using default values
 18226  200008                     	org	2097160
 18227  200008  0FFF               	dw	4095
 18228                           
 18229                           ;Config register IDLOC5 @ 0x20000A
 18230                           ;	unspecified, using default values
 18231  20000A                     	org	2097162
 18232  20000A  0FFF               	dw	4095
 18233                           
 18234                           ;Config register IDLOC6 @ 0x20000C
 18235                           ;	unspecified, using default values
 18236  20000C                     	org	2097164
 18237  20000C  0FFF               	dw	4095
 18238                           
 18239                           ;Config register IDLOC7 @ 0x20000E
 18240                           ;	unspecified, using default values
 18241  20000E                     	org	2097166
 18242  20000E  0FFF               	dw	4095
 18243                           
 18244                           	psect	config
 18245                           
 18246                           ;Config register CONFIG1L @ 0x300000
 18247                           ;	External Oscillator Selection
 18248                           ;	FEXTOSC = OFF, Oscillator not enabled
 18249                           ;	Reset Oscillator Selection
 18250                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 18251  300000                     	org	3145728
 18252  300000  8C                 	db	140
 18253                           
 18254                           ;Config register CONFIG1H @ 0x300001
 18255                           ;	Clock out Enable bit
 18256                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 18257                           ;	PRLOCKED One-Way Set Enable bit
 18258                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
 18259                           ;	Clock Switch Enable bit
 18260                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 18261                           ;	Fail-Safe Clock Monitor Enable bit
 18262                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 18263  300001                     	org	3145729
 18264  300001  FF                 	db	255
 18265                           
 18266                           ;Config register CONFIG2L @ 0x300002
 18267                           ;	MCLR Enable bit
 18268                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 18269                           ;	Power-up timer selection bits
 18270                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 18271                           ;	Multi-vector enable bit
 18272                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 18273                           ;	IVTLOCK bit One-way set enable bit
 18274                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
 18275                           ;	Low Power BOR Enable bit
 18276                           ;	LPBOREN = OFF, ULPBOR disabled
 18277                           ;	Brown-out Reset Enable bits
 18278                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 18279  300002                     	org	3145730
 18280  300002  FF                 	db	255
 18281                           
 18282                           ;Config register CONFIG2H @ 0x300003
 18283                           ;	Brown-out Reset Voltage Selection bits
 18284                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 18285                           ;	ZCD Disable bit
 18286                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 18287                           ;	PPSLOCK bit One-Way Set Enable bit
 18288                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 18289                           ;	Stack Full/Underflow Reset Enable bit
 18290                           ;	STVREN = ON, Stack full/underflow will cause Reset
 18291                           ;	Debugger Enable bit
 18292                           ;	DEBUG = OFF, Background debugger disabled
 18293                           ;	Extended Instruction Set Enable bit
 18294                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 18295  300003                     	org	3145731
 18296  300003  FF                 	db	255
 18297                           
 18298                           ;Config register CONFIG3L @ 0x300004
 18299                           ;	WDT Period selection bits
 18300                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 18301                           ;	WDT operating mode
 18302                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 18303  300004                     	org	3145732
 18304  300004  9F                 	db	159
 18305                           
 18306                           ;Config register CONFIG3H @ 0x300005
 18307                           ;	WDT Window Select bits
 18308                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 18309                           ;	WDT input clock selector
 18310                           ;	WDTCCS = SC, Software Control
 18311  300005                     	org	3145733
 18312  300005  FF                 	db	255
 18313                           
 18314                           ;Config register CONFIG4L @ 0x300006
 18315                           ;	Boot Block Size selection bits
 18316                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 18317                           ;	Boot Block enable bit
 18318                           ;	BBEN = OFF, Boot block disabled
 18319                           ;	Storage Area Flash enable bit
 18320                           ;	SAFEN = OFF, SAF disabled
 18321                           ;	Application Block write protection bit
 18322                           ;	WRTAPP = OFF, Application Block not write protected
 18323  300006                     	org	3145734
 18324  300006  FF                 	db	255
 18325                           
 18326                           ;Config register CONFIG4H @ 0x300007
 18327                           ;	Configuration Register Write Protection bit
 18328                           ;	WRTB = OFF, Configuration registers (300000-30000Bh) not write-protected
 18329                           ;	Boot Block Write Protection bit
 18330                           ;	WRTC = OFF, Boot Block (000000-0007FFh) not write-protected
 18331                           ;	Data EEPROM Write Protection bit
 18332                           ;	WRTD = OFF, Data EEPROM not write-protected
 18333                           ;	SAF Write protection bit
 18334                           ;	WRTSAF = OFF, SAF not Write Protected
 18335                           ;	Low Voltage Programming Enable bit
 18336                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 18337  300007                     	org	3145735
 18338  300007  FF                 	db	255
 18339                           
 18340                           ;Config register CONFIG5L @ 0x300008
 18341                           ;	PFM and Data EEPROM Code Protection bit
 18342                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 18343  300008                     	org	3145736
 18344  300008  FF                 	db	255
 18345                           
 18346                           ;Config register CONFIG5H @ 0x300009
 18347                           ;	unspecified, using default values
 18348  300009                     	org	3145737
 18349  300009  FF                 	db	255
 18350                           tosu	equ	0x3FFF
 18351                           tosh	equ	0x3FFE
 18352                           tosl	equ	0x3FFD
 18353                           stkptr	equ	0x3FFC
 18354                           pclatu	equ	0x3FFB
 18355                           pclath	equ	0x3FFA
 18356                           pcl	equ	0x3FF9
 18357                           tblptru	equ	0x3FF8
 18358                           tblptrh	equ	0x3FF7
 18359                           tblptrl	equ	0x3FF6
 18360                           tablat	equ	0x3FF5
 18361                           prodh	equ	0x3FF4
 18362                           prodl	equ	0x3FF3
 18363                           indf0	equ	0x3FEF
 18364                           postinc0	equ	0x3FEE
 18365                           postdec0	equ	0x3FED
 18366                           preinc0	equ	0x3FEC
 18367                           plusw0	equ	0x3FEB
 18368                           fsr0h	equ	0x3FEA
 18369                           fsr0l	equ	0x3FE9
 18370                           wreg	equ	0x3FE8
 18371                           indf1	equ	0x3FE7
 18372                           postinc1	equ	0x3FE6
 18373                           postdec1	equ	0x3FE5
 18374                           preinc1	equ	0x3FE4
 18375                           plusw1	equ	0x3FE3
 18376                           fsr1h	equ	0x3FE2
 18377                           fsr1l	equ	0x3FE1
 18378                           bsr	equ	0x3FE0
 18379                           indf2	equ	0x3FDF
 18380                           postinc2	equ	0x3FDE
 18381                           postdec2	equ	0x3FDD
 18382                           preinc2	equ	0x3FDC
 18383                           plusw2	equ	0x3FDB
 18384                           fsr2h	equ	0x3FDA
 18385                           fsr2l	equ	0x3FD9
 18386                           status	equ	0x3FD8

Data Sizes:
    Strings     167
    Constant    0
    Data        0
    BSS         182
    Persistent  23
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     57      76
    BANK0           160    139     159
    BANK1           256     20     186
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_19(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_19(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_14(CODE[4]), STR_13(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_14(CODE[4]), STR_13(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S3444_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_8(CODE[14]), STR_7(CODE[13]), STR_6(CODE[14]), STR_5(CODE[16]), 
		 -> STR_4(CODE[21]), STR_3(CODE[26]), STR_2(CODE[24]), STR_1(CODE[20]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 26
		 -> STR_8(CODE[14]), STR_7(CODE[13]), STR_6(CODE[14]), STR_5(CODE[16]), 
		 -> STR_4(CODE[21]), STR_3(CODE[26]), STR_2(CODE[24]), STR_1(CODE[20]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_8(CODE[14]), STR_7(CODE[13]), STR_6(CODE[14]), STR_5(CODE[16]), 
		 -> STR_4(CODE[21]), STR_3(CODE[26]), STR_2(CODE[24]), STR_1(CODE[20]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), Absolute function(), 

    TMR5_SetGateInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), 

    TMR5_GateInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), Absolute function(), 

    CCP4_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), 

    CCP4_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), Absolute function(), 

    CCP3_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), 

    CCP3_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), Absolute function(), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultErrorHandler(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultOverrunErrorHandler(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultFramingErrorHandler(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Receive_ISR(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _loop->___flge
    _utoa->_pad
    _efgtoa->___fladd
    _efgtoa->___flge
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___fladd
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_UART1_Write
    _abs->___aomod
    _checkBatt->___flge
    _getBatteryVoltage->_ADCC_GetSingleConversion
    ___flge->___flmul
    ___fldiv->___xxtofl
    _calcSpeed->___fladd
    ___fladd->___flmul
    _setMotor->_PWM7_LoadDutyValue
    _setMotor->_PWM8_LoadDutyValue
    _actSpeed->___aldiv
    ___xxtofl->___awdiv
    ___fltol->___fladd
    ___flmul->___xxtofl
    _SYSTEM_Initialize->_TMR5_Initialize
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR5_Initialize->_TMR5_SetGateInterruptHandler
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _CCP4_Initialize->_CCP4_SetCallBack
    _CCP3_Initialize->_CCP3_SetCallBack

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR4_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _CCP3_CaptureISR in COMRAM

    _CCP3_CaptureISR->_CCP3_DefaultCallBack

Critical Paths under _CCP4_CaptureISR in COMRAM

    _CCP4_CaptureISR->_CCP4_DefaultCallBack

Critical Paths under _TMR5_GATE_ISR in COMRAM

    _TMR5_DefaultGateInterruptHandler->_TMR5_ReadTimer
    _TMR5_Reload->_TMR5_WriteTimer

Critical Paths under _SMT1_PR_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_Overflow_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___fltol
    _floorf->___fldiv
    ___flsub->___fladd
    _checkBatt->_setSteering
    ___flge->___flmul
    _calcSteering->_setSteering
    _setSteering->___fltol
    _calcSpeed->___fltol
    ___fladd->___flmul
    _calcMotorPow->___fltol
    ___fltol->___fladd

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR4_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _CCP3_CaptureISR in BANK0

    None.

Critical Paths under _CCP4_CaptureISR in BANK0

    None.

Critical Paths under _TMR5_GATE_ISR in BANK0

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _loop->_checkCurveCount
    _startAccell->_printf
    _getReverse->_printf
    _checkCurveCount->_printf
    _printf->_vfprintf

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR4_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _CCP3_CaptureISR in BANK1

    None.

Critical Paths under _CCP4_CaptureISR in BANK1

    None.

Critical Paths under _TMR5_GATE_ISR in BANK1

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR4_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _CCP3_CaptureISR in BANK2

    None.

Critical Paths under _CCP4_CaptureISR in BANK2

    None.

Critical Paths under _TMR5_GATE_ISR in BANK2

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR4_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _CCP3_CaptureISR in BANK3

    None.

Critical Paths under _CCP4_CaptureISR in BANK3

    None.

Critical Paths under _TMR5_GATE_ISR in BANK3

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR4_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _CCP3_CaptureISR in BANK4

    None.

Critical Paths under _CCP4_CaptureISR in BANK4

    None.

Critical Paths under _TMR5_GATE_ISR in BANK4

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR4_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _CCP3_CaptureISR in BANK5

    None.

Critical Paths under _CCP4_CaptureISR in BANK5

    None.

Critical Paths under _TMR5_GATE_ISR in BANK5

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR4_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _CCP3_CaptureISR in BANK6

    None.

Critical Paths under _CCP4_CaptureISR in BANK6

    None.

Critical Paths under _TMR5_GATE_ISR in BANK6

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR4_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _CCP3_CaptureISR in BANK7

    None.

Critical Paths under _CCP4_CaptureISR in BANK7

    None.

Critical Paths under _TMR5_GATE_ISR in BANK7

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR4_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _CCP3_CaptureISR in BANK8

    None.

Critical Paths under _CCP4_CaptureISR in BANK8

    None.

Critical Paths under _TMR5_GATE_ISR in BANK8

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR4_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _CCP3_CaptureISR in BANK9

    None.

Critical Paths under _CCP4_CaptureISR in BANK9

    None.

Critical Paths under _TMR5_GATE_ISR in BANK9

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR4_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _CCP3_CaptureISR in BANK10

    None.

Critical Paths under _CCP4_CaptureISR in BANK10

    None.

Critical Paths under _TMR5_GATE_ISR in BANK10

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR4_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _CCP3_CaptureISR in BANK11

    None.

Critical Paths under _CCP4_CaptureISR in BANK11

    None.

Critical Paths under _TMR5_GATE_ISR in BANK11

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR4_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _CCP3_CaptureISR in BANK12

    None.

Critical Paths under _CCP4_CaptureISR in BANK12

    None.

Critical Paths under _TMR5_GATE_ISR in BANK12

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR4_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _CCP3_CaptureISR in BANK13

    None.

Critical Paths under _CCP4_CaptureISR in BANK13

    None.

Critical Paths under _TMR5_GATE_ISR in BANK13

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR4_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _CCP3_CaptureISR in BANK14

    None.

Critical Paths under _CCP4_CaptureISR in BANK14

    None.

Critical Paths under _TMR5_GATE_ISR in BANK14

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR4_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _CCP3_CaptureISR in BANK15

    None.

Critical Paths under _CCP4_CaptureISR in BANK15

    None.

Critical Paths under _TMR5_GATE_ISR in BANK15

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  212795
                  _SYSTEM_Initialize
           _TMR4_SetInterruptHandler
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0  211648
                             ___flge
                           ___xxtofl
                       _calcMotorPow
                          _calcSpeed
                       _calcSteering
                          _checkBatt
                    _checkCurveCount
                  _getBatteryVoltage
                           _getCurve
                         _getReverse
                           _setMotor
                        _setSteering
                        _startAccell
 ---------------------------------------------------------------------------------
 (2) _startAccell                                          2     2      0   60089
                                             16 BANK1      2     2      0
                             _printf
                           _setMotor
                        _setSteering
 ---------------------------------------------------------------------------------
 (2) _getReverse                                           0     0      0   50846
                             _printf
 ---------------------------------------------------------------------------------
 (2) _getCurve                                             6     6      0      90
                                             19 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (2) _checkCurveCount                                      4     4      0   52317
                                             16 BANK1      4     4      0
                            ___lwdiv
                           ___xxtofl
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              10     4      6   50846
                                              8 BANK1      8     2      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   50021
                                              0 BANK1      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           46    40      6   49506
                                            103 BANK0     36    30      6
                               _dtoa
                             _efgtoa
                              _fputc
                            _isupper
                            _strncmp
                            _tolower
                               _utoa
 ---------------------------------------------------------------------------------
 (6) _utoa                                                32    22     10    5909
                                             48 COMRAM     8     8      0
                                              0 BANK0     24    14     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (7) ___lomod                                             17     1     16     412
                                             19 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (7) ___lodiv                                             25     9     16     421
                                             19 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6     595
                                             19 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              68    61      7   31790
                                             35 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _tolower                                              8     6      2    1142
                                             25 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     551
                                             19 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _strcpy                                              10     6      4    1037
                                             19 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     669
                                             53 COMRAM     4     0      4
                                             13 BANK0     16    16      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       14    10      4     375
                                             19 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (7) ___flsub                                              8     0      8    4187
                                             25 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     155
                                             19 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     770
                                             19 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     613
                                             19 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    6763
                                             48 COMRAM     8     8      0
                                              0 BANK0     28    18     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    4497
                                             37 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     220
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1537
                                             30 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4    1037
                                             21 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0      93
                                             20 COMRAM     1     1      0
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (11) _UART1_Write                                         1     1      0      62
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     183
                                             37 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     613
                                             19 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     625
                                             19 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     421
                                             19 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _checkBatt                                            0     0      0   10433
                             ___flge
                           ___xxtofl
                  _getBatteryVoltage
                        _setSteering
 ---------------------------------------------------------------------------------
 (2) _getBatteryVoltage                                    0     0      0      22
           _ADCC_GetSingleConversion
 ---------------------------------------------------------------------------------
 (3) _ADCC_GetSingleConversion                             5     3      2      22
                                             19 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8    1346
                                             53 COMRAM     4     4      0
                                             13 BANK0      8     0      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _calcSteering                                         4     4      0    8312
                                             44 BANK0      4     4      0
                        _setSteering
 ---------------------------------------------------------------------------------
 (3) _setSteering                                          9     6      3    8049
                                             35 BANK0      9     6      3
                 _PWM5_LoadDutyValue
                 _PWM6_LoadDutyValue
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    2903
                                             41 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM6_LoadDutyValue                                   4     2      2     152
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _PWM5_LoadDutyValue                                   4     2      2     152
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _calcSpeed                                            6     6      0    9513
                                             35 BANK0      6     6      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (8) ___fladd                                             16     8      8    3622
                                             53 COMRAM     4     4      0
                                             13 BANK0     12     4      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _calcMotorPow                                         7     7      0    8489
                                             35 BANK0      7     7      0
                            ___awdiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                           _actSpeed
                           _setMotor
 ---------------------------------------------------------------------------------
 (3) _setMotor                                             4     2      2    1126
                                             23 COMRAM     4     2      2
                 _PWM7_LoadDutyValue
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (4) _PWM8_LoadDutyValue                                   4     2      2     332
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _PWM7_LoadDutyValue                                   4     2      2     332
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _actSpeed                                             4     2      2     629
                                             33 COMRAM     4     2      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     604
                                             19 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1016
                                             27 COMRAM    14    10      4
                            ___awdiv (ARG)
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     787
                                             25 BANK0     10     6      4
                            ___awdiv (ARG)
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             25    17      8    3953
                                             41 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___awdiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     805
                                             19 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     973
                    _ADCC_Initialize
                    _CCP3_Initialize
                    _CCP4_Initialize
                    _CLC3_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM5_Initialize
                    _PWM6_Initialize
                    _PWM7_Initialize
                    _PWM8_Initialize
                    _SMT1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR4_Initialize
                    _TMR5_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     490
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0      98
                                             21 COMRAM     2     2      0
       _TMR5_SetGateInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetGateInterruptHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     174
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             2     0      2     174
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      2     2      0       0
                                             19 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMT1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM7_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      15
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CLC3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP4_Initialize                                      0     0      0      98
                   _CCP4_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP4_SetCallBack                                     2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CCP3_Initialize                                      0     0      0      98
                   _CCP3_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP3_SetCallBack                                     2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_tx_vect_isr                                   1     1      0       0
                                             16 COMRAM     1     1      0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_rx_vect_isr                                   1     1      0       0
                                             17 COMRAM     1     1      0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultErrorHandler                           0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _UART1_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR4_ISR                                            1     1      0       0
                                             18 COMRAM     1     1      0
                      _TMR4_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR4_CallBack                                       0     0      0       0
                   Absolute function *
                       _TMR4_10msISR *
       _TMR4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR4_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _TMR4_10msISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _CCP3_CaptureISR                                     2     2      0     144
                                              2 COMRAM     2     2      0
                   Absolute function *
               _CCP3_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (17) _CCP3_DefaultCallBack                                2     0      2      97
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _CCP4_CaptureISR                                     2     2      0     144
                                              6 COMRAM     2     2      0
                   Absolute function *
               _CCP4_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (17) _CCP4_DefaultCallBack                                2     0      2      97
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _TMR5_GATE_ISR                                       0     0      0     233
                   Absolute function *
   _TMR5_DefaultGateInterruptHandler *
 ---------------------------------------------------------------------------------
 (17) _TMR5_DefaultGateInterruptHandler                    0     0      0     233
                     _TMR5_ReadTimer
                        _TMR5_Reload
 ---------------------------------------------------------------------------------
 (18) _TMR5_Reload                                         0     0      0     164
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (19) _TMR5_WriteTimer                                     2     0      2     164
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) _TMR5_ReadTimer                                      8     6      2      69
                                              8 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _SMT1_PR_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _SMT1_PW_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _SMT1_Overflow_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
     _CCP3_Initialize
       _CCP3_SetCallBack
     _CCP4_Initialize
       _CCP4_SetCallBack
     _CLC3_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM5_Initialize
     _PWM6_Initialize
     _PWM7_Initialize
     _PWM8_Initialize
     _SMT1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetGateInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
   _TMR4_SetInterruptHandler
   _loop
     ___flge
       ___flmul (ARG)
         ___awdiv (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
           ___lwdiv (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _calcMotorPow
       ___awdiv
       ___flmul
       ___fltol
         ___awdiv (ARG)
         ___fladd (ARG)
           ___flmul (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _actSpeed
         ___aldiv
       _setMotor
         _PWM7_LoadDutyValue
         _PWM8_LoadDutyValue
     _calcSpeed
       ___fladd
       ___flmul
       ___fltol
       ___xxtofl
     _calcSteering
       _setSteering
         _PWM5_LoadDutyValue
         _PWM6_LoadDutyValue
         ___fldiv
         ___fltol
         ___xxtofl
     _checkBatt
       ___flge
       ___xxtofl
       _getBatteryVoltage
         _ADCC_GetSingleConversion
       _setSteering
     _checkCurveCount
       ___lwdiv
       ___xxtofl
       _printf
         _vfprintf
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
                 ___flmul (ARG)
               ___fltol
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
               _isupper
               _pad
               _strcpy
               _tolower
                 _isupper
             _fputc
             _isupper
             _strncmp
             _tolower
             _utoa
               ___lodiv
               ___lomod
               _pad
     _getBatteryVoltage
     _getCurve
     _getReverse
       _printf
     _setMotor
     _setSteering
     _startAccell
       _printf
       _setMotor
       _setSteering

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *

 _TMR4_ISR (ROOT)
   _TMR4_CallBack
     Absolute function(Fake) *
     _TMR4_10msISR *
     _TMR4_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _CCP3_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP3_DefaultCallBack *

 _CCP4_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP4_DefaultCallBack *

 _TMR5_GATE_ISR (ROOT)
   Absolute function(Fake) *
   _TMR5_DefaultGateInterruptHandler *
     _TMR5_ReadTimer
     _TMR5_Reload
       _TMR5_WriteTimer

 _SMT1_PR_ACQ_ISR (ROOT)

 _SMT1_PW_ACQ_ISR (ROOT)

 _SMT1_Overflow_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK15          100      0       0      30        0.0%
BANK15             100      0       0      31        0.0%
BITBANK14          100      0       0      28        0.0%
BANK14             100      0       0      29        0.0%
BITBANK13          100      0       0      36        0.0%
BANK13             100      0       0      27        0.0%
BITBANK12          100      0       0      35        0.0%
BANK12             100      0       0      26        0.0%
BITBANK11          100      0       0      34        0.0%
BANK11             100      0       0      25        0.0%
BITBANK10          100      0       0      33        0.0%
BANK10             100      0       0      24        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     14      BA       7       72.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     8B      9F       5       99.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     39      4C       1       80.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1A5      32        0.0%
DATA                 0      0     1A5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Jan 30 10:09:39 2024

                             _CCP4_Initialize 6006                        ??_CCP3_DefaultCallBack 0003  
                     __end_of_checkCurveCount 4F9E                                  ___fldiv@aexp 006C  
                                ___fldiv@bexp 006B                                   _startAccell 54AC  
                                ___fldiv@sign 0064                                            l72 62A8  
                                          l75 61B2                                            l69 5A58  
                                ___awdiv@sign 0019                             ??_TMR5_WriteTimer 000B  
                 __size_of_PWM6_LoadDutyValue 0034                                           l312 5910  
                                         l404 5A0E                                           l308 58C8  
                                         l309 58E2                                           l318 62D0  
                                         l520 5AA2                                           l441 6060  
                                         l362 62EE                                           l371 62DA  
                                         l188 5066                                           l284 54AA  
                                         l365 6302                                           l359 62F8  
                                         l368 62E4                                           l712 5F06  
                                         l449 632A                                           l482 6032  
                                         l723 6248                                           l555 630C  
                                         l644 60BA                                           l740 5E9E  
                                         l709 6260                                           l581 5D94  
                                         l726 5ED2                                           l479 6320  
                                         l751 6278                                           l737 6290  
                                         l754 5E6A                                           l923 6230  
                                         l695 6316                                           l795 6004  
                                         l893 60E6                                           _GIE 01FE97  
                                         _PR2 003FAB                                           _PR4 003F9F  
                                         _abs 5BBE                                           _pad 512C  
                     __size_of_PMD_Initialize 0024                                  ___awmod@sign 0019  
                             _TMR2_Initialize 6216                CCP4_SetCallBack@customCallBack 0014  
                                         tosl 003FFD                                           wreg 003FE8  
                            _CCP4_SetCallBack 6318                                  ___flmul@aexp 0061  
                                ___flmul@bexp 0066                            _UART1_Transmit_ISR 5B7A  
                                ___flmul@sign 0060                                  ___flmul@temp 006B  
                                ___flmul@prod 0067                       __end_of_CCP4_CaptureISR 5F70  
                                ___fltol@exp1 0082                                          l1042 596C  
                                        ?_abs 0026                                          l2021 2C50  
                                        l1301 3CE2                                          l1054 5F80  
                                        l2024 2AE2                                          l1400 3B00  
                                        l2120 5170                                          l1232 461C  
                                        l2017 28C8                                          l1057 5FA0  
                                        l2034 2C12                                          l2026 2B5A  
                                        l1322 3CF6                                          l2027 2B48  
                                        l2123 51B2                                          l2131 308E  
                                        l1315 449E                                          l1260 62B8  
                                        l1316 44B0                                          l2061 4076  
                                        l2125 51EC                                          l2133 3096  
                                        l2302 5BFC                                          l1343 3EC2  
                                        l1327 3D80                                          l2151 32D2  
                                        l2311 3646                                          l2215 1906  
                                        l2072 400E                                          l1280 4F9C  
                                        l1248 4722                                          l2065 3FB2  
                                        l1257 5674                                          l1265 5706  
                                        l2081 6166                                          l2058 3F1A  
                                        l1530 4362                                          l2251 3744  
                             _timer3ReloadVal 0192                                          l1700 4936  
                                        l2308 3702                                          l1276 554A  
                                        l4101 4FBE                                          l1365 34EC  
                                        l1517 41FE                                          l2333 55E0  
                                        l2341 5B78                                          l1374 45FC  
                                        l1390 3952                                          l2318 5D24  
                                        l4111 501A                                          l4103 4FC0  
                                        l1383 4E00                                          l1391 39C6  
                                        l1288 3CD2                                          l4121 5028  
                                        l4113 501C                                          l4105 4FC8  
                                        l2353 5C74                                          l2169 1D56  
                                        l2249 373C                                          l1634 512A  
                                        l1482 482E                                          l4123 6292  
                                        l4115 5022                                          l4107 5016  
                                        l1387 391A                                          l2347 5854  
                                        l2187 14C8                                          l2259 390A  
                                        l2283 57E2                                          l2372 58B4  
                                        l2276 2172                                          l2268 233E  
                                        l2284 57EA                                          l4117 5024  
                                        l4109 5018                                          l1389 393E  
                                        l1901 577A                                          l2357 4C2E  
                                        l1662 5406                                          l2294 4B3A  
                                        l4135 5912                                          l4071 59CE  
                                        l4119 5026                                          l4207 624A  
                                        l4151 5FF6                                          l1647 535C  
                                        l2367 58AC                                          l4081 59FE  
                                        l4073 59D8                                          l4161 6232  
                                        l4153 5FF8                                          l1673 4A3C  
                                        l1841 4CFE                                          l4091 5A08  
                                        l4083 5A00                                          l4075 59EE  
                                        l4067 59C4                                          l4155 5FFC  
                                        l4147 5FD6                                          l4163 6216  
                                        l1931 2530                                          l2299 5BF4  
                                        l1851 4EB0                                          l1940 2800  
                                        l1932 251E                                          l1668 49F6  
                                        l4181 60BC                                          l4093 5A0A  
                                        l4085 5A02                                          l4077 59F0  
                                        l4069 59C6                                          l4157 5FFE  
                                        l4149 5FF4                                          l4165 6222  
                                        l1933 24E4                                          l1677 5D5C  
                                        l4095 5A0C                                          l4087 5A04  
                                        l4079 59FA                                          l4191 627A  
                                        l4159 6000                                          l4167 6228  
                                        l1848 4D1E                                          l4089 5A06  
                                        l4097 6190                                          l4169 6262  
                                        l7001 3BAE                                          l1858 4ED0  
                                        l4099 4F9E                                          l7011 3C06  
                                        l7003 3BCA                                          l1948 264A  
                                        l1957 271A                                          l1973 5B34  
                                        l7021 3C56                                          l7013 3C12  
                                        l7005 3BE2                                          l1958 2708  
                                        l1990 2E10                                          l1894 5772  
                                        ?_pad 0026                                          l7023 3C6C  
                                        l7015 3C18                                          l7007 3BF0  
                                        l1985 2FEC                                          l7017 3C28  
                                        l7009 3BF6                                          l1987 2E4C  
                                        l8011 2DD4                                          l8003 2D8A  
                                        l7027 3C7C                                          l7019 3C40  
                                        l7035 3C98                                          l1996 2E92  
                                        l8101 286C                                          l8021 2E1A  
                                        l8013 2DDC                                          l8005 2DA4  
                                        l7029 3C8C                                          l1998 2F0A  
                                        l8111 28A2                                          l8103 2872  
                                        l1999 2EF8                                          l8031 2E72  
                                        l8023 2E38                                          l8015 2DEC  
                                        l8007 2DB4                                          l8201 2C26  
                                        l8113 28B2                                          l8105 2880  
                                        l6601 479A                                          l8041 2EB0  
                                        l8033 2E78                                          l8025 2E3A  
                                        l8017 2E00                                          l8009 2DC4  
                                        l9001 21E0                                          l7251 5A20  
                                        l8203 2C34                                          l8131 293C  
                                        l8123 28FC                                          l8115 28B8  
                                        l8107 2882                                          l6611 47EC  
                                        l6603 47A6                                          l8051 2F1A  
                                        l8043 2EB4                                          l8035 2E82  
                                        l8027 2E4A                                          l8019 2E0E  
                                        l9011 22B8                                          l9003 2240  
                                        l6701 6318                                          l7261 5A38  
                                        l7253 5A24                                          l8221 506C  
                                        l8205 2C36                                          l8141 298E  
                                        l8133 2958                                          l8125 290C  
                                        l8117 28D8                                          l8109 2892  
                                        l6621 481E                                          l6613 47EE  
                                        l6605 47B4                                          l9101 4D6C  
                                        l8061 2F7C                                          l8053 2F26  
                                        l8045 2EC2                                          l8037 2E90  
                                        l8029 2E5C                                          l8301 538C  
                                        l8213 5AEE                                          l9013 22CC  
                                        l6703 6304                                          l7263 5A40  
                                        l7255 5A2C                                          l8231 509C  
                                        l8223 507A                                          l8207 2C3C  
                                        l8151 29EC                                          l8143 299E  
                                        l8135 2964                                          l8127 2916  
                                        l8119 28E8                                          l6615 47F8  
                                        l6607 47BE                                          l9031 5ED4  
                                        l9111 4DC8                                          l9103 4D7C  
                                        l8071 2FDA                                          l8063 2F92  
                                        l8055 2F34                                          l8047 2EF0  
                                        l8039 2EA2                                          l8311 5404  
                                        l8303 539C                                          l8215 5B00  
                                        l9007 2278                                          l9023 22FA  
                                        l7265 5A44                                          l7257 5A30  
                                        l7249 5A10                                          l8241 50CA  
                                        l8233 50A0                                          l8225 5082  
                                        l8209 2C40                                          l8161 2A9C  
                                        l8153 2A0C                                          l8145 29AE  
                                        l8137 2970                                          l8129 2930  
                                        l9041 3ED6                                          l6609 47DC  
                                        l6617 47FE                                          l9033 5EA0  
                                        l9105 4D98                                          l9113 4DE8  
                                        l8073 2FE0                                          l8065 2FAC  
                                        l8057 2F5E                                          l9121 39DA  
                                        l8321 49A6                                          l8305 53CA  
                                        l8401 4C96                                          l9025 2328  
                                        l9009 22A6                                          l9017 22DA  
                                        l9201 54EE                                          l7267 5A4C  
                                        l7259 5A34                                          l8251 50FE  
                                        l8243 50D8                                          l8235 50A8  
                                        l8227 5086                                          l8219 5068  
                                        l8171 2AF2                                          l8163 2AAA  
                                        l8155 2A1C                                          l8147 29BE  
                                        l8139 297E                                          l8091 2830  
                                        l8083 2802                                          l9051 3F54  
                                        l9043 3EE4                                          l6619 480E  
                                        l9107 4DB4                                          l9035 5E6C  
                                        l8075 2FE2                                          l8067 2FC8  
                                        l8059 2F62                                          l9123 39E2  
                                        l9131 3A44                                          l9115 390C  
                                        l8331 4A34                                          l8323 49B6  
                                        l8315 4938                                          l6571 5F78  
                                        l7611 58D8                                          l8307 53DA  
                                        l8403 4CC4                                          l8411 4E02  
                                        l9019 22EC                                          l9211 553A  
                                        l9203 54FE                                          l6901 5446  
                                        l7269 5A50                                          l8253 5104  
                                        l8245 50DE                                          l8237 50BA  
                                        l8229 5094                                          l8173 2B00  
                                        l8165 2AC8                                          l8157 2A3C  
                                        l8149 29DC                                          l8093 2840  
                                        l8085 2810                                          l9061 3FA8  
                                        l9053 3F5C                                          l9045 3F2A  
                                        l6581 4724                                          l9109 4DBC  
                                        l7701 245E                                          l9037 5E38  
                                        l8069 2FCC                                          l9141 3AAE  
                                        l9133 3A62                                          l9125 39EE  
                                        l9117 395A                                          l8333 4A3A  
                                        l8325 49C4                                          l8317 4968  
                                        l6573 5F7C                                          l9221 569E  
                                        l9213 5676                                          l7621 590C  
                                        l7613 58E4                                          l8309 53FE  
                                        l8341 5D4C                                          l8501 35FA  
                                        l8405 4CE4                                          l8421 4E78  
                                        l8413 4E20                                          l9205 5504  
                                        l6831 6044                                          l6719 630E  
                                        l6911 545A                                          l6903 544A  
                                        l8247 50F4                                          l8239 50C2  
                                        l8255 510A                                          l8183 2B6A  
                                        l8191 2BB2                                          l8175 2B04  
                                        l8167 2AD2                                          l8159 2A66  
                                        l8095 2850                                          l8087 281E  
                                        l8351 485C                                          l9071 401E  
                                        l9063 3FE4                                          l9055 3F68  
                                        l9047 3F40                                          l9039 3EC6  
                                        l6591 4758                                          l6583 4728  
                                        l7711 2472                                          l7703 2462  
                                        l9143 3ABA                                          l9135 3A6E  
                                        l9119 39CE                                          l9303 3DFA  
                                        l8327 49D6                                          l8319 4978  
                                        l6575 5F7E                                          l9223 56E6  
                                        l9231 5704                                          l9215 567C  
                                        l7615 58F6                                          l7623 590E  
                                        l7607 58B8                                          l7631 5570  
                                        l8431 514E                                          l8271 52CC  
                                        l8263 52AE                                          l8511 36E2  
                                        l8503 3636                                          l8407 4CE6  
                                        l8423 4E98                                          l8415 4E28  
                                        l9207 5520                                          l6833 6050  
                                        l6841 60A4                                          l6681 62D2  
                                        l6921 547E                                          l6913 545E  
                                        l6905 544E                                          l8257 511A  
                                        l8249 50FC                                          l8193 2BCC  
                                        l8185 2B76                                          l8177 2B12  
                                        l8169 2AE0                                          l8097 2856  
                                        l8089 2820                                          l8361 48AA  
                                        l8353 4886                                          l8345 4830  
                                        l9081 4066                                          l9073 4022  
                                        l9065 3FF0                                          l9057 3F9A  
                                        l6593 4768                                          l6585 4736  
                                        l9401 4570                                          l7801 26D8  
                                        l7721 2486                                          l7713 2476  
                                        l7705 2466                                          l7641 2340  
                                        l9145 3AD6                                          l9137 3A8A  
                                        l9129 3A02                                          l9313 3E34  
                                        l9305 3E0C                                          l8329 49E4  
                                        l6577 5F8E                                          l6569 5F72  
                                        l9225 56EE                                          l9217 5692  
                                        l7617 58F8                                          l7609 58B8  
                                        l7625 62CA                                          l7633 557A  
                                        l8441 5194                                          l8433 515C  
                                        l8521 3038                                          l8281 5304  
                                        l8273 52DA                                          l8265 52B2  
                                        l8337 5D26                                          l8513 36F2  
                                        l8505 366A                                          l8601 114E  
                                        l8409 4CF8                                          l8425 4EAA  
                                        l8417 4E3C                                          l9241 4398  
                                        l9209 5534                                          l6835 605A  
                                        l6851 6016                                          l6843 60A8  
                                        l6683 62F0                                          l6923 54A6  
                                        l6915 5462                                          l6907 5452  
                                        l8259 5122                                          l8195 2BE0  
                                        l8187 2B84                                          l8179 2B40  
                                        l8099 2866                                          l8371 48D6  
                                        l8355 4888                                          l8347 4848  
                                        l9075 4046                                          l9067 3FFE  
                                        l9059 3F9C                                          l6595 476C  
                                        l6587 4746                                          l9411 45B8  
                                        l9403 4578                                          l7811 272A  
                                        l7803 26DC                                          l7731 24FE  
                                        l7723 24B0                                          l7715 247A  
                                        l7707 246A                                          l7651 237E  
                                        l7643 234E                                          l9147 3ADE  
                                        l9139 3A92                                          l9315 3E44  
                                        l9227 56FE                                          l9219 569A  
                                        l9171 5732                                          l9163 5708  
                                        l8451 5BD8                                          l7619 5908  
                                        l7635 5598                                          l7627 554C  
                                        l8443 51C0                                          l8435 5168  
                                        l8427 512C                                          l8531 309E  
                                        l8523 3058                                          l8283 5312  
                                        l8291 533C                                          l8275 52E2  
                                        l8267 52C0                                          l8339 5D3C  
                                        l8507 36A6                                          l8611 118A  
                                        l8603 1156                                          l8419 4E4A  
                                        l9091 57C0                                          l9251 43E4  
                                        l9243 43AA                                          l9235 4364  
                                        l6837 605E                                          l6829 6034  
                                        l6853 6022                                          l6861 5D72  
                                        l6845 60AA                                          l6685 62E6  
                                        l6917 5466                                          l6909 5456  
                                        l8197 2BFA                                          l8189 2BAE  
                                        l8381 4906                                          l8357 4898  
                                        l9077 4056                                          l9069 401C  
                                        l6597 477C                                          l6589 474A  
                                        l9093 4D20                                          l9413 45C4  
                                        l9405 458C                                          l7821 2790  
                                        l7813 2736                                          l7805 26EA  
                                        l7741 253E                                          l7733 2502  
                                        l7725 24CC                                          l7717 247E  
                                        l7709 246E                                          l7661 23AE  
                                        l7653 238E                                          l7645 235C  
                                        l9341 3318                                          l9333 32D4  
                                        l9149 3AEE                                          l9309 3E20  
                                        l9181 5766                                          l9173 5740  
                                        l9165 5710                                          l7901 41AE  
                                        l7637 55CE                                          l7629 555E  
                                        l8445 51D4                                          l8437 517C  
                                        l8429 513A                                          l8541 30D6  
                                        l8533 30B0                                          l8525 3066  
                                        l8517 2FEE                                          l8293 534C  
                                        l8285 5328                                          l8277 52F4  
                                        l8269 52C8                                          l8461 4AD0  
                                        l8453 4A3E                                          l8509 36BA  
                                        l8701 1590                                          l8621 1206  
                                        l8605 115A                                          l9085 577C  
                                        l9157 6140                                          l9421 4ED2  
                                        l9261 4432                                          l9253 43F6  
                                        l9245 43B4                                          l9237 437C  
                                        l6855 602C                                          l6863 5D76  
                                        l6847 60B6                                          l6839 6090  
                                        l6871 5A72                                          l6687 62FA  
                                        l6679 62DC                                          l6919 5472  
                                        l8199 2C16                                          l8383 4916  
                                        l8367 48C2                                          l8359 489C  
                                        l9079 4064                                          l6599 4792  
                                        l6791 5600                                          l9095 4D3C  
                                        l9415 45E0                                          l9407 4590  
                                        l7831 27D8                                          l7823 27A0  
                                        l7815 2744                                          l7807 2700  
                                        l7751 2580                                          l7743 254E  
                                        l7735 2510                                          l7727 24DC  
                                        l7719 2482                                          l7671 23D8  
                                        l7663 23C0                                          l7655 2390  
                                        l7647 235E                                          l9351 3364  
                                        l9343 3320                                          l9335 32E2  
                                        l9319 3E68                                          l9183 576C  
                                        l9175 5746                                          l9167 5722  
                                        l7903 41BE                                          l7911 4204  
                                        l8439 5190                                          l8543 30DC  
                                        l8551 31D0                                          l8535 30BE  
                                        l8527 3068                                          l8519 300E  
                                        l8295 5354                                          l8287 5330  
                                        l8279 52FC                                          l8471 4B32  
                                        l8455 4A5E                                          l8711 15DE  
                                        l8703 1594                                          l8623 1210  
                                        l8615 11C0                                          l8607 115E  
                                        l8391 4C3C                                          l9087 5784  
                                        l9159 614A                                          l9431 4F58  
                                        l9423 4EEA                                          l9271 4492  
                                        l9255 440C                                          l9263 4438  
                                        l9247 43CC                                          l9239 4386  
                                        l6857 6030                                          l6849 6006  
                                        l6865 5D90                                          l6873 5A8C  
                                        l6881 5408                                          l8385 4926  
                                        l8377 48EA                                          l8369 48CC  
                                        l6793 5610                                          l9097 4D58  
                                        l9417 45E8                                          l9409 459C  
                                        l7833 27DA                                          l7825 27C0  
                                        l7817 277E                                          l7761 25AE  
                                        l7753 258E                                          l7737 2512  
                                        l7729 24F2                                          l7673 23E8  
                                        l7681 2412                                          l7665 23C2  
                                        l7649 236E                                          l7657 2398  
                                        l9353 3368                                          l9345 3336  
                                        l9337 32F8                                          l9281 3D1E  
                                        l6785 62AA                                          l9177 575C  
                                        l9169 572A                                          l7905 41DE  
                                        l7921 4264                                          l7913 4212  
                                        l8449 5BBE                                          l8553 31EC  
                                        l8561 324C                                          l8545 315E  
                                        l8537 30C4                                          l8529 3082  
                                        l8289 5336                                          l8457 4A9C  
                                        l8465 4ADC                                          l8801 1A66  
                                        l8721 1676                                          l8705 15A6  
                                        l8713 15E6                                          l8641 12E4  
                                        l8633 1294                                          l8617 11D2  
                                        l8609 1164                                          l8393 4C5A  
                                        l9089 5792                                          l9433 4F6C  
                                        l9425 4F00                                          l9273 449A  
                                        l9265 444E                                          l9257 441A  
                                        l9249 43D0                                          l9185 54AC  
                                        l9441 45FE                                          l6699 6322  
                                        l6859 5D5E                                          l6875 5A90  
                                        l6867 5A5A                                          l6891 5432  
                                        l6883 540C                                          l8379 48F6  
                                        l6795 5640                                          l6787 55E2  
                                        l9099 4D60                                          l9419 45F4  
                                        l7835 27E0                                          l7827 27C4  
                                        l7819 2780                                          l7771 261A  
                                        l7763 25B8                                          l7755 259A  
                                        l7747 2562                                          l7739 251C  
                                        l7691 244A                                          l7683 2422  
                                        l7675 23F8                                          l7667 23C8  
                                        l7659 23A8                                          l9363 3428  
                                        l9355 337E                                          l9347 3342  
                                        l9339 32FC                                          l9291 3D98  
                                        l9283 3D3A                                          l9275 3CE4  
                                        l9179 5764                                          l7931 42DA  
                                        l7923 4282                                          l7915 4232  
                                        l7843 5B36                                          l7851 5C3C  
                                        l8571 3290                                          l8563 325E  
                                        l8555 320A                                          l8547 3166  
                                        l8539 30CC                                          l8299 535E  
                                        l8467 4AEE                                          l8459 4AC4  
                                        l8491 350E                                          l8475 57EC  
                                        l8483 588C                                          l8811 1B1C  
                                        l8803 1ABE                                          l8731 175A  
                                        l8723 16CE                                          l8715 15EE  
                                        l8707 15B4                                          l8651 135C  
                                        l8635 12A6                                          l8619 11EE  
                                        l8627 1238                                          l8395 4C62  
                                        l9435 4F8A                                          l9427 4F36  
                                        l9267 446C                                          l9259 4424  
                                        l9195 54D2                                          l9187 54BE  
                                        l9451 468C                                          l9443 462A  
                                        l6877 5A92                                          l6869 5A6E  
                                        l6893 5436                                          l6885 5418  
                                        l6797 566C                                          l6789 55EA  
                                        l7837 27EE                                          l7829 27D2  
                                        l7773 262A                                          l7757 259E  
                                        l7749 2572                                          l7765 25BE  
                                        l7693 244E                                          l7685 2434  
                                        l7677 2408                                          l7669 23D6  
                                        l9381 34DC                                          l9357 3410  
                                        l9349 334E                                          l9373 3440  
                                        l9293 3DAC                                          l9277 3CF6  
                                        l7941 4342                                          l7933 42FA  
                                        l7925 428A                                          l7917 4236  
                                        l7909 4200                                          l7845 5B42  
                                        l7853 5C48                                          l8573 3298  
                                        l8565 326C                                          l8557 3224  
                                        l8549 316C                                          l8493 3566  
                                        l8477 57FC                                          l7861 5CEE  
                                        l8485 589E                                          l8821 1B6C  
                                        l8813 1B38                                          l8805 1AF2  
                                        l8741 17F4                                          l8733 178E  
                                        l8725 1702                                          l8717 15FE  
                                        l8709 15CC                                          l8661 142E  
                                        l8653 1390                                          l8637 12C2  
                                        l8629 125E                                          l8645 130C  
                                        l8581 10B4                                          l8397 4C76  
                                        l8389 4C30                                          l8901 3786  
                                        l9437 4F94                                          l9429 4F44  
                                        l9621 3CAC                                          l9269 447A  
                                        l9197 54DC                                          l9189 54C8  
                                        l9461 46B8                                          l9453 4690  
                                        l9445 463C                                          l6879 5A9E  
                                        l6895 543A                                          l6887 5428  
                                        l9391 44BE                                          l7839 27F0  
                                        l7791 26AC                                          l7783 2684  
                                        l7767 25E4                                          l7775 263A  
                                        l7759 25AC                                          l7695 2452  
                                        l7687 2442                                          l7679 240A  
                                        l9383 34E4                                          l9367 3434  
                                        l9359 341C                                          l9375 349A  
                                        l7951 2C70                                          l9295 3DC0  
                                        l9623 3D5A                                          l9279 3D12  
                                        l9287 3D46                                          l7871 40AA  
                                        l7935 430C                                          l7927 429E  
                                        l7919 4244                                          l7847 5B54  
                                        l7855 5C4C                                          l8567 3272  
                                        l8575 32AA                                          l8559 323E  
                                        l8495 357A                                          l8479 5856  
                                        l8831 1BAE                                          l8823 1B7C  
                                        l8815 1B4A                                          l8807 1AFA  
                                        l8751 18CC                                          l8743 1828  
                                        l8735 17A2                                          l8719 1612  
                                        l8727 1708                                          l8671 149A  
                                        l8655 1396                                          l8663 1462  
                                        l8647 1326                                          l8639 12DA  
                                        l8591 1108                                          l8583 10C4  
                                        l8399 4C84                                          l8911 3882  
                                        l8903 37FC                                          l9439 4F98  
                                        l6991 3B4A                                          l9199 54E8  
                                        l9463 46BC                                          l9455 4698  
                                        l9447 4640                                          l6897 543E  
                                        l6889 542E                                          l9393 44CC  
                                        l7793 26B4                                          l7785 268E  
                                        l7777 2660                                          l7769 2618  
                                        l7697 2456                                          l7689 2446  
                                        l9377 34B8                                          l7953 2C80  
                                        l7961 2CAA                                          l7945 2C52  
                                        l9625 3E7C                                          l9297 3DD4  
                                        l9289 3D84                                          l7881 40EC  
                                        l7873 40AE                                          l7865 4078  
                                        l7929 42AC                                          l7937 4312  
                                        l7849 5B58                                          l7857 5C68  
                                        l8569 3284                                          l8497 3588  
                                        l8489 34EE                                          l8841 1BDE  
                                        l8833 1BBC                                          l8825 1B8E  
                                        l8817 1B58                                          l8761 1922  
                                        l8809 1AFE                                          l8745 1880  
                                        l8753 18D0                                          l8737 17D4  
                                        l8729 1726                                          l8673 14A2  
                                        l8665 1472                                          l8657 13F2  
                                        l8593 1110                                          l8585 10D2  
                                        l8913 38A0                                          l8905 3804  
                                        l6993 3B66                                          l9481 4716  
                                        l9473 4706                                          l9465 46CA  
                                        l9457 46A0                                          l9449 4644  
                                        l6899 5442                                          l9395 44E0  
                                        l7795 26B8                                          l7787 269C  
                                        l7779 2670                                          l7699 245A  
                                        l9379 34C0                                          l7971 2CD6  
                                        l7963 2CBA                                          l7955 2C90  
                                        l7947 2C60                                          l9627 3A16  
                                        l9299 3DE6                                          l7891 4146  
                                        l7883 410A                                          l7875 40BC  
                                        l7867 407C                                          l7939 4322  
                                        l8851 1C40                                          l8843 1C04  
                                        l8835 1BC4                                          l8827 1B96  
                                        l8819 1B68                                          l8771 19C8  
                                        l8763 1986                                          l8755 18E0  
                                        l8747 1884                                          l8739 17E4  
                                        l8691 1552                                          l8683 14E6  
                                        l8675 14BC                                          l8667 1476  
                                        l8659 1426                                          l8595 1122  
                                        l8587 10DA                                          l8579 10AA  
                                        l8931 4B80                                          l8923 4B3C  
                                        l8915 38BA                                          l8907 380A  
                                        l6995 3B7E                                          l6987 3B02  
                                        l9475 470A                                          l9467 46DA  
                                        l9459 46A6                                          l9483 61D8  
                                        l9397 44E0                                          l9389 44B2  
                                        l7797 26C8                                          l7789 269E  
                                        l9629 3454                                          l7973 2CE6  
                                        l7981 2D10                                          l7965 2CC0  
                                        l7957 2CA0                                          l7949 2C6E  
                                        l7893 4174                                          l7885 4112  
                                        l7877 40DC                                          l7869 408A  
                                        l8861 1C86                                          l8853 1C5A  
                                        l8845 1C20                                          l8837 1BCC  
                                        l8829 1BA6                                          l8781 1A06  
                                        l8765 1994                                          l8773 19D0  
                                        l8757 18F2                                          l8749 18B8  
                                        l8685 14F8                                          l8693 1556  
                                        l8669 1488                                          l8677 14D4  
                                        l8597 1130                                          l8589 10FE  
                                        l8933 4B9C                                          l8925 4B66  
                                        l8917 38D4                                          l8909 386E  
                                        l6997 3B8C                                          l6989 3B06  
                                        l9477 470E                                          l9469 46EE  
                                        l9485 61DC                                          l9399 455C  
                                        l7799 26CA                                          l7991 2D52  
                                        l7983 2D20                                          l7975 2CF6  
                                        l7967 2CC6                                          l7959 2CA2  
                                        l7895 4194                                          l7887 4126  
                                        l7879 40E0                                          l8871 1CD8  
                                        l8863 1C98                                          l8855 1C60  
                                        l8847 1C28                                          l8839 1BD8  
                                        l8791 1A32                                          l8783 1A0C  
                                        l8775 19E4                                          l8767 19A8  
                                        l8759 18FE                                          l8695 155E  
                                        l8687 1514                                          l8599 1142  
                                        l8935 4BBE                                          l8919 38E2  
                                        l8951 1DAC                                          l8943 1D58  
                                        l6999 3B92                                          l9479 4712  
                                        l9487 61DE                                          l7985 2D36  
                                        l7977 2D06                                          l7969 2CD4  
                                        l7897 4196                                          l7889 4134  
                                        l8881 1D16                                          l8873 1CEA  
                                        l8865 1C9E                                          l8857 1C72  
                                        l8849 1C2E                                          l8785 1A18  
                                        l8777 19F2                                          l8793 1A38  
                                        l8769 19BA                                          l8697 1570  
                                        l8689 154A                                          l8937 4BD0  
                                        l8929 4B72                                          l8961 1E78  
                                        l8953 1DD8                                          l8945 1D86  
                                        l9489 61EC                                          l7987 2D46  
                                        l7995 2D66                                          l7979 2D08  
                                        l7899 41A8                                          l8875 1CF6  
                                        l8867 1CA4                                          l8859 1C7E  
                                        l8883 1D32                                          l8795 1A4A  
                                        l8787 1A28                                          l8779 1A02  
                                        l8699 1582                                          l8939 4C02  
                                        l8891 3714                                          l8971 1F68  
                                        l8963 1EA6                                          l8955 1DE8  
                                        l8947 1D98                                          l7997 2D76  
                                        l7989 2D4E                                          l8877 1CFE  
                                        l8797 1A5C                                          l8789 1A2C  
                                        l8893 372E                                          l8973 1F7A  
                                        l8965 1ED4                                          l8957 1E28  
                                        l8949 1DA8                                          l7999 2D76  
                                        l8879 1D10                                          l8799 1A60  
                                        l8895 376C                                          l8887 3704  
                                        l8991 20E6                                          l8975 1F9C  
                                        l8983 201E                                          l8967 1F30  
                                        l8959 1E38                                          STR_1 1048  
                                        STR_2 101B                                          l8897 3776  
                                        l8889 3712                                          l8993 212E  
                                        l8985 204C                                          l8977 1FAE  
                                        STR_3 1001                                          STR_4 1033  
                                        l8899 3780                                          l8995 2186  
                                        l8979 1FF2                                          STR_5 105C  
                                        STR_6 107A                                          l8989 20D4  
                                        STR_7 1088                                          STR_8 106C  
                                        l8999 21B2                                          STR_9 1095  
                                        _LATA 003FBA                                          _LATB 003FBB  
                                        _LATC 003FBC                                          _LATD 003FBD  
                                        _LATE 003FBE                                          _T2PR 003FAB  
                                        _T4PR 003F9F                                          _PMD0 0039C0  
                                        _PMD1 0039C1                                          _PMD2 0039C2  
                                        _PMD3 0039C3                                          u8000 408A  
                                        _PMD4 0039C4                                          u8001 4086  
                                        _PMD5 0039C5                                          u6410 5F8E  
                                        u8010 40BC                                          _PMD6 0039C6  
                                        u6411 5F8A                                          u8011 40B8  
                                        _PMD7 0039C7                                          u6420 4736  
                                        u8100 42AC                                          u6421 4732  
                                        u8021 40E6                                          u8101 42A8  
                                        u6430 4758                                          u8030 410A  
                                        u8110 42DA                                          u6431 4754  
                                        u8031 4106                                          u8111 42D6  
                                        u6440 4792                                          u8200 2D76  
                                        u8040 4134                                          u8120 4322  
                                        u9000 4B28                                          u2985 59F8  
                                        u6441 478E                                          u8201 2D72  
                                        u8041 4130                                          u8121 431E  
                                        u9001 4B22                                          u2986 59FA  
                                        u6450 47B4                                          u8210 2DEC  
                                        u8130 2C6E                                          u8050 4174  
                                        u9010 4B2A                                          u6451 47B0  
                                        u8211 2DE8                                          u8131 2C6A  
                                        u8051 4170                                          u6460 47DC  
                                        u6700 5610                                          u8300 2F06  
                                        u8220 2E0E                                          u8140 2C80  
                                        u8060 41BE                                          u7500 58C8  
                                        u9020 5842                                          u6461 47D8  
                                        u6701 560C                                          u8301 2F02  
                                        u8221 2E0A                                          u8141 2C7C  
                                        u8061 41BA                                          u7501 58C4  
                                        u6470 480E                                          u8310 2F1A  
                                        u8230 2E38                                          u8150 2C90  
                                        u8070 4212                                          u7510 58D8  
                                        u9110 35F6                                          u9030 5854  
                                        u6471 480A                                          u8311 2F16  
                                        u8231 2E34                                          u8151 2C8C  
                                        u8071 420E                                          u7511 58D4  
                                        u9111 35F2                                          u9031 5850  
                                        u8400 2892                                          u7600 23C0  
                                        u8320 2F34                                          u8240 2E5C  
                                        u8160 2CD4                                          u8080 4244  
                                        u7520 5908                                          u9200 3066  
                                        u9120 361A                                          u9040 5886  
                                        u6800 3B66                                          u8401 288E  
                                        u7601 23BC                                          u8321 2F30  
                                        u8241 2E58                                          u8161 2CD0  
                                        u8081 4240                                          u7521 5904  
                                        u9201 3062                                          u9105 359C  
                                        u9041 5880                                          u6801 3B62  
                                        u8410 28A2                                          u7610 23D6  
                                        u8330 2F7C                                          u8250 2E72  
                                        u8170 2CE6                                          u8090 4282  
                                        u7530 555E                                          u9210 3082  
                                        u9130 3636                                          u9106 35A6  
                                        u9050 5888                                          u6810 3B7E  
                                        u8411 289E                                          u7611 23D2  
                                        u8331 2F78                                          u8251 2E6E  
                                        u8171 2CE2                                          u8091 427E  
                                        u7531 555A                                          u9211 307E  
                                        u9131 3632                                          u9107 35B6  
                                        u9027 5834                                          u6811 3B7A  
                                        u8500 2B6A                                          u8420 28D8  
                                        u7700 2510                                          u7620 23E8  
                                        u8340 2FAC                                          u8260 2E90  
                                        u8180 2CF6                                          u7540 5570  
                                        u9300 326C                                          u9220 30B0  
                                        u9140 368A                                          u9060 589E  
                                        u6900 3C8C                                          u6820 3BAE  
                                        u8501 2B66                                          u8421 28D4  
                                        u7701 250C                                          u7621 23E4  
                                        u8341 2FA8                                          u8261 2E8C  
                                        u8181 2CF2                                          u7541 556C  
                                        u9301 3268                                          u9221 30AC  
                                        u9125 3610                                          u9061 589A  
                                        u6901 3C88                                          u6821 3BAA  
                                        u8510 2B84                                          u8430 28E8  
                                        u7710 2530                                          u7630 23F8  
                                        u8350 2FDA                                          u8270 2EB0  
                                        u8190 2D36                                          u7550 5598  
                                        u9310 3284                                          u9230 30BE  
                                        u9150 36A6                                          u9070 3538  
                                        u6830 3BCA                                          u8511 2B80  
                                        u8431 28E4                                          u7711 252C  
                                        u7631 23F4                                          u8351 2FD6  
                                        u8271 2EAC                                          u8191 2D32  
                                        u7551 5594                                          u9311 3280  
                                        u9231 30BA                                          u9151 36A2  
                                        u6831 3BC6                                          u8600 511A  
                                        u8520 2BCC                                          u8440 2A86  
                                        u8360 281E                                          u7800 2670  
                                        u7720 253E                                          u7640 2434  
                                        u8280 2EC2                                          u7560 55CE  
                                        u9240 31EC                                          u9160 36E2  
                                        u9080 3566                                          u9400 125E  
                                        u9320 10D2                                          u6840 3BE2  
                                        u8601 5116                                          u8521 2BC8  
                                        u8361 281A                                          u7801 266C  
                                        u7721 253A                                          u7641 2430  
                                        u8281 2EBE                                          u7561 55CA  
                                        u9241 31E8                                          u9161 36DE  
                                        u9145 3680                                          u9081 3562  
                                        u9401 125A                                          u9321 10CE  
                                        u6841 3BDE                                          u8530 2BFA  
                                        u8450 2AE0                                          u8370 2830  
                                        u6690 5600                                          u7810 269C  
                                        u7730 254E                                          u7650 2442  
                                        u7570 235C                                          u8290 2EF0  
                                        u9250 320A                                          u9170 3020  
                                        u8610 52C0                                          u9090 3588  
                                        u9410 128E                                          u9330 1122  
                                        u6850 3C06                                          u8531 2BF6  
                                        u8451 2ADC                                          u8371 282C  
                                        u6691 55FC                                          u7811 2698  
                                        u7731 254A                                          u7651 243E  
                                        u7571 2358                                          u8291 2EEC  
                                        u9251 3206                                          u9171 301A  
                                        u8611 52BC                                          u9091 3584  
                                        u9075 352E                                          u9411 1288  
                                        u9331 111E                                          u6851 3C02  
                                        u8540 2C34                                          u8460 2B00  
                                        u8380 2840                                          u7900 277E  
                                        u7820 26AC                                          u7740 2580  
                                        u7660 24B0                                          u7580 236E  
                                        u8700 4968                                          u9260 3224  
                                        u9180 3022                                          u8620 52DA  
                                        u9500 14E2                                          u9420 1290  
                                        u9340 1130                                          u6860 3C28  
                                        u8541 2C30                                          u8461 2AFC  
                                        u8445 2A7C                                          u8381 283C  
                                        u7901 277A                                          u7821 26A8  
                                        u7741 257C                                          u7661 24AC  
                                        u7581 236A                                          u8701 4964  
                                        u9261 3220                                          u8621 52D6  
                                        u9501 14DE                                          u9341 112C  
                                        u6861 3C24                                          u8550 507A  
                                        u8470 2B12                                          u8390 2880  
                                        u7910 2790                                          u7830 26C8  
                                        u7750 258E                                          u7670 24C8  
                                        u7590 237E                                          u8710 49A6  
                                        u9270 323E                                          u9190 3038  
                                        u8630 52F4                                          u9510 14F8  
                                        u9430 12A6                                          u9350 1142  
                                        u6870 3C40                                          u6790 3B4A  
                                        u8551 5076                                          u8471 2B0E  
                                        u8391 287C                                          u7911 278C  
                                        u7831 26C4                                          u7751 258A  
                                        u7671 24C2                                          u7591 237A  
                                        u8711 49A2                                          u9271 323A  
                                        u9191 3034                                          u8631 52F0  
                                        u9511 14F4                                          u9431 12A2  
                                        u9351 113E                                          u6871 3C3C  
                                        u6791 3B46                                          u8560 5094  
                                        u8480 2B40                                          u8800 48E6  
                                        u7920 27A0                                          u7840 26D8  
                                        u7760 25AC                                          u7680 24CA  
                                        u8720 49C4                                          u9280 324C  
                                        u8640 5312                                          u9600 1726  
                                        u9520 1514                                          u9440 1358  
                                        u9360 118A                                          u6880 3C56  
                                        u8561 5090                                          u8481 2B3C  
                                        u8801 48E2                                          u7921 279C  
                                        u7841 26D4                                          u7761 25A8  
                                        u8721 49C0                                          u9281 3248  
                                        u8641 530E                                          u9601 1722  
                                        u9521 1510                                          u9441 1354  
                                        u9361 1186                                          u6881 3C52  
                                        u8570 50BA                                          u8490 2B56  
                                        u8810 4906                                          u7930 27C0  
                                        u7850 26EA                                          u7770 25E4  
                                        u7690 24F2                                          u8730 49E4  
                                        u9290 325E                                          u8650 5328  
                                        u9610 178E                                          u9530 154A  
                                        u9450 13EE                                          u9370 11BA  
                                        u6890 3C6C                                          u8571 50B6  
                                        u8491 2B52                                          u8811 4902  
                                        u7931 27BC                                          u7851 26E6  
                                        u7771 25E0                                          u7691 24EE  
                                        u8731 49E0                                          u9291 325A  
                                        u8651 5324                                          u9611 178A  
                                        u9531 1546                                          u9451 13EA  
                                        u9371 11B4                                          u6891 3C68  
                                        u8580 50D8                                          u8820 4916  
                                        u7940 27D2                                          u7860 2700  
                                        u7780 262A                                          u8740 4A34  
                                        u8900 513A                                          u8660 534C  
                                        u9700 19C8                                          u9620 17D4  
                                        u9540 1570                                          u9460 1462  
                                        u9380 11BC                                          u8581 50D4  
                                        u8821 4912                                          u7941 27CE  
                                        u7861 26FC                                          u7781 2626  
                                        u8741 4A30                                          u8901 5136  
                                        u8661 5348                                          u9701 19C4  
                                        u9621 17D0                                          u9541 156C  
                                        u9461 145E                                          u8590 50F4  
                                        u7950 27EE                                          u7870 2716  
                                        u7790 2660                                          u8910 515C  
                                        u8670 538C                                          u8750 5D3C  
                                        u9710 19E4                                          u9630 17E4  
                                        u9550 1582                                          u9470 1488  
                                        u9390 11D2                                          u8591 50F0  
                                        u7951 27EA                                          u7871 2712  
                                        u7791 265C                                          u8911 5158  
                                        u8671 5388                                          u8751 5D38  
                                        u9711 19E0                                          u9631 17E0  
                                        u9551 157E                                          u9471 1484  
                                        u9391 11CE                                          u8831 4C36  
                                        u8760 4848                                          u7880 272A  
                                        u7960 5B78                                          u8920 51B2  
                                        u8680 53CA                                          u9800 1C40  
                                        u9720 19F2                                          u9640 1880  
                                        u9560 1590                                          u9480 149A  
                                        u8840 4C5A                                          u8761 4844  
                                        u7881 2726                                          u7961 5B74  
                                        u8921 51AE                                          u8681 53C6  
                                        u9801 1C3C                                          u9721 19EE  
                                        u9641 187C                                          u9561 158C  
                                        u9481 1496                                          u8841 4C56  
                                        u8770 487C                                          u7890 2744  
                                        u7970 5C68                                          u8930 51C0  
                                        u8690 53FE                                          u9810 1C5A  
                                        u9730 1A4A                                          u9650 18CC  
                                        u9570 15A6                                          u9490 14BC  
                                        u8850 4C84                                          u7891 2740  
                                        u7971 5C64                                          u8931 51BC  
                                        u8691 53FA                                          u9811 1C56  
                                        u9731 1A46                                          u9651 18C8  
                                        u9571 15A2                                          u9491 14B8  
                                        u8851 4C80                                          u8780 48AA  
                                        u8940 5BD8                                          u7980 5D1E  
                                        u9820 1C72                                          u9740 1B1C  
                                        u9660 18F2                                          u9580 15B4  
                                        u8860 4CC4                                          u9900 38BA  
                                        u8781 48A6                                          u8941 5BD4  
                                        u7981 5D18                                          u9821 1C6E  
                                        u9741 1B18                                          u9661 18EE  
                                        u9581 15B0                                          u8861 4CC0  
                                        u9901 38B6                                          u8790 48BE  
                                        u8950 4A7E                                          u7990 5D20  
                                        u9830 1CD2                                          u9750 1B38  
                                        u9670 1994                                          u9590 15DE  
                                        u8870 4E20                                          u9910 38D4  
                                        u8791 48BA                                          u8775 4872  
                                        u9831 1CCC                                          u9751 1B34  
                                        u9671 1990                                          u9591 15DA  
                                        u8871 4E1C                                          u9911 38D0  
                                        u8960 4A9C                                          u9840 1CD4  
                                        u9760 1B4A                                          u9680 19A8  
                                        u8880 4E4A                                          u9920 38E2  
                                        u8961 4A98                                          u9761 1B46  
                                        u9681 19A4                                          u8881 4E46  
                                        u9921 38DE                                          u8970 4AC4  
                                        u9850 1CEA                                          u9770 1B58  
                                        u9690 19BA                                          u9930 4B66  
                                        u8890 4E78                                          u8971 4AC0  
                                        u8955 4A74                                          u9851 1CE6  
                                        u9771 1B54                                          u9691 19B6  
                                        u9931 4B62                                          u8891 4E74  
                                        u8980 4AEE                                          u9780 1B8E  
                                        u9940 4B9C                                          u9860 3712  
                                        u8981 4AEA                                          u9781 1B8A  
                                        u9941 4B98                                          u9861 370E  
                                        u9790 1BBC                                          u9950 4BBE  
                                        u9870 372E                                          u9791 1BB8  
                                        u9951 4BBA                                          u9871 372A  
                                        u9960 4BD0                                          u9880 3882  
                                        u9961 4BCC                                          u9881 387E  
                                        u9970 4C02                                          u9890 38A0  
                                        _TMR2 003FAA                                          u8995 4B00  
                                        u9971 4BFE                                          u9891 389C  
                                        u9980 1D86                                          _TMR4 003F9E  
                                        u9981 1D82                                          u9990 1DE8  
                                        u9991 1DE4                                          _WPUA 003A41  
                                        _WPUB 003A51                                          _WPUC 003A61  
                                        _WPUD 003A71                                          _WPUE 003A81  
                         ?_UART1_Transmit_ISR 0001                                          abs@a 0026  
                                        _dbuf 0140                                          _main 61D8  
                                        _dtoa 2FEE                                          _loop 45FE  
                                        _prec 003C                                          _nout 0128  
                                        pad@i 002D                                          pad@p 002A  
                                        fsr1h 003FE2                                          fsr2h 003FDA  
                                        indf1 003FE7                                          indf2 003FDF  
                                        fsr1l 003FE1                                          pad@w 002F  
                                        fsr2l 003FD9                                          _utoa 3704  
                               ___fpclassifyf 4A3E                                          prodh 003FF4  
                                        prodl 003FF3                                          start 00AE  
                             _timer5ReloadVal 0196                               ___fldiv@new_exp 0065  
                             _TMR3_Initialize 5D5E                               _PWM5_Initialize 627A  
                           ??_CLC3_Initialize 0014                 ??_UART1_SetTxInterruptHandler 0016  
                                _tolower$3695 0020                    ??_TMR4_SetInterruptHandler 0016  
                           _UART1_rx_vect_isr 5CB4                                  ___param_bank 000000  
                  __end_of_PWM5_LoadDutyValue 5EA0                            ?_UART1_rx_vect_isr 0001  
                                       ??_abs 0028                                         ??_pad 002C  
              __size_of_OSCILLATOR_Initialize 0018                          ??_UART1_Transmit_ISR 0011  
               __end_of_OSCILLATOR_Initialize 62AA                                 ___fltol@sign1 0081  
                             __end_of___aldiv 4830                               __end_of___aodiv 4200  
                                       _ADCAP 003EF5                                         _ADACT 003EFE  
                     __end_of_CCP3_Initialize 6062                               __end_of___fladd 2802  
                                       ?_main 0001                                         ?_dtoa 0060  
                                       _ADCLK 003EFF                               __end_of___aomod 4364  
                                       _ADCNT 003EEB                                         _ADPCH 003EF1  
                             __end_of___fldiv 2FEE                                         _ADREF 003EFD  
                             __end_of___awdiv 512C                               __end_of___flneg 5D5E  
                                       ?_loop 0001                                         STR_10 109D  
                                       STR_13 1099                                         STR_14 10A1  
                                       STR_17 10A5                                         STR_19 10A5  
                             __end_of___awmod 535E                                         _ADRPT 003EEC  
                      ??_CCP4_DefaultCallBack 0007                               __end_of___flmul 2C52  
                    TMR5_ReadTimer@readValLow 0010                               __end_of___flsub 5B36  
                             __end_of___fltol 4938                                         u10000 1E38  
                                       u10001 1E34                                         u10010 1EA6  
                                       u10011 1EA2                                         u10020 1ED4  
                                       u10021 1ED0                                         u10030 1F7A  
                                       u10031 1F76                                         ?_utoa 0060  
                                       u10200 400E                                         u10040 204C  
                                       u10201 400A                                         u10105 5EF8  
                                       u10041 2048                                         u10210 401C  
                                       u10050 20CE                                         u10211 4018  
                                       u10115 5EC4                                         u10051 20C8  
                                       u10220 4056                                         u10140 3ED6  
                                       u10300 3A8A                                         u10060 20D0  
                                       u10221 4052                                         u10141 3ED2  
                                       u10125 5E90                                         u10301 3A86  
                                       u10230 4064                                         u10150 3EE4  
                                       u10310 3AAE                                         u10070 20E6  
                                       u10231 4060                                         u10151 3EE0  
                                       u10135 5E5C                                         u10311 3AAA  
                                       u10071 20E2                                         u10160 3F40  
                                       u10320 3AD6                                         u10400 56E6  
                                       u10080 21E0                                         u10240 57E2  
                                       u10161 3F3C                                         u10321 3AD2  
                                       u10401 56E2                                         u10081 21DC  
                                       u10241 57DE                                         u10170 3F96  
                                       u10250 4D3C                                         u10330 5722  
                                       u10090 22A6                                         u10410 437C  
                                       u10171 3F92                                         u10251 4D38  
                                       u10331 571E                                         u10091 22A2  
                                       u10411 4378                                         u10180 3FE0  
                                       u10260 4D58                                         u10340 5740  
                                       u10500 4492                                         u10420 4398  
                                       u10181 3FDC                                         u10261 4D54  
                                       u10341 573C                                         u10501 448E  
                                       u10421 4394                                         u10190 3FFE  
                                       u10270 4D98                                         u10510 3D12  
                                       u10350 575C                                         u10430 43AA  
                                       u10191 3FFA                                         u10271 4D94  
                                       u10511 3D0E                                         u10351 5758  
                                       u10431 43A6                                         u10280 4DB4  
                                       u10600 34B8                                         u10520 3D3A  
                                       u10440 43CC                                         u10360 54FE  
                                       u10281 4DB0                                         u10601 34B4  
                                       u10521 3D36                                         u10441 43C8  
                                       u10361 54FA                                         u10610 34DC  
                                       u10290 3A62                                         u10530 3DE6  
                                       u10450 43E4                                         u10370 5520  
                                       u10611 34D8                                         u10291 3A5E  
                                       u10531 3DE2                               __end_of___lodiv 4D20  
                                       u10451 43E0                                         u10371 551C  
                                       u10620 4570                                         u10540 3E0C  
                                       u10460 43F6                                         u10380 554A  
                                       u10700 468C                               ___awdiv@divisor 0016  
                                       u10621 456C                                         u10541 3E08  
                                       u10461 43F2                                         u10381 5546  
                                       u10701 4688                                         u10630 458C  
                                       u10550 32F8                                         u10390 5692  
                                       u10470 440C                                         u10710 46B8  
                                       u10631 4588                                         u10551 32F4  
                                       u10391 568E                                         u10471 4408  
                                       u10711 46B4                                         u10640 45B8  
                                       u10560 3318                                         u10480 444E  
                                       u10720 46CA                                         u10641 45B4  
                                       u10561 3314                                         u10481 444A  
                                       u10721 46C6                                         u10650 45E0  
                                       u10570 3336                                         u10490 446C  
                                       u10730 4702                                         _U1P1H 003DED  
                                       u10651 45DC                                         u10571 3332  
                                       u10491 4468                                         u10731 46FE  
                                       u10580 3364                                         u10660 4EEA  
                                       _U1P2H 003DEF                                         u10581 3360  
                                       u10661 4EE6                                         u10590 337E  
                                       u10670 4F00                                         _U1P1L 003DEC  
                                       _U1P3H 003DF1                                         u10591 337A  
                                       u10671 4EFC                                         _T3CLK 003FA9  
                                       u10680 462A                                         _T2CON 003FAC  
                                       _U1P2L 003DEE                                         u10681 4626  
                                       u10690 463C                                         _U1P3L 003DF0  
                                       u10691 4638                                         _T3CON 003FA6  
                                       _T5CLK 003F9D                                         _T4CON 003FA0  
                             __end_of___lomod 4ED2                                         _T2HLT 003FAD  
                                       _T5CON 003F9A                                         _T4HLT 003FA1  
                             __end_of___lwdiv 577C                                         _T2TMR 003FAA  
                                       _U1UIR 003DF8                                         i1l330 5CE6  
                                       _T2RST 003FAF                                         _U1RXB 003DE8  
                                       i1l324 5CAA                                         i1l333 5BB8  
                                       i1l350 633E                                         i1l343 52AC  
                                       i1l336 5BBC                                         i1l353 633C  
                                       _U1TXB 003DEA                                         i1l347 6112  
                                       i1l356 633A                                         _T4TMR 003F9E  
                                       _T4RST 003FA3                                         i2l409 6344  
                                       i1l692 608E                                         i2l534 613E  
                                       i2l438 5E00                                         i2l446 5F3A  
                                       i2l552 5FD4                                         i1l688 5C34  
                                       i2l529 61D6                                         i2l537 62C6  
                                       i1l698 6340                                         i2l476 5E36  
                                       i2l558 6214                                         i2l487 5F6E  
                         ??_UART1_rx_vect_isr 0012                                         i2l863 59C2  
                                       i2l856 5AEC                                         i2l868 618E  
                             ___awdiv@counter 0018                                         _OSCEN 0039DD  
                                vfpfcnvrt@fmt 00C9                                  vfpfcnvrt@llu 00D9  
                                       _TMR3H 003FA5                                         _TMR5H 003F99  
                                       _TMR3L 003FA4                                         _TMR5L 003F98  
                                       _TRISA 003FC2                                         _TRISB 003FC3  
                                       _TRISC 003FC4                                         _TRISD 003FC5  
                                       _TRISE 003FC6                                   _Default_ISR 6344  
                             _TMR4_Initialize 6090                               _PWM6_Initialize 6262  
                           _UART1_tx_vect_isr 5C78                              __end_of_TMR4_ISR 5C3C  
                     setSteering@steeringMode 0085                                         _delay 0040  
                                       _flags 003E                                         _fputc 554C  
                                       _fputs 5B36                         __size_of_calcMotorPow 014C  
                          ?_UART1_tx_vect_isr 0001                                         pad@fp 0026  
                                       _width 003A                                         _putch 62C8  
                                       dtoa@d 0062                                         dtoa@i 007A  
                                       dtoa@n 0072                                         dtoa@p 006C  
                                       dtoa@s 0070                                         dtoa@w 006E  
                            ?_SMT1_Initialize 0001                               __end_of_isupper 5D26  
                                       pclath 003FFA                                         tablat 003FF5  
                                 _BatteryVolt 012A                               _curveRightCount 00F9  
                       __size_of_calcSteering 01E0                                         utoa@d 0062  
                                       utoa@i 0076                                         utoa@n 006E  
                                       utoa@p 006A                                         utoa@w 006C  
                                       status 003FD8           __end_of_UART1_SetRxInterruptHandler 62E6  
                 _UART1_SetRxInterruptHandler 62DC                       __end_of_CCP4_Initialize 6034  
                              ?___fpclassifyf 0014                               __end_of_tolower 58B6  
                             __end_of_strncmp 4C30                              ___lodiv@dividend 0014  
         fp__UART1_DefaultFramingErrorHandler 0000      __end_of_UART1_DefaultFramingErrorHandler 6340  
   __size_of_UART1_DefaultFramingErrorHandler 0002            ??_UART1_DefaultFramingErrorHandler 0012  
           ?_UART1_DefaultFramingErrorHandler 0001              _UART1_DefaultFramingErrorHandler 633E  
                         ??_UART1_tx_vect_isr 0011                     __end_of_UART1_rx_vect_isr 5CEE  
                             _TMR5_Initialize 5A5A                               _PWM7_Initialize 624A  
                             __initialization 5D96                         TMR5_ReadTimer@readVal 000D  
                            ?_CCP3_CaptureISR 0001                                  __end_of_main 61F8  
                                __end_of_dtoa 32D4                                  __end_of_loop 4724  
                            ?_checkCurveCount 0001                                  __end_of_utoa 390C  
                 ??_UART1_DefaultErrorHandler 0012                       __end_of_TMR2_Initialize 6232  
                              _roundTimeCount 00F1                                  ?_UART1_Write 0001  
                                      ??_main 003A                                        ??_dtoa 0031  
                                      ??_loop 003A                                        ??_utoa 0031  
                               __activetblptr 000003                                  _calcMotorPow 44B2  
        __size_of_UART1_SetTxInterruptHandler 000A                     __end_of_UART1_tx_vect_isr 5CB2  
                                startAccell@i 01B6                              ___lodiv@quotient 0024  
                             _PWM8_Initialize 6232                              _UART1_Initialize 5408  
                                _calcSteering 3CE4                              ?_CCP4_CaptureISR 0001  
                                      _ADACCH 003EE9                                        _ADACCL 003EE8  
                                      _ADACCU 003EEA                                        _ADACQH 003EF4  
                                      _ADACQL 003EF3                                        _ADCON0 003EF8  
                                      _ADCON1 003EF9                                        _ADCON2 003EFA  
                                      _ADCON3 003EFB                                        _ADERRH 003EE3  
                                      _ADERRL 003EE2                                        ?_fputc 0016  
                                      _ADLTHH 003EDF                                        _ADLTHL 003EDE  
                                      ?_fputs 001F                                        _ADRESH 003EF0  
                                      _ADRESL 003EEF                                        _ADPREH 003EF7  
                                      _ADPREL 003EF6                                        _CCPR3H 003F75  
                                      _CCPR4H 003F71                                        _CCPR3L 003F74  
                                      _CCPR4L 003F70                                        _ADSTAT 003EFC  
                                      _ADUTHH 003EE1                              ___awdiv@dividend 0014  
                                      _ADUTHL 003EE0                            _PWM8_LoadDutyValue 5EA0  
                                      _ANSELA 003A40                                        ?_putch 0001  
                                      _ANSELB 003A50                                        _ANSELC 003A60  
                                      _ANSELD 003A70                                        _ANSELE 003A80  
                                      _RB1I2C 003A5A                                        _RB2I2C 003A5B  
                                      _RD0I2C 003A7A                                        _U1CON0 003DF2  
                                      _U1CON1 003DF3                                        _U1CON2 003DF4  
                                      _RC3I2C 003A6A                                        _RD1I2C 003A7B  
                                      _T3GATE 003FA8                                        _RC4I2C 003A6B  
                                      _U1BRGH 003DF6                                        _U1FIFO 003DF7  
                                      _T3GCON 003FA7                                        _U1BRGL 003DF5  
                                      _T5GATE 003F9C                                        _T5GCON 003F9B  
                                      _RA0PPS 003A00                                        _RA1PPS 003A01  
                                      _RA3PPS 003A03                                        _RA4PPS 003A04  
                                      _RB3PPS 003A0B                                        _T5GPPS 003AC9  
                                      i1l1251 6334                                        _ODCONA 003A42  
                                      _ODCONB 003A52                                        _ODCONC 003A62  
                                      _ODCOND 003A72                                        _ODCONE 003A82  
                     __end_of_PWM5_Initialize 6292                       __end_of_TMR3_Initialize 5D96  
                                      i1l7301 5BAE                                        i1l7311 521E  
                                      i1l7303 5BB2                                        i1l7321 528A  
                                      i1l7313 5236                                        i1l7305 51EE  
                                      i1l7323 52A8                                        i1l7315 5246  
                                      i1l7307 51FE                                        i1l7317 5256  
                                      i1l7309 520E                                        i1l7413 5C7E  
                                      i1l7247 632C                                        i1l7319 526E  
                                      i1l7415 5C92                                        i1l7441 5C26  
                                      i1l7417 5CBA                                        i1l7363 6062  
                                      i1l7443 5C2A                                        i1l7419 5CCE  
                                      i1l7365 6076                                        i1l7437 5C06  
                                      i1l7293 5B7A                                        i1l7439 5C0A  
                                      i1l7295 5B8A                                        i1l7297 5B9C  
                                      i1l6691 60FA                                        i1l7299 5B9E  
                                      i1l6693 60FC                                        i1l6925 6336  
                                      i1l6695 610C                                        i1l6697 6110  
                                      i1l6689 60E8                                        _INLVLA 003A44  
                                      _INLVLB 003A54                                        _INLVLC 003A64  
                                      _INLVLD 003A74                                        _INLVLE 003A84  
                                      i2l7331 5DFA                                        i2l7341 61F8  
                                      i2l7333 5E02                                        i2l7325 5DCC  
                                      i2l7421 5F08                                        i2l6711 6128  
                                      i2l7343 6204                                        i2l7431 5FA8  
                                      i2l7335 5E10                                        i2l7327 5DDA  
                                      i2l7423 5F18                                        i2l6713 612E  
                                      i2l6705 6114                                        i2l7345 620C  
                                      i2l7433 5FBC                                        i2l7337 5E1C  
                                      i2l7425 5F3C                                        i2l7329 5DE6  
                                      i2l7451 5AC8                                        i2l6707 6122  
                                      i2l6715 6134                                        i2l7347 6210  
                                      i2l7339 5E30                                        i2l7427 5F4C  
                                      i2l7461 599E                                        i2l7453 5ADA  
                                      i2l7445 5AA4                                        i2l6717 6138  
                                      i2l6709 6124                                        i2l7429 5FA4  
                                      i2l7463 59B0                                        i2l7455 5970  
                                      i2l7447 5AA8                                        i2l7465 6168  
                                      i2l7457 5974                                        i2l7449 5AB8  
                                      i2l7467 616C                                        i2l7459 598E  
                                      i2l6931 61CE                                        i2l6927 61B4  
                                      i2l6935 62BA                                        i2l6929 61C2  
                                ?_setSteering 0083                                        _OSCFRQ 0039DF  
                            __end_of_actSpeed 5676                                        _SMT1PR 003F1B  
                       _UART1_SetErrorHandler 62FA                              __end_of___xxtofl 4078  
                         ?_PWM8_LoadDutyValue 0014                              __end_of_getCurve 3CE4  
                    __end_of_CCP3_SetCallBack 632C                                  _CCPTMRS0bits 003F5E  
                                _CCPTMRS1bits 003F5F                                  vfprintf@cfmt 01AC  
                                      ___flge 4938                                        ___fleq 535E  
                                   ??___aldiv 001C                                     ??___aodiv 0024  
                                   ??___fladd 0036                                     ??___aomod 0024  
                                   ??___fldiv 0032                                     ??___awdiv 0018  
                                   ??___flneg 0018                                     ??___awmod 0018  
                                   ??___flmul 0032                                     ??___flsub 003A  
                                   ??___fltol 007D                                     ??___lodiv 0024  
                                   ??___lomod 0024                                        _efgtoa 10AA  
                                   ??___lwdiv 0018                                 _CCP3_CallBack 019A  
                                      _floorf 34EE                                  ?_TMR5_Reload 0001  
                     __end_of_PWM6_Initialize 627A                       __end_of_TMR4_Initialize 60BC  
                                      clear_0 5D9C                                        clear_1 5DA8  
                                      clear_2 5DB4                              ___awdiv@quotient 001A  
                                      _motPow 0130                               ___awmod@divisor 0016  
                     fp__CCP3_DefaultCallBack 0000                                        isa$std 000001  
                             ___awmod@counter 0018                                 _CCP4_CallBack 0198  
                                      _smtWay 0120                                        _printf 6140  
                                      pad@buf 0028                                        dtoa@fp 0060  
                            ?_CCP3_Initialize 0001                                        _strcpy 57EC  
                                      _strlen 5C3C                          ??_PWM8_LoadDutyValue 0016  
                            __end_of_setMotor 4E02                               _ADCC_Initialize 5912  
        __end_of_TMR4_DefaultInterruptHandler 6342         __size_of_TMR4_DefaultInterruptHandler 0002  
                _TMR4_DefaultInterruptHandler 6340                                        fputc@c 0016  
                              _PMD_Initialize 6190                                        fputs@c 0023  
                                      fputs@i 0024                                        fputs@s 001F  
                             ___fpclassifyf@e 001C                               ___fpclassifyf@u 001E  
                             ___fpclassifyf@x 0014                                  __mediumconst 0000  
                       __end_of_TMR5_GATE_ISR 5FD6                                        tblptrh 003FF7  
                                   ??_isupper 0016                                        tblptrl 003FF6  
                                      tblptru 003FF8             __size_of_ADCC_GetSingleConversion 0032  
                            __end_of_vfprintf 57EC                     ?_ADCC_GetSingleConversion 0014  
                                      utoa@fp 0060      TMR4_SetInterruptHandler@InterruptHandler 0014  
TMR5_SetGateInterruptHandler@InterruptHandler 0014   UART1_SetTxInterruptHandler@InterruptHandler 0014  
 UART1_SetRxInterruptHandler@InterruptHandler 0014          __end_of_UART1_SetOverrunErrorHandler 62F0  
       __size_of_UART1_SetOverrunErrorHandler 000A                  _UART1_SetOverrunErrorHandler 62E6  
                   _UART1_DefaultErrorHandler 6336                                     ??_tolower 001C  
                                   ??_strncmp 001A                 __size_of_INTERRUPT_Initialize 004C  
                __size_of_UART1_RxDataHandler 002C                             getCurve@deltaLeft 0016  
                                  ___flge@ff1 006D                               ??___fpclassifyf 0018  
                                  ___flge@ff2 0071                       __end_of_PWM7_Initialize 6262  
                     __end_of_TMR5_Initialize 5AA4                                  ___xxtofl@arg 0026  
                                ___xxtofl@exp 0025                             _SYSTEM_Initialize 5A10  
                                ___xxtofl@val 001C                                    ___fleq@ff1 0014  
                                  ___fleq@ff2 0018                                    __accesstop 0060  
                     __end_of__initialization 5DC6                                    ___flneg@f1 0014  
                            ?_CCP4_Initialize 0001                           setSteering@steering 0083  
                          ?_SYSTEM_Initialize 0001                                 ___rparam_used 000001  
                  __size_of_UART1_rx_vect_isr 003A                                    ___fltol@f1 0079  
                             _TMR5_WriteTimer 6114                            __size_of_calcSpeed 021A  
                   calcMotorPow@setSpeedDelta 0085                      __end_of_CCP4_SetCallBack 6322  
                              __pcstackCOMRAM 0001                         __end_of_TMR4_CallBack 6090  
                          __size_of_checkBatt 0092                                  ?_startAccell 0001  
                         ??_SYSTEM_Initialize 0018                                     ?_TMR4_ISR 0001  
                              ivt0x8_undefint 00AC                                 __end_of_fputc 55E2  
                               __end_of_fputs 5B7A                               fp__TMR4_10msISR 0000  
                               __end_of_putch 62D2                              ?_TMR2_Initialize 0001  
                     __end_of_PWM8_Initialize 624A                        __end_of_PMD_Initialize 61B4  
                 __size_of_PWM7_LoadDutyValue 0034                         CCP3_CaptureISR@module 0003  
                  __size_of_UART1_tx_vect_isr 003A                CCP3_SetCallBack@customCallBack 0014  
                   _UART1_FramingErrorHandler 01A0               fp__TMR4_DefaultInterruptHandler 0000  
               ?_TMR4_DefaultInterruptHandler 0001                       fp__CCP4_DefaultCallBack 0000  
                    __size_of_SMT1_PR_ACQ_ISR 004A                                       ??_fputc 001A  
                   __end_of_SYSTEM_Initialize 5A5A                                       ??_fputs 0023  
                             _CLC3_Initialize 60BC                                       ??_putch 0015  
                 PWM7_LoadDutyValue@dutyValue 0014                                    __pbssBANK0 00EB  
                                  __pbssBANK1 0100                 ?_UART1_SetOverrunErrorHandler 0014  
                      ?_UART1_SetErrorHandler 0014                              ?_PWM5_Initialize 0001  
                            ?_TMR3_Initialize 0001                                    __pnvCOMRAM 004C  
                    __size_of_SMT1_PW_ACQ_ISR 0054                         _TMR4_InterruptHandler 0190  
                                     IVTBASEH 003FD6                                       IVTBASEL 003FD5  
                                     IVTBASEU 003FD7                                       ?___flge 006D  
                                     ?___fleq 0014                                    ??_TMR4_ISR 0013  
                     __end_of_ADCC_Initialize 596E                    __end_of_PWM6_LoadDutyValue 5E6C  
                                     ?_efgtoa 0083          __end_of_TMR5_SetGateInterruptHandler 630E  
       __size_of_TMR5_SetGateInterruptHandler 000A                  _TMR5_SetGateInterruptHandler 6304  
                                     _CCP3CAP 003F77                                       _CCP4CAP 003F73  
                                     _CCP3CON 003F76                                       _CCP4CON 003F72  
                                     _ADFLTRH 003EE7                                       ?_floorf 0036  
                                     _ADFLTRL 003EE6                 __size_of_CCP3_DefaultCallBack 0036  
                                     _CCP3PPS 003ACF                                       _CCP4PPS 003AD0  
                                     _CLC3CON 003C60                                       _CLC3POL 003C61  
                                     _ADPREVH 003EEE                                       _ADPREVL 003EED  
                            ?_PWM6_Initialize 0001                              ?_TMR4_Initialize 0001  
                                     _ADSTPTH 003EE5                                       _ADSTPTL 003EE4  
                                     ?_printf 01AE                               ?_PMD_Initialize 0001  
                           _UART1_Receive_ISR 51EE                                    _getReverse 4364  
                                     ?_strcpy 0014                                       ?_strlen 0014  
                                     _U1ERRIE 003DFA                                     ?_actSpeed 0022  
                                     _U1ERRIR 003DF9                                 ?_TMR4_10msISR 0001  
                                ?_Default_ISR 0001                          __size_of_UART1_Write 005C  
                          ?_UART1_Receive_ISR 0001                                       _U1RXPPS 003AE5  
                                   ?___xxtofl 001C                            _PWM5_LoadDutyValue 5E6C  
                                  _distRightM 013C                       __size_of_TMR5_ReadTimer 0024  
                                     _OSCCON1 0039D9                                       _OSCCON3 0039DB  
                           __end_of_calcSpeed 34EE                                       _IVTLOCK 003FD4  
                          __size_of_vfpfcnvrt 05E8                                       _SMT1CLK 003F21  
                                     _OSCTUNE 0039DE                                       _SMT1CPR 003F15  
                                     _SMT1CPW 003F18                                       _PWM5DCH 003F6D  
                                     _PWM5DCL 003F6C                                       _PWM6DCH 003F69  
                                     _PWM6DCL 003F68                                       _PWM7DCH 003F65  
                                     _PWM7DCL 003F64                                       _SMT1SIG 003F22  
                                     _PWM8DCH 003F61                                       _PWM5CON 003F6E  
                                     _PWM8DCL 003F60                                       _SMT1PRH 003F1C  
                                     _PWM6CON 003F6A                                       _SMT1PRL 003F1B  
                                     _PWM7CON 003F66                                       _SMT1PRU 003F1D  
                                   ?_getCurve 0001                                       _SMT1WIN 003F23  
                                     _SMT1TMR 003F12                                       _PWM8CON 003F62  
                                     _SLRCONA 003A43                                       _SLRCONB 003A53  
                                     _SLRCONC 003A63                                       _SLRCOND 003A73  
                                     _SLRCONE 003A83                             __end_of_checkBatt 5708  
                         ??_UART1_Receive_ISR 0012                              ___lomod@dividend 0014  
                     __end_of_TMR5_WriteTimer 6140                           ?_PWM5_LoadDutyValue 0014  
                            ?_PWM7_Initialize 0001                              ?_TMR5_Initialize 0001  
                   INTERRUPT_Initialize@state 0014                          __size_of_setSteering 01F6  
                                   _CLCIN0PPS 003AD9                                     _CLCIN2PPS 003ADB  
                                   _CLCIN3PPS 003ADC                                       __Hparam 0000  
                                   ?_setMotor 0018                                       __Lparam 0000  
                    __end_of_UART1_Initialize 54AC                                       ___aldiv 4724  
                             __size_of___flge 0106                               __size_of___fleq 00AA  
                                     ___aodiv 4078                                       ___fladd 2340  
                                     ___aomod 4200                                       ___fldiv 2C52  
                                     ___awdiv 5068                                       ___flneg 5D26  
                                     ___awmod 52AE                                       ___flmul 2802  
                                     ___flsub 5AEE                                       ___fltol 4830  
                                     ___lodiv 4C30                                       ___lomod 4E02  
                                     ___lwdiv 5708                     __end_of_UART1_Receive_ISR 52AE  
                                   ?_vfprintf 01A6                          ??_PWM5_LoadDutyValue 0016  
                                __psmallconst 1000                               __size_of_efgtoa 0CAE  
                             __size_of_floorf 0216                                       __pcinit 5D96  
                   _TMR5_GateInterruptHandler 0194                              ?_PWM8_Initialize 0001  
                                     __ramtop 1000                   __size_of_UART1_Transmit_ISR 0044  
               ?_TMR5_SetGateInterruptHandler 0014                                       __ptext0 61D8  
                                     __ptext1 45FE                                       __ptext2 54AC  
                                     __ptext3 4364                                       __ptext4 3B02  
                                     __ptext5 4ED2                                       __ptext6 6140  
                                     __ptext7 577C                                       __ptext8 1D58  
                                     __ptext9 3704                               __size_of_printf 0028  
                              ??_TMR4_10msISR 0013                          __size_of_TMR5_Reload 000E  
                                  ??_actSpeed 0024                               __size_of_strcpy 006A  
                             __size_of_strlen 003A                       __end_of_CLC3_Initialize 60E8  
                       _OSCILLATOR_Initialize 6292                                     _T2CONbits 003FAC  
                                __size_of_abs 0040                                  __size_of_pad 00C2  
                                  ??___xxtofl 0020                                     _T3CONbits 003FA6  
                            ___awmod@dividend 0014                 __size_of_CCP4_DefaultCallBack 0036  
                            ___aldiv@dividend 0014                                     _T4CONbits 003FA0  
                    ??_PIN_MANAGER_Initialize 0014             __size_of_TMR4_SetInterruptHandler 000A  
                                   _T2HLTbits 003FAD                                     _T5CONbits 003F9A  
                   ?_TMR4_SetInterruptHandler 0014                                       _isupper 5CEE  
                                     efgtoa@c 0089                                       efgtoa@d 00A7  
                                     efgtoa@e 00BF                                       efgtoa@f 0085  
                                     efgtoa@g 00BB                                       efgtoa@h 00B1  
                                     efgtoa@i 00B9                                       efgtoa@l 00B5  
                                     efgtoa@m 00A1                                       efgtoa@n 00C1  
                                     efgtoa@p 00AB                                       efgtoa@t 009B  
                                     efgtoa@u 00C3                                       efgtoa@w 00AD  
                                   _IPR10bits 00398A                                       _smtDuty 0124  
                                   _T4HLTbits 003FA1                                    ??_getCurve 0014  
                                   _PIE10bits 00399A                    __size_of_SYSTEM_Initialize 004A  
                                     _tolower 5856                                       _strncmp 4B3C  
                        end_of_initialization 5DC6                                       floorf@e 0077  
                                   _T2RSTbits 003FAF                                       floorf@m 0073  
                                     floorf@u 0079                                       floorf@x 0036  
              ??_TMR4_DefaultInterruptHandler 0013                                     _T4RSTbits 003FA3  
                                   _PIR10bits 0039AA                                       fputc@fp 0018  
                           ??_SMT1_PR_ACQ_ISR 0011           __end_of_UART1_SetTxInterruptHandler 62DC  
                 _UART1_SetTxInterruptHandler 62D2                                       fputs@fp 0021  
              ??_UART1_SetOverrunErrorHandler 0016                                    ??_setMotor 001A  
                    __size_of_SMT1_Initialize 0030                             __end_of_vfpfcnvrt 2340  
                                  efgtoa@mode 00B0                             ?_CCP3_SetCallBack 0014  
                                  efgtoa@sign 00A9                              ___aldiv@quotient 001E  
                                     postdec2 003FDD                             ??_SMT1_PW_ACQ_ISR 0011  
                                     postinc0 003FEE                                       postinc1 003FE6  
                                     postinc2 003FDE                              ?_ADCC_Initialize 0001  
                          ??_CCP3_SetCallBack 0016                                    ??_vfprintf 003A  
            __end_of_ADCC_GetSingleConversion 5FA2                             UART1_Write@txData 0014  
                         _UART1_RxDataHandler 60E8                                       strcpy@d 001C  
                                     strlen@a 0016                                       strcpy@s 001A  
                                     strlen@s 0014                          __size_of_startAccell 00A0  
                                 ?_getReverse 0001                                     _PORTBbits 003FCB  
                                   _PORTDbits 003FCD                      __size_of_CCP3_CaptureISR 0034  
                    __size_of_checkCurveCount 00CC                                   ___fladd@grs 0078  
                          getCurve@deltaRight 0018                                 ___xxtofl@sign 0024  
                                 ___fldiv@grs 0067                                   ___fldiv@rem 0060  
                        ?_UART1_RxDataHandler 0001                              ?_TMR5_WriteTimer 0009  
                        setSteering@steeringB 008A                          setSteering@steeringF 0088  
                     TMR5_WriteTimer@timerVal 0009                                   ___flmul@grs 0062  
                              _curveLeftCount 00FA                      __size_of_CCP4_CaptureISR 0034  
           CCP4_DefaultCallBack@capturedValue 0005                             ?_CCP4_SetCallBack 0014  
                __end_of_INTERRUPT_Initialize 5A10                                __end_of___flge 4A3E  
                              __end_of___fleq 5408                    __size_of_UART1_Receive_ISR 00C0  
                          ??_CCP4_SetCallBack 0016                                   _CLC3CONbits 003C60  
                                 vfpfcnvrt@ap 00CB                                   vfpfcnvrt@ct 00E7  
                                 vfpfcnvrt@fp 00C7                                   vfpfcnvrt@ll 00D1  
                              __end_of_efgtoa 1D58                             __size_of_TMR4_ISR 003C  
                              __end_of_floorf 3704                        ?_OSCILLATOR_Initialize 0001  
                                  floorf@F527 0118                                __end_of_printf 6168  
                 __size_of_PWM8_LoadDutyValue 0034                              ?_CLC3_Initialize 0001  
                              __end_of_strcpy 5856                                __end_of_strlen 5C76  
                              _TMR5_ReadTimer 61B4                           start_initialization 5D96  
                             ___lodiv@divisor 001C                               ___lodiv@counter 002C  
              ??_TMR5_SetGateInterruptHandler 0016               __size_of_PIN_MANAGER_Initialize 00CA  
                                 __end_of_abs 5BFE                                   __end_of_pad 51EE  
                        __size_of_Default_ISR 0002                       ??_UART1_SetErrorHandler 0016  
                    __size_of_CCP3_Initialize 002E                         ??_UART1_RxDataHandler 0012  
                                 putch@txData 0015                                    ivt0x8_base 0008  
                               _uart1RxBuffer 0108                                   _actMotorPow 00EB  
                       __end_of___fpclassifyf 4B3C                                 _uart1TxBuffer 0110  
                         __size_of_getReverse 014E                          __end_of_TMR4_10msISR 6336  
                                 vfprintf@fmt 01A8                                      ??___flge 0036  
                                    ??___fleq 001C                              ??_PMD_Initialize 0014  
                      __size_of_TMR5_GATE_ISR 0032                                  _oldDistRight 0136  
                    __size_of_CCP4_Initialize 002E                                      ??_efgtoa 008A  
                                    ??_floorf 006D                    __end_of_PWM7_LoadDutyValue 5F08  
                           ??_SMT1_Initialize 0014                                      ??_printf 003A  
                                    ??_strcpy 0018                                      ??_strlen 0016  
                      __end_of_TMR5_ReadTimer 61D8                         CCP4_CaptureISR@module 0007  
                                   ___fladd@a 0071                                     ___fladd@b 006D  
                         calcMotorPow@addMPow 0089                      _ADCC_GetSingleConversion 5F70  
                                   ___fldiv@a 002E                                     ___fldiv@b 002A  
                 PWM5_LoadDutyValue@dutyValue 0014                         TMR4_ISR@CountCallBack 00F3  
                                   ___flmul@a 002E                                     ___flmul@b 002A  
                                 __pbssCOMRAM 003A                                     ___flsub@a 007D  
                                   ___flsub@b 0079                            _UART1_ErrorHandler 019C  
                               __pcstackBANK0 0060                                 __pcstackBANK1 01A6  
                           __size_of_actSpeed 0094                              ___aodiv@dividend 0014  
                          _PWM6_LoadDutyValue 5E38                      __size_of_TMR2_Initialize 001C  
                           __size_of___xxtofl 01B4                      _UART1_RxInterruptHandler 01A4  
                           ??_CCP3_CaptureISR 0003                  __end_of_CCP3_DefaultCallBack 5E02  
                      __size_of_TMR4_CallBack 002E                             ??_checkCurveCount 003A  
                                   _calcSpeed 32D4                             __size_of_getCurve 01E2  
                         ?_PWM6_LoadDutyValue 0014                   PWM8_LoadDutyValue@dutyValue 0014  
                fp__UART1_DefaultErrorHandler 0000                                     _checkBatt 5676  
                                _currentSpeed 00ED                  ?_UART1_SetRxInterruptHandler 0014  
                                   __pnvBANK1 0190                                   _efgtoa$3570 0093  
                                 _efgtoa$3565 008F                                   _efgtoa$3574 0095  
                                 _efgtoa$3566 0091                                   _efgtoa$3575 0097  
                                 _efgtoa$3576 0099                            setMotor@motorPower 0018  
                            ___lwdiv@dividend 0014                        _PIN_MANAGER_Initialize 4F9E  
                                   _dtoa$3541 006A                      __size_of_PWM5_Initialize 0018  
                    __size_of_TMR3_Initialize 0038                             ?_UART1_Initialize 0001  
        __end_of_UART1_SetFramingErrorHandler 62FA         __size_of_UART1_SetFramingErrorHandler 000A  
                _UART1_SetFramingErrorHandler 62F0                                      ?___aldiv 0014  
             ADCC_GetSingleConversion@channel 0018                                      ?___aodiv 0014  
                                    ?___fladd 006D                                      ?___aomod 0014  
                           __size_of_setMotor 00E2              __end_of_TMR4_SetInterruptHandler 6318  
                                    ?___fldiv 002A                                      ?___awdiv 0014  
                                   __ptext100 5FA4                                     __ptext101 61F8  
                                   __ptext102 62BA                              ___aodiv@quotient 0026  
                                    ?___flneg 0014                                     __ptext103 6114  
                                   __ptext104 61B4                                     __ptext105 5AA4  
                                   __ptext106 5970                                     __ptext107 6168  
                                   __ptext108 0000             CCP3_DefaultCallBack@capturedValue 0001  
                                    ?___awmod 0014                             ??_CCP4_CaptureISR 0007  
                                    ?___flmul 002A                                      ?___flsub 0079  
                                    ?___fltol 0079                                      ?___lodiv 0014  
                                    ?___lomod 0014                                      ?___lwdiv 0014  
                          ??_UART1_Initialize 0016                                     _distLeftM 013E  
                                   _distFront 00FD                              _uart1RxLastError 0042  
                               ??_UART1_Write 0014                                     _distRight 00F5  
                        ??_PWM6_LoadDutyValue 0016                                     _cycle10ms 00FB  
                           __size_of_vfprintf 0070                               ?_TMR5_ReadTimer 0009  
                               ?_calcMotorPow 0001                               ___lomod@divisor 001C  
                                 __smallconst 1000                               ___lomod@counter 0024  
                                    _CLC3GLS0 003C66                                      _CLC3GLS1 003C67  
                                    _CLC3GLS2 003C68                                      _CLC3GLS3 003C69  
                                   _driveMode 00FC           fp__UART1_DefaultOverrunErrorHandler 0000  
    __end_of_UART1_DefaultOverrunErrorHandler 633E     __size_of_UART1_DefaultOverrunErrorHandler 0002  
          ??_UART1_DefaultOverrunErrorHandler 0012             ?_UART1_DefaultOverrunErrorHandler 0001  
            _UART1_DefaultOverrunErrorHandler 633C                                      _CLC3SEL0 003C62  
                                    _CLC3SEL1 003C63                                      _CLC3SEL2 003C64  
                                    _CLC3SEL3 003C65                               _SMT1_PR_ACQ_ISR 5AA4  
                               ?_calcSteering 0001                                      ?_isupper 0014  
                    __size_of_PWM6_Initialize 0018                      __size_of_TMR4_Initialize 002C  
                               _TMR5_GATE_ISR 5FA4                                     _curveMode 0041  
                            ___lwdiv@quotient 0019                                      ?_tolower 001A  
                              __size_of_fputc 0096                                      _T2CLKCON 003FAE  
                              __size_of_fputs 0044                                      ?_strncmp 0014  
                                 _U1ERRIRbits 003DF9                                      _T4CLKCON 003FA2  
                              __size_of_putch 000A                                    ?_calcSpeed 0001  
                        _INTERRUPT_Initialize 59C4                                 ??_setSteering 0086  
                             ___aldiv@divisor 0018                               _SMT1_PW_ACQ_ISR 5970  
                             ___aldiv@counter 001C                                    ?_checkBatt 0001  
       UART1_SetErrorHandler@interruptHandler 0014                                      _IPR1bits 003981  
                __end_of_CCP4_DefaultCallBack 5E38                             ??_CCP3_Initialize 0016  
                                    _IPR3bits 003983                                      _PIE1bits 003991  
                                    _PIE3bits 003993                                      _IPR7bits 003987  
                                    _IPR8bits 003988                                      _IPR9bits 003989  
                                    _PIE7bits 003997                                      _PIE8bits 003998  
                                    _PIE9bits 003999                                      _IVTBASEH 003FD6  
                                    _IVTBASEL 003FD5                                      _IVTBASEU 003FD7  
               ??_UART1_SetRxInterruptHandler 0016                                      i1u720_20 5B8A  
                                    i1u720_21 5B86                                      i1u721_20 5BAE  
                                    i1u721_21 5BAA                                      i1u722_20 520E  
                                    i1u722_21 520A                                      i1u731_20 6076  
                                    i1u731_21 6072                                      i1u724_20 5246  
                                    i1u723_28 5224                                      i1u724_21 5242  
                                    i1u723_29 5236                                      i1u732_28 607C  
                                    i1u741_20 5CCE                                      i1u740_28 5C98  
                                    i1u732_29 608E                                      i1u741_21 5CCA  
                                    i1u740_29 5CAA                                      i1u726_20 528A  
                                    i1u725_28 525C                                      i1u726_21 5286  
                                    i1u725_29 526E                                      i1u742_28 5CD4  
                                    i1u742_29 5CE6                                      i1u727_28 5290  
                                    i1u727_29 52A4                                      _PIR1bits 0039A1  
                                    i1u747_20 5C26                                      i1u659_20 610C  
                                    i1u739_20 5C92                                      i1u747_21 5C22  
                                    i1u659_21 6108                                      i1u739_21 5C8E  
                                    _PIR4bits 0039A4                                      _PIR6bits 0039A6  
                                    i2u660_40 6122                                      i2u660_41 611E  
                                    _PIR7bits 0039A7                                      _PIR8bits 0039A8  
                                    i2u728_40 5DDA                                      i2u743_48 5F26  
                                    i2u728_41 5DD6                                      i2u743_49 5F3A  
                                    i2u745_40 5FBC                                      i2u729_40 5E10  
                                    i2u744_48 5F5A                                      i2u745_41 5FB8  
                                    i2u729_41 5E0C                                      i2u744_49 5F6E  
                                    _PIR9bits 0039A9                                      i2u746_48 5FC2  
                                    i2u746_49 5FD4                                      i2u748_40 5AC8  
                                    i2u748_41 5AC4                                      i2u749_40 599E  
                                    i2u749_41 599A                                      _SMT1CON0 003F1E  
                                    _SMT1CON1 003F1F                      __size_of_PWM7_Initialize 0018  
                    __size_of_TMR5_Initialize 004A                                      _SMT1STAT 003F20  
                           _SMT1_Overflow_ISR 6168                                      _TMR4_ISR 5C00  
                  __end_of_UART1_Transmit_ISR 5BBE                                 _TMR4_CallBack 6062  
                                   _smtPeriod 0048                 ?_UART1_SetFramingErrorHandler 0014  
                               ??_TMR5_Reload 000B                   __size_of_PWM5_LoadDutyValue 0034  
                                   _vfpfcnvrt 1D58                            ?_SMT1_Overflow_ISR 0001  
                           _getBatteryVoltage 62AA                                  ??_getReverse 003A  
                              ??_calcMotorPow 0083                                    _ADCON0bits 003EF8  
                                  _ADCON1bits 003EF9                                    _ADCON2bits 003EFA  
                                  _ADCON3bits 003EFB                            ?_getBatteryVoltage 0001  
                           ??_CCP4_Initialize 0016                                ??_calcSteering 008C  
                         ??_SMT1_Overflow_ISR 0011                     TMR5_ReadTimer@readValHigh 000F  
                   __size_of_CCP3_SetCallBack 000A                                ?_TMR5_GATE_ISR 0001  
                         __end_of_UART1_Write 5912                      __size_of_PWM8_Initialize 0018  
                                _SMT1CON0bits 003F1E                                  _SMT1CON1bits 003F1F  
                                  vfpfcnvrt@c 00EA                                    vfpfcnvrt@f 00E3  
                         ??_getBatteryVoltage 0019                                   _INTCON0bits 003FD2  
                       ?_INTERRUPT_Initialize 0001                         __size_of_TMR4_10msISR 000A  
                        fp__UART1_Receive_ISR 0000                        _uart1TxBufferRemaining 004C  
                    checkCurveCount@roundTime 01B6                             ??_TMR2_Initialize 0014  
                                _uart1RxCount 0043                            __end_of_getReverse 44B2  
                                  _ADSTATbits 003EFC                                   _followCount 0132  
                                    __Hrparam 0000                     __end_of_SMT1_Overflow_ISR 6190  
                         __end_of_setSteering 3B02                                    vfprintf@ap 01AA  
                                    __Lrparam 0000                                    vfprintf@fp 01A6  
                                 _oldDistLeft 0138                                 ??_startAccell 003A  
                              ?_TMR4_CallBack 0001                                calcSpeed@speed 0087  
                   __end_of_getBatteryVoltage 62BA                       ??_OSCILLATOR_Initialize 0014  
                            __size_of___aldiv 010C                              __size_of___aodiv 0188  
                            __size_of___fladd 04C2                              __size_of___aomod 0164  
                            __size_of___fldiv 039C                              __size_of___awdiv 00C4  
                            __size_of___flneg 0038                              __size_of___awmod 00B0  
                            __size_of___flmul 0450                              __size_of___flsub 0048  
                            __size_of___fltol 0108                                  _SMT1STATbits 003F20  
                        _CCP3_DefaultCallBack 5DCC                       __end_of_SMT1_PR_ACQ_ISR 5AEE  
                            __size_of___lodiv 00F0                              __size_of___lomod 00D0  
                                  ?_vfpfcnvrt 00C7                              __size_of___lwdiv 0074  
                             ___aodiv@divisor 001C                             ??_PWM5_Initialize 0014  
                           ??_TMR3_Initialize 0014                               ___aodiv@counter 0024  
                    _TMR4_SetInterruptHandler 630E                            ___fpclassifyf@F465 011C  
                                    _actSpeed 55E2          __size_of_UART1_SetRxInterruptHandler 000A  
                                _TMR4_10msISR 632C                                      ___xxtofl 3EC4  
                    __size_of_ADCC_Initialize 005C                           __end_of_TMR5_Reload 62C8  
                   __size_of_CCP4_SetCallBack 000A                                      __pivt0x8 0008  
                             ___lwdiv@divisor 0016                       __end_of_SMT1_PW_ACQ_ISR 59C4  
                             ___lwdiv@counter 0018                                      _getCurve 3B02  
                                    __ptext10 4E02                                      __ptext11 4C30  
                                    __ptext20 5D26                                      __ptext12 4B3C  
                                    __ptext21 535E                                      __ptext13 10AA  
                                    __ptext30 5BBE                                      __ptext22 52AE  
                                    __ptext14 5856                                      __ptext31 4200  
                                    __ptext23 2FEE                                      __ptext15 5CEE  
                                    __ptext40 2C52                                      __ptext32 4078  
                                    __ptext24 512C                                      __ptext16 57EC  
                                    __ptext41 5E38                                      __ptext33 5708  
                                    __ptext25 5C3C                                      __ptext17 34EE  
                                    __ptext50 4724                                      __ptext42 5E6C  
                                    __ptext34 5676                                      __ptext26 5B36  
                                    __ptext18 4A3E                                      __ptext51 3EC4  
                                    __ptext43 32D4                                      __ptext35 62AA  
                                    __ptext27 554C                                      __ptext19 5AEE  
                                    __ptext60 62F0                                      __ptext52 4830  
                                    __ptext44 2340                                      __ptext36 5F70  
                                    __ptext28 62C8                                      __ptext61 62FA  
                                    __ptext53 2802                                      __ptext45 44B2  
                                    __ptext37 4938                                      __ptext29 58B6  
                                    __ptext70 624A                                      __ptext62 5A5A  
                                    __ptext54 5068                                      __ptext46 4D20  
                                    __ptext38 3CE4                                      __ptext71 6262  
                                    __ptext63 6304                                      __ptext55 5A10  
                                    __ptext47 5EA0                                      __ptext39 390C  
                                    __ptext80 6034                                      __ptext72 627A  
                                    __ptext64 6090                                      __ptext56 5408  
                                    __ptext48 5ED4                                      __ptext81 6322  
                                    __ptext73 6190                                      __ptext65 630E  
                                    __ptext57 62D2                                      __ptext49 55E2  
                                    __ptext90 60E8                                      __ptext82 5912  
                                    __ptext74 4F9E                                      __ptext66 5D5E  
                                    __ptext58 62DC                                      __ptext91 5C00  
                                    __ptext83 5C78                                      __ptext75 6292  
                                    __ptext67 6216                                      __ptext59 62E6  
                                    __ptext92 6062                                      __ptext84 5B7A  
                                    __ptext76 59C4                                      __ptext68 5FD6  
                                    __ptext93 632C                                      __ptext85 5CB4  
                                    __ptext77 60BC                                      __ptext69 6232  
                                    __ptext94 6340                                      __ptext86 51EE  
                                    __ptext78 6006                                      __ptext95 6344  
                                    __ptext87 633C                                      __ptext79 6318  
                                    __ptext96 5F08                                      __ptext88 633E  
                                    __ptext97 5DCC                                      __ptext89 6336  
                                    __ptext98 5F3C                                      __ptext99 5E02  
                            __size_of_isupper 0038                                      _distLeft 00F7  
              __size_of_UART1_SetErrorHandler 000A                                   ??_calcSpeed 0083  
               __end_of_UART1_SetErrorHandler 6304                              __size_of_tolower 0060  
                                  _T3GCONbits 003FA7                                    strcpy@dest 0014  
                            __size_of_strncmp 00F4                                   ??_checkBatt 003A  
                           ??_TMR4_Initialize 0016                             ??_PWM6_Initialize 0014  
                               __size_of_main 0020                                 __size_of_dtoa 02E6  
                                    _oldSpeed 012E                                    _T5GCONbits 003F9B  
                               __size_of_loop 0126                                 __size_of_utoa 0208  
                             _SMT1_Initialize 5FD6                                   _IVTLOCKbits 003FD4  
                                    _setMotor 4D20                                      _setSpeed 00EF  
                    __size_of_TMR5_WriteTimer 002C                                      efgtoa@fp 0083  
                                    efgtoa@ne 009F                                      efgtoa@pp 009D  
                                    efgtoa@ou 00A3                     _UART1_OverrunErrorHandler 019E  
UART1_SetOverrunErrorHandler@interruptHandler 0014                                      isa$xinst 000000  
          __size_of_UART1_DefaultErrorHandler 0006                    ??_ADCC_GetSingleConversion 0016  
                  ?_UART1_DefaultErrorHandler 0001                         ?_CCP3_DefaultCallBack 0001  
                                    _vfprintf 577C                                     printf@fmt 01AE  
                  __end_of_PWM8_LoadDutyValue 5ED4                               _CCP3_CaptureISR 5F08  
                                 _UART1_Write 58B6                         fp__UART1_Transmit_ISR 0000  
                           ??_TMR5_Initialize 0016                             ??_PWM7_Initialize 0014  
         fp__TMR5_DefaultGateInterruptHandler 0000      __end_of_TMR5_DefaultGateInterruptHandler 6216  
   __size_of_TMR5_DefaultGateInterruptHandler 001E            ??_TMR5_DefaultGateInterruptHandler 0011  
           ?_TMR5_DefaultGateInterruptHandler 0001              _TMR5_DefaultGateInterruptHandler 61F8  
                            ___aomod@dividend 0014                               _checkCurveCount 4ED2  
                         __end_of_startAccell 554C                                _battCheckCount 0134  
                               ??_Default_ISR 0001                ??_UART1_SetFramingErrorHandler 0016  
                                _reverseCount 013A                               ??_TMR5_GATE_ISR 0011  
                              _vfpfcnvrt$3601 00E1                   __end_of_UART1_RxDataHandler 6114  
                                 _uart1RxHead 0045                          _CCP4_DefaultCallBack 5E02  
                                 _uart1TxHead 0047                                   _uart1RxTail 0044  
                                 _uart1TxTail 0046                        ??_INTERRUPT_Initialize 0014  
                          _PWM7_LoadDutyValue 5ED4                                      intlevel1 0000  
                                    intlevel2 0000                      __size_of_CLC3_Initialize 002C  
                                 _setSteering 390C                               _CCP4_CaptureISR 5F3C  
                     ?_PIN_MANAGER_Initialize 0001                             ??_PWM8_Initialize 0014  
                         ?_PWM7_LoadDutyValue 0014                          __end_of_calcMotorPow 45FE  
                                   strcpy@src 0016                                      isupper@c 0014  
                                   strncmp@_l 0014                                     strncmp@_r 0016  
                             ??_TMR4_CallBack 0013                    __size_of_SMT1_Overflow_ISR 0028  
                        __end_of_calcSteering 3EC4                           _uart1RxStatusBuffer 0100  
                                 efgtoa@nmode 00AF                                      printf@ap 01B4  
                            ??_TMR5_ReadTimer 000B                    __size_of_getBatteryVoltage 0010  
UART1_SetFramingErrorHandler@interruptHandler 0014             __end_of_UART1_DefaultErrorHandler 633C  
                             ___aomod@divisor 001C                                   ??_vfpfcnvrt 00CD  
                                 _reverseTime 012C                               ___aomod@counter 0024  
                            ?_SMT1_PR_ACQ_ISR 0001                                   _TMR5_Reload 62BA  
                                  _SMT1SIGPPS 003AD2                                    _SMT1WINPPS 003AD1  
                        ??_PWM7_LoadDutyValue 0016                                      tolower@c 001A  
                               actSpeed@speed 0024                        __size_of___fpclassifyf 00FE  
                       ?_CCP4_DefaultCallBack 0005                     calcMotorPow@oldSpeedDelta 0087  
                                    strncmp@l 001B                                      strncmp@n 0018  
                            _CCP3_SetCallBack 6322                                      strncmp@r 001D  
                   __size_of_UART1_Initialize 00A4                                  ___aldiv@sign 001D  
                            ?_SMT1_PW_ACQ_ISR 0001                               _CCP3_Initialize 6034  
                 PWM6_LoadDutyValue@dutyValue 0014                             calcSteering@delta 008E  
                    _UART1_TxInterruptHandler 01A2                                 ___fladd@signs 0075  
                         __end_of_Default_ISR 6346                       __end_of_SMT1_Initialize 6006  
                                ___aodiv@sign 0025                __end_of_PIN_MANAGER_Initialize 5068  
                           ??_ADCC_Initialize 0014                                  ___fladd@aexp 0076  
                                ___fladd@bexp 0077                  ?_UART1_SetTxInterruptHandler 0014  
                                ___aomod@sign 0025                       __end_of_CCP3_CaptureISR 5F3C  
