

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Jan 31 09:01:35 2024

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F46K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1
    87                           	psect	text72,global,reloc=2,class=CODE,delta=1
    88                           	psect	text73,global,reloc=2,class=CODE,delta=1
    89                           	psect	text74,global,reloc=2,class=CODE,delta=1
    90                           	psect	text75,global,reloc=2,class=CODE,delta=1
    91                           	psect	text76,global,reloc=2,class=CODE,delta=1
    92                           	psect	text77,global,reloc=4,class=CODE,delta=1
    93                           	psect	text78,global,reloc=2,class=CODE,delta=1
    94                           	psect	text79,global,reloc=4,class=CODE,delta=1
    95                           	psect	text80,global,reloc=2,class=CODE,delta=1
    96                           	psect	text81,global,reloc=2,class=CODE,delta=1
    97                           	psect	text82,global,reloc=2,class=CODE,delta=1
    98                           	psect	text83,global,reloc=2,class=CODE,delta=1
    99                           	psect	text84,global,reloc=2,class=CODE,delta=1
   100                           	psect	text85,global,reloc=4,class=CODE,delta=1
   101                           	psect	text86,global,reloc=2,class=CODE,delta=1
   102                           	psect	text87,global,reloc=2,class=CODE,delta=1
   103                           	psect	text88,global,reloc=2,class=CODE,delta=1
   104                           	psect	text89,global,reloc=4,class=CODE,delta=1
   105                           	psect	text90,global,reloc=4,class=CODE,delta=1
   106                           	psect	text91,global,reloc=2,class=CODE,delta=1
   107                           	psect	text92,global,reloc=4,class=CODE,delta=1
   108                           	psect	text93,global,reloc=2,class=CODE,delta=1
   109                           	psect	text94,global,reloc=4,class=CODE,delta=1
   110                           	psect	text95,global,reloc=2,class=CODE,delta=1
   111                           	psect	text96,global,reloc=2,class=CODE,delta=1
   112                           	psect	text97,global,reloc=2,class=CODE,delta=1
   113                           	psect	text98,global,reloc=2,class=CODE,delta=1
   114                           	psect	text99,global,reloc=4,class=CODE,delta=1
   115                           	psect	text100,global,reloc=4,class=CODE,delta=1
   116                           	psect	text101,global,reloc=4,class=CODE,delta=1
   117                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   118                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   119                           	psect	text102,global,reloc=4,class=CODE,delta=1
   120                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   121                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   122                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   123  0000                     
   124                           ; Version 2.20
   125                           ; Generated 05/05/2020 GMT
   126                           ; 
   127                           ; Copyright © 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   128                           ; All rights reserved.
   129                           ; 
   130                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   131                           ; 
   132                           ; Redistribution and use in source and binary forms, with or without modification, are
   133                           ; permitted provided that the following conditions are met:
   134                           ; 
   135                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   136                           ;        conditions and the following disclaimer.
   137                           ; 
   138                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   139                           ;        of conditions and the following disclaimer in the documentation and/or other
   140                           ;        materials provided with the distribution.
   141                           ; 
   142                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   143                           ;        software without specific prior written permission.
   144                           ; 
   145                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   146                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   147                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   148                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   149                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   150                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   151                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   152                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   153                           ; 
   154                           ; 
   155                           ; Code-generator required, PIC18F46K42 Definitions
   156                           ; 
   157                           ; SFR Addresses
   158  0000                     
   159                           	psect	nvCOMRAM
   160  00004C                     __pnvCOMRAM:
   161                           	callstack 0
   162  00004C                     _uart1TxBufferRemaining:
   163                           	callstack 0
   164  00004C                     	ds	1
   165                           
   166                           	psect	nvBANK1
   167  00018A                     __pnvBANK1:
   168                           	callstack 0
   169  00018A                     _TMR4_InterruptHandler:
   170                           	callstack 0
   171  00018A                     	ds	2
   172  00018C                     _timer3ReloadVal:
   173                           	callstack 0
   174  00018C                     	ds	2
   175  00018E                     _TMR5_GateInterruptHandler:
   176                           	callstack 0
   177  00018E                     	ds	2
   178  000190                     _timer5ReloadVal:
   179                           	callstack 0
   180  000190                     	ds	2
   181  000192                     _CCP4_CallBack:
   182                           	callstack 0
   183  000192                     	ds	2
   184  000194                     _CCP3_CallBack:
   185                           	callstack 0
   186  000194                     	ds	2
   187  000196                     _UART1_ErrorHandler:
   188                           	callstack 0
   189  000196                     	ds	2
   190  000198                     _UART1_OverrunErrorHandler:
   191                           	callstack 0
   192  000198                     	ds	2
   193  00019A                     _UART1_FramingErrorHandler:
   194                           	callstack 0
   195  00019A                     	ds	2
   196  00019C                     _UART1_TxInterruptHandler:
   197                           	callstack 0
   198  00019C                     	ds	2
   199  00019E                     _UART1_RxInterruptHandler:
   200                           	callstack 0
   201  00019E                     	ds	2
   202  0000                     _PIR4bits	set	14756
   203  0000                     _PIR1bits	set	14753
   204  0000                     _PIE1bits	set	14737
   205  0000                     _PIE7bits	set	14743
   206  0000                     _PIR7bits	set	14759
   207  0000                     _PIR6bits	set	14758
   208  0000                     _PIE8bits	set	14744
   209  0000                     _PIR8bits	set	14760
   210  0000                     _PIE10bits	set	14746
   211  0000                     _PIR10bits	set	14762
   212  0000                     _PIE9bits	set	14745
   213  0000                     _PIR9bits	set	14761
   214  0000                     _IPR9bits	set	14729
   215  0000                     _IPR7bits	set	14727
   216  0000                     _IPR8bits	set	14728
   217  0000                     _IPR10bits	set	14730
   218  0000                     _IPR1bits	set	14721
   219  0000                     _IPR3bits	set	14723
   220  0000                     _PIE3bits	set	14739
   221  0000                     _PMD7	set	14791
   222  0000                     _PMD6	set	14790
   223  0000                     _PMD5	set	14789
   224  0000                     _PMD4	set	14788
   225  0000                     _PMD3	set	14787
   226  0000                     _PMD2	set	14786
   227  0000                     _PMD1	set	14785
   228  0000                     _PMD0	set	14784
   229  0000                     _OSCTUNE	set	14814
   230  0000                     _OSCFRQ	set	14815
   231  0000                     _OSCEN	set	14813
   232  0000                     _OSCCON3	set	14811
   233  0000                     _OSCCON1	set	14809
   234  0000                     _CCP4PPS	set	15056
   235  0000                     _SMT1SIGPPS	set	15058
   236  0000                     _CLCIN2PPS	set	15067
   237  0000                     _RB3PPS	set	14859
   238  0000                     _RA3PPS	set	14851
   239  0000                     _SMT1WINPPS	set	15057
   240  0000                     _CLCIN0PPS	set	15065
   241  0000                     _RA4PPS	set	14852
   242  0000                     _T5GPPS	set	15049
   243  0000                     _RA0PPS	set	14848
   244  0000                     _U1RXPPS	set	15077
   245  0000                     _RA1PPS	set	14849
   246  0000                     _CLCIN3PPS	set	15068
   247  0000                     _CCP3PPS	set	15055
   248  0000                     _INLVLE	set	14980
   249  0000                     _INLVLD	set	14964
   250  0000                     _INLVLC	set	14948
   251  0000                     _INLVLB	set	14932
   252  0000                     _INLVLA	set	14916
   253  0000                     _SLRCONE	set	14979
   254  0000                     _SLRCOND	set	14963
   255  0000                     _SLRCONC	set	14947
   256  0000                     _SLRCONB	set	14931
   257  0000                     _SLRCONA	set	14915
   258  0000                     _ODCOND	set	14962
   259  0000                     _ODCONC	set	14946
   260  0000                     _ODCONB	set	14930
   261  0000                     _ODCONA	set	14914
   262  0000                     _ODCONE	set	14978
   263  0000                     _RD1I2C	set	14971
   264  0000                     _RD0I2C	set	14970
   265  0000                     _RC4I2C	set	14955
   266  0000                     _RC3I2C	set	14954
   267  0000                     _RB2I2C	set	14939
   268  0000                     _RB1I2C	set	14938
   269  0000                     _WPUC	set	14945
   270  0000                     _WPUA	set	14913
   271  0000                     _WPUB	set	14929
   272  0000                     _WPUE	set	14977
   273  0000                     _WPUD	set	14961
   274  0000                     _ANSELA	set	14912
   275  0000                     _ANSELE	set	14976
   276  0000                     _ANSELB	set	14928
   277  0000                     _ANSELC	set	14944
   278  0000                     _ANSELD	set	14960
   279  0000                     _CLC3CON	set	15456
   280  0000                     _CLC3GLS3	set	15465
   281  0000                     _CLC3GLS2	set	15464
   282  0000                     _CLC3GLS1	set	15463
   283  0000                     _CLC3GLS0	set	15462
   284  0000                     _CLC3SEL3	set	15461
   285  0000                     _CLC3SEL2	set	15460
   286  0000                     _CLC3SEL1	set	15459
   287  0000                     _CLC3SEL0	set	15458
   288  0000                     _CLC3POL	set	15457
   289  0000                     _CLC3CONbits	set	15456
   290  0000                     _U1RXB	set	15848
   291  0000                     _U1TXB	set	15850
   292  0000                     _U1ERRIRbits	set	15865
   293  0000                     _U1ERRIE	set	15866
   294  0000                     _U1ERRIR	set	15865
   295  0000                     _U1UIR	set	15864
   296  0000                     _U1FIFO	set	15863
   297  0000                     _U1BRGH	set	15862
   298  0000                     _U1BRGL	set	15861
   299  0000                     _U1CON2	set	15860
   300  0000                     _U1CON1	set	15859
   301  0000                     _U1CON0	set	15858
   302  0000                     _U1P3H	set	15857
   303  0000                     _U1P3L	set	15856
   304  0000                     _U1P2H	set	15855
   305  0000                     _U1P2L	set	15854
   306  0000                     _U1P1H	set	15853
   307  0000                     _U1P1L	set	15852
   308  0000                     _ADCON1bits	set	16121
   309  0000                     _ADERRL	set	16098
   310  0000                     _ADERRH	set	16099
   311  0000                     _ADPREVL	set	16109
   312  0000                     _ADPREVH	set	16110
   313  0000                     _ADFLTRL	set	16102
   314  0000                     _ADFLTRH	set	16103
   315  0000                     _ADSTATbits	set	16124
   316  0000                     _ADACCL	set	16104
   317  0000                     _ADACCH	set	16105
   318  0000                     _ADCON2bits	set	16122
   319  0000                     _ADCNT	set	16107
   320  0000                     _ADCON3bits	set	16123
   321  0000                     _ADRESL	set	16111
   322  0000                     _ADRESH	set	16112
   323  0000                     _ADCON0bits	set	16120
   324  0000                     _ADCON0	set	16120
   325  0000                     _ADCLK	set	16127
   326  0000                     _ADACT	set	16126
   327  0000                     _ADREF	set	16125
   328  0000                     _ADSTAT	set	16124
   329  0000                     _ADCON3	set	16123
   330  0000                     _ADCON2	set	16122
   331  0000                     _ADCON1	set	16121
   332  0000                     _ADPREH	set	16119
   333  0000                     _ADPREL	set	16118
   334  0000                     _ADCAP	set	16117
   335  0000                     _ADACQH	set	16116
   336  0000                     _ADACQL	set	16115
   337  0000                     _ADPCH	set	16113
   338  0000                     _ADRPT	set	16108
   339  0000                     _ADACCU	set	16106
   340  0000                     _ADSTPTH	set	16101
   341  0000                     _ADSTPTL	set	16100
   342  0000                     _ADUTHH	set	16097
   343  0000                     _ADUTHL	set	16096
   344  0000                     _ADLTHH	set	16095
   345  0000                     _ADLTHL	set	16094
   346  0000                     _SMT1TMR	set	16146
   347  0000                     _SMT1CPR	set	16149
   348  0000                     _SMT1CPW	set	16152
   349  0000                     _SMT1PR	set	16155
   350  0000                     _SMT1STATbits	set	16160
   351  0000                     _SMT1CON0bits	set	16158
   352  0000                     _SMT1CON1bits	set	16159
   353  0000                     _SMT1PRL	set	16155
   354  0000                     _SMT1PRH	set	16156
   355  0000                     _SMT1PRU	set	16157
   356  0000                     _SMT1SIG	set	16162
   357  0000                     _SMT1WIN	set	16163
   358  0000                     _SMT1CLK	set	16161
   359  0000                     _SMT1STAT	set	16160
   360  0000                     _SMT1CON1	set	16159
   361  0000                     _SMT1CON0	set	16158
   362  0000                     _CCPTMRS1bits	set	16223
   363  0000                     _CCPTMRS0bits	set	16222
   364  0000                     _PORTBbits	set	16331
   365  0000                     _PR2	set	16299
   366  0000                     _TMR2	set	16298
   367  0000                     _T2CONbits	set	16300
   368  0000                     _T2RSTbits	set	16303
   369  0000                     _T2HLTbits	set	16301
   370  0000                     _T2CON	set	16300
   371  0000                     _T2TMR	set	16298
   372  0000                     _T2PR	set	16299
   373  0000                     _T2RST	set	16303
   374  0000                     _T2HLT	set	16301
   375  0000                     _T2CLKCON	set	16302
   376  0000                     _PWM6DCL	set	16232
   377  0000                     _PWM6DCH	set	16233
   378  0000                     _PWM6CON	set	16234
   379  0000                     _PWM5DCL	set	16236
   380  0000                     _PWM5DCH	set	16237
   381  0000                     _PWM5CON	set	16238
   382  0000                     _PWM8DCL	set	16224
   383  0000                     _PWM8DCH	set	16225
   384  0000                     _PWM8CON	set	16226
   385  0000                     _PWM7DCL	set	16228
   386  0000                     _PWM7DCH	set	16229
   387  0000                     _PWM7CON	set	16230
   388  0000                     _PR4	set	16287
   389  0000                     _TMR4	set	16286
   390  0000                     _T4CONbits	set	16288
   391  0000                     _T4RSTbits	set	16291
   392  0000                     _T4HLTbits	set	16289
   393  0000                     _T4CON	set	16288
   394  0000                     _T4TMR	set	16286
   395  0000                     _T4PR	set	16287
   396  0000                     _T4RST	set	16291
   397  0000                     _T4HLT	set	16289
   398  0000                     _T4CLKCON	set	16290
   399  0000                     _T3GCONbits	set	16295
   400  0000                     _T3CONbits	set	16294
   401  0000                     _T3CON	set	16294
   402  0000                     _TMR3L	set	16292
   403  0000                     _TMR3H	set	16293
   404  0000                     _T3CLK	set	16297
   405  0000                     _T3GATE	set	16296
   406  0000                     _T3GCON	set	16295
   407  0000                     _T5GCONbits	set	16283
   408  0000                     _T5CONbits	set	16282
   409  0000                     _T5CON	set	16282
   410  0000                     _TMR5L	set	16280
   411  0000                     _TMR5H	set	16281
   412  0000                     _T5CLK	set	16285
   413  0000                     _T5GATE	set	16284
   414  0000                     _T5GCON	set	16283
   415  0000                     _CCPR4L	set	16240
   416  0000                     _CCPR4H	set	16241
   417  0000                     _CCP4CAP	set	16243
   418  0000                     _CCP4CON	set	16242
   419  0000                     _CCPR3L	set	16244
   420  0000                     _CCPR3H	set	16245
   421  0000                     _CCP3CAP	set	16247
   422  0000                     _CCP3CON	set	16246
   423  0000                     _PORTDbits	set	16333
   424  0000                     _IVTBASEL	set	16341
   425  0000                     _IVTBASEH	set	16342
   426  0000                     _IVTBASEU	set	16343
   427  0000                     _IVTLOCKbits	set	16340
   428  0000                     _IVTLOCK	set	16340
   429  0000                     _INTCON0bits	set	16338
   430  0000                     _TRISD	set	16325
   431  0000                     _TRISC	set	16324
   432  0000                     _TRISB	set	16323
   433  0000                     _TRISA	set	16322
   434  0000                     _TRISE	set	16326
   435  0000                     _LATC	set	16316
   436  0000                     _LATB	set	16315
   437  0000                     _LATA	set	16314
   438  0000                     _LATD	set	16317
   439  0000                     _LATE	set	16318
   440  0000                     _GIE	set	130711
   441                           
   442                           	psect	smallconst
   443  001000                     __psmallconst:
   444                           	callstack 0
   445  001000  00                 	db	0
   446  001001                     STR_7:
   447                           
   448                           ; BSR set to: 1
   449  001001  53                 	db	83	;'S'
   450  001002  77                 	db	119	;'w'
   451  001003  69                 	db	105	;'i'
   452  001004  74                 	db	116	;'t'
   453  001005  63                 	db	99	;'c'
   454  001006  68                 	db	104	;'h'
   455  001007  21                 	db	33
   456  001008  0A                 	db	10
   457  001009  44                 	db	68	;'D'
   458  00100A  65                 	db	101	;'e'
   459  00100B  6C                 	db	108	;'l'
   460  00100C  74                 	db	116	;'t'
   461  00100D  4C                 	db	76	;'L'
   462  00100E  65                 	db	101	;'e'
   463  00100F  66                 	db	102	;'f'
   464  001010  74                 	db	116	;'t'
   465  001011  3A                 	db	58	;':'
   466  001012  20                 	db	32
   467  001013  25                 	db	37
   468  001014  64                 	db	100	;'d'
   469  001015  0A                 	db	10
   470  001016  00                 	db	0
   471  001017                     STR_6:
   472                           
   473                           ; BSR set to: 1
   474  001017  43                 	db	67	;'C'
   475  001018  75                 	db	117	;'u'
   476  001019  72                 	db	114	;'r'
   477  00101A  76                 	db	118	;'v'
   478  00101B  65                 	db	101	;'e'
   479  00101C  54                 	db	84	;'T'
   480  00101D  69                 	db	105	;'i'
   481  00101E  6D                 	db	109	;'m'
   482  00101F  65                 	db	101	;'e'
   483  001020  3A                 	db	58	;':'
   484  001021  20                 	db	32
   485  001022  25                 	db	37
   486  001023  64                 	db	100	;'d'
   487  001024  0A                 	db	10
   488  001025  00                 	db	0
   489  001026                     STR_10:
   490                           
   491                           ; BSR set to: 1
   492  001026  53                 	db	83	;'S'
   493  001027  74                 	db	116	;'t'
   494  001028  6F                 	db	111	;'o'
   495  001029  70                 	db	112	;'p'
   496  00102A  20                 	db	32
   497  00102B  52                 	db	82	;'R'
   498  00102C  65                 	db	101	;'e'
   499  00102D  76                 	db	118	;'v'
   500  00102E  65                 	db	101	;'e'
   501  00102F  72                 	db	114	;'r'
   502  001030  73                 	db	115	;'s'
   503  001031  65                 	db	101	;'e'
   504  001032  0A                 	db	10
   505  001033  00                 	db	0
   506  001034                     STR_8:
   507                           
   508                           ; BSR set to: 1
   509  001034  52                 	db	82	;'R'
   510  001035  65                 	db	101	;'e'
   511  001036  76                 	db	118	;'v'
   512  001037  65                 	db	101	;'e'
   513  001038  72                 	db	114	;'r'
   514  001039  73                 	db	115	;'s'
   515  00103A  65                 	db	101	;'e'
   516  00103B  52                 	db	82	;'R'
   517  00103C  69                 	db	105	;'i'
   518  00103D  67                 	db	103	;'g'
   519  00103E  74                 	db	116	;'t'
   520  00103F  68                 	db	104	;'h'
   521  001040  0A                 	db	10
   522  001041  00                 	db	0
   523  001042                     STR_9:
   524                           
   525                           ; BSR set to: 1
   526  001042  52                 	db	82	;'R'
   527  001043  65                 	db	101	;'e'
   528  001044  76                 	db	118	;'v'
   529  001045  65                 	db	101	;'e'
   530  001046  72                 	db	114	;'r'
   531  001047  73                 	db	115	;'s'
   532  001048  65                 	db	101	;'e'
   533  001049  4C                 	db	76	;'L'
   534  00104A  65                 	db	101	;'e'
   535  00104B  66                 	db	102	;'f'
   536  00104C  74                 	db	116	;'t'
   537  00104D  0A                 	db	10
   538  00104E  00                 	db	0
   539  00104F                     STR_4:
   540                           
   541                           ; BSR set to: 1
   542  00104F  52                 	db	82	;'R'
   543  001050  69                 	db	105	;'i'
   544  001051  67                 	db	103	;'g'
   545  001052  68                 	db	104	;'h'
   546  001053  74                 	db	116	;'t'
   547  001054  20                 	db	32
   548  001055  4F                 	db	79	;'O'
   549  001056  75                 	db	117	;'u'
   550  001057  74                 	db	116	;'t'
   551  001058  21                 	db	33
   552  001059  0A                 	db	10
   553  00105A  00                 	db	0
   554  00105B                     STR_5:
   555                           
   556                           ; BSR set to: 1
   557  00105B  46                 	db	70	;'F'
   558  00105C  72                 	db	114	;'r'
   559  00105D  6F                 	db	111	;'o'
   560  00105E  6E                 	db	110	;'n'
   561  00105F  74                 	db	116	;'t'
   562  001060  20                 	db	32
   563  001061  4F                 	db	79	;'O'
   564  001062  75                 	db	117	;'u'
   565  001063  74                 	db	116	;'t'
   566  001064  21                 	db	33
   567  001065  0A                 	db	10
   568  001066  00                 	db	0
   569  001067                     STR_3:
   570                           
   571                           ; BSR set to: 1
   572  001067  4C                 	db	76	;'L'
   573  001068  65                 	db	101	;'e'
   574  001069  66                 	db	102	;'f'
   575  00106A  74                 	db	116	;'t'
   576  00106B  20                 	db	32
   577  00106C  4F                 	db	79	;'O'
   578  00106D  75                 	db	117	;'u'
   579  00106E  74                 	db	116	;'t'
   580  00106F  21                 	db	33
   581  001070  0A                 	db	10
   582  001071  00                 	db	0
   583  001072                     STR_1:
   584                           
   585                           ; BSR set to: 1
   586  001072  42                 	db	66	;'B'
   587  001073  56                 	db	86	;'V'
   588  001074  6F                 	db	111	;'o'
   589  001075  6C                 	db	108	;'l'
   590  001076  74                 	db	116	;'t'
   591  001077  3A                 	db	58	;':'
   592  001078  20                 	db	32
   593  001079  25                 	db	37
   594  00107A  66                 	db	102	;'f'
   595  00107B  0A                 	db	10
   596  00107C  00                 	db	0
   597  00107D                     STR_2:
   598                           
   599                           ; BSR set to: 1
   600  00107D  49                 	db	73	;'I'
   601  00107E  6E                 	db	110	;'n'
   602  00107F  43                 	db	67	;'C'
   603  001080  75                 	db	117	;'u'
   604  001081  72                 	db	114	;'r'
   605  001082  76                 	db	118	;'v'
   606  001083  65                 	db	101	;'e'
   607  001084  0A                 	db	10
   608  001085  00                 	db	0
   609  001086                     STR_11:
   610                           
   611                           ; BSR set to: 1
   612  001086  49                 	db	73	;'I'
   613  001087  4E                 	db	78	;'N'
   614  001088  46                 	db	70	;'F'
   615  001089  00                 	db	0
   616  00108A                     STR_15:
   617                           
   618                           ; BSR set to: 1
   619  00108A  4E                 	db	78	;'N'
   620  00108B  41                 	db	65	;'A'
   621  00108C  4E                 	db	78	;'N'
   622  00108D  00                 	db	0
   623  00108E                     STR_12:
   624                           
   625                           ; BSR set to: 1
   626  00108E  69                 	db	105	;'i'
   627  00108F  6E                 	db	110	;'n'
   628  001090  66                 	db	102	;'f'
   629  001091  00                 	db	0
   630  001092                     STR_16:
   631                           
   632                           ; BSR set to: 1
   633  001092  6E                 	db	110	;'n'
   634  001093  61                 	db	97	;'a'
   635  001094  6E                 	db	110	;'n'
   636  001095  00                 	db	0
   637  001096                     STR_19:
   638                           
   639                           ; BSR set to: 1
   640  001096  6C                 	db	108	;'l'
   641  001097  66                 	db	102	;'f'
   642  001098  00                 	db	0
   643  001099  00                 	db	0	; dummy byte at the end
   644  0000                     
   645                           ; #config settings
   646                           
   647                           	psect	cinit
   648  005808                     __pcinit:
   649                           	callstack 0
   650  005808                     start_initialization:
   651                           	callstack 0
   652  005808                     __initialization:
   653                           	callstack 0
   654                           
   655                           ; Clear objects allocated to BANK1 (138 bytes)
   656  005808  EE00  F100         	lfsr	0,__pbssBANK1
   657  00580C  0E8A               	movlw	138
   658  00580E                     clear_0:
   659  00580E  6AEE               	clrf	postinc0,c
   660  005810  06E8               	decf	wreg,f,c
   661  005812  E1FD               	bnz	clear_0
   662                           
   663                           ; Clear objects allocated to BANK0 (26 bytes)
   664  005814  EE00  F0E5         	lfsr	0,__pbssBANK0
   665  005818  0E1A               	movlw	26
   666  00581A                     clear_1:
   667  00581A  6AEE               	clrf	postinc0,c
   668  00581C  06E8               	decf	wreg,f,c
   669  00581E  E1FD               	bnz	clear_1
   670                           
   671                           ; Clear objects allocated to COMRAM (18 bytes)
   672  005820  EE00  F03A         	lfsr	0,__pbssCOMRAM
   673  005824  0E12               	movlw	18
   674  005826                     clear_2:
   675  005826  6AEE               	clrf	postinc0,c
   676  005828  06E8               	decf	wreg,f,c
   677  00582A  E1FD               	bnz	clear_2
   678                           
   679                           ;
   680                           ; Setup IVTBASE
   681                           ;
   682  00582C  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   683  00582E  6ED5               	movwf	213,c
   684  005830  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   685  005832  6ED6               	movwf	214,c
   686  005834  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   687  005836  6ED7               	movwf	215,c
   688  005838                     end_of_initialization:
   689                           	callstack 0
   690  005838                     __end_of__initialization:
   691                           	callstack 0
   692  005838  0100               	movlb	0
   693  00583A  EF26  F02E         	goto	_main	;jump to C main() function
   694                           
   695                           	psect	bssCOMRAM
   696  00003A                     __pbssCOMRAM:
   697                           	callstack 0
   698  00003A                     _prec:
   699                           	callstack 0
   700  00003A                     	ds	2
   701  00003C                     _flags:
   702                           	callstack 0
   703  00003C                     	ds	2
   704  00003E                     _roundTimeCount:
   705                           	callstack 0
   706  00003E                     	ds	2
   707  000040                     TMR4_ISR@CountCallBack:
   708                           	callstack 0
   709  000040                     	ds	2
   710  000042                     _uart1RxLastError:
   711                           	callstack 0
   712  000042                     	ds	1
   713  000043                     _uart1RxCount:
   714                           	callstack 0
   715  000043                     	ds	1
   716  000044                     _uart1RxTail:
   717                           	callstack 0
   718  000044                     	ds	1
   719  000045                     _uart1RxHead:
   720                           	callstack 0
   721  000045                     	ds	1
   722  000046                     _uart1TxTail:
   723                           	callstack 0
   724  000046                     	ds	1
   725  000047                     _uart1TxHead:
   726                           	callstack 0
   727  000047                     	ds	1
   728  000048                     _smtPeriod:
   729                           	callstack 0
   730  000048                     	ds	4
   731                           
   732                           	psect	bssBANK0
   733  0000E5                     __pbssBANK0:
   734                           	callstack 0
   735  0000E5                     _width:
   736                           	callstack 0
   737  0000E5                     	ds	2
   738  0000E7                     _BatteryVolt:
   739                           	callstack 0
   740  0000E7                     	ds	2
   741  0000E9                     _actMotorPow:
   742                           	callstack 0
   743  0000E9                     	ds	2
   744  0000EB                     _currentSpeed:
   745                           	callstack 0
   746  0000EB                     	ds	2
   747  0000ED                     _setSpeed:
   748                           	callstack 0
   749  0000ED                     	ds	2
   750  0000EF                     _oldDistRight:
   751                           	callstack 0
   752  0000EF                     	ds	2
   753  0000F1                     _oldDistLeft:
   754                           	callstack 0
   755  0000F1                     	ds	2
   756  0000F3                     _distRight:
   757                           	callstack 0
   758  0000F3                     	ds	2
   759  0000F5                     _distLeft:
   760                           	callstack 0
   761  0000F5                     	ds	2
   762  0000F7                     _delay:
   763                           	callstack 0
   764  0000F7                     	ds	1
   765  0000F8                     _curveRightCount:
   766                           	callstack 0
   767  0000F8                     	ds	1
   768  0000F9                     _curveLeftCount:
   769                           	callstack 0
   770  0000F9                     	ds	1
   771  0000FA                     _cycle10ms:
   772                           	callstack 0
   773  0000FA                     	ds	1
   774  0000FB                     _curveMode:
   775                           	callstack 0
   776  0000FB                     	ds	1
   777  0000FC                     _driveMode:
   778                           	callstack 0
   779  0000FC                     	ds	1
   780  0000FD                     _distFront:
   781                           	callstack 0
   782  0000FD                     	ds	2
   783                           
   784                           	psect	bssBANK1
   785  000100                     __pbssBANK1:
   786                           	callstack 0
   787  000100                     _uart1RxStatusBuffer:
   788                           	callstack 0
   789  000100                     	ds	8
   790  000108                     _uart1RxBuffer:
   791                           	callstack 0
   792  000108                     	ds	8
   793  000110                     _uart1TxBuffer:
   794                           	callstack 0
   795  000110                     	ds	8
   796  000118                     floorf@F527:
   797                           	callstack 0
   798  000118                     	ds	4
   799  00011C                     ___fpclassifyf@F465:
   800                           	callstack 0
   801  00011C                     	ds	4
   802  000120                     _smtWay:
   803                           	callstack 0
   804  000120                     	ds	4
   805  000124                     _smtDuty:
   806                           	callstack 0
   807  000124                     	ds	4
   808  000128                     _nout:
   809                           	callstack 0
   810  000128                     	ds	2
   811  00012A                     _reverseTime:
   812                           	callstack 0
   813  00012A                     	ds	2
   814  00012C                     _oldSpeed:
   815                           	callstack 0
   816  00012C                     	ds	2
   817  00012E                     _motPow:
   818                           	callstack 0
   819  00012E                     	ds	2
   820  000130                     _followCount:
   821                           	callstack 0
   822  000130                     	ds	2
   823  000132                     _battCheckCount:
   824                           	callstack 0
   825  000132                     	ds	2
   826  000134                     _reverseCount:
   827                           	callstack 0
   828  000134                     	ds	2
   829  000136                     _distRightM:
   830                           	callstack 0
   831  000136                     	ds	2
   832  000138                     _distLeftM:
   833                           	callstack 0
   834  000138                     	ds	2
   835  00013A                     _dbuf:
   836                           	callstack 0
   837  00013A                     	ds	80
   838                           
   839                           	psect	cstackBANK1
   840  0001A0                     __pcstackBANK1:
   841                           	callstack 0
   842  0001A0                     ?_vfprintf:
   843                           	callstack 0
   844  0001A0                     vfprintf@fp:
   845                           	callstack 0
   846                           
   847                           ; 2 bytes @ 0x0
   848  0001A0                     	ds	2
   849  0001A2                     vfprintf@fmt:
   850                           	callstack 0
   851                           
   852                           ; 2 bytes @ 0x2
   853  0001A2                     	ds	2
   854  0001A4                     vfprintf@ap:
   855                           	callstack 0
   856                           
   857                           ; 2 bytes @ 0x4
   858  0001A4                     	ds	2
   859  0001A6                     ?_printf:
   860                           	callstack 0
   861  0001A6                     printf@fmt:
   862                           	callstack 0
   863                           
   864                           ; 2 bytes @ 0x6
   865  0001A6                     	ds	6
   866  0001AC                     printf@ap:
   867                           	callstack 0
   868                           
   869                           ; 2 bytes @ 0xC
   870  0001AC                     	ds	2
   871  0001AE                     ??_getCurve:
   872  0001AE                     _getBatteryVoltage$4185:
   873                           	callstack 0
   874                           
   875                           ; 4 bytes @ 0xE
   876  0001AE                     	ds	2
   877  0001B0                     getCurve@deltaRight:
   878                           	callstack 0
   879                           
   880                           ; 2 bytes @ 0x10
   881  0001B0                     	ds	2
   882  0001B2                     getCurve@deltaLeft:
   883                           	callstack 0
   884                           
   885                           ; 2 bytes @ 0x12
   886  0001B2                     	ds	2
   887                           
   888                           	psect	cstackBANK0
   889  000060                     __pcstackBANK0:
   890                           	callstack 0
   891  000060                     ?_dtoa:
   892                           	callstack 0
   893  000060                     ___flmul@sign:
   894                           	callstack 0
   895  000060                     dtoa@fp:
   896                           	callstack 0
   897  000060                     ___fldiv@rem:
   898                           	callstack 0
   899                           
   900                           ; 4 bytes @ 0x0
   901  000060                     	ds	1
   902  000061                     ___flmul@aexp:
   903                           	callstack 0
   904                           
   905                           ; 1 bytes @ 0x1
   906  000061                     	ds	1
   907  000062                     ___flmul@grs:
   908                           	callstack 0
   909  000062                     dtoa@d:
   910                           	callstack 0
   911                           
   912                           ; 8 bytes @ 0x2
   913  000062                     	ds	2
   914  000064                     ___fldiv@sign:
   915                           	callstack 0
   916                           
   917                           ; 1 bytes @ 0x4
   918  000064                     	ds	1
   919  000065                     ___fldiv@new_exp:
   920                           	callstack 0
   921                           
   922                           ; 2 bytes @ 0x5
   923  000065                     	ds	1
   924  000066                     ___flmul@bexp:
   925                           	callstack 0
   926                           
   927                           ; 1 bytes @ 0x6
   928  000066                     	ds	1
   929  000067                     ___fldiv@grs:
   930                           	callstack 0
   931  000067                     ___flmul@prod:
   932                           	callstack 0
   933                           
   934                           ; 4 bytes @ 0x7
   935  000067                     	ds	3
   936  00006A                     _dtoa$3535:
   937                           	callstack 0
   938                           
   939                           ; 2 bytes @ 0xA
   940  00006A                     	ds	1
   941  00006B                     ___fldiv@bexp:
   942                           	callstack 0
   943  00006B                     ___flmul@temp:
   944                           	callstack 0
   945                           
   946                           ; 2 bytes @ 0xB
   947  00006B                     	ds	1
   948  00006C                     ___fldiv@aexp:
   949                           	callstack 0
   950  00006C                     dtoa@p:
   951                           	callstack 0
   952                           
   953                           ; 2 bytes @ 0xC
   954  00006C                     	ds	1
   955  00006D                     ??_floorf:
   956  00006D                     ?___fladd:
   957                           	callstack 0
   958  00006D                     ___flge@ff1:
   959                           	callstack 0
   960  00006D                     ___fladd@b:
   961                           	callstack 0
   962                           
   963                           ; 4 bytes @ 0xD
   964  00006D                     	ds	1
   965  00006E                     dtoa@w:
   966                           	callstack 0
   967                           
   968                           ; 2 bytes @ 0xE
   969  00006E                     	ds	2
   970  000070                     dtoa@s:
   971                           	callstack 0
   972                           
   973                           ; 2 bytes @ 0x10
   974  000070                     	ds	1
   975  000071                     ___flge@ff2:
   976                           	callstack 0
   977  000071                     ___fladd@a:
   978                           	callstack 0
   979                           
   980                           ; 4 bytes @ 0x11
   981  000071                     	ds	1
   982  000072                     dtoa@n:
   983                           	callstack 0
   984                           
   985                           ; 8 bytes @ 0x12
   986  000072                     	ds	1
   987  000073                     floorf@m:
   988                           	callstack 0
   989                           
   990                           ; 4 bytes @ 0x13
   991  000073                     	ds	2
   992  000075                     ___fladd@signs:
   993                           	callstack 0
   994                           
   995                           ; 1 bytes @ 0x15
   996  000075                     	ds	1
   997  000076                     ___fladd@aexp:
   998                           	callstack 0
   999                           
  1000                           ; 1 bytes @ 0x16
  1001  000076                     	ds	1
  1002  000077                     ___fladd@bexp:
  1003                           	callstack 0
  1004  000077                     floorf@e:
  1005                           	callstack 0
  1006                           
  1007                           ; 2 bytes @ 0x17
  1008  000077                     	ds	1
  1009  000078                     ___fladd@grs:
  1010                           	callstack 0
  1011                           
  1012                           ; 1 bytes @ 0x18
  1013  000078                     	ds	1
  1014  000079                     ?___flsub:
  1015                           	callstack 0
  1016  000079                     ?___fltol:
  1017                           	callstack 0
  1018  000079                     ___fltol@f1:
  1019                           	callstack 0
  1020  000079                     ___flsub@b:
  1021                           	callstack 0
  1022  000079                     floorf@u:
  1023                           	callstack 0
  1024                           
  1025                           ; 4 bytes @ 0x19
  1026  000079                     	ds	1
  1027  00007A                     dtoa@i:
  1028                           	callstack 0
  1029                           
  1030                           ; 2 bytes @ 0x1A
  1031  00007A                     	ds	3
  1032  00007D                     ??___fltol:
  1033  00007D                     ___flsub@a:
  1034                           	callstack 0
  1035                           
  1036                           ; 4 bytes @ 0x1D
  1037  00007D                     	ds	4
  1038  000081                     ___fltol@sign1:
  1039                           	callstack 0
  1040                           
  1041                           ; 1 bytes @ 0x21
  1042  000081                     	ds	1
  1043  000082                     ___fltol@exp1:
  1044                           	callstack 0
  1045                           
  1046                           ; 1 bytes @ 0x22
  1047  000082                     	ds	1
  1048  000083                     ??_calcSpeed:
  1049  000083                     ??_calcMotorPow:
  1050  000083                     ?_efgtoa:
  1051                           	callstack 0
  1052  000083                     setSteering@steering:
  1053                           	callstack 0
  1054  000083                     efgtoa@fp:
  1055                           	callstack 0
  1056                           
  1057                           ; 2 bytes @ 0x23
  1058  000083                     	ds	2
  1059  000085                     setSteering@steeringMode:
  1060                           	callstack 0
  1061  000085                     calcMotorPow@setSpeedDelta:
  1062                           	callstack 0
  1063  000085                     efgtoa@f:
  1064                           	callstack 0
  1065                           
  1066                           ; 4 bytes @ 0x25
  1067  000085                     	ds	1
  1068  000086                     ??_setSteering:
  1069                           
  1070                           ; 1 bytes @ 0x26
  1071  000086                     	ds	1
  1072  000087                     calcSpeed@speed:
  1073                           	callstack 0
  1074  000087                     calcMotorPow@oldSpeedDelta:
  1075                           	callstack 0
  1076                           
  1077                           ; 2 bytes @ 0x27
  1078  000087                     	ds	1
  1079  000088                     setSteering@steeringF:
  1080                           	callstack 0
  1081                           
  1082                           ; 2 bytes @ 0x28
  1083  000088                     	ds	1
  1084  000089                     calcMotorPow@addMPow:
  1085                           	callstack 0
  1086  000089                     efgtoa@c:
  1087                           	callstack 0
  1088                           
  1089                           ; 1 bytes @ 0x29
  1090  000089                     	ds	1
  1091  00008A                     ??_efgtoa:
  1092  00008A                     setSteering@steeringB:
  1093                           	callstack 0
  1094                           
  1095                           ; 2 bytes @ 0x2A
  1096  00008A                     	ds	2
  1097  00008C                     ??_calcSteering:
  1098                           
  1099                           ; 1 bytes @ 0x2C
  1100  00008C                     	ds	2
  1101  00008E                     calcSteering@delta:
  1102                           	callstack 0
  1103                           
  1104                           ; 2 bytes @ 0x2E
  1105  00008E                     	ds	1
  1106  00008F                     _efgtoa$3559:
  1107                           	callstack 0
  1108                           
  1109                           ; 2 bytes @ 0x2F
  1110  00008F                     	ds	2
  1111  000091                     _efgtoa$3560:
  1112                           	callstack 0
  1113                           
  1114                           ; 2 bytes @ 0x31
  1115  000091                     	ds	2
  1116  000093                     _efgtoa$3564:
  1117                           	callstack 0
  1118                           
  1119                           ; 2 bytes @ 0x33
  1120  000093                     	ds	2
  1121  000095                     _efgtoa$3568:
  1122                           	callstack 0
  1123                           
  1124                           ; 2 bytes @ 0x35
  1125  000095                     	ds	2
  1126  000097                     _efgtoa$3569:
  1127                           	callstack 0
  1128                           
  1129                           ; 2 bytes @ 0x37
  1130  000097                     	ds	2
  1131  000099                     _efgtoa$3570:
  1132                           	callstack 0
  1133                           
  1134                           ; 2 bytes @ 0x39
  1135  000099                     	ds	2
  1136  00009B                     efgtoa@t:
  1137                           	callstack 0
  1138                           
  1139                           ; 2 bytes @ 0x3B
  1140  00009B                     	ds	2
  1141  00009D                     efgtoa@pp:
  1142                           	callstack 0
  1143                           
  1144                           ; 2 bytes @ 0x3D
  1145  00009D                     	ds	2
  1146  00009F                     efgtoa@ne:
  1147                           	callstack 0
  1148                           
  1149                           ; 2 bytes @ 0x3F
  1150  00009F                     	ds	2
  1151  0000A1                     efgtoa@m:
  1152                           	callstack 0
  1153                           
  1154                           ; 2 bytes @ 0x41
  1155  0000A1                     	ds	2
  1156  0000A3                     efgtoa@ou:
  1157                           	callstack 0
  1158                           
  1159                           ; 4 bytes @ 0x43
  1160  0000A3                     	ds	4
  1161  0000A7                     efgtoa@d:
  1162                           	callstack 0
  1163                           
  1164                           ; 2 bytes @ 0x47
  1165  0000A7                     	ds	2
  1166  0000A9                     efgtoa@sign:
  1167                           	callstack 0
  1168                           
  1169                           ; 2 bytes @ 0x49
  1170  0000A9                     	ds	2
  1171  0000AB                     efgtoa@p:
  1172                           	callstack 0
  1173                           
  1174                           ; 2 bytes @ 0x4B
  1175  0000AB                     	ds	2
  1176  0000AD                     efgtoa@w:
  1177                           	callstack 0
  1178                           
  1179                           ; 2 bytes @ 0x4D
  1180  0000AD                     	ds	2
  1181  0000AF                     efgtoa@nmode:
  1182                           	callstack 0
  1183                           
  1184                           ; 1 bytes @ 0x4F
  1185  0000AF                     	ds	1
  1186  0000B0                     efgtoa@mode:
  1187                           	callstack 0
  1188                           
  1189                           ; 1 bytes @ 0x50
  1190  0000B0                     	ds	1
  1191  0000B1                     efgtoa@h:
  1192                           	callstack 0
  1193                           
  1194                           ; 4 bytes @ 0x51
  1195  0000B1                     	ds	4
  1196  0000B5                     efgtoa@l:
  1197                           	callstack 0
  1198                           
  1199                           ; 4 bytes @ 0x55
  1200  0000B5                     	ds	4
  1201  0000B9                     efgtoa@i:
  1202                           	callstack 0
  1203                           
  1204                           ; 2 bytes @ 0x59
  1205  0000B9                     	ds	2
  1206  0000BB                     efgtoa@g:
  1207                           	callstack 0
  1208                           
  1209                           ; 4 bytes @ 0x5B
  1210  0000BB                     	ds	4
  1211  0000BF                     efgtoa@e:
  1212                           	callstack 0
  1213                           
  1214                           ; 2 bytes @ 0x5F
  1215  0000BF                     	ds	2
  1216  0000C1                     efgtoa@n:
  1217                           	callstack 0
  1218                           
  1219                           ; 2 bytes @ 0x61
  1220  0000C1                     	ds	2
  1221  0000C3                     efgtoa@u:
  1222                           	callstack 0
  1223                           
  1224                           ; 4 bytes @ 0x63
  1225  0000C3                     	ds	4
  1226  0000C7                     ?_vfpfcnvrt:
  1227                           	callstack 0
  1228  0000C7                     vfpfcnvrt@fp:
  1229                           	callstack 0
  1230                           
  1231                           ; 2 bytes @ 0x67
  1232  0000C7                     	ds	2
  1233  0000C9                     vfpfcnvrt@fmt:
  1234                           	callstack 0
  1235                           
  1236                           ; 2 bytes @ 0x69
  1237  0000C9                     	ds	2
  1238  0000CB                     vfpfcnvrt@ap:
  1239                           	callstack 0
  1240                           
  1241                           ; 2 bytes @ 0x6B
  1242  0000CB                     	ds	2
  1243  0000CD                     ??_vfpfcnvrt:
  1244                           
  1245                           ; 1 bytes @ 0x6D
  1246  0000CD                     	ds	4
  1247  0000D1                     vfpfcnvrt@ll:
  1248                           	callstack 0
  1249                           
  1250                           ; 8 bytes @ 0x71
  1251  0000D1                     	ds	8
  1252  0000D9                     _vfpfcnvrt$3588:
  1253                           	callstack 0
  1254                           
  1255                           ; 2 bytes @ 0x79
  1256  0000D9                     	ds	2
  1257  0000DB                     vfpfcnvrt@f:
  1258                           	callstack 0
  1259                           
  1260                           ; 4 bytes @ 0x7B
  1261  0000DB                     	ds	4
  1262  0000DF                     vfpfcnvrt@ct:
  1263                           	callstack 0
  1264                           
  1265                           ; 3 bytes @ 0x7F
  1266  0000DF                     	ds	3
  1267  0000E2                     vfpfcnvrt@c:
  1268                           	callstack 0
  1269                           
  1270                           ; 1 bytes @ 0x82
  1271  0000E2                     	ds	1
  1272  0000E3                     vfprintf@cfmt:
  1273                           	callstack 0
  1274                           
  1275                           ; 2 bytes @ 0x83
  1276  0000E3                     	ds	2
  1277                           
  1278                           	psect	cstackCOMRAM
  1279  000001                     __pcstackCOMRAM:
  1280                           	callstack 0
  1281  000001                     CCP3_DefaultCallBack@capturedValue:
  1282                           	callstack 0
  1283                           
  1284                           ; 2 bytes @ 0x0
  1285  000001                     	ds	2
  1286  000003                     CCP3_CaptureISR@module:
  1287                           	callstack 0
  1288                           
  1289                           ; 2 bytes @ 0x2
  1290  000003                     	ds	2
  1291  000005                     CCP4_DefaultCallBack@capturedValue:
  1292                           	callstack 0
  1293                           
  1294                           ; 2 bytes @ 0x4
  1295  000005                     	ds	2
  1296  000007                     CCP4_CaptureISR@module:
  1297                           	callstack 0
  1298                           
  1299                           ; 2 bytes @ 0x6
  1300  000007                     	ds	2
  1301  000009                     ?_TMR5_ReadTimer:
  1302                           	callstack 0
  1303  000009                     TMR5_WriteTimer@timerVal:
  1304                           	callstack 0
  1305                           
  1306                           ; 2 bytes @ 0x8
  1307  000009                     	ds	2
  1308  00000B                     ??_TMR5_ReadTimer:
  1309  00000B                     
  1310                           ; 1 bytes @ 0xA
  1311  00000B                     	ds	2
  1312  00000D                     TMR5_ReadTimer@readVal:
  1313                           	callstack 0
  1314                           
  1315                           ; 2 bytes @ 0xC
  1316  00000D                     	ds	2
  1317  00000F                     TMR5_ReadTimer@readValHigh:
  1318                           	callstack 0
  1319                           
  1320                           ; 1 bytes @ 0xE
  1321  00000F                     	ds	1
  1322  000010                     TMR5_ReadTimer@readValLow:
  1323                           	callstack 0
  1324                           
  1325                           ; 1 bytes @ 0xF
  1326  000010                     	ds	1
  1327  000011                     ??_UART1_tx_vect_isr:
  1328  000011                     
  1329                           ; 1 bytes @ 0x10
  1330  000011                     	ds	1
  1331  000012                     ??_UART1_rx_vect_isr:
  1332                           
  1333                           ; 1 bytes @ 0x11
  1334  000012                     	ds	1
  1335  000013                     ??_TMR4_ISR:
  1336                           
  1337                           ; 1 bytes @ 0x12
  1338  000013                     	ds	1
  1339  000014                     ??_TMR3_Initialize:
  1340  000014                     ?_strlen:
  1341                           	callstack 0
  1342  000014                     ?___fpclassifyf:
  1343                           	callstack 0
  1344  000014                     ?_isupper:
  1345                           	callstack 0
  1346  000014                     ?_strncmp:
  1347                           	callstack 0
  1348  000014                     ?_ADCC_GetSingleConversion:
  1349                           	callstack 0
  1350  000014                     ?___awdiv:
  1351                           	callstack 0
  1352  000014                     ?___awmod:
  1353                           	callstack 0
  1354  000014                     ?___aldiv:
  1355                           	callstack 0
  1356  000014                     ?___flneg:
  1357                           	callstack 0
  1358  000014                     ?___aodiv:
  1359                           	callstack 0
  1360  000014                     ?___aomod:
  1361                           	callstack 0
  1362  000014                     UART1_Write@txData:
  1363                           	callstack 0
  1364  000014                     INTERRUPT_Initialize@state:
  1365                           	callstack 0
  1366  000014                     UART1_SetFramingErrorHandler@interruptHandler:
  1367                           	callstack 0
  1368  000014                     UART1_SetOverrunErrorHandler@interruptHandler:
  1369                           	callstack 0
  1370  000014                     UART1_SetErrorHandler@interruptHandler:
  1371                           	callstack 0
  1372  000014                     UART1_SetRxInterruptHandler@InterruptHandler:
  1373                           	callstack 0
  1374  000014                     UART1_SetTxInterruptHandler@InterruptHandler:
  1375                           	callstack 0
  1376  000014                     CCP3_SetCallBack@customCallBack:
  1377                           	callstack 0
  1378  000014                     CCP4_SetCallBack@customCallBack:
  1379                           	callstack 0
  1380  000014                     TMR5_SetGateInterruptHandler@InterruptHandler:
  1381                           	callstack 0
  1382  000014                     TMR4_SetInterruptHandler@InterruptHandler:
  1383                           	callstack 0
  1384  000014                     PWM7_LoadDutyValue@dutyValue:
  1385                           	callstack 0
  1386  000014                     PWM8_LoadDutyValue@dutyValue:
  1387                           	callstack 0
  1388  000014                     PWM5_LoadDutyValue@dutyValue:
  1389                           	callstack 0
  1390  000014                     PWM6_LoadDutyValue@dutyValue:
  1391                           	callstack 0
  1392  000014                     ___awdiv@dividend:
  1393                           	callstack 0
  1394  000014                     ___awmod@dividend:
  1395                           	callstack 0
  1396  000014                     isupper@c:
  1397                           	callstack 0
  1398  000014                     strcpy@dest:
  1399                           	callstack 0
  1400  000014                     strlen@s:
  1401                           	callstack 0
  1402  000014                     strncmp@_l:
  1403                           	callstack 0
  1404  000014                     ___aldiv@dividend:
  1405                           	callstack 0
  1406  000014                     ___fleq@ff1:
  1407                           	callstack 0
  1408  000014                     ___flneg@f1:
  1409                           	callstack 0
  1410  000014                     ___fpclassifyf@x:
  1411                           	callstack 0
  1412  000014                     ___aodiv@dividend:
  1413                           	callstack 0
  1414  000014                     ___aomod@dividend:
  1415                           	callstack 0
  1416                           
  1417                           ; 8 bytes @ 0x13
  1418  000014                     	ds	1
  1419  000015                     putch@txData:
  1420                           	callstack 0
  1421                           
  1422                           ; 1 bytes @ 0x14
  1423  000015                     	ds	1
  1424  000016                     ??_TMR5_Initialize:
  1425  000016                     ??_isupper:
  1426  000016                     ??_PWM7_LoadDutyValue:
  1427  000016                     ??_PWM8_LoadDutyValue:
  1428  000016                     ??_PWM5_LoadDutyValue:
  1429  000016                     ??_PWM6_LoadDutyValue:
  1430  000016                     ??_ADCC_GetSingleConversion:
  1431  000016                     ___awdiv@divisor:
  1432                           	callstack 0
  1433  000016                     ___awmod@divisor:
  1434                           	callstack 0
  1435  000016                     fputc@c:
  1436                           	callstack 0
  1437  000016                     strcpy@src:
  1438                           	callstack 0
  1439  000016                     strlen@a:
  1440                           	callstack 0
  1441  000016                     strncmp@_r:
  1442                           	callstack 0
  1443                           
  1444                           ; 2 bytes @ 0x15
  1445  000016                     	ds	2
  1446  000018                     ??___fpclassifyf:
  1447  000018                     ??_strcpy:
  1448  000018                     ADCC_GetSingleConversion@channel:
  1449                           	callstack 0
  1450  000018                     ___awdiv@counter:
  1451                           	callstack 0
  1452  000018                     ___awmod@counter:
  1453                           	callstack 0
  1454  000018                     setMotor@motorPower:
  1455                           	callstack 0
  1456  000018                     fputc@fp:
  1457                           	callstack 0
  1458  000018                     strncmp@n:
  1459                           	callstack 0
  1460  000018                     ___aldiv@divisor:
  1461                           	callstack 0
  1462  000018                     ___fleq@ff2:
  1463                           	callstack 0
  1464                           
  1465                           ; 4 bytes @ 0x17
  1466  000018                     	ds	1
  1467  000019                     ___awdiv@sign:
  1468                           	callstack 0
  1469  000019                     ___awmod@sign:
  1470                           	callstack 0
  1471                           
  1472                           ; 1 bytes @ 0x18
  1473  000019                     	ds	1
  1474  00001A                     ??_setMotor:
  1475  00001A                     ??_fputc:
  1476  00001A                     ??_strncmp:
  1477  00001A                     ?_tolower:
  1478                           	callstack 0
  1479  00001A                     ___awdiv@quotient:
  1480                           	callstack 0
  1481  00001A                     strcpy@s:
  1482                           	callstack 0
  1483  00001A                     tolower@c:
  1484                           	callstack 0
  1485                           
  1486                           ; 2 bytes @ 0x19
  1487  00001A                     	ds	1
  1488  00001B                     strncmp@l:
  1489                           	callstack 0
  1490                           
  1491                           ; 2 bytes @ 0x1A
  1492  00001B                     	ds	1
  1493  00001C                     ??_tolower:
  1494  00001C                     ??___fleq:
  1495  00001C                     ?___xxtofl:
  1496                           	callstack 0
  1497  00001C                     ___aldiv@counter:
  1498                           	callstack 0
  1499  00001C                     ___fpclassifyf@e:
  1500                           	callstack 0
  1501  00001C                     strcpy@d:
  1502                           	callstack 0
  1503  00001C                     ___xxtofl@val:
  1504                           	callstack 0
  1505  00001C                     ___aodiv@divisor:
  1506                           	callstack 0
  1507  00001C                     ___aomod@divisor:
  1508                           	callstack 0
  1509                           
  1510                           ; 8 bytes @ 0x1B
  1511  00001C                     	ds	1
  1512  00001D                     ___aldiv@sign:
  1513                           	callstack 0
  1514  00001D                     strncmp@r:
  1515                           	callstack 0
  1516                           
  1517                           ; 2 bytes @ 0x1C
  1518  00001D                     	ds	1
  1519  00001E                     ___aldiv@quotient:
  1520                           	callstack 0
  1521  00001E                     ___fpclassifyf@u:
  1522                           	callstack 0
  1523                           
  1524                           ; 4 bytes @ 0x1D
  1525  00001E                     	ds	1
  1526  00001F                     fputs@s:
  1527                           	callstack 0
  1528                           
  1529                           ; 2 bytes @ 0x1E
  1530  00001F                     	ds	1
  1531  000020                     ??___xxtofl:
  1532  000020                     _tolower$3681:
  1533                           	callstack 0
  1534                           
  1535                           ; 2 bytes @ 0x1F
  1536  000020                     	ds	1
  1537  000021                     fputs@fp:
  1538                           	callstack 0
  1539                           
  1540                           ; 2 bytes @ 0x20
  1541  000021                     	ds	1
  1542  000022                     ?_actSpeed:
  1543                           	callstack 0
  1544                           
  1545                           ; 2 bytes @ 0x21
  1546  000022                     	ds	1
  1547  000023                     fputs@c:
  1548                           	callstack 0
  1549                           
  1550                           ; 1 bytes @ 0x22
  1551  000023                     	ds	1
  1552  000024                     ___aodiv@counter:
  1553                           	callstack 0
  1554  000024                     ___aomod@counter:
  1555                           	callstack 0
  1556  000024                     ___xxtofl@sign:
  1557                           	callstack 0
  1558  000024                     actSpeed@speed:
  1559                           	callstack 0
  1560  000024                     fputs@i:
  1561                           	callstack 0
  1562                           
  1563                           ; 2 bytes @ 0x23
  1564  000024                     	ds	1
  1565  000025                     ___aodiv@sign:
  1566                           	callstack 0
  1567  000025                     ___aomod@sign:
  1568                           	callstack 0
  1569  000025                     ___xxtofl@exp:
  1570                           	callstack 0
  1571                           
  1572                           ; 1 bytes @ 0x24
  1573  000025                     	ds	1
  1574  000026                     ?_abs:
  1575                           	callstack 0
  1576  000026                     ?_pad:
  1577                           	callstack 0
  1578  000026                     pad@fp:
  1579                           	callstack 0
  1580  000026                     abs@a:
  1581                           	callstack 0
  1582  000026                     ___xxtofl@arg:
  1583                           	callstack 0
  1584  000026                     ___aodiv@quotient:
  1585                           	callstack 0
  1586                           
  1587                           ; 8 bytes @ 0x25
  1588  000026                     	ds	2
  1589  000028                     ??_abs:
  1590  000028                     pad@buf:
  1591                           	callstack 0
  1592                           
  1593                           ; 2 bytes @ 0x27
  1594  000028                     	ds	2
  1595  00002A                     ?___fldiv:
  1596                           	callstack 0
  1597  00002A                     ?___flmul:
  1598                           	callstack 0
  1599  00002A                     pad@p:
  1600                           	callstack 0
  1601  00002A                     ___fldiv@b:
  1602                           	callstack 0
  1603  00002A                     ___flmul@b:
  1604                           	callstack 0
  1605                           
  1606                           ; 4 bytes @ 0x29
  1607  00002A                     	ds	2
  1608  00002C                     ??_pad:
  1609                           
  1610                           ; 1 bytes @ 0x2B
  1611  00002C                     	ds	1
  1612  00002D                     pad@i:
  1613                           	callstack 0
  1614                           
  1615                           ; 2 bytes @ 0x2C
  1616  00002D                     	ds	1
  1617  00002E                     ___fldiv@a:
  1618                           	callstack 0
  1619  00002E                     ___flmul@a:
  1620                           	callstack 0
  1621                           
  1622                           ; 4 bytes @ 0x2D
  1623  00002E                     	ds	1
  1624  00002F                     pad@w:
  1625                           	callstack 0
  1626                           
  1627                           ; 2 bytes @ 0x2E
  1628  00002F                     	ds	2
  1629  000031                     ??_dtoa:
  1630                           
  1631                           ; 1 bytes @ 0x30
  1632  000031                     	ds	1
  1633  000032                     ??___fldiv:
  1634  000032                     ??___flmul:
  1635                           
  1636                           ; 1 bytes @ 0x31
  1637  000032                     	ds	4
  1638  000036                     ??___fladd:
  1639  000036                     ??___flge:
  1640  000036                     ?_floorf:
  1641                           	callstack 0
  1642  000036                     floorf@x:
  1643                           	callstack 0
  1644                           
  1645                           ; 4 bytes @ 0x35
  1646  000036                     	ds	4
  1647  00003A                     
  1648                           ; 1 bytes @ 0x39
  1649 ;;
  1650 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1651 ;;
  1652 ;; *************** function _main *****************
  1653 ;; Defined at:
  1654 ;;		line 8 in file "main.c"
  1655 ;; Parameters:    Size  Location     Type
  1656 ;;		None
  1657 ;; Auto vars:     Size  Location     Type
  1658 ;;		None
  1659 ;; Return value:  Size  Location     Type
  1660 ;;                  1    wreg      void 
  1661 ;; Registers used:
  1662 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1663 ;; Tracked objects:
  1664 ;;		On entry : 0/0
  1665 ;;		On exit  : 0/0
  1666 ;;		Unchanged: 0/0
  1667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1672 ;;Total ram usage:        0 bytes
  1673 ;; Hardware stack levels required when called: 20
  1674 ;; This function calls:
  1675 ;;		_SYSTEM_Initialize
  1676 ;;		_TMR4_SetInterruptHandler
  1677 ;;		_loop
  1678 ;; This function is called by:
  1679 ;;		Startup code after reset
  1680 ;; This function uses a non-reentrant model
  1681 ;;
  1682                           
  1683                           	psect	text0
  1684  005C4C                     __ptext0:
  1685                           	callstack 0
  1686  005C4C                     _main:
  1687                           	callstack 11
  1688  005C4C                     
  1689                           ;main.c: 9:     SYSTEM_Initialize();
  1690  005C4C  EC44  F02A         	call	_SYSTEM_Initialize	;wreg free
  1691  005C50                     
  1692                           ;main.c: 10:     (INTCON0bits.GIEH = 1);
  1693  005C50  8ED2               	bsf	210,7,c	;volatile
  1694  005C52                     
  1695                           ;main.c: 11:     (INTCON0bits.GIEL = 1);
  1696  005C52  8CD2               	bsf	210,6,c	;volatile
  1697                           
  1698                           ;main.c: 12:     TMR4_SetInterruptHandler(TMR4_10msISR);
  1699  005C54  0E90               	movlw	low _TMR4_10msISR
  1700  005C56  6E14               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
  1701  005C58  0E5D               	movlw	high _TMR4_10msISR
  1702  005C5A  6E15               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
  1703  005C5C  ECB9  F02E         	call	_TMR4_SetInterruptHandler	;wreg free
  1704  005C60                     l9225:
  1705                           
  1706                           ;main.c: 15:         loop();
  1707  005C60  ECD7  F021         	call	_loop	;wreg free
  1708  005C64  EF30  F02E         	goto	l9225
  1709  005C68  EF57  F000         	goto	start
  1710  005C6C                     __end_of_main:
  1711                           	callstack 0
  1712                           
  1713 ;; *************** function _loop *****************
  1714 ;; Defined at:
  1715 ;;		line 19 in file "main.c"
  1716 ;; Parameters:    Size  Location     Type
  1717 ;;		None
  1718 ;; Auto vars:     Size  Location     Type
  1719 ;;		None
  1720 ;; Return value:  Size  Location     Type
  1721 ;;                  1    wreg      void 
  1722 ;; Registers used:
  1723 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1724 ;; Tracked objects:
  1725 ;;		On entry : 0/0
  1726 ;;		On exit  : 0/0
  1727 ;;		Unchanged: 0/0
  1728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1733 ;;Total ram usage:        0 bytes
  1734 ;; Hardware stack levels used: 1
  1735 ;; Hardware stack levels required when called: 19
  1736 ;; This function calls:
  1737 ;;		___flge
  1738 ;;		___xxtofl
  1739 ;;		_calcMotorPow
  1740 ;;		_calcSpeed
  1741 ;;		_calcSteering
  1742 ;;		_checkBatt
  1743 ;;		_getBatteryVoltage
  1744 ;;		_getCurve
  1745 ;;		_getReverse
  1746 ;;		_setMotor
  1747 ;;		_setSteering
  1748 ;; This function is called by:
  1749 ;;		_main
  1750 ;; This function uses a non-reentrant model
  1751 ;;
  1752                           
  1753                           	psect	text1
  1754  0043AE                     __ptext1:
  1755                           	callstack 0
  1756  0043AE                     _loop:
  1757                           	callstack 11
  1758  0043AE                     
  1759                           ;main.c: 20:     setMotor(0);
  1760  0043AE  0E00               	movlw	0
  1761  0043B0  6E19               	movwf	(setMotor@motorPower+1)^0,c
  1762  0043B2  0E00               	movlw	0
  1763  0043B4  6E18               	movwf	setMotor@motorPower^0,c
  1764  0043B6  ECEB  F024         	call	_setMotor	;wreg free
  1765                           
  1766                           ;main.c: 21:     setSteering(0, Front);
  1767  0043BA  0E00               	movlw	0
  1768  0043BC  0100               	movlb	0	; () banked
  1769  0043BE  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  1770  0043C0  0E00               	movlw	0
  1771  0043C2  6F83               	movwf	setSteering@steering& (0+255),b
  1772  0043C4  0E03               	movlw	3
  1773  0043C6  6F85               	movwf	setSteering@steeringMode& (0+255),b
  1774  0043C8  EC84  F01C         	call	_setSteering	;wreg free
  1775  0043CC                     l1228:
  1776  0043CC  B8CB               	btfsc	203,4,c	;volatile
  1777  0043CE  EFEB  F021         	goto	u10321
  1778  0043D2  EFED  F021         	goto	u10320
  1779  0043D6                     u10321:
  1780  0043D6  EFE6  F021         	goto	l1228
  1781  0043DA                     u10320:
  1782  0043DA                     l9187:
  1783  0043DA  0100               	movlb	0	; () banked
  1784  0043DC  51FA               	movf	_cycle10ms& (0+255),w,b	;volatile
  1785  0043DE  B4D8               	btfsc	status,2,c
  1786  0043E0  EFF4  F021         	goto	u10331
  1787  0043E4  EFF6  F021         	goto	u10330
  1788  0043E8                     u10331:
  1789  0043E8  EFED  F021         	goto	l9187
  1790  0043EC                     u10330:
  1791  0043EC                     
  1792                           ; BSR set to: 0
  1793                           ;main.c: 26:         cycle10ms = 0;
  1794  0043EC  0E00               	movlw	0
  1795  0043EE  6FFA               	movwf	_cycle10ms& (0+255),b	;volatile
  1796  0043F0                     
  1797                           ; BSR set to: 0
  1798                           ;main.c: 28:         getBatteryVoltage();
  1799  0043F0  ECC1  F028         	call	_getBatteryVoltage	;wreg free
  1800  0043F4                     
  1801                           ;main.c: 29:     } while (BatteryVolt < ((6.8) * 409.6));
  1802  0043F4  C0E7  F01C         	movff	_BatteryVolt,___xxtofl@val
  1803  0043F8  C0E8  F01D         	movff	_BatteryVolt+1,___xxtofl@val+1
  1804  0043FC  6A1E               	clrf	(___xxtofl@val+2)^0,c
  1805  0043FE  6A1F               	clrf	(___xxtofl@val+3)^0,c
  1806  004400  0E00               	movlw	0
  1807  004402  EC7F  F01D         	call	___xxtofl
  1808  004406  C01C  F06D         	movff	?___xxtofl,___flge@ff1
  1809  00440A  C01D  F06E         	movff	?___xxtofl+1,___flge@ff1+1
  1810  00440E  C01E  F06F         	movff	?___xxtofl+2,___flge@ff1+2
  1811  004412  C01F  F070         	movff	?___xxtofl+3,___flge@ff1+3
  1812  004416  0E7B               	movlw	123
  1813  004418  0100               	movlb	0	; () banked
  1814  00441A  6F71               	movwf	___flge@ff2& (0+255),b
  1815  00441C  0E14               	movlw	20
  1816  00441E  6F72               	movwf	(___flge@ff2+1)& (0+255),b
  1817  004420  0E2E               	movlw	46
  1818  004422  6F73               	movwf	(___flge@ff2+2)& (0+255),b
  1819  004424  0E45               	movlw	69
  1820  004426  6F74               	movwf	(___flge@ff2+3)& (0+255),b
  1821  004428  EC6F  F023         	call	___flge	;wreg free
  1822  00442C  0100               	movlb	0	; () banked
  1823  00442E  A0D8               	btfss	status,0,c
  1824  004430  EF1C  F022         	goto	u10341
  1825  004434  EF1E  F022         	goto	u10340
  1826  004438                     u10341:
  1827  004438  EFED  F021         	goto	l9187
  1828  00443C                     u10340:
  1829  00443C                     
  1830                           ; BSR set to: 0
  1831                           ;main.c: 33:     oldDistLeft = distLeft;
  1832  00443C  C0F5  F0F1         	movff	_distLeft,_oldDistLeft	;volatile
  1833  004440  C0F6  F0F2         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  1834                           
  1835                           ;main.c: 34:     oldDistRight = distRight;
  1836  004444  C0F3  F0EF         	movff	_distRight,_oldDistRight	;volatile
  1837  004448  C0F4  F0F0         	movff	_distRight+1,_oldDistRight+1	;volatile
  1838  00444C                     
  1839                           ; BSR set to: 0
  1840                           ;main.c: 35:     cycle10ms = 0;
  1841  00444C  0E00               	movlw	0
  1842  00444E  6FFA               	movwf	_cycle10ms& (0+255),b	;volatile
  1843  004450                     l9197:
  1844  004450  0100               	movlb	0	; () banked
  1845  004452  51FA               	movf	_cycle10ms& (0+255),w,b	;volatile
  1846  004454  B4D8               	btfsc	status,2,c
  1847  004456  EF2F  F022         	goto	u10351
  1848  00445A  EF31  F022         	goto	u10350
  1849  00445E                     u10351:
  1850  00445E  EF28  F022         	goto	l9197
  1851  004462                     u10350:
  1852  004462                     
  1853                           ; BSR set to: 0
  1854                           ;main.c: 38:         cycle10ms = 0;
  1855  004462  0E00               	movlw	0
  1856  004464  6FFA               	movwf	_cycle10ms& (0+255),b	;volatile
  1857  004466                     
  1858                           ; BSR set to: 0
  1859                           ;main.c: 40:         if (!PORTBbits.RB5) {
  1860  004466  BACB               	btfsc	203,5,c	;volatile
  1861  004468  EF38  F022         	goto	u10361
  1862  00446C  EF3A  F022         	goto	u10360
  1863  004470                     u10361:
  1864  004470  EF4C  F022         	goto	l9207
  1865  004474                     u10360:
  1866  004474                     
  1867                           ; BSR set to: 0
  1868                           ;main.c: 41:             setSpeed = 0;
  1869  004474  0E00               	movlw	0
  1870  004476  6FEE               	movwf	(_setSpeed+1)& (0+255),b
  1871  004478  0E00               	movlw	0
  1872  00447A  6FED               	movwf	_setSpeed& (0+255),b
  1873                           
  1874                           ;main.c: 42:             actMotorPow = 0;
  1875  00447C  0E00               	movlw	0
  1876  00447E  6FEA               	movwf	(_actMotorPow+1)& (0+255),b
  1877  004480  0E00               	movlw	0
  1878  004482  6FE9               	movwf	_actMotorPow& (0+255),b
  1879  004484                     
  1880                           ; BSR set to: 0
  1881                           ;main.c: 43:             setSteering(0, Front);
  1882  004484  0E00               	movlw	0
  1883  004486  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  1884  004488  0E00               	movlw	0
  1885  00448A  6F83               	movwf	setSteering@steering& (0+255),b
  1886  00448C  0E03               	movlw	3
  1887  00448E  6F85               	movwf	setSteering@steeringMode& (0+255),b
  1888  004490  EC84  F01C         	call	_setSteering	;wreg free
  1889                           
  1890                           ;main.c: 44:             break;
  1891  004494  EF64  F022         	goto	l1244
  1892  004498                     l9207:
  1893                           
  1894                           ; BSR set to: 0
  1895                           ;main.c: 47:         if (checkBatt()) {
  1896  004498  EC78  F028         	call	_checkBatt	;wreg free
  1897  00449C  0900               	iorlw	0
  1898  00449E  B4D8               	btfsc	status,2,c
  1899  0044A0  EF54  F022         	goto	u10371
  1900  0044A4  EF56  F022         	goto	u10370
  1901  0044A8                     u10371:
  1902  0044A8  EF58  F022         	goto	l9211
  1903  0044AC                     u10370:
  1904  0044AC  EF64  F022         	goto	l1244
  1905  0044B0                     l9211:
  1906                           
  1907                           ;main.c: 51:         getCurve();
  1908  0044B0  EC8D  F017         	call	_getCurve	;wreg free
  1909                           
  1910                           ;main.c: 52:         getReverse();
  1911  0044B4  EC3F  F021         	call	_getReverse	;wreg free
  1912  0044B8                     
  1913                           ;main.c: 54:         calcSteering();
  1914  0044B8  EC59  F01E         	call	_calcSteering	;wreg free
  1915  0044BC                     
  1916                           ;main.c: 55:         calcSpeed();
  1917  0044BC  EC7F  F01B         	call	_calcSpeed	;wreg free
  1918  0044C0                     
  1919                           ;main.c: 56:         calcMotorPow();
  1920  0044C0  EC99  F020         	call	_calcMotorPow	;wreg free
  1921  0044C4  EF28  F022         	goto	l9197
  1922  0044C8                     l1244:
  1923  0044C8  0012               	return		;funcret
  1924  0044CA                     __end_of_loop:
  1925                           	callstack 0
  1926                           
  1927 ;; *************** function _getReverse *****************
  1928 ;; Defined at:
  1929 ;;		line 200 in file "main.c"
  1930 ;; Parameters:    Size  Location     Type
  1931 ;;		None
  1932 ;; Auto vars:     Size  Location     Type
  1933 ;;		None
  1934 ;; Return value:  Size  Location     Type
  1935 ;;                  1    wreg      void 
  1936 ;; Registers used:
  1937 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1938 ;; Tracked objects:
  1939 ;;		On entry : 0/0
  1940 ;;		On exit  : 0/0
  1941 ;;		Unchanged: 0/0
  1942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1947 ;;Total ram usage:        0 bytes
  1948 ;; Hardware stack levels used: 1
  1949 ;; Hardware stack levels required when called: 17
  1950 ;; This function calls:
  1951 ;;		_printf
  1952 ;; This function is called by:
  1953 ;;		_loop
  1954 ;; This function uses a non-reentrant model
  1955 ;;
  1956                           
  1957                           	psect	text2
  1958  00427E                     __ptext2:
  1959                           	callstack 0
  1960  00427E                     _getReverse:
  1961                           	callstack 12
  1962  00427E                     
  1963                           ;main.c: 201:     if (distFront < (15)) {
  1964  00427E  0100               	movlb	0	; () banked
  1965  004280  51FE               	movf	(_distFront+1)& (0+255),w,b	;volatile
  1966  004282  E107               	bnz	u10081
  1967  004284  0E0F               	movlw	15
  1968  004286  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
  1969  004288  B0D8               	btfsc	status,0,c
  1970  00428A  EF49  F021         	goto	u10081
  1971  00428E  EF4B  F021         	goto	u10080
  1972  004292                     u10081:
  1973  004292  EF50  F021         	goto	l9013
  1974  004296                     u10080:
  1975  004296                     
  1976                           ; BSR set to: 0
  1977                           ;main.c: 202:         ++reverseCount;
  1978  004296  0101               	movlb	1	; () banked
  1979  004298  4B34               	infsnz	_reverseCount& (0+255),f,b
  1980  00429A  2B35               	incf	(_reverseCount+1)& (0+255),f,b
  1981                           
  1982                           ;main.c: 203:     } else if(driveMode != ReverseRight && driveMode != ReverseLeft) {
  1983  00429C  EF67  F021         	goto	l9019
  1984  0042A0                     l9013:
  1985                           
  1986                           ; BSR set to: 0
  1987  0042A0  0E02               	movlw	2
  1988  0042A2  19FC               	xorwf	_driveMode& (0+255),w,b
  1989  0042A4  B4D8               	btfsc	status,2,c
  1990  0042A6  EF57  F021         	goto	u10091
  1991  0042AA  EF59  F021         	goto	u10090
  1992  0042AE                     u10091:
  1993  0042AE  EF67  F021         	goto	l9019
  1994  0042B2                     u10090:
  1995  0042B2                     
  1996                           ; BSR set to: 0
  1997  0042B2  0E03               	movlw	3
  1998  0042B4  19FC               	xorwf	_driveMode& (0+255),w,b
  1999  0042B6  B4D8               	btfsc	status,2,c
  2000  0042B8  EF60  F021         	goto	u10101
  2001  0042BC  EF62  F021         	goto	u10100
  2002  0042C0                     u10101:
  2003  0042C0  EF67  F021         	goto	l9019
  2004  0042C4                     u10100:
  2005  0042C4                     
  2006                           ; BSR set to: 0
  2007                           ;main.c: 204:         reverseCount = 0;
  2008  0042C4  0E00               	movlw	0
  2009  0042C6  0101               	movlb	1	; () banked
  2010  0042C8  6F35               	movwf	(_reverseCount+1)& (0+255),b
  2011  0042CA  0E00               	movlw	0
  2012  0042CC  6F34               	movwf	_reverseCount& (0+255),b
  2013  0042CE                     l9019:
  2014                           
  2015                           ;main.c: 207:     if (reverseCount > (50)) {
  2016  0042CE  0101               	movlb	1	; () banked
  2017  0042D0  5135               	movf	(_reverseCount+1)& (0+255),w,b
  2018  0042D2  E109               	bnz	u10110
  2019  0042D4  0E33               	movlw	51
  2020  0042D6  5D34               	subwf	_reverseCount& (0+255),w,b
  2021  0042D8  A0D8               	btfss	status,0,c
  2022  0042DA  EF71  F021         	goto	u10111
  2023  0042DE  EF73  F021         	goto	u10110
  2024  0042E2                     u10111:
  2025  0042E2  EFD6  F021         	goto	l1321
  2026  0042E6                     u10110:
  2027  0042E6                     
  2028                           ; BSR set to: 1
  2029                           ;main.c: 208:         ++reverseTime;
  2030  0042E6  4B2A               	infsnz	_reverseTime& (0+255),f,b
  2031  0042E8  2B2B               	incf	(_reverseTime+1)& (0+255),f,b
  2032  0042EA                     
  2033                           ; BSR set to: 1
  2034                           ;main.c: 210:         if (driveMode != ReverseRight && driveMode != ReverseLeft) {
  2035  0042EA  0E02               	movlw	2
  2036  0042EC  0100               	movlb	0	; () banked
  2037  0042EE  19FC               	xorwf	_driveMode& (0+255),w,b
  2038  0042F0  B4D8               	btfsc	status,2,c
  2039  0042F2  EF7D  F021         	goto	u10121
  2040  0042F6  EF7F  F021         	goto	u10120
  2041  0042FA                     u10121:
  2042  0042FA  EFA9  F021         	goto	l9037
  2043  0042FE                     u10120:
  2044  0042FE                     
  2045                           ; BSR set to: 0
  2046  0042FE  0E03               	movlw	3
  2047  004300  19FC               	xorwf	_driveMode& (0+255),w,b
  2048  004302  B4D8               	btfsc	status,2,c
  2049  004304  EF86  F021         	goto	u10131
  2050  004308  EF88  F021         	goto	u10130
  2051  00430C                     u10131:
  2052  00430C  EFA9  F021         	goto	l9037
  2053  004310                     u10130:
  2054  004310                     
  2055                           ; BSR set to: 0
  2056                           ;main.c: 211:             if (distLeft > distRight) {
  2057  004310  51F5               	movf	_distLeft& (0+255),w,b	;volatile
  2058  004312  5DF3               	subwf	_distRight& (0+255),w,b	;volatile
  2059  004314  51F6               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  2060  004316  59F4               	subwfb	(_distRight+1)& (0+255),w,b	;volatile
  2061  004318  B0D8               	btfsc	status,0,c
  2062  00431A  EF91  F021         	goto	u10141
  2063  00431E  EF93  F021         	goto	u10140
  2064  004322                     u10141:
  2065  004322  EF9F  F021         	goto	l9033
  2066  004326                     u10140:
  2067  004326                     
  2068                           ; BSR set to: 0
  2069                           ;main.c: 212:                 printf("ReverseRigth\n");
  2070  004326  0E34               	movlw	low STR_8
  2071  004328  0101               	movlb	1	; () banked
  2072  00432A  6FA6               	movwf	printf@fmt& (0+255),b
  2073  00432C  0E10               	movlw	high STR_8
  2074  00432E  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  2075  004330  ECDA  F02D         	call	_printf	;wreg free
  2076  004334                     
  2077                           ;main.c: 213:                 driveMode = ReverseRight;
  2078  004334  0E02               	movlw	2
  2079  004336  0100               	movlb	0	; () banked
  2080  004338  6FFC               	movwf	_driveMode& (0+255),b
  2081                           
  2082                           ;main.c: 214:             } else {
  2083  00433A  EFA9  F021         	goto	l9037
  2084  00433E                     l9033:
  2085                           
  2086                           ; BSR set to: 0
  2087                           ;main.c: 215:                 printf("ReverseLeft\n");
  2088  00433E  0E42               	movlw	low STR_9
  2089  004340  0101               	movlb	1	; () banked
  2090  004342  6FA6               	movwf	printf@fmt& (0+255),b
  2091  004344  0E10               	movlw	high STR_9
  2092  004346  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  2093  004348  ECDA  F02D         	call	_printf	;wreg free
  2094  00434C                     
  2095                           ;main.c: 216:                 driveMode = ReverseLeft;
  2096  00434C  0E03               	movlw	3
  2097  00434E  0100               	movlb	0	; () banked
  2098  004350  6FFC               	movwf	_driveMode& (0+255),b
  2099  004352                     l9037:
  2100                           
  2101                           ; BSR set to: 0
  2102                           ;main.c: 220:         if (distFront > (35) || reverseTime > (300)) {
  2103  004352  51FE               	movf	(_distFront+1)& (0+255),w,b	;volatile
  2104  004354  E107               	bnz	u10151
  2105  004356  0E24               	movlw	36
  2106  004358  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
  2107  00435A  B0D8               	btfsc	status,0,c
  2108  00435C  EFB2  F021         	goto	u10151
  2109  004360  EFB4  F021         	goto	u10150
  2110  004364                     u10151:
  2111  004364  EFC3  F021         	goto	l9041
  2112  004368                     u10150:
  2113  004368                     
  2114                           ; BSR set to: 0
  2115  004368  0101               	movlb	1	; () banked
  2116  00436A  BF2B               	btfsc	(_reverseTime+1)& (0+255),7,b
  2117  00436C  EFC1  F021         	goto	u10161
  2118  004370  0E2D               	movlw	45
  2119  004372  5D2A               	subwf	_reverseTime& (0+255),w,b
  2120  004374  0E01               	movlw	1
  2121  004376  592B               	subwfb	(_reverseTime+1)& (0+255),w,b
  2122  004378  A0D8               	btfss	status,0,c
  2123  00437A  EFC1  F021         	goto	u10161
  2124  00437E  EFC3  F021         	goto	u10160
  2125  004382                     u10161:
  2126  004382  EFD6  F021         	goto	l1321
  2127  004386                     u10160:
  2128  004386                     l9041:
  2129                           
  2130                           ;main.c: 221:             printf("Stop Reverse\n");
  2131  004386  0E26               	movlw	low STR_10
  2132  004388  0101               	movlb	1	; () banked
  2133  00438A  6FA6               	movwf	printf@fmt& (0+255),b
  2134  00438C  0E10               	movlw	high STR_10
  2135  00438E  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  2136  004390  ECDA  F02D         	call	_printf	;wreg free
  2137  004394                     
  2138                           ;main.c: 223:                 driveMode = Straight;
  2139  004394  0E00               	movlw	0
  2140  004396  0100               	movlb	0	; () banked
  2141  004398  6FFC               	movwf	_driveMode& (0+255),b
  2142  00439A                     
  2143                           ; BSR set to: 0
  2144                           ;main.c: 228:             reverseCount = 0;
  2145  00439A  0E00               	movlw	0
  2146  00439C  0101               	movlb	1	; () banked
  2147  00439E  6F35               	movwf	(_reverseCount+1)& (0+255),b
  2148  0043A0  0E00               	movlw	0
  2149  0043A2  6F34               	movwf	_reverseCount& (0+255),b
  2150                           
  2151                           ;main.c: 229:             reverseTime = 0;
  2152  0043A4  0E00               	movlw	0
  2153  0043A6  6F2B               	movwf	(_reverseTime+1)& (0+255),b
  2154  0043A8  0E00               	movlw	0
  2155  0043AA  6F2A               	movwf	_reverseTime& (0+255),b
  2156  0043AC                     l1321:
  2157                           
  2158                           ; BSR set to: 1
  2159  0043AC  0012               	return		;funcret
  2160  0043AE                     __end_of_getReverse:
  2161                           	callstack 0
  2162                           
  2163 ;; *************** function _getCurve *****************
  2164 ;; Defined at:
  2165 ;;		line 128 in file "main.c"
  2166 ;; Parameters:    Size  Location     Type
  2167 ;;		None
  2168 ;; Auto vars:     Size  Location     Type
  2169 ;;  deltaLeft       2   18[BANK1 ] short 
  2170 ;;  deltaRight      2   16[BANK1 ] short 
  2171 ;; Return value:  Size  Location     Type
  2172 ;;                  1    wreg      void 
  2173 ;; Registers used:
  2174 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2175 ;; Tracked objects:
  2176 ;;		On entry : 0/0
  2177 ;;		On exit  : 0/0
  2178 ;;		Unchanged: 0/0
  2179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2181 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2182 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2183 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2184 ;;Total ram usage:        6 bytes
  2185 ;; Hardware stack levels used: 1
  2186 ;; Hardware stack levels required when called: 17
  2187 ;; This function calls:
  2188 ;;		_printf
  2189 ;; This function is called by:
  2190 ;;		_loop
  2191 ;; This function uses a non-reentrant model
  2192 ;;
  2193                           
  2194                           	psect	text3
  2195  002F1A                     __ptext3:
  2196                           	callstack 0
  2197  002F1A                     _getCurve:
  2198                           	callstack 12
  2199  002F1A                     
  2200                           ;main.c: 129:     int16_t deltaLeft = (int16_t) (distLeft - oldDistLeft);
  2201  002F1A  0100               	movlb	0	; () banked
  2202  002F1C  51F1               	movf	_oldDistLeft& (0+255),w,b
  2203  002F1E  5DF5               	subwf	_distLeft& (0+255),w,b	;volatile
  2204  002F20  0101               	movlb	1	; () banked
  2205  002F22  6FB2               	movwf	getCurve@deltaLeft& (0+255),b
  2206  002F24  0100               	movlb	0	; () banked
  2207  002F26  51F2               	movf	(_oldDistLeft+1)& (0+255),w,b
  2208  002F28  59F6               	subwfb	(_distLeft+1)& (0+255),w,b	;volatile
  2209  002F2A  0101               	movlb	1	; () banked
  2210  002F2C  6FB3               	movwf	(getCurve@deltaLeft+1)& (0+255),b
  2211                           
  2212                           ;main.c: 130:     int16_t deltaRight = (int16_t) (distRight - oldDistRight);
  2213  002F2E  0100               	movlb	0	; () banked
  2214  002F30  51EF               	movf	_oldDistRight& (0+255),w,b
  2215  002F32  5DF3               	subwf	_distRight& (0+255),w,b	;volatile
  2216  002F34  0101               	movlb	1	; () banked
  2217  002F36  6FB0               	movwf	getCurve@deltaRight& (0+255),b
  2218  002F38  0100               	movlb	0	; () banked
  2219  002F3A  51F0               	movf	(_oldDistRight+1)& (0+255),w,b
  2220  002F3C  59F4               	subwfb	(_distRight+1)& (0+255),w,b	;volatile
  2221  002F3E  0101               	movlb	1	; () banked
  2222  002F40  6FB1               	movwf	(getCurve@deltaRight+1)& (0+255),b
  2223                           
  2224                           ;main.c: 132:     switch (curveMode) {
  2225  002F42  EFD9  F018         	goto	l9003
  2226  002F46                     l8923:
  2227                           
  2228                           ; BSR set to: 1
  2229                           ;main.c: 134:             if (deltaLeft > (30) && deltaLeft < (300) && oldDistLeft < (12
      +                          5)) {
  2230  002F46  BFB3               	btfsc	(getCurve@deltaLeft+1)& (0+255),7,b
  2231  002F48  EFAF  F017         	goto	u9901
  2232  002F4C  51B3               	movf	(getCurve@deltaLeft+1)& (0+255),w,b
  2233  002F4E  E109               	bnz	u9900
  2234  002F50  0E1F               	movlw	31
  2235  002F52  5DB2               	subwf	getCurve@deltaLeft& (0+255),w,b
  2236  002F54  A0D8               	btfss	status,0,c
  2237  002F56  EFAF  F017         	goto	u9901
  2238  002F5A  EFB1  F017         	goto	u9900
  2239  002F5E                     u9901:
  2240  002F5E  EFD4  F017         	goto	l8933
  2241  002F62                     u9900:
  2242  002F62                     
  2243                           ; BSR set to: 1
  2244  002F62  BFB3               	btfsc	(getCurve@deltaLeft+1)& (0+255),7,b
  2245  002F64  EFBF  F017         	goto	u9910
  2246  002F68  0E2C               	movlw	44
  2247  002F6A  5DB2               	subwf	getCurve@deltaLeft& (0+255),w,b
  2248  002F6C  0E01               	movlw	1
  2249  002F6E  59B3               	subwfb	(getCurve@deltaLeft+1)& (0+255),w,b
  2250  002F70  B0D8               	btfsc	status,0,c
  2251  002F72  EFBD  F017         	goto	u9911
  2252  002F76  EFBF  F017         	goto	u9910
  2253  002F7A                     u9911:
  2254  002F7A  EFD4  F017         	goto	l8933
  2255  002F7E                     u9910:
  2256  002F7E                     
  2257                           ; BSR set to: 1
  2258  002F7E  0100               	movlb	0	; () banked
  2259  002F80  51F2               	movf	(_oldDistLeft+1)& (0+255),w,b
  2260  002F82  E107               	bnz	u9921
  2261  002F84  0E7D               	movlw	125
  2262  002F86  5DF1               	subwf	_oldDistLeft& (0+255),w,b
  2263  002F88  B0D8               	btfsc	status,0,c
  2264  002F8A  EFC9  F017         	goto	u9921
  2265  002F8E  EFCB  F017         	goto	u9920
  2266  002F92                     u9921:
  2267  002F92  EFD4  F017         	goto	l8933
  2268  002F96                     u9920:
  2269  002F96                     
  2270                           ; BSR set to: 0
  2271                           ;main.c: 135:                 delay = 0;
  2272  002F96  0E00               	movlw	0
  2273  002F98  6FF7               	movwf	_delay& (0+255),b
  2274                           
  2275                           ;main.c: 136:                 curveMode = BeforeCurve;
  2276  002F9A  0E01               	movlw	1
  2277  002F9C  6FFB               	movwf	_curveMode& (0+255),b
  2278                           
  2279                           ;main.c: 137:                 driveMode = CurveLeft;
  2280  002F9E  0E04               	movlw	4
  2281  002FA0  6FFC               	movwf	_driveMode& (0+255),b
  2282  002FA2                     
  2283                           ; BSR set to: 0
  2284                           ;main.c: 138:                 ++curveLeftCount;
  2285  002FA2  2BF9               	incf	_curveLeftCount& (0+255),f,b
  2286                           
  2287                           ;main.c: 141:             } else if (deltaRight > (30) && deltaRight < (300) && oldDistR
      +                          ight < (125)) {
  2288  002FA4  EFF8  F018         	goto	l1284
  2289  002FA8                     l8933:
  2290  002FA8  0101               	movlb	1	; () banked
  2291  002FAA  BFB1               	btfsc	(getCurve@deltaRight+1)& (0+255),7,b
  2292  002FAC  EFE1  F017         	goto	u9931
  2293  002FB0  51B1               	movf	(getCurve@deltaRight+1)& (0+255),w,b
  2294  002FB2  E109               	bnz	u9930
  2295  002FB4  0E1F               	movlw	31
  2296  002FB6  5DB0               	subwf	getCurve@deltaRight& (0+255),w,b
  2297  002FB8  A0D8               	btfss	status,0,c
  2298  002FBA  EFE1  F017         	goto	u9931
  2299  002FBE  EFE3  F017         	goto	u9930
  2300  002FC2                     u9931:
  2301  002FC2  EFF8  F018         	goto	l1284
  2302  002FC6                     u9930:
  2303  002FC6                     
  2304                           ; BSR set to: 1
  2305  002FC6  BFB1               	btfsc	(getCurve@deltaRight+1)& (0+255),7,b
  2306  002FC8  EFF1  F017         	goto	u9940
  2307  002FCC  0E2C               	movlw	44
  2308  002FCE  5DB0               	subwf	getCurve@deltaRight& (0+255),w,b
  2309  002FD0  0E01               	movlw	1
  2310  002FD2  59B1               	subwfb	(getCurve@deltaRight+1)& (0+255),w,b
  2311  002FD4  B0D8               	btfsc	status,0,c
  2312  002FD6  EFEF  F017         	goto	u9941
  2313  002FDA  EFF1  F017         	goto	u9940
  2314  002FDE                     u9941:
  2315  002FDE  EFF8  F018         	goto	l1284
  2316  002FE2                     u9940:
  2317  002FE2                     
  2318                           ; BSR set to: 1
  2319  002FE2  0100               	movlb	0	; () banked
  2320  002FE4  51F0               	movf	(_oldDistRight+1)& (0+255),w,b
  2321  002FE6  E107               	bnz	u9951
  2322  002FE8  0E7D               	movlw	125
  2323  002FEA  5DEF               	subwf	_oldDistRight& (0+255),w,b
  2324  002FEC  B0D8               	btfsc	status,0,c
  2325  002FEE  EFFB  F017         	goto	u9951
  2326  002FF2  EFFD  F017         	goto	u9950
  2327  002FF6                     u9951:
  2328  002FF6  EFF8  F018         	goto	l1284
  2329  002FFA                     u9950:
  2330  002FFA                     
  2331                           ; BSR set to: 0
  2332                           ;main.c: 142:                 delay = 0;
  2333  002FFA  0E00               	movlw	0
  2334  002FFC  6FF7               	movwf	_delay& (0+255),b
  2335                           
  2336                           ;main.c: 143:                 curveMode = BeforeCurve;
  2337  002FFE  0E01               	movlw	1
  2338  003000  6FFB               	movwf	_curveMode& (0+255),b
  2339                           
  2340                           ;main.c: 144:                 driveMode = CurveRight;
  2341  003002  0E05               	movlw	5
  2342  003004  6FFC               	movwf	_driveMode& (0+255),b
  2343  003006                     
  2344                           ; BSR set to: 0
  2345                           ;main.c: 145:                 ++curveRightCount;
  2346  003006  2BF8               	incf	_curveRightCount& (0+255),f,b
  2347  003008  EFF8  F018         	goto	l1284
  2348  00300C                     l8943:
  2349                           
  2350                           ; BSR set to: 1
  2351                           ;main.c: 152:             if (delay >= (10)) {
  2352  00300C  0E09               	movlw	9
  2353  00300E  0100               	movlb	0	; () banked
  2354  003010  65F7               	cpfsgt	_delay& (0+255),b
  2355  003012  EF0D  F018         	goto	u9961
  2356  003016  EF0F  F018         	goto	u9960
  2357  00301A                     u9961:
  2358  00301A  EF1C  F018         	goto	l8949
  2359  00301E                     u9960:
  2360  00301E                     
  2361                           ; BSR set to: 0
  2362                           ;main.c: 153:                 delay = 0;
  2363  00301E  0E00               	movlw	0
  2364  003020  6FF7               	movwf	_delay& (0+255),b
  2365                           
  2366                           ;main.c: 154:                 curveMode = InCurve;
  2367  003022  0E02               	movlw	2
  2368  003024  6FFB               	movwf	_curveMode& (0+255),b
  2369  003026                     
  2370                           ; BSR set to: 0
  2371                           ;main.c: 155:                 printf("InCurve\n");
  2372  003026  0E7D               	movlw	low STR_2
  2373  003028  0101               	movlb	1	; () banked
  2374  00302A  6FA6               	movwf	printf@fmt& (0+255),b
  2375  00302C  0E10               	movlw	high STR_2
  2376  00302E  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  2377  003030  ECDA  F02D         	call	_printf	;wreg free
  2378                           
  2379                           ;main.c: 156:             } else {
  2380  003034  EFF8  F018         	goto	l1284
  2381  003038                     l8949:
  2382                           
  2383                           ;main.c: 157:                 ++delay;
  2384  003038  0100               	movlb	0	; () banked
  2385  00303A  2BF7               	incf	_delay& (0+255),f,b
  2386  00303C  EFF8  F018         	goto	l1284
  2387  003040                     l8951:
  2388                           
  2389                           ; BSR set to: 1
  2390                           ;main.c: 161:             if (delay >= (20)) {
  2391  003040  0E13               	movlw	19
  2392  003042  0100               	movlb	0	; () banked
  2393  003044  65F7               	cpfsgt	_delay& (0+255),b
  2394  003046  EF27  F018         	goto	u9971
  2395  00304A  EF29  F018         	goto	u9970
  2396  00304E                     u9971:
  2397  00304E  EF1C  F018         	goto	l8949
  2398  003052                     u9970:
  2399  003052                     
  2400                           ; BSR set to: 0
  2401                           ;main.c: 162:                 if ((driveMode == CurveLeft && distLeft < (45)) || (driveM
      +                          ode == CurveRight && distRight < (45)) || distFront > (300)) {
  2402  003052  0E04               	movlw	4
  2403  003054  19FC               	xorwf	_driveMode& (0+255),w,b
  2404  003056  A4D8               	btfss	status,2,c
  2405  003058  EF30  F018         	goto	u9981
  2406  00305C  EF32  F018         	goto	u9980
  2407  003060                     u9981:
  2408  003060  EF3D  F018         	goto	l8957
  2409  003064                     u9980:
  2410  003064                     
  2411                           ; BSR set to: 0
  2412  003064  51F6               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  2413  003066  E109               	bnz	u9990
  2414  003068  0E2D               	movlw	45
  2415  00306A  5DF5               	subwf	_distLeft& (0+255),w,b	;volatile
  2416  00306C  A0D8               	btfss	status,0,c
  2417  00306E  EF3B  F018         	goto	u9991
  2418  003072  EF3D  F018         	goto	u9990
  2419  003076                     u9991:
  2420  003076  EF5C  F018         	goto	l8963
  2421  00307A                     u9990:
  2422  00307A                     l8957:
  2423                           
  2424                           ; BSR set to: 0
  2425  00307A  0E05               	movlw	5
  2426  00307C  19FC               	xorwf	_driveMode& (0+255),w,b
  2427  00307E  A4D8               	btfss	status,2,c
  2428  003080  EF44  F018         	goto	u10001
  2429  003084  EF46  F018         	goto	u10000
  2430  003088                     u10001:
  2431  003088  EF51  F018         	goto	l8961
  2432  00308C                     u10000:
  2433  00308C                     
  2434                           ; BSR set to: 0
  2435  00308C  51F4               	movf	(_distRight+1)& (0+255),w,b	;volatile
  2436  00308E  E109               	bnz	u10010
  2437  003090  0E2D               	movlw	45
  2438  003092  5DF3               	subwf	_distRight& (0+255),w,b	;volatile
  2439  003094  A0D8               	btfss	status,0,c
  2440  003096  EF4F  F018         	goto	u10011
  2441  00309A  EF51  F018         	goto	u10010
  2442  00309E                     u10011:
  2443  00309E  EF5C  F018         	goto	l8963
  2444  0030A2                     u10010:
  2445  0030A2                     l8961:
  2446                           
  2447                           ; BSR set to: 0
  2448  0030A2  0E2D               	movlw	45
  2449  0030A4  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
  2450  0030A6  0E01               	movlw	1
  2451  0030A8  59FE               	subwfb	(_distFront+1)& (0+255),w,b	;volatile
  2452  0030AA  A0D8               	btfss	status,0,c
  2453  0030AC  EF5A  F018         	goto	u10021
  2454  0030B0  EF5C  F018         	goto	u10020
  2455  0030B4                     u10021:
  2456  0030B4  EF9E  F018         	goto	l8979
  2457  0030B8                     u10020:
  2458  0030B8                     l8963:
  2459                           
  2460                           ; BSR set to: 0
  2461                           ;main.c: 163:                     if(distLeft < (45)){
  2462  0030B8  51F6               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  2463  0030BA  E107               	bnz	u10031
  2464  0030BC  0E2D               	movlw	45
  2465  0030BE  5DF5               	subwf	_distLeft& (0+255),w,b	;volatile
  2466  0030C0  B0D8               	btfsc	status,0,c
  2467  0030C2  EF65  F018         	goto	u10031
  2468  0030C6  EF67  F018         	goto	u10030
  2469  0030CA                     u10031:
  2470  0030CA  EF70  F018         	goto	l8967
  2471  0030CE                     u10030:
  2472  0030CE                     
  2473                           ; BSR set to: 0
  2474                           ;main.c: 164:                         printf("Left Out!\n");
  2475  0030CE  0E67               	movlw	low STR_3
  2476  0030D0  0101               	movlb	1	; () banked
  2477  0030D2  6FA6               	movwf	printf@fmt& (0+255),b
  2478  0030D4  0E10               	movlw	high STR_3
  2479  0030D6  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  2480  0030D8  ECDA  F02D         	call	_printf	;wreg free
  2481                           
  2482                           ;main.c: 165:                     } else if(distRight < (45)){
  2483  0030DC  EF8B  F018         	goto	l1298
  2484  0030E0                     l8967:
  2485                           
  2486                           ; BSR set to: 0
  2487  0030E0  51F4               	movf	(_distRight+1)& (0+255),w,b	;volatile
  2488  0030E2  E107               	bnz	u10041
  2489  0030E4  0E2D               	movlw	45
  2490  0030E6  5DF3               	subwf	_distRight& (0+255),w,b	;volatile
  2491  0030E8  B0D8               	btfsc	status,0,c
  2492  0030EA  EF79  F018         	goto	u10041
  2493  0030EE  EF7B  F018         	goto	u10040
  2494  0030F2                     u10041:
  2495  0030F2  EF84  F018         	goto	l8971
  2496  0030F6                     u10040:
  2497  0030F6                     
  2498                           ; BSR set to: 0
  2499                           ;main.c: 166:                         printf("Right Out!\n");
  2500  0030F6  0E4F               	movlw	low STR_4
  2501  0030F8  0101               	movlb	1	; () banked
  2502  0030FA  6FA6               	movwf	printf@fmt& (0+255),b
  2503  0030FC  0E10               	movlw	high STR_4
  2504  0030FE  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  2505  003100  ECDA  F02D         	call	_printf	;wreg free
  2506                           
  2507                           ;main.c: 167:                     } else {
  2508  003104  EF8B  F018         	goto	l1298
  2509  003108                     l8971:
  2510                           
  2511                           ; BSR set to: 0
  2512                           ;main.c: 168:                         printf("Front Out!\n");
  2513  003108  0E5B               	movlw	low STR_5
  2514  00310A  0101               	movlb	1	; () banked
  2515  00310C  6FA6               	movwf	printf@fmt& (0+255),b
  2516  00310E  0E10               	movlw	high STR_5
  2517  003110  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  2518  003112  ECDA  F02D         	call	_printf	;wreg free
  2519  003116                     l1298:
  2520                           
  2521                           ;main.c: 170:                     printf("CurveTime: %d\n", delay);
  2522  003116  0E17               	movlw	low STR_6
  2523  003118  0101               	movlb	1	; () banked
  2524  00311A  6FA6               	movwf	printf@fmt& (0+255),b
  2525  00311C  0E10               	movlw	high STR_6
  2526  00311E  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  2527  003120  C0F7  F1A8         	movff	_delay,?_printf+2
  2528  003124  6BA9               	clrf	(?_printf+3)& (0+255),b
  2529  003126  ECDA  F02D         	call	_printf	;wreg free
  2530  00312A                     
  2531                           ;main.c: 171:                     delay = 0;
  2532  00312A  0E00               	movlw	0
  2533  00312C  0100               	movlb	0	; () banked
  2534  00312E  6FF7               	movwf	_delay& (0+255),b
  2535  003130                     
  2536                           ; BSR set to: 0
  2537                           ;main.c: 172:                     curveMode = AfterCurve;
  2538  003130  0E03               	movlw	3
  2539  003132  6FFB               	movwf	_curveMode& (0+255),b
  2540  003134                     
  2541                           ; BSR set to: 0
  2542                           ;main.c: 174:                     driveMode = Straight;
  2543  003134  0E00               	movlw	0
  2544  003136  6FFC               	movwf	_driveMode& (0+255),b
  2545                           
  2546                           ;main.c: 176:                 } else if(driveMode == CurveRight && deltaLeft > (30)){
  2547  003138  EF1C  F018         	goto	l8949
  2548  00313C                     l8979:
  2549                           
  2550                           ; BSR set to: 0
  2551  00313C  0E05               	movlw	5
  2552  00313E  19FC               	xorwf	_driveMode& (0+255),w,b
  2553  003140  A4D8               	btfss	status,2,c
  2554  003142  EFA5  F018         	goto	u10051
  2555  003146  EFA7  F018         	goto	u10050
  2556  00314A                     u10051:
  2557  00314A  EF1C  F018         	goto	l8949
  2558  00314E                     u10050:
  2559  00314E                     
  2560                           ; BSR set to: 0
  2561  00314E  0101               	movlb	1	; () banked
  2562  003150  BFB3               	btfsc	(getCurve@deltaLeft+1)& (0+255),7,b
  2563  003152  EFB4  F018         	goto	u10061
  2564  003156  51B3               	movf	(getCurve@deltaLeft+1)& (0+255),w,b
  2565  003158  E109               	bnz	u10060
  2566  00315A  0E1F               	movlw	31
  2567  00315C  5DB2               	subwf	getCurve@deltaLeft& (0+255),w,b
  2568  00315E  A0D8               	btfss	status,0,c
  2569  003160  EFB4  F018         	goto	u10061
  2570  003164  EFB6  F018         	goto	u10060
  2571  003168                     u10061:
  2572  003168  EF1C  F018         	goto	l8949
  2573  00316C                     u10060:
  2574  00316C                     
  2575                           ; BSR set to: 1
  2576                           ;main.c: 177:                     printf("Switch!\nDeltLeft: %d\n", deltaLeft);
  2577  00316C  0E01               	movlw	low STR_7
  2578  00316E  6FA6               	movwf	printf@fmt& (0+255),b
  2579  003170  0E10               	movlw	high STR_7
  2580  003172  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  2581  003174  C1B2  F1A8         	movff	getCurve@deltaLeft,?_printf+2
  2582  003178  C1B3  F1A9         	movff	getCurve@deltaLeft+1,?_printf+3
  2583  00317C  ECDA  F02D         	call	_printf	;wreg free
  2584  003180                     
  2585                           ;main.c: 178:                     delay = 0;
  2586  003180  0E00               	movlw	0
  2587  003182  0100               	movlb	0	; () banked
  2588  003184  6FF7               	movwf	_delay& (0+255),b
  2589  003186                     
  2590                           ; BSR set to: 0
  2591                           ;main.c: 179:                     curveMode = BeforeCurve;
  2592  003186  0E01               	movlw	1
  2593  003188  6FFB               	movwf	_curveMode& (0+255),b
  2594  00318A                     
  2595                           ; BSR set to: 0
  2596                           ;main.c: 180:                     driveMode = CurveLeft;
  2597  00318A  0E04               	movlw	4
  2598  00318C  6FFC               	movwf	_driveMode& (0+255),b
  2599  00318E                     
  2600                           ; BSR set to: 0
  2601                           ;main.c: 181:                     ++curveLeftCount;
  2602  00318E  2BF9               	incf	_curveLeftCount& (0+255),f,b
  2603  003190  EF1C  F018         	goto	l8949
  2604  003194                     l8995:
  2605                           
  2606                           ; BSR set to: 1
  2607                           ;main.c: 187:             if (delay >= (1)) {
  2608  003194  0100               	movlb	0	; () banked
  2609  003196  51F7               	movf	_delay& (0+255),w,b
  2610  003198  B4D8               	btfsc	status,2,c
  2611  00319A  EFD1  F018         	goto	u10071
  2612  00319E  EFD3  F018         	goto	u10070
  2613  0031A2                     u10071:
  2614  0031A2  EF1C  F018         	goto	l8949
  2615  0031A6                     u10070:
  2616  0031A6                     
  2617                           ; BSR set to: 0
  2618                           ;main.c: 188:                 delay = 0;
  2619  0031A6  0E00               	movlw	0
  2620  0031A8  6FF7               	movwf	_delay& (0+255),b
  2621                           
  2622                           ;main.c: 189:                 curveMode = OutCurve;
  2623  0031AA  0E00               	movlw	0
  2624  0031AC  6FFB               	movwf	_curveMode& (0+255),b
  2625                           
  2626                           ;main.c: 191:             } else {
  2627  0031AE  EFF8  F018         	goto	l1284
  2628  0031B2                     l9003:
  2629                           
  2630                           ; BSR set to: 1
  2631  0031B2  0100               	movlb	0	; () banked
  2632  0031B4  51FB               	movf	_curveMode& (0+255),w,b
  2633  0031B6  0101               	movlb	1	; () banked
  2634  0031B8  6FAE               	movwf	??_getCurve& (0+255),b
  2635  0031BA  6BAF               	clrf	(??_getCurve+1)& (0+255),b
  2636                           
  2637                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2638                           ; Switch size 1, requested type "simple"
  2639                           ; Number of cases is 1, Range of values is 0 to 0
  2640                           ; switch strategies available:
  2641                           ; Name         Instructions Cycles
  2642                           ; simple_byte            4     3 (average)
  2643                           ;	Chosen strategy is simple_byte
  2644  0031BC  51AF               	movf	(??_getCurve+1)& (0+255),w,b
  2645  0031BE  0A00               	xorlw	0	; case 0
  2646  0031C0  B4D8               	btfsc	status,2,c
  2647  0031C2  EFE5  F018         	goto	l9397
  2648  0031C6  EFF8  F018         	goto	l1284
  2649  0031CA                     l9397:
  2650                           
  2651                           ; BSR set to: 1
  2652                           ; Switch size 1, requested type "simple"
  2653                           ; Number of cases is 4, Range of values is 0 to 3
  2654                           ; switch strategies available:
  2655                           ; Name         Instructions Cycles
  2656                           ; simple_byte           13     7 (average)
  2657                           ;	Chosen strategy is simple_byte
  2658  0031CA  51AE               	movf	??_getCurve& (0+255),w,b
  2659  0031CC  0A00               	xorlw	0	; case 0
  2660  0031CE  B4D8               	btfsc	status,2,c
  2661  0031D0  EFA3  F017         	goto	l8923
  2662  0031D4  0A01               	xorlw	1	; case 1
  2663  0031D6  B4D8               	btfsc	status,2,c
  2664  0031D8  EF06  F018         	goto	l8943
  2665  0031DC  0A03               	xorlw	3	; case 2
  2666  0031DE  B4D8               	btfsc	status,2,c
  2667  0031E0  EF20  F018         	goto	l8951
  2668  0031E4  0A01               	xorlw	1	; case 3
  2669  0031E6  B4D8               	btfsc	status,2,c
  2670  0031E8  EFCA  F018         	goto	l8995
  2671  0031EC  EFF8  F018         	goto	l1284
  2672  0031F0                     l1284:
  2673                           
  2674                           ;main.c: 196:     oldDistLeft = distLeft;
  2675  0031F0  C0F5  F0F1         	movff	_distLeft,_oldDistLeft	;volatile
  2676  0031F4  C0F6  F0F2         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  2677                           
  2678                           ;main.c: 197:     oldDistRight = distRight;
  2679  0031F8  C0F3  F0EF         	movff	_distRight,_oldDistRight	;volatile
  2680  0031FC  C0F4  F0F0         	movff	_distRight+1,_oldDistRight+1	;volatile
  2681  003200  0012               	return		;funcret
  2682  003202                     __end_of_getCurve:
  2683                           	callstack 0
  2684                           
  2685 ;; *************** function _checkBatt *****************
  2686 ;; Defined at:
  2687 ;;		line 84 in file "main.c"
  2688 ;; Parameters:    Size  Location     Type
  2689 ;;		None
  2690 ;; Auto vars:     Size  Location     Type
  2691 ;;		None
  2692 ;; Return value:  Size  Location     Type
  2693 ;;                  1    wreg      _Bool 
  2694 ;; Registers used:
  2695 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2696 ;; Tracked objects:
  2697 ;;		On entry : 0/0
  2698 ;;		On exit  : 0/0
  2699 ;;		Unchanged: 0/0
  2700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2705 ;;Total ram usage:        0 bytes
  2706 ;; Hardware stack levels used: 1
  2707 ;; Hardware stack levels required when called: 18
  2708 ;; This function calls:
  2709 ;;		___flge
  2710 ;;		___xxtofl
  2711 ;;		_getBatteryVoltage
  2712 ;;		_setSteering
  2713 ;; This function is called by:
  2714 ;;		_loop
  2715 ;; This function uses a non-reentrant model
  2716 ;;
  2717                           
  2718                           	psect	text4
  2719  0050F0                     __ptext4:
  2720                           	callstack 0
  2721  0050F0                     _checkBatt:
  2722                           	callstack 11
  2723  0050F0                     
  2724                           ;main.c: 85:     ++battCheckCount;
  2725  0050F0  0101               	movlb	1	; () banked
  2726  0050F2  4B32               	infsnz	_battCheckCount& (0+255),f,b
  2727  0050F4  2B33               	incf	(_battCheckCount+1)& (0+255),f,b
  2728  0050F6                     
  2729                           ; BSR set to: 1
  2730                           ;main.c: 86:     if (battCheckCount > (500)) {
  2731  0050F6  0EF5               	movlw	245
  2732  0050F8  5D32               	subwf	_battCheckCount& (0+255),w,b
  2733  0050FA  0E01               	movlw	1
  2734  0050FC  5933               	subwfb	(_battCheckCount+1)& (0+255),w,b
  2735  0050FE  A0D8               	btfss	status,0,c
  2736  005100  EF84  F028         	goto	u9881
  2737  005104  EF86  F028         	goto	u9880
  2738  005108                     u9881:
  2739  005108  EFBF  F028         	goto	l8917
  2740  00510C                     u9880:
  2741  00510C                     
  2742                           ; BSR set to: 1
  2743                           ;main.c: 87:         battCheckCount = 0;
  2744  00510C  0E00               	movlw	0
  2745  00510E  6F33               	movwf	(_battCheckCount+1)& (0+255),b
  2746  005110  0E00               	movlw	0
  2747  005112  6F32               	movwf	_battCheckCount& (0+255),b
  2748  005114                     
  2749                           ; BSR set to: 1
  2750                           ;main.c: 88:         getBatteryVoltage();
  2751  005114  ECC1  F028         	call	_getBatteryVoltage	;wreg free
  2752  005118                     
  2753                           ;main.c: 90:         if (BatteryVolt < (6.8) * 409.6f) {
  2754  005118  C0E7  F01C         	movff	_BatteryVolt,___xxtofl@val
  2755  00511C  C0E8  F01D         	movff	_BatteryVolt+1,___xxtofl@val+1
  2756  005120  6A1E               	clrf	(___xxtofl@val+2)^0,c
  2757  005122  6A1F               	clrf	(___xxtofl@val+3)^0,c
  2758  005124  0E00               	movlw	0
  2759  005126  EC7F  F01D         	call	___xxtofl
  2760  00512A  C01C  F06D         	movff	?___xxtofl,___flge@ff1
  2761  00512E  C01D  F06E         	movff	?___xxtofl+1,___flge@ff1+1
  2762  005132  C01E  F06F         	movff	?___xxtofl+2,___flge@ff1+2
  2763  005136  C01F  F070         	movff	?___xxtofl+3,___flge@ff1+3
  2764  00513A  0E7B               	movlw	123
  2765  00513C  0100               	movlb	0	; () banked
  2766  00513E  6F71               	movwf	___flge@ff2& (0+255),b
  2767  005140  0E14               	movlw	20
  2768  005142  6F72               	movwf	(___flge@ff2+1)& (0+255),b
  2769  005144  0E2E               	movlw	46
  2770  005146  6F73               	movwf	(___flge@ff2+2)& (0+255),b
  2771  005148  0E45               	movlw	69
  2772  00514A  6F74               	movwf	(___flge@ff2+3)& (0+255),b
  2773  00514C  EC6F  F023         	call	___flge	;wreg free
  2774  005150  0100               	movlb	0	; () banked
  2775  005152  B0D8               	btfsc	status,0,c
  2776  005154  EFAE  F028         	goto	u9891
  2777  005158  EFB0  F028         	goto	u9890
  2778  00515C                     u9891:
  2779  00515C  EFBF  F028         	goto	l8917
  2780  005160                     u9890:
  2781  005160                     
  2782                           ; BSR set to: 0
  2783                           ;main.c: 91:             setSpeed = 0;
  2784  005160  0E00               	movlw	0
  2785  005162  6FEE               	movwf	(_setSpeed+1)& (0+255),b
  2786  005164  0E00               	movlw	0
  2787  005166  6FED               	movwf	_setSpeed& (0+255),b
  2788  005168                     
  2789                           ; BSR set to: 0
  2790                           ;main.c: 92:             setSteering(0, Front);
  2791  005168  0E00               	movlw	0
  2792  00516A  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  2793  00516C  0E00               	movlw	0
  2794  00516E  6F83               	movwf	setSteering@steering& (0+255),b
  2795  005170  0E03               	movlw	3
  2796  005172  6F85               	movwf	setSteering@steeringMode& (0+255),b
  2797  005174  EC84  F01C         	call	_setSteering	;wreg free
  2798  005178                     
  2799                           ;main.c: 93:             return 1;
  2800  005178  0E01               	movlw	1
  2801  00517A  EFC0  F028         	goto	l1261
  2802  00517E                     l8917:
  2803                           
  2804                           ;main.c: 96:     return 0;
  2805  00517E  0E00               	movlw	0
  2806  005180                     l1261:
  2807  005180  0012               	return		;funcret
  2808  005182                     __end_of_checkBatt:
  2809                           	callstack 0
  2810                           
  2811 ;; *************** function _getBatteryVoltage *****************
  2812 ;; Defined at:
  2813 ;;		line 79 in file "main.c"
  2814 ;; Parameters:    Size  Location     Type
  2815 ;;		None
  2816 ;; Auto vars:     Size  Location     Type
  2817 ;;		None
  2818 ;; Return value:  Size  Location     Type
  2819 ;;                  1    wreg      void 
  2820 ;; Registers used:
  2821 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2822 ;; Tracked objects:
  2823 ;;		On entry : 0/0
  2824 ;;		On exit  : 0/0
  2825 ;;		Unchanged: 0/0
  2826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2828 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2830 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2831 ;;Total ram usage:        4 bytes
  2832 ;; Hardware stack levels used: 1
  2833 ;; Hardware stack levels required when called: 17
  2834 ;; This function calls:
  2835 ;;		_ADCC_GetSingleConversion
  2836 ;;		___fldiv
  2837 ;;		___xxtofl
  2838 ;;		_printf
  2839 ;; This function is called by:
  2840 ;;		_loop
  2841 ;;		_checkBatt
  2842 ;; This function uses a non-reentrant model
  2843 ;;
  2844                           
  2845                           	psect	text5
  2846  005182                     __ptext5:
  2847                           	callstack 0
  2848  005182                     _getBatteryVoltage:
  2849                           	callstack 12
  2850  005182                     
  2851                           ;main.c: 80:     BatteryVolt = ADCC_GetSingleConversion(aiBatt);
  2852  005182  0E22               	movlw	34
  2853  005184  ECF2  F02C         	call	_ADCC_GetSingleConversion
  2854  005188  C014  F0E7         	movff	?_ADCC_GetSingleConversion,_BatteryVolt
  2855  00518C  C015  F0E8         	movff	?_ADCC_GetSingleConversion+1,_BatteryVolt+1
  2856                           
  2857                           ;main.c: 81:     printf("BVolt: %f\n", BatteryVolt / 409.6f);
  2858  005190  C0E7  F01C         	movff	_BatteryVolt,___xxtofl@val
  2859  005194  C0E8  F01D         	movff	_BatteryVolt+1,___xxtofl@val+1
  2860  005198  6A1E               	clrf	(___xxtofl@val+2)^0,c
  2861  00519A  6A1F               	clrf	(___xxtofl@val+3)^0,c
  2862  00519C  0E00               	movlw	0
  2863  00519E  EC7F  F01D         	call	___xxtofl
  2864  0051A2  C01C  F02A         	movff	?___xxtofl,___fldiv@b
  2865  0051A6  C01D  F02B         	movff	?___xxtofl+1,___fldiv@b+1
  2866  0051AA  C01E  F02C         	movff	?___xxtofl+2,___fldiv@b+2
  2867  0051AE  C01F  F02D         	movff	?___xxtofl+3,___fldiv@b+3
  2868  0051B2  0ECD               	movlw	205
  2869  0051B4  6E2E               	movwf	___fldiv@a^0,c
  2870  0051B6  0ECC               	movlw	204
  2871  0051B8  6E2F               	movwf	(___fldiv@a+1)^0,c
  2872  0051BA  0ECC               	movlw	204
  2873  0051BC  6E30               	movwf	(___fldiv@a+2)^0,c
  2874  0051BE  0E43               	movlw	67
  2875  0051C0  6E31               	movwf	(___fldiv@a+3)^0,c
  2876  0051C2  ECBF  F015         	call	___fldiv	;wreg free
  2877  0051C6  C02A  F1AE         	movff	?___fldiv,_getBatteryVoltage$4185
  2878  0051CA  C02B  F1AF         	movff	?___fldiv+1,_getBatteryVoltage$4185+1
  2879  0051CE  C02C  F1B0         	movff	?___fldiv+2,_getBatteryVoltage$4185+2
  2880  0051D2  C02D  F1B1         	movff	?___fldiv+3,_getBatteryVoltage$4185+3
  2881  0051D6                     
  2882                           ;main.c: 81:     printf("BVolt: %f\n", BatteryVolt / 409.6f);
  2883  0051D6  0E72               	movlw	low STR_1
  2884  0051D8  0101               	movlb	1	; () banked
  2885  0051DA  6FA6               	movwf	printf@fmt& (0+255),b
  2886  0051DC  0E10               	movlw	high STR_1
  2887  0051DE  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  2888  0051E0  C1AE  F1A8         	movff	_getBatteryVoltage$4185,?_printf+2
  2889  0051E4  C1AF  F1A9         	movff	_getBatteryVoltage$4185+1,?_printf+3
  2890  0051E8  C1B0  F1AA         	movff	_getBatteryVoltage$4185+2,?_printf+4
  2891  0051EC  C1B1  F1AB         	movff	_getBatteryVoltage$4185+3,?_printf+5
  2892  0051F0  ECDA  F02D         	call	_printf	;wreg free
  2893  0051F4  0012               	return		;funcret
  2894  0051F6                     __end_of_getBatteryVoltage:
  2895                           	callstack 0
  2896                           
  2897 ;; *************** function _printf *****************
  2898 ;; Defined at:
  2899 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
  2900 ;; Parameters:    Size  Location     Type
  2901 ;;  fmt             2    6[BANK1 ] PTR const unsigned char 
  2902 ;;		 -> STR_10(14), STR_9(13), STR_8(14), STR_7(22), 
  2903 ;;		 -> STR_6(15), STR_5(12), STR_4(12), STR_3(11), 
  2904 ;;		 -> STR_2(9), STR_1(11), 
  2905 ;; Auto vars:     Size  Location     Type
  2906 ;;  ap              2   12[BANK1 ] PTR void [1]
  2907 ;;		 -> ?_printf(2), 
  2908 ;;  ret             2    0        int 
  2909 ;; Return value:  Size  Location     Type
  2910 ;;                  2    6[BANK1 ] int 
  2911 ;; Registers used:
  2912 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2913 ;; Tracked objects:
  2914 ;;		On entry : 0/0
  2915 ;;		On exit  : 0/0
  2916 ;;		Unchanged: 0/0
  2917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2918 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2919 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2921 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2922 ;;Total ram usage:        8 bytes
  2923 ;; Hardware stack levels used: 1
  2924 ;; Hardware stack levels required when called: 16
  2925 ;; This function calls:
  2926 ;;		_vfprintf
  2927 ;; This function is called by:
  2928 ;;		_getBatteryVoltage
  2929 ;;		_getCurve
  2930 ;;		_getReverse
  2931 ;; This function uses a non-reentrant model
  2932 ;;
  2933                           
  2934                           	psect	text6
  2935  005BB4                     __ptext6:
  2936                           	callstack 0
  2937  005BB4                     _printf:
  2938                           	callstack 12
  2939  005BB4  0EA8               	movlw	low (?_printf+2)
  2940  005BB6  0101               	movlb	1	; () banked
  2941  005BB8  6FAC               	movwf	printf@ap& (0+255),b
  2942  005BBA  0E01               	movlw	high (?_printf+2)
  2943  005BBC  6FAD               	movwf	(printf@ap+1)& (0+255),b
  2944  005BBE                     
  2945                           ; BSR set to: 1
  2946  005BBE  0E00               	movlw	0
  2947  005BC0  6FA0               	movwf	vfprintf@fp& (0+255),b
  2948  005BC2  0E00               	movlw	0
  2949  005BC4  6FA1               	movwf	(vfprintf@fp+1)& (0+255),b
  2950  005BC6  C1A6  F1A2         	movff	printf@fmt,vfprintf@fmt
  2951  005BCA  C1A7  F1A3         	movff	printf@fmt+1,vfprintf@fmt+1
  2952  005BCE  0EAC               	movlw	low printf@ap
  2953  005BD0  6FA4               	movwf	vfprintf@ap& (0+255),b
  2954  005BD2  0E01               	movlw	high printf@ap
  2955  005BD4  6FA5               	movwf	(vfprintf@ap+1)& (0+255),b
  2956  005BD6  ECFB  F028         	call	_vfprintf	;wreg free
  2957  005BDA  0012               	return		;funcret
  2958  005BDC                     __end_of_printf:
  2959                           	callstack 0
  2960                           
  2961 ;; *************** function _vfprintf *****************
  2962 ;; Defined at:
  2963 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2964 ;; Parameters:    Size  Location     Type
  2965 ;;  fp              2    0[BANK1 ] PTR struct _IO_FILE
  2966 ;;		 -> NULL(0), 
  2967 ;;  fmt             2    2[BANK1 ] PTR const unsigned char 
  2968 ;;		 -> STR_10(14), STR_9(13), STR_8(14), STR_7(22), 
  2969 ;;		 -> STR_6(15), STR_5(12), STR_4(12), STR_3(11), 
  2970 ;;		 -> STR_2(9), STR_1(11), 
  2971 ;;  ap              2    4[BANK1 ] PTR PTR void 
  2972 ;;		 -> printf@ap(2), 
  2973 ;; Auto vars:     Size  Location     Type
  2974 ;;  cfmt            2  131[BANK0 ] PTR unsigned char 
  2975 ;;		 -> STR_10(14), STR_9(13), STR_8(14), STR_7(22), 
  2976 ;;		 -> STR_6(15), STR_5(12), STR_4(12), STR_3(11), 
  2977 ;;		 -> STR_2(9), STR_1(11), 
  2978 ;; Return value:  Size  Location     Type
  2979 ;;                  2    0[BANK1 ] int 
  2980 ;; Registers used:
  2981 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2982 ;; Tracked objects:
  2983 ;;		On entry : 0/0
  2984 ;;		On exit  : 0/0
  2985 ;;		Unchanged: 0/0
  2986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2987 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2988 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2990 ;;      Totals:         0       2       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2991 ;;Total ram usage:        8 bytes
  2992 ;; Hardware stack levels used: 1
  2993 ;; Hardware stack levels required when called: 15
  2994 ;; This function calls:
  2995 ;;		_vfpfcnvrt
  2996 ;; This function is called by:
  2997 ;;		_printf
  2998 ;; This function uses a non-reentrant model
  2999 ;;
  3000                           
  3001                           	psect	text7
  3002  0051F6                     __ptext7:
  3003                           	callstack 0
  3004  0051F6                     _vfprintf:
  3005                           	callstack 12
  3006  0051F6                     
  3007                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  3008  0051F6  C1A2  F0E3         	movff	vfprintf@fmt,vfprintf@cfmt
  3009  0051FA  C1A3  F0E4         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3010  0051FE                     
  3011                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  3012  0051FE  0E00               	movlw	0
  3013  005200  0101               	movlb	1	; () banked
  3014  005202  6F29               	movwf	(_nout+1)& (0+255),b
  3015  005204  0E00               	movlw	0
  3016  005206  6F28               	movwf	_nout& (0+255),b
  3017                           
  3018                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3019  005208  EF1D  F029         	goto	l8787
  3020  00520C                     l8785:
  3021                           
  3022                           ; BSR set to: 1
  3023                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3024  00520C  C1A0  F0C7         	movff	vfprintf@fp,vfpfcnvrt@fp
  3025  005210  C1A1  F0C8         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3026  005214  0EE3               	movlw	low vfprintf@cfmt
  3027  005216  0100               	movlb	0	; () banked
  3028  005218  6FC9               	movwf	vfpfcnvrt@fmt& (0+255),b
  3029  00521A  0E00               	movlw	high vfprintf@cfmt
  3030  00521C  6FCA               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  3031  00521E  C1A4  F0CB         	movff	vfprintf@ap,vfpfcnvrt@ap
  3032  005222  C1A5  F0CC         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3033  005226  ECA4  F00E         	call	_vfpfcnvrt	;wreg free
  3034  00522A  0100               	movlb	0	; () banked
  3035  00522C  51C7               	movf	?_vfpfcnvrt& (0+255),w,b
  3036  00522E  0101               	movlb	1	; () banked
  3037  005230  2728               	addwf	_nout& (0+255),f,b
  3038  005232  0100               	movlb	0	; () banked
  3039  005234  51C8               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  3040  005236  0101               	movlb	1	; () banked
  3041  005238  2329               	addwfc	(_nout+1)& (0+255),f,b
  3042  00523A                     l8787:
  3043                           
  3044                           ; BSR set to: 1
  3045                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3046  00523A  0060  F38F  FFF6   	movff	vfprintf@cfmt,tblptrl
  3047  005240  0060  F393  FFF7   	movff	vfprintf@cfmt+1,tblptrh
  3048  005246                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3049  005246  6AF8               	clrf	tblptru,c
  3050  005248                     	endif
  3051  005248                     	if	0	;tblptru may be non-zero
  3052  005248                     	endif
  3053  005248  0008               	tblrd		*
  3054  00524A  50F5               	movf	tablat,w,c
  3055  00524C  0900               	iorlw	0
  3056  00524E  A4D8               	btfss	status,2,c
  3057  005250  EF2C  F029         	goto	u9721
  3058  005254  EF2E  F029         	goto	u9720
  3059  005258                     u9721:
  3060  005258  EF06  F029         	goto	l8785
  3061  00525C                     u9720:
  3062  00525C                     
  3063                           ; BSR set to: 1
  3064                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  3065  00525C  C128  F1A0         	movff	_nout,?_vfprintf
  3066  005260  C129  F1A1         	movff	_nout+1,?_vfprintf+1
  3067  005264                     
  3068                           ; BSR set to: 1
  3069  005264  0012               	return		;funcret
  3070  005266                     __end_of_vfprintf:
  3071                           	callstack 0
  3072                           
  3073 ;; *************** function _vfpfcnvrt *****************
  3074 ;; Defined at:
  3075 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3076 ;; Parameters:    Size  Location     Type
  3077 ;;  fp              2  103[BANK0 ] PTR struct _IO_FILE
  3078 ;;		 -> NULL(0), 
  3079 ;;  fmt             2  105[BANK0 ] PTR PTR unsigned char 
  3080 ;;		 -> vfprintf@cfmt(2), 
  3081 ;;  ap              2  107[BANK0 ] PTR PTR void 
  3082 ;;		 -> printf@ap(2), 
  3083 ;; Auto vars:     Size  Location     Type
  3084 ;;  ll              8  113[BANK0 ] long long 
  3085 ;;  llu             8    0        unsigned long long 
  3086 ;;  f               4  123[BANK0 ] unsigned long long 
  3087 ;;  ct              3  127[BANK0 ] unsigned char [3]
  3088 ;;  vp              3    0        PTR void 
  3089 ;;  cp              3    0        PTR unsigned char 
  3090 ;;  i               2    0        int 
  3091 ;;  done            2    0        int 
  3092 ;;  c               1  130[BANK0 ] unsigned char 
  3093 ;; Return value:  Size  Location     Type
  3094 ;;                  2  103[BANK0 ] int 
  3095 ;; Registers used:
  3096 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3097 ;; Tracked objects:
  3098 ;;		On entry : 0/0
  3099 ;;		On exit  : 0/0
  3100 ;;		Unchanged: 0/0
  3101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3102 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3103 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3104 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3105 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3106 ;;Total ram usage:       28 bytes
  3107 ;; Hardware stack levels used: 1
  3108 ;; Hardware stack levels required when called: 14
  3109 ;; This function calls:
  3110 ;;		_dtoa
  3111 ;;		_efgtoa
  3112 ;;		_fputc
  3113 ;;		_isupper
  3114 ;;		_strncmp
  3115 ;;		_tolower
  3116 ;; This function is called by:
  3117 ;;		_vfprintf
  3118 ;; This function uses a non-reentrant model
  3119 ;;
  3120                           
  3121                           	psect	text8
  3122  001D48                     __ptext8:
  3123                           	callstack 0
  3124  001D48                     _vfpfcnvrt:
  3125                           	callstack 12
  3126  001D48                     
  3127                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  3128  001D48  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3129  001D4E  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3130  001D54  006F FF7B FFF6     	movff	postinc2,tblptrl
  3131  001D5A  006F FF77 FFF7     	movff	postdec2,tblptrh
  3132  001D60                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3133  001D60  6AF8               	clrf	tblptru,c
  3134  001D62                     	endif
  3135  001D62                     	if	0	;tblptru may be non-zero
  3136  001D62                     	endif
  3137  001D62  0008               	tblrd		*
  3138  001D64  50F5               	movf	tablat,w,c
  3139  001D66  0A25               	xorlw	37
  3140  001D68  A4D8               	btfss	status,2,c
  3141  001D6A  EFB9  F00E         	goto	u9611
  3142  001D6E  EFBB  F00E         	goto	u9610
  3143  001D72                     u9611:
  3144  001D72  EF13  F011         	goto	l8773
  3145  001D76                     u9610:
  3146  001D76                     
  3147                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  3148  001D76  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3149  001D7C  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3150  001D82  2ADE               	incf	postinc2,f,c
  3151  001D84  0E00               	movlw	0
  3152  001D86  22DD               	addwfc	postdec2,f,c
  3153  001D88                     
  3154                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  3155  001D88  0E00               	movlw	0
  3156  001D8A  0100               	movlb	0	; () banked
  3157  001D8C  6FE6               	movwf	(_width+1)& (0+255),b
  3158  001D8E  0E00               	movlw	0
  3159  001D90  6FE5               	movwf	_width& (0+255),b
  3160  001D92  C0E5  F03C         	movff	_width,_flags
  3161  001D96  C0E6  F03D         	movff	_width+1,_flags+1
  3162  001D9A                     
  3163                           ; BSR set to: 0
  3164                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  3165  001D9A  683A               	setf	_prec^0,c
  3166  001D9C  683B               	setf	(_prec+1)^0,c
  3167  001D9E                     
  3168                           ; BSR set to: 0
  3169                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  3170  001D9E  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3171  001DA4  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3172  001DAA  006F FF7B FFF6     	movff	postinc2,tblptrl
  3173  001DB0  006F FF77 FFF7     	movff	postdec2,tblptrh
  3174  001DB6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3175  001DB6  6AF8               	clrf	tblptru,c
  3176  001DB8                     	endif
  3177  001DB8                     	if	0	;tblptru may be non-zero
  3178  001DB8                     	endif
  3179  001DB8  0008               	tblrd		*
  3180  001DBA  50F5               	movf	tablat,w,c
  3181  001DBC  6E1A               	movwf	tolower@c^0,c
  3182  001DBE  6A1B               	clrf	(tolower@c+1)^0,c
  3183  001DC0  EC68  F029         	call	_tolower	;wreg free
  3184  001DC4  501A               	movf	?_tolower^0,w,c
  3185  001DC6  0100               	movlb	0	; () banked
  3186  001DC8  6FDF               	movwf	vfpfcnvrt@ct& (0+255),b
  3187  001DCA                     
  3188                           ; BSR set to: 0
  3189                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  3190  001DCA  51DF               	movf	vfpfcnvrt@ct& (0+255),w,b
  3191  001DCC  B4D8               	btfsc	status,2,c
  3192  001DCE  EFEB  F00E         	goto	u9621
  3193  001DD2  EFED  F00E         	goto	u9620
  3194  001DD6                     u9621:
  3195  001DD6  EF35  F00F         	goto	l8719
  3196  001DDA                     u9620:
  3197  001DDA                     
  3198                           ; BSR set to: 0
  3199                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  3200  001DDA  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3201  001DE0  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3202  001DE6  006F FF78  F0CD    	movff	postinc2,??_vfpfcnvrt
  3203  001DEC  006F FF74  F0CE    	movff	postdec2,??_vfpfcnvrt+1
  3204  001DF2  0E01               	movlw	1
  3205  001DF4  27CD               	addwf	??_vfpfcnvrt& (0+255),f,b
  3206  001DF6  0E00               	movlw	0
  3207  001DF8  23CE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3208  001DFA  0060  F337  FFF6   	movff	??_vfpfcnvrt,tblptrl
  3209  001E00  0060  F33B  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  3210  001E06                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3211  001E06  6AF8               	clrf	tblptru,c
  3212  001E08                     	endif
  3213  001E08                     	if	0	;tblptru may be non-zero
  3214  001E08                     	endif
  3215  001E08  0008               	tblrd		*
  3216  001E0A  50F5               	movf	tablat,w,c
  3217  001E0C  6E1A               	movwf	tolower@c^0,c
  3218  001E0E  6A1B               	clrf	(tolower@c+1)^0,c
  3219  001E10  EC68  F029         	call	_tolower	;wreg free
  3220  001E14  501A               	movf	?_tolower^0,w,c
  3221  001E16  0100               	movlb	0	; () banked
  3222  001E18  6FE0               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  3223  001E1A                     
  3224                           ; BSR set to: 0
  3225                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  3226  001E1A  51E0               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  3227  001E1C  B4D8               	btfsc	status,2,c
  3228  001E1E  EF13  F00F         	goto	u9631
  3229  001E22  EF15  F00F         	goto	u9630
  3230  001E26                     u9631:
  3231  001E26  EF35  F00F         	goto	l8719
  3232  001E2A                     u9630:
  3233  001E2A                     
  3234                           ; BSR set to: 0
  3235                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  3236  001E2A  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3237  001E30  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3238  001E36  006F FF78  F0CD    	movff	postinc2,??_vfpfcnvrt
  3239  001E3C  006F FF74  F0CE    	movff	postdec2,??_vfpfcnvrt+1
  3240  001E42  0E02               	movlw	2
  3241  001E44  27CD               	addwf	??_vfpfcnvrt& (0+255),f,b
  3242  001E46  0E00               	movlw	0
  3243  001E48  23CE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3244  001E4A  0060  F337  FFF6   	movff	??_vfpfcnvrt,tblptrl
  3245  001E50  0060  F33B  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  3246  001E56                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3247  001E56  6AF8               	clrf	tblptru,c
  3248  001E58                     	endif
  3249  001E58                     	if	0	;tblptru may be non-zero
  3250  001E58                     	endif
  3251  001E58  0008               	tblrd		*
  3252  001E5A  50F5               	movf	tablat,w,c
  3253  001E5C  6E1A               	movwf	tolower@c^0,c
  3254  001E5E  6A1B               	clrf	(tolower@c+1)^0,c
  3255  001E60  EC68  F029         	call	_tolower	;wreg free
  3256  001E64  501A               	movf	?_tolower^0,w,c
  3257  001E66  0100               	movlb	0	; () banked
  3258  001E68  6FE1               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  3259  001E6A                     l8719:
  3260                           
  3261                           ; BSR set to: 0
  3262                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3263  001E6A  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3264  001E70  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3265  001E76  006F FF7B FFF6     	movff	postinc2,tblptrl
  3266  001E7C  006F FF77 FFF7     	movff	postdec2,tblptrh
  3267  001E82                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3268  001E82  6AF8               	clrf	tblptru,c
  3269  001E84                     	endif
  3270  001E84                     	if	0	;tblptru may be non-zero
  3271  001E84                     	endif
  3272  001E84  0008               	tblrd		*
  3273  001E86  50F5               	movf	tablat,w,c
  3274  001E88  0A64               	xorlw	100
  3275  001E8A  B4D8               	btfsc	status,2,c
  3276  001E8C  EF4A  F00F         	goto	u9641
  3277  001E90  EF4C  F00F         	goto	u9640
  3278  001E94                     u9641:
  3279  001E94  EF63  F00F         	goto	l8723
  3280  001E98                     u9640:
  3281  001E98                     
  3282                           ; BSR set to: 0
  3283  001E98  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3284  001E9E  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3285  001EA4  006F FF7B FFF6     	movff	postinc2,tblptrl
  3286  001EAA  006F FF77 FFF7     	movff	postdec2,tblptrh
  3287  001EB0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3288  001EB0  6AF8               	clrf	tblptru,c
  3289  001EB2                     	endif
  3290  001EB2                     	if	0	;tblptru may be non-zero
  3291  001EB2                     	endif
  3292  001EB2  0008               	tblrd		*
  3293  001EB4  50F5               	movf	tablat,w,c
  3294  001EB6  0A69               	xorlw	105
  3295  001EB8  A4D8               	btfss	status,2,c
  3296  001EBA  EF61  F00F         	goto	u9651
  3297  001EBE  EF63  F00F         	goto	u9650
  3298  001EC2                     u9651:
  3299  001EC2  EFAD  F00F         	goto	l8729
  3300  001EC6                     u9650:
  3301  001EC6                     l8723:
  3302                           
  3303                           ; BSR set to: 0
  3304                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  3305  001EC6  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3306  001ECC  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3307  001ED2  2ADE               	incf	postinc2,f,c
  3308  001ED4  0E00               	movlw	0
  3309  001ED6  22DD               	addwfc	postdec2,f,c
  3310                           
  3311                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3312  001ED8  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3313  001EDE  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3314  001EE4  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  3315  001EEA  0E02               	movlw	2
  3316  001EEC  26DE               	addwf	postinc2,f,c
  3317  001EEE  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  3318  001EF4  0E00               	movlw	0
  3319  001EF6  22DD               	addwfc	postdec2,f,c
  3320  001EF8  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3321  001EFE  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3322  001F04  006F FF78  F0D1    	movff	postinc2,vfpfcnvrt@ll
  3323  001F0A  006F FF74  F0D2    	movff	postdec2,vfpfcnvrt@ll+1
  3324  001F10  0E00               	movlw	0
  3325  001F12  BFD2               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  3326  001F14  0EFF               	movlw	-1
  3327  001F16  6FD3               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  3328  001F18  6FD4               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  3329  001F1A  6FD5               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  3330  001F1C  6FD6               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  3331  001F1E  6FD7               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  3332  001F20  6FD8               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  3333  001F22                     
  3334                           ; BSR set to: 0
  3335                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  3336  001F22  C0C7  F060         	movff	vfpfcnvrt@fp,dtoa@fp
  3337  001F26  C0C8  F061         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3338  001F2A  C0D1  F062         	movff	vfpfcnvrt@ll,dtoa@d
  3339  001F2E  C0D2  F063         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3340  001F32  C0D3  F064         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3341  001F36  C0D4  F065         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3342  001F3A  C0D5  F066         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3343  001F3E  C0D6  F067         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3344  001F42  C0D7  F068         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3345  001F46  C0D8  F069         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3346  001F4A  EC01  F019         	call	_dtoa	;wreg free
  3347  001F4E  C060  F0C7         	movff	?_dtoa,?_vfpfcnvrt
  3348  001F52  C061  F0C8         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3349  001F56  EF35  F011         	goto	l2255
  3350  001F5A                     l8729:
  3351                           
  3352                           ; BSR set to: 0
  3353                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  3354  001F5A  0E66               	movlw	102
  3355  001F5C  19DF               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  3356  001F5E  A4D8               	btfss	status,2,c
  3357  001F60  EFB4  F00F         	goto	u9661
  3358  001F64  EFB6  F00F         	goto	u9660
  3359  001F68                     u9661:
  3360  001F68  EF08  F010         	goto	l8741
  3361  001F6C                     u9660:
  3362  001F6C                     
  3363                           ; BSR set to: 0
  3364                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  3365  001F6C  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3366  001F72  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3367  001F78  006F FF7B FFF6     	movff	postinc2,tblptrl
  3368  001F7E  006F FF77 FFF7     	movff	postdec2,tblptrh
  3369  001F84                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3370  001F84  6AF8               	clrf	tblptru,c
  3371  001F86                     	endif
  3372  001F86                     	if	0	;tblptru may be non-zero
  3373  001F86                     	endif
  3374  001F86  0008               	tblrd		*
  3375  001F88  006F FFD4  F0E2    	movff	tablat,vfpfcnvrt@c
  3376  001F8E                     
  3377                           ; BSR set to: 0
  3378                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  3379  001F8E  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3380  001F94  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3381  001F9A  2ADE               	incf	postinc2,f,c
  3382  001F9C  0E00               	movlw	0
  3383  001F9E  22DD               	addwfc	postdec2,f,c
  3384  001FA0                     
  3385                           ; BSR set to: 0
  3386                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3387  001FA0  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3388  001FA6  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3389  001FAC  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  3390  001FB2  0E04               	movlw	4
  3391  001FB4  26DE               	addwf	postinc2,f,c
  3392  001FB6  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  3393  001FBC  0E00               	movlw	0
  3394  001FBE  22DD               	addwfc	postdec2,f,c
  3395  001FC0  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3396  001FC6  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3397  001FCC  006F FF78  F0DB    	movff	postinc2,vfpfcnvrt@f
  3398  001FD2  006F FF78  F0DC    	movff	postinc2,vfpfcnvrt@f+1
  3399  001FD8  006F FF78  F0DD    	movff	postinc2,vfpfcnvrt@f+2
  3400  001FDE  006F FF78  F0DE    	movff	postinc2,vfpfcnvrt@f+3
  3401  001FE4                     
  3402                           ; BSR set to: 0
  3403                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  3404  001FE4  C0C7  F083         	movff	vfpfcnvrt@fp,efgtoa@fp
  3405  001FE8  C0C8  F084         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3406  001FEC  C0DB  F085         	movff	vfpfcnvrt@f,efgtoa@f
  3407  001FF0  C0DC  F086         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3408  001FF4  C0DD  F087         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3409  001FF8  C0DE  F088         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3410  001FFC  C0E2  F089         	movff	vfpfcnvrt@c,efgtoa@c
  3411  002000  EC4D  F008         	call	_efgtoa	;wreg free
  3412  002004  C083  F0C7         	movff	?_efgtoa,?_vfpfcnvrt
  3413  002008  C084  F0C8         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3414  00200C  EF35  F011         	goto	l2255
  3415  002010                     l8741:
  3416                           
  3417                           ; BSR set to: 0
  3418                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3419  002010  0EDF               	movlw	low vfpfcnvrt@ct
  3420  002012  6E14               	movwf	strncmp@_l^0,c
  3421  002014  0E00               	movlw	high vfpfcnvrt@ct
  3422  002016  6E15               	movwf	(strncmp@_l+1)^0,c
  3423  002018  0E96               	movlw	low STR_19
  3424  00201A  6E16               	movwf	strncmp@_r^0,c
  3425  00201C  0E10               	movlw	high STR_19
  3426  00201E  6E17               	movwf	(strncmp@_r+1)^0,c
  3427  002020  0E00               	movlw	0
  3428  002022  6E19               	movwf	(strncmp@n+1)^0,c
  3429  002024  0E02               	movlw	2
  3430  002026  6E18               	movwf	strncmp@n^0,c
  3431  002028  EC71  F024         	call	_strncmp	;wreg free
  3432  00202C  5014               	movf	?_strncmp^0,w,c
  3433  00202E  1015               	iorwf	(?_strncmp+1)^0,w,c
  3434  002030  A4D8               	btfss	status,2,c
  3435  002032  EF1D  F010         	goto	u9671
  3436  002036  EF1F  F010         	goto	u9670
  3437  00203A                     u9671:
  3438  00203A  EFD2  F010         	goto	l8757
  3439  00203E                     u9670:
  3440  00203E                     
  3441                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  3442  00203E  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3443  002044  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3444  00204A  006F FF78  F0CD    	movff	postinc2,??_vfpfcnvrt
  3445  002050  006F FF74  F0CE    	movff	postdec2,??_vfpfcnvrt+1
  3446  002056  0E01               	movlw	1
  3447  002058  0100               	movlb	0	; () banked
  3448  00205A  27CD               	addwf	??_vfpfcnvrt& (0+255),f,b
  3449  00205C  0E00               	movlw	0
  3450  00205E  23CE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3451  002060  0060  F337  FFF6   	movff	??_vfpfcnvrt,tblptrl
  3452  002066  0060  F33B  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  3453  00206C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3454  00206C  6AF8               	clrf	tblptru,c
  3455  00206E                     	endif
  3456  00206E                     	if	0	;tblptru may be non-zero
  3457  00206E                     	endif
  3458  00206E  0008               	tblrd		*
  3459  002070  006F FFD4  F0E2    	movff	tablat,vfpfcnvrt@c
  3460  002076  0EBF               	movlw	191
  3461  002078  6FCD               	movwf	??_vfpfcnvrt& (0+255),b
  3462  00207A  0EFF               	movlw	255
  3463  00207C  6FCE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3464  00207E  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3465  002084  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3466  00208A  006F FF7B FFF6     	movff	postinc2,tblptrl
  3467  002090  006F FF77 FFF7     	movff	postdec2,tblptrh
  3468  002096                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3469  002096  6AF8               	clrf	tblptru,c
  3470  002098                     	endif
  3471  002098                     	if	0	;tblptru may be non-zero
  3472  002098                     	endif
  3473  002098  0008               	tblrd		*
  3474  00209A  50F5               	movf	tablat,w,c
  3475  00209C  6FCF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3476  00209E  6BD0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  3477  0020A0  51CD               	movf	??_vfpfcnvrt& (0+255),w,b
  3478  0020A2  27CF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  3479  0020A4  51CE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3480  0020A6  23D0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  3481  0020A8  51D0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3482  0020AA  E10A               	bnz	u9680
  3483  0020AC  0E1A               	movlw	26
  3484  0020AE  5DCF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  3485  0020B0  A0D8               	btfss	status,0,c
  3486  0020B2  EF5D  F010         	goto	u9681
  3487  0020B6  EF60  F010         	goto	u9680
  3488  0020BA                     u9681:
  3489  0020BA  0E01               	movlw	1
  3490  0020BC  EF61  F010         	goto	u9690
  3491  0020C0                     u9680:
  3492  0020C0  0E00               	movlw	0
  3493  0020C2                     u9690:
  3494  0020C2  6FD9               	movwf	_vfpfcnvrt$3588& (0+255),b
  3495  0020C4  6BDA               	clrf	(_vfpfcnvrt$3588+1)& (0+255),b
  3496  0020C6                     
  3497                           ; BSR set to: 0
  3498  0020C6  51D9               	movf	_vfpfcnvrt$3588& (0+255),w,b
  3499  0020C8  11DA               	iorwf	(_vfpfcnvrt$3588+1)& (0+255),w,b
  3500  0020CA  B4D8               	btfsc	status,2,c
  3501  0020CC  EF6A  F010         	goto	u9701
  3502  0020D0  EF6C  F010         	goto	u9700
  3503  0020D4                     u9701:
  3504  0020D4  EF90  F010         	goto	l8751
  3505  0020D8                     u9700:
  3506  0020D8                     
  3507                           ; BSR set to: 0
  3508                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3509  0020D8  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3510  0020DE  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3511  0020E4  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  3512  0020EA  0E04               	movlw	4
  3513  0020EC  26DE               	addwf	postinc2,f,c
  3514  0020EE  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  3515  0020F4  0E00               	movlw	0
  3516  0020F6  22DD               	addwfc	postdec2,f,c
  3517  0020F8  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3518  0020FE  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3519  002104  006F FF78  F0DB    	movff	postinc2,vfpfcnvrt@f
  3520  00210A  006F FF78  F0DC    	movff	postinc2,vfpfcnvrt@f+1
  3521  002110  006F FF78  F0DD    	movff	postinc2,vfpfcnvrt@f+2
  3522  002116  006F FF78  F0DE    	movff	postinc2,vfpfcnvrt@f+3
  3523                           
  3524                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  3525  00211C  EFB2  F010         	goto	l2263
  3526  002120                     l8751:
  3527                           
  3528                           ; BSR set to: 0
  3529                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3530  002120  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3531  002126  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3532  00212C  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  3533  002132  0E04               	movlw	4
  3534  002134  26DE               	addwf	postinc2,f,c
  3535  002136  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  3536  00213C  0E00               	movlw	0
  3537  00213E  22DD               	addwfc	postdec2,f,c
  3538  002140  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3539  002146  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3540  00214C  006F FF78  F0DB    	movff	postinc2,vfpfcnvrt@f
  3541  002152  006F FF78  F0DC    	movff	postinc2,vfpfcnvrt@f+1
  3542  002158  006F FF78  F0DD    	movff	postinc2,vfpfcnvrt@f+2
  3543  00215E  006F FF78  F0DE    	movff	postinc2,vfpfcnvrt@f+3
  3544  002164                     l2263:
  3545                           
  3546                           ; BSR set to: 0
  3547                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  3548  002164  0E02               	movlw	2
  3549  002166  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3550  00216C  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3551  002172  26DE               	addwf	postinc2,f,c
  3552  002174  0E00               	movlw	0
  3553  002176  22DD               	addwfc	postdec2,f,c
  3554  002178                     
  3555                           ; BSR set to: 0
  3556                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 960:             
      +                          return efgtoa(fp, f, c);
  3557  002178  C0C7  F083         	movff	vfpfcnvrt@fp,efgtoa@fp
  3558  00217C  C0C8  F084         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3559  002180  C0DB  F085         	movff	vfpfcnvrt@f,efgtoa@f
  3560  002184  C0DC  F086         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3561  002188  C0DD  F087         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3562  00218C  C0DE  F088         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3563  002190  C0E2  F089         	movff	vfpfcnvrt@c,efgtoa@c
  3564  002194  EC4D  F008         	call	_efgtoa	;wreg free
  3565  002198  C083  F0C7         	movff	?_efgtoa,?_vfpfcnvrt
  3566  00219C  C084  F0C8         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3567  0021A0  EF35  F011         	goto	l2255
  3568  0021A4                     l8757:
  3569                           
  3570                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3571  0021A4  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3572  0021AA  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3573  0021B0  006F FF7B FFF6     	movff	postinc2,tblptrl
  3574  0021B6  006F FF77 FFF7     	movff	postdec2,tblptrh
  3575  0021BC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3576  0021BC  6AF8               	clrf	tblptru,c
  3577  0021BE                     	endif
  3578  0021BE                     	if	0	;tblptru may be non-zero
  3579  0021BE                     	endif
  3580  0021BE  0008               	tblrd		*
  3581  0021C0  50F5               	movf	tablat,w,c
  3582  0021C2  0A25               	xorlw	37
  3583  0021C4  A4D8               	btfss	status,2,c
  3584  0021C6  EFE7  F010         	goto	u9711
  3585  0021CA  EFE9  F010         	goto	u9710
  3586  0021CE                     u9711:
  3587  0021CE  EF03  F011         	goto	l8767
  3588  0021D2                     u9710:
  3589  0021D2                     
  3590                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3591  0021D2  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3592  0021D8  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3593  0021DE  2ADE               	incf	postinc2,f,c
  3594  0021E0  0E00               	movlw	0
  3595  0021E2  22DD               	addwfc	postdec2,f,c
  3596  0021E4                     
  3597                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3598  0021E4  0E00               	movlw	0
  3599  0021E6  6E17               	movwf	(fputc@c+1)^0,c
  3600  0021E8  0E25               	movlw	37
  3601  0021EA  6E16               	movwf	fputc@c^0,c
  3602  0021EC  C0C7  F018         	movff	vfpfcnvrt@fp,fputc@fp
  3603  0021F0  C0C8  F019         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3604  0021F4  ECE3  F027         	call	_fputc	;wreg free
  3605  0021F8                     l8763:
  3606                           
  3607                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3608  0021F8  0E00               	movlw	0
  3609  0021FA  0100               	movlb	0	; () banked
  3610  0021FC  6FC8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3611  0021FE  0E01               	movlw	1
  3612  002200  6FC7               	movwf	?_vfpfcnvrt& (0+255),b
  3613  002202  EF35  F011         	goto	l2255
  3614  002206                     l8767:
  3615                           
  3616                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3617  002206  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3618  00220C  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3619  002212  2ADE               	incf	postinc2,f,c
  3620  002214  0E00               	movlw	0
  3621  002216  22DD               	addwfc	postdec2,f,c
  3622  002218                     
  3623                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3624  002218  0E00               	movlw	0
  3625  00221A  0100               	movlb	0	; () banked
  3626  00221C  6FC8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3627  00221E  0E00               	movlw	0
  3628  002220  6FC7               	movwf	?_vfpfcnvrt& (0+255),b
  3629  002222  EF35  F011         	goto	l2255
  3630  002226                     l8773:
  3631                           
  3632                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3633  002226  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3634  00222C  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3635  002232  006F FF7B FFF6     	movff	postinc2,tblptrl
  3636  002238  006F FF77 FFF7     	movff	postdec2,tblptrh
  3637  00223E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3638  00223E  6AF8               	clrf	tblptru,c
  3639  002240                     	endif
  3640  002240                     	if	0	;tblptru may be non-zero
  3641  002240                     	endif
  3642  002240  0008               	tblrd		*
  3643  002242  50F5               	movf	tablat,w,c
  3644  002244  6E16               	movwf	fputc@c^0,c
  3645  002246  6A17               	clrf	(fputc@c+1)^0,c
  3646  002248  C0C7  F018         	movff	vfpfcnvrt@fp,fputc@fp
  3647  00224C  C0C8  F019         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3648  002250  ECE3  F027         	call	_fputc	;wreg free
  3649  002254                     
  3650                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3651  002254  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3652  00225A  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3653  002260  2ADE               	incf	postinc2,f,c
  3654  002262  0E00               	movlw	0
  3655  002264  22DD               	addwfc	postdec2,f,c
  3656  002266  EFFC  F010         	goto	l8763
  3657  00226A                     l2255:
  3658  00226A  0012               	return		;funcret
  3659  00226C                     __end_of_vfpfcnvrt:
  3660                           	callstack 0
  3661                           
  3662 ;; *************** function _strncmp *****************
  3663 ;; Defined at:
  3664 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  3665 ;; Parameters:    Size  Location     Type
  3666 ;;  _l              2   19[COMRAM] PTR const unsigned char 
  3667 ;;		 -> vfpfcnvrt@ct(3), 
  3668 ;;  _r              2   21[COMRAM] PTR const unsigned char 
  3669 ;;		 -> STR_21(3), 
  3670 ;;  n               2   23[COMRAM] unsigned int 
  3671 ;; Auto vars:     Size  Location     Type
  3672 ;;  r               2   28[COMRAM] PTR const unsigned char 
  3673 ;;		 -> STR_21(3), 
  3674 ;;  l               2   26[COMRAM] PTR const unsigned char 
  3675 ;;		 -> vfpfcnvrt@ct(3), 
  3676 ;; Return value:  Size  Location     Type
  3677 ;;                  2   19[COMRAM] int 
  3678 ;; Registers used:
  3679 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3680 ;; Tracked objects:
  3681 ;;		On entry : 0/0
  3682 ;;		On exit  : 0/0
  3683 ;;		Unchanged: 0/0
  3684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3685 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3686 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3687 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3688 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3689 ;;Total ram usage:       11 bytes
  3690 ;; Hardware stack levels used: 1
  3691 ;; Hardware stack levels required when called: 8
  3692 ;; This function calls:
  3693 ;;		Nothing
  3694 ;; This function is called by:
  3695 ;;		_vfpfcnvrt
  3696 ;; This function uses a non-reentrant model
  3697 ;;
  3698                           
  3699                           	psect	text9
  3700  0048E2                     __ptext9:
  3701                           	callstack 0
  3702  0048E2                     _strncmp:
  3703                           	callstack 17
  3704  0048E2  C014  F01B         	movff	strncmp@_l,strncmp@l
  3705  0048E6  C015  F01C         	movff	strncmp@_l+1,strncmp@l+1
  3706  0048EA  C016  F01D         	movff	strncmp@_r,strncmp@r
  3707  0048EE  C017  F01E         	movff	strncmp@_r+1,strncmp@r+1
  3708  0048F2  0618               	decf	strncmp@n^0,f,c
  3709  0048F4  A0D8               	btfss	status,0,c
  3710  0048F6  0619               	decf	(strncmp@n+1)^0,f,c
  3711  0048F8  2818               	incf	strncmp@n^0,w,c
  3712  0048FA  E106               	bnz	u9561
  3713  0048FC  2819               	incf	(strncmp@n+1)^0,w,c
  3714  0048FE  A4D8               	btfss	status,2,c
  3715  004900  EF84  F024         	goto	u9561
  3716  004904  EF86  F024         	goto	u9560
  3717  004908                     u9561:
  3718  004908  EF93  F024         	goto	l8689
  3719  00490C                     u9560:
  3720  00490C  0E00               	movlw	0
  3721  00490E  6E15               	movwf	(?_strncmp+1)^0,c
  3722  004910  0E00               	movlw	0
  3723  004912  6E14               	movwf	?_strncmp^0,c
  3724  004914  EFEA  F024         	goto	l2343
  3725  004918                     l8687:
  3726  004918  4A1B               	infsnz	strncmp@l^0,f,c
  3727  00491A  2A1C               	incf	(strncmp@l+1)^0,f,c
  3728  00491C  4A1D               	infsnz	strncmp@r^0,f,c
  3729  00491E  2A1E               	incf	(strncmp@r+1)^0,f,c
  3730  004920  0618               	decf	strncmp@n^0,f,c
  3731  004922  A0D8               	btfss	status,0,c
  3732  004924  0619               	decf	(strncmp@n+1)^0,f,c
  3733  004926                     l8689:
  3734  004926  0060  F06F  FFD9   	movff	strncmp@l,fsr2l
  3735  00492C  0060  F073  FFDA   	movff	strncmp@l+1,fsr2h
  3736  004932  50DF               	movf	indf2,w,c
  3737  004934  B4D8               	btfsc	status,2,c
  3738  004936  EF9F  F024         	goto	u9571
  3739  00493A  EFA1  F024         	goto	u9570
  3740  00493E                     u9571:
  3741  00493E  EFD4  F024         	goto	l8697
  3742  004942                     u9570:
  3743  004942  0060  F077  FFF6   	movff	strncmp@r,tblptrl
  3744  004948  0060  F07B  FFF7   	movff	strncmp@r+1,tblptrh
  3745  00494E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3746  00494E  6AF8               	clrf	tblptru,c
  3747  004950                     	endif
  3748  004950                     	if	0	;tblptru may be non-zero
  3749  004950                     	endif
  3750  004950  0008               	tblrd		*
  3751  004952  50F5               	movf	tablat,w,c
  3752  004954  0900               	iorlw	0
  3753  004956  B4D8               	btfsc	status,2,c
  3754  004958  EFB0  F024         	goto	u9581
  3755  00495C  EFB2  F024         	goto	u9580
  3756  004960                     u9581:
  3757  004960  EFD4  F024         	goto	l8697
  3758  004964                     u9580:
  3759  004964  5018               	movf	strncmp@n^0,w,c
  3760  004966  1019               	iorwf	(strncmp@n+1)^0,w,c
  3761  004968  B4D8               	btfsc	status,2,c
  3762  00496A  EFB9  F024         	goto	u9591
  3763  00496E  EFBB  F024         	goto	u9590
  3764  004972                     u9591:
  3765  004972  EFD4  F024         	goto	l8697
  3766  004976                     u9590:
  3767  004976  0060  F06F  FFD9   	movff	strncmp@l,fsr2l
  3768  00497C  0060  F073  FFDA   	movff	strncmp@l+1,fsr2h
  3769  004982  50DF               	movf	indf2,w,c
  3770  004984  6E1A               	movwf	??_strncmp^0,c
  3771  004986  0060  F077  FFF6   	movff	strncmp@r,tblptrl
  3772  00498C  0060  F07B  FFF7   	movff	strncmp@r+1,tblptrh
  3773  004992                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3774  004992  6AF8               	clrf	tblptru,c
  3775  004994                     	endif
  3776  004994                     	if	0	;tblptru may be non-zero
  3777  004994                     	endif
  3778  004994  0008               	tblrd		*
  3779  004996  50F5               	movf	tablat,w,c
  3780  004998  181A               	xorwf	??_strncmp^0,w,c
  3781  00499A  B4D8               	btfsc	status,2,c
  3782  00499C  EFD2  F024         	goto	u9601
  3783  0049A0  EFD4  F024         	goto	u9600
  3784  0049A4                     u9601:
  3785  0049A4  EF8C  F024         	goto	l8687
  3786  0049A8                     u9600:
  3787  0049A8                     l8697:
  3788  0049A8  0060  F06F  FFD9   	movff	strncmp@l,fsr2l
  3789  0049AE  0060  F073  FFDA   	movff	strncmp@l+1,fsr2h
  3790  0049B4  50DF               	movf	indf2,w,c
  3791  0049B6  6E1A               	movwf	??_strncmp^0,c
  3792  0049B8  0060  F077  FFF6   	movff	strncmp@r,tblptrl
  3793  0049BE  0060  F07B  FFF7   	movff	strncmp@r+1,tblptrh
  3794  0049C4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3795  0049C4  6AF8               	clrf	tblptru,c
  3796  0049C6                     	endif
  3797  0049C6                     	if	0	;tblptru may be non-zero
  3798  0049C6                     	endif
  3799  0049C6  0008               	tblrd		*
  3800  0049C8  50F5               	movf	tablat,w,c
  3801  0049CA  5C1A               	subwf	??_strncmp^0,w,c
  3802  0049CC  6E14               	movwf	?_strncmp^0,c
  3803  0049CE  6A15               	clrf	(?_strncmp+1)^0,c
  3804  0049D0  A0D8               	btfss	status,0,c
  3805  0049D2  0615               	decf	(?_strncmp+1)^0,f,c
  3806  0049D4                     l2343:
  3807  0049D4  0012               	return		;funcret
  3808  0049D6                     __end_of_strncmp:
  3809                           	callstack 0
  3810                           
  3811 ;; *************** function _efgtoa *****************
  3812 ;; Defined at:
  3813 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3814 ;; Parameters:    Size  Location     Type
  3815 ;;  fp              2   35[BANK0 ] PTR struct _IO_FILE
  3816 ;;		 -> NULL(0), 
  3817 ;;  f               4   37[BANK0 ] PTR struct _IO_FILE
  3818 ;;  c               1   41[BANK0 ] unsigned char 
  3819 ;; Auto vars:     Size  Location     Type
  3820 ;;  u               4   99[BANK0 ] unsigned char 
  3821 ;;  g               4   91[BANK0 ] unsigned char 
  3822 ;;  l               4   85[BANK0 ] unsigned char 
  3823 ;;  h               4   81[BANK0 ] unsigned char 
  3824 ;;  ou              4   67[BANK0 ] unsigned char 
  3825 ;;  n               2   97[BANK0 ] int 
  3826 ;;  e               2   95[BANK0 ] int 
  3827 ;;  i               2   89[BANK0 ] int 
  3828 ;;  w               2   77[BANK0 ] int 
  3829 ;;  p               2   75[BANK0 ] int 
  3830 ;;  sign            2   73[BANK0 ] int 
  3831 ;;  d               2   71[BANK0 ] int 
  3832 ;;  m               2   65[BANK0 ] int 
  3833 ;;  ne              2   63[BANK0 ] int 
  3834 ;;  pp              2   61[BANK0 ] int 
  3835 ;;  t               2   59[BANK0 ] int 
  3836 ;;  mode            1   80[BANK0 ] unsigned char 
  3837 ;;  nmode           1   79[BANK0 ] unsigned char 
  3838 ;; Return value:  Size  Location     Type
  3839 ;;                  2   35[BANK0 ] int 
  3840 ;; Registers used:
  3841 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3842 ;; Tracked objects:
  3843 ;;		On entry : 0/0
  3844 ;;		On exit  : 0/0
  3845 ;;		Unchanged: 0/0
  3846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3847 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3848 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3849 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3850 ;;      Totals:         0      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3851 ;;Total ram usage:       68 bytes
  3852 ;; Hardware stack levels used: 1
  3853 ;; Hardware stack levels required when called: 13
  3854 ;; This function calls:
  3855 ;;		___awdiv
  3856 ;;		___awmod
  3857 ;;		___fladd
  3858 ;;		___fldiv
  3859 ;;		___fleq
  3860 ;;		___flge
  3861 ;;		___flmul
  3862 ;;		___flneg
  3863 ;;		___flsub
  3864 ;;		___fltol
  3865 ;;		___fpclassifyf
  3866 ;;		_floorf
  3867 ;;		_isupper
  3868 ;;		_pad
  3869 ;;		_strcpy
  3870 ;;		_tolower
  3871 ;; This function is called by:
  3872 ;;		_vfpfcnvrt
  3873 ;; This function uses a non-reentrant model
  3874 ;;
  3875                           
  3876                           	psect	text10
  3877  00109A                     __ptext10:
  3878                           	callstack 0
  3879  00109A                     _efgtoa:
  3880                           	callstack 12
  3881  00109A                     
  3882                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  3883  00109A  0E00               	movlw	0
  3884  00109C  0100               	movlb	0	; () banked
  3885  00109E  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  3886  0010A0  0E00               	movlw	0
  3887  0010A2  6FA9               	movwf	efgtoa@sign& (0+255),b
  3888  0010A4                     
  3889                           ; BSR set to: 0
  3890                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  3891  0010A4  C085  F0BB         	movff	efgtoa@f,efgtoa@g
  3892  0010A8  C086  F0BC         	movff	efgtoa@f+1,efgtoa@g+1
  3893  0010AC  C087  F0BD         	movff	efgtoa@f+2,efgtoa@g+2
  3894  0010B0  C088  F0BE         	movff	efgtoa@f+3,efgtoa@g+3
  3895  0010B4                     
  3896                           ; BSR set to: 0
  3897                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  3898  0010B4  BFBE               	btfsc	(efgtoa@g+3)& (0+255),7,b
  3899  0010B6  EF61  F008         	goto	u9020
  3900  0010BA  EF5F  F008         	goto	u9021
  3901  0010BE                     u9021:
  3902  0010BE  EF77  F008         	goto	l8383
  3903  0010C2                     u9020:
  3904  0010C2                     
  3905                           ; BSR set to: 0
  3906                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  3907  0010C2  0E00               	movlw	0
  3908  0010C4  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  3909  0010C6  0E01               	movlw	1
  3910  0010C8  6FA9               	movwf	efgtoa@sign& (0+255),b
  3911  0010CA                     
  3912                           ; BSR set to: 0
  3913                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  3914  0010CA  C0BB  F014         	movff	efgtoa@g,___flneg@f1
  3915  0010CE  C0BC  F015         	movff	efgtoa@g+1,___flneg@f1+1
  3916  0010D2  C0BD  F016         	movff	efgtoa@g+2,___flneg@f1+2
  3917  0010D6  C0BE  F017         	movff	efgtoa@g+3,___flneg@f1+3
  3918  0010DA  ECAF  F02B         	call	___flneg	;wreg free
  3919  0010DE  C014  F0BB         	movff	?___flneg,efgtoa@g
  3920  0010E2  C015  F0BC         	movff	?___flneg+1,efgtoa@g+1
  3921  0010E6  C016  F0BD         	movff	?___flneg+2,efgtoa@g+2
  3922  0010EA  C017  F0BE         	movff	?___flneg+3,efgtoa@g+3
  3923  0010EE                     l8383:
  3924                           
  3925                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  3926  0010EE  0E00               	movlw	0
  3927  0010F0  0100               	movlb	0	; () banked
  3928  0010F2  6FC2               	movwf	(efgtoa@n+1)& (0+255),b
  3929  0010F4  0E00               	movlw	0
  3930  0010F6  6FC1               	movwf	efgtoa@n& (0+255),b
  3931  0010F8                     
  3932                           ; BSR set to: 0
  3933                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  3934  0010F8  C0E5  F0AD         	movff	_width,efgtoa@w
  3935  0010FC  C0E6  F0AE         	movff	_width+1,efgtoa@w+1
  3936  001100                     
  3937                           ; BSR set to: 0
  3938                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  3939  001100  51A9               	movf	efgtoa@sign& (0+255),w,b
  3940  001102  11AA               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3941  001104  A4D8               	btfss	status,2,c
  3942  001106  EF87  F008         	goto	u9031
  3943  00110A  EF89  F008         	goto	u9030
  3944  00110E                     u9031:
  3945  00110E  EF90  F008         	goto	l8391
  3946  001112                     u9030:
  3947  001112                     
  3948                           ; BSR set to: 0
  3949  001112  A43C               	btfss	_flags^0,2,c
  3950  001114  EF8E  F008         	goto	u9041
  3951  001118  EF90  F008         	goto	u9040
  3952  00111C                     u9041:
  3953  00111C  EFAA  F008         	goto	l8403
  3954  001120                     u9040:
  3955  001120                     l8391:
  3956                           
  3957                           ; BSR set to: 0
  3958                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  3959  001120  51A9               	movf	efgtoa@sign& (0+255),w,b
  3960  001122  11AA               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3961  001124  A4D8               	btfss	status,2,c
  3962  001126  EF97  F008         	goto	u9051
  3963  00112A  EF99  F008         	goto	u9050
  3964  00112E                     u9051:
  3965  00112E  EF9F  F008         	goto	l8395
  3966  001132                     u9050:
  3967  001132                     
  3968                           ; BSR set to: 0
  3969  001132  0E00               	movlw	0
  3970  001134  6F90               	movwf	(_efgtoa$3559+1)& (0+255),b
  3971  001136  0E2B               	movlw	43
  3972  001138  6F8F               	movwf	_efgtoa$3559& (0+255),b
  3973  00113A  EFA3  F008         	goto	l8397
  3974  00113E                     l8395:
  3975                           
  3976                           ; BSR set to: 0
  3977  00113E  0E00               	movlw	0
  3978  001140  6F90               	movwf	(_efgtoa$3559+1)& (0+255),b
  3979  001142  0E2D               	movlw	45
  3980  001144  6F8F               	movwf	_efgtoa$3559& (0+255),b
  3981  001146                     l8397:
  3982                           
  3983                           ; BSR set to: 0
  3984  001146  C08F  F13A         	movff	_efgtoa$3559,_dbuf
  3985  00114A                     
  3986                           ; BSR set to: 0
  3987                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  3988  00114A  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  3989  00114C  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  3990  00114E                     
  3991                           ; BSR set to: 0
  3992                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  3993  00114E  07AD               	decf	efgtoa@w& (0+255),f,b
  3994  001150  A0D8               	btfss	status,0,c
  3995  001152  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  3996  001154                     l8403:
  3997                           
  3998                           ; BSR set to: 0
  3999                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4000  001154  C0BB  F014         	movff	efgtoa@g,___fpclassifyf@x
  4001  001158  C0BC  F015         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4002  00115C  C0BD  F016         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4003  001160  C0BE  F017         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4004  001164  ECF2  F023         	call	___fpclassifyf	;wreg free
  4005  001168  0414               	decf	?___fpclassifyf^0,w,c
  4006  00116A  1015               	iorwf	(?___fpclassifyf+1)^0,w,c
  4007  00116C  A4D8               	btfss	status,2,c
  4008  00116E  EFBB  F008         	goto	u9061
  4009  001172  EFBD  F008         	goto	u9060
  4010  001176                     u9061:
  4011  001176  EF14  F009         	goto	l8421
  4012  00117A                     u9060:
  4013  00117A  0EBF               	movlw	191
  4014  00117C  0100               	movlb	0	; () banked
  4015  00117E  6F8A               	movwf	??_efgtoa& (0+255),b
  4016  001180  0EFF               	movlw	255
  4017  001182  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  4018  001184  5189               	movf	efgtoa@c& (0+255),w,b
  4019  001186  6F8C               	movwf	(??_efgtoa+2)& (0+255),b
  4020  001188  6B8D               	clrf	(??_efgtoa+3)& (0+255),b
  4021  00118A  518A               	movf	??_efgtoa& (0+255),w,b
  4022  00118C  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  4023  00118E  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  4024  001190  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4025  001192  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  4026  001194  E10A               	bnz	u9070
  4027  001196  0E1A               	movlw	26
  4028  001198  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  4029  00119A  A0D8               	btfss	status,0,c
  4030  00119C  EFD2  F008         	goto	u9071
  4031  0011A0  EFD5  F008         	goto	u9070
  4032  0011A4                     u9071:
  4033  0011A4  0E01               	movlw	1
  4034  0011A6  EFD6  F008         	goto	u9080
  4035  0011AA                     u9070:
  4036  0011AA  0E00               	movlw	0
  4037  0011AC                     u9080:
  4038  0011AC  6F91               	movwf	_efgtoa$3560& (0+255),b
  4039  0011AE  6B92               	clrf	(_efgtoa$3560+1)& (0+255),b
  4040  0011B0                     
  4041                           ; BSR set to: 0
  4042  0011B0  5191               	movf	_efgtoa$3560& (0+255),w,b
  4043  0011B2  1192               	iorwf	(_efgtoa$3560+1)& (0+255),w,b
  4044  0011B4  B4D8               	btfsc	status,2,c
  4045  0011B6  EFDF  F008         	goto	u9091
  4046  0011BA  EFE1  F008         	goto	u9090
  4047  0011BE                     u9091:
  4048  0011BE  EFEF  F008         	goto	l8413
  4049  0011C2                     u9090:
  4050  0011C2                     
  4051                           ; BSR set to: 0
  4052                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  4053  0011C2  0E3A               	movlw	low _dbuf
  4054  0011C4  25C1               	addwf	efgtoa@n& (0+255),w,b
  4055  0011C6  6E14               	movwf	strcpy@dest^0,c
  4056  0011C8  0E01               	movlw	high _dbuf
  4057  0011CA  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4058  0011CC  6E15               	movwf	(strcpy@dest+1)^0,c
  4059  0011CE  0E86               	movlw	low STR_11
  4060  0011D0  6E16               	movwf	strcpy@src^0,c
  4061  0011D2  0E10               	movlw	high STR_11
  4062  0011D4  6E17               	movwf	(strcpy@src+1)^0,c
  4063  0011D6  EC33  F029         	call	_strcpy	;wreg free
  4064                           
  4065                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  4066  0011DA  EFFB  F008         	goto	l8415
  4067  0011DE                     l8413:
  4068                           
  4069                           ; BSR set to: 0
  4070                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  4071  0011DE  0E3A               	movlw	low _dbuf
  4072  0011E0  25C1               	addwf	efgtoa@n& (0+255),w,b
  4073  0011E2  6E14               	movwf	strcpy@dest^0,c
  4074  0011E4  0E01               	movlw	high _dbuf
  4075  0011E6  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4076  0011E8  6E15               	movwf	(strcpy@dest+1)^0,c
  4077  0011EA  0E8E               	movlw	low STR_12
  4078  0011EC  6E16               	movwf	strcpy@src^0,c
  4079  0011EE  0E10               	movlw	high STR_12
  4080  0011F0  6E17               	movwf	(strcpy@src+1)^0,c
  4081  0011F2  EC33  F029         	call	_strcpy	;wreg free
  4082  0011F6                     l8415:
  4083                           
  4084                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  4085  0011F6  0100               	movlb	0	; () banked
  4086  0011F8  0EFD               	movlw	253
  4087  0011FA  27AD               	addwf	efgtoa@w& (0+255),f,b
  4088  0011FC  0EFF               	movlw	255
  4089  0011FE  23AE               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4090  001200                     
  4091                           ; BSR set to: 0
  4092                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  4093  001200  C083  F026         	movff	efgtoa@fp,pad@fp
  4094  001204  C084  F027         	movff	efgtoa@fp+1,pad@fp+1
  4095  001208  0E3A               	movlw	low _dbuf
  4096  00120A  6E28               	movwf	pad@buf^0,c
  4097  00120C  0E01               	movlw	high _dbuf
  4098  00120E  6E29               	movwf	(pad@buf+1)^0,c
  4099  001210  C0AD  F02A         	movff	efgtoa@w,pad@p
  4100  001214  C0AE  F02B         	movff	efgtoa@w+1,pad@p+1
  4101  001218  EC23  F026         	call	_pad	;wreg free
  4102  00121C  C026  F083         	movff	?_pad,?_efgtoa
  4103  001220  C027  F084         	movff	?_pad+1,?_efgtoa+1
  4104  001224  EFA3  F00E         	goto	l2171
  4105  001228                     l8421:
  4106                           
  4107                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4108  001228  C0BB  F014         	movff	efgtoa@g,___fpclassifyf@x
  4109  00122C  C0BC  F015         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4110  001230  C0BD  F016         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4111  001234  C0BE  F017         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4112  001238  ECF2  F023         	call	___fpclassifyf	;wreg free
  4113  00123C  5014               	movf	?___fpclassifyf^0,w,c
  4114  00123E  1015               	iorwf	(?___fpclassifyf+1)^0,w,c
  4115  001240  A4D8               	btfss	status,2,c
  4116  001242  EF25  F009         	goto	u9101
  4117  001246  EF27  F009         	goto	u9100
  4118  00124A                     u9101:
  4119  00124A  EF7E  F009         	goto	l8439
  4120  00124E                     u9100:
  4121  00124E  0EBF               	movlw	191
  4122  001250  0100               	movlb	0	; () banked
  4123  001252  6F8A               	movwf	??_efgtoa& (0+255),b
  4124  001254  0EFF               	movlw	255
  4125  001256  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  4126  001258  5189               	movf	efgtoa@c& (0+255),w,b
  4127  00125A  6F8C               	movwf	(??_efgtoa+2)& (0+255),b
  4128  00125C  6B8D               	clrf	(??_efgtoa+3)& (0+255),b
  4129  00125E  518A               	movf	??_efgtoa& (0+255),w,b
  4130  001260  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  4131  001262  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  4132  001264  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4133  001266  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  4134  001268  E10A               	bnz	u9110
  4135  00126A  0E1A               	movlw	26
  4136  00126C  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  4137  00126E  A0D8               	btfss	status,0,c
  4138  001270  EF3C  F009         	goto	u9111
  4139  001274  EF3F  F009         	goto	u9110
  4140  001278                     u9111:
  4141  001278  0E01               	movlw	1
  4142  00127A  EF40  F009         	goto	u9120
  4143  00127E                     u9110:
  4144  00127E  0E00               	movlw	0
  4145  001280                     u9120:
  4146  001280  6F93               	movwf	_efgtoa$3564& (0+255),b
  4147  001282  6B94               	clrf	(_efgtoa$3564+1)& (0+255),b
  4148  001284                     
  4149                           ; BSR set to: 0
  4150  001284  5193               	movf	_efgtoa$3564& (0+255),w,b
  4151  001286  1194               	iorwf	(_efgtoa$3564+1)& (0+255),w,b
  4152  001288  B4D8               	btfsc	status,2,c
  4153  00128A  EF49  F009         	goto	u9131
  4154  00128E  EF4B  F009         	goto	u9130
  4155  001292                     u9131:
  4156  001292  EF59  F009         	goto	l8431
  4157  001296                     u9130:
  4158  001296                     
  4159                           ; BSR set to: 0
  4160                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  4161  001296  0E3A               	movlw	low _dbuf
  4162  001298  25C1               	addwf	efgtoa@n& (0+255),w,b
  4163  00129A  6E14               	movwf	strcpy@dest^0,c
  4164  00129C  0E01               	movlw	high _dbuf
  4165  00129E  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4166  0012A0  6E15               	movwf	(strcpy@dest+1)^0,c
  4167  0012A2  0E8A               	movlw	low STR_15
  4168  0012A4  6E16               	movwf	strcpy@src^0,c
  4169  0012A6  0E10               	movlw	high STR_15
  4170  0012A8  6E17               	movwf	(strcpy@src+1)^0,c
  4171  0012AA  EC33  F029         	call	_strcpy	;wreg free
  4172                           
  4173                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  4174  0012AE  EF65  F009         	goto	l8433
  4175  0012B2                     l8431:
  4176                           
  4177                           ; BSR set to: 0
  4178                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  4179  0012B2  0E3A               	movlw	low _dbuf
  4180  0012B4  25C1               	addwf	efgtoa@n& (0+255),w,b
  4181  0012B6  6E14               	movwf	strcpy@dest^0,c
  4182  0012B8  0E01               	movlw	high _dbuf
  4183  0012BA  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4184  0012BC  6E15               	movwf	(strcpy@dest+1)^0,c
  4185  0012BE  0E92               	movlw	low STR_16
  4186  0012C0  6E16               	movwf	strcpy@src^0,c
  4187  0012C2  0E10               	movlw	high STR_16
  4188  0012C4  6E17               	movwf	(strcpy@src+1)^0,c
  4189  0012C6  EC33  F029         	call	_strcpy	;wreg free
  4190  0012CA                     l8433:
  4191                           
  4192                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 371:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  4193  0012CA  0100               	movlb	0	; () banked
  4194  0012CC  0EFD               	movlw	253
  4195  0012CE  27AD               	addwf	efgtoa@w& (0+255),f,b
  4196  0012D0  0EFF               	movlw	255
  4197  0012D2  23AE               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4198  0012D4                     
  4199                           ; BSR set to: 0
  4200                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 372:         retu
      +                          rn pad(fp, &dbuf[0], w);
  4201  0012D4  C083  F026         	movff	efgtoa@fp,pad@fp
  4202  0012D8  C084  F027         	movff	efgtoa@fp+1,pad@fp+1
  4203  0012DC  0E3A               	movlw	low _dbuf
  4204  0012DE  6E28               	movwf	pad@buf^0,c
  4205  0012E0  0E01               	movlw	high _dbuf
  4206  0012E2  6E29               	movwf	(pad@buf+1)^0,c
  4207  0012E4  C0AD  F02A         	movff	efgtoa@w,pad@p
  4208  0012E8  C0AE  F02B         	movff	efgtoa@w+1,pad@p+1
  4209  0012EC  EC23  F026         	call	_pad	;wreg free
  4210  0012F0  C026  F083         	movff	?_pad,?_efgtoa
  4211  0012F4  C027  F084         	movff	?_pad+1,?_efgtoa+1
  4212  0012F8  EFA3  F00E         	goto	l2171
  4213  0012FC                     l8439:
  4214                           
  4215                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  4216  0012FC  0E00               	movlw	0
  4217  0012FE  0100               	movlb	0	; () banked
  4218  001300  6FC3               	movwf	efgtoa@u& (0+255),b
  4219  001302  0E00               	movlw	0
  4220  001304  6FC4               	movwf	(efgtoa@u+1)& (0+255),b
  4221  001306  0E80               	movlw	128
  4222  001308  6FC5               	movwf	(efgtoa@u+2)& (0+255),b
  4223  00130A  0E3F               	movlw	63
  4224  00130C  6FC6               	movwf	(efgtoa@u+3)& (0+255),b
  4225                           
  4226                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  4227  00130E  0E00               	movlw	0
  4228  001310  6FC0               	movwf	(efgtoa@e+1)& (0+255),b
  4229  001312  0E00               	movlw	0
  4230  001314  6FBF               	movwf	efgtoa@e& (0+255),b
  4231  001316                     
  4232                           ; BSR set to: 0
  4233                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  4234  001316  C0BB  F014         	movff	efgtoa@g,___fleq@ff1
  4235  00131A  C0BC  F015         	movff	efgtoa@g+1,___fleq@ff1+1
  4236  00131E  C0BD  F016         	movff	efgtoa@g+2,___fleq@ff1+2
  4237  001322  C0BE  F017         	movff	efgtoa@g+3,___fleq@ff1+3
  4238  001326  0E00               	movlw	0
  4239  001328  6E18               	movwf	___fleq@ff2^0,c
  4240  00132A  0E00               	movlw	0
  4241  00132C  6E19               	movwf	(___fleq@ff2+1)^0,c
  4242  00132E  0E00               	movlw	0
  4243  001330  6E1A               	movwf	(___fleq@ff2+2)^0,c
  4244  001332  0E00               	movlw	0
  4245  001334  6E1B               	movwf	(___fleq@ff2+3)^0,c
  4246  001336  EC3C  F027         	call	___fleq	;wreg free
  4247  00133A  B0D8               	btfsc	status,0,c
  4248  00133C  EFA2  F009         	goto	u9141
  4249  001340  EFA4  F009         	goto	u9140
  4250  001344                     u9141:
  4251  001344  EF29  F00A         	goto	l8457
  4252  001348                     u9140:
  4253  001348  EFC3  F009         	goto	l8449
  4254  00134C                     l8445:
  4255                           
  4256                           ; BSR set to: 0
  4257                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  4258  00134C  C0C3  F02A         	movff	efgtoa@u,___flmul@b
  4259  001350  C0C4  F02B         	movff	efgtoa@u+1,___flmul@b+1
  4260  001354  C0C5  F02C         	movff	efgtoa@u+2,___flmul@b+2
  4261  001358  C0C6  F02D         	movff	efgtoa@u+3,___flmul@b+3
  4262  00135C  0E00               	movlw	0
  4263  00135E  6E2E               	movwf	___flmul@a^0,c
  4264  001360  0E00               	movlw	0
  4265  001362  6E2F               	movwf	(___flmul@a+1)^0,c
  4266  001364  0E20               	movlw	32
  4267  001366  6E30               	movwf	(___flmul@a+2)^0,c
  4268  001368  0E41               	movlw	65
  4269  00136A  6E31               	movwf	(___flmul@a+3)^0,c
  4270  00136C  EC97  F013         	call	___flmul	;wreg free
  4271  001370  C02A  F0C3         	movff	?___flmul,efgtoa@u
  4272  001374  C02B  F0C4         	movff	?___flmul+1,efgtoa@u+1
  4273  001378  C02C  F0C5         	movff	?___flmul+2,efgtoa@u+2
  4274  00137C  C02D  F0C6         	movff	?___flmul+3,efgtoa@u+3
  4275  001380                     
  4276                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  4277  001380  0100               	movlb	0	; () banked
  4278  001382  4BBF               	infsnz	efgtoa@e& (0+255),f,b
  4279  001384  2BC0               	incf	(efgtoa@e+1)& (0+255),f,b
  4280  001386                     l8449:
  4281                           
  4282                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  4283  001386  C0BB  F06D         	movff	efgtoa@g,___flge@ff1
  4284  00138A  C0BC  F06E         	movff	efgtoa@g+1,___flge@ff1+1
  4285  00138E  C0BD  F06F         	movff	efgtoa@g+2,___flge@ff1+2
  4286  001392  C0BE  F070         	movff	efgtoa@g+3,___flge@ff1+3
  4287  001396  0E00               	movlw	0
  4288  001398  6E2E               	movwf	___flmul@a^0,c
  4289  00139A  0E00               	movlw	0
  4290  00139C  6E2F               	movwf	(___flmul@a+1)^0,c
  4291  00139E  0E20               	movlw	32
  4292  0013A0  6E30               	movwf	(___flmul@a+2)^0,c
  4293  0013A2  0E41               	movlw	65
  4294  0013A4  6E31               	movwf	(___flmul@a+3)^0,c
  4295  0013A6  C0C3  F02A         	movff	efgtoa@u,___flmul@b
  4296  0013AA  C0C4  F02B         	movff	efgtoa@u+1,___flmul@b+1
  4297  0013AE  C0C5  F02C         	movff	efgtoa@u+2,___flmul@b+2
  4298  0013B2  C0C6  F02D         	movff	efgtoa@u+3,___flmul@b+3
  4299  0013B6  EC97  F013         	call	___flmul	;wreg free
  4300  0013BA  C02A  F071         	movff	?___flmul,___flge@ff2
  4301  0013BE  C02B  F072         	movff	?___flmul+1,___flge@ff2+1
  4302  0013C2  C02C  F073         	movff	?___flmul+2,___flge@ff2+2
  4303  0013C6  C02D  F074         	movff	?___flmul+3,___flge@ff2+3
  4304  0013CA  EC6F  F023         	call	___flge	;wreg free
  4305  0013CE  0100               	movlb	0	; () banked
  4306  0013D0  B0D8               	btfsc	status,0,c
  4307  0013D2  EFED  F009         	goto	u9151
  4308  0013D6  EFEF  F009         	goto	u9150
  4309  0013DA                     u9151:
  4310  0013DA  EFA6  F009         	goto	l8445
  4311  0013DE                     u9150:
  4312  0013DE  EF0F  F00A         	goto	l8455
  4313  0013E2                     l8451:
  4314                           
  4315                           ; BSR set to: 0
  4316                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  4317  0013E2  C0C3  F02A         	movff	efgtoa@u,___fldiv@b
  4318  0013E6  C0C4  F02B         	movff	efgtoa@u+1,___fldiv@b+1
  4319  0013EA  C0C5  F02C         	movff	efgtoa@u+2,___fldiv@b+2
  4320  0013EE  C0C6  F02D         	movff	efgtoa@u+3,___fldiv@b+3
  4321  0013F2  0E00               	movlw	0
  4322  0013F4  6E2E               	movwf	___fldiv@a^0,c
  4323  0013F6  0E00               	movlw	0
  4324  0013F8  6E2F               	movwf	(___fldiv@a+1)^0,c
  4325  0013FA  0E20               	movlw	32
  4326  0013FC  6E30               	movwf	(___fldiv@a+2)^0,c
  4327  0013FE  0E41               	movlw	65
  4328  001400  6E31               	movwf	(___fldiv@a+3)^0,c
  4329  001402  ECBF  F015         	call	___fldiv	;wreg free
  4330  001406  C02A  F0C3         	movff	?___fldiv,efgtoa@u
  4331  00140A  C02B  F0C4         	movff	?___fldiv+1,efgtoa@u+1
  4332  00140E  C02C  F0C5         	movff	?___fldiv+2,efgtoa@u+2
  4333  001412  C02D  F0C6         	movff	?___fldiv+3,efgtoa@u+3
  4334  001416                     
  4335                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  4336  001416  0100               	movlb	0	; () banked
  4337  001418  07BF               	decf	efgtoa@e& (0+255),f,b
  4338  00141A  A0D8               	btfss	status,0,c
  4339  00141C  07C0               	decf	(efgtoa@e+1)& (0+255),f,b
  4340  00141E                     l8455:
  4341                           
  4342                           ; BSR set to: 0
  4343                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  4344  00141E  C0BB  F06D         	movff	efgtoa@g,___flge@ff1
  4345  001422  C0BC  F06E         	movff	efgtoa@g+1,___flge@ff1+1
  4346  001426  C0BD  F06F         	movff	efgtoa@g+2,___flge@ff1+2
  4347  00142A  C0BE  F070         	movff	efgtoa@g+3,___flge@ff1+3
  4348  00142E  C0C3  F071         	movff	efgtoa@u,___flge@ff2
  4349  001432  C0C4  F072         	movff	efgtoa@u+1,___flge@ff2+1
  4350  001436  C0C5  F073         	movff	efgtoa@u+2,___flge@ff2+2
  4351  00143A  C0C6  F074         	movff	efgtoa@u+3,___flge@ff2+3
  4352  00143E  EC6F  F023         	call	___flge	;wreg free
  4353  001442  0100               	movlb	0	; () banked
  4354  001444  A0D8               	btfss	status,0,c
  4355  001446  EF27  F00A         	goto	u9161
  4356  00144A  EF29  F00A         	goto	u9160
  4357  00144E                     u9161:
  4358  00144E  EFF1  F009         	goto	l8451
  4359  001452                     u9160:
  4360  001452                     l8457:
  4361                           
  4362                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  4363  001452  C089  F01A         	movff	efgtoa@c,tolower@c
  4364  001456  6A1B               	clrf	(tolower@c+1)^0,c
  4365  001458  EC68  F029         	call	_tolower	;wreg free
  4366  00145C  501A               	movf	?_tolower^0,w,c
  4367  00145E  0100               	movlb	0	; () banked
  4368  001460  6FB0               	movwf	efgtoa@mode& (0+255),b
  4369  001462                     
  4370                           ; BSR set to: 0
  4371                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  4372  001462  C0B0  F0AF         	movff	efgtoa@mode,efgtoa@nmode
  4373  001466                     
  4374                           ; BSR set to: 0
  4375                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  4376  001466  0E67               	movlw	103
  4377  001468  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  4378  00146A  A4D8               	btfss	status,2,c
  4379  00146C  EF3A  F00A         	goto	u9171
  4380  001470  EF3C  F00A         	goto	u9170
  4381  001474                     u9171:
  4382  001474  EF62  F00A         	goto	l8471
  4383  001478                     u9170:
  4384  001478                     
  4385                           ; BSR set to: 0
  4386                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  4387  001478  503A               	movf	_prec^0,w,c
  4388  00147A  103B               	iorwf	(_prec+1)^0,w,c
  4389  00147C  A4D8               	btfss	status,2,c
  4390  00147E  EF43  F00A         	goto	u9181
  4391  001482  EF45  F00A         	goto	u9180
  4392  001486                     u9181:
  4393  001486  EF49  F00A         	goto	l8467
  4394  00148A                     u9180:
  4395  00148A                     
  4396                           ; BSR set to: 0
  4397                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  4398  00148A  0E00               	movlw	0
  4399  00148C  6E3B               	movwf	(_prec+1)^0,c
  4400  00148E  0E01               	movlw	1
  4401  001490  6E3A               	movwf	_prec^0,c
  4402  001492                     l8467:
  4403                           
  4404                           ; BSR set to: 0
  4405                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  4406  001492  BE3B               	btfsc	(_prec+1)^0,7,c
  4407  001494  EF56  F00A         	goto	u9190
  4408  001498  503B               	movf	(_prec+1)^0,w,c
  4409  00149A  E106               	bnz	u9191
  4410  00149C  043A               	decf	_prec^0,w,c
  4411  00149E  B0D8               	btfsc	status,0,c
  4412  0014A0  EF54  F00A         	goto	u9191
  4413  0014A4  EF56  F00A         	goto	u9190
  4414  0014A8                     u9191:
  4415  0014A8  EF5C  F00A         	goto	l2189
  4416  0014AC                     u9190:
  4417  0014AC                     l8469:
  4418                           
  4419                           ; BSR set to: 0
  4420  0014AC  0E00               	movlw	0
  4421  0014AE  6FAC               	movwf	(efgtoa@p+1)& (0+255),b
  4422  0014B0  0E06               	movlw	6
  4423  0014B2  6FAB               	movwf	efgtoa@p& (0+255),b
  4424  0014B4  EF6B  F00A         	goto	l8477
  4425  0014B8                     l2189:
  4426                           
  4427                           ; BSR set to: 0
  4428  0014B8  C03A  F0AB         	movff	_prec,efgtoa@p
  4429  0014BC  C03B  F0AC         	movff	_prec+1,efgtoa@p+1
  4430  0014C0  EF6B  F00A         	goto	l8477
  4431  0014C4                     l8471:
  4432                           
  4433                           ; BSR set to: 0
  4434                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  4435  0014C4  BE3B               	btfsc	(_prec+1)^0,7,c
  4436  0014C6  EF67  F00A         	goto	u9201
  4437  0014CA  EF69  F00A         	goto	u9200
  4438  0014CE                     u9201:
  4439  0014CE  EF56  F00A         	goto	l8469
  4440  0014D2                     u9200:
  4441  0014D2  EF5C  F00A         	goto	l2189
  4442  0014D6                     l8477:
  4443                           
  4444                           ; BSR set to: 0
  4445                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  4446  0014D6  0E67               	movlw	103
  4447  0014D8  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  4448  0014DA  A4D8               	btfss	status,2,c
  4449  0014DC  EF72  F00A         	goto	u9211
  4450  0014E0  EF74  F00A         	goto	u9210
  4451  0014E4                     u9211:
  4452  0014E4  EFA3  F00A         	goto	l8487
  4453  0014E8                     u9210:
  4454  0014E8                     
  4455                           ; BSR set to: 0
  4456                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  4457  0014E8  AFC0               	btfss	(efgtoa@e+1)& (0+255),7,b
  4458  0014EA  EF82  F00A         	goto	u9220
  4459  0014EE  0EFC               	movlw	252
  4460  0014F0  5DBF               	subwf	efgtoa@e& (0+255),w,b
  4461  0014F2  0EFF               	movlw	255
  4462  0014F4  59C0               	subwfb	(efgtoa@e+1)& (0+255),w,b
  4463  0014F6  A0D8               	btfss	status,0,c
  4464  0014F8  EF80  F00A         	goto	u9221
  4465  0014FC  EF82  F00A         	goto	u9220
  4466  001500                     u9221:
  4467  001500  EFA1  F00A         	goto	l8485
  4468  001504                     u9220:
  4469  001504                     
  4470                           ; BSR set to: 0
  4471  001504  0EFF               	movlw	255
  4472  001506  6F8A               	movwf	??_efgtoa& (0+255),b
  4473  001508  0EFF               	movlw	255
  4474  00150A  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  4475  00150C  C0AB  F08C         	movff	efgtoa@p,??_efgtoa+2
  4476  001510  C0AC  F08D         	movff	efgtoa@p+1,??_efgtoa+3
  4477  001514  518A               	movf	??_efgtoa& (0+255),w,b
  4478  001516  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  4479  001518  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  4480  00151A  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4481  00151C  51BF               	movf	efgtoa@e& (0+255),w,b
  4482  00151E  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  4483  001520  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  4484  001522  0A80               	xorlw	128
  4485  001524  6F8E               	movwf	(??_efgtoa+4)& (0+255),b
  4486  001526  51C0               	movf	(efgtoa@e+1)& (0+255),w,b
  4487  001528  0A80               	xorlw	128
  4488  00152A  598E               	subwfb	(??_efgtoa+4)& (0+255),w,b
  4489  00152C  A0D8               	btfss	status,0,c
  4490  00152E  EF9B  F00A         	goto	u9231
  4491  001532  EF9D  F00A         	goto	u9230
  4492  001536                     u9231:
  4493  001536  EFA1  F00A         	goto	l8485
  4494  00153A                     u9230:
  4495  00153A                     
  4496                           ; BSR set to: 0
  4497                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  4498  00153A  0E66               	movlw	102
  4499  00153C  6FAF               	movwf	efgtoa@nmode& (0+255),b
  4500                           
  4501                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  4502  00153E  EFA3  F00A         	goto	l8487
  4503  001542                     l8485:
  4504                           
  4505                           ; BSR set to: 0
  4506                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  4507  001542  0E65               	movlw	101
  4508  001544  6FAF               	movwf	efgtoa@nmode& (0+255),b
  4509  001546                     l8487:
  4510                           
  4511                           ; BSR set to: 0
  4512                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  4513  001546  C0AB  F0A1         	movff	efgtoa@p,efgtoa@m
  4514  00154A  C0AC  F0A2         	movff	efgtoa@p+1,efgtoa@m+1
  4515  00154E                     
  4516                           ; BSR set to: 0
  4517                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  4518  00154E  0E67               	movlw	103
  4519  001550  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  4520  001552  A4D8               	btfss	status,2,c
  4521  001554  EFAE  F00A         	goto	u9241
  4522  001558  EFB0  F00A         	goto	u9240
  4523  00155C                     u9241:
  4524  00155C  EFC0  F00A         	goto	l8495
  4525  001560                     u9240:
  4526  001560                     
  4527                           ; BSR set to: 0
  4528  001560  0E66               	movlw	102
  4529  001562  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  4530  001564  A4D8               	btfss	status,2,c
  4531  001566  EFB7  F00A         	goto	u9251
  4532  00156A  EFB9  F00A         	goto	u9250
  4533  00156E                     u9251:
  4534  00156E  EFC2  F00A         	goto	l8497
  4535  001572                     u9250:
  4536  001572                     
  4537                           ; BSR set to: 0
  4538  001572  BFC0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4539  001574  EFC0  F00A         	goto	u9260
  4540  001578  EFBE  F00A         	goto	u9261
  4541  00157C                     u9261:
  4542  00157C  EFC2  F00A         	goto	l8497
  4543  001580                     u9260:
  4544  001580                     l8495:
  4545                           
  4546                           ; BSR set to: 0
  4547                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  4548  001580  4BA1               	infsnz	efgtoa@m& (0+255),f,b
  4549  001582  2BA2               	incf	(efgtoa@m+1)& (0+255),f,b
  4550  001584                     l8497:
  4551                           
  4552                           ; BSR set to: 0
  4553                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  4554  001584  0E66               	movlw	102
  4555  001586  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  4556  001588  A4D8               	btfss	status,2,c
  4557  00158A  EFC9  F00A         	goto	u9271
  4558  00158E  EFCB  F00A         	goto	u9270
  4559  001592                     u9271:
  4560  001592  EFEB  F00A         	goto	l8507
  4561  001596                     u9270:
  4562  001596                     
  4563                           ; BSR set to: 0
  4564                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  4565  001596  BFC0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4566  001598  EFD2  F00A         	goto	u9280
  4567  00159C  EFD0  F00A         	goto	u9281
  4568  0015A0                     u9281:
  4569  0015A0  EFDE  F00A         	goto	l8503
  4570  0015A4                     u9280:
  4571  0015A4                     
  4572                           ; BSR set to: 0
  4573                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  4574  0015A4  0E00               	movlw	0
  4575  0015A6  6FC3               	movwf	efgtoa@u& (0+255),b
  4576  0015A8  0E00               	movlw	0
  4577  0015AA  6FC4               	movwf	(efgtoa@u+1)& (0+255),b
  4578  0015AC  0E80               	movlw	128
  4579  0015AE  6FC5               	movwf	(efgtoa@u+2)& (0+255),b
  4580  0015B0  0E3F               	movlw	63
  4581  0015B2  6FC6               	movwf	(efgtoa@u+3)& (0+255),b
  4582                           
  4583                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  4584  0015B4  0E00               	movlw	0
  4585  0015B6  6FC0               	movwf	(efgtoa@e+1)& (0+255),b
  4586  0015B8  0E00               	movlw	0
  4587  0015BA  6FBF               	movwf	efgtoa@e& (0+255),b
  4588  0015BC                     l8503:
  4589                           
  4590                           ; BSR set to: 0
  4591                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  4592  0015BC  0E67               	movlw	103
  4593  0015BE  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  4594  0015C0  B4D8               	btfsc	status,2,c
  4595  0015C2  EFE5  F00A         	goto	u9291
  4596  0015C6  EFE7  F00A         	goto	u9290
  4597  0015CA                     u9291:
  4598  0015CA  EFEB  F00A         	goto	l8507
  4599  0015CE                     u9290:
  4600  0015CE                     
  4601                           ; BSR set to: 0
  4602                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  4603  0015CE  51BF               	movf	efgtoa@e& (0+255),w,b
  4604  0015D0  27A1               	addwf	efgtoa@m& (0+255),f,b
  4605  0015D2  51C0               	movf	(efgtoa@e+1)& (0+255),w,b
  4606  0015D4  23A2               	addwfc	(efgtoa@m+1)& (0+255),f,b
  4607  0015D6                     l8507:
  4608                           
  4609                           ; BSR set to: 0
  4610                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  4611  0015D6  0E00               	movlw	0
  4612  0015D8  6FBA               	movwf	(efgtoa@i+1)& (0+255),b
  4613  0015DA  0E00               	movlw	0
  4614  0015DC  6FB9               	movwf	efgtoa@i& (0+255),b
  4615  0015DE                     
  4616                           ; BSR set to: 0
  4617                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  4618  0015DE  C0BB  F0B1         	movff	efgtoa@g,efgtoa@h
  4619  0015E2  C0BC  F0B2         	movff	efgtoa@g+1,efgtoa@h+1
  4620  0015E6  C0BD  F0B3         	movff	efgtoa@g+2,efgtoa@h+2
  4621  0015EA  C0BE  F0B4         	movff	efgtoa@g+3,efgtoa@h+3
  4622  0015EE                     
  4623                           ; BSR set to: 0
  4624                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  4625  0015EE  C0C3  F0A3         	movff	efgtoa@u,efgtoa@ou
  4626  0015F2  C0C4  F0A4         	movff	efgtoa@u+1,efgtoa@ou+1
  4627  0015F6  C0C5  F0A5         	movff	efgtoa@u+2,efgtoa@ou+2
  4628  0015FA  C0C6  F0A6         	movff	efgtoa@u+3,efgtoa@ou+3
  4629                           
  4630                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  4631  0015FE  EF7C  F00B         	goto	l8521
  4632  001602                     l8513:
  4633                           
  4634                           ; BSR set to: 0
  4635                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  4636  001602  C0B1  F02A         	movff	efgtoa@h,___fldiv@b
  4637  001606  C0B2  F02B         	movff	efgtoa@h+1,___fldiv@b+1
  4638  00160A  C0B3  F02C         	movff	efgtoa@h+2,___fldiv@b+2
  4639  00160E  C0B4  F02D         	movff	efgtoa@h+3,___fldiv@b+3
  4640  001612  C0C3  F02E         	movff	efgtoa@u,___fldiv@a
  4641  001616  C0C4  F02F         	movff	efgtoa@u+1,___fldiv@a+1
  4642  00161A  C0C5  F030         	movff	efgtoa@u+2,___fldiv@a+2
  4643  00161E  C0C6  F031         	movff	efgtoa@u+3,___fldiv@a+3
  4644  001622  ECBF  F015         	call	___fldiv	;wreg free
  4645  001626  C02A  F036         	movff	?___fldiv,floorf@x
  4646  00162A  C02B  F037         	movff	?___fldiv+1,floorf@x+1
  4647  00162E  C02C  F038         	movff	?___fldiv+2,floorf@x+2
  4648  001632  C02D  F039         	movff	?___fldiv+3,floorf@x+3
  4649  001636  EC74  F01A         	call	_floorf	;wreg free
  4650  00163A  C036  F0B5         	movff	?_floorf,efgtoa@l
  4651  00163E  C037  F0B6         	movff	?_floorf+1,efgtoa@l+1
  4652  001642  C038  F0B7         	movff	?_floorf+2,efgtoa@l+2
  4653  001646  C039  F0B8         	movff	?_floorf+3,efgtoa@l+3
  4654                           
  4655                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  4656  00164A  C0B5  F079         	movff	efgtoa@l,___fltol@f1
  4657  00164E  C0B6  F07A         	movff	efgtoa@l+1,___fltol@f1+1
  4658  001652  C0B7  F07B         	movff	efgtoa@l+2,___fltol@f1+2
  4659  001656  C0B8  F07C         	movff	efgtoa@l+3,___fltol@f1+3
  4660  00165A  ECEB  F022         	call	___fltol	;wreg free
  4661  00165E  C079  F0A7         	movff	?___fltol,efgtoa@d
  4662  001662  C07A  F0A8         	movff	?___fltol+1,efgtoa@d+1
  4663  001666                     
  4664                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  4665  001666  C0B1  F079         	movff	efgtoa@h,___flsub@b
  4666  00166A  C0B2  F07A         	movff	efgtoa@h+1,___flsub@b+1
  4667  00166E  C0B3  F07B         	movff	efgtoa@h+2,___flsub@b+2
  4668  001672  C0B4  F07C         	movff	efgtoa@h+3,___flsub@b+3
  4669  001676  C0C3  F02E         	movff	efgtoa@u,___flmul@a
  4670  00167A  C0C4  F02F         	movff	efgtoa@u+1,___flmul@a+1
  4671  00167E  C0C5  F030         	movff	efgtoa@u+2,___flmul@a+2
  4672  001682  C0C6  F031         	movff	efgtoa@u+3,___flmul@a+3
  4673  001686  C0B5  F02A         	movff	efgtoa@l,___flmul@b
  4674  00168A  C0B6  F02B         	movff	efgtoa@l+1,___flmul@b+1
  4675  00168E  C0B7  F02C         	movff	efgtoa@l+2,___flmul@b+2
  4676  001692  C0B8  F02D         	movff	efgtoa@l+3,___flmul@b+3
  4677  001696  EC97  F013         	call	___flmul	;wreg free
  4678  00169A  C02A  F07D         	movff	?___flmul,___flsub@a
  4679  00169E  C02B  F07E         	movff	?___flmul+1,___flsub@a+1
  4680  0016A2  C02C  F07F         	movff	?___flmul+2,___flsub@a+2
  4681  0016A6  C02D  F080         	movff	?___flmul+3,___flsub@a+3
  4682  0016AA  ECB3  F02A         	call	___flsub	;wreg free
  4683  0016AE  C079  F0B1         	movff	?___flsub,efgtoa@h
  4684  0016B2  C07A  F0B2         	movff	?___flsub+1,efgtoa@h+1
  4685  0016B6  C07B  F0B3         	movff	?___flsub+2,efgtoa@h+2
  4686  0016BA  C07C  F0B4         	movff	?___flsub+3,efgtoa@h+3
  4687  0016BE                     
  4688                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  4689  0016BE  C0C3  F02A         	movff	efgtoa@u,___fldiv@b
  4690  0016C2  C0C4  F02B         	movff	efgtoa@u+1,___fldiv@b+1
  4691  0016C6  C0C5  F02C         	movff	efgtoa@u+2,___fldiv@b+2
  4692  0016CA  C0C6  F02D         	movff	efgtoa@u+3,___fldiv@b+3
  4693  0016CE  0E00               	movlw	0
  4694  0016D0  6E2E               	movwf	___fldiv@a^0,c
  4695  0016D2  0E00               	movlw	0
  4696  0016D4  6E2F               	movwf	(___fldiv@a+1)^0,c
  4697  0016D6  0E20               	movlw	32
  4698  0016D8  6E30               	movwf	(___fldiv@a+2)^0,c
  4699  0016DA  0E41               	movlw	65
  4700  0016DC  6E31               	movwf	(___fldiv@a+3)^0,c
  4701  0016DE  ECBF  F015         	call	___fldiv	;wreg free
  4702  0016E2  C02A  F0C3         	movff	?___fldiv,efgtoa@u
  4703  0016E6  C02B  F0C4         	movff	?___fldiv+1,efgtoa@u+1
  4704  0016EA  C02C  F0C5         	movff	?___fldiv+2,efgtoa@u+2
  4705  0016EE  C02D  F0C6         	movff	?___fldiv+3,efgtoa@u+3
  4706  0016F2                     
  4707                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  4708  0016F2  0100               	movlb	0	; () banked
  4709  0016F4  4BB9               	infsnz	efgtoa@i& (0+255),f,b
  4710  0016F6  2BBA               	incf	(efgtoa@i+1)& (0+255),f,b
  4711  0016F8                     l8521:
  4712                           
  4713                           ; BSR set to: 0
  4714                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  4715  0016F8  51A1               	movf	efgtoa@m& (0+255),w,b
  4716  0016FA  5DB9               	subwf	efgtoa@i& (0+255),w,b
  4717  0016FC  51BA               	movf	(efgtoa@i+1)& (0+255),w,b
  4718  0016FE  0A80               	xorlw	128
  4719  001700  6F8A               	movwf	??_efgtoa& (0+255),b
  4720  001702  51A2               	movf	(efgtoa@m+1)& (0+255),w,b
  4721  001704  0A80               	xorlw	128
  4722  001706  598A               	subwfb	??_efgtoa& (0+255),w,b
  4723  001708  A0D8               	btfss	status,0,c
  4724  00170A  EF89  F00B         	goto	u9301
  4725  00170E  EF8B  F00B         	goto	u9300
  4726  001712                     u9301:
  4727  001712  EF01  F00B         	goto	l8513
  4728  001716                     u9300:
  4729  001716                     
  4730                           ; BSR set to: 0
  4731                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  4732  001716  C0C3  F02A         	movff	efgtoa@u,___flmul@b
  4733  00171A  C0C4  F02B         	movff	efgtoa@u+1,___flmul@b+1
  4734  00171E  C0C5  F02C         	movff	efgtoa@u+2,___flmul@b+2
  4735  001722  C0C6  F02D         	movff	efgtoa@u+3,___flmul@b+3
  4736  001726  0E00               	movlw	0
  4737  001728  6E2E               	movwf	___flmul@a^0,c
  4738  00172A  0E00               	movlw	0
  4739  00172C  6E2F               	movwf	(___flmul@a+1)^0,c
  4740  00172E  0EA0               	movlw	160
  4741  001730  6E30               	movwf	(___flmul@a+2)^0,c
  4742  001732  0E40               	movlw	64
  4743  001734  6E31               	movwf	(___flmul@a+3)^0,c
  4744  001736  EC97  F013         	call	___flmul	;wreg free
  4745  00173A  C02A  F0B5         	movff	?___flmul,efgtoa@l
  4746  00173E  C02B  F0B6         	movff	?___flmul+1,efgtoa@l+1
  4747  001742  C02C  F0B7         	movff	?___flmul+2,efgtoa@l+2
  4748  001746  C02D  F0B8         	movff	?___flmul+3,efgtoa@l+3
  4749  00174A                     
  4750                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  4751  00174A  C0B1  F06D         	movff	efgtoa@h,___flge@ff1
  4752  00174E  C0B2  F06E         	movff	efgtoa@h+1,___flge@ff1+1
  4753  001752  C0B3  F06F         	movff	efgtoa@h+2,___flge@ff1+2
  4754  001756  C0B4  F070         	movff	efgtoa@h+3,___flge@ff1+3
  4755  00175A  C0B5  F071         	movff	efgtoa@l,___flge@ff2
  4756  00175E  C0B6  F072         	movff	efgtoa@l+1,___flge@ff2+1
  4757  001762  C0B7  F073         	movff	efgtoa@l+2,___flge@ff2+2
  4758  001766  C0B8  F074         	movff	efgtoa@l+3,___flge@ff2+3
  4759  00176A  EC6F  F023         	call	___flge	;wreg free
  4760  00176E  0100               	movlb	0	; () banked
  4761  001770  B0D8               	btfsc	status,0,c
  4762  001772  EFBD  F00B         	goto	u9311
  4763  001776  EFBF  F00B         	goto	u9310
  4764  00177A                     u9311:
  4765  00177A  EFC9  F00B         	goto	l8529
  4766  00177E                     u9310:
  4767  00177E                     
  4768                           ; BSR set to: 0
  4769                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  4770  00177E  0E00               	movlw	0
  4771  001780  6FB5               	movwf	efgtoa@l& (0+255),b
  4772  001782  0E00               	movlw	0
  4773  001784  6FB6               	movwf	(efgtoa@l+1)& (0+255),b
  4774  001786  0E00               	movlw	0
  4775  001788  6FB7               	movwf	(efgtoa@l+2)& (0+255),b
  4776  00178A  0E00               	movlw	0
  4777  00178C  6FB8               	movwf	(efgtoa@l+3)& (0+255),b
  4778                           
  4779                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  4780  00178E  EFF2  F00B         	goto	l8535
  4781  001792                     l8529:
  4782                           
  4783                           ; BSR set to: 0
  4784                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  4785  001792  C0B1  F014         	movff	efgtoa@h,___fleq@ff1
  4786  001796  C0B2  F015         	movff	efgtoa@h+1,___fleq@ff1+1
  4787  00179A  C0B3  F016         	movff	efgtoa@h+2,___fleq@ff1+2
  4788  00179E  C0B4  F017         	movff	efgtoa@h+3,___fleq@ff1+3
  4789  0017A2  C0B5  F018         	movff	efgtoa@l,___fleq@ff2
  4790  0017A6  C0B6  F019         	movff	efgtoa@l+1,___fleq@ff2+1
  4791  0017AA  C0B7  F01A         	movff	efgtoa@l+2,___fleq@ff2+2
  4792  0017AE  C0B8  F01B         	movff	efgtoa@l+3,___fleq@ff2+3
  4793  0017B2  EC3C  F027         	call	___fleq	;wreg free
  4794  0017B6  A0D8               	btfss	status,0,c
  4795  0017B8  EFE0  F00B         	goto	u9321
  4796  0017BC  EFE2  F00B         	goto	u9320
  4797  0017C0                     u9321:
  4798  0017C0  EFF2  F00B         	goto	l8535
  4799  0017C4                     u9320:
  4800  0017C4  0100               	movlb	0	; () banked
  4801  0017C6  B1A7               	btfsc	efgtoa@d& (0+255),0,b
  4802  0017C8  EFE8  F00B         	goto	u9331
  4803  0017CC  EFEA  F00B         	goto	u9330
  4804  0017D0                     u9331:
  4805  0017D0  EFF2  F00B         	goto	l8535
  4806  0017D4                     u9330:
  4807  0017D4                     
  4808                           ; BSR set to: 0
  4809                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  4810  0017D4  0E00               	movlw	0
  4811  0017D6  6FB5               	movwf	efgtoa@l& (0+255),b
  4812  0017D8  0E00               	movlw	0
  4813  0017DA  6FB6               	movwf	(efgtoa@l+1)& (0+255),b
  4814  0017DC  0E00               	movlw	0
  4815  0017DE  6FB7               	movwf	(efgtoa@l+2)& (0+255),b
  4816  0017E0  0E00               	movlw	0
  4817  0017E2  6FB8               	movwf	(efgtoa@l+3)& (0+255),b
  4818  0017E4                     l8535:
  4819                           
  4820                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  4821  0017E4  C0BB  F06D         	movff	efgtoa@g,___fladd@b
  4822  0017E8  C0BC  F06E         	movff	efgtoa@g+1,___fladd@b+1
  4823  0017EC  C0BD  F06F         	movff	efgtoa@g+2,___fladd@b+2
  4824  0017F0  C0BE  F070         	movff	efgtoa@g+3,___fladd@b+3
  4825  0017F4  C0B5  F071         	movff	efgtoa@l,___fladd@a
  4826  0017F8  C0B6  F072         	movff	efgtoa@l+1,___fladd@a+1
  4827  0017FC  C0B7  F073         	movff	efgtoa@l+2,___fladd@a+2
  4828  001800  C0B8  F074         	movff	efgtoa@l+3,___fladd@a+3
  4829  001804  EC36  F011         	call	___fladd	;wreg free
  4830  001808  C06D  F0B1         	movff	?___fladd,efgtoa@h
  4831  00180C  C06E  F0B2         	movff	?___fladd+1,efgtoa@h+1
  4832  001810  C06F  F0B3         	movff	?___fladd+2,efgtoa@h+2
  4833  001814  C070  F0B4         	movff	?___fladd+3,efgtoa@h+3
  4834  001818                     
  4835                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  4836  001818  C0B1  F06D         	movff	efgtoa@h,___flge@ff1
  4837  00181C  C0B2  F06E         	movff	efgtoa@h+1,___flge@ff1+1
  4838  001820  C0B3  F06F         	movff	efgtoa@h+2,___flge@ff1+2
  4839  001824  C0B4  F070         	movff	efgtoa@h+3,___flge@ff1+3
  4840  001828  0E00               	movlw	0
  4841  00182A  6E2E               	movwf	___flmul@a^0,c
  4842  00182C  0E00               	movlw	0
  4843  00182E  6E2F               	movwf	(___flmul@a+1)^0,c
  4844  001830  0E20               	movlw	32
  4845  001832  6E30               	movwf	(___flmul@a+2)^0,c
  4846  001834  0E41               	movlw	65
  4847  001836  6E31               	movwf	(___flmul@a+3)^0,c
  4848  001838  C0A3  F02A         	movff	efgtoa@ou,___flmul@b
  4849  00183C  C0A4  F02B         	movff	efgtoa@ou+1,___flmul@b+1
  4850  001840  C0A5  F02C         	movff	efgtoa@ou+2,___flmul@b+2
  4851  001844  C0A6  F02D         	movff	efgtoa@ou+3,___flmul@b+3
  4852  001848  EC97  F013         	call	___flmul	;wreg free
  4853  00184C  C02A  F071         	movff	?___flmul,___flge@ff2
  4854  001850  C02B  F072         	movff	?___flmul+1,___flge@ff2+1
  4855  001854  C02C  F073         	movff	?___flmul+2,___flge@ff2+2
  4856  001858  C02D  F074         	movff	?___flmul+3,___flge@ff2+3
  4857  00185C  EC6F  F023         	call	___flge	;wreg free
  4858  001860  0100               	movlb	0	; () banked
  4859  001862  A0D8               	btfss	status,0,c
  4860  001864  EF36  F00C         	goto	u9341
  4861  001868  EF38  F00C         	goto	u9340
  4862  00186C                     u9341:
  4863  00186C  EF60  F00C         	goto	l8547
  4864  001870                     u9340:
  4865  001870                     
  4866                           ; BSR set to: 0
  4867                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  4868  001870  4BBF               	infsnz	efgtoa@e& (0+255),f,b
  4869  001872  2BC0               	incf	(efgtoa@e+1)& (0+255),f,b
  4870  001874                     
  4871                           ; BSR set to: 0
  4872                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  4873  001874  C0A3  F02A         	movff	efgtoa@ou,___flmul@b
  4874  001878  C0A4  F02B         	movff	efgtoa@ou+1,___flmul@b+1
  4875  00187C  C0A5  F02C         	movff	efgtoa@ou+2,___flmul@b+2
  4876  001880  C0A6  F02D         	movff	efgtoa@ou+3,___flmul@b+3
  4877  001884  0E00               	movlw	0
  4878  001886  6E2E               	movwf	___flmul@a^0,c
  4879  001888  0E00               	movlw	0
  4880  00188A  6E2F               	movwf	(___flmul@a+1)^0,c
  4881  00188C  0E20               	movlw	32
  4882  00188E  6E30               	movwf	(___flmul@a+2)^0,c
  4883  001890  0E41               	movlw	65
  4884  001892  6E31               	movwf	(___flmul@a+3)^0,c
  4885  001894  EC97  F013         	call	___flmul	;wreg free
  4886  001898  C02A  F0A3         	movff	?___flmul,efgtoa@ou
  4887  00189C  C02B  F0A4         	movff	?___flmul+1,efgtoa@ou+1
  4888  0018A0  C02C  F0A5         	movff	?___flmul+2,efgtoa@ou+2
  4889  0018A4  C02D  F0A6         	movff	?___flmul+3,efgtoa@ou+3
  4890  0018A8                     
  4891                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  4892  0018A8  0E66               	movlw	102
  4893  0018AA  0100               	movlb	0	; () banked
  4894  0018AC  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  4895  0018AE  A4D8               	btfss	status,2,c
  4896  0018B0  EF5C  F00C         	goto	u9351
  4897  0018B4  EF5E  F00C         	goto	u9350
  4898  0018B8                     u9351:
  4899  0018B8  EF60  F00C         	goto	l8547
  4900  0018BC                     u9350:
  4901  0018BC                     
  4902                           ; BSR set to: 0
  4903                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  4904  0018BC  4BA1               	infsnz	efgtoa@m& (0+255),f,b
  4905  0018BE  2BA2               	incf	(efgtoa@m+1)& (0+255),f,b
  4906  0018C0                     l8547:
  4907                           
  4908                           ; BSR set to: 0
  4909                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  4910  0018C0  C0A3  F0C3         	movff	efgtoa@ou,efgtoa@u
  4911  0018C4  C0A4  F0C4         	movff	efgtoa@ou+1,efgtoa@u+1
  4912  0018C8  C0A5  F0C5         	movff	efgtoa@ou+2,efgtoa@u+2
  4913  0018CC  C0A6  F0C6         	movff	efgtoa@ou+3,efgtoa@u+3
  4914  0018D0                     
  4915                           ; BSR set to: 0
  4916                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  4917  0018D0  0E65               	movlw	101
  4918  0018D2  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  4919  0018D4  B4D8               	btfsc	status,2,c
  4920  0018D6  EF6F  F00C         	goto	u9361
  4921  0018DA  EF71  F00C         	goto	u9360
  4922  0018DE                     u9361:
  4923  0018DE  EF77  F00C         	goto	l8553
  4924  0018E2                     u9360:
  4925  0018E2                     
  4926                           ; BSR set to: 0
  4927  0018E2  C0BF  F09F         	movff	efgtoa@e,efgtoa@ne
  4928  0018E6  C0C0  F0A0         	movff	efgtoa@e+1,efgtoa@ne+1
  4929  0018EA  EF7B  F00C         	goto	l2217
  4930  0018EE                     l8553:
  4931                           
  4932                           ; BSR set to: 0
  4933  0018EE  0E00               	movlw	0
  4934  0018F0  6FA0               	movwf	(efgtoa@ne+1)& (0+255),b
  4935  0018F2  0E00               	movlw	0
  4936  0018F4  6F9F               	movwf	efgtoa@ne& (0+255),b
  4937  0018F6                     l2217:
  4938                           
  4939                           ; BSR set to: 0
  4940                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  4941  0018F6  0E00               	movlw	0
  4942  0018F8  6F9E               	movwf	(efgtoa@pp+1)& (0+255),b
  4943  0018FA  0E00               	movlw	0
  4944  0018FC  6F9D               	movwf	efgtoa@pp& (0+255),b
  4945                           
  4946                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  4947  0018FE  0E00               	movlw	0
  4948  001900  6F9C               	movwf	(efgtoa@t+1)& (0+255),b
  4949  001902  0E00               	movlw	0
  4950  001904  6F9B               	movwf	efgtoa@t& (0+255),b
  4951                           
  4952                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  4953  001906  0E00               	movlw	0
  4954  001908  6FBA               	movwf	(efgtoa@i+1)& (0+255),b
  4955  00190A  0E00               	movlw	0
  4956  00190C  6FB9               	movwf	efgtoa@i& (0+255),b
  4957                           
  4958                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4959  00190E  EF77  F00D         	goto	l8603
  4960  001912                     l8555:
  4961                           
  4962                           ; BSR set to: 0
  4963                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  4964  001912  C0B1  F02A         	movff	efgtoa@h,___fldiv@b
  4965  001916  C0B2  F02B         	movff	efgtoa@h+1,___fldiv@b+1
  4966  00191A  C0B3  F02C         	movff	efgtoa@h+2,___fldiv@b+2
  4967  00191E  C0B4  F02D         	movff	efgtoa@h+3,___fldiv@b+3
  4968  001922  C0C3  F02E         	movff	efgtoa@u,___fldiv@a
  4969  001926  C0C4  F02F         	movff	efgtoa@u+1,___fldiv@a+1
  4970  00192A  C0C5  F030         	movff	efgtoa@u+2,___fldiv@a+2
  4971  00192E  C0C6  F031         	movff	efgtoa@u+3,___fldiv@a+3
  4972  001932  ECBF  F015         	call	___fldiv	;wreg free
  4973  001936  C02A  F036         	movff	?___fldiv,floorf@x
  4974  00193A  C02B  F037         	movff	?___fldiv+1,floorf@x+1
  4975  00193E  C02C  F038         	movff	?___fldiv+2,floorf@x+2
  4976  001942  C02D  F039         	movff	?___fldiv+3,floorf@x+3
  4977  001946  EC74  F01A         	call	_floorf	;wreg free
  4978  00194A  C036  F0B5         	movff	?_floorf,efgtoa@l
  4979  00194E  C037  F0B6         	movff	?_floorf+1,efgtoa@l+1
  4980  001952  C038  F0B7         	movff	?_floorf+2,efgtoa@l+2
  4981  001956  C039  F0B8         	movff	?_floorf+3,efgtoa@l+3
  4982                           
  4983                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  4984  00195A  C0B5  F079         	movff	efgtoa@l,___fltol@f1
  4985  00195E  C0B6  F07A         	movff	efgtoa@l+1,___fltol@f1+1
  4986  001962  C0B7  F07B         	movff	efgtoa@l+2,___fltol@f1+2
  4987  001966  C0B8  F07C         	movff	efgtoa@l+3,___fltol@f1+3
  4988  00196A  ECEB  F022         	call	___fltol	;wreg free
  4989  00196E  C079  F0A7         	movff	?___fltol,efgtoa@d
  4990  001972  C07A  F0A8         	movff	?___fltol+1,efgtoa@d+1
  4991  001976                     
  4992                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  4993  001976  B83C               	btfsc	_flags^0,4,c
  4994  001978  EFC0  F00C         	goto	u9371
  4995  00197C  EFC2  F00C         	goto	u9370
  4996  001980                     u9371:
  4997  001980  EFE0  F00C         	goto	l8567
  4998  001984                     u9370:
  4999  001984  0100               	movlb	0	; () banked
  5000  001986  51A7               	movf	efgtoa@d& (0+255),w,b
  5001  001988  11A8               	iorwf	(efgtoa@d+1)& (0+255),w,b
  5002  00198A  A4D8               	btfss	status,2,c
  5003  00198C  EFCA  F00C         	goto	u9381
  5004  001990  EFCC  F00C         	goto	u9380
  5005  001994                     u9381:
  5006  001994  EFE0  F00C         	goto	l8567
  5007  001998                     u9380:
  5008  001998                     
  5009                           ; BSR set to: 0
  5010  001998  0E67               	movlw	103
  5011  00199A  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  5012  00199C  A4D8               	btfss	status,2,c
  5013  00199E  EFD3  F00C         	goto	u9391
  5014  0019A2  EFD5  F00C         	goto	u9390
  5015  0019A6                     u9391:
  5016  0019A6  EFE0  F00C         	goto	l8567
  5017  0019AA                     u9390:
  5018  0019AA                     
  5019                           ; BSR set to: 0
  5020  0019AA  BFA0               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5021  0019AC  EFDC  F00C         	goto	u9400
  5022  0019B0  EFDA  F00C         	goto	u9401
  5023  0019B4                     u9401:
  5024  0019B4  EFE0  F00C         	goto	l8567
  5025  0019B8                     u9400:
  5026  0019B8                     
  5027                           ; BSR set to: 0
  5028                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  5029  0019B8  4B9B               	infsnz	efgtoa@t& (0+255),f,b
  5030  0019BA  2B9C               	incf	(efgtoa@t+1)& (0+255),f,b
  5031                           
  5032                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  5033  0019BC  EF2B  F00D         	goto	l8595
  5034  0019C0                     l8567:
  5035                           
  5036                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  5037  0019C0  0100               	movlb	0	; () banked
  5038  0019C2  519D               	movf	efgtoa@pp& (0+255),w,b
  5039  0019C4  119E               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5040  0019C6  A4D8               	btfss	status,2,c
  5041  0019C8  EFE8  F00C         	goto	u9411
  5042  0019CC  EFEA  F00C         	goto	u9410
  5043  0019D0                     u9411:
  5044  0019D0  EF14  F00D         	goto	l8587
  5045  0019D4                     u9410:
  5046  0019D4                     
  5047                           ; BSR set to: 0
  5048  0019D4  BFA0               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5049  0019D6  EFF1  F00C         	goto	u9420
  5050  0019DA  EFEF  F00C         	goto	u9421
  5051  0019DE                     u9421:
  5052  0019DE  EF14  F00D         	goto	l8587
  5053  0019E2                     u9420:
  5054  0019E2                     
  5055                           ; BSR set to: 0
  5056                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  5057  0019E2  0E3A               	movlw	low _dbuf
  5058  0019E4  25C1               	addwf	efgtoa@n& (0+255),w,b
  5059  0019E6  6ED9               	movwf	fsr2l,c
  5060  0019E8  0E01               	movlw	high _dbuf
  5061  0019EA  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5062  0019EC  6EDA               	movwf	fsr2h,c
  5063  0019EE  0E2E               	movlw	46
  5064  0019F0  6EDF               	movwf	indf2,c
  5065  0019F2                     
  5066                           ; BSR set to: 0
  5067  0019F2  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  5068  0019F4  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  5069  0019F6                     
  5070                           ; BSR set to: 0
  5071                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  5072  0019F6  07AD               	decf	efgtoa@w& (0+255),f,b
  5073  0019F8  A0D8               	btfss	status,0,c
  5074  0019FA  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  5075  0019FC                     
  5076                           ; BSR set to: 0
  5077                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  5078  0019FC  0E00               	movlw	0
  5079  0019FE  6F9E               	movwf	(efgtoa@pp+1)& (0+255),b
  5080  001A00  0E01               	movlw	1
  5081  001A02  6F9D               	movwf	efgtoa@pp& (0+255),b
  5082  001A04  EF14  F00D         	goto	l8587
  5083  001A08                     l8579:
  5084                           
  5085                           ; BSR set to: 0
  5086                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  5087  001A08  0E3A               	movlw	low _dbuf
  5088  001A0A  25C1               	addwf	efgtoa@n& (0+255),w,b
  5089  001A0C  6ED9               	movwf	fsr2l,c
  5090  001A0E  0E01               	movlw	high _dbuf
  5091  001A10  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5092  001A12  6EDA               	movwf	fsr2h,c
  5093  001A14  0E30               	movlw	48
  5094  001A16  6EDF               	movwf	indf2,c
  5095  001A18                     
  5096                           ; BSR set to: 0
  5097  001A18  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  5098  001A1A  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  5099  001A1C                     
  5100                           ; BSR set to: 0
  5101                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  5102  001A1C  07AD               	decf	efgtoa@w& (0+255),f,b
  5103  001A1E  A0D8               	btfss	status,0,c
  5104  001A20  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  5105  001A22                     
  5106                           ; BSR set to: 0
  5107                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  5108  001A22  079B               	decf	efgtoa@t& (0+255),f,b
  5109  001A24  A0D8               	btfss	status,0,c
  5110  001A26  079C               	decf	(efgtoa@t+1)& (0+255),f,b
  5111  001A28                     l8587:
  5112                           
  5113                           ; BSR set to: 0
  5114                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  5115  001A28  519B               	movf	efgtoa@t& (0+255),w,b
  5116  001A2A  119C               	iorwf	(efgtoa@t+1)& (0+255),w,b
  5117  001A2C  A4D8               	btfss	status,2,c
  5118  001A2E  EF1B  F00D         	goto	u9431
  5119  001A32  EF1D  F00D         	goto	u9430
  5120  001A36                     u9431:
  5121  001A36  EF04  F00D         	goto	l8579
  5122  001A3A                     u9430:
  5123  001A3A                     
  5124                           ; BSR set to: 0
  5125                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  5126  001A3A  0E3A               	movlw	low _dbuf
  5127  001A3C  25C1               	addwf	efgtoa@n& (0+255),w,b
  5128  001A3E  6ED9               	movwf	fsr2l,c
  5129  001A40  0E01               	movlw	high _dbuf
  5130  001A42  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5131  001A44  6EDA               	movwf	fsr2h,c
  5132  001A46  51A7               	movf	efgtoa@d& (0+255),w,b
  5133  001A48  0F30               	addlw	48
  5134  001A4A  6EDF               	movwf	indf2,c
  5135  001A4C                     
  5136                           ; BSR set to: 0
  5137  001A4C  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  5138  001A4E  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  5139  001A50                     
  5140                           ; BSR set to: 0
  5141                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  5142  001A50  07AD               	decf	efgtoa@w& (0+255),f,b
  5143  001A52  A0D8               	btfss	status,0,c
  5144  001A54  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  5145  001A56                     l8595:
  5146                           
  5147                           ; BSR set to: 0
  5148                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  5149  001A56  C0B1  F079         	movff	efgtoa@h,___flsub@b
  5150  001A5A  C0B2  F07A         	movff	efgtoa@h+1,___flsub@b+1
  5151  001A5E  C0B3  F07B         	movff	efgtoa@h+2,___flsub@b+2
  5152  001A62  C0B4  F07C         	movff	efgtoa@h+3,___flsub@b+3
  5153  001A66  C0C3  F02E         	movff	efgtoa@u,___flmul@a
  5154  001A6A  C0C4  F02F         	movff	efgtoa@u+1,___flmul@a+1
  5155  001A6E  C0C5  F030         	movff	efgtoa@u+2,___flmul@a+2
  5156  001A72  C0C6  F031         	movff	efgtoa@u+3,___flmul@a+3
  5157  001A76  C0B5  F02A         	movff	efgtoa@l,___flmul@b
  5158  001A7A  C0B6  F02B         	movff	efgtoa@l+1,___flmul@b+1
  5159  001A7E  C0B7  F02C         	movff	efgtoa@l+2,___flmul@b+2
  5160  001A82  C0B8  F02D         	movff	efgtoa@l+3,___flmul@b+3
  5161  001A86  EC97  F013         	call	___flmul	;wreg free
  5162  001A8A  C02A  F07D         	movff	?___flmul,___flsub@a
  5163  001A8E  C02B  F07E         	movff	?___flmul+1,___flsub@a+1
  5164  001A92  C02C  F07F         	movff	?___flmul+2,___flsub@a+2
  5165  001A96  C02D  F080         	movff	?___flmul+3,___flsub@a+3
  5166  001A9A  ECB3  F02A         	call	___flsub	;wreg free
  5167  001A9E  C079  F0B1         	movff	?___flsub,efgtoa@h
  5168  001AA2  C07A  F0B2         	movff	?___flsub+1,efgtoa@h+1
  5169  001AA6  C07B  F0B3         	movff	?___flsub+2,efgtoa@h+2
  5170  001AAA  C07C  F0B4         	movff	?___flsub+3,efgtoa@h+3
  5171  001AAE                     
  5172                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  5173  001AAE  C0C3  F02A         	movff	efgtoa@u,___fldiv@b
  5174  001AB2  C0C4  F02B         	movff	efgtoa@u+1,___fldiv@b+1
  5175  001AB6  C0C5  F02C         	movff	efgtoa@u+2,___fldiv@b+2
  5176  001ABA  C0C6  F02D         	movff	efgtoa@u+3,___fldiv@b+3
  5177  001ABE  0E00               	movlw	0
  5178  001AC0  6E2E               	movwf	___fldiv@a^0,c
  5179  001AC2  0E00               	movlw	0
  5180  001AC4  6E2F               	movwf	(___fldiv@a+1)^0,c
  5181  001AC6  0E20               	movlw	32
  5182  001AC8  6E30               	movwf	(___fldiv@a+2)^0,c
  5183  001ACA  0E41               	movlw	65
  5184  001ACC  6E31               	movwf	(___fldiv@a+3)^0,c
  5185  001ACE  ECBF  F015         	call	___fldiv	;wreg free
  5186  001AD2  C02A  F0C3         	movff	?___fldiv,efgtoa@u
  5187  001AD6  C02B  F0C4         	movff	?___fldiv+1,efgtoa@u+1
  5188  001ADA  C02C  F0C5         	movff	?___fldiv+2,efgtoa@u+2
  5189  001ADE  C02D  F0C6         	movff	?___fldiv+3,efgtoa@u+3
  5190  001AE2                     
  5191                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  5192  001AE2  0100               	movlb	0	; () banked
  5193  001AE4  079F               	decf	efgtoa@ne& (0+255),f,b
  5194  001AE6  A0D8               	btfss	status,0,c
  5195  001AE8  07A0               	decf	(efgtoa@ne+1)& (0+255),f,b
  5196  001AEA                     
  5197                           ; BSR set to: 0
  5198                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  5199  001AEA  4BB9               	infsnz	efgtoa@i& (0+255),f,b
  5200  001AEC  2BBA               	incf	(efgtoa@i+1)& (0+255),f,b
  5201  001AEE                     l8603:
  5202                           
  5203                           ; BSR set to: 0
  5204                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5205  001AEE  51A1               	movf	efgtoa@m& (0+255),w,b
  5206  001AF0  5DB9               	subwf	efgtoa@i& (0+255),w,b
  5207  001AF2  51BA               	movf	(efgtoa@i+1)& (0+255),w,b
  5208  001AF4  0A80               	xorlw	128
  5209  001AF6  6F8A               	movwf	??_efgtoa& (0+255),b
  5210  001AF8  51A2               	movf	(efgtoa@m+1)& (0+255),w,b
  5211  001AFA  0A80               	xorlw	128
  5212  001AFC  598A               	subwfb	??_efgtoa& (0+255),w,b
  5213  001AFE  B0D8               	btfsc	status,0,c
  5214  001B00  EF84  F00D         	goto	u9441
  5215  001B04  EF86  F00D         	goto	u9440
  5216  001B08                     u9441:
  5217  001B08  EF94  F00D         	goto	l8607
  5218  001B0C                     u9440:
  5219  001B0C                     
  5220                           ; BSR set to: 0
  5221  001B0C  BFC2               	btfsc	(efgtoa@n+1)& (0+255),7,b
  5222  001B0E  EF92  F00D         	goto	u9451
  5223  001B12  51C2               	movf	(efgtoa@n+1)& (0+255),w,b
  5224  001B14  E109               	bnz	u9450
  5225  001B16  0E4B               	movlw	75
  5226  001B18  5DC1               	subwf	efgtoa@n& (0+255),w,b
  5227  001B1A  A0D8               	btfss	status,0,c
  5228  001B1C  EF92  F00D         	goto	u9451
  5229  001B20  EF94  F00D         	goto	u9450
  5230  001B24                     u9451:
  5231  001B24  EF89  F00C         	goto	l8555
  5232  001B28                     u9450:
  5233  001B28                     l8607:
  5234                           
  5235                           ; BSR set to: 0
  5236                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  5237  001B28  519D               	movf	efgtoa@pp& (0+255),w,b
  5238  001B2A  119E               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5239  001B2C  A4D8               	btfss	status,2,c
  5240  001B2E  EF9B  F00D         	goto	u9461
  5241  001B32  EF9D  F00D         	goto	u9460
  5242  001B36                     u9461:
  5243  001B36  EFAE  F00D         	goto	l8615
  5244  001B3A                     u9460:
  5245  001B3A                     
  5246                           ; BSR set to: 0
  5247  001B3A  A83C               	btfss	_flags^0,4,c
  5248  001B3C  EFA2  F00D         	goto	u9471
  5249  001B40  EFA4  F00D         	goto	u9470
  5250  001B44                     u9471:
  5251  001B44  EFAE  F00D         	goto	l8615
  5252  001B48                     u9470:
  5253  001B48                     
  5254                           ; BSR set to: 0
  5255                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  5256  001B48  0E3A               	movlw	low _dbuf
  5257  001B4A  25C1               	addwf	efgtoa@n& (0+255),w,b
  5258  001B4C  6ED9               	movwf	fsr2l,c
  5259  001B4E  0E01               	movlw	high _dbuf
  5260  001B50  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5261  001B52  6EDA               	movwf	fsr2h,c
  5262  001B54  0E2E               	movlw	46
  5263  001B56  6EDF               	movwf	indf2,c
  5264  001B58                     
  5265                           ; BSR set to: 0
  5266  001B58  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  5267  001B5A  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  5268  001B5C                     l8615:
  5269                           
  5270                           ; BSR set to: 0
  5271                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  5272  001B5C  0E3A               	movlw	low _dbuf
  5273  001B5E  25C1               	addwf	efgtoa@n& (0+255),w,b
  5274  001B60  6ED9               	movwf	fsr2l,c
  5275  001B62  0E01               	movlw	high _dbuf
  5276  001B64  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5277  001B66  6EDA               	movwf	fsr2h,c
  5278  001B68  0E00               	movlw	0
  5279  001B6A  6EDF               	movwf	indf2,c
  5280  001B6C                     
  5281                           ; BSR set to: 0
  5282                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  5283  001B6C  0E65               	movlw	101
  5284  001B6E  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  5285  001B70  A4D8               	btfss	status,2,c
  5286  001B72  EFBD  F00D         	goto	u9481
  5287  001B76  EFBF  F00D         	goto	u9480
  5288  001B7A                     u9481:
  5289  001B7A  EF91  F00E         	goto	l8677
  5290  001B7E                     u9480:
  5291  001B7E                     
  5292                           ; BSR set to: 0
  5293                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  5294  001B7E  0E00               	movlw	0
  5295  001B80  6FBA               	movwf	(efgtoa@i+1)& (0+255),b
  5296  001B82  0E4F               	movlw	79
  5297  001B84  6FB9               	movwf	efgtoa@i& (0+255),b
  5298  001B86                     
  5299                           ; BSR set to: 0
  5300                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  5301  001B86  0E3A               	movlw	low _dbuf
  5302  001B88  25B9               	addwf	efgtoa@i& (0+255),w,b
  5303  001B8A  6ED9               	movwf	fsr2l,c
  5304  001B8C  0E01               	movlw	high _dbuf
  5305  001B8E  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5306  001B90  6EDA               	movwf	fsr2h,c
  5307  001B92  0E00               	movlw	0
  5308  001B94  6EDF               	movwf	indf2,c
  5309  001B96                     
  5310                           ; BSR set to: 0
  5311                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  5312  001B96  0E00               	movlw	0
  5313  001B98  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  5314  001B9A  0E00               	movlw	0
  5315  001B9C  6FA9               	movwf	efgtoa@sign& (0+255),b
  5316  001B9E                     
  5317                           ; BSR set to: 0
  5318                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  5319  001B9E  BFC0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5320  001BA0  EFD6  F00D         	goto	u9490
  5321  001BA4  EFD4  F00D         	goto	u9491
  5322  001BA8                     u9491:
  5323  001BA8  EFDE  F00D         	goto	l8631
  5324  001BAC                     u9490:
  5325  001BAC                     
  5326                           ; BSR set to: 0
  5327                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  5328  001BAC  0E00               	movlw	0
  5329  001BAE  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  5330  001BB0  0E01               	movlw	1
  5331  001BB2  6FA9               	movwf	efgtoa@sign& (0+255),b
  5332  001BB4                     
  5333                           ; BSR set to: 0
  5334                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  5335  001BB4  6DBF               	negf	efgtoa@e& (0+255),b
  5336  001BB6  1FC0               	comf	(efgtoa@e+1)& (0+255),f,b
  5337  001BB8  B0D8               	btfsc	status,0,c
  5338  001BBA  2BC0               	incf	(efgtoa@e+1)& (0+255),f,b
  5339  001BBC                     l8631:
  5340                           
  5341                           ; BSR set to: 0
  5342                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  5343  001BBC  0E00               	movlw	0
  5344  001BBE  6FAC               	movwf	(efgtoa@p+1)& (0+255),b
  5345  001BC0  0E02               	movlw	2
  5346  001BC2  6FAB               	movwf	efgtoa@p& (0+255),b
  5347                           
  5348                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  5349  001BC4  EF0F  F00E         	goto	l8643
  5350  001BC8                     l8633:
  5351                           
  5352                           ; BSR set to: 0
  5353                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  5354  001BC8  07B9               	decf	efgtoa@i& (0+255),f,b
  5355  001BCA  A0D8               	btfss	status,0,c
  5356  001BCC  07BA               	decf	(efgtoa@i+1)& (0+255),f,b
  5357  001BCE                     
  5358                           ; BSR set to: 0
  5359                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  5360  001BCE  0E3A               	movlw	low _dbuf
  5361  001BD0  25B9               	addwf	efgtoa@i& (0+255),w,b
  5362  001BD2  6ED9               	movwf	fsr2l,c
  5363  001BD4  0E01               	movlw	high _dbuf
  5364  001BD6  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5365  001BD8  6EDA               	movwf	fsr2h,c
  5366  001BDA  C0BF  F014         	movff	efgtoa@e,___awmod@dividend
  5367  001BDE  C0C0  F015         	movff	efgtoa@e+1,___awmod@dividend+1
  5368  001BE2  0E00               	movlw	0
  5369  001BE4  6E17               	movwf	(___awmod@divisor+1)^0,c
  5370  001BE6  0E0A               	movlw	10
  5371  001BE8  6E16               	movwf	___awmod@divisor^0,c
  5372  001BEA  ECE4  F026         	call	___awmod	;wreg free
  5373  001BEE  5014               	movf	?___awmod^0,w,c
  5374  001BF0  0F30               	addlw	48
  5375  001BF2  6EDF               	movwf	indf2,c
  5376  001BF4                     
  5377                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  5378  001BF4  C0BF  F014         	movff	efgtoa@e,___awdiv@dividend
  5379  001BF8  C0C0  F015         	movff	efgtoa@e+1,___awdiv@dividend+1
  5380  001BFC  0E00               	movlw	0
  5381  001BFE  6E17               	movwf	(___awdiv@divisor+1)^0,c
  5382  001C00  0E0A               	movlw	10
  5383  001C02  6E16               	movwf	___awdiv@divisor^0,c
  5384  001C04  ECC1  F025         	call	___awdiv	;wreg free
  5385  001C08  C014  F0BF         	movff	?___awdiv,efgtoa@e
  5386  001C0C  C015  F0C0         	movff	?___awdiv+1,efgtoa@e+1
  5387  001C10                     
  5388                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  5389  001C10  0100               	movlb	0	; () banked
  5390  001C12  07AB               	decf	efgtoa@p& (0+255),f,b
  5391  001C14  A0D8               	btfss	status,0,c
  5392  001C16  07AC               	decf	(efgtoa@p+1)& (0+255),f,b
  5393  001C18                     
  5394                           ; BSR set to: 0
  5395                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  5396  001C18  07AD               	decf	efgtoa@w& (0+255),f,b
  5397  001C1A  A0D8               	btfss	status,0,c
  5398  001C1C  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  5399  001C1E                     l8643:
  5400                           
  5401                           ; BSR set to: 0
  5402                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  5403  001C1E  51BF               	movf	efgtoa@e& (0+255),w,b
  5404  001C20  11C0               	iorwf	(efgtoa@e+1)& (0+255),w,b
  5405  001C22  A4D8               	btfss	status,2,c
  5406  001C24  EF16  F00E         	goto	u9501
  5407  001C28  EF18  F00E         	goto	u9500
  5408  001C2C                     u9501:
  5409  001C2C  EFE4  F00D         	goto	l8633
  5410  001C30                     u9500:
  5411  001C30                     
  5412                           ; BSR set to: 0
  5413  001C30  BFAC               	btfsc	(efgtoa@p+1)& (0+255),7,b
  5414  001C32  EF25  F00E         	goto	u9510
  5415  001C36  51AC               	movf	(efgtoa@p+1)& (0+255),w,b
  5416  001C38  E106               	bnz	u9511
  5417  001C3A  05AB               	decf	efgtoa@p& (0+255),w,b
  5418  001C3C  B0D8               	btfsc	status,0,c
  5419  001C3E  EF23  F00E         	goto	u9511
  5420  001C42  EF25  F00E         	goto	u9510
  5421  001C46                     u9511:
  5422  001C46  EFE4  F00D         	goto	l8633
  5423  001C4A                     u9510:
  5424  001C4A                     
  5425                           ; BSR set to: 0
  5426                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  5427  001C4A  07B9               	decf	efgtoa@i& (0+255),f,b
  5428  001C4C  A0D8               	btfss	status,0,c
  5429  001C4E  07BA               	decf	(efgtoa@i+1)& (0+255),f,b
  5430  001C50                     
  5431                           ; BSR set to: 0
  5432                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  5433  001C50  51A9               	movf	efgtoa@sign& (0+255),w,b
  5434  001C52  11AA               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5435  001C54  A4D8               	btfss	status,2,c
  5436  001C56  EF2F  F00E         	goto	u9521
  5437  001C5A  EF31  F00E         	goto	u9520
  5438  001C5E                     u9521:
  5439  001C5E  EF37  F00E         	goto	l8653
  5440  001C62                     u9520:
  5441  001C62                     
  5442                           ; BSR set to: 0
  5443  001C62  0E00               	movlw	0
  5444  001C64  6F96               	movwf	(_efgtoa$3568+1)& (0+255),b
  5445  001C66  0E2B               	movlw	43
  5446  001C68  6F95               	movwf	_efgtoa$3568& (0+255),b
  5447  001C6A  EF3B  F00E         	goto	l8655
  5448  001C6E                     l8653:
  5449                           
  5450                           ; BSR set to: 0
  5451  001C6E  0E00               	movlw	0
  5452  001C70  6F96               	movwf	(_efgtoa$3568+1)& (0+255),b
  5453  001C72  0E2D               	movlw	45
  5454  001C74  6F95               	movwf	_efgtoa$3568& (0+255),b
  5455  001C76                     l8655:
  5456                           
  5457                           ; BSR set to: 0
  5458  001C76  0E3A               	movlw	low _dbuf
  5459  001C78  25B9               	addwf	efgtoa@i& (0+255),w,b
  5460  001C7A  6ED9               	movwf	fsr2l,c
  5461  001C7C  0E01               	movlw	high _dbuf
  5462  001C7E  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5463  001C80  6EDA               	movwf	fsr2h,c
  5464  001C82  0060  F257  FFDF   	movff	_efgtoa$3568,indf2
  5465  001C88                     
  5466                           ; BSR set to: 0
  5467                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  5468  001C88  07AD               	decf	efgtoa@w& (0+255),f,b
  5469  001C8A  A0D8               	btfss	status,0,c
  5470  001C8C  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  5471  001C8E                     
  5472                           ; BSR set to: 0
  5473                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  5474  001C8E  07B9               	decf	efgtoa@i& (0+255),f,b
  5475  001C90  A0D8               	btfss	status,0,c
  5476  001C92  07BA               	decf	(efgtoa@i+1)& (0+255),f,b
  5477  001C94                     
  5478                           ; BSR set to: 0
  5479  001C94  0EBF               	movlw	191
  5480  001C96  6F8A               	movwf	??_efgtoa& (0+255),b
  5481  001C98  0EFF               	movlw	255
  5482  001C9A  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  5483  001C9C  5189               	movf	efgtoa@c& (0+255),w,b
  5484  001C9E  6F8C               	movwf	(??_efgtoa+2)& (0+255),b
  5485  001CA0  6B8D               	clrf	(??_efgtoa+3)& (0+255),b
  5486  001CA2  518A               	movf	??_efgtoa& (0+255),w,b
  5487  001CA4  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  5488  001CA6  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  5489  001CA8  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5490  001CAA  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  5491  001CAC  E10A               	bnz	u9530
  5492  001CAE  0E1A               	movlw	26
  5493  001CB0  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  5494  001CB2  A0D8               	btfss	status,0,c
  5495  001CB4  EF5E  F00E         	goto	u9531
  5496  001CB8  EF61  F00E         	goto	u9530
  5497  001CBC                     u9531:
  5498  001CBC  0E01               	movlw	1
  5499  001CBE  EF62  F00E         	goto	u9540
  5500  001CC2                     u9530:
  5501  001CC2  0E00               	movlw	0
  5502  001CC4                     u9540:
  5503  001CC4  6F99               	movwf	_efgtoa$3570& (0+255),b
  5504  001CC6  6B9A               	clrf	(_efgtoa$3570+1)& (0+255),b
  5505  001CC8                     
  5506                           ; BSR set to: 0
  5507  001CC8  5199               	movf	_efgtoa$3570& (0+255),w,b
  5508  001CCA  119A               	iorwf	(_efgtoa$3570+1)& (0+255),w,b
  5509  001CCC  A4D8               	btfss	status,2,c
  5510  001CCE  EF6B  F00E         	goto	u9551
  5511  001CD2  EF6D  F00E         	goto	u9550
  5512  001CD6                     u9551:
  5513  001CD6  EF73  F00E         	goto	l8669
  5514  001CDA                     u9550:
  5515  001CDA                     
  5516                           ; BSR set to: 0
  5517  001CDA  0E00               	movlw	0
  5518  001CDC  6F98               	movwf	(_efgtoa$3569+1)& (0+255),b
  5519  001CDE  0E65               	movlw	101
  5520  001CE0  6F97               	movwf	_efgtoa$3569& (0+255),b
  5521  001CE2  EF77  F00E         	goto	l8671
  5522  001CE6                     l8669:
  5523                           
  5524                           ; BSR set to: 0
  5525  001CE6  0E00               	movlw	0
  5526  001CE8  6F98               	movwf	(_efgtoa$3569+1)& (0+255),b
  5527  001CEA  0E45               	movlw	69
  5528  001CEC  6F97               	movwf	_efgtoa$3569& (0+255),b
  5529  001CEE                     l8671:
  5530                           
  5531                           ; BSR set to: 0
  5532  001CEE  0E3A               	movlw	low _dbuf
  5533  001CF0  25B9               	addwf	efgtoa@i& (0+255),w,b
  5534  001CF2  6ED9               	movwf	fsr2l,c
  5535  001CF4  0E01               	movlw	high _dbuf
  5536  001CF6  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5537  001CF8  6EDA               	movwf	fsr2h,c
  5538  001CFA  0060  F25F  FFDF   	movff	_efgtoa$3569,indf2
  5539  001D00                     
  5540                           ; BSR set to: 0
  5541                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  5542  001D00  07AD               	decf	efgtoa@w& (0+255),f,b
  5543  001D02  A0D8               	btfss	status,0,c
  5544  001D04  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  5545  001D06                     
  5546                           ; BSR set to: 0
  5547                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  5548  001D06  0E3A               	movlw	low _dbuf
  5549  001D08  25C1               	addwf	efgtoa@n& (0+255),w,b
  5550  001D0A  6E14               	movwf	strcpy@dest^0,c
  5551  001D0C  0E01               	movlw	high _dbuf
  5552  001D0E  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5553  001D10  6E15               	movwf	(strcpy@dest+1)^0,c
  5554  001D12  0E3A               	movlw	low _dbuf
  5555  001D14  25B9               	addwf	efgtoa@i& (0+255),w,b
  5556  001D16  6E16               	movwf	strcpy@src^0,c
  5557  001D18  0E01               	movlw	high _dbuf
  5558  001D1A  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5559  001D1C  6E17               	movwf	(strcpy@src+1)^0,c
  5560  001D1E  EC33  F029         	call	_strcpy	;wreg free
  5561  001D22                     l8677:
  5562                           
  5563                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 524:     return p
      +                          ad(fp, &dbuf[0], w);
  5564  001D22  C083  F026         	movff	efgtoa@fp,pad@fp
  5565  001D26  C084  F027         	movff	efgtoa@fp+1,pad@fp+1
  5566  001D2A  0E3A               	movlw	low _dbuf
  5567  001D2C  6E28               	movwf	pad@buf^0,c
  5568  001D2E  0E01               	movlw	high _dbuf
  5569  001D30  6E29               	movwf	(pad@buf+1)^0,c
  5570  001D32  C0AD  F02A         	movff	efgtoa@w,pad@p
  5571  001D36  C0AE  F02B         	movff	efgtoa@w+1,pad@p+1
  5572  001D3A  EC23  F026         	call	_pad	;wreg free
  5573  001D3E  C026  F083         	movff	?_pad,?_efgtoa
  5574  001D42  C027  F084         	movff	?_pad+1,?_efgtoa+1
  5575  001D46                     l2171:
  5576  001D46  0012               	return		;funcret
  5577  001D48                     __end_of_efgtoa:
  5578                           	callstack 0
  5579                           
  5580 ;; *************** function _tolower *****************
  5581 ;; Defined at:
  5582 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  5583 ;; Parameters:    Size  Location     Type
  5584 ;;  c               2   25[COMRAM] int 
  5585 ;; Auto vars:     Size  Location     Type
  5586 ;;		None
  5587 ;; Return value:  Size  Location     Type
  5588 ;;                  2   25[COMRAM] int 
  5589 ;; Registers used:
  5590 ;;		wreg, status,2, status,0
  5591 ;; Tracked objects:
  5592 ;;		On entry : 0/0
  5593 ;;		On exit  : 0/0
  5594 ;;		Unchanged: 0/0
  5595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5596 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5597 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5598 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5599 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5600 ;;Total ram usage:        8 bytes
  5601 ;; Hardware stack levels used: 1
  5602 ;; Hardware stack levels required when called: 9
  5603 ;; This function calls:
  5604 ;;		_isupper
  5605 ;; This function is called by:
  5606 ;;		_efgtoa
  5607 ;;		_vfpfcnvrt
  5608 ;; This function uses a non-reentrant model
  5609 ;;
  5610                           
  5611                           	psect	text11
  5612  0052D0                     __ptext11:
  5613                           	callstack 0
  5614  0052D0                     _tolower:
  5615                           	callstack 16
  5616  0052D0  0EBF               	movlw	191
  5617  0052D2  6E1C               	movwf	??_tolower^0,c
  5618  0052D4  0EFF               	movlw	255
  5619  0052D6  6E1D               	movwf	(??_tolower+1)^0,c
  5620  0052D8  C01A  F01E         	movff	tolower@c,??_tolower+2
  5621  0052DC  C01B  F01F         	movff	tolower@c+1,??_tolower+3
  5622  0052E0  501C               	movf	??_tolower^0,w,c
  5623  0052E2  261E               	addwf	(??_tolower+2)^0,f,c
  5624  0052E4  501D               	movf	(??_tolower+1)^0,w,c
  5625  0052E6  221F               	addwfc	(??_tolower+3)^0,f,c
  5626  0052E8  501F               	movf	(??_tolower+3)^0,w,c
  5627  0052EA  E10A               	bnz	u8740
  5628  0052EC  0E1A               	movlw	26
  5629  0052EE  5C1E               	subwf	(??_tolower+2)^0,w,c
  5630  0052F0  A0D8               	btfss	status,0,c
  5631  0052F2  EF7D  F029         	goto	u8741
  5632  0052F6  EF80  F029         	goto	u8740
  5633  0052FA                     u8741:
  5634  0052FA  0E01               	movlw	1
  5635  0052FC  EF81  F029         	goto	u8750
  5636  005300                     u8740:
  5637  005300  0E00               	movlw	0
  5638  005302                     u8750:
  5639  005302  6E20               	movwf	_tolower$3681^0,c
  5640  005304  6A21               	clrf	(_tolower$3681+1)^0,c
  5641  005306  5020               	movf	_tolower$3681^0,w,c
  5642  005308  1021               	iorwf	(_tolower$3681+1)^0,w,c
  5643  00530A  B4D8               	btfsc	status,2,c
  5644  00530C  EF8A  F029         	goto	u8761
  5645  005310  EF8C  F029         	goto	u8760
  5646  005314                     u8761:
  5647  005314  EF93  F029         	goto	l2353
  5648  005318                     u8760:
  5649  005318  0E20               	movlw	32
  5650  00531A  101A               	iorwf	tolower@c^0,w,c
  5651  00531C  6E1A               	movwf	?_tolower^0,c
  5652  00531E  501B               	movf	(tolower@c+1)^0,w,c
  5653  005320  6E1B               	movwf	(?_tolower+1)^0,c
  5654  005322  EF97  F029         	goto	l2358
  5655  005326                     l2353:
  5656  005326  C01A  F01A         	movff	tolower@c,?_tolower
  5657  00532A  C01B  F01B         	movff	tolower@c+1,?_tolower+1
  5658  00532E                     l2358:
  5659  00532E  0012               	return		;funcret
  5660  005330                     __end_of_tolower:
  5661                           	callstack 0
  5662                           
  5663 ;; *************** function _isupper *****************
  5664 ;; Defined at:
  5665 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  5666 ;; Parameters:    Size  Location     Type
  5667 ;;  c               2   19[COMRAM] int 
  5668 ;; Auto vars:     Size  Location     Type
  5669 ;;		None
  5670 ;; Return value:  Size  Location     Type
  5671 ;;                  2   19[COMRAM] int 
  5672 ;; Registers used:
  5673 ;;		wreg, status,2, status,0
  5674 ;; Tracked objects:
  5675 ;;		On entry : 0/0
  5676 ;;		On exit  : 0/0
  5677 ;;		Unchanged: 0/0
  5678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5679 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5681 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5682 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5683 ;;Total ram usage:        6 bytes
  5684 ;; Hardware stack levels used: 1
  5685 ;; Hardware stack levels required when called: 8
  5686 ;; This function calls:
  5687 ;;		Nothing
  5688 ;; This function is called by:
  5689 ;;		_efgtoa
  5690 ;;		_vfpfcnvrt
  5691 ;;		_tolower
  5692 ;; This function uses a non-reentrant model
  5693 ;;
  5694                           
  5695                           	psect	text12
  5696  005726                     __ptext12:
  5697                           	callstack 0
  5698  005726                     _isupper:
  5699                           	callstack 16
  5700  005726  0EBF               	movlw	191
  5701  005728  6E16               	movwf	??_isupper^0,c
  5702  00572A  0EFF               	movlw	255
  5703  00572C  6E17               	movwf	(??_isupper+1)^0,c
  5704  00572E  C014  F018         	movff	isupper@c,??_isupper+2
  5705  005732  C015  F019         	movff	isupper@c+1,??_isupper+3
  5706  005736  5016               	movf	??_isupper^0,w,c
  5707  005738  2618               	addwf	(??_isupper+2)^0,f,c
  5708  00573A  5017               	movf	(??_isupper+1)^0,w,c
  5709  00573C  2219               	addwfc	(??_isupper+3)^0,f,c
  5710  00573E  5019               	movf	(??_isupper+3)^0,w,c
  5711  005740  E10A               	bnz	u7750
  5712  005742  0E1A               	movlw	26
  5713  005744  5C18               	subwf	(??_isupper+2)^0,w,c
  5714  005746  A0D8               	btfss	status,0,c
  5715  005748  EFA8  F02B         	goto	u7751
  5716  00574C  EFAB  F02B         	goto	u7750
  5717  005750                     u7751:
  5718  005750  0E01               	movlw	1
  5719  005752  EFAC  F02B         	goto	u7760
  5720  005756                     u7750:
  5721  005756  0E00               	movlw	0
  5722  005758                     u7760:
  5723  005758  6E14               	movwf	?_isupper^0,c
  5724  00575A  6A15               	clrf	(?_isupper+1)^0,c
  5725  00575C  0012               	return		;funcret
  5726  00575E                     __end_of_isupper:
  5727                           	callstack 0
  5728                           
  5729 ;; *************** function _strcpy *****************
  5730 ;; Defined at:
  5731 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  5732 ;; Parameters:    Size  Location     Type
  5733 ;;  dest            2   19[COMRAM] PTR unsigned char 
  5734 ;;		 -> dbuf(80), 
  5735 ;;  src             2   21[COMRAM] PTR const unsigned char 
  5736 ;;		 -> STR_16(4), STR_15(4), STR_12(4), STR_11(4), 
  5737 ;;		 -> dbuf(80), 
  5738 ;; Auto vars:     Size  Location     Type
  5739 ;;  d               2   27[COMRAM] PTR unsigned char 
  5740 ;;		 -> dbuf(80), 
  5741 ;;  s               2   25[COMRAM] PTR const unsigned char 
  5742 ;;		 -> STR_16(4), STR_15(4), STR_12(4), STR_11(4), 
  5743 ;;		 -> dbuf(80), 
  5744 ;; Return value:  Size  Location     Type
  5745 ;;                  2   19[COMRAM] PTR unsigned char 
  5746 ;; Registers used:
  5747 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5748 ;; Tracked objects:
  5749 ;;		On entry : 0/0
  5750 ;;		On exit  : 0/0
  5751 ;;		Unchanged: 0/0
  5752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5753 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5754 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5755 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5756 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5757 ;;Total ram usage:       10 bytes
  5758 ;; Hardware stack levels used: 1
  5759 ;; Hardware stack levels required when called: 8
  5760 ;; This function calls:
  5761 ;;		Nothing
  5762 ;; This function is called by:
  5763 ;;		_efgtoa
  5764 ;; This function uses a non-reentrant model
  5765 ;;
  5766                           
  5767                           	psect	text13
  5768  005266                     __ptext13:
  5769                           	callstack 0
  5770  005266                     _strcpy:
  5771                           	callstack 16
  5772  005266  C016  F01A         	movff	strcpy@src,strcpy@s
  5773  00526A  C017  F01B         	movff	strcpy@src+1,strcpy@s+1
  5774  00526E  C014  F01C         	movff	strcpy@dest,strcpy@d
  5775  005272  C015  F01D         	movff	strcpy@dest+1,strcpy@d+1
  5776  005276                     l8271:
  5777  005276  501A               	movf	strcpy@s^0,w,c
  5778  005278  6E18               	movwf	??_strcpy^0,c
  5779  00527A  501B               	movf	(strcpy@s+1)^0,w,c
  5780  00527C  6E19               	movwf	(??_strcpy+1)^0,c
  5781  00527E  4A1A               	infsnz	strcpy@s^0,f,c
  5782  005280  2A1B               	incf	(strcpy@s+1)^0,f,c
  5783  005282  0060  F063  FFF6   	movff	??_strcpy,tblptrl
  5784  005288  0060  F067  FFF7   	movff	??_strcpy+1,tblptrh
  5785  00528E  0E00               	movlw	low (__smallconst shr (0+16))
  5786  005290  6EF8               	movwf	tblptru,c
  5787  005292  0060  F073  FFD9   	movff	strcpy@d,fsr2l
  5788  005298  0060  F077  FFDA   	movff	strcpy@d+1,fsr2h
  5789  00529E  4A1C               	infsnz	strcpy@d^0,f,c
  5790  0052A0  2A1D               	incf	(strcpy@d+1)^0,f,c
  5791  0052A2  0E0F               	movlw	(high __ramtop+-1)
  5792  0052A4  64F7               	cpfsgt	tblptrh,c
  5793  0052A6  D003               	bra	u8727
  5794  0052A8  0008               	tblrd		*
  5795  0052AA  50F5               	movf	tablat,w,c
  5796  0052AC  D007               	bra	u8720
  5797  0052AE                     u8727:
  5798  0052AE  006F FFDB FFE9     	movff	tblptrl,fsr0l
  5799  0052B4  006F FFDF FFEA     	movff	tblptrh,fsr0h
  5800  0052BA  50EF               	movf	indf0,w,c
  5801  0052BC                     u8720:
  5802  0052BC  6EDF               	movwf	indf2,c
  5803  0052BE  50DF               	movf	indf2,w,c
  5804  0052C0  A4D8               	btfss	status,2,c
  5805  0052C2  EF65  F029         	goto	u8731
  5806  0052C6  EF67  F029         	goto	u8730
  5807  0052CA                     u8731:
  5808  0052CA  EF3B  F029         	goto	l8271
  5809  0052CE                     u8730:
  5810  0052CE  0012               	return		;funcret
  5811  0052D0                     __end_of_strcpy:
  5812                           	callstack 0
  5813                           
  5814 ;; *************** function _floorf *****************
  5815 ;; Defined at:
  5816 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
  5817 ;; Parameters:    Size  Location     Type
  5818 ;;  x               4   53[COMRAM] float 
  5819 ;; Auto vars:     Size  Location     Type
  5820 ;;  u               4   25[BANK0 ] struct .
  5821 ;;  m               4   19[BANK0 ] unsigned long 
  5822 ;;  e               2   23[BANK0 ] int 
  5823 ;; Return value:  Size  Location     Type
  5824 ;;                  4   53[COMRAM] float 
  5825 ;; Registers used:
  5826 ;;		wreg, status,2, status,0
  5827 ;; Tracked objects:
  5828 ;;		On entry : 0/0
  5829 ;;		On exit  : 0/0
  5830 ;;		Unchanged: 0/0
  5831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5832 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5833 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5834 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5835 ;;      Totals:         4      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5836 ;;Total ram usage:       20 bytes
  5837 ;; Hardware stack levels used: 1
  5838 ;; Hardware stack levels required when called: 8
  5839 ;; This function calls:
  5840 ;;		Nothing
  5841 ;; This function is called by:
  5842 ;;		_efgtoa
  5843 ;; This function uses a non-reentrant model
  5844 ;;
  5845                           
  5846                           	psect	text14
  5847  0034E8                     __ptext14:
  5848                           	callstack 0
  5849  0034E8                     _floorf:
  5850                           	callstack 16
  5851  0034E8  C118  F079         	movff	floorf@F527,floorf@u
  5852  0034EC  C119  F07A         	movff	floorf@F527+1,floorf@u+1
  5853  0034F0  C11A  F07B         	movff	floorf@F527+2,floorf@u+2
  5854  0034F4  C11B  F07C         	movff	floorf@F527+3,floorf@u+3
  5855  0034F8  C036  F079         	movff	floorf@x,floorf@u
  5856  0034FC  C037  F07A         	movff	floorf@x+1,floorf@u+1
  5857  003500  C038  F07B         	movff	floorf@x+2,floorf@u+2
  5858  003504  C039  F07C         	movff	floorf@x+3,floorf@u+3
  5859  003508  0E81               	movlw	129
  5860  00350A  0100               	movlb	0	; () banked
  5861  00350C  6F6D               	movwf	??_floorf& (0+255),b
  5862  00350E  0EFF               	movlw	255
  5863  003510  6F6E               	movwf	(??_floorf+1)& (0+255),b
  5864  003512  C079  F06F         	movff	floorf@u,??_floorf+2
  5865  003516  C07A  F070         	movff	floorf@u+1,??_floorf+3
  5866  00351A  C07B  F071         	movff	floorf@u+2,??_floorf+4
  5867  00351E  C07C  F072         	movff	floorf@u+3,??_floorf+5
  5868  003522  0E18               	movlw	24
  5869  003524  EF99  F01A         	goto	u8770
  5870  003528                     u8775:
  5871  003528  90D8               	bcf	status,0,c
  5872  00352A  3372               	rrcf	(??_floorf+5)& (0+255),f,b
  5873  00352C  3371               	rrcf	(??_floorf+4)& (0+255),f,b
  5874  00352E  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  5875  003530  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  5876  003532                     u8770:
  5877  003532  2EE8               	decfsz	wreg,f,c
  5878  003534  EF94  F01A         	goto	u8775
  5879  003538  516F               	movf	(??_floorf+2)& (0+255),w,b
  5880  00353A  256D               	addwf	??_floorf& (0+255),w,b
  5881  00353C  6F77               	movwf	floorf@e& (0+255),b
  5882  00353E  0E00               	movlw	0
  5883  003540  216E               	addwfc	(??_floorf+1)& (0+255),w,b
  5884  003542  6F78               	movwf	(floorf@e+1)& (0+255),b
  5885  003544  BF78               	btfsc	(floorf@e+1)& (0+255),7,b
  5886  003546  EFAE  F01A         	goto	u8781
  5887  00354A  5178               	movf	(floorf@e+1)& (0+255),w,b
  5888  00354C  E109               	bnz	u8780
  5889  00354E  0E17               	movlw	23
  5890  003550  5D77               	subwf	floorf@e& (0+255),w,b
  5891  003552  A0D8               	btfss	status,0,c
  5892  003554  EFAE  F01A         	goto	u8781
  5893  003558  EFB0  F01A         	goto	u8780
  5894  00355C                     u8781:
  5895  00355C  EFBA  F01A         	goto	l8289
  5896  003560                     u8780:
  5897  003560                     l8287:
  5898                           
  5899                           ; BSR set to: 0
  5900  003560  C036  F036         	movff	floorf@x,?_floorf
  5901  003564  C037  F037         	movff	floorf@x+1,?_floorf+1
  5902  003568  C038  F038         	movff	floorf@x+2,?_floorf+2
  5903  00356C  C039  F039         	movff	floorf@x+3,?_floorf+3
  5904  003570  EF7E  F01B         	goto	l2294
  5905  003574                     l8289:
  5906                           
  5907                           ; BSR set to: 0
  5908  003574  BF78               	btfsc	(floorf@e+1)& (0+255),7,b
  5909  003576  EFBF  F01A         	goto	u8791
  5910  00357A  EFC1  F01A         	goto	u8790
  5911  00357E                     u8791:
  5912  00357E  EF32  F01B         	goto	l8299
  5913  003582                     u8790:
  5914  003582                     
  5915                           ; BSR set to: 0
  5916  003582  C077  F06D         	movff	floorf@e,??_floorf
  5917  003586  0EFF               	movlw	255
  5918  003588  6F6E               	movwf	(??_floorf+1)& (0+255),b
  5919  00358A  0EFF               	movlw	255
  5920  00358C  6F6F               	movwf	(??_floorf+2)& (0+255),b
  5921  00358E  0E7F               	movlw	127
  5922  003590  6F70               	movwf	(??_floorf+3)& (0+255),b
  5923  003592  0E00               	movlw	0
  5924  003594  6F71               	movwf	(??_floorf+4)& (0+255),b
  5925  003596                     u8805:
  5926  003596  676D               	tstfsz	??_floorf& (0+255),b
  5927  003598  EFD0  F01A         	goto	u8806
  5928  00359C  EFD8  F01A         	goto	u8807
  5929  0035A0                     u8806:
  5930  0035A0  3571               	rlcf	(??_floorf+4)& (0+255),w,b
  5931  0035A2  3371               	rrcf	(??_floorf+4)& (0+255),f,b
  5932  0035A4  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  5933  0035A6  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  5934  0035A8  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  5935  0035AA  2F6D               	decfsz	??_floorf& (0+255),f,b
  5936  0035AC  EFCB  F01A         	goto	u8805
  5937  0035B0                     u8807:
  5938  0035B0  C06E  F073         	movff	??_floorf+1,floorf@m
  5939  0035B4  C06F  F074         	movff	??_floorf+2,floorf@m+1
  5940  0035B8  C070  F075         	movff	??_floorf+3,floorf@m+2
  5941  0035BC  C071  F076         	movff	??_floorf+4,floorf@m+3
  5942  0035C0  0100               	movlb	0	; () banked
  5943  0035C2  5173               	movf	floorf@m& (0+255),w,b
  5944  0035C4  1579               	andwf	floorf@u& (0+255),w,b
  5945  0035C6  6F6D               	movwf	??_floorf& (0+255),b
  5946  0035C8  5174               	movf	(floorf@m+1)& (0+255),w,b
  5947  0035CA  157A               	andwf	(floorf@u+1)& (0+255),w,b
  5948  0035CC  6F6E               	movwf	(??_floorf+1)& (0+255),b
  5949  0035CE  5175               	movf	(floorf@m+2)& (0+255),w,b
  5950  0035D0  157B               	andwf	(floorf@u+2)& (0+255),w,b
  5951  0035D2  6F6F               	movwf	(??_floorf+2)& (0+255),b
  5952  0035D4  5176               	movf	(floorf@m+3)& (0+255),w,b
  5953  0035D6  157C               	andwf	(floorf@u+3)& (0+255),w,b
  5954  0035D8  6F70               	movwf	(??_floorf+3)& (0+255),b
  5955  0035DA  516D               	movf	??_floorf& (0+255),w,b
  5956  0035DC  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  5957  0035DE  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  5958  0035E0  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  5959  0035E2  A4D8               	btfss	status,2,c
  5960  0035E4  EFF6  F01A         	goto	u8811
  5961  0035E8  EFF8  F01A         	goto	u8810
  5962  0035EC                     u8811:
  5963  0035EC  EFFA  F01A         	goto	l8295
  5964  0035F0                     u8810:
  5965  0035F0  EFB0  F01A         	goto	l8287
  5966  0035F4                     l8295:
  5967                           
  5968                           ; BSR set to: 0
  5969  0035F4  C079  F06D         	movff	floorf@u,??_floorf
  5970  0035F8  C07A  F06E         	movff	floorf@u+1,??_floorf+1
  5971  0035FC  C07B  F06F         	movff	floorf@u+2,??_floorf+2
  5972  003600  C07C  F070         	movff	floorf@u+3,??_floorf+3
  5973  003604  0E20               	movlw	32
  5974  003606  EF0A  F01B         	goto	u8820
  5975  00360A                     u8825:
  5976  00360A  90D8               	bcf	status,0,c
  5977  00360C  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  5978  00360E  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  5979  003610  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  5980  003612  336D               	rrcf	??_floorf& (0+255),f,b
  5981  003614                     u8820:
  5982  003614  2EE8               	decfsz	wreg,f,c
  5983  003616  EF05  F01B         	goto	u8825
  5984  00361A  516D               	movf	??_floorf& (0+255),w,b
  5985  00361C  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  5986  00361E  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  5987  003620  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  5988  003622  B4D8               	btfsc	status,2,c
  5989  003624  EF16  F01B         	goto	u8831
  5990  003628  EF18  F01B         	goto	u8830
  5991  00362C                     u8831:
  5992  00362C  EF20  F01B         	goto	l2297
  5993  003630                     u8830:
  5994  003630                     
  5995                           ; BSR set to: 0
  5996  003630  5173               	movf	floorf@m& (0+255),w,b
  5997  003632  2779               	addwf	floorf@u& (0+255),f,b
  5998  003634  5174               	movf	(floorf@m+1)& (0+255),w,b
  5999  003636  237A               	addwfc	(floorf@u+1)& (0+255),f,b
  6000  003638  5175               	movf	(floorf@m+2)& (0+255),w,b
  6001  00363A  237B               	addwfc	(floorf@u+2)& (0+255),f,b
  6002  00363C  5176               	movf	(floorf@m+3)& (0+255),w,b
  6003  00363E  237C               	addwfc	(floorf@u+3)& (0+255),f,b
  6004  003640                     l2297:
  6005                           
  6006                           ; BSR set to: 0
  6007  003640  1D73               	comf	floorf@m& (0+255),w,b
  6008  003642  6F6D               	movwf	??_floorf& (0+255),b
  6009  003644  1D74               	comf	(floorf@m+1)& (0+255),w,b
  6010  003646  6F6E               	movwf	(??_floorf+1)& (0+255),b
  6011  003648  1D75               	comf	(floorf@m+2)& (0+255),w,b
  6012  00364A  6F6F               	movwf	(??_floorf+2)& (0+255),b
  6013  00364C  1D76               	comf	(floorf@m+3)& (0+255),w,b
  6014  00364E  6F70               	movwf	(??_floorf+3)& (0+255),b
  6015  003650  516D               	movf	??_floorf& (0+255),w,b
  6016  003652  1779               	andwf	floorf@u& (0+255),f,b
  6017  003654  516E               	movf	(??_floorf+1)& (0+255),w,b
  6018  003656  177A               	andwf	(floorf@u+1)& (0+255),f,b
  6019  003658  516F               	movf	(??_floorf+2)& (0+255),w,b
  6020  00365A  177B               	andwf	(floorf@u+2)& (0+255),f,b
  6021  00365C  5170               	movf	(??_floorf+3)& (0+255),w,b
  6022  00365E  177C               	andwf	(floorf@u+3)& (0+255),f,b
  6023  003660  EF76  F01B         	goto	l8307
  6024  003664                     l8299:
  6025                           
  6026                           ; BSR set to: 0
  6027  003664  C079  F06D         	movff	floorf@u,??_floorf
  6028  003668  C07A  F06E         	movff	floorf@u+1,??_floorf+1
  6029  00366C  C07B  F06F         	movff	floorf@u+2,??_floorf+2
  6030  003670  C07C  F070         	movff	floorf@u+3,??_floorf+3
  6031  003674  0E20               	movlw	32
  6032  003676  EF42  F01B         	goto	u8840
  6033  00367A                     u8845:
  6034  00367A  90D8               	bcf	status,0,c
  6035  00367C  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  6036  00367E  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  6037  003680  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  6038  003682  336D               	rrcf	??_floorf& (0+255),f,b
  6039  003684                     u8840:
  6040  003684  2EE8               	decfsz	wreg,f,c
  6041  003686  EF3D  F01B         	goto	u8845
  6042  00368A  516D               	movf	??_floorf& (0+255),w,b
  6043  00368C  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  6044  00368E  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  6045  003690  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  6046  003692  A4D8               	btfss	status,2,c
  6047  003694  EF4E  F01B         	goto	u8851
  6048  003698  EF50  F01B         	goto	u8850
  6049  00369C                     u8851:
  6050  00369C  EF5A  F01B         	goto	l8303
  6051  0036A0                     u8850:
  6052  0036A0                     
  6053                           ; BSR set to: 0
  6054  0036A0  0E00               	movlw	0
  6055  0036A2  6F79               	movwf	floorf@u& (0+255),b
  6056  0036A4  0E00               	movlw	0
  6057  0036A6  6F7A               	movwf	(floorf@u+1)& (0+255),b
  6058  0036A8  0E00               	movlw	0
  6059  0036AA  6F7B               	movwf	(floorf@u+2)& (0+255),b
  6060  0036AC  0E00               	movlw	0
  6061  0036AE  6F7C               	movwf	(floorf@u+3)& (0+255),b
  6062  0036B0  EF76  F01B         	goto	l8307
  6063  0036B4                     l8303:
  6064                           
  6065                           ; BSR set to: 0
  6066  0036B4  90D8               	bcf	status,0,c
  6067  0036B6  3579               	rlcf	floorf@u& (0+255),w,b
  6068  0036B8  6F6D               	movwf	??_floorf& (0+255),b
  6069  0036BA  357A               	rlcf	(floorf@u+1)& (0+255),w,b
  6070  0036BC  6F6E               	movwf	(??_floorf+1)& (0+255),b
  6071  0036BE  357B               	rlcf	(floorf@u+2)& (0+255),w,b
  6072  0036C0  6F6F               	movwf	(??_floorf+2)& (0+255),b
  6073  0036C2  357C               	rlcf	(floorf@u+3)& (0+255),w,b
  6074  0036C4  6F70               	movwf	(??_floorf+3)& (0+255),b
  6075  0036C6  516D               	movf	??_floorf& (0+255),w,b
  6076  0036C8  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  6077  0036CA  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  6078  0036CC  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  6079  0036CE  B4D8               	btfsc	status,2,c
  6080  0036D0  EF6C  F01B         	goto	u8861
  6081  0036D4  EF6E  F01B         	goto	u8860
  6082  0036D8                     u8861:
  6083  0036D8  EF76  F01B         	goto	l8307
  6084  0036DC                     u8860:
  6085  0036DC                     
  6086                           ; BSR set to: 0
  6087  0036DC  0E00               	movlw	0
  6088  0036DE  6F79               	movwf	floorf@u& (0+255),b
  6089  0036E0  0E00               	movlw	0
  6090  0036E2  6F7A               	movwf	(floorf@u+1)& (0+255),b
  6091  0036E4  0E80               	movlw	128
  6092  0036E6  6F7B               	movwf	(floorf@u+2)& (0+255),b
  6093  0036E8  0EBF               	movlw	191
  6094  0036EA  6F7C               	movwf	(floorf@u+3)& (0+255),b
  6095  0036EC                     l8307:
  6096                           
  6097                           ; BSR set to: 0
  6098  0036EC  C079  F036         	movff	floorf@u,?_floorf
  6099  0036F0  C07A  F037         	movff	floorf@u+1,?_floorf+1
  6100  0036F4  C07B  F038         	movff	floorf@u+2,?_floorf+2
  6101  0036F8  C07C  F039         	movff	floorf@u+3,?_floorf+3
  6102  0036FC                     l2294:
  6103                           
  6104                           ; BSR set to: 0
  6105  0036FC  0012               	return		;funcret
  6106  0036FE                     __end_of_floorf:
  6107                           	callstack 0
  6108                           
  6109 ;; *************** function ___fpclassifyf *****************
  6110 ;; Defined at:
  6111 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
  6112 ;; Parameters:    Size  Location     Type
  6113 ;;  x               4   19[COMRAM] float 
  6114 ;; Auto vars:     Size  Location     Type
  6115 ;;  u               4   29[COMRAM] struct .
  6116 ;;  e               2   27[COMRAM] int 
  6117 ;; Return value:  Size  Location     Type
  6118 ;;                  2   19[COMRAM] int 
  6119 ;; Registers used:
  6120 ;;		wreg, status,2, status,0
  6121 ;; Tracked objects:
  6122 ;;		On entry : 0/0
  6123 ;;		On exit  : 0/0
  6124 ;;		Unchanged: 0/0
  6125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6126 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6127 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6128 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6129 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6130 ;;Total ram usage:       14 bytes
  6131 ;; Hardware stack levels used: 1
  6132 ;; Hardware stack levels required when called: 8
  6133 ;; This function calls:
  6134 ;;		Nothing
  6135 ;; This function is called by:
  6136 ;;		_efgtoa
  6137 ;; This function uses a non-reentrant model
  6138 ;;
  6139                           
  6140                           	psect	text15
  6141  0047E4                     __ptext15:
  6142                           	callstack 0
  6143  0047E4                     ___fpclassifyf:
  6144                           	callstack 16
  6145  0047E4  C11C  F01E         	movff	___fpclassifyf@F465,___fpclassifyf@u
  6146  0047E8  C11D  F01F         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  6147  0047EC  C11E  F020         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  6148  0047F0  C11F  F021         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  6149  0047F4  C014  F01E         	movff	___fpclassifyf@x,___fpclassifyf@u
  6150  0047F8  C015  F01F         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  6151  0047FC  C016  F020         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  6152  004800  C017  F021         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  6153  004804  C01E  F018         	movff	___fpclassifyf@u,??___fpclassifyf
  6154  004808  C01F  F019         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6155  00480C  C020  F01A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6156  004810  C021  F01B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6157  004814  0E18               	movlw	24
  6158  004816  EF12  F024         	goto	u8650
  6159  00481A                     u8655:
  6160  00481A  90D8               	bcf	status,0,c
  6161  00481C  321B               	rrcf	(??___fpclassifyf+3)^0,f,c
  6162  00481E  321A               	rrcf	(??___fpclassifyf+2)^0,f,c
  6163  004820  3219               	rrcf	(??___fpclassifyf+1)^0,f,c
  6164  004822  3218               	rrcf	??___fpclassifyf^0,f,c
  6165  004824                     u8650:
  6166  004824  2EE8               	decfsz	wreg,f,c
  6167  004826  EF0D  F024         	goto	u8655
  6168  00482A  5018               	movf	??___fpclassifyf^0,w,c
  6169  00482C  6E1C               	movwf	___fpclassifyf@e^0,c
  6170  00482E  6A1D               	clrf	(___fpclassifyf@e+1)^0,c
  6171  004830  501C               	movf	___fpclassifyf@e^0,w,c
  6172  004832  101D               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6173  004834  A4D8               	btfss	status,2,c
  6174  004836  EF1F  F024         	goto	u8661
  6175  00483A  EF21  F024         	goto	u8660
  6176  00483E                     u8661:
  6177  00483E  EF41  F024         	goto	l8259
  6178  004842                     u8660:
  6179  004842  90D8               	bcf	status,0,c
  6180  004844  341E               	rlcf	___fpclassifyf@u^0,w,c
  6181  004846  6E18               	movwf	??___fpclassifyf^0,c
  6182  004848  341F               	rlcf	(___fpclassifyf@u+1)^0,w,c
  6183  00484A  6E19               	movwf	(??___fpclassifyf+1)^0,c
  6184  00484C  3420               	rlcf	(___fpclassifyf@u+2)^0,w,c
  6185  00484E  6E1A               	movwf	(??___fpclassifyf+2)^0,c
  6186  004850  3421               	rlcf	(___fpclassifyf@u+3)^0,w,c
  6187  004852  6E1B               	movwf	(??___fpclassifyf+3)^0,c
  6188  004854  5018               	movf	??___fpclassifyf^0,w,c
  6189  004856  1019               	iorwf	(??___fpclassifyf+1)^0,w,c
  6190  004858  101A               	iorwf	(??___fpclassifyf+2)^0,w,c
  6191  00485A  101B               	iorwf	(??___fpclassifyf+3)^0,w,c
  6192  00485C  A4D8               	btfss	status,2,c
  6193  00485E  EF33  F024         	goto	u8671
  6194  004862  EF35  F024         	goto	u8670
  6195  004866                     u8671:
  6196  004866  EF3B  F024         	goto	l8255
  6197  00486A                     u8670:
  6198  00486A  0E00               	movlw	0
  6199  00486C  6E15               	movwf	(?___fpclassifyf+1)^0,c
  6200  00486E  0E02               	movlw	2
  6201  004870  6E14               	movwf	?___fpclassifyf^0,c
  6202  004872  EF70  F024         	goto	l2280
  6203  004876                     l8255:
  6204  004876  0E00               	movlw	0
  6205  004878  6E15               	movwf	(?___fpclassifyf+1)^0,c
  6206  00487A  0E03               	movlw	3
  6207  00487C  6E14               	movwf	?___fpclassifyf^0,c
  6208  00487E  EF70  F024         	goto	l2280
  6209  004882                     l8259:
  6210  004882  281C               	incf	___fpclassifyf@e^0,w,c
  6211  004884  101D               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6212  004886  A4D8               	btfss	status,2,c
  6213  004888  EF48  F024         	goto	u8681
  6214  00488C  EF4A  F024         	goto	u8680
  6215  004890                     u8681:
  6216  004890  EF6C  F024         	goto	l8265
  6217  004894                     u8680:
  6218  004894  C01E  F018         	movff	___fpclassifyf@u,??___fpclassifyf
  6219  004898  C01F  F019         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6220  00489C  C020  F01A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6221  0048A0  C021  F01B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6222  0048A4  0E09               	movlw	9
  6223  0048A6                     u8695:
  6224  0048A6  90D8               	bcf	status,0,c
  6225  0048A8  3618               	rlcf	??___fpclassifyf^0,f,c
  6226  0048AA  3619               	rlcf	(??___fpclassifyf+1)^0,f,c
  6227  0048AC  361A               	rlcf	(??___fpclassifyf+2)^0,f,c
  6228  0048AE  361B               	rlcf	(??___fpclassifyf+3)^0,f,c
  6229  0048B0  2EE8               	decfsz	wreg,f,c
  6230  0048B2  EF53  F024         	goto	u8695
  6231  0048B6  5018               	movf	??___fpclassifyf^0,w,c
  6232  0048B8  1019               	iorwf	(??___fpclassifyf+1)^0,w,c
  6233  0048BA  101A               	iorwf	(??___fpclassifyf+2)^0,w,c
  6234  0048BC  101B               	iorwf	(??___fpclassifyf+3)^0,w,c
  6235  0048BE  B4D8               	btfsc	status,2,c
  6236  0048C0  EF64  F024         	goto	u8701
  6237  0048C4  EF67  F024         	goto	u8700
  6238  0048C8                     u8701:
  6239  0048C8  0E01               	movlw	1
  6240  0048CA  EF68  F024         	goto	u8710
  6241  0048CE                     u8700:
  6242  0048CE  0E00               	movlw	0
  6243  0048D0                     u8710:
  6244  0048D0  6E14               	movwf	?___fpclassifyf^0,c
  6245  0048D2  6A15               	clrf	(?___fpclassifyf+1)^0,c
  6246  0048D4  EF70  F024         	goto	l2280
  6247  0048D8                     l8265:
  6248  0048D8  0E00               	movlw	0
  6249  0048DA  6E15               	movwf	(?___fpclassifyf+1)^0,c
  6250  0048DC  0E04               	movlw	4
  6251  0048DE  6E14               	movwf	?___fpclassifyf^0,c
  6252  0048E0                     l2280:
  6253  0048E0  0012               	return		;funcret
  6254  0048E2                     __end_of___fpclassifyf:
  6255                           	callstack 0
  6256                           
  6257 ;; *************** function ___flsub *****************
  6258 ;; Defined at:
  6259 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  6260 ;; Parameters:    Size  Location     Type
  6261 ;;  b               4   25[BANK0 ] int 
  6262 ;;  a               4   29[BANK0 ] int 
  6263 ;; Auto vars:     Size  Location     Type
  6264 ;;		None
  6265 ;; Return value:  Size  Location     Type
  6266 ;;                  4   25[BANK0 ] int 
  6267 ;; Registers used:
  6268 ;;		wreg, status,2, status,0, cstack
  6269 ;; Tracked objects:
  6270 ;;		On entry : 0/0
  6271 ;;		On exit  : 0/0
  6272 ;;		Unchanged: 0/0
  6273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6274 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6277 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6278 ;;Total ram usage:        8 bytes
  6279 ;; Hardware stack levels used: 1
  6280 ;; Hardware stack levels required when called: 9
  6281 ;; This function calls:
  6282 ;;		___fladd
  6283 ;; This function is called by:
  6284 ;;		_efgtoa
  6285 ;; This function uses a non-reentrant model
  6286 ;;
  6287                           
  6288                           	psect	text16
  6289  005566                     __ptext16:
  6290                           	callstack 0
  6291  005566                     ___flsub:
  6292                           	callstack 15
  6293  005566  0E00               	movlw	0
  6294  005568  0100               	movlb	0	; () banked
  6295  00556A  1B7D               	xorwf	___flsub@a& (0+255),f,b
  6296  00556C  0E00               	movlw	0
  6297  00556E  1B7E               	xorwf	(___flsub@a+1)& (0+255),f,b
  6298  005570  0E00               	movlw	0
  6299  005572  1B7F               	xorwf	(___flsub@a+2)& (0+255),f,b
  6300  005574  0E80               	movlw	128
  6301  005576  1B80               	xorwf	(___flsub@a+3)& (0+255),f,b
  6302  005578                     
  6303                           ; BSR set to: 0
  6304  005578  C079  F06D         	movff	___flsub@b,___fladd@b
  6305  00557C  C07A  F06E         	movff	___flsub@b+1,___fladd@b+1
  6306  005580  C07B  F06F         	movff	___flsub@b+2,___fladd@b+2
  6307  005584  C07C  F070         	movff	___flsub@b+3,___fladd@b+3
  6308  005588  C07D  F071         	movff	___flsub@a,___fladd@a
  6309  00558C  C07E  F072         	movff	___flsub@a+1,___fladd@a+1
  6310  005590  C07F  F073         	movff	___flsub@a+2,___fladd@a+2
  6311  005594  C080  F074         	movff	___flsub@a+3,___fladd@a+3
  6312  005598  EC36  F011         	call	___fladd	;wreg free
  6313  00559C  C06D  F079         	movff	?___fladd,?___flsub
  6314  0055A0  C06E  F07A         	movff	?___fladd+1,?___flsub+1
  6315  0055A4  C06F  F07B         	movff	?___fladd+2,?___flsub+2
  6316  0055A8  C070  F07C         	movff	?___fladd+3,?___flsub+3
  6317  0055AC  0012               	return		;funcret
  6318  0055AE                     __end_of___flsub:
  6319                           	callstack 0
  6320                           
  6321 ;; *************** function ___flneg *****************
  6322 ;; Defined at:
  6323 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  6324 ;; Parameters:    Size  Location     Type
  6325 ;;  f1              4   19[COMRAM] int 
  6326 ;; Auto vars:     Size  Location     Type
  6327 ;;		None
  6328 ;; Return value:  Size  Location     Type
  6329 ;;                  4   19[COMRAM] int 
  6330 ;; Registers used:
  6331 ;;		wreg, status,2, status,0
  6332 ;; Tracked objects:
  6333 ;;		On entry : 0/0
  6334 ;;		On exit  : 0/0
  6335 ;;		Unchanged: 0/0
  6336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6337 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6340 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6341 ;;Total ram usage:        4 bytes
  6342 ;; Hardware stack levels used: 1
  6343 ;; Hardware stack levels required when called: 8
  6344 ;; This function calls:
  6345 ;;		Nothing
  6346 ;; This function is called by:
  6347 ;;		_efgtoa
  6348 ;; This function uses a non-reentrant model
  6349 ;;
  6350                           
  6351                           	psect	text17
  6352  00575E                     __ptext17:
  6353                           	callstack 0
  6354  00575E                     ___flneg:
  6355                           	callstack 16
  6356  00575E  5014               	movf	___flneg@f1^0,w,c
  6357  005760  1015               	iorwf	(___flneg@f1+1)^0,w,c
  6358  005762  1016               	iorwf	(___flneg@f1+2)^0,w,c
  6359  005764  1017               	iorwf	(___flneg@f1+3)^0,w,c
  6360  005766  B4D8               	btfsc	status,2,c
  6361  005768  EFB8  F02B         	goto	u8521
  6362  00576C  EFBA  F02B         	goto	u8520
  6363  005770                     u8521:
  6364  005770  EFC2  F02B         	goto	l8173
  6365  005774                     u8520:
  6366  005774  0E00               	movlw	0
  6367  005776  1A14               	xorwf	___flneg@f1^0,f,c
  6368  005778  0E00               	movlw	0
  6369  00577A  1A15               	xorwf	(___flneg@f1+1)^0,f,c
  6370  00577C  0E00               	movlw	0
  6371  00577E  1A16               	xorwf	(___flneg@f1+2)^0,f,c
  6372  005780  0E80               	movlw	128
  6373  005782  1A17               	xorwf	(___flneg@f1+3)^0,f,c
  6374  005784                     l8173:
  6375  005784  C014  F014         	movff	___flneg@f1,?___flneg
  6376  005788  C015  F015         	movff	___flneg@f1+1,?___flneg+1
  6377  00578C  C016  F016         	movff	___flneg@f1+2,?___flneg+2
  6378  005790  C017  F017         	movff	___flneg@f1+3,?___flneg+3
  6379  005794  0012               	return		;funcret
  6380  005796                     __end_of___flneg:
  6381                           	callstack 0
  6382                           
  6383 ;; *************** function ___flge *****************
  6384 ;; Defined at:
  6385 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  6386 ;; Parameters:    Size  Location     Type
  6387 ;;  ff1             4   13[BANK0 ] int 
  6388 ;;  ff2             4   17[BANK0 ] int 
  6389 ;; Auto vars:     Size  Location     Type
  6390 ;;		None
  6391 ;; Return value:  Size  Location     Type
  6392 ;;		None               void
  6393 ;; Registers used:
  6394 ;;		wreg, status,2, status,0
  6395 ;; Tracked objects:
  6396 ;;		On entry : 0/0
  6397 ;;		On exit  : 0/0
  6398 ;;		Unchanged: 0/0
  6399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6400 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6402 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6403 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6404 ;;Total ram usage:       12 bytes
  6405 ;; Hardware stack levels used: 1
  6406 ;; Hardware stack levels required when called: 8
  6407 ;; This function calls:
  6408 ;;		Nothing
  6409 ;; This function is called by:
  6410 ;;		_loop
  6411 ;;		_checkBatt
  6412 ;;		_efgtoa
  6413 ;; This function uses a non-reentrant model
  6414 ;;
  6415                           
  6416                           	psect	text18
  6417  0046DE                     __ptext18:
  6418                           	callstack 0
  6419  0046DE                     ___flge:
  6420                           	callstack 16
  6421  0046DE  0E00               	movlw	0
  6422  0046E0  0100               	movlb	0	; () banked
  6423  0046E2  156D               	andwf	___flge@ff1& (0+255),w,b
  6424  0046E4  6E36               	movwf	??___flge^0,c
  6425  0046E6  0E00               	movlw	0
  6426  0046E8  156E               	andwf	(___flge@ff1+1)& (0+255),w,b
  6427  0046EA  6E37               	movwf	(??___flge+1)^0,c
  6428  0046EC  0E80               	movlw	128
  6429  0046EE  156F               	andwf	(___flge@ff1+2)& (0+255),w,b
  6430  0046F0  6E38               	movwf	(??___flge+2)^0,c
  6431  0046F2  0E7F               	movlw	127
  6432  0046F4  1570               	andwf	(___flge@ff1+3)& (0+255),w,b
  6433  0046F6  6E39               	movwf	(??___flge+3)^0,c
  6434  0046F8  5036               	movf	??___flge^0,w,c
  6435  0046FA  1037               	iorwf	(??___flge+1)^0,w,c
  6436  0046FC  1038               	iorwf	(??___flge+2)^0,w,c
  6437  0046FE  1039               	iorwf	(??___flge+3)^0,w,c
  6438  004700  A4D8               	btfss	status,2,c
  6439  004702  EF85  F023         	goto	u8471
  6440  004706  EF87  F023         	goto	u8470
  6441  00470A                     u8471:
  6442  00470A  EF8F  F023         	goto	l8151
  6443  00470E                     u8470:
  6444  00470E                     
  6445                           ; BSR set to: 0
  6446  00470E  0E00               	movlw	0
  6447  004710  6F6D               	movwf	___flge@ff1& (0+255),b
  6448  004712  0E00               	movlw	0
  6449  004714  6F6E               	movwf	(___flge@ff1+1)& (0+255),b
  6450  004716  0E00               	movlw	0
  6451  004718  6F6F               	movwf	(___flge@ff1+2)& (0+255),b
  6452  00471A  0E00               	movlw	0
  6453  00471C  6F70               	movwf	(___flge@ff1+3)& (0+255),b
  6454  00471E                     l8151:
  6455                           
  6456                           ; BSR set to: 0
  6457  00471E  0E00               	movlw	0
  6458  004720  1571               	andwf	___flge@ff2& (0+255),w,b
  6459  004722  6E36               	movwf	??___flge^0,c
  6460  004724  0E00               	movlw	0
  6461  004726  1572               	andwf	(___flge@ff2+1)& (0+255),w,b
  6462  004728  6E37               	movwf	(??___flge+1)^0,c
  6463  00472A  0E80               	movlw	128
  6464  00472C  1573               	andwf	(___flge@ff2+2)& (0+255),w,b
  6465  00472E  6E38               	movwf	(??___flge+2)^0,c
  6466  004730  0E7F               	movlw	127
  6467  004732  1574               	andwf	(___flge@ff2+3)& (0+255),w,b
  6468  004734  6E39               	movwf	(??___flge+3)^0,c
  6469  004736  5036               	movf	??___flge^0,w,c
  6470  004738  1037               	iorwf	(??___flge+1)^0,w,c
  6471  00473A  1038               	iorwf	(??___flge+2)^0,w,c
  6472  00473C  1039               	iorwf	(??___flge+3)^0,w,c
  6473  00473E  A4D8               	btfss	status,2,c
  6474  004740  EFA4  F023         	goto	u8481
  6475  004744  EFA6  F023         	goto	u8480
  6476  004748                     u8481:
  6477  004748  EFAE  F023         	goto	l8155
  6478  00474C                     u8480:
  6479  00474C                     
  6480                           ; BSR set to: 0
  6481  00474C  0E00               	movlw	0
  6482  00474E  6F71               	movwf	___flge@ff2& (0+255),b
  6483  004750  0E00               	movlw	0
  6484  004752  6F72               	movwf	(___flge@ff2+1)& (0+255),b
  6485  004754  0E00               	movlw	0
  6486  004756  6F73               	movwf	(___flge@ff2+2)& (0+255),b
  6487  004758  0E00               	movlw	0
  6488  00475A  6F74               	movwf	(___flge@ff2+3)& (0+255),b
  6489  00475C                     l8155:
  6490                           
  6491                           ; BSR set to: 0
  6492  00475C  AF70               	btfss	(___flge@ff1+3)& (0+255),7,b
  6493  00475E  EFB3  F023         	goto	u8491
  6494  004762  EFB5  F023         	goto	u8490
  6495  004766                     u8491:
  6496  004766  EFBE  F023         	goto	l8159
  6497  00476A                     u8490:
  6498  00476A                     
  6499                           ; BSR set to: 0
  6500  00476A  6D6D               	negf	___flge@ff1& (0+255),b
  6501  00476C  1F6E               	comf	(___flge@ff1+1)& (0+255),f,b
  6502  00476E  B0D8               	btfsc	status,0,c
  6503  004770  2B6E               	incf	(___flge@ff1+1)& (0+255),f,b
  6504  004772  1F6F               	comf	(___flge@ff1+2)& (0+255),f,b
  6505  004774  B0D8               	btfsc	status,0,c
  6506  004776  2B6F               	incf	(___flge@ff1+2)& (0+255),f,b
  6507  004778  0E80               	movlw	128
  6508  00477A  5770               	subfwb	(___flge@ff1+3)& (0+255),f,b
  6509  00477C                     l8159:
  6510                           
  6511                           ; BSR set to: 0
  6512  00477C  AF74               	btfss	(___flge@ff2+3)& (0+255),7,b
  6513  00477E  EFC3  F023         	goto	u8501
  6514  004782  EFC5  F023         	goto	u8500
  6515  004786                     u8501:
  6516  004786  EFCE  F023         	goto	l1670
  6517  00478A                     u8500:
  6518  00478A                     
  6519                           ; BSR set to: 0
  6520  00478A  6D71               	negf	___flge@ff2& (0+255),b
  6521  00478C  1F72               	comf	(___flge@ff2+1)& (0+255),f,b
  6522  00478E  B0D8               	btfsc	status,0,c
  6523  004790  2B72               	incf	(___flge@ff2+1)& (0+255),f,b
  6524  004792  1F73               	comf	(___flge@ff2+2)& (0+255),f,b
  6525  004794  B0D8               	btfsc	status,0,c
  6526  004796  2B73               	incf	(___flge@ff2+2)& (0+255),f,b
  6527  004798  0E80               	movlw	128
  6528  00479A  5774               	subfwb	(___flge@ff2+3)& (0+255),f,b
  6529  00479C                     l1670:
  6530                           
  6531                           ; BSR set to: 0
  6532  00479C  0E00               	movlw	0
  6533  00479E  1B6D               	xorwf	___flge@ff1& (0+255),f,b
  6534  0047A0  0E00               	movlw	0
  6535  0047A2  1B6E               	xorwf	(___flge@ff1+1)& (0+255),f,b
  6536  0047A4  0E00               	movlw	0
  6537  0047A6  1B6F               	xorwf	(___flge@ff1+2)& (0+255),f,b
  6538  0047A8  0E80               	movlw	128
  6539  0047AA  1B70               	xorwf	(___flge@ff1+3)& (0+255),f,b
  6540  0047AC  0E00               	movlw	0
  6541  0047AE  1B71               	xorwf	___flge@ff2& (0+255),f,b
  6542  0047B0  0E00               	movlw	0
  6543  0047B2  1B72               	xorwf	(___flge@ff2+1)& (0+255),f,b
  6544  0047B4  0E00               	movlw	0
  6545  0047B6  1B73               	xorwf	(___flge@ff2+2)& (0+255),f,b
  6546  0047B8  0E80               	movlw	128
  6547  0047BA  1B74               	xorwf	(___flge@ff2+3)& (0+255),f,b
  6548  0047BC  5171               	movf	___flge@ff2& (0+255),w,b
  6549  0047BE  5D6D               	subwf	___flge@ff1& (0+255),w,b
  6550  0047C0  5172               	movf	(___flge@ff2+1)& (0+255),w,b
  6551  0047C2  596E               	subwfb	(___flge@ff1+1)& (0+255),w,b
  6552  0047C4  5173               	movf	(___flge@ff2+2)& (0+255),w,b
  6553  0047C6  596F               	subwfb	(___flge@ff1+2)& (0+255),w,b
  6554  0047C8  5174               	movf	(___flge@ff2+3)& (0+255),w,b
  6555  0047CA  5970               	subwfb	(___flge@ff1+3)& (0+255),w,b
  6556  0047CC  B0D8               	btfsc	status,0,c
  6557  0047CE  EFEB  F023         	goto	u8511
  6558  0047D2  EFED  F023         	goto	u8510
  6559  0047D6                     u8511:
  6560  0047D6  EFF0  F023         	goto	l8165
  6561  0047DA                     u8510:
  6562  0047DA                     
  6563                           ; BSR set to: 0
  6564  0047DA  90D8               	bcf	status,0,c
  6565  0047DC  EFF1  F023         	goto	l1675
  6566  0047E0                     l8165:
  6567                           
  6568                           ; BSR set to: 0
  6569  0047E0  80D8               	bsf	status,0,c
  6570  0047E2                     l1675:
  6571                           
  6572                           ; BSR set to: 0
  6573  0047E2  0012               	return		;funcret
  6574  0047E4                     __end_of___flge:
  6575                           	callstack 0
  6576                           
  6577 ;; *************** function ___fleq *****************
  6578 ;; Defined at:
  6579 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
  6580 ;; Parameters:    Size  Location     Type
  6581 ;;  ff1             4   19[COMRAM] int 
  6582 ;;  ff2             4   23[COMRAM] int 
  6583 ;; Auto vars:     Size  Location     Type
  6584 ;;		None
  6585 ;; Return value:  Size  Location     Type
  6586 ;;		None               void
  6587 ;; Registers used:
  6588 ;;		wreg, status,2, status,0
  6589 ;; Tracked objects:
  6590 ;;		On entry : 0/0
  6591 ;;		On exit  : 0/0
  6592 ;;		Unchanged: 0/0
  6593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6594 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6596 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6597 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6598 ;;Total ram usage:       12 bytes
  6599 ;; Hardware stack levels used: 1
  6600 ;; Hardware stack levels required when called: 8
  6601 ;; This function calls:
  6602 ;;		Nothing
  6603 ;; This function is called by:
  6604 ;;		_efgtoa
  6605 ;; This function uses a non-reentrant model
  6606 ;;
  6607                           
  6608                           	psect	text19
  6609  004E78                     __ptext19:
  6610                           	callstack 0
  6611  004E78                     ___fleq:
  6612                           	callstack 16
  6613  004E78  0E00               	movlw	0
  6614  004E7A  1414               	andwf	___fleq@ff1^0,w,c
  6615  004E7C  6E1C               	movwf	??___fleq^0,c
  6616  004E7E  0E00               	movlw	0
  6617  004E80  1415               	andwf	(___fleq@ff1+1)^0,w,c
  6618  004E82  6E1D               	movwf	(??___fleq+1)^0,c
  6619  004E84  0E80               	movlw	128
  6620  004E86  1416               	andwf	(___fleq@ff1+2)^0,w,c
  6621  004E88  6E1E               	movwf	(??___fleq+2)^0,c
  6622  004E8A  0E7F               	movlw	127
  6623  004E8C  1417               	andwf	(___fleq@ff1+3)^0,w,c
  6624  004E8E  6E1F               	movwf	(??___fleq+3)^0,c
  6625  004E90  501C               	movf	??___fleq^0,w,c
  6626  004E92  101D               	iorwf	(??___fleq+1)^0,w,c
  6627  004E94  101E               	iorwf	(??___fleq+2)^0,w,c
  6628  004E96  101F               	iorwf	(??___fleq+3)^0,w,c
  6629  004E98  A4D8               	btfss	status,2,c
  6630  004E9A  EF51  F027         	goto	u8441
  6631  004E9E  EF53  F027         	goto	u8440
  6632  004EA2                     u8441:
  6633  004EA2  EF5B  F027         	goto	l8135
  6634  004EA6                     u8440:
  6635  004EA6  0E00               	movlw	0
  6636  004EA8  6E14               	movwf	___fleq@ff1^0,c
  6637  004EAA  0E00               	movlw	0
  6638  004EAC  6E15               	movwf	(___fleq@ff1+1)^0,c
  6639  004EAE  0E00               	movlw	0
  6640  004EB0  6E16               	movwf	(___fleq@ff1+2)^0,c
  6641  004EB2  0E00               	movlw	0
  6642  004EB4  6E17               	movwf	(___fleq@ff1+3)^0,c
  6643  004EB6                     l8135:
  6644  004EB6  0E00               	movlw	0
  6645  004EB8  1418               	andwf	___fleq@ff2^0,w,c
  6646  004EBA  6E1C               	movwf	??___fleq^0,c
  6647  004EBC  0E00               	movlw	0
  6648  004EBE  1419               	andwf	(___fleq@ff2+1)^0,w,c
  6649  004EC0  6E1D               	movwf	(??___fleq+1)^0,c
  6650  004EC2  0E80               	movlw	128
  6651  004EC4  141A               	andwf	(___fleq@ff2+2)^0,w,c
  6652  004EC6  6E1E               	movwf	(??___fleq+2)^0,c
  6653  004EC8  0E7F               	movlw	127
  6654  004ECA  141B               	andwf	(___fleq@ff2+3)^0,w,c
  6655  004ECC  6E1F               	movwf	(??___fleq+3)^0,c
  6656  004ECE  501C               	movf	??___fleq^0,w,c
  6657  004ED0  101D               	iorwf	(??___fleq+1)^0,w,c
  6658  004ED2  101E               	iorwf	(??___fleq+2)^0,w,c
  6659  004ED4  101F               	iorwf	(??___fleq+3)^0,w,c
  6660  004ED6  A4D8               	btfss	status,2,c
  6661  004ED8  EF70  F027         	goto	u8451
  6662  004EDC  EF72  F027         	goto	u8450
  6663  004EE0                     u8451:
  6664  004EE0  EF7A  F027         	goto	l8139
  6665  004EE4                     u8450:
  6666  004EE4  0E00               	movlw	0
  6667  004EE6  6E18               	movwf	___fleq@ff2^0,c
  6668  004EE8  0E00               	movlw	0
  6669  004EEA  6E19               	movwf	(___fleq@ff2+1)^0,c
  6670  004EEC  0E00               	movlw	0
  6671  004EEE  6E1A               	movwf	(___fleq@ff2+2)^0,c
  6672  004EF0  0E00               	movlw	0
  6673  004EF2  6E1B               	movwf	(___fleq@ff2+3)^0,c
  6674  004EF4                     l8139:
  6675  004EF4  5018               	movf	___fleq@ff2^0,w,c
  6676  004EF6  1814               	xorwf	___fleq@ff1^0,w,c
  6677  004EF8  E10F               	bnz	u8460
  6678  004EFA  5019               	movf	(___fleq@ff2+1)^0,w,c
  6679  004EFC  1815               	xorwf	(___fleq@ff1+1)^0,w,c
  6680  004EFE  E10C               	bnz	u8460
  6681  004F00  501A               	movf	(___fleq@ff2+2)^0,w,c
  6682  004F02  1816               	xorwf	(___fleq@ff1+2)^0,w,c
  6683  004F04  E109               	bnz	u8460
  6684  004F06  501B               	movf	(___fleq@ff2+3)^0,w,c
  6685  004F08  1817               	xorwf	(___fleq@ff1+3)^0,w,c
  6686  004F0A  B4D8               	btfsc	status,2,c
  6687  004F0C  EF8A  F027         	goto	u8461
  6688  004F10  EF8C  F027         	goto	u8460
  6689  004F14                     u8461:
  6690  004F14  EF8F  F027         	goto	l8143
  6691  004F18                     u8460:
  6692  004F18  90D8               	bcf	status,0,c
  6693  004F1A  EF90  F027         	goto	l1664
  6694  004F1E                     l8143:
  6695  004F1E  80D8               	bsf	status,0,c
  6696  004F20                     l1664:
  6697  004F20  0012               	return		;funcret
  6698  004F22                     __end_of___fleq:
  6699                           	callstack 0
  6700                           
  6701 ;; *************** function ___awmod *****************
  6702 ;; Defined at:
  6703 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  6704 ;; Parameters:    Size  Location     Type
  6705 ;;  dividend        2   19[COMRAM] int 
  6706 ;;  divisor         2   21[COMRAM] int 
  6707 ;; Auto vars:     Size  Location     Type
  6708 ;;  sign            1   24[COMRAM] unsigned char 
  6709 ;;  counter         1   23[COMRAM] unsigned char 
  6710 ;; Return value:  Size  Location     Type
  6711 ;;                  2   19[COMRAM] int 
  6712 ;; Registers used:
  6713 ;;		wreg, status,2, status,0
  6714 ;; Tracked objects:
  6715 ;;		On entry : 0/0
  6716 ;;		On exit  : 0/0
  6717 ;;		Unchanged: 0/0
  6718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6719 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6720 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6722 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6723 ;;Total ram usage:        6 bytes
  6724 ;; Hardware stack levels used: 1
  6725 ;; Hardware stack levels required when called: 8
  6726 ;; This function calls:
  6727 ;;		Nothing
  6728 ;; This function is called by:
  6729 ;;		_efgtoa
  6730 ;; This function uses a non-reentrant model
  6731 ;;
  6732                           
  6733                           	psect	text20
  6734  004DC8                     __ptext20:
  6735                           	callstack 0
  6736  004DC8                     ___awmod:
  6737                           	callstack 16
  6738  004DC8  0E00               	movlw	0
  6739  004DCA  6E19               	movwf	___awmod@sign^0,c
  6740  004DCC  BE15               	btfsc	(___awmod@dividend+1)^0,7,c
  6741  004DCE  EFED  F026         	goto	u8380
  6742  004DD2  EFEB  F026         	goto	u8381
  6743  004DD6                     u8381:
  6744  004DD6  EFF3  F026         	goto	l8103
  6745  004DDA                     u8380:
  6746  004DDA  6C14               	negf	___awmod@dividend^0,c
  6747  004DDC  1E15               	comf	(___awmod@dividend+1)^0,f,c
  6748  004DDE  B0D8               	btfsc	status,0,c
  6749  004DE0  2A15               	incf	(___awmod@dividend+1)^0,f,c
  6750  004DE2  0E01               	movlw	1
  6751  004DE4  6E19               	movwf	___awmod@sign^0,c
  6752  004DE6                     l8103:
  6753  004DE6  BE17               	btfsc	(___awmod@divisor+1)^0,7,c
  6754  004DE8  EFFA  F026         	goto	u8390
  6755  004DEC  EFF8  F026         	goto	u8391
  6756  004DF0                     u8391:
  6757  004DF0  EFFE  F026         	goto	l8107
  6758  004DF4                     u8390:
  6759  004DF4  6C16               	negf	___awmod@divisor^0,c
  6760  004DF6  1E17               	comf	(___awmod@divisor+1)^0,f,c
  6761  004DF8  B0D8               	btfsc	status,0,c
  6762  004DFA  2A17               	incf	(___awmod@divisor+1)^0,f,c
  6763  004DFC                     l8107:
  6764  004DFC  5016               	movf	___awmod@divisor^0,w,c
  6765  004DFE  1017               	iorwf	(___awmod@divisor+1)^0,w,c
  6766  004E00  B4D8               	btfsc	status,2,c
  6767  004E02  EF05  F027         	goto	u8401
  6768  004E06  EF07  F027         	goto	u8400
  6769  004E0A                     u8401:
  6770  004E0A  EF2B  F027         	goto	l8123
  6771  004E0E                     u8400:
  6772  004E0E  0E01               	movlw	1
  6773  004E10  6E18               	movwf	___awmod@counter^0,c
  6774  004E12  EF0F  F027         	goto	l8113
  6775  004E16                     l8111:
  6776  004E16  90D8               	bcf	status,0,c
  6777  004E18  3616               	rlcf	___awmod@divisor^0,f,c
  6778  004E1A  3617               	rlcf	(___awmod@divisor+1)^0,f,c
  6779  004E1C  2A18               	incf	___awmod@counter^0,f,c
  6780  004E1E                     l8113:
  6781  004E1E  AE17               	btfss	(___awmod@divisor+1)^0,7,c
  6782  004E20  EF14  F027         	goto	u8411
  6783  004E24  EF16  F027         	goto	u8410
  6784  004E28                     u8411:
  6785  004E28  EF0B  F027         	goto	l8111
  6786  004E2C                     u8410:
  6787  004E2C                     l8115:
  6788  004E2C  5016               	movf	___awmod@divisor^0,w,c
  6789  004E2E  5C14               	subwf	___awmod@dividend^0,w,c
  6790  004E30  5017               	movf	(___awmod@divisor+1)^0,w,c
  6791  004E32  5815               	subwfb	(___awmod@dividend+1)^0,w,c
  6792  004E34  A0D8               	btfss	status,0,c
  6793  004E36  EF1F  F027         	goto	u8421
  6794  004E3A  EF21  F027         	goto	u8420
  6795  004E3E                     u8421:
  6796  004E3E  EF25  F027         	goto	l8119
  6797  004E42                     u8420:
  6798  004E42  5016               	movf	___awmod@divisor^0,w,c
  6799  004E44  5E14               	subwf	___awmod@dividend^0,f,c
  6800  004E46  5017               	movf	(___awmod@divisor+1)^0,w,c
  6801  004E48  5A15               	subwfb	(___awmod@dividend+1)^0,f,c
  6802  004E4A                     l8119:
  6803  004E4A  90D8               	bcf	status,0,c
  6804  004E4C  3217               	rrcf	(___awmod@divisor+1)^0,f,c
  6805  004E4E  3216               	rrcf	___awmod@divisor^0,f,c
  6806  004E50  2E18               	decfsz	___awmod@counter^0,f,c
  6807  004E52  EF16  F027         	goto	l8115
  6808  004E56                     l8123:
  6809  004E56  5019               	movf	___awmod@sign^0,w,c
  6810  004E58  B4D8               	btfsc	status,2,c
  6811  004E5A  EF31  F027         	goto	u8431
  6812  004E5E  EF33  F027         	goto	u8430
  6813  004E62                     u8431:
  6814  004E62  EF37  F027         	goto	l8127
  6815  004E66                     u8430:
  6816  004E66  6C14               	negf	___awmod@dividend^0,c
  6817  004E68  1E15               	comf	(___awmod@dividend+1)^0,f,c
  6818  004E6A  B0D8               	btfsc	status,0,c
  6819  004E6C  2A15               	incf	(___awmod@dividend+1)^0,f,c
  6820  004E6E                     l8127:
  6821  004E6E  C014  F014         	movff	___awmod@dividend,?___awmod
  6822  004E72  C015  F015         	movff	___awmod@dividend+1,?___awmod+1
  6823  004E76  0012               	return		;funcret
  6824  004E78                     __end_of___awmod:
  6825                           	callstack 0
  6826                           
  6827 ;; *************** function _dtoa *****************
  6828 ;; Defined at:
  6829 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  6830 ;; Parameters:    Size  Location     Type
  6831 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  6832 ;;		 -> NULL(0), 
  6833 ;;  d               8    2[BANK0 ] long long 
  6834 ;; Auto vars:     Size  Location     Type
  6835 ;;  n               8   18[BANK0 ] long long 
  6836 ;;  i               2   26[BANK0 ] int 
  6837 ;;  s               2   16[BANK0 ] int 
  6838 ;;  w               2   14[BANK0 ] int 
  6839 ;;  p               2   12[BANK0 ] int 
  6840 ;; Return value:  Size  Location     Type
  6841 ;;                  2    0[BANK0 ] int 
  6842 ;; Registers used:
  6843 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6844 ;; Tracked objects:
  6845 ;;		On entry : 0/0
  6846 ;;		On exit  : 0/0
  6847 ;;		Unchanged: 0/0
  6848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6849 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6850 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6851 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6852 ;;      Totals:         8      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6853 ;;Total ram usage:       36 bytes
  6854 ;; Hardware stack levels used: 1
  6855 ;; Hardware stack levels required when called: 13
  6856 ;; This function calls:
  6857 ;;		___aodiv
  6858 ;;		___aomod
  6859 ;;		_abs
  6860 ;;		_pad
  6861 ;; This function is called by:
  6862 ;;		_vfpfcnvrt
  6863 ;; This function uses a non-reentrant model
  6864 ;;
  6865                           
  6866                           	psect	text21
  6867  003202                     __ptext21:
  6868                           	callstack 0
  6869  003202                     _dtoa:
  6870                           	callstack 12
  6871  003202                     
  6872                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  6873  003202  C062  F072         	movff	dtoa@d,dtoa@n
  6874  003206  C063  F073         	movff	dtoa@d+1,dtoa@n+1
  6875  00320A  C064  F074         	movff	dtoa@d+2,dtoa@n+2
  6876  00320E  C065  F075         	movff	dtoa@d+3,dtoa@n+3
  6877  003212  C066  F076         	movff	dtoa@d+4,dtoa@n+4
  6878  003216  C067  F077         	movff	dtoa@d+5,dtoa@n+5
  6879  00321A  C068  F078         	movff	dtoa@d+6,dtoa@n+6
  6880  00321E  C069  F079         	movff	dtoa@d+7,dtoa@n+7
  6881  003222                     
  6882                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  6883  003222  0100               	movlb	0	; () banked
  6884  003224  BF79               	btfsc	(dtoa@n+7)& (0+255),7,b
  6885  003226  EF17  F019         	goto	u8871
  6886  00322A  EF1A  F019         	goto	u8870
  6887  00322E                     u8871:
  6888  00322E  0E01               	movlw	1
  6889  003230  EF1B  F019         	goto	u8880
  6890  003234                     u8870:
  6891  003234  0E00               	movlw	0
  6892  003236                     u8880:
  6893  003236  6F70               	movwf	dtoa@s& (0+255),b
  6894  003238  6B71               	clrf	(dtoa@s+1)& (0+255),b
  6895                           
  6896                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  6897  00323A  5170               	movf	dtoa@s& (0+255),w,b
  6898  00323C  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  6899  00323E  B4D8               	btfsc	status,2,c
  6900  003240  EF24  F019         	goto	u8891
  6901  003244  EF26  F019         	goto	u8890
  6902  003248                     u8891:
  6903  003248  EF36  F019         	goto	l8317
  6904  00324C                     u8890:
  6905  00324C                     
  6906                           ; BSR set to: 0
  6907                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  6908  00324C  1F79               	comf	(dtoa@n+7)& (0+255),f,b
  6909  00324E  1F78               	comf	(dtoa@n+6)& (0+255),f,b
  6910  003250  1F77               	comf	(dtoa@n+5)& (0+255),f,b
  6911  003252  1F76               	comf	(dtoa@n+4)& (0+255),f,b
  6912  003254  1F75               	comf	(dtoa@n+3)& (0+255),f,b
  6913  003256  1F74               	comf	(dtoa@n+2)& (0+255),f,b
  6914  003258  1F73               	comf	(dtoa@n+1)& (0+255),f,b
  6915  00325A  6D72               	negf	dtoa@n& (0+255),b
  6916  00325C  0E00               	movlw	0
  6917  00325E  2373               	addwfc	(dtoa@n+1)& (0+255),f,b
  6918  003260  2374               	addwfc	(dtoa@n+2)& (0+255),f,b
  6919  003262  2375               	addwfc	(dtoa@n+3)& (0+255),f,b
  6920  003264  2376               	addwfc	(dtoa@n+4)& (0+255),f,b
  6921  003266  2377               	addwfc	(dtoa@n+5)& (0+255),f,b
  6922  003268  2378               	addwfc	(dtoa@n+6)& (0+255),f,b
  6923  00326A  2379               	addwfc	(dtoa@n+7)& (0+255),f,b
  6924  00326C                     l8317:
  6925                           
  6926                           ; BSR set to: 0
  6927                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  6928  00326C  BE3B               	btfsc	(_prec+1)^0,7,c
  6929  00326E  EF3B  F019         	goto	u8901
  6930  003272  EF3D  F019         	goto	u8900
  6931  003276                     u8901:
  6932  003276  EF3E  F019         	goto	l8321
  6933  00327A                     u8900:
  6934  00327A                     
  6935                           ; BSR set to: 0
  6936                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  6937  00327A  923C               	bcf	_flags^0,1,c
  6938  00327C                     l8321:
  6939                           
  6940                           ; BSR set to: 0
  6941                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  6942  00327C  BE3B               	btfsc	(_prec+1)^0,7,c
  6943  00327E  EF4B  F019         	goto	u8910
  6944  003282  503B               	movf	(_prec+1)^0,w,c
  6945  003284  E106               	bnz	u8911
  6946  003286  043A               	decf	_prec^0,w,c
  6947  003288  B0D8               	btfsc	status,0,c
  6948  00328A  EF49  F019         	goto	u8911
  6949  00328E  EF4B  F019         	goto	u8910
  6950  003292                     u8911:
  6951  003292  EF51  F019         	goto	l2133
  6952  003296                     u8910:
  6953  003296                     
  6954                           ; BSR set to: 0
  6955  003296  0E00               	movlw	0
  6956  003298  6F6D               	movwf	(dtoa@p+1)& (0+255),b
  6957  00329A  0E01               	movlw	1
  6958  00329C  6F6C               	movwf	dtoa@p& (0+255),b
  6959  00329E  EF55  F019         	goto	l2135
  6960  0032A2                     l2133:
  6961                           
  6962                           ; BSR set to: 0
  6963  0032A2  C03A  F06C         	movff	_prec,dtoa@p
  6964  0032A6  C03B  F06D         	movff	_prec+1,dtoa@p+1
  6965  0032AA                     l2135:
  6966                           
  6967                           ; BSR set to: 0
  6968                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  6969  0032AA  C0E5  F06E         	movff	_width,dtoa@w
  6970  0032AE  C0E6  F06F         	movff	_width+1,dtoa@w+1
  6971  0032B2                     
  6972                           ; BSR set to: 0
  6973                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  6974  0032B2  5170               	movf	dtoa@s& (0+255),w,b
  6975  0032B4  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  6976  0032B6  A4D8               	btfss	status,2,c
  6977  0032B8  EF60  F019         	goto	u8921
  6978  0032BC  EF62  F019         	goto	u8920
  6979  0032C0                     u8921:
  6980  0032C0  EF69  F019         	goto	l8329
  6981  0032C4                     u8920:
  6982  0032C4                     
  6983                           ; BSR set to: 0
  6984  0032C4  A43C               	btfss	_flags^0,2,c
  6985  0032C6  EF67  F019         	goto	u8931
  6986  0032CA  EF69  F019         	goto	u8930
  6987  0032CE                     u8931:
  6988  0032CE  EF6C  F019         	goto	l8331
  6989  0032D2                     u8930:
  6990  0032D2                     l8329:
  6991                           
  6992                           ; BSR set to: 0
  6993                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  6994  0032D2  076E               	decf	dtoa@w& (0+255),f,b
  6995  0032D4  A0D8               	btfss	status,0,c
  6996  0032D6  076F               	decf	(dtoa@w+1)& (0+255),f,b
  6997  0032D8                     l8331:
  6998                           
  6999                           ; BSR set to: 0
  7000                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  7001  0032D8  0E00               	movlw	0
  7002  0032DA  6F7B               	movwf	(dtoa@i+1)& (0+255),b
  7003  0032DC  0E4F               	movlw	79
  7004  0032DE  6F7A               	movwf	dtoa@i& (0+255),b
  7005  0032E0                     
  7006                           ; BSR set to: 0
  7007                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  7008  0032E0  0E00               	movlw	0
  7009  0032E2  0101               	movlb	1	; () banked
  7010  0032E4  6F89               	movwf	(_dbuf+79)& (0+255),b
  7011                           
  7012                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7013  0032E6  EFF2  F019         	goto	l8345
  7014  0032EA                     l8335:
  7015                           
  7016                           ; BSR set to: 0
  7017                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  7018  0032EA  077A               	decf	dtoa@i& (0+255),f,b
  7019  0032EC  A0D8               	btfss	status,0,c
  7020  0032EE  077B               	decf	(dtoa@i+1)& (0+255),f,b
  7021  0032F0                     
  7022                           ; BSR set to: 0
  7023                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  7024  0032F0  0E3A               	movlw	low _dbuf
  7025  0032F2  257A               	addwf	dtoa@i& (0+255),w,b
  7026  0032F4  6ED9               	movwf	fsr2l,c
  7027  0032F6  0E01               	movlw	high _dbuf
  7028  0032F8  217B               	addwfc	(dtoa@i+1)& (0+255),w,b
  7029  0032FA  6EDA               	movwf	fsr2h,c
  7030  0032FC  C072  F014         	movff	dtoa@n,___aomod@dividend
  7031  003300  C073  F015         	movff	dtoa@n+1,___aomod@dividend+1
  7032  003304  C074  F016         	movff	dtoa@n+2,___aomod@dividend+2
  7033  003308  C075  F017         	movff	dtoa@n+3,___aomod@dividend+3
  7034  00330C  C076  F018         	movff	dtoa@n+4,___aomod@dividend+4
  7035  003310  C077  F019         	movff	dtoa@n+5,___aomod@dividend+5
  7036  003314  C078  F01A         	movff	dtoa@n+6,___aomod@dividend+6
  7037  003318  C079  F01B         	movff	dtoa@n+7,___aomod@dividend+7
  7038  00331C  0E0A               	movlw	10
  7039  00331E  6E1C               	movwf	___aomod@divisor^0,c
  7040  003320  0E00               	movlw	0
  7041  003322  6E1D               	movwf	(___aomod@divisor+1)^0,c
  7042  003324  0E00               	movlw	0
  7043  003326  6E1E               	movwf	(___aomod@divisor+2)^0,c
  7044  003328  0E00               	movlw	0
  7045  00332A  6E1F               	movwf	(___aomod@divisor+3)^0,c
  7046  00332C  0E00               	movlw	0
  7047  00332E  6E20               	movwf	(___aomod@divisor+4)^0,c
  7048  003330  0E00               	movlw	0
  7049  003332  6E21               	movwf	(___aomod@divisor+5)^0,c
  7050  003334  0E00               	movlw	0
  7051  003336  6E22               	movwf	(___aomod@divisor+6)^0,c
  7052  003338  0E00               	movlw	0
  7053  00333A  6E23               	movwf	(___aomod@divisor+7)^0,c
  7054  00333C  ECE7  F01F         	call	___aomod	;wreg free
  7055  003340  C014  F031         	movff	?___aomod,??_dtoa
  7056  003344  C015  F032         	movff	?___aomod+1,??_dtoa+1
  7057  003348  C016  F033         	movff	?___aomod+2,??_dtoa+2
  7058  00334C  C017  F034         	movff	?___aomod+3,??_dtoa+3
  7059  003350  C018  F035         	movff	?___aomod+4,??_dtoa+4
  7060  003354  C019  F036         	movff	?___aomod+5,??_dtoa+5
  7061  003358  C01A  F037         	movff	?___aomod+6,??_dtoa+6
  7062  00335C  C01B  F038         	movff	?___aomod+7,??_dtoa+7
  7063  003360  C031  F026         	movff	??_dtoa,abs@a
  7064  003364  C033  F027         	movff	??_dtoa+2,abs@a+1
  7065  003368  EC1B  F02B         	call	_abs	;wreg free
  7066  00336C  5026               	movf	?_abs^0,w,c
  7067  00336E  0F30               	addlw	48
  7068  003370  6EDF               	movwf	indf2,c
  7069  003372                     
  7070                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  7071  003372  0100               	movlb	0	; () banked
  7072  003374  076C               	decf	dtoa@p& (0+255),f,b
  7073  003376  A0D8               	btfss	status,0,c
  7074  003378  076D               	decf	(dtoa@p+1)& (0+255),f,b
  7075  00337A                     
  7076                           ; BSR set to: 0
  7077                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  7078  00337A  076E               	decf	dtoa@w& (0+255),f,b
  7079  00337C  A0D8               	btfss	status,0,c
  7080  00337E  076F               	decf	(dtoa@w+1)& (0+255),f,b
  7081  003380                     
  7082                           ; BSR set to: 0
  7083                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  7084  003380  C072  F014         	movff	dtoa@n,___aodiv@dividend
  7085  003384  C073  F015         	movff	dtoa@n+1,___aodiv@dividend+1
  7086  003388  C074  F016         	movff	dtoa@n+2,___aodiv@dividend+2
  7087  00338C  C075  F017         	movff	dtoa@n+3,___aodiv@dividend+3
  7088  003390  C076  F018         	movff	dtoa@n+4,___aodiv@dividend+4
  7089  003394  C077  F019         	movff	dtoa@n+5,___aodiv@dividend+5
  7090  003398  C078  F01A         	movff	dtoa@n+6,___aodiv@dividend+6
  7091  00339C  C079  F01B         	movff	dtoa@n+7,___aodiv@dividend+7
  7092  0033A0  0E0A               	movlw	10
  7093  0033A2  6E1C               	movwf	___aodiv@divisor^0,c
  7094  0033A4  0E00               	movlw	0
  7095  0033A6  6E1D               	movwf	(___aodiv@divisor+1)^0,c
  7096  0033A8  0E00               	movlw	0
  7097  0033AA  6E1E               	movwf	(___aodiv@divisor+2)^0,c
  7098  0033AC  0E00               	movlw	0
  7099  0033AE  6E1F               	movwf	(___aodiv@divisor+3)^0,c
  7100  0033B0  0E00               	movlw	0
  7101  0033B2  6E20               	movwf	(___aodiv@divisor+4)^0,c
  7102  0033B4  0E00               	movlw	0
  7103  0033B6  6E21               	movwf	(___aodiv@divisor+5)^0,c
  7104  0033B8  0E00               	movlw	0
  7105  0033BA  6E22               	movwf	(___aodiv@divisor+6)^0,c
  7106  0033BC  0E00               	movlw	0
  7107  0033BE  6E23               	movwf	(___aodiv@divisor+7)^0,c
  7108  0033C0  EC23  F01F         	call	___aodiv	;wreg free
  7109  0033C4  C014  F072         	movff	?___aodiv,dtoa@n
  7110  0033C8  C015  F073         	movff	?___aodiv+1,dtoa@n+1
  7111  0033CC  C016  F074         	movff	?___aodiv+2,dtoa@n+2
  7112  0033D0  C017  F075         	movff	?___aodiv+3,dtoa@n+3
  7113  0033D4  C018  F076         	movff	?___aodiv+4,dtoa@n+4
  7114  0033D8  C019  F077         	movff	?___aodiv+5,dtoa@n+5
  7115  0033DC  C01A  F078         	movff	?___aodiv+6,dtoa@n+6
  7116  0033E0  C01B  F079         	movff	?___aodiv+7,dtoa@n+7
  7117  0033E4                     l8345:
  7118                           
  7119                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7120  0033E4  0100               	movlb	0	; () banked
  7121  0033E6  BF7B               	btfsc	(dtoa@i+1)& (0+255),7,b
  7122  0033E8  EFFE  F019         	goto	u8941
  7123  0033EC  517B               	movf	(dtoa@i+1)& (0+255),w,b
  7124  0033EE  E108               	bnz	u8940
  7125  0033F0  057A               	decf	dtoa@i& (0+255),w,b
  7126  0033F2  A0D8               	btfss	status,0,c
  7127  0033F4  EFFE  F019         	goto	u8941
  7128  0033F8  EF00  F01A         	goto	u8940
  7129  0033FC                     u8941:
  7130  0033FC  EF30  F01A         	goto	l8355
  7131  003400                     u8940:
  7132  003400                     
  7133                           ; BSR set to: 0
  7134  003400  5172               	movf	dtoa@n& (0+255),w,b
  7135  003402  1173               	iorwf	(dtoa@n+1)& (0+255),w,b
  7136  003404  1174               	iorwf	(dtoa@n+2)& (0+255),w,b
  7137  003406  1175               	iorwf	(dtoa@n+3)& (0+255),w,b
  7138  003408  1176               	iorwf	(dtoa@n+4)& (0+255),w,b
  7139  00340A  1177               	iorwf	(dtoa@n+5)& (0+255),w,b
  7140  00340C  1178               	iorwf	(dtoa@n+6)& (0+255),w,b
  7141  00340E  1179               	iorwf	(dtoa@n+7)& (0+255),w,b
  7142  003410  A4D8               	btfss	status,2,c
  7143  003412  EF0D  F01A         	goto	u8951
  7144  003416  EF0F  F01A         	goto	u8950
  7145  00341A                     u8951:
  7146  00341A  EF75  F019         	goto	l8335
  7147  00341E                     u8950:
  7148  00341E                     
  7149                           ; BSR set to: 0
  7150  00341E  BF6D               	btfsc	(dtoa@p+1)& (0+255),7,b
  7151  003420  EF1C  F01A         	goto	u8960
  7152  003424  516D               	movf	(dtoa@p+1)& (0+255),w,b
  7153  003426  E106               	bnz	u8961
  7154  003428  056C               	decf	dtoa@p& (0+255),w,b
  7155  00342A  B0D8               	btfsc	status,0,c
  7156  00342C  EF1A  F01A         	goto	u8961
  7157  003430  EF1C  F01A         	goto	u8960
  7158  003434                     u8961:
  7159  003434  EF75  F019         	goto	l8335
  7160  003438                     u8960:
  7161  003438                     
  7162                           ; BSR set to: 0
  7163  003438  BF6F               	btfsc	(dtoa@w+1)& (0+255),7,b
  7164  00343A  EF27  F01A         	goto	u8971
  7165  00343E  516F               	movf	(dtoa@w+1)& (0+255),w,b
  7166  003440  E108               	bnz	u8970
  7167  003442  056E               	decf	dtoa@w& (0+255),w,b
  7168  003444  A0D8               	btfss	status,0,c
  7169  003446  EF27  F01A         	goto	u8971
  7170  00344A  EF29  F01A         	goto	u8970
  7171  00344E                     u8971:
  7172  00344E  EF30  F01A         	goto	l8355
  7173  003452                     u8970:
  7174  003452                     
  7175                           ; BSR set to: 0
  7176  003452  B23C               	btfsc	_flags^0,1,c
  7177  003454  EF2E  F01A         	goto	u8981
  7178  003458  EF30  F01A         	goto	u8980
  7179  00345C                     u8981:
  7180  00345C  EF75  F019         	goto	l8335
  7181  003460                     u8980:
  7182  003460                     l8355:
  7183                           
  7184                           ; BSR set to: 0
  7185                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  7186  003460  5170               	movf	dtoa@s& (0+255),w,b
  7187  003462  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  7188  003464  A4D8               	btfss	status,2,c
  7189  003466  EF37  F01A         	goto	u8991
  7190  00346A  EF39  F01A         	goto	u8990
  7191  00346E                     u8991:
  7192  00346E  EF40  F01A         	goto	l8359
  7193  003472                     u8990:
  7194  003472                     
  7195                           ; BSR set to: 0
  7196  003472  A43C               	btfss	_flags^0,2,c
  7197  003474  EF3E  F01A         	goto	u9001
  7198  003478  EF40  F01A         	goto	u9000
  7199  00347C                     u9001:
  7200  00347C  EF5F  F01A         	goto	l8369
  7201  003480                     u9000:
  7202  003480                     l8359:
  7203                           
  7204                           ; BSR set to: 0
  7205                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  7206  003480  077A               	decf	dtoa@i& (0+255),f,b
  7207  003482  A0D8               	btfss	status,0,c
  7208  003484  077B               	decf	(dtoa@i+1)& (0+255),f,b
  7209  003486                     
  7210                           ; BSR set to: 0
  7211                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  7212  003486  5170               	movf	dtoa@s& (0+255),w,b
  7213  003488  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  7214  00348A  A4D8               	btfss	status,2,c
  7215  00348C  EF4A  F01A         	goto	u9011
  7216  003490  EF4C  F01A         	goto	u9010
  7217  003494                     u9011:
  7218  003494  EF52  F01A         	goto	l8365
  7219  003498                     u9010:
  7220  003498                     
  7221                           ; BSR set to: 0
  7222  003498  0E00               	movlw	0
  7223  00349A  6F6B               	movwf	(_dtoa$3535+1)& (0+255),b
  7224  00349C  0E2B               	movlw	43
  7225  00349E  6F6A               	movwf	_dtoa$3535& (0+255),b
  7226  0034A0  EF56  F01A         	goto	l8367
  7227  0034A4                     l8365:
  7228                           
  7229                           ; BSR set to: 0
  7230  0034A4  0E00               	movlw	0
  7231  0034A6  6F6B               	movwf	(_dtoa$3535+1)& (0+255),b
  7232  0034A8  0E2D               	movlw	45
  7233  0034AA  6F6A               	movwf	_dtoa$3535& (0+255),b
  7234  0034AC                     l8367:
  7235                           
  7236                           ; BSR set to: 0
  7237  0034AC  0E3A               	movlw	low _dbuf
  7238  0034AE  257A               	addwf	dtoa@i& (0+255),w,b
  7239  0034B0  6ED9               	movwf	fsr2l,c
  7240  0034B2  0E01               	movlw	high _dbuf
  7241  0034B4  217B               	addwfc	(dtoa@i+1)& (0+255),w,b
  7242  0034B6  6EDA               	movwf	fsr2h,c
  7243  0034B8  0060  F1AB  FFDF   	movff	_dtoa$3535,indf2
  7244  0034BE                     l8369:
  7245                           
  7246                           ; BSR set to: 0
  7247                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  7248  0034BE  C060  F026         	movff	dtoa@fp,pad@fp
  7249  0034C2  C061  F027         	movff	dtoa@fp+1,pad@fp+1
  7250  0034C6  0E3A               	movlw	low _dbuf
  7251  0034C8  257A               	addwf	dtoa@i& (0+255),w,b
  7252  0034CA  6E28               	movwf	pad@buf^0,c
  7253  0034CC  0E01               	movlw	high _dbuf
  7254  0034CE  217B               	addwfc	(dtoa@i+1)& (0+255),w,b
  7255  0034D0  6E29               	movwf	(pad@buf+1)^0,c
  7256  0034D2  C06E  F02A         	movff	dtoa@w,pad@p
  7257  0034D6  C06F  F02B         	movff	dtoa@w+1,pad@p+1
  7258  0034DA  EC23  F026         	call	_pad	;wreg free
  7259  0034DE  C026  F060         	movff	?_pad,?_dtoa
  7260  0034E2  C027  F061         	movff	?_pad+1,?_dtoa+1
  7261  0034E6  0012               	return		;funcret
  7262  0034E8                     __end_of_dtoa:
  7263                           	callstack 0
  7264                           
  7265 ;; *************** function _pad *****************
  7266 ;; Defined at:
  7267 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  7268 ;; Parameters:    Size  Location     Type
  7269 ;;  fp              2   37[COMRAM] PTR struct _IO_FILE
  7270 ;;		 -> NULL(0), 
  7271 ;;  buf             2   39[COMRAM] PTR unsigned char 
  7272 ;;		 -> dbuf(80), 
  7273 ;;  p               2   41[COMRAM] int 
  7274 ;; Auto vars:     Size  Location     Type
  7275 ;;  w               2   46[COMRAM] int 
  7276 ;;  i               2   44[COMRAM] int 
  7277 ;; Return value:  Size  Location     Type
  7278 ;;                  2   37[COMRAM] int 
  7279 ;; Registers used:
  7280 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7281 ;; Tracked objects:
  7282 ;;		On entry : 0/0
  7283 ;;		On exit  : 0/0
  7284 ;;		Unchanged: 0/0
  7285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7286 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7287 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7288 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7289 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7290 ;;Total ram usage:       11 bytes
  7291 ;; Hardware stack levels used: 1
  7292 ;; Hardware stack levels required when called: 12
  7293 ;; This function calls:
  7294 ;;		_fputc
  7295 ;;		_fputs
  7296 ;;		_strlen
  7297 ;; This function is called by:
  7298 ;;		_dtoa
  7299 ;;		_efgtoa
  7300 ;; This function uses a non-reentrant model
  7301 ;;
  7302                           
  7303                           	psect	text22
  7304  004C46                     __ptext22:
  7305                           	callstack 0
  7306  004C46                     _pad:
  7307                           	callstack 12
  7308  004C46                     
  7309                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  7310  004C46  A03C               	btfss	_flags^0,0,c
  7311  004C48  EF28  F026         	goto	u8601
  7312  004C4C  EF2A  F026         	goto	u8600
  7313  004C50                     u8601:
  7314  004C50  EF34  F026         	goto	l8225
  7315  004C54                     u8600:
  7316  004C54                     
  7317                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  7318  004C54  C028  F01F         	movff	pad@buf,fputs@s
  7319  004C58  C029  F020         	movff	pad@buf+1,fputs@s+1
  7320  004C5C  C026  F021         	movff	pad@fp,fputs@fp
  7321  004C60  C027  F022         	movff	pad@fp+1,fputs@fp+1
  7322  004C64  ECD7  F02A         	call	_fputs	;wreg free
  7323  004C68                     l8225:
  7324                           
  7325                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  7326  004C68  BE2B               	btfsc	(pad@p+1)^0,7,c
  7327  004C6A  EF39  F026         	goto	u8611
  7328  004C6E  EF3B  F026         	goto	u8610
  7329  004C72                     u8611:
  7330  004C72  EF41  F026         	goto	l8229
  7331  004C76                     u8610:
  7332  004C76  C02A  F02F         	movff	pad@p,pad@w
  7333  004C7A  C02B  F030         	movff	pad@p+1,pad@w+1
  7334  004C7E  EF45  F026         	goto	l2122
  7335  004C82                     l8229:
  7336  004C82  0E00               	movlw	0
  7337  004C84  6E30               	movwf	(pad@w+1)^0,c
  7338  004C86  0E00               	movlw	0
  7339  004C88  6E2F               	movwf	pad@w^0,c
  7340  004C8A                     l2122:
  7341                           
  7342                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  7343  004C8A  0E00               	movlw	0
  7344  004C8C  6E2E               	movwf	(pad@i+1)^0,c
  7345  004C8E  0E00               	movlw	0
  7346  004C90  6E2D               	movwf	pad@i^0,c
  7347                           
  7348                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7349  004C92  EF57  F026         	goto	l8235
  7350  004C96                     l8231:
  7351                           
  7352                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  7353  004C96  0E00               	movlw	0
  7354  004C98  6E17               	movwf	(fputc@c+1)^0,c
  7355  004C9A  0E20               	movlw	32
  7356  004C9C  6E16               	movwf	fputc@c^0,c
  7357  004C9E  C026  F018         	movff	pad@fp,fputc@fp
  7358  004CA2  C027  F019         	movff	pad@fp+1,fputc@fp+1
  7359  004CA6  ECE3  F027         	call	_fputc	;wreg free
  7360  004CAA                     
  7361                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  7362  004CAA  4A2D               	infsnz	pad@i^0,f,c
  7363  004CAC  2A2E               	incf	(pad@i+1)^0,f,c
  7364  004CAE                     l8235:
  7365                           
  7366                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7367  004CAE  502F               	movf	pad@w^0,w,c
  7368  004CB0  5C2D               	subwf	pad@i^0,w,c
  7369  004CB2  502E               	movf	(pad@i+1)^0,w,c
  7370  004CB4  0A80               	xorlw	128
  7371  004CB6  6E2C               	movwf	??_pad^0,c
  7372  004CB8  5030               	movf	(pad@w+1)^0,w,c
  7373  004CBA  0A80               	xorlw	128
  7374  004CBC  582C               	subwfb	??_pad^0,w,c
  7375  004CBE  A0D8               	btfss	status,0,c
  7376  004CC0  EF64  F026         	goto	u8621
  7377  004CC4  EF66  F026         	goto	u8620
  7378  004CC8                     u8621:
  7379  004CC8  EF4B  F026         	goto	l8231
  7380  004CCC                     u8620:
  7381  004CCC                     
  7382                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  7383  004CCC  B03C               	btfsc	_flags^0,0,c
  7384  004CCE  EF6B  F026         	goto	u8631
  7385  004CD2  EF6D  F026         	goto	u8630
  7386  004CD6                     u8631:
  7387  004CD6  EF77  F026         	goto	l8239
  7388  004CDA                     u8630:
  7389  004CDA                     
  7390                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  7391  004CDA  C028  F01F         	movff	pad@buf,fputs@s
  7392  004CDE  C029  F020         	movff	pad@buf+1,fputs@s+1
  7393  004CE2  C026  F021         	movff	pad@fp,fputs@fp
  7394  004CE6  C027  F022         	movff	pad@fp+1,fputs@fp+1
  7395  004CEA  ECD7  F02A         	call	_fputs	;wreg free
  7396  004CEE                     l8239:
  7397                           
  7398                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  7399  004CEE  C028  F014         	movff	pad@buf,strlen@s
  7400  004CF2  C029  F015         	movff	pad@buf+1,strlen@s+1
  7401  004CF6  EC3B  F02B         	call	_strlen	;wreg free
  7402  004CFA  502F               	movf	pad@w^0,w,c
  7403  004CFC  2414               	addwf	?_strlen^0,w,c
  7404  004CFE  6E26               	movwf	?_pad^0,c
  7405  004D00  5030               	movf	(pad@w+1)^0,w,c
  7406  004D02  2015               	addwfc	(?_strlen+1)^0,w,c
  7407  004D04  6E27               	movwf	(?_pad+1)^0,c
  7408  004D06  0012               	return		;funcret
  7409  004D08                     __end_of_pad:
  7410                           	callstack 0
  7411                           
  7412 ;; *************** function _strlen *****************
  7413 ;; Defined at:
  7414 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  7415 ;; Parameters:    Size  Location     Type
  7416 ;;  s               2   19[COMRAM] PTR const unsigned char 
  7417 ;;		 -> dbuf(80), 
  7418 ;; Auto vars:     Size  Location     Type
  7419 ;;  a               2   21[COMRAM] PTR const unsigned char 
  7420 ;;		 -> dbuf(80), 
  7421 ;; Return value:  Size  Location     Type
  7422 ;;                  2   19[COMRAM] unsigned int 
  7423 ;; Registers used:
  7424 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7425 ;; Tracked objects:
  7426 ;;		On entry : 0/0
  7427 ;;		On exit  : 0/0
  7428 ;;		Unchanged: 0/0
  7429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7430 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7431 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7433 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7434 ;;Total ram usage:        4 bytes
  7435 ;; Hardware stack levels used: 1
  7436 ;; Hardware stack levels required when called: 8
  7437 ;; This function calls:
  7438 ;;		Nothing
  7439 ;; This function is called by:
  7440 ;;		_pad
  7441 ;; This function uses a non-reentrant model
  7442 ;;
  7443                           
  7444                           	psect	text23
  7445  005676                     __ptext23:
  7446                           	callstack 0
  7447  005676                     _strlen:
  7448                           	callstack 15
  7449  005676  C014  F016         	movff	strlen@s,strlen@a
  7450  00567A  C015  F017         	movff	strlen@s+1,strlen@a+1
  7451  00567E  EF43  F02B         	goto	l7687
  7452  005682                     l7685:
  7453  005682  4A14               	infsnz	strlen@s^0,f,c
  7454  005684  2A15               	incf	(strlen@s+1)^0,f,c
  7455  005686                     l7687:
  7456  005686  0060  F053  FFD9   	movff	strlen@s,fsr2l
  7457  00568C  0060  F057  FFDA   	movff	strlen@s+1,fsr2h
  7458  005692  50DF               	movf	indf2,w,c
  7459  005694  A4D8               	btfss	status,2,c
  7460  005696  EF4F  F02B         	goto	u7741
  7461  00569A  EF51  F02B         	goto	u7740
  7462  00569E                     u7741:
  7463  00569E  EF41  F02B         	goto	l7685
  7464  0056A2                     u7740:
  7465  0056A2  5016               	movf	strlen@a^0,w,c
  7466  0056A4  5C14               	subwf	strlen@s^0,w,c
  7467  0056A6  6E14               	movwf	?_strlen^0,c
  7468  0056A8  5017               	movf	(strlen@a+1)^0,w,c
  7469  0056AA  5815               	subwfb	(strlen@s+1)^0,w,c
  7470  0056AC  6E15               	movwf	(?_strlen+1)^0,c
  7471  0056AE  0012               	return		;funcret
  7472  0056B0                     __end_of_strlen:
  7473                           	callstack 0
  7474                           
  7475 ;; *************** function _fputs *****************
  7476 ;; Defined at:
  7477 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  7478 ;; Parameters:    Size  Location     Type
  7479 ;;  s               2   30[COMRAM] PTR const unsigned char 
  7480 ;;		 -> dbuf(80), 
  7481 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  7482 ;;		 -> NULL(0), 
  7483 ;; Auto vars:     Size  Location     Type
  7484 ;;  i               2   35[COMRAM] int 
  7485 ;;  c               1   34[COMRAM] unsigned char 
  7486 ;; Return value:  Size  Location     Type
  7487 ;;                  2   30[COMRAM] int 
  7488 ;; Registers used:
  7489 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7490 ;; Tracked objects:
  7491 ;;		On entry : 0/0
  7492 ;;		On exit  : 0/0
  7493 ;;		Unchanged: 0/0
  7494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7495 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7496 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7498 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7499 ;;Total ram usage:        7 bytes
  7500 ;; Hardware stack levels used: 1
  7501 ;; Hardware stack levels required when called: 11
  7502 ;; This function calls:
  7503 ;;		_fputc
  7504 ;; This function is called by:
  7505 ;;		_pad
  7506 ;; This function uses a non-reentrant model
  7507 ;;
  7508                           
  7509                           	psect	text24
  7510  0055AE                     __ptext24:
  7511                           	callstack 0
  7512  0055AE                     _fputs:
  7513                           	callstack 12
  7514  0055AE  0E00               	movlw	0
  7515  0055B0  6E25               	movwf	(fputs@i+1)^0,c
  7516  0055B2  0E00               	movlw	0
  7517  0055B4  6E24               	movwf	fputs@i^0,c
  7518  0055B6  EFE8  F02A         	goto	l7681
  7519  0055BA                     l7677:
  7520  0055BA  C023  F016         	movff	fputs@c,fputc@c
  7521  0055BE  6A17               	clrf	(fputc@c+1)^0,c
  7522  0055C0  C021  F018         	movff	fputs@fp,fputc@fp
  7523  0055C4  C022  F019         	movff	fputs@fp+1,fputc@fp+1
  7524  0055C8  ECE3  F027         	call	_fputc	;wreg free
  7525  0055CC  4A24               	infsnz	fputs@i^0,f,c
  7526  0055CE  2A25               	incf	(fputs@i+1)^0,f,c
  7527  0055D0                     l7681:
  7528  0055D0  5024               	movf	fputs@i^0,w,c
  7529  0055D2  241F               	addwf	fputs@s^0,w,c
  7530  0055D4  6ED9               	movwf	fsr2l,c
  7531  0055D6  5025               	movf	(fputs@i+1)^0,w,c
  7532  0055D8  2020               	addwfc	(fputs@s+1)^0,w,c
  7533  0055DA  6EDA               	movwf	fsr2h,c
  7534  0055DC  50DF               	movf	indf2,w,c
  7535  0055DE  6E23               	movwf	fputs@c^0,c
  7536  0055E0  5023               	movf	fputs@c^0,w,c
  7537  0055E2  A4D8               	btfss	status,2,c
  7538  0055E4  EFF6  F02A         	goto	u7731
  7539  0055E8  EFF8  F02A         	goto	u7730
  7540  0055EC                     u7731:
  7541  0055EC  EFDD  F02A         	goto	l7677
  7542  0055F0                     u7730:
  7543  0055F0  0012               	return		;funcret
  7544  0055F2                     __end_of_fputs:
  7545                           	callstack 0
  7546                           
  7547 ;; *************** function _fputc *****************
  7548 ;; Defined at:
  7549 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  7550 ;; Parameters:    Size  Location     Type
  7551 ;;  c               2   21[COMRAM] int 
  7552 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
  7553 ;;		 -> NULL(0), 
  7554 ;; Auto vars:     Size  Location     Type
  7555 ;;		None
  7556 ;; Return value:  Size  Location     Type
  7557 ;;                  2   21[COMRAM] int 
  7558 ;; Registers used:
  7559 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7560 ;; Tracked objects:
  7561 ;;		On entry : 0/0
  7562 ;;		On exit  : 0/0
  7563 ;;		Unchanged: 0/0
  7564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7565 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7567 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7568 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7569 ;;Total ram usage:        9 bytes
  7570 ;; Hardware stack levels used: 1
  7571 ;; Hardware stack levels required when called: 10
  7572 ;; This function calls:
  7573 ;;		_putch
  7574 ;; This function is called by:
  7575 ;;		_pad
  7576 ;;		_vfpfcnvrt
  7577 ;;		_fputs
  7578 ;; This function uses a non-reentrant model
  7579 ;;
  7580                           
  7581                           	psect	text25
  7582  004FC6                     __ptext25:
  7583                           	callstack 0
  7584  004FC6                     _fputc:
  7585                           	callstack 15
  7586  004FC6  5018               	movf	fputc@fp^0,w,c
  7587  004FC8  1019               	iorwf	(fputc@fp+1)^0,w,c
  7588  004FCA  B4D8               	btfsc	status,2,c
  7589  004FCC  EFEA  F027         	goto	u7301
  7590  004FD0  EFEC  F027         	goto	u7300
  7591  004FD4                     u7301:
  7592  004FD4  EFF5  F027         	goto	l7463
  7593  004FD8                     u7300:
  7594  004FD8  5018               	movf	fputc@fp^0,w,c
  7595  004FDA  1019               	iorwf	(fputc@fp+1)^0,w,c
  7596  004FDC  A4D8               	btfss	status,2,c
  7597  004FDE  EFF3  F027         	goto	u7311
  7598  004FE2  EFF5  F027         	goto	u7310
  7599  004FE6                     u7311:
  7600  004FE6  EFFA  F027         	goto	l7465
  7601  004FEA                     u7310:
  7602  004FEA                     l7463:
  7603  004FEA  5016               	movf	fputc@c^0,w,c
  7604  004FEC  EC96  F02E         	call	_putch
  7605  004FF0  EF2D  F028         	goto	l2319
  7606  004FF4                     l7465:
  7607  004FF4  EE20 F004          	lfsr	2,4
  7608  004FF8  5018               	movf	fputc@fp^0,w,c
  7609  004FFA  26D9               	addwf	fsr2l,f,c
  7610  004FFC  5019               	movf	(fputc@fp+1)^0,w,c
  7611  004FFE  22DA               	addwfc	fsr2h,f,c
  7612  005000  50DE               	movf	postinc2,w,c
  7613  005002  10DE               	iorwf	postinc2,w,c
  7614  005004  B4D8               	btfsc	status,2,c
  7615  005006  EF07  F028         	goto	u7321
  7616  00500A  EF09  F028         	goto	u7320
  7617  00500E                     u7321:
  7618  00500E  EF24  F028         	goto	l7469
  7619  005012                     u7320:
  7620  005012  EE20 F004          	lfsr	2,4
  7621  005016  5018               	movf	fputc@fp^0,w,c
  7622  005018  26D9               	addwf	fsr2l,f,c
  7623  00501A  5019               	movf	(fputc@fp+1)^0,w,c
  7624  00501C  22DA               	addwfc	fsr2h,f,c
  7625  00501E  EE10 F002          	lfsr	1,2
  7626  005022  5018               	movf	fputc@fp^0,w,c
  7627  005024  26E1               	addwf	fsr1l,f,c
  7628  005026  5019               	movf	(fputc@fp+1)^0,w,c
  7629  005028  22E2               	addwfc	fsr1h,f,c
  7630  00502A  50DE               	movf	postinc2,w,c
  7631  00502C  5CE6               	subwf	postinc1,w,c
  7632  00502E  50E6               	movf	postinc1,w,c
  7633  005030  0A80               	xorlw	128
  7634  005032  6E1E               	movwf	(??_fputc+4)^0,c
  7635  005034  50DE               	movf	postinc2,w,c
  7636  005036  0A80               	xorlw	128
  7637  005038  581E               	subwfb	(??_fputc+4)^0,w,c
  7638  00503A  B0D8               	btfsc	status,0,c
  7639  00503C  EF22  F028         	goto	u7331
  7640  005040  EF24  F028         	goto	u7330
  7641  005044                     u7331:
  7642  005044  EF2D  F028         	goto	l2319
  7643  005048                     u7330:
  7644  005048                     l7469:
  7645  005048  EE20 F002          	lfsr	2,2
  7646  00504C  5018               	movf	fputc@fp^0,w,c
  7647  00504E  26D9               	addwf	fsr2l,f,c
  7648  005050  5019               	movf	(fputc@fp+1)^0,w,c
  7649  005052  22DA               	addwfc	fsr2h,f,c
  7650  005054  2ADE               	incf	postinc2,f,c
  7651  005056  0E00               	movlw	0
  7652  005058  22DD               	addwfc	postdec2,f,c
  7653  00505A                     l2319:
  7654  00505A  0012               	return		;funcret
  7655  00505C                     __end_of_fputc:
  7656                           	callstack 0
  7657                           
  7658 ;; *************** function _putch *****************
  7659 ;; Defined at:
  7660 ;;		line 230 in file "mcc_generated_files/uart1.c"
  7661 ;; Parameters:    Size  Location     Type
  7662 ;;  txData          1    wreg     unsigned char 
  7663 ;; Auto vars:     Size  Location     Type
  7664 ;;  txData          1   20[COMRAM] unsigned char 
  7665 ;; Return value:  Size  Location     Type
  7666 ;;                  1    wreg      void 
  7667 ;; Registers used:
  7668 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7669 ;; Tracked objects:
  7670 ;;		On entry : 0/0
  7671 ;;		On exit  : 0/0
  7672 ;;		Unchanged: 0/0
  7673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7675 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7677 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7678 ;;Total ram usage:        1 bytes
  7679 ;; Hardware stack levels used: 1
  7680 ;; Hardware stack levels required when called: 9
  7681 ;; This function calls:
  7682 ;;		_UART1_Write
  7683 ;; This function is called by:
  7684 ;;		_fputc
  7685 ;; This function uses a non-reentrant model
  7686 ;;
  7687                           
  7688                           	psect	text26
  7689  005D2C                     __ptext26:
  7690                           	callstack 0
  7691  005D2C                     _putch:
  7692                           	callstack 15
  7693                           
  7694                           ;incstack = 0
  7695                           ;putch@txData stored from wreg
  7696  005D2C  6E15               	movwf	putch@txData^0,c
  7697  005D2E                     
  7698                           ;mcc_generated_files/uart1.c: 230: void putch(char txData);mcc_generated_files/uart1.c: 
      +                          231: {;mcc_generated_files/uart1.c: 232:     UART1_Write(txData);
  7699  005D2E  5015               	movf	putch@txData^0,w,c
  7700  005D30  EC98  F029         	call	_UART1_Write
  7701  005D34  0012               	return		;funcret
  7702  005D36                     __end_of_putch:
  7703                           	callstack 0
  7704                           
  7705 ;; *************** function _UART1_Write *****************
  7706 ;; Defined at:
  7707 ;;		line 202 in file "mcc_generated_files/uart1.c"
  7708 ;; Parameters:    Size  Location     Type
  7709 ;;  txData          1    wreg     unsigned char 
  7710 ;; Auto vars:     Size  Location     Type
  7711 ;;  txData          1   19[COMRAM] unsigned char 
  7712 ;; Return value:  Size  Location     Type
  7713 ;;                  1    wreg      void 
  7714 ;; Registers used:
  7715 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7716 ;; Tracked objects:
  7717 ;;		On entry : 0/0
  7718 ;;		On exit  : 0/0
  7719 ;;		Unchanged: 0/0
  7720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7722 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7724 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7725 ;;Total ram usage:        1 bytes
  7726 ;; Hardware stack levels used: 1
  7727 ;; Hardware stack levels required when called: 8
  7728 ;; This function calls:
  7729 ;;		Nothing
  7730 ;; This function is called by:
  7731 ;;		_putch
  7732 ;; This function uses a non-reentrant model
  7733 ;;
  7734                           
  7735                           	psect	text27
  7736  005330                     __ptext27:
  7737                           	callstack 0
  7738  005330                     _UART1_Write:
  7739                           	callstack 15
  7740                           
  7741                           ;incstack = 0
  7742                           ;UART1_Write@txData stored from wreg
  7743  005330  6E14               	movwf	UART1_Write@txData^0,c
  7744  005332                     l7441:
  7745                           
  7746                           ;mcc_generated_files/uart1.c: 204:     while(0 == uart1TxBufferRemaining)
  7747  005332  504C               	movf	_uart1TxBufferRemaining^0,w,c	;volatile
  7748  005334  B4D8               	btfsc	status,2,c
  7749  005336  EF9F  F029         	goto	u7271
  7750  00533A  EFA1  F029         	goto	u7270
  7751  00533E                     u7271:
  7752  00533E  EF99  F029         	goto	l7441
  7753  005342                     u7270:
  7754  005342                     
  7755                           ;mcc_generated_files/uart1.c: 208:     if(0 == PIE3bits.U1TXIE)
  7756  005342  0139               	movlb	57	; () banked
  7757  005344  B993               	btfsc	147,4,b	;volatile
  7758  005346  EFA7  F029         	goto	u7281
  7759  00534A  EFA9  F029         	goto	u7280
  7760  00534E                     u7281:
  7761  00534E  EFAE  F029         	goto	l309
  7762  005352                     u7280:
  7763  005352                     
  7764                           ; BSR set to: 57
  7765                           ;mcc_generated_files/uart1.c: 209:     {;mcc_generated_files/uart1.c: 210:         U1TXB
      +                           = txData;
  7766  005352  0060  F053  FDEA   	movff	UART1_Write@txData,15850	;volatile
  7767                           
  7768                           ;mcc_generated_files/uart1.c: 211:     }
  7769  005358  EFC4  F029         	goto	l7455
  7770  00535C                     l309:
  7771                           
  7772                           ; BSR set to: 57
  7773                           ;mcc_generated_files/uart1.c: 213:     {;mcc_generated_files/uart1.c: 214:         PIE3b
      +                          its.U1TXIE = 0;
  7774  00535C  9993               	bcf	147,4,b	;volatile
  7775  00535E                     
  7776                           ; BSR set to: 57
  7777                           ;mcc_generated_files/uart1.c: 215:         uart1TxBuffer[uart1TxHead++] = txData;
  7778  00535E  0E10               	movlw	low _uart1TxBuffer
  7779  005360  2447               	addwf	_uart1TxHead^0,w,c	;volatile
  7780  005362  6ED9               	movwf	fsr2l,c
  7781  005364  6ADA               	clrf	fsr2h,c
  7782  005366  0E01               	movlw	high _uart1TxBuffer
  7783  005368  22DA               	addwfc	fsr2h,f,c
  7784  00536A  0060  F053  FFDF   	movff	UART1_Write@txData,indf2
  7785  005370                     
  7786                           ; BSR set to: 57
  7787  005370  2A47               	incf	_uart1TxHead^0,f,c	;volatile
  7788  005372                     
  7789                           ; BSR set to: 57
  7790                           ;mcc_generated_files/uart1.c: 216:         if(sizeof(uart1TxBuffer) <= uart1TxHead)
  7791  005372  0E07               	movlw	7
  7792  005374  6447               	cpfsgt	_uart1TxHead^0,c	;volatile
  7793  005376  EFBF  F029         	goto	u7291
  7794  00537A  EFC1  F029         	goto	u7290
  7795  00537E                     u7291:
  7796  00537E  EFC3  F029         	goto	l7453
  7797  005382                     u7290:
  7798  005382                     
  7799                           ; BSR set to: 57
  7800                           ;mcc_generated_files/uart1.c: 217:         {;mcc_generated_files/uart1.c: 218:          
      +                             uart1TxHead = 0;
  7801  005382  0E00               	movlw	0
  7802  005384  6E47               	movwf	_uart1TxHead^0,c	;volatile
  7803  005386                     l7453:
  7804                           
  7805                           ; BSR set to: 57
  7806                           ;mcc_generated_files/uart1.c: 220:         uart1TxBufferRemaining--;
  7807  005386  064C               	decf	_uart1TxBufferRemaining^0,f,c	;volatile
  7808  005388                     l7455:
  7809                           
  7810                           ; BSR set to: 57
  7811                           ;mcc_generated_files/uart1.c: 222:     PIE3bits.U1TXIE = 1;
  7812  005388  8993               	bsf	147,4,b	;volatile
  7813  00538A                     
  7814                           ; BSR set to: 57
  7815  00538A  0012               	return		;funcret
  7816  00538C                     __end_of_UART1_Write:
  7817                           	callstack 0
  7818                           
  7819 ;; *************** function _abs *****************
  7820 ;; Defined at:
  7821 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  7822 ;; Parameters:    Size  Location     Type
  7823 ;;  a               2   37[COMRAM] int 
  7824 ;; Auto vars:     Size  Location     Type
  7825 ;;		None
  7826 ;; Return value:  Size  Location     Type
  7827 ;;                  2   37[COMRAM] int 
  7828 ;; Registers used:
  7829 ;;		wreg, status,2, status,0
  7830 ;; Tracked objects:
  7831 ;;		On entry : 0/0
  7832 ;;		On exit  : 0/0
  7833 ;;		Unchanged: 0/0
  7834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7835 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7837 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7838 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7839 ;;Total ram usage:        4 bytes
  7840 ;; Hardware stack levels used: 1
  7841 ;; Hardware stack levels required when called: 8
  7842 ;; This function calls:
  7843 ;;		Nothing
  7844 ;; This function is called by:
  7845 ;;		_dtoa
  7846 ;; This function uses a non-reentrant model
  7847 ;;
  7848                           
  7849                           	psect	text28
  7850  005636                     __ptext28:
  7851                           	callstack 0
  7852  005636                     _abs:
  7853                           	callstack 16
  7854  005636  BE27               	btfsc	(abs@a+1)^0,7,c
  7855  005638  EF28  F02B         	goto	u8640
  7856  00563C  5027               	movf	(abs@a+1)^0,w,c
  7857  00563E  E106               	bnz	u8641
  7858  005640  0426               	decf	abs@a^0,w,c
  7859  005642  B0D8               	btfsc	status,0,c
  7860  005644  EF26  F02B         	goto	u8641
  7861  005648  EF28  F02B         	goto	u8640
  7862  00564C                     u8641:
  7863  00564C  EF36  F02B         	goto	l2285
  7864  005650                     u8640:
  7865  005650  C026  F028         	movff	abs@a,??_abs
  7866  005654  C027  F029         	movff	abs@a+1,??_abs+1
  7867  005658  1E28               	comf	??_abs^0,f,c
  7868  00565A  1E29               	comf	(??_abs+1)^0,f,c
  7869  00565C  4A28               	infsnz	??_abs^0,f,c
  7870  00565E  2A29               	incf	(??_abs+1)^0,f,c
  7871  005660  C028  F026         	movff	??_abs,?_abs
  7872  005664  C029  F027         	movff	??_abs+1,?_abs+1
  7873  005668  EF3A  F02B         	goto	l2288
  7874  00566C                     l2285:
  7875  00566C  C026  F026         	movff	abs@a,?_abs
  7876  005670  C027  F027         	movff	abs@a+1,?_abs+1
  7877  005674                     l2288:
  7878  005674  0012               	return		;funcret
  7879  005676                     __end_of_abs:
  7880                           	callstack 0
  7881                           
  7882 ;; *************** function ___aomod *****************
  7883 ;; Defined at:
  7884 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  7885 ;; Parameters:    Size  Location     Type
  7886 ;;  dividend        8   19[COMRAM] long long 
  7887 ;;  divisor         8   27[COMRAM] long long 
  7888 ;; Auto vars:     Size  Location     Type
  7889 ;;  sign            1   36[COMRAM] unsigned char 
  7890 ;;  counter         1   35[COMRAM] unsigned char 
  7891 ;; Return value:  Size  Location     Type
  7892 ;;                  8   19[COMRAM] long long 
  7893 ;; Registers used:
  7894 ;;		wreg, status,2, status,0
  7895 ;; Tracked objects:
  7896 ;;		On entry : 0/0
  7897 ;;		On exit  : 0/0
  7898 ;;		Unchanged: 0/0
  7899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7900 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7901 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7903 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7904 ;;Total ram usage:       18 bytes
  7905 ;; Hardware stack levels used: 1
  7906 ;; Hardware stack levels required when called: 8
  7907 ;; This function calls:
  7908 ;;		Nothing
  7909 ;; This function is called by:
  7910 ;;		_dtoa
  7911 ;; This function uses a non-reentrant model
  7912 ;;
  7913                           
  7914                           	psect	text29
  7915  003FCE                     __ptext29:
  7916                           	callstack 0
  7917  003FCE                     ___aomod:
  7918                           	callstack 16
  7919  003FCE  0E00               	movlw	0
  7920  003FD0  6E25               	movwf	___aomod@sign^0,c
  7921  003FD2  BE1B               	btfsc	(___aomod@dividend+7)^0,7,c
  7922  003FD4  EFF0  F01F         	goto	u7840
  7923  003FD8  EFEE  F01F         	goto	u7841
  7924  003FDC                     u7841:
  7925  003FDC  EF02  F020         	goto	l7749
  7926  003FE0                     u7840:
  7927  003FE0  1E1B               	comf	(___aomod@dividend+7)^0,f,c
  7928  003FE2  1E1A               	comf	(___aomod@dividend+6)^0,f,c
  7929  003FE4  1E19               	comf	(___aomod@dividend+5)^0,f,c
  7930  003FE6  1E18               	comf	(___aomod@dividend+4)^0,f,c
  7931  003FE8  1E17               	comf	(___aomod@dividend+3)^0,f,c
  7932  003FEA  1E16               	comf	(___aomod@dividend+2)^0,f,c
  7933  003FEC  1E15               	comf	(___aomod@dividend+1)^0,f,c
  7934  003FEE  6C14               	negf	___aomod@dividend^0,c
  7935  003FF0  0E00               	movlw	0
  7936  003FF2  2215               	addwfc	(___aomod@dividend+1)^0,f,c
  7937  003FF4  2216               	addwfc	(___aomod@dividend+2)^0,f,c
  7938  003FF6  2217               	addwfc	(___aomod@dividend+3)^0,f,c
  7939  003FF8  2218               	addwfc	(___aomod@dividend+4)^0,f,c
  7940  003FFA  2219               	addwfc	(___aomod@dividend+5)^0,f,c
  7941  003FFC  221A               	addwfc	(___aomod@dividend+6)^0,f,c
  7942  003FFE  221B               	addwfc	(___aomod@dividend+7)^0,f,c
  7943  004000  0E01               	movlw	1
  7944  004002  6E25               	movwf	___aomod@sign^0,c
  7945  004004                     l7749:
  7946  004004  BE23               	btfsc	(___aomod@divisor+7)^0,7,c
  7947  004006  EF09  F020         	goto	u7850
  7948  00400A  EF07  F020         	goto	u7851
  7949  00400E                     u7851:
  7950  00400E  EF19  F020         	goto	l7753
  7951  004012                     u7850:
  7952  004012  1E23               	comf	(___aomod@divisor+7)^0,f,c
  7953  004014  1E22               	comf	(___aomod@divisor+6)^0,f,c
  7954  004016  1E21               	comf	(___aomod@divisor+5)^0,f,c
  7955  004018  1E20               	comf	(___aomod@divisor+4)^0,f,c
  7956  00401A  1E1F               	comf	(___aomod@divisor+3)^0,f,c
  7957  00401C  1E1E               	comf	(___aomod@divisor+2)^0,f,c
  7958  00401E  1E1D               	comf	(___aomod@divisor+1)^0,f,c
  7959  004020  6C1C               	negf	___aomod@divisor^0,c
  7960  004022  0E00               	movlw	0
  7961  004024  221D               	addwfc	(___aomod@divisor+1)^0,f,c
  7962  004026  221E               	addwfc	(___aomod@divisor+2)^0,f,c
  7963  004028  221F               	addwfc	(___aomod@divisor+3)^0,f,c
  7964  00402A  2220               	addwfc	(___aomod@divisor+4)^0,f,c
  7965  00402C  2221               	addwfc	(___aomod@divisor+5)^0,f,c
  7966  00402E  2222               	addwfc	(___aomod@divisor+6)^0,f,c
  7967  004030  2223               	addwfc	(___aomod@divisor+7)^0,f,c
  7968  004032                     l7753:
  7969  004032  501C               	movf	___aomod@divisor^0,w,c
  7970  004034  101D               	iorwf	(___aomod@divisor+1)^0,w,c
  7971  004036  101E               	iorwf	(___aomod@divisor+2)^0,w,c
  7972  004038  101F               	iorwf	(___aomod@divisor+3)^0,w,c
  7973  00403A  1020               	iorwf	(___aomod@divisor+4)^0,w,c
  7974  00403C  1021               	iorwf	(___aomod@divisor+5)^0,w,c
  7975  00403E  1022               	iorwf	(___aomod@divisor+6)^0,w,c
  7976  004040  1023               	iorwf	(___aomod@divisor+7)^0,w,c
  7977  004042  B4D8               	btfsc	status,2,c
  7978  004044  EF26  F020         	goto	u7861
  7979  004048  EF28  F020         	goto	u7860
  7980  00404C                     u7861:
  7981  00404C  EF70  F020         	goto	l7769
  7982  004050                     u7860:
  7983  004050  0E01               	movlw	1
  7984  004052  6E24               	movwf	___aomod@counter^0,c
  7985  004054  EF36  F020         	goto	l7759
  7986  004058                     l7757:
  7987  004058  90D8               	bcf	status,0,c
  7988  00405A  361C               	rlcf	___aomod@divisor^0,f,c
  7989  00405C  361D               	rlcf	(___aomod@divisor+1)^0,f,c
  7990  00405E  361E               	rlcf	(___aomod@divisor+2)^0,f,c
  7991  004060  361F               	rlcf	(___aomod@divisor+3)^0,f,c
  7992  004062  3620               	rlcf	(___aomod@divisor+4)^0,f,c
  7993  004064  3621               	rlcf	(___aomod@divisor+5)^0,f,c
  7994  004066  3622               	rlcf	(___aomod@divisor+6)^0,f,c
  7995  004068  3623               	rlcf	(___aomod@divisor+7)^0,f,c
  7996  00406A  2A24               	incf	___aomod@counter^0,f,c
  7997  00406C                     l7759:
  7998  00406C  AE23               	btfss	(___aomod@divisor+7)^0,7,c
  7999  00406E  EF3B  F020         	goto	u7871
  8000  004072  EF3D  F020         	goto	u7870
  8001  004076                     u7871:
  8002  004076  EF2C  F020         	goto	l7757
  8003  00407A                     u7870:
  8004  00407A                     l7761:
  8005  00407A  501C               	movf	___aomod@divisor^0,w,c
  8006  00407C  5C14               	subwf	___aomod@dividend^0,w,c
  8007  00407E  501D               	movf	(___aomod@divisor+1)^0,w,c
  8008  004080  5815               	subwfb	(___aomod@dividend+1)^0,w,c
  8009  004082  501E               	movf	(___aomod@divisor+2)^0,w,c
  8010  004084  5816               	subwfb	(___aomod@dividend+2)^0,w,c
  8011  004086  501F               	movf	(___aomod@divisor+3)^0,w,c
  8012  004088  5817               	subwfb	(___aomod@dividend+3)^0,w,c
  8013  00408A  5020               	movf	(___aomod@divisor+4)^0,w,c
  8014  00408C  5818               	subwfb	(___aomod@dividend+4)^0,w,c
  8015  00408E  5021               	movf	(___aomod@divisor+5)^0,w,c
  8016  004090  5819               	subwfb	(___aomod@dividend+5)^0,w,c
  8017  004092  5022               	movf	(___aomod@divisor+6)^0,w,c
  8018  004094  581A               	subwfb	(___aomod@dividend+6)^0,w,c
  8019  004096  5023               	movf	(___aomod@divisor+7)^0,w,c
  8020  004098  581B               	subwfb	(___aomod@dividend+7)^0,w,c
  8021  00409A  A0D8               	btfss	status,0,c
  8022  00409C  EF52  F020         	goto	u7881
  8023  0040A0  EF54  F020         	goto	u7880
  8024  0040A4                     u7881:
  8025  0040A4  EF64  F020         	goto	l7765
  8026  0040A8                     u7880:
  8027  0040A8  501C               	movf	___aomod@divisor^0,w,c
  8028  0040AA  5E14               	subwf	___aomod@dividend^0,f,c
  8029  0040AC  501D               	movf	(___aomod@divisor+1)^0,w,c
  8030  0040AE  5A15               	subwfb	(___aomod@dividend+1)^0,f,c
  8031  0040B0  501E               	movf	(___aomod@divisor+2)^0,w,c
  8032  0040B2  5A16               	subwfb	(___aomod@dividend+2)^0,f,c
  8033  0040B4  501F               	movf	(___aomod@divisor+3)^0,w,c
  8034  0040B6  5A17               	subwfb	(___aomod@dividend+3)^0,f,c
  8035  0040B8  5020               	movf	(___aomod@divisor+4)^0,w,c
  8036  0040BA  5A18               	subwfb	(___aomod@dividend+4)^0,f,c
  8037  0040BC  5021               	movf	(___aomod@divisor+5)^0,w,c
  8038  0040BE  5A19               	subwfb	(___aomod@dividend+5)^0,f,c
  8039  0040C0  5022               	movf	(___aomod@divisor+6)^0,w,c
  8040  0040C2  5A1A               	subwfb	(___aomod@dividend+6)^0,f,c
  8041  0040C4  5023               	movf	(___aomod@divisor+7)^0,w,c
  8042  0040C6  5A1B               	subwfb	(___aomod@dividend+7)^0,f,c
  8043  0040C8                     l7765:
  8044  0040C8  90D8               	bcf	status,0,c
  8045  0040CA  3223               	rrcf	(___aomod@divisor+7)^0,f,c
  8046  0040CC  3222               	rrcf	(___aomod@divisor+6)^0,f,c
  8047  0040CE  3221               	rrcf	(___aomod@divisor+5)^0,f,c
  8048  0040D0  3220               	rrcf	(___aomod@divisor+4)^0,f,c
  8049  0040D2  321F               	rrcf	(___aomod@divisor+3)^0,f,c
  8050  0040D4  321E               	rrcf	(___aomod@divisor+2)^0,f,c
  8051  0040D6  321D               	rrcf	(___aomod@divisor+1)^0,f,c
  8052  0040D8  321C               	rrcf	___aomod@divisor^0,f,c
  8053  0040DA  2E24               	decfsz	___aomod@counter^0,f,c
  8054  0040DC  EF3D  F020         	goto	l7761
  8055  0040E0                     l7769:
  8056  0040E0  5025               	movf	___aomod@sign^0,w,c
  8057  0040E2  B4D8               	btfsc	status,2,c
  8058  0040E4  EF76  F020         	goto	u7891
  8059  0040E8  EF78  F020         	goto	u7890
  8060  0040EC                     u7891:
  8061  0040EC  EF88  F020         	goto	l7773
  8062  0040F0                     u7890:
  8063  0040F0  1E1B               	comf	(___aomod@dividend+7)^0,f,c
  8064  0040F2  1E1A               	comf	(___aomod@dividend+6)^0,f,c
  8065  0040F4  1E19               	comf	(___aomod@dividend+5)^0,f,c
  8066  0040F6  1E18               	comf	(___aomod@dividend+4)^0,f,c
  8067  0040F8  1E17               	comf	(___aomod@dividend+3)^0,f,c
  8068  0040FA  1E16               	comf	(___aomod@dividend+2)^0,f,c
  8069  0040FC  1E15               	comf	(___aomod@dividend+1)^0,f,c
  8070  0040FE  6C14               	negf	___aomod@dividend^0,c
  8071  004100  0E00               	movlw	0
  8072  004102  2215               	addwfc	(___aomod@dividend+1)^0,f,c
  8073  004104  2216               	addwfc	(___aomod@dividend+2)^0,f,c
  8074  004106  2217               	addwfc	(___aomod@dividend+3)^0,f,c
  8075  004108  2218               	addwfc	(___aomod@dividend+4)^0,f,c
  8076  00410A  2219               	addwfc	(___aomod@dividend+5)^0,f,c
  8077  00410C  221A               	addwfc	(___aomod@dividend+6)^0,f,c
  8078  00410E  221B               	addwfc	(___aomod@dividend+7)^0,f,c
  8079  004110                     l7773:
  8080  004110  C014  F014         	movff	___aomod@dividend,?___aomod
  8081  004114  C015  F015         	movff	___aomod@dividend+1,?___aomod+1
  8082  004118  C016  F016         	movff	___aomod@dividend+2,?___aomod+2
  8083  00411C  C017  F017         	movff	___aomod@dividend+3,?___aomod+3
  8084  004120  C018  F018         	movff	___aomod@dividend+4,?___aomod+4
  8085  004124  C019  F019         	movff	___aomod@dividend+5,?___aomod+5
  8086  004128  C01A  F01A         	movff	___aomod@dividend+6,?___aomod+6
  8087  00412C  C01B  F01B         	movff	___aomod@dividend+7,?___aomod+7
  8088  004130  0012               	return		;funcret
  8089  004132                     __end_of___aomod:
  8090                           	callstack 0
  8091                           
  8092 ;; *************** function ___aodiv *****************
  8093 ;; Defined at:
  8094 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  8095 ;; Parameters:    Size  Location     Type
  8096 ;;  dividend        8   19[COMRAM] long long 
  8097 ;;  divisor         8   27[COMRAM] long long 
  8098 ;; Auto vars:     Size  Location     Type
  8099 ;;  quotient        8   37[COMRAM] long long 
  8100 ;;  sign            1   36[COMRAM] unsigned char 
  8101 ;;  counter         1   35[COMRAM] unsigned char 
  8102 ;; Return value:  Size  Location     Type
  8103 ;;                  8   19[COMRAM] long long 
  8104 ;; Registers used:
  8105 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8106 ;; Tracked objects:
  8107 ;;		On entry : 0/0
  8108 ;;		On exit  : 0/0
  8109 ;;		Unchanged: 0/0
  8110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8111 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8112 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8114 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8115 ;;Total ram usage:       26 bytes
  8116 ;; Hardware stack levels used: 1
  8117 ;; Hardware stack levels required when called: 8
  8118 ;; This function calls:
  8119 ;;		Nothing
  8120 ;; This function is called by:
  8121 ;;		_dtoa
  8122 ;; This function uses a non-reentrant model
  8123 ;;
  8124                           
  8125                           	psect	text30
  8126  003E46                     __ptext30:
  8127                           	callstack 0
  8128  003E46                     ___aodiv:
  8129                           	callstack 16
  8130  003E46  0E00               	movlw	0
  8131  003E48  6E25               	movwf	___aodiv@sign^0,c
  8132  003E4A  BE23               	btfsc	(___aodiv@divisor+7)^0,7,c
  8133  003E4C  EF2C  F01F         	goto	u7770
  8134  003E50  EF2A  F01F         	goto	u7771
  8135  003E54                     u7771:
  8136  003E54  EF3E  F01F         	goto	l7705
  8137  003E58                     u7770:
  8138  003E58  1E23               	comf	(___aodiv@divisor+7)^0,f,c
  8139  003E5A  1E22               	comf	(___aodiv@divisor+6)^0,f,c
  8140  003E5C  1E21               	comf	(___aodiv@divisor+5)^0,f,c
  8141  003E5E  1E20               	comf	(___aodiv@divisor+4)^0,f,c
  8142  003E60  1E1F               	comf	(___aodiv@divisor+3)^0,f,c
  8143  003E62  1E1E               	comf	(___aodiv@divisor+2)^0,f,c
  8144  003E64  1E1D               	comf	(___aodiv@divisor+1)^0,f,c
  8145  003E66  6C1C               	negf	___aodiv@divisor^0,c
  8146  003E68  0E00               	movlw	0
  8147  003E6A  221D               	addwfc	(___aodiv@divisor+1)^0,f,c
  8148  003E6C  221E               	addwfc	(___aodiv@divisor+2)^0,f,c
  8149  003E6E  221F               	addwfc	(___aodiv@divisor+3)^0,f,c
  8150  003E70  2220               	addwfc	(___aodiv@divisor+4)^0,f,c
  8151  003E72  2221               	addwfc	(___aodiv@divisor+5)^0,f,c
  8152  003E74  2222               	addwfc	(___aodiv@divisor+6)^0,f,c
  8153  003E76  2223               	addwfc	(___aodiv@divisor+7)^0,f,c
  8154  003E78  0E01               	movlw	1
  8155  003E7A  6E25               	movwf	___aodiv@sign^0,c
  8156  003E7C                     l7705:
  8157  003E7C  BE1B               	btfsc	(___aodiv@dividend+7)^0,7,c
  8158  003E7E  EF45  F01F         	goto	u7780
  8159  003E82  EF43  F01F         	goto	u7781
  8160  003E86                     u7781:
  8161  003E86  EF57  F01F         	goto	l7711
  8162  003E8A                     u7780:
  8163  003E8A  1E1B               	comf	(___aodiv@dividend+7)^0,f,c
  8164  003E8C  1E1A               	comf	(___aodiv@dividend+6)^0,f,c
  8165  003E8E  1E19               	comf	(___aodiv@dividend+5)^0,f,c
  8166  003E90  1E18               	comf	(___aodiv@dividend+4)^0,f,c
  8167  003E92  1E17               	comf	(___aodiv@dividend+3)^0,f,c
  8168  003E94  1E16               	comf	(___aodiv@dividend+2)^0,f,c
  8169  003E96  1E15               	comf	(___aodiv@dividend+1)^0,f,c
  8170  003E98  6C14               	negf	___aodiv@dividend^0,c
  8171  003E9A  0E00               	movlw	0
  8172  003E9C  2215               	addwfc	(___aodiv@dividend+1)^0,f,c
  8173  003E9E  2216               	addwfc	(___aodiv@dividend+2)^0,f,c
  8174  003EA0  2217               	addwfc	(___aodiv@dividend+3)^0,f,c
  8175  003EA2  2218               	addwfc	(___aodiv@dividend+4)^0,f,c
  8176  003EA4  2219               	addwfc	(___aodiv@dividend+5)^0,f,c
  8177  003EA6  221A               	addwfc	(___aodiv@dividend+6)^0,f,c
  8178  003EA8  221B               	addwfc	(___aodiv@dividend+7)^0,f,c
  8179  003EAA  0E01               	movlw	1
  8180  003EAC  1A25               	xorwf	___aodiv@sign^0,f,c
  8181  003EAE                     l7711:
  8182  003EAE  EE20  F026         	lfsr	2,___aodiv@quotient
  8183  003EB2  0E07               	movlw	7
  8184  003EB4                     u7791:
  8185  003EB4  6ADE               	clrf	postinc2,c
  8186  003EB6  06E8               	decf	wreg,f,c
  8187  003EB8  E2FD               	bc	u7791
  8188  003EBA  501C               	movf	___aodiv@divisor^0,w,c
  8189  003EBC  101D               	iorwf	(___aodiv@divisor+1)^0,w,c
  8190  003EBE  101E               	iorwf	(___aodiv@divisor+2)^0,w,c
  8191  003EC0  101F               	iorwf	(___aodiv@divisor+3)^0,w,c
  8192  003EC2  1020               	iorwf	(___aodiv@divisor+4)^0,w,c
  8193  003EC4  1021               	iorwf	(___aodiv@divisor+5)^0,w,c
  8194  003EC6  1022               	iorwf	(___aodiv@divisor+6)^0,w,c
  8195  003EC8  1023               	iorwf	(___aodiv@divisor+7)^0,w,c
  8196  003ECA  B4D8               	btfsc	status,2,c
  8197  003ECC  EF6A  F01F         	goto	u7801
  8198  003ED0  EF6C  F01F         	goto	u7800
  8199  003ED4                     u7801:
  8200  003ED4  EFBE  F01F         	goto	l7733
  8201  003ED8                     u7800:
  8202  003ED8  0E01               	movlw	1
  8203  003EDA  6E24               	movwf	___aodiv@counter^0,c
  8204  003EDC  EF7A  F01F         	goto	l7719
  8205  003EE0                     l7717:
  8206  003EE0  90D8               	bcf	status,0,c
  8207  003EE2  361C               	rlcf	___aodiv@divisor^0,f,c
  8208  003EE4  361D               	rlcf	(___aodiv@divisor+1)^0,f,c
  8209  003EE6  361E               	rlcf	(___aodiv@divisor+2)^0,f,c
  8210  003EE8  361F               	rlcf	(___aodiv@divisor+3)^0,f,c
  8211  003EEA  3620               	rlcf	(___aodiv@divisor+4)^0,f,c
  8212  003EEC  3621               	rlcf	(___aodiv@divisor+5)^0,f,c
  8213  003EEE  3622               	rlcf	(___aodiv@divisor+6)^0,f,c
  8214  003EF0  3623               	rlcf	(___aodiv@divisor+7)^0,f,c
  8215  003EF2  2A24               	incf	___aodiv@counter^0,f,c
  8216  003EF4                     l7719:
  8217  003EF4  AE23               	btfss	(___aodiv@divisor+7)^0,7,c
  8218  003EF6  EF7F  F01F         	goto	u7811
  8219  003EFA  EF81  F01F         	goto	u7810
  8220  003EFE                     u7811:
  8221  003EFE  EF70  F01F         	goto	l7717
  8222  003F02                     u7810:
  8223  003F02                     l7721:
  8224  003F02  90D8               	bcf	status,0,c
  8225  003F04  3626               	rlcf	___aodiv@quotient^0,f,c
  8226  003F06  3627               	rlcf	(___aodiv@quotient+1)^0,f,c
  8227  003F08  3628               	rlcf	(___aodiv@quotient+2)^0,f,c
  8228  003F0A  3629               	rlcf	(___aodiv@quotient+3)^0,f,c
  8229  003F0C  362A               	rlcf	(___aodiv@quotient+4)^0,f,c
  8230  003F0E  362B               	rlcf	(___aodiv@quotient+5)^0,f,c
  8231  003F10  362C               	rlcf	(___aodiv@quotient+6)^0,f,c
  8232  003F12  362D               	rlcf	(___aodiv@quotient+7)^0,f,c
  8233  003F14  501C               	movf	___aodiv@divisor^0,w,c
  8234  003F16  5C14               	subwf	___aodiv@dividend^0,w,c
  8235  003F18  501D               	movf	(___aodiv@divisor+1)^0,w,c
  8236  003F1A  5815               	subwfb	(___aodiv@dividend+1)^0,w,c
  8237  003F1C  501E               	movf	(___aodiv@divisor+2)^0,w,c
  8238  003F1E  5816               	subwfb	(___aodiv@dividend+2)^0,w,c
  8239  003F20  501F               	movf	(___aodiv@divisor+3)^0,w,c
  8240  003F22  5817               	subwfb	(___aodiv@dividend+3)^0,w,c
  8241  003F24  5020               	movf	(___aodiv@divisor+4)^0,w,c
  8242  003F26  5818               	subwfb	(___aodiv@dividend+4)^0,w,c
  8243  003F28  5021               	movf	(___aodiv@divisor+5)^0,w,c
  8244  003F2A  5819               	subwfb	(___aodiv@dividend+5)^0,w,c
  8245  003F2C  5022               	movf	(___aodiv@divisor+6)^0,w,c
  8246  003F2E  581A               	subwfb	(___aodiv@dividend+6)^0,w,c
  8247  003F30  5023               	movf	(___aodiv@divisor+7)^0,w,c
  8248  003F32  581B               	subwfb	(___aodiv@dividend+7)^0,w,c
  8249  003F34  A0D8               	btfss	status,0,c
  8250  003F36  EF9F  F01F         	goto	u7821
  8251  003F3A  EFA1  F01F         	goto	u7820
  8252  003F3E                     u7821:
  8253  003F3E  EFB2  F01F         	goto	l7729
  8254  003F42                     u7820:
  8255  003F42  501C               	movf	___aodiv@divisor^0,w,c
  8256  003F44  5E14               	subwf	___aodiv@dividend^0,f,c
  8257  003F46  501D               	movf	(___aodiv@divisor+1)^0,w,c
  8258  003F48  5A15               	subwfb	(___aodiv@dividend+1)^0,f,c
  8259  003F4A  501E               	movf	(___aodiv@divisor+2)^0,w,c
  8260  003F4C  5A16               	subwfb	(___aodiv@dividend+2)^0,f,c
  8261  003F4E  501F               	movf	(___aodiv@divisor+3)^0,w,c
  8262  003F50  5A17               	subwfb	(___aodiv@dividend+3)^0,f,c
  8263  003F52  5020               	movf	(___aodiv@divisor+4)^0,w,c
  8264  003F54  5A18               	subwfb	(___aodiv@dividend+4)^0,f,c
  8265  003F56  5021               	movf	(___aodiv@divisor+5)^0,w,c
  8266  003F58  5A19               	subwfb	(___aodiv@dividend+5)^0,f,c
  8267  003F5A  5022               	movf	(___aodiv@divisor+6)^0,w,c
  8268  003F5C  5A1A               	subwfb	(___aodiv@dividend+6)^0,f,c
  8269  003F5E  5023               	movf	(___aodiv@divisor+7)^0,w,c
  8270  003F60  5A1B               	subwfb	(___aodiv@dividend+7)^0,f,c
  8271  003F62  8026               	bsf	___aodiv@quotient^0,0,c
  8272  003F64                     l7729:
  8273  003F64  90D8               	bcf	status,0,c
  8274  003F66  3223               	rrcf	(___aodiv@divisor+7)^0,f,c
  8275  003F68  3222               	rrcf	(___aodiv@divisor+6)^0,f,c
  8276  003F6A  3221               	rrcf	(___aodiv@divisor+5)^0,f,c
  8277  003F6C  3220               	rrcf	(___aodiv@divisor+4)^0,f,c
  8278  003F6E  321F               	rrcf	(___aodiv@divisor+3)^0,f,c
  8279  003F70  321E               	rrcf	(___aodiv@divisor+2)^0,f,c
  8280  003F72  321D               	rrcf	(___aodiv@divisor+1)^0,f,c
  8281  003F74  321C               	rrcf	___aodiv@divisor^0,f,c
  8282  003F76  2E24               	decfsz	___aodiv@counter^0,f,c
  8283  003F78  EF81  F01F         	goto	l7721
  8284  003F7C                     l7733:
  8285  003F7C  5025               	movf	___aodiv@sign^0,w,c
  8286  003F7E  B4D8               	btfsc	status,2,c
  8287  003F80  EFC4  F01F         	goto	u7831
  8288  003F84  EFC6  F01F         	goto	u7830
  8289  003F88                     u7831:
  8290  003F88  EFD6  F01F         	goto	l7737
  8291  003F8C                     u7830:
  8292  003F8C  1E2D               	comf	(___aodiv@quotient+7)^0,f,c
  8293  003F8E  1E2C               	comf	(___aodiv@quotient+6)^0,f,c
  8294  003F90  1E2B               	comf	(___aodiv@quotient+5)^0,f,c
  8295  003F92  1E2A               	comf	(___aodiv@quotient+4)^0,f,c
  8296  003F94  1E29               	comf	(___aodiv@quotient+3)^0,f,c
  8297  003F96  1E28               	comf	(___aodiv@quotient+2)^0,f,c
  8298  003F98  1E27               	comf	(___aodiv@quotient+1)^0,f,c
  8299  003F9A  6C26               	negf	___aodiv@quotient^0,c
  8300  003F9C  0E00               	movlw	0
  8301  003F9E  2227               	addwfc	(___aodiv@quotient+1)^0,f,c
  8302  003FA0  2228               	addwfc	(___aodiv@quotient+2)^0,f,c
  8303  003FA2  2229               	addwfc	(___aodiv@quotient+3)^0,f,c
  8304  003FA4  222A               	addwfc	(___aodiv@quotient+4)^0,f,c
  8305  003FA6  222B               	addwfc	(___aodiv@quotient+5)^0,f,c
  8306  003FA8  222C               	addwfc	(___aodiv@quotient+6)^0,f,c
  8307  003FAA  222D               	addwfc	(___aodiv@quotient+7)^0,f,c
  8308  003FAC                     l7737:
  8309  003FAC  C026  F014         	movff	___aodiv@quotient,?___aodiv
  8310  003FB0  C027  F015         	movff	___aodiv@quotient+1,?___aodiv+1
  8311  003FB4  C028  F016         	movff	___aodiv@quotient+2,?___aodiv+2
  8312  003FB8  C029  F017         	movff	___aodiv@quotient+3,?___aodiv+3
  8313  003FBC  C02A  F018         	movff	___aodiv@quotient+4,?___aodiv+4
  8314  003FC0  C02B  F019         	movff	___aodiv@quotient+5,?___aodiv+5
  8315  003FC4  C02C  F01A         	movff	___aodiv@quotient+6,?___aodiv+6
  8316  003FC8  C02D  F01B         	movff	___aodiv@quotient+7,?___aodiv+7
  8317  003FCC  0012               	return		;funcret
  8318  003FCE                     __end_of___aodiv:
  8319                           	callstack 0
  8320                           
  8321 ;; *************** function _ADCC_GetSingleConversion *****************
  8322 ;; Defined at:
  8323 ;;		line 137 in file "mcc_generated_files/adcc.c"
  8324 ;; Parameters:    Size  Location     Type
  8325 ;;  channel         1    wreg     enum E16058
  8326 ;; Auto vars:     Size  Location     Type
  8327 ;;  channel         1   23[COMRAM] enum E16058
  8328 ;; Return value:  Size  Location     Type
  8329 ;;                  2   19[COMRAM] unsigned short 
  8330 ;; Registers used:
  8331 ;;		wreg, status,2, status,0
  8332 ;; Tracked objects:
  8333 ;;		On entry : 0/0
  8334 ;;		On exit  : 0/0
  8335 ;;		Unchanged: 0/0
  8336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8337 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8338 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8339 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8340 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8341 ;;Total ram usage:        5 bytes
  8342 ;; Hardware stack levels used: 1
  8343 ;; Hardware stack levels required when called: 8
  8344 ;; This function calls:
  8345 ;;		Nothing
  8346 ;; This function is called by:
  8347 ;;		_getBatteryVoltage
  8348 ;; This function uses a non-reentrant model
  8349 ;;
  8350                           
  8351                           	psect	text31
  8352  0059E4                     __ptext31:
  8353                           	callstack 0
  8354  0059E4                     _ADCC_GetSingleConversion:
  8355                           	callstack 20
  8356                           
  8357                           ;incstack = 0
  8358                           ;ADCC_GetSingleConversion@channel stored from wreg
  8359  0059E4  6E18               	movwf	ADCC_GetSingleConversion@channel^0,c
  8360  0059E6                     
  8361                           ;mcc_generated_files/adcc.c: 137: adc_result_t ADCC_GetSingleConversion(adcc_channel_t c
      +                          hannel);mcc_generated_files/adcc.c: 138: {;mcc_generated_files/adcc.c: 140:     ADPCH = 
      +                          channel;
  8362  0059E6  0060  F063  FEF1   	movff	ADCC_GetSingleConversion@channel,16113	;volatile
  8363  0059EC                     
  8364                           ;mcc_generated_files/adcc.c: 143:     ADCON0bits.ADON = 1;
  8365  0059EC  013E               	movlb	62	; () banked
  8366  0059EE  8FF8               	bsf	248,7,b	;volatile
  8367  0059F0                     
  8368                           ; BSR set to: 62
  8369                           ;mcc_generated_files/adcc.c: 146:     ADCON0bits.ADCONT = 0;
  8370  0059F0  9DF8               	bcf	248,6,b	;volatile
  8371  0059F2                     
  8372                           ; BSR set to: 62
  8373                           ;mcc_generated_files/adcc.c: 149:     ADCON0bits.ADGO = 1;
  8374  0059F2  81F8               	bsf	248,0,b	;volatile
  8375  0059F4                     l1054:
  8376                           
  8377                           ; BSR set to: 62
  8378                           ;mcc_generated_files/adcc.c: 153:     while (ADCON0bits.ADGO)
  8379  0059F4  B1F8               	btfsc	248,0,b	;volatile
  8380  0059F6  EFFF  F02C         	goto	u9731
  8381  0059FA  EF01  F02D         	goto	u9730
  8382  0059FE                     u9731:
  8383  0059FE  EFFA  F02C         	goto	l1054
  8384  005A02                     u9730:
  8385  005A02                     
  8386                           ; BSR set to: 62
  8387                           ;mcc_generated_files/adcc.c: 159:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  8388  005A02  51F0               	movf	240,w,b	;volatile
  8389  005A04  6E17               	movwf	(??_ADCC_GetSingleConversion+1)^0,c
  8390  005A06  6A16               	clrf	??_ADCC_GetSingleConversion^0,c
  8391  005A08  51EF               	movf	239,w,b	;volatile
  8392  005A0A  2416               	addwf	??_ADCC_GetSingleConversion^0,w,c
  8393  005A0C  6E14               	movwf	?_ADCC_GetSingleConversion^0,c
  8394  005A0E  0E00               	movlw	0
  8395  005A10  2017               	addwfc	(??_ADCC_GetSingleConversion+1)^0,w,c
  8396  005A12  6E15               	movwf	(?_ADCC_GetSingleConversion+1)^0,c
  8397  005A14                     
  8398                           ; BSR set to: 62
  8399  005A14  0012               	return		;funcret
  8400  005A16                     __end_of_ADCC_GetSingleConversion:
  8401                           	callstack 0
  8402                           
  8403 ;; *************** function _calcSteering *****************
  8404 ;; Defined at:
  8405 ;;		line 234 in file "main.c"
  8406 ;; Parameters:    Size  Location     Type
  8407 ;;		None
  8408 ;; Auto vars:     Size  Location     Type
  8409 ;;  delta           2   46[BANK0 ] short 
  8410 ;; Return value:  Size  Location     Type
  8411 ;;                  1    wreg      void 
  8412 ;; Registers used:
  8413 ;;		wreg, status,2, status,0, cstack
  8414 ;; Tracked objects:
  8415 ;;		On entry : 0/0
  8416 ;;		On exit  : 0/0
  8417 ;;		Unchanged: 0/0
  8418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8420 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8421 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8422 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8423 ;;Total ram usage:        4 bytes
  8424 ;; Hardware stack levels used: 1
  8425 ;; Hardware stack levels required when called: 10
  8426 ;; This function calls:
  8427 ;;		_setSteering
  8428 ;; This function is called by:
  8429 ;;		_loop
  8430 ;;		_startAccell
  8431 ;; This function uses a non-reentrant model
  8432 ;;
  8433                           
  8434                           	psect	text32
  8435  003CB2                     __ptext32:
  8436                           	callstack 0
  8437  003CB2                     _calcSteering:
  8438                           	callstack 19
  8439  003CB2                     
  8440                           ;main.c: 235:     int16_t delta = (int16_t) (distLeft - distRight) - (int16_t) ((-5) * 1
      +                          .4142135);
  8441  003CB2  0100               	movlb	0	; () banked
  8442  003CB4  51F3               	movf	_distRight& (0+255),w,b	;volatile
  8443  003CB6  5DF5               	subwf	_distLeft& (0+255),w,b	;volatile
  8444  003CB8  6F8C               	movwf	??_calcSteering& (0+255),b
  8445  003CBA  51F4               	movf	(_distRight+1)& (0+255),w,b	;volatile
  8446  003CBC  59F6               	subwfb	(_distLeft+1)& (0+255),w,b	;volatile
  8447  003CBE  6F8D               	movwf	(??_calcSteering+1)& (0+255),b
  8448  003CC0  0E07               	movlw	7
  8449  003CC2  258C               	addwf	??_calcSteering& (0+255),w,b
  8450  003CC4  6F8E               	movwf	calcSteering@delta& (0+255),b
  8451  003CC6  0E00               	movlw	0
  8452  003CC8  218D               	addwfc	(??_calcSteering+1)& (0+255),w,b
  8453  003CCA  6F8F               	movwf	(calcSteering@delta+1)& (0+255),b
  8454                           
  8455                           ;main.c: 239:     switch (driveMode) {
  8456  003CCC  EF90  F01E         	goto	l9061
  8457  003CD0                     l1327:
  8458  003CD0                     l9051:
  8459                           
  8460                           ; BSR set to: 0
  8461                           ;main.c: 244:             if (delta > (40)) {
  8462  003CD0  BF8F               	btfsc	(calcSteering@delta+1)& (0+255),7,b
  8463  003CD2  EF74  F01E         	goto	u10171
  8464  003CD6  518F               	movf	(calcSteering@delta+1)& (0+255),w,b
  8465  003CD8  E109               	bnz	u10170
  8466  003CDA  0E29               	movlw	41
  8467  003CDC  5D8E               	subwf	calcSteering@delta& (0+255),w,b
  8468  003CDE  A0D8               	btfss	status,0,c
  8469  003CE0  EF74  F01E         	goto	u10171
  8470  003CE4  EF76  F01E         	goto	u10170
  8471  003CE8                     u10171:
  8472  003CE8  EF7C  F01E         	goto	l9055
  8473  003CEC                     u10170:
  8474  003CEC                     
  8475                           ; BSR set to: 0
  8476                           ;main.c: 245:                 delta = (40);
  8477  003CEC  0E00               	movlw	0
  8478  003CEE  6F8F               	movwf	(calcSteering@delta+1)& (0+255),b
  8479  003CF0  0E28               	movlw	40
  8480  003CF2  6F8E               	movwf	calcSteering@delta& (0+255),b
  8481                           
  8482                           ;main.c: 246:             } else if (delta < -(40)) {
  8483  003CF4  EFFD  F01E         	goto	l9085
  8484  003CF8                     l9055:
  8485                           
  8486                           ; BSR set to: 0
  8487  003CF8  AF8F               	btfss	(calcSteering@delta+1)& (0+255),7,b
  8488  003CFA  EF88  F01E         	goto	u10181
  8489  003CFE  0ED8               	movlw	216
  8490  003D00  5D8E               	subwf	calcSteering@delta& (0+255),w,b
  8491  003D02  0EFF               	movlw	255
  8492  003D04  598F               	subwfb	(calcSteering@delta+1)& (0+255),w,b
  8493  003D06  B0D8               	btfsc	status,0,c
  8494  003D08  EF88  F01E         	goto	u10181
  8495  003D0C  EF8A  F01E         	goto	u10180
  8496  003D10                     u10181:
  8497  003D10  EFAD  F01E         	goto	l1332
  8498  003D14                     u10180:
  8499  003D14                     
  8500                           ; BSR set to: 0
  8501                           ;main.c: 247:                 delta = -(40);
  8502  003D14  0EFF               	movlw	255
  8503  003D16  6F8F               	movwf	(calcSteering@delta+1)& (0+255),b
  8504  003D18  0ED8               	movlw	216
  8505  003D1A  6F8E               	movwf	calcSteering@delta& (0+255),b
  8506  003D1C  EFFD  F01E         	goto	l9085
  8507  003D20                     l9061:
  8508                           
  8509                           ; BSR set to: 0
  8510  003D20  51FC               	movf	_driveMode& (0+255),w,b
  8511  003D22  6F8C               	movwf	??_calcSteering& (0+255),b
  8512  003D24  6B8D               	clrf	(??_calcSteering+1)& (0+255),b
  8513                           
  8514                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8515                           ; Switch size 1, requested type "simple"
  8516                           ; Number of cases is 1, Range of values is 0 to 0
  8517                           ; switch strategies available:
  8518                           ; Name         Instructions Cycles
  8519                           ; simple_byte            4     3 (average)
  8520                           ;	Chosen strategy is simple_byte
  8521  003D26  518D               	movf	(??_calcSteering+1)& (0+255),w,b
  8522  003D28  0A00               	xorlw	0	; case 0
  8523  003D2A  B4D8               	btfsc	status,2,c
  8524  003D2C  EF9A  F01E         	goto	l9399
  8525  003D30  EFFD  F01E         	goto	l9085
  8526  003D34                     l9399:
  8527                           
  8528                           ; BSR set to: 0
  8529                           ; Switch size 1, requested type "simple"
  8530                           ; Number of cases is 4, Range of values is 0 to 5
  8531                           ; switch strategies available:
  8532                           ; Name         Instructions Cycles
  8533                           ; simple_byte           13     7 (average)
  8534                           ;	Chosen strategy is simple_byte
  8535  003D34  518C               	movf	??_calcSteering& (0+255),w,b
  8536  003D36  0A00               	xorlw	0	; case 0
  8537  003D38  B4D8               	btfsc	status,2,c
  8538  003D3A  EF68  F01E         	goto	l9051
  8539  003D3E  0A01               	xorlw	1	; case 1
  8540  003D40  B4D8               	btfsc	status,2,c
  8541  003D42  EF68  F01E         	goto	l1327
  8542  003D46  0A05               	xorlw	5	; case 4
  8543  003D48  B4D8               	btfsc	status,2,c
  8544  003D4A  EF68  F01E         	goto	l9051
  8545  003D4E  0A01               	xorlw	1	; case 5
  8546  003D50  B4D8               	btfsc	status,2,c
  8547  003D52  EF68  F01E         	goto	l9051
  8548  003D56  EFFD  F01E         	goto	l9085
  8549  003D5A                     l1332:
  8550                           
  8551                           ; BSR set to: 0
  8552                           ;main.c: 254:     switch (driveMode) {
  8553  003D5A  EFFD  F01E         	goto	l9085
  8554  003D5E                     l9063:
  8555                           
  8556                           ; BSR set to: 0
  8557                           ;main.c: 256:             setSteering(delta, Ratio);
  8558  003D5E  C08E  F083         	movff	calcSteering@delta,setSteering@steering
  8559  003D62  C08F  F084         	movff	calcSteering@delta+1,setSteering@steering+1
  8560  003D66  0E02               	movlw	2
  8561  003D68  6F85               	movwf	setSteering@steeringMode& (0+255),b
  8562  003D6A  EC84  F01C         	call	_setSteering	;wreg free
  8563                           
  8564                           ;main.c: 257:             break;
  8565  003D6E  EF22  F01F         	goto	l1346
  8566  003D72                     l9065:
  8567                           
  8568                           ; BSR set to: 0
  8569                           ;main.c: 259:             setSteering(delta, Front);
  8570  003D72  C08E  F083         	movff	calcSteering@delta,setSteering@steering
  8571  003D76  C08F  F084         	movff	calcSteering@delta+1,setSteering@steering+1
  8572  003D7A  0E03               	movlw	3
  8573  003D7C  6F85               	movwf	setSteering@steeringMode& (0+255),b
  8574  003D7E  EC84  F01C         	call	_setSteering	;wreg free
  8575                           
  8576                           ;main.c: 260:             break;
  8577  003D82  EF22  F01F         	goto	l1346
  8578  003D86                     l9067:
  8579                           
  8580                           ; BSR set to: 0
  8581                           ;main.c: 262:             setSteering(-(50), Inverted);
  8582  003D86  0EFF               	movlw	255
  8583  003D88  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  8584  003D8A  0ECE               	movlw	206
  8585  003D8C  6F83               	movwf	setSteering@steering& (0+255),b
  8586  003D8E  0E00               	movlw	0
  8587  003D90  6F85               	movwf	setSteering@steeringMode& (0+255),b
  8588  003D92  EC84  F01C         	call	_setSteering	;wreg free
  8589                           
  8590                           ;main.c: 263:             break;
  8591  003D96  EF22  F01F         	goto	l1346
  8592  003D9A                     l9069:
  8593                           
  8594                           ; BSR set to: 0
  8595                           ;main.c: 265:             setSteering((50), Inverted);
  8596  003D9A  0E00               	movlw	0
  8597  003D9C  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  8598  003D9E  0E32               	movlw	50
  8599  003DA0  6F83               	movwf	setSteering@steering& (0+255),b
  8600  003DA2  0E00               	movlw	0
  8601  003DA4  6F85               	movwf	setSteering@steeringMode& (0+255),b
  8602  003DA6  EC84  F01C         	call	_setSteering	;wreg free
  8603                           
  8604                           ;main.c: 266:             break;
  8605  003DAA  EF22  F01F         	goto	l1346
  8606  003DAE                     l9071:
  8607                           
  8608                           ; BSR set to: 0
  8609                           ;main.c: 268:             if (curveMode == InCurve) {
  8610  003DAE  0E02               	movlw	2
  8611  003DB0  19FB               	xorwf	_curveMode& (0+255),w,b
  8612  003DB2  A4D8               	btfss	status,2,c
  8613  003DB4  EFDE  F01E         	goto	u10191
  8614  003DB8  EFE0  F01E         	goto	u10190
  8615  003DBC                     u10191:
  8616  003DBC  EFAF  F01E         	goto	l9063
  8617  003DC0                     u10190:
  8618  003DC0                     
  8619                           ; BSR set to: 0
  8620                           ;main.c: 269:                 setSteering((50), Ratio);
  8621  003DC0  0E00               	movlw	0
  8622  003DC2  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  8623  003DC4  0E32               	movlw	50
  8624  003DC6  6F83               	movwf	setSteering@steering& (0+255),b
  8625  003DC8  0E02               	movlw	2
  8626  003DCA  6F85               	movwf	setSteering@steeringMode& (0+255),b
  8627  003DCC  EC84  F01C         	call	_setSteering	;wreg free
  8628                           
  8629                           ;main.c: 270:             } else {
  8630  003DD0  EF22  F01F         	goto	l1346
  8631  003DD4                     l9077:
  8632                           
  8633                           ; BSR set to: 0
  8634                           ;main.c: 275:             if (curveMode == InCurve) {
  8635  003DD4  0E02               	movlw	2
  8636  003DD6  19FB               	xorwf	_curveMode& (0+255),w,b
  8637  003DD8  A4D8               	btfss	status,2,c
  8638  003DDA  EFF1  F01E         	goto	u10201
  8639  003DDE  EFF3  F01E         	goto	u10200
  8640  003DE2                     u10201:
  8641  003DE2  EFAF  F01E         	goto	l9063
  8642  003DE6                     u10200:
  8643  003DE6                     
  8644                           ; BSR set to: 0
  8645                           ;main.c: 276:                 setSteering(-(50), Ratio);
  8646  003DE6  0EFF               	movlw	255
  8647  003DE8  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  8648  003DEA  0ECE               	movlw	206
  8649  003DEC  6F83               	movwf	setSteering@steering& (0+255),b
  8650  003DEE  0E02               	movlw	2
  8651  003DF0  6F85               	movwf	setSteering@steeringMode& (0+255),b
  8652  003DF2  EC84  F01C         	call	_setSteering	;wreg free
  8653                           
  8654                           ;main.c: 277:             } else {
  8655  003DF6  EF22  F01F         	goto	l1346
  8656  003DFA                     l9085:
  8657                           
  8658                           ; BSR set to: 0
  8659  003DFA  51FC               	movf	_driveMode& (0+255),w,b
  8660  003DFC  6F8C               	movwf	??_calcSteering& (0+255),b
  8661  003DFE  6B8D               	clrf	(??_calcSteering+1)& (0+255),b
  8662                           
  8663                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8664                           ; Switch size 1, requested type "simple"
  8665                           ; Number of cases is 1, Range of values is 0 to 0
  8666                           ; switch strategies available:
  8667                           ; Name         Instructions Cycles
  8668                           ; simple_byte            4     3 (average)
  8669                           ;	Chosen strategy is simple_byte
  8670  003E00  518D               	movf	(??_calcSteering+1)& (0+255),w,b
  8671  003E02  0A00               	xorlw	0	; case 0
  8672  003E04  B4D8               	btfsc	status,2,c
  8673  003E06  EF07  F01F         	goto	l9401
  8674  003E0A  EF22  F01F         	goto	l1346
  8675  003E0E                     l9401:
  8676                           
  8677                           ; BSR set to: 0
  8678                           ; Switch size 1, requested type "simple"
  8679                           ; Number of cases is 6, Range of values is 0 to 5
  8680                           ; switch strategies available:
  8681                           ; Name         Instructions Cycles
  8682                           ; simple_byte           19    10 (average)
  8683                           ;	Chosen strategy is simple_byte
  8684  003E0E  518C               	movf	??_calcSteering& (0+255),w,b
  8685  003E10  0A00               	xorlw	0	; case 0
  8686  003E12  B4D8               	btfsc	status,2,c
  8687  003E14  EFB9  F01E         	goto	l9065
  8688  003E18  0A01               	xorlw	1	; case 1
  8689  003E1A  B4D8               	btfsc	status,2,c
  8690  003E1C  EFAF  F01E         	goto	l9063
  8691  003E20  0A03               	xorlw	3	; case 2
  8692  003E22  B4D8               	btfsc	status,2,c
  8693  003E24  EFC3  F01E         	goto	l9067
  8694  003E28  0A01               	xorlw	1	; case 3
  8695  003E2A  B4D8               	btfsc	status,2,c
  8696  003E2C  EFCD  F01E         	goto	l9069
  8697  003E30  0A07               	xorlw	7	; case 4
  8698  003E32  B4D8               	btfsc	status,2,c
  8699  003E34  EFD7  F01E         	goto	l9071
  8700  003E38  0A01               	xorlw	1	; case 5
  8701  003E3A  B4D8               	btfsc	status,2,c
  8702  003E3C  EFEA  F01E         	goto	l9077
  8703  003E40  EF22  F01F         	goto	l1346
  8704  003E44                     l1346:
  8705  003E44  0012               	return		;funcret
  8706  003E46                     __end_of_calcSteering:
  8707                           	callstack 0
  8708                           
  8709 ;; *************** function _setSteering *****************
  8710 ;; Defined at:
  8711 ;;		line 392 in file "main.c"
  8712 ;; Parameters:    Size  Location     Type
  8713 ;;  steering        2   35[BANK0 ] short 
  8714 ;;  steeringMode    1   37[BANK0 ] enum E17305
  8715 ;; Auto vars:     Size  Location     Type
  8716 ;;  steeringB       2   42[BANK0 ] short 
  8717 ;;  steeringF       2   40[BANK0 ] short 
  8718 ;; Return value:  Size  Location     Type
  8719 ;;                  1    wreg      void 
  8720 ;; Registers used:
  8721 ;;		wreg, status,2, status,0, cstack
  8722 ;; Tracked objects:
  8723 ;;		On entry : 0/0
  8724 ;;		On exit  : 0/0
  8725 ;;		Unchanged: 0/0
  8726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8727 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8728 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8729 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8730 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8731 ;;Total ram usage:        9 bytes
  8732 ;; Hardware stack levels used: 1
  8733 ;; Hardware stack levels required when called: 9
  8734 ;; This function calls:
  8735 ;;		_PWM5_LoadDutyValue
  8736 ;;		_PWM6_LoadDutyValue
  8737 ;;		___fldiv
  8738 ;;		___fltol
  8739 ;;		___xxtofl
  8740 ;; This function is called by:
  8741 ;;		_loop
  8742 ;;		_checkBatt
  8743 ;;		_calcSteering
  8744 ;;		_startAccell
  8745 ;; This function uses a non-reentrant model
  8746 ;;
  8747                           
  8748                           	psect	text33
  8749  003908                     __ptext33:
  8750                           	callstack 0
  8751  003908                     _setSteering:
  8752                           	callstack 20
  8753  003908  0E00               	movlw	0
  8754  00390A  0100               	movlb	0	; () banked
  8755  00390C  6F8B               	movwf	(setSteering@steeringB+1)& (0+255),b
  8756  00390E  0E00               	movlw	0
  8757  003910  6F8A               	movwf	setSteering@steeringB& (0+255),b
  8758                           
  8759                           ;main.c: 394:     switch (steeringMode) {
  8760  003912  EFFF  F01C         	goto	l8867
  8761  003916                     l1389:
  8762                           
  8763                           ; BSR set to: 0
  8764                           ;main.c: 396:             steeringF = (+steering);
  8765  003916  C083  F088         	movff	setSteering@steering,setSteering@steeringF
  8766  00391A  C084  F089         	movff	setSteering@steering+1,setSteering@steeringF+1
  8767                           
  8768                           ;main.c: 397:             steeringB = -steering;
  8769  00391E  C083  F086         	movff	setSteering@steering,??_setSteering
  8770  003922  C084  F087         	movff	setSteering@steering+1,??_setSteering+1
  8771  003926  1F86               	comf	??_setSteering& (0+255),f,b
  8772  003928  1F87               	comf	(??_setSteering+1)& (0+255),f,b
  8773  00392A  4B86               	infsnz	??_setSteering& (0+255),f,b
  8774  00392C  2B87               	incf	(??_setSteering+1)& (0+255),f,b
  8775  00392E  C086  F08A         	movff	??_setSteering,setSteering@steeringB
  8776  003932  C087  F08B         	movff	??_setSteering+1,setSteering@steeringB+1
  8777                           
  8778                           ;main.c: 398:             break;
  8779  003936  EF20  F01D         	goto	l8869
  8780  00393A                     l1391:
  8781                           
  8782                           ; BSR set to: 0
  8783                           ;main.c: 400:             steeringF = (+steering);
  8784  00393A  C083  F088         	movff	setSteering@steering,setSteering@steeringF
  8785  00393E  C084  F089         	movff	setSteering@steering+1,setSteering@steeringF+1
  8786                           
  8787                           ;main.c: 401:             steeringB = (+steering);
  8788  003942  C083  F08A         	movff	setSteering@steering,setSteering@steeringB
  8789  003946  C084  F08B         	movff	setSteering@steering+1,setSteering@steeringB+1
  8790                           
  8791                           ;main.c: 402:             break;
  8792  00394A  EF20  F01D         	goto	l8869
  8793  00394E                     l1392:
  8794                           
  8795                           ; BSR set to: 0
  8796                           ;main.c: 404:             steeringF = (+steering);
  8797  00394E  C083  F088         	movff	setSteering@steering,setSteering@steeringF
  8798  003952  C084  F089         	movff	setSteering@steering+1,setSteering@steeringF+1
  8799  003956                     
  8800                           ; BSR set to: 0
  8801                           ;main.c: 405:             steeringB = (-steering / (1.25));
  8802  003956  0E00               	movlw	0
  8803  003958  6E2E               	movwf	___fldiv@a^0,c
  8804  00395A  0E00               	movlw	0
  8805  00395C  6E2F               	movwf	(___fldiv@a+1)^0,c
  8806  00395E  0EA0               	movlw	160
  8807  003960  6E30               	movwf	(___fldiv@a+2)^0,c
  8808  003962  0E3F               	movlw	63
  8809  003964  6E31               	movwf	(___fldiv@a+3)^0,c
  8810  003966  C083  F086         	movff	setSteering@steering,??_setSteering
  8811  00396A  C084  F087         	movff	setSteering@steering+1,??_setSteering+1
  8812  00396E  1F86               	comf	??_setSteering& (0+255),f,b
  8813  003970  1F87               	comf	(??_setSteering+1)& (0+255),f,b
  8814  003972  4B86               	infsnz	??_setSteering& (0+255),f,b
  8815  003974  2B87               	incf	(??_setSteering+1)& (0+255),f,b
  8816  003976  C086  F01C         	movff	??_setSteering,___xxtofl@val
  8817  00397A  C087  F01D         	movff	??_setSteering+1,___xxtofl@val+1
  8818  00397E  0E00               	movlw	0
  8819  003980  BE1D               	btfsc	(___xxtofl@val+1)^0,7,c
  8820  003982  0EFF               	movlw	-1
  8821  003984  6E1E               	movwf	(___xxtofl@val+2)^0,c
  8822  003986  6E1F               	movwf	(___xxtofl@val+3)^0,c
  8823  003988  0E01               	movlw	1
  8824  00398A  EC7F  F01D         	call	___xxtofl
  8825  00398E  C01C  F02A         	movff	?___xxtofl,___fldiv@b
  8826  003992  C01D  F02B         	movff	?___xxtofl+1,___fldiv@b+1
  8827  003996  C01E  F02C         	movff	?___xxtofl+2,___fldiv@b+2
  8828  00399A  C01F  F02D         	movff	?___xxtofl+3,___fldiv@b+3
  8829  00399E  ECBF  F015         	call	___fldiv	;wreg free
  8830  0039A2  C02A  F079         	movff	?___fldiv,___fltol@f1
  8831  0039A6  C02B  F07A         	movff	?___fldiv+1,___fltol@f1+1
  8832  0039AA  C02C  F07B         	movff	?___fldiv+2,___fltol@f1+2
  8833  0039AE  C02D  F07C         	movff	?___fldiv+3,___fltol@f1+3
  8834  0039B2  ECEB  F022         	call	___fltol	;wreg free
  8835  0039B6  C079  F08A         	movff	?___fltol,setSteering@steeringB
  8836  0039BA  C07A  F08B         	movff	?___fltol+1,setSteering@steeringB+1
  8837                           
  8838                           ;main.c: 406:             break;
  8839  0039BE  EF20  F01D         	goto	l8869
  8840  0039C2                     l1393:
  8841                           
  8842                           ; BSR set to: 0
  8843                           ;main.c: 408:             steeringF = (+steering);
  8844  0039C2  C083  F088         	movff	setSteering@steering,setSteering@steeringF
  8845  0039C6  C084  F089         	movff	setSteering@steering+1,setSteering@steeringF+1
  8846  0039CA                     
  8847                           ; BSR set to: 0
  8848                           ;main.c: 409:             steeringB = 0;
  8849  0039CA  0E00               	movlw	0
  8850  0039CC  6F8B               	movwf	(setSteering@steeringB+1)& (0+255),b
  8851  0039CE  0E00               	movlw	0
  8852  0039D0  6F8A               	movwf	setSteering@steeringB& (0+255),b
  8853                           
  8854                           ;main.c: 410:             break;
  8855  0039D2  EF20  F01D         	goto	l8869
  8856  0039D6                     l8859:
  8857                           
  8858                           ; BSR set to: 0
  8859                           ;main.c: 412:             steeringF = 0;
  8860  0039D6  0E00               	movlw	0
  8861  0039D8  6F89               	movwf	(setSteering@steeringF+1)& (0+255),b
  8862  0039DA  0E00               	movlw	0
  8863  0039DC  6F88               	movwf	setSteering@steeringF& (0+255),b
  8864  0039DE                     
  8865                           ; BSR set to: 0
  8866                           ;main.c: 413:             steeringB = (+steering);
  8867  0039DE  C083  F08A         	movff	setSteering@steering,setSteering@steeringB
  8868  0039E2  C084  F08B         	movff	setSteering@steering+1,setSteering@steeringB+1
  8869                           
  8870                           ;main.c: 414:             break;
  8871  0039E6  EF20  F01D         	goto	l8869
  8872  0039EA                     l8863:
  8873                           
  8874                           ; BSR set to: 0
  8875                           ;main.c: 416:             steeringF = 0;
  8876  0039EA  0E00               	movlw	0
  8877  0039EC  6F89               	movwf	(setSteering@steeringF+1)& (0+255),b
  8878  0039EE  0E00               	movlw	0
  8879  0039F0  6F88               	movwf	setSteering@steeringF& (0+255),b
  8880                           
  8881                           ;main.c: 417:             steeringB = 0;
  8882  0039F2  0E00               	movlw	0
  8883  0039F4  6F8B               	movwf	(setSteering@steeringB+1)& (0+255),b
  8884  0039F6  0E00               	movlw	0
  8885  0039F8  6F8A               	movwf	setSteering@steeringB& (0+255),b
  8886                           
  8887                           ;main.c: 418:             break;
  8888  0039FA  EF20  F01D         	goto	l8869
  8889  0039FE                     l8867:
  8890                           
  8891                           ; BSR set to: 0
  8892  0039FE  5185               	movf	setSteering@steeringMode& (0+255),w,b
  8893  003A00  6F86               	movwf	??_setSteering& (0+255),b
  8894  003A02  6B87               	clrf	(??_setSteering+1)& (0+255),b
  8895                           
  8896                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8897                           ; Switch size 1, requested type "simple"
  8898                           ; Number of cases is 1, Range of values is 0 to 0
  8899                           ; switch strategies available:
  8900                           ; Name         Instructions Cycles
  8901                           ; simple_byte            4     3 (average)
  8902                           ;	Chosen strategy is simple_byte
  8903  003A04  5187               	movf	(??_setSteering+1)& (0+255),w,b
  8904  003A06  0A00               	xorlw	0	; case 0
  8905  003A08  B4D8               	btfsc	status,2,c
  8906  003A0A  EF09  F01D         	goto	l9403
  8907  003A0E  EFF5  F01C         	goto	l8863
  8908  003A12                     l9403:
  8909                           
  8910                           ; BSR set to: 0
  8911                           ; Switch size 1, requested type "simple"
  8912                           ; Number of cases is 5, Range of values is 0 to 4
  8913                           ; switch strategies available:
  8914                           ; Name         Instructions Cycles
  8915                           ; simple_byte           16     9 (average)
  8916                           ;	Chosen strategy is simple_byte
  8917  003A12  5186               	movf	??_setSteering& (0+255),w,b
  8918  003A14  0A00               	xorlw	0	; case 0
  8919  003A16  B4D8               	btfsc	status,2,c
  8920  003A18  EF8B  F01C         	goto	l1389
  8921  003A1C  0A01               	xorlw	1	; case 1
  8922  003A1E  B4D8               	btfsc	status,2,c
  8923  003A20  EF9D  F01C         	goto	l1391
  8924  003A24  0A03               	xorlw	3	; case 2
  8925  003A26  B4D8               	btfsc	status,2,c
  8926  003A28  EFA7  F01C         	goto	l1392
  8927  003A2C  0A01               	xorlw	1	; case 3
  8928  003A2E  B4D8               	btfsc	status,2,c
  8929  003A30  EFE1  F01C         	goto	l1393
  8930  003A34  0A07               	xorlw	7	; case 4
  8931  003A36  B4D8               	btfsc	status,2,c
  8932  003A38  EFEB  F01C         	goto	l8859
  8933  003A3C  EFF5  F01C         	goto	l8863
  8934  003A40                     l8869:
  8935                           
  8936                           ;main.c: 421:     if (steeringF > ((65))) {
  8937  003A40  0100               	movlb	0	; () banked
  8938  003A42  BF89               	btfsc	(setSteering@steeringF+1)& (0+255),7,b
  8939  003A44  EF2D  F01D         	goto	u9841
  8940  003A48  5189               	movf	(setSteering@steeringF+1)& (0+255),w,b
  8941  003A4A  E109               	bnz	u9840
  8942  003A4C  0E42               	movlw	66
  8943  003A4E  5D88               	subwf	setSteering@steeringF& (0+255),w,b
  8944  003A50  A0D8               	btfss	status,0,c
  8945  003A52  EF2D  F01D         	goto	u9841
  8946  003A56  EF2F  F01D         	goto	u9840
  8947  003A5A                     u9841:
  8948  003A5A  EF35  F01D         	goto	l8873
  8949  003A5E                     u9840:
  8950  003A5E                     
  8951                           ; BSR set to: 0
  8952                           ;main.c: 422:         steeringF = ((65));
  8953  003A5E  0E00               	movlw	0
  8954  003A60  6F89               	movwf	(setSteering@steeringF+1)& (0+255),b
  8955  003A62  0E41               	movlw	65
  8956  003A64  6F88               	movwf	setSteering@steeringF& (0+255),b
  8957                           
  8958                           ;main.c: 423:     } else if (steeringF < (-(65))) {
  8959  003A66  EF47  F01D         	goto	l8877
  8960  003A6A                     l8873:
  8961                           
  8962                           ; BSR set to: 0
  8963  003A6A  AF89               	btfss	(setSteering@steeringF+1)& (0+255),7,b
  8964  003A6C  EF41  F01D         	goto	u9851
  8965  003A70  0EBF               	movlw	191
  8966  003A72  5D88               	subwf	setSteering@steeringF& (0+255),w,b
  8967  003A74  0EFF               	movlw	255
  8968  003A76  5989               	subwfb	(setSteering@steeringF+1)& (0+255),w,b
  8969  003A78  B0D8               	btfsc	status,0,c
  8970  003A7A  EF41  F01D         	goto	u9851
  8971  003A7E  EF43  F01D         	goto	u9850
  8972  003A82                     u9851:
  8973  003A82  EF47  F01D         	goto	l8877
  8974  003A86                     u9850:
  8975  003A86                     
  8976                           ; BSR set to: 0
  8977                           ;main.c: 424:         steeringF = (-(65));
  8978  003A86  0EFF               	movlw	255
  8979  003A88  6F89               	movwf	(setSteering@steeringF+1)& (0+255),b
  8980  003A8A  0EBF               	movlw	191
  8981  003A8C  6F88               	movwf	setSteering@steeringF& (0+255),b
  8982  003A8E                     l8877:
  8983                           
  8984                           ; BSR set to: 0
  8985                           ;main.c: 427:     if (steeringB > ((40))) {
  8986  003A8E  BF8B               	btfsc	(setSteering@steeringB+1)& (0+255),7,b
  8987  003A90  EF53  F01D         	goto	u9861
  8988  003A94  518B               	movf	(setSteering@steeringB+1)& (0+255),w,b
  8989  003A96  E109               	bnz	u9860
  8990  003A98  0E29               	movlw	41
  8991  003A9A  5D8A               	subwf	setSteering@steeringB& (0+255),w,b
  8992  003A9C  A0D8               	btfss	status,0,c
  8993  003A9E  EF53  F01D         	goto	u9861
  8994  003AA2  EF55  F01D         	goto	u9860
  8995  003AA6                     u9861:
  8996  003AA6  EF5B  F01D         	goto	l8881
  8997  003AAA                     u9860:
  8998  003AAA                     
  8999                           ; BSR set to: 0
  9000                           ;main.c: 428:         steeringB = ((40));
  9001  003AAA  0E00               	movlw	0
  9002  003AAC  6F8B               	movwf	(setSteering@steeringB+1)& (0+255),b
  9003  003AAE  0E28               	movlw	40
  9004  003AB0  6F8A               	movwf	setSteering@steeringB& (0+255),b
  9005                           
  9006                           ;main.c: 429:     } else if (steeringB < (-(40))) {
  9007  003AB2  EF6D  F01D         	goto	l8885
  9008  003AB6                     l8881:
  9009                           
  9010                           ; BSR set to: 0
  9011  003AB6  AF8B               	btfss	(setSteering@steeringB+1)& (0+255),7,b
  9012  003AB8  EF67  F01D         	goto	u9871
  9013  003ABC  0ED8               	movlw	216
  9014  003ABE  5D8A               	subwf	setSteering@steeringB& (0+255),w,b
  9015  003AC0  0EFF               	movlw	255
  9016  003AC2  598B               	subwfb	(setSteering@steeringB+1)& (0+255),w,b
  9017  003AC4  B0D8               	btfsc	status,0,c
  9018  003AC6  EF67  F01D         	goto	u9871
  9019  003ACA  EF69  F01D         	goto	u9870
  9020  003ACE                     u9871:
  9021  003ACE  EF6D  F01D         	goto	l8885
  9022  003AD2                     u9870:
  9023  003AD2                     
  9024                           ; BSR set to: 0
  9025                           ;main.c: 430:         steeringB = (-(40));
  9026  003AD2  0EFF               	movlw	255
  9027  003AD4  6F8B               	movwf	(setSteering@steeringB+1)& (0+255),b
  9028  003AD6  0ED8               	movlw	216
  9029  003AD8  6F8A               	movwf	setSteering@steeringB& (0+255),b
  9030  003ADA                     l8885:
  9031                           
  9032                           ; BSR set to: 0
  9033                           ;main.c: 434:     PWM6_LoadDutyValue((uint16_t) ((352) + steeringF));
  9034  003ADA  0E60               	movlw	96
  9035  003ADC  2588               	addwf	setSteering@steeringF& (0+255),w,b
  9036  003ADE  6E14               	movwf	PWM6_LoadDutyValue@dutyValue^0,c
  9037  003AE0  0E01               	movlw	1
  9038  003AE2  2189               	addwfc	(setSteering@steeringF+1)& (0+255),w,b
  9039  003AE4  6E15               	movwf	(PWM6_LoadDutyValue@dutyValue+1)^0,c
  9040  003AE6  EC55  F02C         	call	_PWM6_LoadDutyValue	;wreg free
  9041  003AEA                     
  9042                           ;main.c: 435:     PWM5_LoadDutyValue((uint16_t) ((357) + steeringB));
  9043  003AEA  0E65               	movlw	101
  9044  003AEC  0100               	movlb	0	; () banked
  9045  003AEE  258A               	addwf	setSteering@steeringB& (0+255),w,b
  9046  003AF0  6E14               	movwf	PWM5_LoadDutyValue@dutyValue^0,c
  9047  003AF2  0E01               	movlw	1
  9048  003AF4  218B               	addwfc	(setSteering@steeringB+1)& (0+255),w,b
  9049  003AF6  6E15               	movwf	(PWM5_LoadDutyValue@dutyValue+1)^0,c
  9050  003AF8  EC6F  F02C         	call	_PWM5_LoadDutyValue	;wreg free
  9051  003AFC  0012               	return		;funcret
  9052  003AFE                     __end_of_setSteering:
  9053                           	callstack 0
  9054                           
  9055 ;; *************** function ___fldiv *****************
  9056 ;; Defined at:
  9057 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  9058 ;; Parameters:    Size  Location     Type
  9059 ;;  b               4   41[COMRAM] void 
  9060 ;;  a               4   45[COMRAM] void 
  9061 ;; Auto vars:     Size  Location     Type
  9062 ;;  grs             4    7[BANK0 ] unsigned long 
  9063 ;;  rem             4    0[BANK0 ] unsigned long 
  9064 ;;  new_exp         2    5[BANK0 ] short 
  9065 ;;  aexp            1   12[BANK0 ] unsigned char 
  9066 ;;  bexp            1   11[BANK0 ] unsigned char 
  9067 ;;  sign            1    4[BANK0 ] unsigned char 
  9068 ;; Return value:  Size  Location     Type
  9069 ;;                  4   41[COMRAM] unsigned char 
  9070 ;; Registers used:
  9071 ;;		wreg, status,2, status,0
  9072 ;; Tracked objects:
  9073 ;;		On entry : 0/0
  9074 ;;		On exit  : 0/0
  9075 ;;		Unchanged: 0/0
  9076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9077 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9078 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9079 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9080 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9081 ;;Total ram usage:       25 bytes
  9082 ;; Hardware stack levels used: 1
  9083 ;; Hardware stack levels required when called: 8
  9084 ;; This function calls:
  9085 ;;		Nothing
  9086 ;; This function is called by:
  9087 ;;		_getBatteryVoltage
  9088 ;;		_setSteering
  9089 ;;		_efgtoa
  9090 ;; This function uses a non-reentrant model
  9091 ;;
  9092                           
  9093                           	psect	text34
  9094  002B7E                     __ptext34:
  9095                           	callstack 0
  9096  002B7E                     ___fldiv:
  9097                           	callstack 20
  9098  002B7E  502D               	movf	(___fldiv@b+3)^0,w,c
  9099  002B80  0B80               	andlw	128
  9100  002B82  0100               	movlb	0	; () banked
  9101  002B84  6F64               	movwf	___fldiv@sign& (0+255),b
  9102  002B86  502D               	movf	(___fldiv@b+3)^0,w,c
  9103  002B88  242D               	addwf	(___fldiv@b+3)^0,w,c
  9104  002B8A  6F6B               	movwf	___fldiv@bexp& (0+255),b
  9105  002B8C                     
  9106                           ; BSR set to: 0
  9107  002B8C  AE2C               	btfss	(___fldiv@b+2)^0,7,c
  9108  002B8E  EFCB  F015         	goto	u7901
  9109  002B92  EFCD  F015         	goto	u7900
  9110  002B96                     u7901:
  9111  002B96  EFCE  F015         	goto	l7783
  9112  002B9A                     u7900:
  9113  002B9A                     
  9114                           ; BSR set to: 0
  9115  002B9A  816B               	bsf	___fldiv@bexp& (0+255),0,b
  9116  002B9C                     l7783:
  9117                           
  9118                           ; BSR set to: 0
  9119  002B9C  516B               	movf	___fldiv@bexp& (0+255),w,b
  9120  002B9E  B4D8               	btfsc	status,2,c
  9121  002BA0  EFD4  F015         	goto	u7911
  9122  002BA4  EFD6  F015         	goto	u7910
  9123  002BA8                     u7911:
  9124  002BA8  EFEB  F015         	goto	l7793
  9125  002BAC                     u7910:
  9126  002BAC                     
  9127                           ; BSR set to: 0
  9128  002BAC  296B               	incf	___fldiv@bexp& (0+255),w,b
  9129  002BAE  A4D8               	btfss	status,2,c
  9130  002BB0  EFDC  F015         	goto	u7921
  9131  002BB4  EFDE  F015         	goto	u7920
  9132  002BB8                     u7921:
  9133  002BB8  EFE6  F015         	goto	l7789
  9134  002BBC                     u7920:
  9135  002BBC                     
  9136                           ; BSR set to: 0
  9137  002BBC  0E00               	movlw	0
  9138  002BBE  6E2A               	movwf	___fldiv@b^0,c
  9139  002BC0  0E00               	movlw	0
  9140  002BC2  6E2B               	movwf	(___fldiv@b+1)^0,c
  9141  002BC4  0E00               	movlw	0
  9142  002BC6  6E2C               	movwf	(___fldiv@b+2)^0,c
  9143  002BC8  0E00               	movlw	0
  9144  002BCA  6E2D               	movwf	(___fldiv@b+3)^0,c
  9145  002BCC                     l7789:
  9146                           
  9147                           ; BSR set to: 0
  9148  002BCC  8E2C               	bsf	(___fldiv@b+2)^0,7,c
  9149  002BCE                     
  9150                           ; BSR set to: 0
  9151  002BCE  0E00               	movlw	0
  9152  002BD0  6E2D               	movwf	(___fldiv@b+3)^0,c
  9153  002BD2  EFF3  F015         	goto	l7795
  9154  002BD6                     l7793:
  9155                           
  9156                           ; BSR set to: 0
  9157  002BD6  0E00               	movlw	0
  9158  002BD8  6E2A               	movwf	___fldiv@b^0,c
  9159  002BDA  0E00               	movlw	0
  9160  002BDC  6E2B               	movwf	(___fldiv@b+1)^0,c
  9161  002BDE  0E00               	movlw	0
  9162  002BE0  6E2C               	movwf	(___fldiv@b+2)^0,c
  9163  002BE2  0E00               	movlw	0
  9164  002BE4  6E2D               	movwf	(___fldiv@b+3)^0,c
  9165  002BE6                     l7795:
  9166                           
  9167                           ; BSR set to: 0
  9168  002BE6  5031               	movf	(___fldiv@a+3)^0,w,c
  9169  002BE8  0B80               	andlw	128
  9170  002BEA  1B64               	xorwf	___fldiv@sign& (0+255),f,b
  9171  002BEC                     
  9172                           ; BSR set to: 0
  9173  002BEC  5031               	movf	(___fldiv@a+3)^0,w,c
  9174  002BEE  2431               	addwf	(___fldiv@a+3)^0,w,c
  9175  002BF0  6F6C               	movwf	___fldiv@aexp& (0+255),b
  9176  002BF2                     
  9177                           ; BSR set to: 0
  9178  002BF2  AE30               	btfss	(___fldiv@a+2)^0,7,c
  9179  002BF4  EFFE  F015         	goto	u7931
  9180  002BF8  EF00  F016         	goto	u7930
  9181  002BFC                     u7931:
  9182  002BFC  EF01  F016         	goto	l7803
  9183  002C00                     u7930:
  9184  002C00                     
  9185                           ; BSR set to: 0
  9186  002C00  816C               	bsf	___fldiv@aexp& (0+255),0,b
  9187  002C02                     l7803:
  9188                           
  9189                           ; BSR set to: 0
  9190  002C02  516C               	movf	___fldiv@aexp& (0+255),w,b
  9191  002C04  B4D8               	btfsc	status,2,c
  9192  002C06  EF07  F016         	goto	u7941
  9193  002C0A  EF09  F016         	goto	u7940
  9194  002C0E                     u7941:
  9195  002C0E  EF1E  F016         	goto	l7813
  9196  002C12                     u7940:
  9197  002C12                     
  9198                           ; BSR set to: 0
  9199  002C12  296C               	incf	___fldiv@aexp& (0+255),w,b
  9200  002C14  A4D8               	btfss	status,2,c
  9201  002C16  EF0F  F016         	goto	u7951
  9202  002C1A  EF11  F016         	goto	u7950
  9203  002C1E                     u7951:
  9204  002C1E  EF19  F016         	goto	l7809
  9205  002C22                     u7950:
  9206  002C22                     
  9207                           ; BSR set to: 0
  9208  002C22  0E00               	movlw	0
  9209  002C24  6E2E               	movwf	___fldiv@a^0,c
  9210  002C26  0E00               	movlw	0
  9211  002C28  6E2F               	movwf	(___fldiv@a+1)^0,c
  9212  002C2A  0E00               	movlw	0
  9213  002C2C  6E30               	movwf	(___fldiv@a+2)^0,c
  9214  002C2E  0E00               	movlw	0
  9215  002C30  6E31               	movwf	(___fldiv@a+3)^0,c
  9216  002C32                     l7809:
  9217                           
  9218                           ; BSR set to: 0
  9219  002C32  8E30               	bsf	(___fldiv@a+2)^0,7,c
  9220  002C34                     
  9221                           ; BSR set to: 0
  9222  002C34  0E00               	movlw	0
  9223  002C36  6E31               	movwf	(___fldiv@a+3)^0,c
  9224  002C38  EF26  F016         	goto	l7815
  9225  002C3C                     l7813:
  9226                           
  9227                           ; BSR set to: 0
  9228  002C3C  0E00               	movlw	0
  9229  002C3E  6E2E               	movwf	___fldiv@a^0,c
  9230  002C40  0E00               	movlw	0
  9231  002C42  6E2F               	movwf	(___fldiv@a+1)^0,c
  9232  002C44  0E00               	movlw	0
  9233  002C46  6E30               	movwf	(___fldiv@a+2)^0,c
  9234  002C48  0E00               	movlw	0
  9235  002C4A  6E31               	movwf	(___fldiv@a+3)^0,c
  9236  002C4C                     l7815:
  9237                           
  9238                           ; BSR set to: 0
  9239  002C4C  502E               	movf	___fldiv@a^0,w,c
  9240  002C4E  102F               	iorwf	(___fldiv@a+1)^0,w,c
  9241  002C50  1030               	iorwf	(___fldiv@a+2)^0,w,c
  9242  002C52  1031               	iorwf	(___fldiv@a+3)^0,w,c
  9243  002C54  A4D8               	btfss	status,2,c
  9244  002C56  EF2F  F016         	goto	u7961
  9245  002C5A  EF31  F016         	goto	u7960
  9246  002C5E                     u7961:
  9247  002C5E  EF49  F016         	goto	l7827
  9248  002C62                     u7960:
  9249  002C62                     
  9250                           ; BSR set to: 0
  9251  002C62  0E00               	movlw	0
  9252  002C64  6E2A               	movwf	___fldiv@b^0,c
  9253  002C66  0E00               	movlw	0
  9254  002C68  6E2B               	movwf	(___fldiv@b+1)^0,c
  9255  002C6A  0E00               	movlw	0
  9256  002C6C  6E2C               	movwf	(___fldiv@b+2)^0,c
  9257  002C6E  0E00               	movlw	0
  9258  002C70  6E2D               	movwf	(___fldiv@b+3)^0,c
  9259  002C72                     
  9260                           ; BSR set to: 0
  9261  002C72  0E80               	movlw	128
  9262  002C74  122C               	iorwf	(___fldiv@b+2)^0,f,c
  9263  002C76  0E7F               	movlw	127
  9264  002C78  122D               	iorwf	(___fldiv@b+3)^0,f,c
  9265  002C7A                     l7821:
  9266                           
  9267                           ; BSR set to: 0
  9268  002C7A  5164               	movf	___fldiv@sign& (0+255),w,b
  9269  002C7C  122D               	iorwf	(___fldiv@b+3)^0,f,c
  9270  002C7E                     
  9271                           ; BSR set to: 0
  9272  002C7E  C02A  F02A         	movff	___fldiv@b,?___fldiv
  9273  002C82  C02B  F02B         	movff	___fldiv@b+1,?___fldiv+1
  9274  002C86  C02C  F02C         	movff	___fldiv@b+2,?___fldiv+2
  9275  002C8A  C02D  F02D         	movff	___fldiv@b+3,?___fldiv+3
  9276  002C8E  EF8C  F017         	goto	l1987
  9277  002C92                     l7827:
  9278                           
  9279                           ; BSR set to: 0
  9280  002C92  516B               	movf	___fldiv@bexp& (0+255),w,b
  9281  002C94  A4D8               	btfss	status,2,c
  9282  002C96  EF4F  F016         	goto	u7971
  9283  002C9A  EF51  F016         	goto	u7970
  9284  002C9E                     u7971:
  9285  002C9E  EF5B  F016         	goto	l7835
  9286  002CA2                     u7970:
  9287  002CA2                     
  9288                           ; BSR set to: 0
  9289  002CA2  0E00               	movlw	0
  9290  002CA4  6E2A               	movwf	?___fldiv^0,c
  9291  002CA6  0E00               	movlw	0
  9292  002CA8  6E2B               	movwf	(?___fldiv+1)^0,c
  9293  002CAA  0E00               	movlw	0
  9294  002CAC  6E2C               	movwf	(?___fldiv+2)^0,c
  9295  002CAE  0E00               	movlw	0
  9296  002CB0  6E2D               	movwf	(?___fldiv+3)^0,c
  9297  002CB2  EF8C  F017         	goto	l1987
  9298  002CB6                     l7835:
  9299                           
  9300                           ; BSR set to: 0
  9301  002CB6  516C               	movf	___fldiv@aexp& (0+255),w,b
  9302  002CB8  C06B  F032         	movff	___fldiv@bexp,??___fldiv
  9303  002CBC  6A33               	clrf	(??___fldiv+1)^0,c
  9304  002CBE  5E32               	subwf	??___fldiv^0,f,c
  9305  002CC0  0E00               	movlw	0
  9306  002CC2  5A33               	subwfb	(??___fldiv+1)^0,f,c
  9307  002CC4  0E7F               	movlw	127
  9308  002CC6  2432               	addwf	??___fldiv^0,w,c
  9309  002CC8  6F65               	movwf	___fldiv@new_exp& (0+255),b
  9310  002CCA  0E00               	movlw	0
  9311  002CCC  2033               	addwfc	(??___fldiv+1)^0,w,c
  9312  002CCE  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  9313  002CD0                     
  9314                           ; BSR set to: 0
  9315  002CD0  C02A  F060         	movff	___fldiv@b,___fldiv@rem
  9316  002CD4  C02B  F061         	movff	___fldiv@b+1,___fldiv@rem+1
  9317  002CD8  C02C  F062         	movff	___fldiv@b+2,___fldiv@rem+2
  9318  002CDC  C02D  F063         	movff	___fldiv@b+3,___fldiv@rem+3
  9319  002CE0                     
  9320                           ; BSR set to: 0
  9321  002CE0  0E00               	movlw	0
  9322  002CE2  6E2A               	movwf	___fldiv@b^0,c
  9323  002CE4  0E00               	movlw	0
  9324  002CE6  6E2B               	movwf	(___fldiv@b+1)^0,c
  9325  002CE8  0E00               	movlw	0
  9326  002CEA  6E2C               	movwf	(___fldiv@b+2)^0,c
  9327  002CEC  0E00               	movlw	0
  9328  002CEE  6E2D               	movwf	(___fldiv@b+3)^0,c
  9329  002CF0                     
  9330                           ; BSR set to: 0
  9331  002CF0  0E00               	movlw	0
  9332  002CF2  6F67               	movwf	___fldiv@grs& (0+255),b
  9333  002CF4  0E00               	movlw	0
  9334  002CF6  6F68               	movwf	(___fldiv@grs+1)& (0+255),b
  9335  002CF8  0E00               	movlw	0
  9336  002CFA  6F69               	movwf	(___fldiv@grs+2)& (0+255),b
  9337  002CFC  0E00               	movlw	0
  9338  002CFE  6F6A               	movwf	(___fldiv@grs+3)& (0+255),b
  9339  002D00                     
  9340                           ; BSR set to: 0
  9341  002D00  0E00               	movlw	0
  9342  002D02  6F6C               	movwf	___fldiv@aexp& (0+255),b
  9343  002D04  EFBC  F016         	goto	l1989
  9344  002D08                     l7845:
  9345                           
  9346                           ; BSR set to: 0
  9347  002D08  516C               	movf	___fldiv@aexp& (0+255),w,b
  9348  002D0A  B4D8               	btfsc	status,2,c
  9349  002D0C  EF8A  F016         	goto	u7981
  9350  002D10  EF8C  F016         	goto	u7980
  9351  002D14                     u7981:
  9352  002D14  EFA3  F016         	goto	l7853
  9353  002D18                     u7980:
  9354  002D18                     
  9355                           ; BSR set to: 0
  9356  002D18  90D8               	bcf	status,0,c
  9357  002D1A  3760               	rlcf	___fldiv@rem& (0+255),f,b
  9358  002D1C  3761               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  9359  002D1E  3762               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  9360  002D20  3763               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  9361  002D22  90D8               	bcf	status,0,c
  9362  002D24  362A               	rlcf	___fldiv@b^0,f,c
  9363  002D26  362B               	rlcf	(___fldiv@b+1)^0,f,c
  9364  002D28  362C               	rlcf	(___fldiv@b+2)^0,f,c
  9365  002D2A  362D               	rlcf	(___fldiv@b+3)^0,f,c
  9366  002D2C                     
  9367                           ; BSR set to: 0
  9368  002D2C  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  9369  002D2E  EF9B  F016         	goto	u7991
  9370  002D32  EF9D  F016         	goto	u7990
  9371  002D36                     u7991:
  9372  002D36  EF9E  F016         	goto	l1992
  9373  002D3A                     u7990:
  9374  002D3A                     
  9375                           ; BSR set to: 0
  9376  002D3A  802A               	bsf	___fldiv@b^0,0,c
  9377  002D3C                     l1992:
  9378                           
  9379                           ; BSR set to: 0
  9380  002D3C  90D8               	bcf	status,0,c
  9381  002D3E  3767               	rlcf	___fldiv@grs& (0+255),f,b
  9382  002D40  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  9383  002D42  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  9384  002D44  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  9385  002D46                     l7853:
  9386                           
  9387                           ; BSR set to: 0
  9388  002D46  502E               	movf	___fldiv@a^0,w,c
  9389  002D48  5D60               	subwf	___fldiv@rem& (0+255),w,b
  9390  002D4A  502F               	movf	(___fldiv@a+1)^0,w,c
  9391  002D4C  5961               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  9392  002D4E  5030               	movf	(___fldiv@a+2)^0,w,c
  9393  002D50  5962               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  9394  002D52  5031               	movf	(___fldiv@a+3)^0,w,c
  9395  002D54  5963               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  9396  002D56  A0D8               	btfss	status,0,c
  9397  002D58  EFB0  F016         	goto	u8001
  9398  002D5C  EFB2  F016         	goto	u8000
  9399  002D60                     u8001:
  9400  002D60  EFBB  F016         	goto	l7859
  9401  002D64                     u8000:
  9402  002D64                     
  9403                           ; BSR set to: 0
  9404  002D64  8D6A               	bsf	(___fldiv@grs+3)& (0+255),6,b
  9405  002D66                     
  9406                           ; BSR set to: 0
  9407  002D66  502E               	movf	___fldiv@a^0,w,c
  9408  002D68  5F60               	subwf	___fldiv@rem& (0+255),f,b
  9409  002D6A  502F               	movf	(___fldiv@a+1)^0,w,c
  9410  002D6C  5B61               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  9411  002D6E  5030               	movf	(___fldiv@a+2)^0,w,c
  9412  002D70  5B62               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  9413  002D72  5031               	movf	(___fldiv@a+3)^0,w,c
  9414  002D74  5B63               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  9415  002D76                     l7859:
  9416                           
  9417                           ; BSR set to: 0
  9418  002D76  2B6C               	incf	___fldiv@aexp& (0+255),f,b
  9419  002D78                     l1989:
  9420                           
  9421                           ; BSR set to: 0
  9422  002D78  0E19               	movlw	25
  9423  002D7A  656C               	cpfsgt	___fldiv@aexp& (0+255),b
  9424  002D7C  EFC2  F016         	goto	u8011
  9425  002D80  EFC4  F016         	goto	u8010
  9426  002D84                     u8011:
  9427  002D84  EF84  F016         	goto	l7845
  9428  002D88                     u8010:
  9429  002D88                     
  9430                           ; BSR set to: 0
  9431  002D88  5160               	movf	___fldiv@rem& (0+255),w,b
  9432  002D8A  1161               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  9433  002D8C  1162               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  9434  002D8E  1163               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  9435  002D90  B4D8               	btfsc	status,2,c
  9436  002D92  EFCD  F016         	goto	u8021
  9437  002D96  EFCF  F016         	goto	u8020
  9438  002D9A                     u8021:
  9439  002D9A  EFE7  F016         	goto	l7871
  9440  002D9E                     u8020:
  9441  002D9E                     
  9442                           ; BSR set to: 0
  9443  002D9E  8167               	bsf	___fldiv@grs& (0+255),0,b
  9444  002DA0  EFE7  F016         	goto	l7871
  9445  002DA4                     l7865:
  9446                           
  9447                           ; BSR set to: 0
  9448  002DA4  90D8               	bcf	status,0,c
  9449  002DA6  362A               	rlcf	___fldiv@b^0,f,c
  9450  002DA8  362B               	rlcf	(___fldiv@b+1)^0,f,c
  9451  002DAA  362C               	rlcf	(___fldiv@b+2)^0,f,c
  9452  002DAC  362D               	rlcf	(___fldiv@b+3)^0,f,c
  9453  002DAE                     
  9454                           ; BSR set to: 0
  9455  002DAE  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  9456  002DB0  EFDC  F016         	goto	u8031
  9457  002DB4  EFDE  F016         	goto	u8030
  9458  002DB8                     u8031:
  9459  002DB8  EFDF  F016         	goto	l1998
  9460  002DBC                     u8030:
  9461  002DBC                     
  9462                           ; BSR set to: 0
  9463  002DBC  802A               	bsf	___fldiv@b^0,0,c
  9464  002DBE                     l1998:
  9465                           
  9466                           ; BSR set to: 0
  9467  002DBE  90D8               	bcf	status,0,c
  9468  002DC0  3767               	rlcf	___fldiv@grs& (0+255),f,b
  9469  002DC2  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  9470  002DC4  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  9471  002DC6  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  9472  002DC8  0765               	decf	___fldiv@new_exp& (0+255),f,b
  9473  002DCA  A0D8               	btfss	status,0,c
  9474  002DCC  0766               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  9475  002DCE                     l7871:
  9476                           
  9477                           ; BSR set to: 0
  9478  002DCE  AE2C               	btfss	(___fldiv@b+2)^0,7,c
  9479  002DD0  EFEC  F016         	goto	u8041
  9480  002DD4  EFEE  F016         	goto	u8040
  9481  002DD8                     u8041:
  9482  002DD8  EFD2  F016         	goto	l7865
  9483  002DDC                     u8040:
  9484  002DDC                     
  9485                           ; BSR set to: 0
  9486  002DDC  0E00               	movlw	0
  9487  002DDE  6F6C               	movwf	___fldiv@aexp& (0+255),b
  9488  002DE0                     
  9489                           ; BSR set to: 0
  9490  002DE0  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  9491  002DE2  EFF5  F016         	goto	u8051
  9492  002DE6  EFF7  F016         	goto	u8050
  9493  002DEA                     u8051:
  9494  002DEA  EF1B  F017         	goto	l2000
  9495  002DEE                     u8050:
  9496  002DEE                     
  9497                           ; BSR set to: 0
  9498  002DEE  0EFF               	movlw	255
  9499  002DF0  1567               	andwf	___fldiv@grs& (0+255),w,b
  9500  002DF2  6E32               	movwf	??___fldiv^0,c
  9501  002DF4  0EFF               	movlw	255
  9502  002DF6  1568               	andwf	(___fldiv@grs+1)& (0+255),w,b
  9503  002DF8  6E33               	movwf	(??___fldiv+1)^0,c
  9504  002DFA  0EFF               	movlw	255
  9505  002DFC  1569               	andwf	(___fldiv@grs+2)& (0+255),w,b
  9506  002DFE  6E34               	movwf	(??___fldiv+2)^0,c
  9507  002E00  0E7F               	movlw	127
  9508  002E02  156A               	andwf	(___fldiv@grs+3)& (0+255),w,b
  9509  002E04  6E35               	movwf	(??___fldiv+3)^0,c
  9510  002E06  5032               	movf	??___fldiv^0,w,c
  9511  002E08  1033               	iorwf	(??___fldiv+1)^0,w,c
  9512  002E0A  1034               	iorwf	(??___fldiv+2)^0,w,c
  9513  002E0C  1035               	iorwf	(??___fldiv+3)^0,w,c
  9514  002E0E  B4D8               	btfsc	status,2,c
  9515  002E10  EF0C  F017         	goto	u8061
  9516  002E14  EF0E  F017         	goto	u8060
  9517  002E18                     u8061:
  9518  002E18  EF12  F017         	goto	l2001
  9519  002E1C                     u8060:
  9520  002E1C                     l7879:
  9521                           
  9522                           ; BSR set to: 0
  9523  002E1C  0E01               	movlw	1
  9524  002E1E  6F6C               	movwf	___fldiv@aexp& (0+255),b
  9525  002E20  EF1B  F017         	goto	l2000
  9526  002E24                     l2001:
  9527                           
  9528                           ; BSR set to: 0
  9529  002E24  A02A               	btfss	___fldiv@b^0,0,c
  9530  002E26  EF17  F017         	goto	u8071
  9531  002E2A  EF19  F017         	goto	u8070
  9532  002E2E                     u8071:
  9533  002E2E  EF1B  F017         	goto	l2000
  9534  002E32                     u8070:
  9535  002E32  EF0E  F017         	goto	l7879
  9536  002E36                     l2000:
  9537                           
  9538                           ; BSR set to: 0
  9539  002E36  516C               	movf	___fldiv@aexp& (0+255),w,b
  9540  002E38  B4D8               	btfsc	status,2,c
  9541  002E3A  EF21  F017         	goto	u8081
  9542  002E3E  EF23  F017         	goto	u8080
  9543  002E42                     u8081:
  9544  002E42  EF47  F017         	goto	l7891
  9545  002E46                     u8080:
  9546  002E46                     
  9547                           ; BSR set to: 0
  9548  002E46  0E01               	movlw	1
  9549  002E48  262A               	addwf	___fldiv@b^0,f,c
  9550  002E4A  0E00               	movlw	0
  9551  002E4C  222B               	addwfc	(___fldiv@b+1)^0,f,c
  9552  002E4E  222C               	addwfc	(___fldiv@b+2)^0,f,c
  9553  002E50  222D               	addwfc	(___fldiv@b+3)^0,f,c
  9554  002E52                     
  9555                           ; BSR set to: 0
  9556  002E52  A02D               	btfss	(___fldiv@b+3)^0,0,c
  9557  002E54  EF2E  F017         	goto	u8091
  9558  002E58  EF30  F017         	goto	u8090
  9559  002E5C                     u8091:
  9560  002E5C  EF47  F017         	goto	l7891
  9561  002E60                     u8090:
  9562  002E60                     
  9563                           ; BSR set to: 0
  9564  002E60  C02A  F032         	movff	___fldiv@b,??___fldiv
  9565  002E64  C02B  F033         	movff	___fldiv@b+1,??___fldiv+1
  9566  002E68  C02C  F034         	movff	___fldiv@b+2,??___fldiv+2
  9567  002E6C  C02D  F035         	movff	___fldiv@b+3,??___fldiv+3
  9568  002E70  3435               	rlcf	(??___fldiv+3)^0,w,c
  9569  002E72  3235               	rrcf	(??___fldiv+3)^0,f,c
  9570  002E74  3234               	rrcf	(??___fldiv+2)^0,f,c
  9571  002E76  3233               	rrcf	(??___fldiv+1)^0,f,c
  9572  002E78  3232               	rrcf	??___fldiv^0,f,c
  9573  002E7A  C032  F02A         	movff	??___fldiv,___fldiv@b
  9574  002E7E  C033  F02B         	movff	??___fldiv+1,___fldiv@b+1
  9575  002E82  C034  F02C         	movff	??___fldiv+2,___fldiv@b+2
  9576  002E86  C035  F02D         	movff	??___fldiv+3,___fldiv@b+3
  9577  002E8A                     
  9578                           ; BSR set to: 0
  9579  002E8A  4B65               	infsnz	___fldiv@new_exp& (0+255),f,b
  9580  002E8C  2B66               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  9581  002E8E                     l7891:
  9582                           
  9583                           ; BSR set to: 0
  9584  002E8E  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  9585  002E90  EF52  F017         	goto	u8101
  9586  002E94  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  9587  002E96  E108               	bnz	u8100
  9588  002E98  2965               	incf	___fldiv@new_exp& (0+255),w,b
  9589  002E9A  A0D8               	btfss	status,0,c
  9590  002E9C  EF52  F017         	goto	u8101
  9591  002EA0  EF54  F017         	goto	u8100
  9592  002EA4                     u8101:
  9593  002EA4  EF5F  F017         	goto	l7895
  9594  002EA8                     u8100:
  9595  002EA8                     
  9596                           ; BSR set to: 0
  9597  002EA8  0E00               	movlw	0
  9598  002EAA  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  9599  002EAC  6965               	setf	___fldiv@new_exp& (0+255),b
  9600  002EAE  0E00               	movlw	0
  9601  002EB0  6E2A               	movwf	___fldiv@b^0,c
  9602  002EB2  0E00               	movlw	0
  9603  002EB4  6E2B               	movwf	(___fldiv@b+1)^0,c
  9604  002EB6  0E00               	movlw	0
  9605  002EB8  6E2C               	movwf	(___fldiv@b+2)^0,c
  9606  002EBA  0E00               	movlw	0
  9607  002EBC  6E2D               	movwf	(___fldiv@b+3)^0,c
  9608  002EBE                     l7895:
  9609                           
  9610                           ; BSR set to: 0
  9611  002EBE  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  9612  002EC0  EF6C  F017         	goto	u8110
  9613  002EC4  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  9614  002EC6  E106               	bnz	u8111
  9615  002EC8  0565               	decf	___fldiv@new_exp& (0+255),w,b
  9616  002ECA  B0D8               	btfsc	status,0,c
  9617  002ECC  EF6A  F017         	goto	u8111
  9618  002ED0  EF6C  F017         	goto	u8110
  9619  002ED4                     u8111:
  9620  002ED4  EF7A  F017         	goto	l7899
  9621  002ED8                     u8110:
  9622  002ED8                     
  9623                           ; BSR set to: 0
  9624  002ED8  0E00               	movlw	0
  9625  002EDA  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  9626  002EDC  0E00               	movlw	0
  9627  002EDE  6F65               	movwf	___fldiv@new_exp& (0+255),b
  9628  002EE0  0E00               	movlw	0
  9629  002EE2  6E2A               	movwf	___fldiv@b^0,c
  9630  002EE4  0E00               	movlw	0
  9631  002EE6  6E2B               	movwf	(___fldiv@b+1)^0,c
  9632  002EE8  0E00               	movlw	0
  9633  002EEA  6E2C               	movwf	(___fldiv@b+2)^0,c
  9634  002EEC  0E00               	movlw	0
  9635  002EEE  6E2D               	movwf	(___fldiv@b+3)^0,c
  9636  002EF0  0E00               	movlw	0
  9637  002EF2  6F64               	movwf	___fldiv@sign& (0+255),b
  9638  002EF4                     l7899:
  9639                           
  9640                           ; BSR set to: 0
  9641  002EF4  C065  F06B         	movff	___fldiv@new_exp,___fldiv@bexp
  9642  002EF8                     
  9643                           ; BSR set to: 0
  9644  002EF8  A16B               	btfss	___fldiv@bexp& (0+255),0,b
  9645  002EFA  EF81  F017         	goto	u8121
  9646  002EFE  EF83  F017         	goto	u8120
  9647  002F02                     u8121:
  9648  002F02  EF86  F017         	goto	l7905
  9649  002F06                     u8120:
  9650  002F06                     
  9651                           ; BSR set to: 0
  9652  002F06  8E2C               	bsf	(___fldiv@b+2)^0,7,c
  9653  002F08  EF87  F017         	goto	l7907
  9654  002F0C                     l7905:
  9655                           
  9656                           ; BSR set to: 0
  9657  002F0C  9E2C               	bcf	(___fldiv@b+2)^0,7,c
  9658  002F0E                     l7907:
  9659                           
  9660                           ; BSR set to: 0
  9661  002F0E  90D8               	bcf	status,0,c
  9662  002F10  316B               	rrcf	___fldiv@bexp& (0+255),w,b
  9663  002F12  6E2D               	movwf	(___fldiv@b+3)^0,c
  9664  002F14  EF3D  F016         	goto	l7821
  9665  002F18                     l1987:
  9666                           
  9667                           ; BSR set to: 0
  9668  002F18  0012               	return		;funcret
  9669  002F1A                     __end_of___fldiv:
  9670                           	callstack 0
  9671                           
  9672 ;; *************** function _PWM6_LoadDutyValue *****************
  9673 ;; Defined at:
  9674 ;;		line 74 in file "mcc_generated_files/pwm6.c"
  9675 ;; Parameters:    Size  Location     Type
  9676 ;;  dutyValue       2   19[COMRAM] unsigned short 
  9677 ;; Auto vars:     Size  Location     Type
  9678 ;;		None
  9679 ;; Return value:  Size  Location     Type
  9680 ;;                  1    wreg      void 
  9681 ;; Registers used:
  9682 ;;		wreg, status,2, status,0
  9683 ;; Tracked objects:
  9684 ;;		On entry : 0/0
  9685 ;;		On exit  : 0/0
  9686 ;;		Unchanged: 0/0
  9687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9688 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9690 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9691 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9692 ;;Total ram usage:        4 bytes
  9693 ;; Hardware stack levels used: 1
  9694 ;; Hardware stack levels required when called: 8
  9695 ;; This function calls:
  9696 ;;		Nothing
  9697 ;; This function is called by:
  9698 ;;		_setSteering
  9699 ;; This function uses a non-reentrant model
  9700 ;;
  9701                           
  9702                           	psect	text35
  9703  0058AA                     __ptext35:
  9704                           	callstack 0
  9705  0058AA                     _PWM6_LoadDutyValue:
  9706                           	callstack 20
  9707  0058AA                     
  9708                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  9709  0058AA  C014  F016         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
  9710  0058AE  C015  F017         	movff	PWM6_LoadDutyValue@dutyValue+1,??_PWM6_LoadDutyValue+1
  9711  0058B2  90D8               	bcf	status,0,c
  9712  0058B4  3217               	rrcf	(??_PWM6_LoadDutyValue+1)^0,f,c
  9713  0058B6  3216               	rrcf	??_PWM6_LoadDutyValue^0,f,c
  9714  0058B8  90D8               	bcf	status,0,c
  9715  0058BA  3217               	rrcf	(??_PWM6_LoadDutyValue+1)^0,f,c
  9716  0058BC  3216               	rrcf	??_PWM6_LoadDutyValue^0,f,c
  9717  0058BE  5016               	movf	??_PWM6_LoadDutyValue^0,w,c
  9718  0058C0  6E69               	movwf	105,c	;volatile
  9719                           
  9720                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
  9721  0058C2  C014  F016         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
  9722  0058C6  0E03               	movlw	3
  9723  0058C8  1616               	andwf	??_PWM6_LoadDutyValue^0,f,c
  9724  0058CA  0E06               	movlw	6
  9725  0058CC  6E17               	movwf	(??_PWM6_LoadDutyValue+1)^0,c
  9726  0058CE                     u6135:
  9727  0058CE  90D8               	bcf	status,0,c
  9728  0058D0  3616               	rlcf	??_PWM6_LoadDutyValue^0,f,c
  9729  0058D2  2E17               	decfsz	(??_PWM6_LoadDutyValue+1)^0,f,c
  9730  0058D4  EF67  F02C         	goto	u6135
  9731  0058D8  5016               	movf	??_PWM6_LoadDutyValue^0,w,c
  9732  0058DA  6E68               	movwf	104,c	;volatile
  9733  0058DC  0012               	return		;funcret
  9734  0058DE                     __end_of_PWM6_LoadDutyValue:
  9735                           	callstack 0
  9736                           
  9737 ;; *************** function _PWM5_LoadDutyValue *****************
  9738 ;; Defined at:
  9739 ;;		line 74 in file "mcc_generated_files/pwm5.c"
  9740 ;; Parameters:    Size  Location     Type
  9741 ;;  dutyValue       2   19[COMRAM] unsigned short 
  9742 ;; Auto vars:     Size  Location     Type
  9743 ;;		None
  9744 ;; Return value:  Size  Location     Type
  9745 ;;                  1    wreg      void 
  9746 ;; Registers used:
  9747 ;;		wreg, status,2, status,0
  9748 ;; Tracked objects:
  9749 ;;		On entry : 0/0
  9750 ;;		On exit  : 0/0
  9751 ;;		Unchanged: 0/0
  9752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9753 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9755 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9756 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9757 ;;Total ram usage:        4 bytes
  9758 ;; Hardware stack levels used: 1
  9759 ;; Hardware stack levels required when called: 8
  9760 ;; This function calls:
  9761 ;;		Nothing
  9762 ;; This function is called by:
  9763 ;;		_setSteering
  9764 ;; This function uses a non-reentrant model
  9765 ;;
  9766                           
  9767                           	psect	text36
  9768  0058DE                     __ptext36:
  9769                           	callstack 0
  9770  0058DE                     _PWM5_LoadDutyValue:
  9771                           	callstack 20
  9772  0058DE                     
  9773                           ;mcc_generated_files/pwm5.c: 74:  void PWM5_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm5.c: 75:  {;mcc_generated_files/pwm5.c: 77:      PWM5DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  9774  0058DE  C014  F016         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
  9775  0058E2  C015  F017         	movff	PWM5_LoadDutyValue@dutyValue+1,??_PWM5_LoadDutyValue+1
  9776  0058E6  90D8               	bcf	status,0,c
  9777  0058E8  3217               	rrcf	(??_PWM5_LoadDutyValue+1)^0,f,c
  9778  0058EA  3216               	rrcf	??_PWM5_LoadDutyValue^0,f,c
  9779  0058EC  90D8               	bcf	status,0,c
  9780  0058EE  3217               	rrcf	(??_PWM5_LoadDutyValue+1)^0,f,c
  9781  0058F0  3216               	rrcf	??_PWM5_LoadDutyValue^0,f,c
  9782  0058F2  5016               	movf	??_PWM5_LoadDutyValue^0,w,c
  9783  0058F4  6E6D               	movwf	109,c	;volatile
  9784                           
  9785                           ;mcc_generated_files/pwm5.c: 80:      PWM5DCL = (dutyValue & 0x0003)<<6;
  9786  0058F6  C014  F016         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
  9787  0058FA  0E03               	movlw	3
  9788  0058FC  1616               	andwf	??_PWM5_LoadDutyValue^0,f,c
  9789  0058FE  0E06               	movlw	6
  9790  005900  6E17               	movwf	(??_PWM5_LoadDutyValue+1)^0,c
  9791  005902                     u6125:
  9792  005902  90D8               	bcf	status,0,c
  9793  005904  3616               	rlcf	??_PWM5_LoadDutyValue^0,f,c
  9794  005906  2E17               	decfsz	(??_PWM5_LoadDutyValue+1)^0,f,c
  9795  005908  EF81  F02C         	goto	u6125
  9796  00590C  5016               	movf	??_PWM5_LoadDutyValue^0,w,c
  9797  00590E  6E6C               	movwf	108,c	;volatile
  9798  005910  0012               	return		;funcret
  9799  005912                     __end_of_PWM5_LoadDutyValue:
  9800                           	callstack 0
  9801                           
  9802 ;; *************** function _calcSpeed *****************
  9803 ;; Defined at:
  9804 ;;		line 284 in file "main.c"
  9805 ;; Parameters:    Size  Location     Type
  9806 ;;		None
  9807 ;; Auto vars:     Size  Location     Type
  9808 ;;  speed           2   39[BANK0 ] short 
  9809 ;; Return value:  Size  Location     Type
  9810 ;;                  1    wreg      void 
  9811 ;; Registers used:
  9812 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9813 ;; Tracked objects:
  9814 ;;		On entry : 0/0
  9815 ;;		On exit  : 0/0
  9816 ;;		Unchanged: 0/0
  9817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9819 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9820 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9821 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9822 ;;Total ram usage:        6 bytes
  9823 ;; Hardware stack levels used: 1
  9824 ;; Hardware stack levels required when called: 9
  9825 ;; This function calls:
  9826 ;;		___fladd
  9827 ;;		___flmul
  9828 ;;		___fltol
  9829 ;;		___xxtofl
  9830 ;; This function is called by:
  9831 ;;		_loop
  9832 ;; This function uses a non-reentrant model
  9833 ;;
  9834                           
  9835                           	psect	text37
  9836  0036FE                     __ptext37:
  9837                           	callstack 0
  9838  0036FE                     _calcSpeed:
  9839                           	callstack 20
  9840  0036FE                     
  9841                           ;main.c: 285:     int16_t speed = 0;
  9842  0036FE  0E00               	movlw	0
  9843  003700  0100               	movlb	0	; () banked
  9844  003702  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
  9845  003704  0E00               	movlw	0
  9846  003706  6F87               	movwf	calcSpeed@speed& (0+255),b
  9847                           
  9848                           ;main.c: 287:     switch (driveMode) {
  9849  003708  EF35  F01C         	goto	l9137
  9850  00370C                     l9101:
  9851                           
  9852                           ; BSR set to: 0
  9853                           ;main.c: 289:             if (distFront > (30)) {
  9854  00370C  51FE               	movf	(_distFront+1)& (0+255),w,b	;volatile
  9855  00370E  E109               	bnz	u10210
  9856  003710  0E1F               	movlw	31
  9857  003712  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
  9858  003714  A0D8               	btfss	status,0,c
  9859  003716  EF8F  F01B         	goto	u10211
  9860  00371A  EF91  F01B         	goto	u10210
  9861  00371E                     u10211:
  9862  00371E  EF93  F01B         	goto	l9105
  9863  003722                     u10210:
  9864  003722                     
  9865                           ; BSR set to: 0
  9866                           ;main.c: 290:                 driveMode = Straight;
  9867  003722  0E00               	movlw	0
  9868  003724  6FFC               	movwf	_driveMode& (0+255),b
  9869  003726                     l9105:
  9870                           
  9871                           ; BSR set to: 0
  9872                           ;main.c: 292:             if (setSpeed > (100)) {
  9873  003726  BFEE               	btfsc	(_setSpeed+1)& (0+255),7,b
  9874  003728  EF9F  F01B         	goto	u10221
  9875  00372C  51EE               	movf	(_setSpeed+1)& (0+255),w,b
  9876  00372E  E109               	bnz	u10220
  9877  003730  0E65               	movlw	101
  9878  003732  5DED               	subwf	_setSpeed& (0+255),w,b
  9879  003734  A0D8               	btfss	status,0,c
  9880  003736  EF9F  F01B         	goto	u10221
  9881  00373A  EFA1  F01B         	goto	u10220
  9882  00373E                     u10221:
  9883  00373E  EFBC  F01B         	goto	l9115
  9884  003742                     u10220:
  9885  003742                     
  9886                           ; BSR set to: 0
  9887                           ;main.c: 293:                     speed = setSpeed;
  9888  003742  C0ED  F087         	movff	_setSpeed,calcSpeed@speed
  9889  003746  C0EE  F088         	movff	_setSpeed+1,calcSpeed@speed+1
  9890  00374A                     
  9891                           ; BSR set to: 0
  9892                           ;main.c: 294:                 if (distFront < (15)) {
  9893  00374A  51FE               	movf	(_distFront+1)& (0+255),w,b	;volatile
  9894  00374C  E107               	bnz	u10231
  9895  00374E  0E0F               	movlw	15
  9896  003750  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
  9897  003752  B0D8               	btfsc	status,0,c
  9898  003754  EFAE  F01B         	goto	u10231
  9899  003758  EFB0  F01B         	goto	u10230
  9900  00375C                     u10231:
  9901  00375C  EFB6  F01B         	goto	l9113
  9902  003760                     u10230:
  9903  003760                     
  9904                           ; BSR set to: 0
  9905                           ;main.c: 295:                     speed -= 4;
  9906  003760  0EFC               	movlw	252
  9907  003762  2787               	addwf	calcSpeed@speed& (0+255),f,b
  9908  003764  0EFF               	movlw	255
  9909  003766  2388               	addwfc	(calcSpeed@speed+1)& (0+255),f,b
  9910                           
  9911                           ;main.c: 296:                 } else {
  9912  003768  EF5A  F01C         	goto	l9139
  9913  00376C                     l9113:
  9914                           
  9915                           ; BSR set to: 0
  9916                           ;main.c: 297:                     speed -= 2;
  9917  00376C  0EFE               	movlw	254
  9918  00376E  2787               	addwf	calcSpeed@speed& (0+255),f,b
  9919  003770  0EFF               	movlw	255
  9920  003772  2388               	addwfc	(calcSpeed@speed+1)& (0+255),f,b
  9921  003774  EF5A  F01C         	goto	l9139
  9922  003778                     l9115:
  9923                           
  9924                           ; BSR set to: 0
  9925                           ;main.c: 300:                 speed = (100);
  9926  003778  0E00               	movlw	0
  9927  00377A  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
  9928  00377C  0E64               	movlw	100
  9929  00377E  6F87               	movwf	calcSpeed@speed& (0+255),b
  9930  003780  EF5A  F01C         	goto	l9139
  9931  003784                     l9117:
  9932                           
  9933                           ; BSR set to: 0
  9934                           ;main.c: 304:             if (distFront < (30)) {
  9935  003784  51FE               	movf	(_distFront+1)& (0+255),w,b	;volatile
  9936  003786  E107               	bnz	u10241
  9937  003788  0E1E               	movlw	30
  9938  00378A  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
  9939  00378C  B0D8               	btfsc	status,0,c
  9940  00378E  EFCB  F01B         	goto	u10241
  9941  003792  EFCD  F01B         	goto	u10240
  9942  003796                     u10241:
  9943  003796  EFCF  F01B         	goto	l9121
  9944  00379A                     u10240:
  9945  00379A                     
  9946                           ; BSR set to: 0
  9947                           ;main.c: 305:                 driveMode = Brake;
  9948  00379A  0E01               	movlw	1
  9949  00379C  6FFC               	movwf	_driveMode& (0+255),b
  9950  00379E                     l9121:
  9951                           
  9952                           ; BSR set to: 0
  9953                           ;main.c: 308:             if (distFront >= (150)) {
  9954  00379E  51FE               	movf	(_distFront+1)& (0+255),w,b	;volatile
  9955  0037A0  E109               	bnz	u10250
  9956  0037A2  0E96               	movlw	150
  9957  0037A4  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
  9958  0037A6  A0D8               	btfss	status,0,c
  9959  0037A8  EFD8  F01B         	goto	u10251
  9960  0037AC  EFDA  F01B         	goto	u10250
  9961  0037B0                     u10251:
  9962  0037B0  EF23  F01C         	goto	l9125
  9963  0037B4                     u10250:
  9964  0037B4                     
  9965                           ; BSR set to: 0
  9966                           ;main.c: 309:                 speed = (int16_t) ((0.0) * (distFront - (150)) + (275));
  9967  0037B4  0E00               	movlw	0
  9968  0037B6  6F71               	movwf	___fladd@a& (0+255),b
  9969  0037B8  0E80               	movlw	128
  9970  0037BA  6F72               	movwf	(___fladd@a+1)& (0+255),b
  9971  0037BC  0E89               	movlw	137
  9972  0037BE  6F73               	movwf	(___fladd@a+2)& (0+255),b
  9973  0037C0  0E43               	movlw	67
  9974  0037C2  6F74               	movwf	(___fladd@a+3)& (0+255),b
  9975  0037C4  0E00               	movlw	0
  9976  0037C6  6E2E               	movwf	___flmul@a^0,c
  9977  0037C8  0E00               	movlw	0
  9978  0037CA  6E2F               	movwf	(___flmul@a+1)^0,c
  9979  0037CC  0E00               	movlw	0
  9980  0037CE  6E30               	movwf	(___flmul@a+2)^0,c
  9981  0037D0  0E00               	movlw	0
  9982  0037D2  6E31               	movwf	(___flmul@a+3)^0,c
  9983  0037D4  0E6A               	movlw	106
  9984  0037D6  6F83               	movwf	??_calcSpeed& (0+255),b
  9985  0037D8  0EFF               	movlw	255
  9986  0037DA  6F84               	movwf	(??_calcSpeed+1)& (0+255),b
  9987  0037DC  C0FD  F085         	movff	_distFront,??_calcSpeed+2	;volatile
  9988  0037E0  C0FE  F086         	movff	_distFront+1,??_calcSpeed+3	;volatile
  9989  0037E4  5183               	movf	??_calcSpeed& (0+255),w,b
  9990  0037E6  2785               	addwf	(??_calcSpeed+2)& (0+255),f,b
  9991  0037E8  5184               	movf	(??_calcSpeed+1)& (0+255),w,b
  9992  0037EA  2386               	addwfc	(??_calcSpeed+3)& (0+255),f,b
  9993  0037EC  C085  F01C         	movff	??_calcSpeed+2,___xxtofl@val
  9994  0037F0  C086  F01D         	movff	??_calcSpeed+3,___xxtofl@val+1
  9995  0037F4  6A1E               	clrf	(___xxtofl@val+2)^0,c
  9996  0037F6  6A1F               	clrf	(___xxtofl@val+3)^0,c
  9997  0037F8  0E00               	movlw	0
  9998  0037FA  EC7F  F01D         	call	___xxtofl
  9999  0037FE  C01C  F02A         	movff	?___xxtofl,___flmul@b
 10000  003802  C01D  F02B         	movff	?___xxtofl+1,___flmul@b+1
 10001  003806  C01E  F02C         	movff	?___xxtofl+2,___flmul@b+2
 10002  00380A  C01F  F02D         	movff	?___xxtofl+3,___flmul@b+3
 10003  00380E  EC97  F013         	call	___flmul	;wreg free
 10004  003812  C02A  F06D         	movff	?___flmul,___fladd@b
 10005  003816  C02B  F06E         	movff	?___flmul+1,___fladd@b+1
 10006  00381A  C02C  F06F         	movff	?___flmul+2,___fladd@b+2
 10007  00381E  C02D  F070         	movff	?___flmul+3,___fladd@b+3
 10008  003822  EC36  F011         	call	___fladd	;wreg free
 10009  003826  C06D  F079         	movff	?___fladd,___fltol@f1
 10010  00382A  C06E  F07A         	movff	?___fladd+1,___fltol@f1+1
 10011  00382E  C06F  F07B         	movff	?___fladd+2,___fltol@f1+2
 10012  003832  C070  F07C         	movff	?___fladd+3,___fltol@f1+3
 10013  003836  ECEB  F022         	call	___fltol	;wreg free
 10014  00383A  C079  F087         	movff	?___fltol,calcSpeed@speed
 10015  00383E  C07A  F088         	movff	?___fltol+1,calcSpeed@speed+1
 10016                           
 10017                           ;main.c: 310:             } else {
 10018  003842  EF5A  F01C         	goto	l9139
 10019  003846                     l9125:
 10020                           
 10021                           ; BSR set to: 0
 10022                           ;main.c: 311:                 speed = (275);
 10023  003846  0E01               	movlw	1
 10024  003848  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10025  00384A  0E13               	movlw	19
 10026  00384C  6F87               	movwf	calcSpeed@speed& (0+255),b
 10027  00384E  EF5A  F01C         	goto	l9139
 10028  003852                     l9127:
 10029                           
 10030                           ; BSR set to: 0
 10031                           ;main.c: 316:             speed = (-125);
 10032  003852  0EFF               	movlw	255
 10033  003854  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10034  003856  0E83               	movlw	131
 10035  003858  6F87               	movwf	calcSpeed@speed& (0+255),b
 10036                           
 10037                           ;main.c: 317:             break;
 10038  00385A  EF5A  F01C         	goto	l9139
 10039  00385E                     l9131:
 10040                           
 10041                           ; BSR set to: 0
 10042                           ;main.c: 322:             speed = (200);
 10043  00385E  0E00               	movlw	0
 10044  003860  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10045  003862  0EC8               	movlw	200
 10046  003864  6F87               	movwf	calcSpeed@speed& (0+255),b
 10047                           
 10048                           ;main.c: 323:             break;
 10049  003866  EF5A  F01C         	goto	l9139
 10050  00386A                     l9137:
 10051                           
 10052                           ; BSR set to: 0
 10053  00386A  51FC               	movf	_driveMode& (0+255),w,b
 10054  00386C  6F83               	movwf	??_calcSpeed& (0+255),b
 10055  00386E  6B84               	clrf	(??_calcSpeed+1)& (0+255),b
 10056                           
 10057                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10058                           ; Switch size 1, requested type "simple"
 10059                           ; Number of cases is 1, Range of values is 0 to 0
 10060                           ; switch strategies available:
 10061                           ; Name         Instructions Cycles
 10062                           ; simple_byte            4     3 (average)
 10063                           ;	Chosen strategy is simple_byte
 10064  003870  5184               	movf	(??_calcSpeed+1)& (0+255),w,b
 10065  003872  0A00               	xorlw	0	; case 0
 10066  003874  B4D8               	btfsc	status,2,c
 10067  003876  EF3F  F01C         	goto	l9405
 10068  00387A  EF5A  F01C         	goto	l9139
 10069  00387E                     l9405:
 10070                           
 10071                           ; BSR set to: 0
 10072                           ; Switch size 1, requested type "simple"
 10073                           ; Number of cases is 6, Range of values is 0 to 5
 10074                           ; switch strategies available:
 10075                           ; Name         Instructions Cycles
 10076                           ; simple_byte           19    10 (average)
 10077                           ;	Chosen strategy is simple_byte
 10078  00387E  5183               	movf	??_calcSpeed& (0+255),w,b
 10079  003880  0A00               	xorlw	0	; case 0
 10080  003882  B4D8               	btfsc	status,2,c
 10081  003884  EFC2  F01B         	goto	l9117
 10082  003888  0A01               	xorlw	1	; case 1
 10083  00388A  B4D8               	btfsc	status,2,c
 10084  00388C  EF86  F01B         	goto	l9101
 10085  003890  0A03               	xorlw	3	; case 2
 10086  003892  B4D8               	btfsc	status,2,c
 10087  003894  EF29  F01C         	goto	l9127
 10088  003898  0A01               	xorlw	1	; case 3
 10089  00389A  B4D8               	btfsc	status,2,c
 10090  00389C  EF29  F01C         	goto	l9127
 10091  0038A0  0A07               	xorlw	7	; case 4
 10092  0038A2  B4D8               	btfsc	status,2,c
 10093  0038A4  EF2F  F01C         	goto	l9131
 10094  0038A8  0A01               	xorlw	1	; case 5
 10095  0038AA  B4D8               	btfsc	status,2,c
 10096  0038AC  EF2F  F01C         	goto	l9131
 10097  0038B0  EF5A  F01C         	goto	l9139
 10098  0038B4                     l9139:
 10099                           
 10100                           ;main.c: 329:     if (speed > (400)) {
 10101  0038B4  0100               	movlb	0	; () banked
 10102  0038B6  BF88               	btfsc	(calcSpeed@speed+1)& (0+255),7,b
 10103  0038B8  EF67  F01C         	goto	u10261
 10104  0038BC  0E91               	movlw	145
 10105  0038BE  5D87               	subwf	calcSpeed@speed& (0+255),w,b
 10106  0038C0  0E01               	movlw	1
 10107  0038C2  5988               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
 10108  0038C4  A0D8               	btfss	status,0,c
 10109  0038C6  EF67  F01C         	goto	u10261
 10110  0038CA  EF69  F01C         	goto	u10260
 10111  0038CE                     u10261:
 10112  0038CE  EF6D  F01C         	goto	l9143
 10113  0038D2                     u10260:
 10114  0038D2                     
 10115                           ; BSR set to: 0
 10116                           ;main.c: 330:         speed = (400);
 10117  0038D2  0E01               	movlw	1
 10118  0038D4  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10119  0038D6  0E90               	movlw	144
 10120  0038D8  6F87               	movwf	calcSpeed@speed& (0+255),b
 10121  0038DA                     l9143:
 10122                           
 10123                           ; BSR set to: 0
 10124                           ;main.c: 332:     if (speed < (-250)) {
 10125  0038DA  AF88               	btfss	(calcSpeed@speed+1)& (0+255),7,b
 10126  0038DC  EF79  F01C         	goto	u10271
 10127  0038E0  0E06               	movlw	6
 10128  0038E2  5D87               	subwf	calcSpeed@speed& (0+255),w,b
 10129  0038E4  0EFF               	movlw	255
 10130  0038E6  5988               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
 10131  0038E8  B0D8               	btfsc	status,0,c
 10132  0038EA  EF79  F01C         	goto	u10271
 10133  0038EE  EF7B  F01C         	goto	u10270
 10134  0038F2                     u10271:
 10135  0038F2  EF7F  F01C         	goto	l9147
 10136  0038F6                     u10270:
 10137  0038F6                     
 10138                           ; BSR set to: 0
 10139                           ;main.c: 333:         speed = (-250);
 10140  0038F6  0EFF               	movlw	255
 10141  0038F8  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10142  0038FA  0E06               	movlw	6
 10143  0038FC  6F87               	movwf	calcSpeed@speed& (0+255),b
 10144  0038FE                     l9147:
 10145                           
 10146                           ; BSR set to: 0
 10147                           ;main.c: 335:     setSpeed = speed;
 10148  0038FE  C087  F0ED         	movff	calcSpeed@speed,_setSpeed
 10149  003902  C088  F0EE         	movff	calcSpeed@speed+1,_setSpeed+1
 10150  003906                     
 10151                           ; BSR set to: 0
 10152  003906  0012               	return		;funcret
 10153  003908                     __end_of_calcSpeed:
 10154                           	callstack 0
 10155                           
 10156 ;; *************** function ___fladd *****************
 10157 ;; Defined at:
 10158 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
 10159 ;; Parameters:    Size  Location     Type
 10160 ;;  b               4   13[BANK0 ] void 
 10161 ;;  a               4   17[BANK0 ] void 
 10162 ;; Auto vars:     Size  Location     Type
 10163 ;;  grs             1   24[BANK0 ] unsigned char 
 10164 ;;  bexp            1   23[BANK0 ] unsigned char 
 10165 ;;  aexp            1   22[BANK0 ] unsigned char 
 10166 ;;  signs           1   21[BANK0 ] unsigned char 
 10167 ;; Return value:  Size  Location     Type
 10168 ;;                  4   13[BANK0 ] unsigned char 
 10169 ;; Registers used:
 10170 ;;		wreg, status,2, status,0
 10171 ;; Tracked objects:
 10172 ;;		On entry : 0/0
 10173 ;;		On exit  : 0/0
 10174 ;;		Unchanged: 0/0
 10175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10176 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10177 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10178 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10179 ;;      Totals:         4      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10180 ;;Total ram usage:       16 bytes
 10181 ;; Hardware stack levels used: 1
 10182 ;; Hardware stack levels required when called: 8
 10183 ;; This function calls:
 10184 ;;		Nothing
 10185 ;; This function is called by:
 10186 ;;		_calcSpeed
 10187 ;;		___flsub
 10188 ;;		_efgtoa
 10189 ;; This function uses a non-reentrant model
 10190 ;;
 10191                           
 10192                           	psect	text38
 10193  00226C                     __ptext38:
 10194                           	callstack 0
 10195  00226C                     ___fladd:
 10196                           	callstack 15
 10197  00226C  0100               	movlb	0	; () banked
 10198  00226E  5170               	movf	(___fladd@b+3)& (0+255),w,b
 10199  002270  0B80               	andlw	128
 10200  002272  6F75               	movwf	___fladd@signs& (0+255),b
 10201  002274  5170               	movf	(___fladd@b+3)& (0+255),w,b
 10202  002276  2570               	addwf	(___fladd@b+3)& (0+255),w,b
 10203  002278  6F77               	movwf	___fladd@bexp& (0+255),b
 10204  00227A                     
 10205                           ; BSR set to: 0
 10206  00227A  AF6F               	btfss	(___fladd@b+2)& (0+255),7,b
 10207  00227C  EF42  F011         	goto	u7341
 10208  002280  EF44  F011         	goto	u7340
 10209  002284                     u7341:
 10210  002284  EF45  F011         	goto	l7479
 10211  002288                     u7340:
 10212  002288                     
 10213                           ; BSR set to: 0
 10214  002288  8177               	bsf	___fladd@bexp& (0+255),0,b
 10215  00228A                     l7479:
 10216                           
 10217                           ; BSR set to: 0
 10218  00228A  5177               	movf	___fladd@bexp& (0+255),w,b
 10219  00228C  B4D8               	btfsc	status,2,c
 10220  00228E  EF4B  F011         	goto	u7351
 10221  002292  EF4D  F011         	goto	u7350
 10222  002296                     u7351:
 10223  002296  EF62  F011         	goto	l7489
 10224  00229A                     u7350:
 10225  00229A                     
 10226                           ; BSR set to: 0
 10227  00229A  2977               	incf	___fladd@bexp& (0+255),w,b
 10228  00229C  A4D8               	btfss	status,2,c
 10229  00229E  EF53  F011         	goto	u7361
 10230  0022A2  EF55  F011         	goto	u7360
 10231  0022A6                     u7361:
 10232  0022A6  EF5D  F011         	goto	l7485
 10233  0022AA                     u7360:
 10234  0022AA                     
 10235                           ; BSR set to: 0
 10236  0022AA  0E00               	movlw	0
 10237  0022AC  6F6D               	movwf	___fladd@b& (0+255),b
 10238  0022AE  0E00               	movlw	0
 10239  0022B0  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 10240  0022B2  0E00               	movlw	0
 10241  0022B4  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 10242  0022B6  0E00               	movlw	0
 10243  0022B8  6F70               	movwf	(___fladd@b+3)& (0+255),b
 10244  0022BA                     l7485:
 10245                           
 10246                           ; BSR set to: 0
 10247  0022BA  8F6F               	bsf	(___fladd@b+2)& (0+255),7,b
 10248  0022BC                     
 10249                           ; BSR set to: 0
 10250  0022BC  0E00               	movlw	0
 10251  0022BE  6F70               	movwf	(___fladd@b+3)& (0+255),b
 10252  0022C0  EF6A  F011         	goto	l7491
 10253  0022C4                     l7489:
 10254                           
 10255                           ; BSR set to: 0
 10256  0022C4  0E00               	movlw	0
 10257  0022C6  6F6D               	movwf	___fladd@b& (0+255),b
 10258  0022C8  0E00               	movlw	0
 10259  0022CA  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 10260  0022CC  0E00               	movlw	0
 10261  0022CE  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 10262  0022D0  0E00               	movlw	0
 10263  0022D2  6F70               	movwf	(___fladd@b+3)& (0+255),b
 10264  0022D4                     l7491:
 10265                           
 10266                           ; BSR set to: 0
 10267  0022D4  5174               	movf	(___fladd@a+3)& (0+255),w,b
 10268  0022D6  0B80               	andlw	128
 10269  0022D8  6F76               	movwf	___fladd@aexp& (0+255),b
 10270  0022DA                     
 10271                           ; BSR set to: 0
 10272  0022DA  5175               	movf	___fladd@signs& (0+255),w,b
 10273  0022DC  1976               	xorwf	___fladd@aexp& (0+255),w,b
 10274  0022DE  B4D8               	btfsc	status,2,c
 10275  0022E0  EF74  F011         	goto	u7371
 10276  0022E4  EF76  F011         	goto	u7370
 10277  0022E8                     u7371:
 10278  0022E8  EF77  F011         	goto	l7497
 10279  0022EC                     u7370:
 10280  0022EC                     
 10281                           ; BSR set to: 0
 10282  0022EC  8D75               	bsf	___fladd@signs& (0+255),6,b
 10283  0022EE                     l7497:
 10284                           
 10285                           ; BSR set to: 0
 10286  0022EE  5174               	movf	(___fladd@a+3)& (0+255),w,b
 10287  0022F0  2574               	addwf	(___fladd@a+3)& (0+255),w,b
 10288  0022F2  6F76               	movwf	___fladd@aexp& (0+255),b
 10289  0022F4                     
 10290                           ; BSR set to: 0
 10291  0022F4  AF73               	btfss	(___fladd@a+2)& (0+255),7,b
 10292  0022F6  EF7F  F011         	goto	u7381
 10293  0022FA  EF81  F011         	goto	u7380
 10294  0022FE                     u7381:
 10295  0022FE  EF82  F011         	goto	l7503
 10296  002302                     u7380:
 10297  002302                     
 10298                           ; BSR set to: 0
 10299  002302  8176               	bsf	___fladd@aexp& (0+255),0,b
 10300  002304                     l7503:
 10301                           
 10302                           ; BSR set to: 0
 10303  002304  5176               	movf	___fladd@aexp& (0+255),w,b
 10304  002306  B4D8               	btfsc	status,2,c
 10305  002308  EF88  F011         	goto	u7391
 10306  00230C  EF8A  F011         	goto	u7390
 10307  002310                     u7391:
 10308  002310  EF9F  F011         	goto	l7513
 10309  002314                     u7390:
 10310  002314                     
 10311                           ; BSR set to: 0
 10312  002314  2976               	incf	___fladd@aexp& (0+255),w,b
 10313  002316  A4D8               	btfss	status,2,c
 10314  002318  EF90  F011         	goto	u7401
 10315  00231C  EF92  F011         	goto	u7400
 10316  002320                     u7401:
 10317  002320  EF9A  F011         	goto	l7509
 10318  002324                     u7400:
 10319  002324                     
 10320                           ; BSR set to: 0
 10321  002324  0E00               	movlw	0
 10322  002326  6F71               	movwf	___fladd@a& (0+255),b
 10323  002328  0E00               	movlw	0
 10324  00232A  6F72               	movwf	(___fladd@a+1)& (0+255),b
 10325  00232C  0E00               	movlw	0
 10326  00232E  6F73               	movwf	(___fladd@a+2)& (0+255),b
 10327  002330  0E00               	movlw	0
 10328  002332  6F74               	movwf	(___fladd@a+3)& (0+255),b
 10329  002334                     l7509:
 10330                           
 10331                           ; BSR set to: 0
 10332  002334  8F73               	bsf	(___fladd@a+2)& (0+255),7,b
 10333  002336                     
 10334                           ; BSR set to: 0
 10335  002336  0E00               	movlw	0
 10336  002338  6F74               	movwf	(___fladd@a+3)& (0+255),b
 10337  00233A  EFA7  F011         	goto	l7515
 10338  00233E                     l7513:
 10339                           
 10340                           ; BSR set to: 0
 10341  00233E  0E00               	movlw	0
 10342  002340  6F71               	movwf	___fladd@a& (0+255),b
 10343  002342  0E00               	movlw	0
 10344  002344  6F72               	movwf	(___fladd@a+1)& (0+255),b
 10345  002346  0E00               	movlw	0
 10346  002348  6F73               	movwf	(___fladd@a+2)& (0+255),b
 10347  00234A  0E00               	movlw	0
 10348  00234C  6F74               	movwf	(___fladd@a+3)& (0+255),b
 10349  00234E                     l7515:
 10350                           
 10351                           ; BSR set to: 0
 10352  00234E  5177               	movf	___fladd@bexp& (0+255),w,b
 10353  002350  5D76               	subwf	___fladd@aexp& (0+255),w,b
 10354  002352  B0D8               	btfsc	status,0,c
 10355  002354  EFAE  F011         	goto	u7411
 10356  002358  EFB0  F011         	goto	u7410
 10357  00235C                     u7411:
 10358  00235C  EFD7  F011         	goto	l7551
 10359  002360                     u7410:
 10360  002360                     
 10361                           ; BSR set to: 0
 10362  002360  AD75               	btfss	___fladd@signs& (0+255),6,b
 10363  002362  EFB5  F011         	goto	u7421
 10364  002366  EFB7  F011         	goto	u7420
 10365  00236A                     u7421:
 10366  00236A  EFB9  F011         	goto	l7521
 10367  00236E                     u7420:
 10368  00236E                     
 10369                           ; BSR set to: 0
 10370  00236E  0E80               	movlw	128
 10371  002370  1B75               	xorwf	___fladd@signs& (0+255),f,b
 10372  002372                     l7521:
 10373                           
 10374                           ; BSR set to: 0
 10375  002372  C077  F078         	movff	___fladd@bexp,___fladd@grs
 10376  002376                     
 10377                           ; BSR set to: 0
 10378  002376  C076  F077         	movff	___fladd@aexp,___fladd@bexp
 10379  00237A                     
 10380                           ; BSR set to: 0
 10381  00237A  C078  F076         	movff	___fladd@grs,___fladd@aexp
 10382  00237E                     
 10383                           ; BSR set to: 0
 10384  00237E  C06D  F078         	movff	___fladd@b,___fladd@grs
 10385  002382                     
 10386                           ; BSR set to: 0
 10387  002382  C071  F06D         	movff	___fladd@a,___fladd@b
 10388  002386                     
 10389                           ; BSR set to: 0
 10390  002386  C078  F071         	movff	___fladd@grs,___fladd@a
 10391  00238A                     
 10392                           ; BSR set to: 0
 10393  00238A  C06E  F078         	movff	___fladd@b+1,___fladd@grs
 10394  00238E                     
 10395                           ; BSR set to: 0
 10396  00238E  C072  F06E         	movff	___fladd@a+1,___fladd@b+1
 10397  002392                     
 10398                           ; BSR set to: 0
 10399  002392  C078  F072         	movff	___fladd@grs,___fladd@a+1
 10400  002396                     
 10401                           ; BSR set to: 0
 10402  002396  C06F  F078         	movff	___fladd@b+2,___fladd@grs
 10403  00239A                     
 10404                           ; BSR set to: 0
 10405  00239A  C073  F06F         	movff	___fladd@a+2,___fladd@b+2
 10406  00239E                     
 10407                           ; BSR set to: 0
 10408  00239E  C078  F073         	movff	___fladd@grs,___fladd@a+2
 10409  0023A2                     
 10410                           ; BSR set to: 0
 10411  0023A2  C070  F078         	movff	___fladd@b+3,___fladd@grs
 10412  0023A6                     
 10413                           ; BSR set to: 0
 10414  0023A6  C074  F070         	movff	___fladd@a+3,___fladd@b+3
 10415  0023AA                     
 10416                           ; BSR set to: 0
 10417  0023AA  C078  F074         	movff	___fladd@grs,___fladd@a+3
 10418  0023AE                     l7551:
 10419                           
 10420                           ; BSR set to: 0
 10421  0023AE  0E00               	movlw	0
 10422  0023B0  6F78               	movwf	___fladd@grs& (0+255),b
 10423  0023B2                     
 10424                           ; BSR set to: 0
 10425  0023B2  5177               	movf	___fladd@bexp& (0+255),w,b
 10426  0023B4  C076  F036         	movff	___fladd@aexp,??___fladd
 10427  0023B8  6A37               	clrf	(??___fladd+1)^0,c
 10428  0023BA  5E36               	subwf	??___fladd^0,f,c
 10429  0023BC  0E00               	movlw	0
 10430  0023BE  5A37               	subwfb	(??___fladd+1)^0,f,c
 10431  0023C0  BE37               	btfsc	(??___fladd+1)^0,7,c
 10432  0023C2  EFEC  F011         	goto	u7431
 10433  0023C6  5037               	movf	(??___fladd+1)^0,w,c
 10434  0023C8  E109               	bnz	u7430
 10435  0023CA  0E1A               	movlw	26
 10436  0023CC  5C36               	subwf	??___fladd^0,w,c
 10437  0023CE  A0D8               	btfss	status,0,c
 10438  0023D0  EFEC  F011         	goto	u7431
 10439  0023D4  EFEE  F011         	goto	u7430
 10440  0023D8                     u7431:
 10441  0023D8  EF25  F012         	goto	l1934
 10442  0023DC                     u7430:
 10443  0023DC                     
 10444                           ; BSR set to: 0
 10445  0023DC  516D               	movf	___fladd@b& (0+255),w,b
 10446  0023DE  116E               	iorwf	(___fladd@b+1)& (0+255),w,b
 10447  0023E0  116F               	iorwf	(___fladd@b+2)& (0+255),w,b
 10448  0023E2  1170               	iorwf	(___fladd@b+3)& (0+255),w,b
 10449  0023E4  A4D8               	btfss	status,2,c
 10450  0023E6  EFF7  F011         	goto	u7441
 10451  0023EA  EFFA  F011         	goto	u7440
 10452  0023EE                     u7441:
 10453  0023EE  0E01               	movlw	1
 10454  0023F0  EFFB  F011         	goto	u7450
 10455  0023F4                     u7440:
 10456  0023F4  0E00               	movlw	0
 10457  0023F6                     u7450:
 10458  0023F6  6F78               	movwf	___fladd@grs& (0+255),b
 10459  0023F8                     
 10460                           ; BSR set to: 0
 10461  0023F8  0E00               	movlw	0
 10462  0023FA  6F6D               	movwf	___fladd@b& (0+255),b
 10463  0023FC  0E00               	movlw	0
 10464  0023FE  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 10465  002400  0E00               	movlw	0
 10466  002402  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 10467  002404  0E00               	movlw	0
 10468  002406  6F70               	movwf	(___fladd@b+3)& (0+255),b
 10469  002408                     
 10470                           ; BSR set to: 0
 10471  002408  C076  F077         	movff	___fladd@aexp,___fladd@bexp
 10472  00240C  EF2E  F012         	goto	l1933
 10473  002410                     l1935:
 10474                           
 10475                           ; BSR set to: 0
 10476  002410  A178               	btfss	___fladd@grs& (0+255),0,b
 10477  002412  EF0D  F012         	goto	u7461
 10478  002416  EF0F  F012         	goto	u7460
 10479  00241A                     u7461:
 10480  00241A  EF15  F012         	goto	l7563
 10481  00241E                     u7460:
 10482  00241E                     
 10483                           ; BSR set to: 0
 10484  00241E  90D8               	bcf	status,0,c
 10485  002420  3178               	rrcf	___fladd@grs& (0+255),w,b
 10486  002422  0901               	iorlw	1
 10487  002424  6F78               	movwf	___fladd@grs& (0+255),b
 10488  002426  EF17  F012         	goto	l7565
 10489  00242A                     l7563:
 10490                           
 10491                           ; BSR set to: 0
 10492  00242A  90D8               	bcf	status,0,c
 10493  00242C  3378               	rrcf	___fladd@grs& (0+255),f,b
 10494  00242E                     l7565:
 10495                           
 10496                           ; BSR set to: 0
 10497  00242E  A16D               	btfss	___fladd@b& (0+255),0,b
 10498  002430  EF1C  F012         	goto	u7471
 10499  002434  EF1E  F012         	goto	u7470
 10500  002438                     u7471:
 10501  002438  EF1F  F012         	goto	l7569
 10502  00243C                     u7470:
 10503  00243C                     
 10504                           ; BSR set to: 0
 10505  00243C  8F78               	bsf	___fladd@grs& (0+255),7,b
 10506  00243E                     l7569:
 10507                           
 10508                           ; BSR set to: 0
 10509  00243E  3570               	rlcf	(___fladd@b+3)& (0+255),w,b
 10510  002440  3370               	rrcf	(___fladd@b+3)& (0+255),f,b
 10511  002442  336F               	rrcf	(___fladd@b+2)& (0+255),f,b
 10512  002444  336E               	rrcf	(___fladd@b+1)& (0+255),f,b
 10513  002446  336D               	rrcf	___fladd@b& (0+255),f,b
 10514  002448                     
 10515                           ; BSR set to: 0
 10516  002448  2B77               	incf	___fladd@bexp& (0+255),f,b
 10517  00244A                     l1934:
 10518                           
 10519                           ; BSR set to: 0
 10520  00244A  5176               	movf	___fladd@aexp& (0+255),w,b
 10521  00244C  5D77               	subwf	___fladd@bexp& (0+255),w,b
 10522  00244E  A0D8               	btfss	status,0,c
 10523  002450  EF2C  F012         	goto	u7481
 10524  002454  EF2E  F012         	goto	u7480
 10525  002458                     u7481:
 10526  002458  EF08  F012         	goto	l1935
 10527  00245C                     u7480:
 10528  00245C                     l1933:
 10529                           
 10530                           ; BSR set to: 0
 10531  00245C  BD75               	btfsc	___fladd@signs& (0+255),6,b
 10532  00245E  EF33  F012         	goto	u7491
 10533  002462  EF35  F012         	goto	u7490
 10534  002466                     u7491:
 10535  002466  EF75  F012         	goto	l7597
 10536  00246A                     u7490:
 10537  00246A                     
 10538                           ; BSR set to: 0
 10539  00246A  5177               	movf	___fladd@bexp& (0+255),w,b
 10540  00246C  A4D8               	btfss	status,2,c
 10541  00246E  EF3B  F012         	goto	u7501
 10542  002472  EF3D  F012         	goto	u7500
 10543  002476                     u7501:
 10544  002476  EF47  F012         	goto	l7579
 10545  00247A                     u7500:
 10546  00247A                     
 10547                           ; BSR set to: 0
 10548  00247A  0E00               	movlw	0
 10549  00247C  6F6D               	movwf	?___fladd& (0+255),b
 10550  00247E  0E00               	movlw	0
 10551  002480  6F6E               	movwf	(?___fladd+1)& (0+255),b
 10552  002482  0E00               	movlw	0
 10553  002484  6F6F               	movwf	(?___fladd+2)& (0+255),b
 10554  002486  0E00               	movlw	0
 10555  002488  6F70               	movwf	(?___fladd+3)& (0+255),b
 10556  00248A  EF96  F013         	goto	l1942
 10557  00248E                     l7579:
 10558                           
 10559                           ; BSR set to: 0
 10560  00248E  5171               	movf	___fladd@a& (0+255),w,b
 10561  002490  276D               	addwf	___fladd@b& (0+255),f,b
 10562  002492  5172               	movf	(___fladd@a+1)& (0+255),w,b
 10563  002494  236E               	addwfc	(___fladd@b+1)& (0+255),f,b
 10564  002496  5173               	movf	(___fladd@a+2)& (0+255),w,b
 10565  002498  236F               	addwfc	(___fladd@b+2)& (0+255),f,b
 10566  00249A  5174               	movf	(___fladd@a+3)& (0+255),w,b
 10567  00249C  2370               	addwfc	(___fladd@b+3)& (0+255),f,b
 10568  00249E                     
 10569                           ; BSR set to: 0
 10570  00249E  A170               	btfss	(___fladd@b+3)& (0+255),0,b
 10571  0024A0  EF54  F012         	goto	u7511
 10572  0024A4  EF56  F012         	goto	u7510
 10573  0024A8                     u7511:
 10574  0024A8  EF02  F013         	goto	l7633
 10575  0024AC                     u7510:
 10576  0024AC                     
 10577                           ; BSR set to: 0
 10578  0024AC  A178               	btfss	___fladd@grs& (0+255),0,b
 10579  0024AE  EF5B  F012         	goto	u7521
 10580  0024B2  EF5D  F012         	goto	u7520
 10581  0024B6                     u7521:
 10582  0024B6  EF63  F012         	goto	l7587
 10583  0024BA                     u7520:
 10584  0024BA                     
 10585                           ; BSR set to: 0
 10586  0024BA  90D8               	bcf	status,0,c
 10587  0024BC  3178               	rrcf	___fladd@grs& (0+255),w,b
 10588  0024BE  0901               	iorlw	1
 10589  0024C0  6F78               	movwf	___fladd@grs& (0+255),b
 10590  0024C2  EF65  F012         	goto	l7589
 10591  0024C6                     l7587:
 10592                           
 10593                           ; BSR set to: 0
 10594  0024C6  90D8               	bcf	status,0,c
 10595  0024C8  3378               	rrcf	___fladd@grs& (0+255),f,b
 10596  0024CA                     l7589:
 10597                           
 10598                           ; BSR set to: 0
 10599  0024CA  A16D               	btfss	___fladd@b& (0+255),0,b
 10600  0024CC  EF6A  F012         	goto	u7531
 10601  0024D0  EF6C  F012         	goto	u7530
 10602  0024D4                     u7531:
 10603  0024D4  EF6D  F012         	goto	l7593
 10604  0024D8                     u7530:
 10605  0024D8                     
 10606                           ; BSR set to: 0
 10607  0024D8  8F78               	bsf	___fladd@grs& (0+255),7,b
 10608  0024DA                     l7593:
 10609                           
 10610                           ; BSR set to: 0
 10611  0024DA  3570               	rlcf	(___fladd@b+3)& (0+255),w,b
 10612  0024DC  3370               	rrcf	(___fladd@b+3)& (0+255),f,b
 10613  0024DE  336F               	rrcf	(___fladd@b+2)& (0+255),f,b
 10614  0024E0  336E               	rrcf	(___fladd@b+1)& (0+255),f,b
 10615  0024E2  336D               	rrcf	___fladd@b& (0+255),f,b
 10616  0024E4                     
 10617                           ; BSR set to: 0
 10618  0024E4  2B77               	incf	___fladd@bexp& (0+255),f,b
 10619  0024E6  EF02  F013         	goto	l7633
 10620  0024EA                     l7597:
 10621                           
 10622                           ; BSR set to: 0
 10623  0024EA  5171               	movf	___fladd@a& (0+255),w,b
 10624  0024EC  5D6D               	subwf	___fladd@b& (0+255),w,b
 10625  0024EE  5172               	movf	(___fladd@a+1)& (0+255),w,b
 10626  0024F0  596E               	subwfb	(___fladd@b+1)& (0+255),w,b
 10627  0024F2  5173               	movf	(___fladd@a+2)& (0+255),w,b
 10628  0024F4  596F               	subwfb	(___fladd@b+2)& (0+255),w,b
 10629  0024F6  5170               	movf	(___fladd@b+3)& (0+255),w,b
 10630  0024F8  0A80               	xorlw	128
 10631  0024FA  6E36               	movwf	??___fladd^0,c
 10632  0024FC  5174               	movf	(___fladd@a+3)& (0+255),w,b
 10633  0024FE  0A80               	xorlw	128
 10634  002500  5836               	subwfb	??___fladd^0,w,c
 10635  002502  B0D8               	btfsc	status,0,c
 10636  002504  EF86  F012         	goto	u7541
 10637  002508  EF88  F012         	goto	u7540
 10638  00250C                     u7541:
 10639  00250C  EFB3  F012         	goto	l7607
 10640  002510                     u7540:
 10641  002510                     
 10642                           ; BSR set to: 0
 10643  002510  516D               	movf	___fladd@b& (0+255),w,b
 10644  002512  5D71               	subwf	___fladd@a& (0+255),w,b
 10645  002514  6E36               	movwf	??___fladd^0,c
 10646  002516  516E               	movf	(___fladd@b+1)& (0+255),w,b
 10647  002518  5972               	subwfb	(___fladd@a+1)& (0+255),w,b
 10648  00251A  6E37               	movwf	(??___fladd+1)^0,c
 10649  00251C  516F               	movf	(___fladd@b+2)& (0+255),w,b
 10650  00251E  5973               	subwfb	(___fladd@a+2)& (0+255),w,b
 10651  002520  6E38               	movwf	(??___fladd+2)^0,c
 10652  002522  5170               	movf	(___fladd@b+3)& (0+255),w,b
 10653  002524  5974               	subwfb	(___fladd@a+3)& (0+255),w,b
 10654  002526  6E39               	movwf	(??___fladd+3)^0,c
 10655  002528  0EFF               	movlw	255
 10656  00252A  2436               	addwf	??___fladd^0,w,c
 10657  00252C  6F6D               	movwf	___fladd@b& (0+255),b
 10658  00252E  0EFF               	movlw	255
 10659  002530  2037               	addwfc	(??___fladd+1)^0,w,c
 10660  002532  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 10661  002534  0EFF               	movlw	255
 10662  002536  2038               	addwfc	(??___fladd+2)^0,w,c
 10663  002538  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 10664  00253A  0EFF               	movlw	255
 10665  00253C  2039               	addwfc	(??___fladd+3)^0,w,c
 10666  00253E  6F70               	movwf	(___fladd@b+3)& (0+255),b
 10667  002540  0E80               	movlw	128
 10668  002542  1B75               	xorwf	___fladd@signs& (0+255),f,b
 10669  002544                     
 10670                           ; BSR set to: 0
 10671  002544  6D78               	negf	___fladd@grs& (0+255),b
 10672  002546                     
 10673                           ; BSR set to: 0
 10674  002546  5178               	movf	___fladd@grs& (0+255),w,b
 10675  002548  A4D8               	btfss	status,2,c
 10676  00254A  EFA9  F012         	goto	u7551
 10677  00254E  EFAB  F012         	goto	u7550
 10678  002552                     u7551:
 10679  002552  EFBB  F012         	goto	l1950
 10680  002556                     u7550:
 10681  002556                     
 10682                           ; BSR set to: 0
 10683  002556  0E01               	movlw	1
 10684  002558  276D               	addwf	___fladd@b& (0+255),f,b
 10685  00255A  0E00               	movlw	0
 10686  00255C  236E               	addwfc	(___fladd@b+1)& (0+255),f,b
 10687  00255E  236F               	addwfc	(___fladd@b+2)& (0+255),f,b
 10688  002560  2370               	addwfc	(___fladd@b+3)& (0+255),f,b
 10689  002562  EFBB  F012         	goto	l1950
 10690  002566                     l7607:
 10691                           
 10692                           ; BSR set to: 0
 10693  002566  5171               	movf	___fladd@a& (0+255),w,b
 10694  002568  5F6D               	subwf	___fladd@b& (0+255),f,b
 10695  00256A  5172               	movf	(___fladd@a+1)& (0+255),w,b
 10696  00256C  5B6E               	subwfb	(___fladd@b+1)& (0+255),f,b
 10697  00256E  5173               	movf	(___fladd@a+2)& (0+255),w,b
 10698  002570  5B6F               	subwfb	(___fladd@b+2)& (0+255),f,b
 10699  002572  5174               	movf	(___fladd@a+3)& (0+255),w,b
 10700  002574  5B70               	subwfb	(___fladd@b+3)& (0+255),f,b
 10701  002576                     l1950:
 10702                           
 10703                           ; BSR set to: 0
 10704  002576  516D               	movf	___fladd@b& (0+255),w,b
 10705  002578  116E               	iorwf	(___fladd@b+1)& (0+255),w,b
 10706  00257A  116F               	iorwf	(___fladd@b+2)& (0+255),w,b
 10707  00257C  1170               	iorwf	(___fladd@b+3)& (0+255),w,b
 10708  00257E  A4D8               	btfss	status,2,c
 10709  002580  EFC4  F012         	goto	u7561
 10710  002584  EFC6  F012         	goto	u7560
 10711  002588                     u7561:
 10712  002588  EFFB  F012         	goto	l7631
 10713  00258C                     u7560:
 10714  00258C                     
 10715                           ; BSR set to: 0
 10716  00258C  5178               	movf	___fladd@grs& (0+255),w,b
 10717  00258E  A4D8               	btfss	status,2,c
 10718  002590  EFCC  F012         	goto	u7571
 10719  002594  EFCE  F012         	goto	u7570
 10720  002598                     u7571:
 10721  002598  EFFB  F012         	goto	l7631
 10722  00259C                     u7570:
 10723  00259C                     
 10724                           ; BSR set to: 0
 10725  00259C  0E00               	movlw	0
 10726  00259E  6F6D               	movwf	?___fladd& (0+255),b
 10727  0025A0  0E00               	movlw	0
 10728  0025A2  6F6E               	movwf	(?___fladd+1)& (0+255),b
 10729  0025A4  0E00               	movlw	0
 10730  0025A6  6F6F               	movwf	(?___fladd+2)& (0+255),b
 10731  0025A8  0E00               	movlw	0
 10732  0025AA  6F70               	movwf	(?___fladd+3)& (0+255),b
 10733  0025AC  EF96  F013         	goto	l1942
 10734  0025B0                     l7615:
 10735                           
 10736                           ; BSR set to: 0
 10737  0025B0  90D8               	bcf	status,0,c
 10738  0025B2  376D               	rlcf	___fladd@b& (0+255),f,b
 10739  0025B4  376E               	rlcf	(___fladd@b+1)& (0+255),f,b
 10740  0025B6  376F               	rlcf	(___fladd@b+2)& (0+255),f,b
 10741  0025B8  3770               	rlcf	(___fladd@b+3)& (0+255),f,b
 10742  0025BA                     
 10743                           ; BSR set to: 0
 10744  0025BA  AF78               	btfss	___fladd@grs& (0+255),7,b
 10745  0025BC  EFE2  F012         	goto	u7581
 10746  0025C0  EFE4  F012         	goto	u7580
 10747  0025C4                     u7581:
 10748  0025C4  EFE5  F012         	goto	l7621
 10749  0025C8                     u7580:
 10750  0025C8                     
 10751                           ; BSR set to: 0
 10752  0025C8  816D               	bsf	___fladd@b& (0+255),0,b
 10753  0025CA                     l7621:
 10754                           
 10755                           ; BSR set to: 0
 10756  0025CA  A178               	btfss	___fladd@grs& (0+255),0,b
 10757  0025CC  EFEA  F012         	goto	u7591
 10758  0025D0  EFEC  F012         	goto	u7590
 10759  0025D4                     u7591:
 10760  0025D4  EFF0  F012         	goto	l7625
 10761  0025D8                     u7590:
 10762  0025D8                     
 10763                           ; BSR set to: 0
 10764  0025D8  80D8               	bsf	status,0,c
 10765  0025DA  3778               	rlcf	___fladd@grs& (0+255),f,b
 10766  0025DC  EFF2  F012         	goto	l7627
 10767  0025E0                     l7625:
 10768                           
 10769                           ; BSR set to: 0
 10770  0025E0  90D8               	bcf	status,0,c
 10771  0025E2  3778               	rlcf	___fladd@grs& (0+255),f,b
 10772  0025E4                     l7627:
 10773                           
 10774                           ; BSR set to: 0
 10775  0025E4  5177               	movf	___fladd@bexp& (0+255),w,b
 10776  0025E6  B4D8               	btfsc	status,2,c
 10777  0025E8  EFF8  F012         	goto	u7601
 10778  0025EC  EFFA  F012         	goto	u7600
 10779  0025F0                     u7601:
 10780  0025F0  EFFB  F012         	goto	l7631
 10781  0025F4                     u7600:
 10782  0025F4                     
 10783                           ; BSR set to: 0
 10784  0025F4  0777               	decf	___fladd@bexp& (0+255),f,b
 10785  0025F6                     l7631:
 10786                           
 10787                           ; BSR set to: 0
 10788  0025F6  AF6F               	btfss	(___fladd@b+2)& (0+255),7,b
 10789  0025F8  EF00  F013         	goto	u7611
 10790  0025FC  EF02  F013         	goto	u7610
 10791  002600                     u7611:
 10792  002600  EFD8  F012         	goto	l7615
 10793  002604                     u7610:
 10794  002604                     l7633:
 10795                           
 10796                           ; BSR set to: 0
 10797  002604  0E00               	movlw	0
 10798  002606  6F76               	movwf	___fladd@aexp& (0+255),b
 10799  002608                     
 10800                           ; BSR set to: 0
 10801  002608  AF78               	btfss	___fladd@grs& (0+255),7,b
 10802  00260A  EF09  F013         	goto	u7621
 10803  00260E  EF0B  F013         	goto	u7620
 10804  002612                     u7621:
 10805  002612  EF23  F013         	goto	l1959
 10806  002616                     u7620:
 10807  002616                     
 10808                           ; BSR set to: 0
 10809  002616  C078  F036         	movff	___fladd@grs,??___fladd
 10810  00261A  0E7F               	movlw	127
 10811  00261C  1636               	andwf	??___fladd^0,f,c
 10812  00261E  B4D8               	btfsc	status,2,c
 10813  002620  EF14  F013         	goto	u7631
 10814  002624  EF16  F013         	goto	u7630
 10815  002628                     u7631:
 10816  002628  EF1A  F013         	goto	l1960
 10817  00262C                     u7630:
 10818  00262C                     l7639:
 10819                           
 10820                           ; BSR set to: 0
 10821  00262C  0E01               	movlw	1
 10822  00262E  6F76               	movwf	___fladd@aexp& (0+255),b
 10823  002630  EF23  F013         	goto	l1959
 10824  002634                     l1960:
 10825                           
 10826                           ; BSR set to: 0
 10827  002634  A16D               	btfss	___fladd@b& (0+255),0,b
 10828  002636  EF1F  F013         	goto	u7641
 10829  00263A  EF21  F013         	goto	u7640
 10830  00263E                     u7641:
 10831  00263E  EF23  F013         	goto	l1959
 10832  002642                     u7640:
 10833  002642  EF16  F013         	goto	l7639
 10834  002646                     l1959:
 10835                           
 10836                           ; BSR set to: 0
 10837  002646  5176               	movf	___fladd@aexp& (0+255),w,b
 10838  002648  B4D8               	btfsc	status,2,c
 10839  00264A  EF29  F013         	goto	u7651
 10840  00264E  EF2B  F013         	goto	u7650
 10841  002652                     u7651:
 10842  002652  EF56  F013         	goto	l7651
 10843  002656                     u7650:
 10844  002656                     
 10845                           ; BSR set to: 0
 10846  002656  0E01               	movlw	1
 10847  002658  276D               	addwf	___fladd@b& (0+255),f,b
 10848  00265A  0E00               	movlw	0
 10849  00265C  236E               	addwfc	(___fladd@b+1)& (0+255),f,b
 10850  00265E  236F               	addwfc	(___fladd@b+2)& (0+255),f,b
 10851  002660  2370               	addwfc	(___fladd@b+3)& (0+255),f,b
 10852  002662                     
 10853                           ; BSR set to: 0
 10854  002662  A170               	btfss	(___fladd@b+3)& (0+255),0,b
 10855  002664  EF36  F013         	goto	u7661
 10856  002668  EF38  F013         	goto	u7660
 10857  00266C                     u7661:
 10858  00266C  EF56  F013         	goto	l7651
 10859  002670                     u7660:
 10860  002670                     
 10861                           ; BSR set to: 0
 10862  002670  C06D  F036         	movff	___fladd@b,??___fladd
 10863  002674  C06E  F037         	movff	___fladd@b+1,??___fladd+1
 10864  002678  C06F  F038         	movff	___fladd@b+2,??___fladd+2
 10865  00267C  C070  F039         	movff	___fladd@b+3,??___fladd+3
 10866  002680  3439               	rlcf	(??___fladd+3)^0,w,c
 10867  002682  3239               	rrcf	(??___fladd+3)^0,f,c
 10868  002684  3238               	rrcf	(??___fladd+2)^0,f,c
 10869  002686  3237               	rrcf	(??___fladd+1)^0,f,c
 10870  002688  3236               	rrcf	??___fladd^0,f,c
 10871  00268A  C036  F06D         	movff	??___fladd,___fladd@b
 10872  00268E  C037  F06E         	movff	??___fladd+1,___fladd@b+1
 10873  002692  C038  F06F         	movff	??___fladd+2,___fladd@b+2
 10874  002696  C039  F070         	movff	??___fladd+3,___fladd@b+3
 10875  00269A  2977               	incf	___fladd@bexp& (0+255),w,b
 10876  00269C  B4D8               	btfsc	status,2,c
 10877  00269E  EF53  F013         	goto	u7671
 10878  0026A2  EF55  F013         	goto	u7670
 10879  0026A6                     u7671:
 10880  0026A6  EF56  F013         	goto	l7651
 10881  0026AA                     u7670:
 10882  0026AA                     
 10883                           ; BSR set to: 0
 10884  0026AA  2B77               	incf	___fladd@bexp& (0+255),f,b
 10885  0026AC                     l7651:
 10886                           
 10887                           ; BSR set to: 0
 10888  0026AC  2977               	incf	___fladd@bexp& (0+255),w,b
 10889  0026AE  B4D8               	btfsc	status,2,c
 10890  0026B0  EF5C  F013         	goto	u7681
 10891  0026B4  EF5E  F013         	goto	u7680
 10892  0026B8                     u7681:
 10893  0026B8  EF66  F013         	goto	l7655
 10894  0026BC                     u7680:
 10895  0026BC                     
 10896                           ; BSR set to: 0
 10897  0026BC  5177               	movf	___fladd@bexp& (0+255),w,b
 10898  0026BE  A4D8               	btfss	status,2,c
 10899  0026C0  EF64  F013         	goto	u7691
 10900  0026C4  EF66  F013         	goto	u7690
 10901  0026C8                     u7691:
 10902  0026C8  EF78  F013         	goto	l7659
 10903  0026CC                     u7690:
 10904  0026CC                     l7655:
 10905                           
 10906                           ; BSR set to: 0
 10907  0026CC  0E00               	movlw	0
 10908  0026CE  6F6D               	movwf	___fladd@b& (0+255),b
 10909  0026D0  0E00               	movlw	0
 10910  0026D2  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 10911  0026D4  0E00               	movlw	0
 10912  0026D6  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 10913  0026D8  0E00               	movlw	0
 10914  0026DA  6F70               	movwf	(___fladd@b+3)& (0+255),b
 10915  0026DC  5177               	movf	___fladd@bexp& (0+255),w,b
 10916  0026DE  A4D8               	btfss	status,2,c
 10917  0026E0  EF74  F013         	goto	u7701
 10918  0026E4  EF76  F013         	goto	u7700
 10919  0026E8                     u7701:
 10920  0026E8  EF78  F013         	goto	l7659
 10921  0026EC                     u7700:
 10922  0026EC                     
 10923                           ; BSR set to: 0
 10924  0026EC  0E00               	movlw	0
 10925  0026EE  6F75               	movwf	___fladd@signs& (0+255),b
 10926  0026F0                     l7659:
 10927                           
 10928                           ; BSR set to: 0
 10929  0026F0  A177               	btfss	___fladd@bexp& (0+255),0,b
 10930  0026F2  EF7D  F013         	goto	u7711
 10931  0026F6  EF7F  F013         	goto	u7710
 10932  0026FA                     u7711:
 10933  0026FA  EF82  F013         	goto	l7663
 10934  0026FE                     u7710:
 10935  0026FE                     
 10936                           ; BSR set to: 0
 10937  0026FE  8F6F               	bsf	(___fladd@b+2)& (0+255),7,b
 10938  002700  EF83  F013         	goto	l7665
 10939  002704                     l7663:
 10940                           
 10941                           ; BSR set to: 0
 10942  002704  9F6F               	bcf	(___fladd@b+2)& (0+255),7,b
 10943  002706                     l7665:
 10944                           
 10945                           ; BSR set to: 0
 10946  002706  90D8               	bcf	status,0,c
 10947  002708  3177               	rrcf	___fladd@bexp& (0+255),w,b
 10948  00270A  6F70               	movwf	(___fladd@b+3)& (0+255),b
 10949  00270C                     
 10950                           ; BSR set to: 0
 10951  00270C  AF75               	btfss	___fladd@signs& (0+255),7,b
 10952  00270E  EF8B  F013         	goto	u7721
 10953  002712  EF8D  F013         	goto	u7720
 10954  002716                     u7721:
 10955  002716  EF8E  F013         	goto	l7671
 10956  00271A                     u7720:
 10957  00271A                     
 10958                           ; BSR set to: 0
 10959  00271A  8F70               	bsf	(___fladd@b+3)& (0+255),7,b
 10960  00271C                     l7671:
 10961                           
 10962                           ; BSR set to: 0
 10963  00271C  C06D  F06D         	movff	___fladd@b,?___fladd
 10964  002720  C06E  F06E         	movff	___fladd@b+1,?___fladd+1
 10965  002724  C06F  F06F         	movff	___fladd@b+2,?___fladd+2
 10966  002728  C070  F070         	movff	___fladd@b+3,?___fladd+3
 10967  00272C                     l1942:
 10968                           
 10969                           ; BSR set to: 0
 10970  00272C  0012               	return		;funcret
 10971  00272E                     __end_of___fladd:
 10972                           	callstack 0
 10973                           
 10974 ;; *************** function _calcMotorPow *****************
 10975 ;; Defined at:
 10976 ;;		line 338 in file "main.c"
 10977 ;; Parameters:    Size  Location     Type
 10978 ;;		None
 10979 ;; Auto vars:     Size  Location     Type
 10980 ;;  oldSpeedDelt    2   39[BANK0 ] short 
 10981 ;;  setSpeedDelt    2   37[BANK0 ] short 
 10982 ;;  addMPow         1   41[BANK0 ] char 
 10983 ;; Return value:  Size  Location     Type
 10984 ;;                  1    wreg      void 
 10985 ;; Registers used:
 10986 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10987 ;; Tracked objects:
 10988 ;;		On entry : 0/0
 10989 ;;		On exit  : 0/0
 10990 ;;		Unchanged: 0/0
 10991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10993 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10994 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10995 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10996 ;;Total ram usage:        7 bytes
 10997 ;; Hardware stack levels used: 1
 10998 ;; Hardware stack levels required when called: 10
 10999 ;; This function calls:
 11000 ;;		___awdiv
 11001 ;;		___flmul
 11002 ;;		___fltol
 11003 ;;		___xxtofl
 11004 ;;		_actSpeed
 11005 ;;		_setMotor
 11006 ;; This function is called by:
 11007 ;;		_loop
 11008 ;; This function uses a non-reentrant model
 11009 ;;
 11010                           
 11011                           	psect	text39
 11012  004132                     __ptext39:
 11013                           	callstack 0
 11014  004132                     _calcMotorPow:
 11015                           	callstack 19
 11016  004132                     
 11017                           ;main.c: 339:     currentSpeed = actSpeed();
 11018  004132  EC2E  F028         	call	_actSpeed	;wreg free
 11019  004136  C022  F0EB         	movff	?_actSpeed,_currentSpeed
 11020  00413A  C023  F0EC         	movff	?_actSpeed+1,_currentSpeed+1
 11021  00413E                     
 11022                           ;main.c: 341:     int16_t setSpeedDelta = setSpeed - currentSpeed;
 11023  00413E  0100               	movlb	0	; () banked
 11024  004140  51EB               	movf	_currentSpeed& (0+255),w,b
 11025  004142  5DED               	subwf	_setSpeed& (0+255),w,b
 11026  004144  6F85               	movwf	calcMotorPow@setSpeedDelta& (0+255),b
 11027  004146  51EC               	movf	(_currentSpeed+1)& (0+255),w,b
 11028  004148  59EE               	subwfb	(_setSpeed+1)& (0+255),w,b
 11029  00414A  6F86               	movwf	(calcMotorPow@setSpeedDelta+1)& (0+255),b
 11030  00414C                     
 11031                           ; BSR set to: 0
 11032                           ;main.c: 342:     int16_t oldSpeedDelta = currentSpeed - oldSpeed;
 11033  00414C  0101               	movlb	1	; () banked
 11034  00414E  512C               	movf	_oldSpeed& (0+255),w,b
 11035  004150  0100               	movlb	0	; () banked
 11036  004152  5DEB               	subwf	_currentSpeed& (0+255),w,b
 11037  004154  6F87               	movwf	calcMotorPow@oldSpeedDelta& (0+255),b
 11038  004156  0101               	movlb	1	; () banked
 11039  004158  512D               	movf	(_oldSpeed+1)& (0+255),w,b
 11040  00415A  0100               	movlb	0	; () banked
 11041  00415C  59EC               	subwfb	(_currentSpeed+1)& (0+255),w,b
 11042  00415E  6F88               	movwf	(calcMotorPow@oldSpeedDelta+1)& (0+255),b
 11043  004160                     
 11044                           ; BSR set to: 0
 11045                           ;main.c: 348:     addMPow = (int8_t) ((0.020) * (setSpeedDelta - (oldSpeedDelta / (2))))
      +                          ;
 11046  004160  0E0A               	movlw	10
 11047  004162  6E2E               	movwf	___flmul@a^0,c
 11048  004164  0ED7               	movlw	215
 11049  004166  6E2F               	movwf	(___flmul@a+1)^0,c
 11050  004168  0EA3               	movlw	163
 11051  00416A  6E30               	movwf	(___flmul@a+2)^0,c
 11052  00416C  0E3C               	movlw	60
 11053  00416E  6E31               	movwf	(___flmul@a+3)^0,c
 11054  004170  0E00               	movlw	0
 11055  004172  6E17               	movwf	(___awdiv@divisor+1)^0,c
 11056  004174  0E02               	movlw	2
 11057  004176  6E16               	movwf	___awdiv@divisor^0,c
 11058  004178  C087  F014         	movff	calcMotorPow@oldSpeedDelta,___awdiv@dividend
 11059  00417C  C088  F015         	movff	calcMotorPow@oldSpeedDelta+1,___awdiv@dividend+1
 11060  004180  ECC1  F025         	call	___awdiv	;wreg free
 11061  004184  C085  F083         	movff	calcMotorPow@setSpeedDelta,??_calcMotorPow
 11062  004188  C086  F084         	movff	calcMotorPow@setSpeedDelta+1,??_calcMotorPow+1
 11063  00418C  5014               	movf	?___awdiv^0,w,c
 11064  00418E  0100               	movlb	0	; () banked
 11065  004190  5F83               	subwf	??_calcMotorPow& (0+255),f,b
 11066  004192  5015               	movf	(?___awdiv+1)^0,w,c
 11067  004194  5B84               	subwfb	(??_calcMotorPow+1)& (0+255),f,b
 11068  004196  C083  F01C         	movff	??_calcMotorPow,___xxtofl@val
 11069  00419A  C084  F01D         	movff	??_calcMotorPow+1,___xxtofl@val+1
 11070  00419E  0E00               	movlw	0
 11071  0041A0  BE1D               	btfsc	(___xxtofl@val+1)^0,7,c
 11072  0041A2  0EFF               	movlw	-1
 11073  0041A4  6E1E               	movwf	(___xxtofl@val+2)^0,c
 11074  0041A6  6E1F               	movwf	(___xxtofl@val+3)^0,c
 11075  0041A8  0E01               	movlw	1
 11076  0041AA  EC7F  F01D         	call	___xxtofl
 11077  0041AE  C01C  F02A         	movff	?___xxtofl,___flmul@b
 11078  0041B2  C01D  F02B         	movff	?___xxtofl+1,___flmul@b+1
 11079  0041B6  C01E  F02C         	movff	?___xxtofl+2,___flmul@b+2
 11080  0041BA  C01F  F02D         	movff	?___xxtofl+3,___flmul@b+3
 11081  0041BE  EC97  F013         	call	___flmul	;wreg free
 11082  0041C2  C02A  F079         	movff	?___flmul,___fltol@f1
 11083  0041C6  C02B  F07A         	movff	?___flmul+1,___fltol@f1+1
 11084  0041CA  C02C  F07B         	movff	?___flmul+2,___fltol@f1+2
 11085  0041CE  C02D  F07C         	movff	?___flmul+3,___fltol@f1+3
 11086  0041D2  ECEB  F022         	call	___fltol	;wreg free
 11087  0041D6  0100               	movlb	0	; () banked
 11088  0041D8  5179               	movf	?___fltol& (0+255),w,b
 11089  0041DA  6F89               	movwf	calcMotorPow@addMPow& (0+255),b
 11090  0041DC                     
 11091                           ; BSR set to: 0
 11092                           ;main.c: 350:     if (addMPow > (3)) {
 11093  0041DC  5189               	movf	calcMotorPow@addMPow& (0+255),w,b
 11094  0041DE  0A80               	xorlw	128
 11095  0041E0  0F7C               	addlw	-132
 11096  0041E2  A0D8               	btfss	status,0,c
 11097  0041E4  EFF6  F020         	goto	u10281
 11098  0041E8  EFF8  F020         	goto	u10280
 11099  0041EC                     u10281:
 11100  0041EC  EFFC  F020         	goto	l9167
 11101  0041F0                     u10280:
 11102  0041F0                     
 11103                           ; BSR set to: 0
 11104                           ;main.c: 351:         addMPow = (3);
 11105  0041F0  0E03               	movlw	3
 11106  0041F2  6F89               	movwf	calcMotorPow@addMPow& (0+255),b
 11107                           
 11108                           ;main.c: 352:     } else if (addMPow < -(3)) {
 11109  0041F4  EF08  F021         	goto	l9171
 11110  0041F8                     l9167:
 11111                           
 11112                           ; BSR set to: 0
 11113  0041F8  5189               	movf	calcMotorPow@addMPow& (0+255),w,b
 11114  0041FA  0A80               	xorlw	128
 11115  0041FC  0F83               	addlw	131
 11116  0041FE  B0D8               	btfsc	status,0,c
 11117  004200  EF04  F021         	goto	u10291
 11118  004204  EF06  F021         	goto	u10290
 11119  004208                     u10291:
 11120  004208  EF08  F021         	goto	l9171
 11121  00420C                     u10290:
 11122  00420C                     
 11123                           ; BSR set to: 0
 11124                           ;main.c: 353:         addMPow = -(3);
 11125  00420C  0EFD               	movlw	253
 11126  00420E  6F89               	movwf	calcMotorPow@addMPow& (0+255),b
 11127  004210                     l9171:
 11128                           
 11129                           ; BSR set to: 0
 11130                           ;main.c: 356:     actMotorPow += addMPow;
 11131  004210  5189               	movf	calcMotorPow@addMPow& (0+255),w,b
 11132  004212  27E9               	addwf	_actMotorPow& (0+255),f,b
 11133  004214  0E00               	movlw	0
 11134  004216  BF89               	btfsc	calcMotorPow@addMPow& (0+255),7,b
 11135  004218  0EFF               	movlw	255
 11136  00421A  23EA               	addwfc	(_actMotorPow+1)& (0+255),f,b
 11137  00421C                     
 11138                           ; BSR set to: 0
 11139                           ;main.c: 358:     if (actMotorPow > (700)) {
 11140  00421C  BFEA               	btfsc	(_actMotorPow+1)& (0+255),7,b
 11141  00421E  EF1A  F021         	goto	u10301
 11142  004222  0EBD               	movlw	189
 11143  004224  5DE9               	subwf	_actMotorPow& (0+255),w,b
 11144  004226  0E02               	movlw	2
 11145  004228  59EA               	subwfb	(_actMotorPow+1)& (0+255),w,b
 11146  00422A  A0D8               	btfss	status,0,c
 11147  00422C  EF1A  F021         	goto	u10301
 11148  004230  EF1C  F021         	goto	u10300
 11149  004234                     u10301:
 11150  004234  EF22  F021         	goto	l9177
 11151  004238                     u10300:
 11152  004238                     
 11153                           ; BSR set to: 0
 11154                           ;main.c: 359:         actMotorPow = (700);
 11155  004238  0E02               	movlw	2
 11156  00423A  6FEA               	movwf	(_actMotorPow+1)& (0+255),b
 11157  00423C  0EBC               	movlw	188
 11158  00423E  6FE9               	movwf	_actMotorPow& (0+255),b
 11159                           
 11160                           ;main.c: 360:     } else if (actMotorPow < (-400)) {
 11161  004240  EF34  F021         	goto	l9181
 11162  004244                     l9177:
 11163                           
 11164                           ; BSR set to: 0
 11165  004244  AFEA               	btfss	(_actMotorPow+1)& (0+255),7,b
 11166  004246  EF2E  F021         	goto	u10311
 11167  00424A  0E70               	movlw	112
 11168  00424C  5DE9               	subwf	_actMotorPow& (0+255),w,b
 11169  00424E  0EFE               	movlw	254
 11170  004250  59EA               	subwfb	(_actMotorPow+1)& (0+255),w,b
 11171  004252  B0D8               	btfsc	status,0,c
 11172  004254  EF2E  F021         	goto	u10311
 11173  004258  EF30  F021         	goto	u10310
 11174  00425C                     u10311:
 11175  00425C  EF34  F021         	goto	l9181
 11176  004260                     u10310:
 11177  004260                     
 11178                           ; BSR set to: 0
 11179                           ;main.c: 361:         actMotorPow = (-400);
 11180  004260  0EFE               	movlw	254
 11181  004262  6FEA               	movwf	(_actMotorPow+1)& (0+255),b
 11182  004264  0E70               	movlw	112
 11183  004266  6FE9               	movwf	_actMotorPow& (0+255),b
 11184  004268                     l9181:
 11185                           
 11186                           ; BSR set to: 0
 11187                           ;main.c: 364:     setMotor(actMotorPow);
 11188  004268  C0E9  F018         	movff	_actMotorPow,setMotor@motorPower
 11189  00426C  C0EA  F019         	movff	_actMotorPow+1,setMotor@motorPower+1
 11190  004270  ECEB  F024         	call	_setMotor	;wreg free
 11191  004274                     
 11192                           ;main.c: 366:     oldSpeed = currentSpeed;
 11193  004274  C0EB  F12C         	movff	_currentSpeed,_oldSpeed
 11194  004278  C0EC  F12D         	movff	_currentSpeed+1,_oldSpeed+1
 11195  00427C  0012               	return		;funcret
 11196  00427E                     __end_of_calcMotorPow:
 11197                           	callstack 0
 11198                           
 11199 ;; *************** function _setMotor *****************
 11200 ;; Defined at:
 11201 ;;		line 369 in file "main.c"
 11202 ;; Parameters:    Size  Location     Type
 11203 ;;  motorPower      2   23[COMRAM] short 
 11204 ;; Auto vars:     Size  Location     Type
 11205 ;;		None
 11206 ;; Return value:  Size  Location     Type
 11207 ;;                  1    wreg      void 
 11208 ;; Registers used:
 11209 ;;		wreg, status,2, status,0, cstack
 11210 ;; Tracked objects:
 11211 ;;		On entry : 0/0
 11212 ;;		On exit  : 0/0
 11213 ;;		Unchanged: 0/0
 11214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11215 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11217 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11218 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11219 ;;Total ram usage:        4 bytes
 11220 ;; Hardware stack levels used: 1
 11221 ;; Hardware stack levels required when called: 9
 11222 ;; This function calls:
 11223 ;;		_PWM7_LoadDutyValue
 11224 ;;		_PWM8_LoadDutyValue
 11225 ;; This function is called by:
 11226 ;;		_loop
 11227 ;;		_calcMotorPow
 11228 ;;		_startAccell
 11229 ;; This function uses a non-reentrant model
 11230 ;;
 11231                           
 11232                           	psect	text40
 11233  0049D6                     __ptext40:
 11234                           	callstack 0
 11235  0049D6                     _setMotor:
 11236                           	callstack 20
 11237  0049D6                     
 11238                           ;main.c: 370:     if (motorPower >= (40)) {
 11239  0049D6  BE19               	btfsc	(setMotor@motorPower+1)^0,7,c
 11240  0049D8  EFF7  F024         	goto	u6331
 11241  0049DC  5019               	movf	(setMotor@motorPower+1)^0,w,c
 11242  0049DE  E109               	bnz	u6330
 11243  0049E0  0E28               	movlw	40
 11244  0049E2  5C18               	subwf	setMotor@motorPower^0,w,c
 11245  0049E4  A0D8               	btfss	status,0,c
 11246  0049E6  EFF7  F024         	goto	u6331
 11247  0049EA  EFF9  F024         	goto	u6330
 11248  0049EE                     u6331:
 11249  0049EE  EF19  F025         	goto	l6559
 11250  0049F2                     u6330:
 11251  0049F2                     
 11252                           ;main.c: 371:         if (motorPower > (700)) {
 11253  0049F2  BE19               	btfsc	(setMotor@motorPower+1)^0,7,c
 11254  0049F4  EF05  F025         	goto	u6341
 11255  0049F8  0EBD               	movlw	189
 11256  0049FA  5C18               	subwf	setMotor@motorPower^0,w,c
 11257  0049FC  0E02               	movlw	2
 11258  0049FE  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
 11259  004A00  A0D8               	btfss	status,0,c
 11260  004A02  EF05  F025         	goto	u6341
 11261  004A06  EF07  F025         	goto	u6340
 11262  004A0A                     u6341:
 11263  004A0A  EF0B  F025         	goto	l6555
 11264  004A0E                     u6340:
 11265  004A0E                     
 11266                           ;main.c: 372:             motorPower = (700);
 11267  004A0E  0E02               	movlw	2
 11268  004A10  6E19               	movwf	(setMotor@motorPower+1)^0,c
 11269  004A12  0EBC               	movlw	188
 11270  004A14  6E18               	movwf	setMotor@motorPower^0,c
 11271  004A16                     l6555:
 11272                           
 11273                           ;main.c: 374:         PWM7_LoadDutyValue((uint16_t) (motorPower));
 11274  004A16  C018  F014         	movff	setMotor@motorPower,PWM7_LoadDutyValue@dutyValue
 11275  004A1A  C019  F015         	movff	setMotor@motorPower+1,PWM7_LoadDutyValue@dutyValue+1
 11276  004A1E  ECA3  F02C         	call	_PWM7_LoadDutyValue	;wreg free
 11277  004A22                     
 11278                           ;main.c: 375:         PWM8_LoadDutyValue(0);
 11279  004A22  0E00               	movlw	0
 11280  004A24  6E15               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
 11281  004A26  0E00               	movlw	0
 11282  004A28  6E14               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
 11283  004A2A  EC89  F02C         	call	_PWM8_LoadDutyValue	;wreg free
 11284                           
 11285                           ;main.c: 376:     } else if (motorPower <= -(40)) {
 11286  004A2E  EF5B  F025         	goto	l1385
 11287  004A32                     l6559:
 11288  004A32  AE19               	btfss	(setMotor@motorPower+1)^0,7,c
 11289  004A34  EF25  F025         	goto	u6351
 11290  004A38  0ED9               	movlw	217
 11291  004A3A  5C18               	subwf	setMotor@motorPower^0,w,c
 11292  004A3C  0EFF               	movlw	255
 11293  004A3E  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
 11294  004A40  B0D8               	btfsc	status,0,c
 11295  004A42  EF25  F025         	goto	u6351
 11296  004A46  EF27  F025         	goto	u6350
 11297  004A4A                     u6351:
 11298  004A4A  EF4F  F025         	goto	l6569
 11299  004A4E                     u6350:
 11300  004A4E                     
 11301                           ;main.c: 377:         if (motorPower < (-400)) {
 11302  004A4E  AE19               	btfss	(setMotor@motorPower+1)^0,7,c
 11303  004A50  EF33  F025         	goto	u6361
 11304  004A54  0E70               	movlw	112
 11305  004A56  5C18               	subwf	setMotor@motorPower^0,w,c
 11306  004A58  0EFE               	movlw	254
 11307  004A5A  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
 11308  004A5C  B0D8               	btfsc	status,0,c
 11309  004A5E  EF33  F025         	goto	u6361
 11310  004A62  EF35  F025         	goto	u6360
 11311  004A66                     u6361:
 11312  004A66  EF39  F025         	goto	l6565
 11313  004A6A                     u6360:
 11314  004A6A                     
 11315                           ;main.c: 378:             motorPower = (-400);
 11316  004A6A  0EFE               	movlw	254
 11317  004A6C  6E19               	movwf	(setMotor@motorPower+1)^0,c
 11318  004A6E  0E70               	movlw	112
 11319  004A70  6E18               	movwf	setMotor@motorPower^0,c
 11320  004A72                     l6565:
 11321                           
 11322                           ;main.c: 380:         PWM7_LoadDutyValue(0);
 11323  004A72  0E00               	movlw	0
 11324  004A74  6E15               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
 11325  004A76  0E00               	movlw	0
 11326  004A78  6E14               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
 11327  004A7A  ECA3  F02C         	call	_PWM7_LoadDutyValue	;wreg free
 11328  004A7E                     
 11329                           ;main.c: 381:         PWM8_LoadDutyValue((uint16_t) (-motorPower));
 11330  004A7E  C018  F01A         	movff	setMotor@motorPower,??_setMotor
 11331  004A82  C019  F01B         	movff	setMotor@motorPower+1,??_setMotor+1
 11332  004A86  1E1A               	comf	??_setMotor^0,f,c
 11333  004A88  1E1B               	comf	(??_setMotor+1)^0,f,c
 11334  004A8A  4A1A               	infsnz	??_setMotor^0,f,c
 11335  004A8C  2A1B               	incf	(??_setMotor+1)^0,f,c
 11336  004A8E  C01A  F014         	movff	??_setMotor,PWM8_LoadDutyValue@dutyValue
 11337  004A92  C01B  F015         	movff	??_setMotor+1,PWM8_LoadDutyValue@dutyValue+1
 11338  004A96  EC89  F02C         	call	_PWM8_LoadDutyValue	;wreg free
 11339                           
 11340                           ;main.c: 382:     } else {
 11341  004A9A  EF5B  F025         	goto	l1385
 11342  004A9E                     l6569:
 11343                           
 11344                           ;main.c: 384:         PWM7_LoadDutyValue(0);
 11345  004A9E  0E00               	movlw	0
 11346  004AA0  6E15               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
 11347  004AA2  0E00               	movlw	0
 11348  004AA4  6E14               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
 11349  004AA6  ECA3  F02C         	call	_PWM7_LoadDutyValue	;wreg free
 11350                           
 11351                           ;main.c: 385:         PWM8_LoadDutyValue(0);
 11352  004AAA  0E00               	movlw	0
 11353  004AAC  6E15               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
 11354  004AAE  0E00               	movlw	0
 11355  004AB0  6E14               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
 11356  004AB2  EC89  F02C         	call	_PWM8_LoadDutyValue	;wreg free
 11357  004AB6                     l1385:
 11358  004AB6  0012               	return		;funcret
 11359  004AB8                     __end_of_setMotor:
 11360                           	callstack 0
 11361                           
 11362 ;; *************** function _PWM8_LoadDutyValue *****************
 11363 ;; Defined at:
 11364 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 11365 ;; Parameters:    Size  Location     Type
 11366 ;;  dutyValue       2   19[COMRAM] unsigned short 
 11367 ;; Auto vars:     Size  Location     Type
 11368 ;;		None
 11369 ;; Return value:  Size  Location     Type
 11370 ;;                  1    wreg      void 
 11371 ;; Registers used:
 11372 ;;		wreg, status,2, status,0
 11373 ;; Tracked objects:
 11374 ;;		On entry : 0/0
 11375 ;;		On exit  : 0/0
 11376 ;;		Unchanged: 0/0
 11377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11378 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11380 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11381 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11382 ;;Total ram usage:        4 bytes
 11383 ;; Hardware stack levels used: 1
 11384 ;; Hardware stack levels required when called: 8
 11385 ;; This function calls:
 11386 ;;		Nothing
 11387 ;; This function is called by:
 11388 ;;		_setMotor
 11389 ;; This function uses a non-reentrant model
 11390 ;;
 11391                           
 11392                           	psect	text41
 11393  005912                     __ptext41:
 11394                           	callstack 0
 11395  005912                     _PWM8_LoadDutyValue:
 11396                           	callstack 20
 11397  005912                     
 11398                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 11399  005912  C014  F016         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
 11400  005916  C015  F017         	movff	PWM8_LoadDutyValue@dutyValue+1,??_PWM8_LoadDutyValue+1
 11401  00591A  90D8               	bcf	status,0,c
 11402  00591C  3217               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
 11403  00591E  3216               	rrcf	??_PWM8_LoadDutyValue^0,f,c
 11404  005920  90D8               	bcf	status,0,c
 11405  005922  3217               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
 11406  005924  3216               	rrcf	??_PWM8_LoadDutyValue^0,f,c
 11407  005926  5016               	movf	??_PWM8_LoadDutyValue^0,w,c
 11408  005928  6E61               	movwf	97,c	;volatile
 11409                           
 11410                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 11411  00592A  C014  F016         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
 11412  00592E  0E03               	movlw	3
 11413  005930  1616               	andwf	??_PWM8_LoadDutyValue^0,f,c
 11414  005932  0E06               	movlw	6
 11415  005934  6E17               	movwf	(??_PWM8_LoadDutyValue+1)^0,c
 11416  005936                     u6115:
 11417  005936  90D8               	bcf	status,0,c
 11418  005938  3616               	rlcf	??_PWM8_LoadDutyValue^0,f,c
 11419  00593A  2E17               	decfsz	(??_PWM8_LoadDutyValue+1)^0,f,c
 11420  00593C  EF9B  F02C         	goto	u6115
 11421  005940  5016               	movf	??_PWM8_LoadDutyValue^0,w,c
 11422  005942  6E60               	movwf	96,c	;volatile
 11423  005944  0012               	return		;funcret
 11424  005946                     __end_of_PWM8_LoadDutyValue:
 11425                           	callstack 0
 11426                           
 11427 ;; *************** function _PWM7_LoadDutyValue *****************
 11428 ;; Defined at:
 11429 ;;		line 74 in file "mcc_generated_files/pwm7.c"
 11430 ;; Parameters:    Size  Location     Type
 11431 ;;  dutyValue       2   19[COMRAM] unsigned short 
 11432 ;; Auto vars:     Size  Location     Type
 11433 ;;		None
 11434 ;; Return value:  Size  Location     Type
 11435 ;;                  1    wreg      void 
 11436 ;; Registers used:
 11437 ;;		wreg, status,2, status,0
 11438 ;; Tracked objects:
 11439 ;;		On entry : 0/0
 11440 ;;		On exit  : 0/0
 11441 ;;		Unchanged: 0/0
 11442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11443 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11445 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11446 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11447 ;;Total ram usage:        4 bytes
 11448 ;; Hardware stack levels used: 1
 11449 ;; Hardware stack levels required when called: 8
 11450 ;; This function calls:
 11451 ;;		Nothing
 11452 ;; This function is called by:
 11453 ;;		_setMotor
 11454 ;; This function uses a non-reentrant model
 11455 ;;
 11456                           
 11457                           	psect	text42
 11458  005946                     __ptext42:
 11459                           	callstack 0
 11460  005946                     _PWM7_LoadDutyValue:
 11461                           	callstack 20
 11462  005946                     
 11463                           ;mcc_generated_files/pwm7.c: 74:  void PWM7_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm7.c: 75:  {;mcc_generated_files/pwm7.c: 77:      PWM7DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 11464  005946  C014  F016         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
 11465  00594A  C015  F017         	movff	PWM7_LoadDutyValue@dutyValue+1,??_PWM7_LoadDutyValue+1
 11466  00594E  90D8               	bcf	status,0,c
 11467  005950  3217               	rrcf	(??_PWM7_LoadDutyValue+1)^0,f,c
 11468  005952  3216               	rrcf	??_PWM7_LoadDutyValue^0,f,c
 11469  005954  90D8               	bcf	status,0,c
 11470  005956  3217               	rrcf	(??_PWM7_LoadDutyValue+1)^0,f,c
 11471  005958  3216               	rrcf	??_PWM7_LoadDutyValue^0,f,c
 11472  00595A  5016               	movf	??_PWM7_LoadDutyValue^0,w,c
 11473  00595C  6E65               	movwf	101,c	;volatile
 11474                           
 11475                           ;mcc_generated_files/pwm7.c: 80:      PWM7DCL = (dutyValue & 0x0003)<<6;
 11476  00595E  C014  F016         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
 11477  005962  0E03               	movlw	3
 11478  005964  1616               	andwf	??_PWM7_LoadDutyValue^0,f,c
 11479  005966  0E06               	movlw	6
 11480  005968  6E17               	movwf	(??_PWM7_LoadDutyValue+1)^0,c
 11481  00596A                     u6105:
 11482  00596A  90D8               	bcf	status,0,c
 11483  00596C  3616               	rlcf	??_PWM7_LoadDutyValue^0,f,c
 11484  00596E  2E17               	decfsz	(??_PWM7_LoadDutyValue+1)^0,f,c
 11485  005970  EFB5  F02C         	goto	u6105
 11486  005974  5016               	movf	??_PWM7_LoadDutyValue^0,w,c
 11487  005976  6E64               	movwf	100,c	;volatile
 11488  005978  0012               	return		;funcret
 11489  00597A                     __end_of_PWM7_LoadDutyValue:
 11490                           	callstack 0
 11491                           
 11492 ;; *************** function _actSpeed *****************
 11493 ;; Defined at:
 11494 ;;		line 67 in file "main.c"
 11495 ;; Parameters:    Size  Location     Type
 11496 ;;		None
 11497 ;; Auto vars:     Size  Location     Type
 11498 ;;  speed           2   35[COMRAM] short 
 11499 ;; Return value:  Size  Location     Type
 11500 ;;                  2   33[COMRAM] short 
 11501 ;; Registers used:
 11502 ;;		wreg, status,2, status,0, cstack
 11503 ;; Tracked objects:
 11504 ;;		On entry : 0/0
 11505 ;;		On exit  : 0/0
 11506 ;;		Unchanged: 0/0
 11507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11508 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11509 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11511 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11512 ;;Total ram usage:        4 bytes
 11513 ;; Hardware stack levels used: 1
 11514 ;; Hardware stack levels required when called: 9
 11515 ;; This function calls:
 11516 ;;		___aldiv
 11517 ;; This function is called by:
 11518 ;;		_calcMotorPow
 11519 ;; This function uses a non-reentrant model
 11520 ;;
 11521                           
 11522                           	psect	text43
 11523  00505C                     __ptext43:
 11524                           	callstack 0
 11525  00505C                     _actSpeed:
 11526                           	callstack 19
 11527  00505C                     
 11528                           ;main.c: 68:     int16_t speed = 0;
 11529  00505C  0E00               	movlw	0
 11530  00505E  6E25               	movwf	(actSpeed@speed+1)^0,c
 11531  005060  0E00               	movlw	0
 11532  005062  6E24               	movwf	actSpeed@speed^0,c
 11533  005064                     
 11534                           ;main.c: 69:     if (smtPeriod) {
 11535  005064  5048               	movf	_smtPeriod^0,w,c	;volatile
 11536  005066  1049               	iorwf	(_smtPeriod+1)^0,w,c	;volatile
 11537  005068  104A               	iorwf	(_smtPeriod+2)^0,w,c	;volatile
 11538  00506A  104B               	iorwf	(_smtPeriod+3)^0,w,c	;volatile
 11539  00506C  B4D8               	btfsc	status,2,c
 11540  00506E  EF3B  F028         	goto	u6411
 11541  005072  EF3D  F028         	goto	u6410
 11542  005076                     u6411:
 11543  005076  EF73  F028         	goto	l6627
 11544  00507A                     u6410:
 11545  00507A                     
 11546                           ;main.c: 70:         if (CLC3CONbits.LC3OUT) {
 11547  00507A  013C               	movlb	60	; () banked
 11548  00507C  AB60               	btfss	96,5,b	;volatile
 11549  00507E  EF43  F028         	goto	u6421
 11550  005082  EF45  F028         	goto	u6420
 11551  005086                     u6421:
 11552  005086  EF5D  F028         	goto	l6625
 11553  00508A                     u6420:
 11554  00508A                     
 11555                           ; BSR set to: 60
 11556                           ;main.c: 71:             speed = (int16_t) ((int32_t) (500000 / (int32_t) smtPeriod));
 11557  00508A  0E20               	movlw	32
 11558  00508C  6E14               	movwf	___aldiv@dividend^0,c
 11559  00508E  0EA1               	movlw	161
 11560  005090  6E15               	movwf	(___aldiv@dividend+1)^0,c
 11561  005092  0E07               	movlw	7
 11562  005094  6E16               	movwf	(___aldiv@dividend+2)^0,c
 11563  005096  0E00               	movlw	0
 11564  005098  6E17               	movwf	(___aldiv@dividend+3)^0,c
 11565  00509A  C048  F018         	movff	_smtPeriod,___aldiv@divisor	;volatile
 11566  00509E  C049  F019         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
 11567  0050A2  C04A  F01A         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
 11568  0050A6  C04B  F01B         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
 11569  0050AA  EC65  F022         	call	___aldiv	;wreg free
 11570  0050AE  C014  F024         	movff	?___aldiv,actSpeed@speed
 11571  0050B2  C015  F025         	movff	?___aldiv+1,actSpeed@speed+1
 11572                           
 11573                           ;main.c: 72:         } else {
 11574  0050B6  EF73  F028         	goto	l6627
 11575  0050BA                     l6625:
 11576                           
 11577                           ; BSR set to: 60
 11578                           ;main.c: 73:             speed = (int16_t) ((int32_t) (-500000 / (int32_t) smtPeriod));
 11579  0050BA  0EE0               	movlw	224
 11580  0050BC  6E14               	movwf	___aldiv@dividend^0,c
 11581  0050BE  0E5E               	movlw	94
 11582  0050C0  6E15               	movwf	(___aldiv@dividend+1)^0,c
 11583  0050C2  0EF8               	movlw	248
 11584  0050C4  6E16               	movwf	(___aldiv@dividend+2)^0,c
 11585  0050C6  0EFF               	movlw	255
 11586  0050C8  6E17               	movwf	(___aldiv@dividend+3)^0,c
 11587  0050CA  C048  F018         	movff	_smtPeriod,___aldiv@divisor	;volatile
 11588  0050CE  C049  F019         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
 11589  0050D2  C04A  F01A         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
 11590  0050D6  C04B  F01B         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
 11591  0050DA  EC65  F022         	call	___aldiv	;wreg free
 11592  0050DE  C014  F024         	movff	?___aldiv,actSpeed@speed
 11593  0050E2  C015  F025         	movff	?___aldiv+1,actSpeed@speed+1
 11594  0050E6                     l6627:
 11595                           
 11596                           ;main.c: 76:     return speed;
 11597  0050E6  C024  F022         	movff	actSpeed@speed,?_actSpeed
 11598  0050EA  C025  F023         	movff	actSpeed@speed+1,?_actSpeed+1
 11599  0050EE  0012               	return		;funcret
 11600  0050F0                     __end_of_actSpeed:
 11601                           	callstack 0
 11602                           
 11603 ;; *************** function ___aldiv *****************
 11604 ;; Defined at:
 11605 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aldiv.c"
 11606 ;; Parameters:    Size  Location     Type
 11607 ;;  dividend        4   19[COMRAM] long 
 11608 ;;  divisor         4   23[COMRAM] long 
 11609 ;; Auto vars:     Size  Location     Type
 11610 ;;  quotient        4   29[COMRAM] long 
 11611 ;;  sign            1   28[COMRAM] unsigned char 
 11612 ;;  counter         1   27[COMRAM] unsigned char 
 11613 ;; Return value:  Size  Location     Type
 11614 ;;                  4   19[COMRAM] long 
 11615 ;; Registers used:
 11616 ;;		wreg, status,2, status,0
 11617 ;; Tracked objects:
 11618 ;;		On entry : 0/0
 11619 ;;		On exit  : 0/0
 11620 ;;		Unchanged: 0/0
 11621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11622 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11623 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11625 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11626 ;;Total ram usage:       14 bytes
 11627 ;; Hardware stack levels used: 1
 11628 ;; Hardware stack levels required when called: 8
 11629 ;; This function calls:
 11630 ;;		Nothing
 11631 ;; This function is called by:
 11632 ;;		_actSpeed
 11633 ;; This function uses a non-reentrant model
 11634 ;;
 11635                           
 11636                           	psect	text44
 11637  0044CA                     __ptext44:
 11638                           	callstack 0
 11639  0044CA                     ___aldiv:
 11640                           	callstack 19
 11641  0044CA  0E00               	movlw	0
 11642  0044CC  6E1D               	movwf	___aldiv@sign^0,c
 11643  0044CE  BE1B               	btfsc	(___aldiv@divisor+3)^0,7,c
 11644  0044D0  EF6E  F022         	goto	u6150
 11645  0044D4  EF6C  F022         	goto	u6151
 11646  0044D8                     u6151:
 11647  0044D8  EF78  F022         	goto	l6425
 11648  0044DC                     u6150:
 11649  0044DC  1E1B               	comf	(___aldiv@divisor+3)^0,f,c
 11650  0044DE  1E1A               	comf	(___aldiv@divisor+2)^0,f,c
 11651  0044E0  1E19               	comf	(___aldiv@divisor+1)^0,f,c
 11652  0044E2  6C18               	negf	___aldiv@divisor^0,c
 11653  0044E4  0E00               	movlw	0
 11654  0044E6  2219               	addwfc	(___aldiv@divisor+1)^0,f,c
 11655  0044E8  221A               	addwfc	(___aldiv@divisor+2)^0,f,c
 11656  0044EA  221B               	addwfc	(___aldiv@divisor+3)^0,f,c
 11657  0044EC  0E01               	movlw	1
 11658  0044EE  6E1D               	movwf	___aldiv@sign^0,c
 11659  0044F0                     l6425:
 11660  0044F0  BE17               	btfsc	(___aldiv@dividend+3)^0,7,c
 11661  0044F2  EF7F  F022         	goto	u6160
 11662  0044F6  EF7D  F022         	goto	u6161
 11663  0044FA                     u6161:
 11664  0044FA  EF89  F022         	goto	l6431
 11665  0044FE                     u6160:
 11666  0044FE  1E17               	comf	(___aldiv@dividend+3)^0,f,c
 11667  004500  1E16               	comf	(___aldiv@dividend+2)^0,f,c
 11668  004502  1E15               	comf	(___aldiv@dividend+1)^0,f,c
 11669  004504  6C14               	negf	___aldiv@dividend^0,c
 11670  004506  0E00               	movlw	0
 11671  004508  2215               	addwfc	(___aldiv@dividend+1)^0,f,c
 11672  00450A  2216               	addwfc	(___aldiv@dividend+2)^0,f,c
 11673  00450C  2217               	addwfc	(___aldiv@dividend+3)^0,f,c
 11674  00450E  0E01               	movlw	1
 11675  004510  1A1D               	xorwf	___aldiv@sign^0,f,c
 11676  004512                     l6431:
 11677  004512  0E00               	movlw	0
 11678  004514  6E1E               	movwf	___aldiv@quotient^0,c
 11679  004516  0E00               	movlw	0
 11680  004518  6E1F               	movwf	(___aldiv@quotient+1)^0,c
 11681  00451A  0E00               	movlw	0
 11682  00451C  6E20               	movwf	(___aldiv@quotient+2)^0,c
 11683  00451E  0E00               	movlw	0
 11684  004520  6E21               	movwf	(___aldiv@quotient+3)^0,c
 11685  004522  5018               	movf	___aldiv@divisor^0,w,c
 11686  004524  1019               	iorwf	(___aldiv@divisor+1)^0,w,c
 11687  004526  101A               	iorwf	(___aldiv@divisor+2)^0,w,c
 11688  004528  101B               	iorwf	(___aldiv@divisor+3)^0,w,c
 11689  00452A  B4D8               	btfsc	status,2,c
 11690  00452C  EF9A  F022         	goto	u6171
 11691  004530  EF9C  F022         	goto	u6170
 11692  004534                     u6171:
 11693  004534  EFD2  F022         	goto	l6453
 11694  004538                     u6170:
 11695  004538  0E01               	movlw	1
 11696  00453A  6E1C               	movwf	___aldiv@counter^0,c
 11697  00453C  EFA6  F022         	goto	l6439
 11698  004540                     l6437:
 11699  004540  90D8               	bcf	status,0,c
 11700  004542  3618               	rlcf	___aldiv@divisor^0,f,c
 11701  004544  3619               	rlcf	(___aldiv@divisor+1)^0,f,c
 11702  004546  361A               	rlcf	(___aldiv@divisor+2)^0,f,c
 11703  004548  361B               	rlcf	(___aldiv@divisor+3)^0,f,c
 11704  00454A  2A1C               	incf	___aldiv@counter^0,f,c
 11705  00454C                     l6439:
 11706  00454C  AE1B               	btfss	(___aldiv@divisor+3)^0,7,c
 11707  00454E  EFAB  F022         	goto	u6181
 11708  004552  EFAD  F022         	goto	u6180
 11709  004556                     u6181:
 11710  004556  EFA0  F022         	goto	l6437
 11711  00455A                     u6180:
 11712  00455A                     l6441:
 11713  00455A  90D8               	bcf	status,0,c
 11714  00455C  361E               	rlcf	___aldiv@quotient^0,f,c
 11715  00455E  361F               	rlcf	(___aldiv@quotient+1)^0,f,c
 11716  004560  3620               	rlcf	(___aldiv@quotient+2)^0,f,c
 11717  004562  3621               	rlcf	(___aldiv@quotient+3)^0,f,c
 11718  004564  5018               	movf	___aldiv@divisor^0,w,c
 11719  004566  5C14               	subwf	___aldiv@dividend^0,w,c
 11720  004568  5019               	movf	(___aldiv@divisor+1)^0,w,c
 11721  00456A  5815               	subwfb	(___aldiv@dividend+1)^0,w,c
 11722  00456C  501A               	movf	(___aldiv@divisor+2)^0,w,c
 11723  00456E  5816               	subwfb	(___aldiv@dividend+2)^0,w,c
 11724  004570  501B               	movf	(___aldiv@divisor+3)^0,w,c
 11725  004572  5817               	subwfb	(___aldiv@dividend+3)^0,w,c
 11726  004574  A0D8               	btfss	status,0,c
 11727  004576  EFBF  F022         	goto	u6191
 11728  00457A  EFC1  F022         	goto	u6190
 11729  00457E                     u6191:
 11730  00457E  EFCA  F022         	goto	l6449
 11731  004582                     u6190:
 11732  004582  5018               	movf	___aldiv@divisor^0,w,c
 11733  004584  5E14               	subwf	___aldiv@dividend^0,f,c
 11734  004586  5019               	movf	(___aldiv@divisor+1)^0,w,c
 11735  004588  5A15               	subwfb	(___aldiv@dividend+1)^0,f,c
 11736  00458A  501A               	movf	(___aldiv@divisor+2)^0,w,c
 11737  00458C  5A16               	subwfb	(___aldiv@dividend+2)^0,f,c
 11738  00458E  501B               	movf	(___aldiv@divisor+3)^0,w,c
 11739  004590  5A17               	subwfb	(___aldiv@dividend+3)^0,f,c
 11740  004592  801E               	bsf	___aldiv@quotient^0,0,c
 11741  004594                     l6449:
 11742  004594  90D8               	bcf	status,0,c
 11743  004596  321B               	rrcf	(___aldiv@divisor+3)^0,f,c
 11744  004598  321A               	rrcf	(___aldiv@divisor+2)^0,f,c
 11745  00459A  3219               	rrcf	(___aldiv@divisor+1)^0,f,c
 11746  00459C  3218               	rrcf	___aldiv@divisor^0,f,c
 11747  00459E  2E1C               	decfsz	___aldiv@counter^0,f,c
 11748  0045A0  EFAD  F022         	goto	l6441
 11749  0045A4                     l6453:
 11750  0045A4  501D               	movf	___aldiv@sign^0,w,c
 11751  0045A6  B4D8               	btfsc	status,2,c
 11752  0045A8  EFD8  F022         	goto	u6201
 11753  0045AC  EFDA  F022         	goto	u6200
 11754  0045B0                     u6201:
 11755  0045B0  EFE2  F022         	goto	l6457
 11756  0045B4                     u6200:
 11757  0045B4  1E21               	comf	(___aldiv@quotient+3)^0,f,c
 11758  0045B6  1E20               	comf	(___aldiv@quotient+2)^0,f,c
 11759  0045B8  1E1F               	comf	(___aldiv@quotient+1)^0,f,c
 11760  0045BA  6C1E               	negf	___aldiv@quotient^0,c
 11761  0045BC  0E00               	movlw	0
 11762  0045BE  221F               	addwfc	(___aldiv@quotient+1)^0,f,c
 11763  0045C0  2220               	addwfc	(___aldiv@quotient+2)^0,f,c
 11764  0045C2  2221               	addwfc	(___aldiv@quotient+3)^0,f,c
 11765  0045C4                     l6457:
 11766  0045C4  C01E  F014         	movff	___aldiv@quotient,?___aldiv
 11767  0045C8  C01F  F015         	movff	___aldiv@quotient+1,?___aldiv+1
 11768  0045CC  C020  F016         	movff	___aldiv@quotient+2,?___aldiv+2
 11769  0045D0  C021  F017         	movff	___aldiv@quotient+3,?___aldiv+3
 11770  0045D4  0012               	return		;funcret
 11771  0045D6                     __end_of___aldiv:
 11772                           	callstack 0
 11773                           
 11774 ;; *************** function ___xxtofl *****************
 11775 ;; Defined at:
 11776 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
 11777 ;; Parameters:    Size  Location     Type
 11778 ;;  sign            1    wreg     unsigned char 
 11779 ;;  val             4   27[COMRAM] long 
 11780 ;; Auto vars:     Size  Location     Type
 11781 ;;  sign            1   35[COMRAM] unsigned char 
 11782 ;;  arg             4   37[COMRAM] unsigned long 
 11783 ;;  exp             1   36[COMRAM] unsigned char 
 11784 ;; Return value:  Size  Location     Type
 11785 ;;                  4   27[COMRAM] unsigned char 
 11786 ;; Registers used:
 11787 ;;		wreg, status,2, status,0
 11788 ;; Tracked objects:
 11789 ;;		On entry : 0/0
 11790 ;;		On exit  : 0/0
 11791 ;;		Unchanged: 0/0
 11792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11793 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11794 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11795 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11796 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11797 ;;Total ram usage:       14 bytes
 11798 ;; Hardware stack levels used: 1
 11799 ;; Hardware stack levels required when called: 8
 11800 ;; This function calls:
 11801 ;;		Nothing
 11802 ;; This function is called by:
 11803 ;;		_loop
 11804 ;;		_getBatteryVoltage
 11805 ;;		_checkBatt
 11806 ;;		_calcSpeed
 11807 ;;		_calcMotorPow
 11808 ;;		_setSteering
 11809 ;;		_checkCurveCount
 11810 ;; This function uses a non-reentrant model
 11811 ;;
 11812                           
 11813                           	psect	text45
 11814  003AFE                     __ptext45:
 11815                           	callstack 0
 11816  003AFE                     ___xxtofl:
 11817                           	callstack 20
 11818                           
 11819                           ;incstack = 0
 11820                           ;___xxtofl@sign stored from wreg
 11821  003AFE  6E24               	movwf	___xxtofl@sign^0,c
 11822  003B00  5024               	movf	___xxtofl@sign^0,w,c
 11823  003B02  B4D8               	btfsc	status,2,c
 11824  003B04  EF86  F01D         	goto	u9741
 11825  003B08  EF88  F01D         	goto	u9740
 11826  003B0C                     u9741:
 11827  003B0C  EFAA  F01D         	goto	l2060
 11828  003B10                     u9740:
 11829  003B10  BE1F               	btfsc	(___xxtofl@val+3)^0,7,c
 11830  003B12  EF8F  F01D         	goto	u9750
 11831  003B16  EF8D  F01D         	goto	u9751
 11832  003B1A                     u9751:
 11833  003B1A  EFAA  F01D         	goto	l2060
 11834  003B1E                     u9750:
 11835  003B1E  C01C  F020         	movff	___xxtofl@val,??___xxtofl
 11836  003B22  C01D  F021         	movff	___xxtofl@val+1,??___xxtofl+1
 11837  003B26  C01E  F022         	movff	___xxtofl@val+2,??___xxtofl+2
 11838  003B2A  C01F  F023         	movff	___xxtofl@val+3,??___xxtofl+3
 11839  003B2E  1E20               	comf	??___xxtofl^0,f,c
 11840  003B30  1E21               	comf	(??___xxtofl+1)^0,f,c
 11841  003B32  1E22               	comf	(??___xxtofl+2)^0,f,c
 11842  003B34  1E23               	comf	(??___xxtofl+3)^0,f,c
 11843  003B36  2A20               	incf	??___xxtofl^0,f,c
 11844  003B38  0E00               	movlw	0
 11845  003B3A  2221               	addwfc	(??___xxtofl+1)^0,f,c
 11846  003B3C  2222               	addwfc	(??___xxtofl+2)^0,f,c
 11847  003B3E  2223               	addwfc	(??___xxtofl+3)^0,f,c
 11848  003B40  C020  F026         	movff	??___xxtofl,___xxtofl@arg
 11849  003B44  C021  F027         	movff	??___xxtofl+1,___xxtofl@arg+1
 11850  003B48  C022  F028         	movff	??___xxtofl+2,___xxtofl@arg+2
 11851  003B4C  C023  F029         	movff	??___xxtofl+3,___xxtofl@arg+3
 11852  003B50  EFB2  F01D         	goto	l8813
 11853  003B54                     l2060:
 11854  003B54  C01C  F026         	movff	___xxtofl@val,___xxtofl@arg
 11855  003B58  C01D  F027         	movff	___xxtofl@val+1,___xxtofl@arg+1
 11856  003B5C  C01E  F028         	movff	___xxtofl@val+2,___xxtofl@arg+2
 11857  003B60  C01F  F029         	movff	___xxtofl@val+3,___xxtofl@arg+3
 11858  003B64                     l8813:
 11859  003B64  501C               	movf	___xxtofl@val^0,w,c
 11860  003B66  101D               	iorwf	(___xxtofl@val+1)^0,w,c
 11861  003B68  101E               	iorwf	(___xxtofl@val+2)^0,w,c
 11862  003B6A  101F               	iorwf	(___xxtofl@val+3)^0,w,c
 11863  003B6C  A4D8               	btfss	status,2,c
 11864  003B6E  EFBB  F01D         	goto	u9761
 11865  003B72  EFBD  F01D         	goto	u9760
 11866  003B76                     u9761:
 11867  003B76  EFC7  F01D         	goto	l8819
 11868  003B7A                     u9760:
 11869  003B7A  0E00               	movlw	0
 11870  003B7C  6E1C               	movwf	?___xxtofl^0,c
 11871  003B7E  0E00               	movlw	0
 11872  003B80  6E1D               	movwf	(?___xxtofl+1)^0,c
 11873  003B82  0E00               	movlw	0
 11874  003B84  6E1E               	movwf	(?___xxtofl+2)^0,c
 11875  003B86  0E00               	movlw	0
 11876  003B88  6E1F               	movwf	(?___xxtofl+3)^0,c
 11877  003B8A  EF58  F01E         	goto	l2063
 11878  003B8E                     l8819:
 11879  003B8E  0E96               	movlw	150
 11880  003B90  6E25               	movwf	___xxtofl@exp^0,c
 11881  003B92  EFD1  F01D         	goto	l8823
 11882  003B96                     l8821:
 11883  003B96  2A25               	incf	___xxtofl@exp^0,f,c
 11884  003B98  90D8               	bcf	status,0,c
 11885  003B9A  3229               	rrcf	(___xxtofl@arg+3)^0,f,c
 11886  003B9C  3228               	rrcf	(___xxtofl@arg+2)^0,f,c
 11887  003B9E  3227               	rrcf	(___xxtofl@arg+1)^0,f,c
 11888  003BA0  3226               	rrcf	___xxtofl@arg^0,f,c
 11889  003BA2                     l8823:
 11890  003BA2  0E00               	movlw	0
 11891  003BA4  1426               	andwf	___xxtofl@arg^0,w,c
 11892  003BA6  6E20               	movwf	??___xxtofl^0,c
 11893  003BA8  0E00               	movlw	0
 11894  003BAA  1427               	andwf	(___xxtofl@arg+1)^0,w,c
 11895  003BAC  6E21               	movwf	(??___xxtofl+1)^0,c
 11896  003BAE  0E00               	movlw	0
 11897  003BB0  1428               	andwf	(___xxtofl@arg+2)^0,w,c
 11898  003BB2  6E22               	movwf	(??___xxtofl+2)^0,c
 11899  003BB4  0EFE               	movlw	254
 11900  003BB6  1429               	andwf	(___xxtofl@arg+3)^0,w,c
 11901  003BB8  6E23               	movwf	(??___xxtofl+3)^0,c
 11902  003BBA  5020               	movf	??___xxtofl^0,w,c
 11903  003BBC  1021               	iorwf	(??___xxtofl+1)^0,w,c
 11904  003BBE  1022               	iorwf	(??___xxtofl+2)^0,w,c
 11905  003BC0  1023               	iorwf	(??___xxtofl+3)^0,w,c
 11906  003BC2  A4D8               	btfss	status,2,c
 11907  003BC4  EFE6  F01D         	goto	u9771
 11908  003BC8  EFE8  F01D         	goto	u9770
 11909  003BCC                     u9771:
 11910  003BCC  EFCB  F01D         	goto	l8821
 11911  003BD0                     u9770:
 11912  003BD0  EFF6  F01D         	goto	l2067
 11913  003BD4                     l8825:
 11914  003BD4  2A25               	incf	___xxtofl@exp^0,f,c
 11915  003BD6  0E01               	movlw	1
 11916  003BD8  2626               	addwf	___xxtofl@arg^0,f,c
 11917  003BDA  0E00               	movlw	0
 11918  003BDC  2227               	addwfc	(___xxtofl@arg+1)^0,f,c
 11919  003BDE  2228               	addwfc	(___xxtofl@arg+2)^0,f,c
 11920  003BE0  2229               	addwfc	(___xxtofl@arg+3)^0,f,c
 11921  003BE2  90D8               	bcf	status,0,c
 11922  003BE4  3229               	rrcf	(___xxtofl@arg+3)^0,f,c
 11923  003BE6  3228               	rrcf	(___xxtofl@arg+2)^0,f,c
 11924  003BE8  3227               	rrcf	(___xxtofl@arg+1)^0,f,c
 11925  003BEA  3226               	rrcf	___xxtofl@arg^0,f,c
 11926  003BEC                     l2067:
 11927  003BEC  0E00               	movlw	0
 11928  003BEE  1426               	andwf	___xxtofl@arg^0,w,c
 11929  003BF0  6E20               	movwf	??___xxtofl^0,c
 11930  003BF2  0E00               	movlw	0
 11931  003BF4  1427               	andwf	(___xxtofl@arg+1)^0,w,c
 11932  003BF6  6E21               	movwf	(??___xxtofl+1)^0,c
 11933  003BF8  0E00               	movlw	0
 11934  003BFA  1428               	andwf	(___xxtofl@arg+2)^0,w,c
 11935  003BFC  6E22               	movwf	(??___xxtofl+2)^0,c
 11936  003BFE  0EFF               	movlw	255
 11937  003C00  1429               	andwf	(___xxtofl@arg+3)^0,w,c
 11938  003C02  6E23               	movwf	(??___xxtofl+3)^0,c
 11939  003C04  5020               	movf	??___xxtofl^0,w,c
 11940  003C06  1021               	iorwf	(??___xxtofl+1)^0,w,c
 11941  003C08  1022               	iorwf	(??___xxtofl+2)^0,w,c
 11942  003C0A  1023               	iorwf	(??___xxtofl+3)^0,w,c
 11943  003C0C  A4D8               	btfss	status,2,c
 11944  003C0E  EF0B  F01E         	goto	u9781
 11945  003C12  EF0D  F01E         	goto	u9780
 11946  003C16                     u9781:
 11947  003C16  EFEA  F01D         	goto	l8825
 11948  003C1A                     u9780:
 11949  003C1A  EF15  F01E         	goto	l8833
 11950  003C1E                     l8831:
 11951  003C1E  0625               	decf	___xxtofl@exp^0,f,c
 11952  003C20  90D8               	bcf	status,0,c
 11953  003C22  3626               	rlcf	___xxtofl@arg^0,f,c
 11954  003C24  3627               	rlcf	(___xxtofl@arg+1)^0,f,c
 11955  003C26  3628               	rlcf	(___xxtofl@arg+2)^0,f,c
 11956  003C28  3629               	rlcf	(___xxtofl@arg+3)^0,f,c
 11957  003C2A                     l8833:
 11958  003C2A  BE28               	btfsc	(___xxtofl@arg+2)^0,7,c
 11959  003C2C  EF1A  F01E         	goto	u9791
 11960  003C30  EF1C  F01E         	goto	u9790
 11961  003C34                     u9791:
 11962  003C34  EF24  F01E         	goto	l2074
 11963  003C38                     u9790:
 11964  003C38  0E02               	movlw	2
 11965  003C3A  6025               	cpfslt	___xxtofl@exp^0,c
 11966  003C3C  EF22  F01E         	goto	u9801
 11967  003C40  EF24  F01E         	goto	u9800
 11968  003C44                     u9801:
 11969  003C44  EF0F  F01E         	goto	l8831
 11970  003C48                     u9800:
 11971  003C48                     l2074:
 11972  003C48  B025               	btfsc	___xxtofl@exp^0,0,c
 11973  003C4A  EF29  F01E         	goto	u9811
 11974  003C4E  EF2B  F01E         	goto	u9810
 11975  003C52                     u9811:
 11976  003C52  EF2C  F01E         	goto	l8839
 11977  003C56                     u9810:
 11978  003C56  9E28               	bcf	(___xxtofl@arg+2)^0,7,c
 11979  003C58                     l8839:
 11980  003C58  90D8               	bcf	status,0,c
 11981  003C5A  3225               	rrcf	___xxtofl@exp^0,f,c
 11982  003C5C  C025  F020         	movff	___xxtofl@exp,??___xxtofl
 11983  003C60  6A21               	clrf	(??___xxtofl+1)^0,c
 11984  003C62  6A22               	clrf	(??___xxtofl+2)^0,c
 11985  003C64  6A23               	clrf	(??___xxtofl+3)^0,c
 11986  003C66  C020  F023         	movff	??___xxtofl,??___xxtofl+3
 11987  003C6A  6A22               	clrf	(??___xxtofl+2)^0,c
 11988  003C6C  6A21               	clrf	(??___xxtofl+1)^0,c
 11989  003C6E  6A20               	clrf	??___xxtofl^0,c
 11990  003C70  5020               	movf	??___xxtofl^0,w,c
 11991  003C72  1226               	iorwf	___xxtofl@arg^0,f,c
 11992  003C74  5021               	movf	(??___xxtofl+1)^0,w,c
 11993  003C76  1227               	iorwf	(___xxtofl@arg+1)^0,f,c
 11994  003C78  5022               	movf	(??___xxtofl+2)^0,w,c
 11995  003C7A  1228               	iorwf	(___xxtofl@arg+2)^0,f,c
 11996  003C7C  5023               	movf	(??___xxtofl+3)^0,w,c
 11997  003C7E  1229               	iorwf	(___xxtofl@arg+3)^0,f,c
 11998  003C80  5024               	movf	___xxtofl@sign^0,w,c
 11999  003C82  B4D8               	btfsc	status,2,c
 12000  003C84  EF46  F01E         	goto	u9821
 12001  003C88  EF48  F01E         	goto	u9820
 12002  003C8C                     u9821:
 12003  003C8C  EF50  F01E         	goto	l8849
 12004  003C90                     u9820:
 12005  003C90  BE1F               	btfsc	(___xxtofl@val+3)^0,7,c
 12006  003C92  EF4F  F01E         	goto	u9830
 12007  003C96  EF4D  F01E         	goto	u9831
 12008  003C9A                     u9831:
 12009  003C9A  EF50  F01E         	goto	l8849
 12010  003C9E                     u9830:
 12011  003C9E  8E29               	bsf	(___xxtofl@arg+3)^0,7,c
 12012  003CA0                     l8849:
 12013  003CA0  C026  F01C         	movff	___xxtofl@arg,?___xxtofl
 12014  003CA4  C027  F01D         	movff	___xxtofl@arg+1,?___xxtofl+1
 12015  003CA8  C028  F01E         	movff	___xxtofl@arg+2,?___xxtofl+2
 12016  003CAC  C029  F01F         	movff	___xxtofl@arg+3,?___xxtofl+3
 12017  003CB0                     l2063:
 12018  003CB0  0012               	return		;funcret
 12019  003CB2                     __end_of___xxtofl:
 12020                           	callstack 0
 12021                           
 12022 ;; *************** function ___fltol *****************
 12023 ;; Defined at:
 12024 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
 12025 ;; Parameters:    Size  Location     Type
 12026 ;;  f1              4   25[BANK0 ] unsigned char 
 12027 ;; Auto vars:     Size  Location     Type
 12028 ;;  exp1            1   34[BANK0 ] unsigned char 
 12029 ;;  sign1           1   33[BANK0 ] unsigned char 
 12030 ;; Return value:  Size  Location     Type
 12031 ;;                  4   25[BANK0 ] long 
 12032 ;; Registers used:
 12033 ;;		wreg, status,2, status,0
 12034 ;; Tracked objects:
 12035 ;;		On entry : 0/0
 12036 ;;		On exit  : 0/0
 12037 ;;		Unchanged: 0/0
 12038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12039 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12040 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12041 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12042 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12043 ;;Total ram usage:       10 bytes
 12044 ;; Hardware stack levels used: 1
 12045 ;; Hardware stack levels required when called: 8
 12046 ;; This function calls:
 12047 ;;		Nothing
 12048 ;; This function is called by:
 12049 ;;		_calcSpeed
 12050 ;;		_calcMotorPow
 12051 ;;		_setSteering
 12052 ;;		_efgtoa
 12053 ;; This function uses a non-reentrant model
 12054 ;;
 12055                           
 12056                           	psect	text46
 12057  0045D6                     __ptext46:
 12058                           	callstack 0
 12059  0045D6                     ___fltol:
 12060                           	callstack 20
 12061  0045D6  0100               	movlb	0	; () banked
 12062  0045D8  357B               	rlcf	(___fltol@f1+2)& (0+255),w,b
 12063  0045DA  357C               	rlcf	(___fltol@f1+3)& (0+255),w,b
 12064  0045DC  6F82               	movwf	___fltol@exp1& (0+255),b
 12065  0045DE  5182               	movf	___fltol@exp1& (0+255),w,b
 12066  0045E0  A4D8               	btfss	status,2,c
 12067  0045E2  EFF5  F022         	goto	u8531
 12068  0045E6  EFF7  F022         	goto	u8530
 12069  0045EA                     u8531:
 12070  0045EA  EF01  F023         	goto	l8183
 12071  0045EE                     u8530:
 12072  0045EE                     l8179:
 12073                           
 12074                           ; BSR set to: 0
 12075  0045EE  0E00               	movlw	0
 12076  0045F0  6F79               	movwf	?___fltol& (0+255),b
 12077  0045F2  0E00               	movlw	0
 12078  0045F4  6F7A               	movwf	(?___fltol+1)& (0+255),b
 12079  0045F6  0E00               	movlw	0
 12080  0045F8  6F7B               	movwf	(?___fltol+2)& (0+255),b
 12081  0045FA  0E00               	movlw	0
 12082  0045FC  6F7C               	movwf	(?___fltol+3)& (0+255),b
 12083  0045FE  EF6E  F023         	goto	l1702
 12084  004602                     l8183:
 12085                           
 12086                           ; BSR set to: 0
 12087  004602  C079  F07D         	movff	___fltol@f1,??___fltol
 12088  004606  C07A  F07E         	movff	___fltol@f1+1,??___fltol+1
 12089  00460A  C07B  F07F         	movff	___fltol@f1+2,??___fltol+2
 12090  00460E  C07C  F080         	movff	___fltol@f1+3,??___fltol+3
 12091  004612  0E20               	movlw	32
 12092  004614  EF11  F023         	goto	u8540
 12093  004618                     u8545:
 12094  004618  90D8               	bcf	status,0,c
 12095  00461A  3380               	rrcf	(??___fltol+3)& (0+255),f,b
 12096  00461C  337F               	rrcf	(??___fltol+2)& (0+255),f,b
 12097  00461E  337E               	rrcf	(??___fltol+1)& (0+255),f,b
 12098  004620  337D               	rrcf	??___fltol& (0+255),f,b
 12099  004622                     u8540:
 12100  004622  2EE8               	decfsz	wreg,f,c
 12101  004624  EF0C  F023         	goto	u8545
 12102  004628  517D               	movf	??___fltol& (0+255),w,b
 12103  00462A  6F81               	movwf	___fltol@sign1& (0+255),b
 12104  00462C                     
 12105                           ; BSR set to: 0
 12106  00462C  8F7B               	bsf	(___fltol@f1+2)& (0+255),7,b
 12107  00462E                     
 12108                           ; BSR set to: 0
 12109  00462E  0EFF               	movlw	255
 12110  004630  1779               	andwf	___fltol@f1& (0+255),f,b
 12111  004632  0EFF               	movlw	255
 12112  004634  177A               	andwf	(___fltol@f1+1)& (0+255),f,b
 12113  004636  0EFF               	movlw	255
 12114  004638  177B               	andwf	(___fltol@f1+2)& (0+255),f,b
 12115  00463A  0E00               	movlw	0
 12116  00463C  177C               	andwf	(___fltol@f1+3)& (0+255),f,b
 12117  00463E                     
 12118                           ; BSR set to: 0
 12119  00463E  0E96               	movlw	150
 12120  004640  5F82               	subwf	___fltol@exp1& (0+255),f,b
 12121  004642                     
 12122                           ; BSR set to: 0
 12123  004642  BF82               	btfsc	___fltol@exp1& (0+255),7,b
 12124  004644  EF28  F023         	goto	u8550
 12125  004648  EF26  F023         	goto	u8551
 12126  00464C                     u8551:
 12127  00464C  EF3E  F023         	goto	l8203
 12128  004650                     u8550:
 12129  004650                     
 12130                           ; BSR set to: 0
 12131  004650  5182               	movf	___fltol@exp1& (0+255),w,b
 12132  004652  0A80               	xorlw	128
 12133  004654  0F97               	addlw	151
 12134  004656  B0D8               	btfsc	status,0,c
 12135  004658  EF30  F023         	goto	u8561
 12136  00465C  EF32  F023         	goto	u8560
 12137  004660                     u8561:
 12138  004660  EF34  F023         	goto	l8199
 12139  004664                     u8560:
 12140  004664  EFF7  F022         	goto	l8179
 12141  004668                     l8199:
 12142                           
 12143                           ; BSR set to: 0
 12144  004668  90D8               	bcf	status,0,c
 12145  00466A  337C               	rrcf	(___fltol@f1+3)& (0+255),f,b
 12146  00466C  337B               	rrcf	(___fltol@f1+2)& (0+255),f,b
 12147  00466E  337A               	rrcf	(___fltol@f1+1)& (0+255),f,b
 12148  004670  3379               	rrcf	___fltol@f1& (0+255),f,b
 12149  004672                     
 12150                           ; BSR set to: 0
 12151  004672  3F82               	incfsz	___fltol@exp1& (0+255),f,b
 12152  004674  EF34  F023         	goto	l8199
 12153  004678  EF56  F023         	goto	l8213
 12154  00467C                     l8203:
 12155                           
 12156                           ; BSR set to: 0
 12157  00467C  0E1F               	movlw	31
 12158  00467E  6582               	cpfsgt	___fltol@exp1& (0+255),b
 12159  004680  EF44  F023         	goto	u8571
 12160  004684  EF46  F023         	goto	u8570
 12161  004688                     u8571:
 12162  004688  EF4E  F023         	goto	l8211
 12163  00468C                     u8570:
 12164  00468C  EFF7  F022         	goto	l8179
 12165  004690                     l8209:
 12166                           
 12167                           ; BSR set to: 0
 12168  004690  90D8               	bcf	status,0,c
 12169  004692  3779               	rlcf	___fltol@f1& (0+255),f,b
 12170  004694  377A               	rlcf	(___fltol@f1+1)& (0+255),f,b
 12171  004696  377B               	rlcf	(___fltol@f1+2)& (0+255),f,b
 12172  004698  377C               	rlcf	(___fltol@f1+3)& (0+255),f,b
 12173  00469A  0782               	decf	___fltol@exp1& (0+255),f,b
 12174  00469C                     l8211:
 12175                           
 12176                           ; BSR set to: 0
 12177  00469C  5182               	movf	___fltol@exp1& (0+255),w,b
 12178  00469E  A4D8               	btfss	status,2,c
 12179  0046A0  EF54  F023         	goto	u8581
 12180  0046A4  EF56  F023         	goto	u8580
 12181  0046A8                     u8581:
 12182  0046A8  EF48  F023         	goto	l8209
 12183  0046AC                     u8580:
 12184  0046AC                     l8213:
 12185                           
 12186                           ; BSR set to: 0
 12187  0046AC  5181               	movf	___fltol@sign1& (0+255),w,b
 12188  0046AE  B4D8               	btfsc	status,2,c
 12189  0046B0  EF5C  F023         	goto	u8591
 12190  0046B4  EF5E  F023         	goto	u8590
 12191  0046B8                     u8591:
 12192  0046B8  EF66  F023         	goto	l8217
 12193  0046BC                     u8590:
 12194  0046BC                     
 12195                           ; BSR set to: 0
 12196  0046BC  1F7C               	comf	(___fltol@f1+3)& (0+255),f,b
 12197  0046BE  1F7B               	comf	(___fltol@f1+2)& (0+255),f,b
 12198  0046C0  1F7A               	comf	(___fltol@f1+1)& (0+255),f,b
 12199  0046C2  6D79               	negf	___fltol@f1& (0+255),b
 12200  0046C4  0E00               	movlw	0
 12201  0046C6  237A               	addwfc	(___fltol@f1+1)& (0+255),f,b
 12202  0046C8  237B               	addwfc	(___fltol@f1+2)& (0+255),f,b
 12203  0046CA  237C               	addwfc	(___fltol@f1+3)& (0+255),f,b
 12204  0046CC                     l8217:
 12205                           
 12206                           ; BSR set to: 0
 12207  0046CC  C079  F079         	movff	___fltol@f1,?___fltol
 12208  0046D0  C07A  F07A         	movff	___fltol@f1+1,?___fltol+1
 12209  0046D4  C07B  F07B         	movff	___fltol@f1+2,?___fltol+2
 12210  0046D8  C07C  F07C         	movff	___fltol@f1+3,?___fltol+3
 12211  0046DC                     l1702:
 12212                           
 12213                           ; BSR set to: 0
 12214  0046DC  0012               	return		;funcret
 12215  0046DE                     __end_of___fltol:
 12216                           	callstack 0
 12217                           
 12218 ;; *************** function ___flmul *****************
 12219 ;; Defined at:
 12220 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
 12221 ;; Parameters:    Size  Location     Type
 12222 ;;  b               4   41[COMRAM] long 
 12223 ;;  a               4   45[COMRAM] long 
 12224 ;; Auto vars:     Size  Location     Type
 12225 ;;  prod            4    7[BANK0 ] struct .
 12226 ;;  grs             4    2[BANK0 ] unsigned long 
 12227 ;;  temp            2   11[BANK0 ] struct .
 12228 ;;  bexp            1    6[BANK0 ] unsigned char 
 12229 ;;  aexp            1    1[BANK0 ] unsigned char 
 12230 ;;  sign            1    0[BANK0 ] unsigned char 
 12231 ;; Return value:  Size  Location     Type
 12232 ;;                  4   41[COMRAM] unsigned char 
 12233 ;; Registers used:
 12234 ;;		wreg, status,2, status,0, prodl, prodh
 12235 ;; Tracked objects:
 12236 ;;		On entry : 0/0
 12237 ;;		On exit  : 0/0
 12238 ;;		Unchanged: 0/0
 12239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12240 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12241 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12242 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12243 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12244 ;;Total ram usage:       25 bytes
 12245 ;; Hardware stack levels used: 1
 12246 ;; Hardware stack levels required when called: 8
 12247 ;; This function calls:
 12248 ;;		Nothing
 12249 ;; This function is called by:
 12250 ;;		_calcSpeed
 12251 ;;		_calcMotorPow
 12252 ;;		_efgtoa
 12253 ;; This function uses a non-reentrant model
 12254 ;;
 12255                           
 12256                           	psect	text47
 12257  00272E                     __ptext47:
 12258                           	callstack 0
 12259  00272E                     ___flmul:
 12260                           	callstack 16
 12261  00272E  502D               	movf	(___flmul@b+3)^0,w,c
 12262  002730  0B80               	andlw	128
 12263  002732  0100               	movlb	0	; () banked
 12264  002734  6F60               	movwf	___flmul@sign& (0+255),b
 12265  002736  502D               	movf	(___flmul@b+3)^0,w,c
 12266  002738  242D               	addwf	(___flmul@b+3)^0,w,c
 12267  00273A  6F66               	movwf	___flmul@bexp& (0+255),b
 12268  00273C                     
 12269                           ; BSR set to: 0
 12270  00273C  AE2C               	btfss	(___flmul@b+2)^0,7,c
 12271  00273E  EFA3  F013         	goto	u8131
 12272  002742  EFA5  F013         	goto	u8130
 12273  002746                     u8131:
 12274  002746  EFA6  F013         	goto	l7921
 12275  00274A                     u8130:
 12276  00274A                     
 12277                           ; BSR set to: 0
 12278  00274A  8166               	bsf	___flmul@bexp& (0+255),0,b
 12279  00274C                     l7921:
 12280                           
 12281                           ; BSR set to: 0
 12282  00274C  5166               	movf	___flmul@bexp& (0+255),w,b
 12283  00274E  B4D8               	btfsc	status,2,c
 12284  002750  EFAC  F013         	goto	u8141
 12285  002754  EFAE  F013         	goto	u8140
 12286  002758                     u8141:
 12287  002758  EFC1  F013         	goto	l7929
 12288  00275C                     u8140:
 12289  00275C                     
 12290                           ; BSR set to: 0
 12291  00275C  2966               	incf	___flmul@bexp& (0+255),w,b
 12292  00275E  A4D8               	btfss	status,2,c
 12293  002760  EFB4  F013         	goto	u8151
 12294  002764  EFB6  F013         	goto	u8150
 12295  002768                     u8151:
 12296  002768  EFBE  F013         	goto	l7927
 12297  00276C                     u8150:
 12298  00276C                     
 12299                           ; BSR set to: 0
 12300  00276C  0E00               	movlw	0
 12301  00276E  6E2A               	movwf	___flmul@b^0,c
 12302  002770  0E00               	movlw	0
 12303  002772  6E2B               	movwf	(___flmul@b+1)^0,c
 12304  002774  0E00               	movlw	0
 12305  002776  6E2C               	movwf	(___flmul@b+2)^0,c
 12306  002778  0E00               	movlw	0
 12307  00277A  6E2D               	movwf	(___flmul@b+3)^0,c
 12308  00277C                     l7927:
 12309                           
 12310                           ; BSR set to: 0
 12311  00277C  8E2C               	bsf	(___flmul@b+2)^0,7,c
 12312  00277E  EFC9  F013         	goto	l7931
 12313  002782                     l7929:
 12314                           
 12315                           ; BSR set to: 0
 12316  002782  0E00               	movlw	0
 12317  002784  6E2A               	movwf	___flmul@b^0,c
 12318  002786  0E00               	movlw	0
 12319  002788  6E2B               	movwf	(___flmul@b+1)^0,c
 12320  00278A  0E00               	movlw	0
 12321  00278C  6E2C               	movwf	(___flmul@b+2)^0,c
 12322  00278E  0E00               	movlw	0
 12323  002790  6E2D               	movwf	(___flmul@b+3)^0,c
 12324  002792                     l7931:
 12325                           
 12326                           ; BSR set to: 0
 12327  002792  5031               	movf	(___flmul@a+3)^0,w,c
 12328  002794  0B80               	andlw	128
 12329  002796  1B60               	xorwf	___flmul@sign& (0+255),f,b
 12330  002798                     
 12331                           ; BSR set to: 0
 12332  002798  5031               	movf	(___flmul@a+3)^0,w,c
 12333  00279A  2431               	addwf	(___flmul@a+3)^0,w,c
 12334  00279C  6F61               	movwf	___flmul@aexp& (0+255),b
 12335  00279E                     
 12336                           ; BSR set to: 0
 12337  00279E  AE30               	btfss	(___flmul@a+2)^0,7,c
 12338  0027A0  EFD4  F013         	goto	u8161
 12339  0027A4  EFD6  F013         	goto	u8160
 12340  0027A8                     u8161:
 12341  0027A8  EFD7  F013         	goto	l7939
 12342  0027AC                     u8160:
 12343  0027AC                     
 12344                           ; BSR set to: 0
 12345  0027AC  8161               	bsf	___flmul@aexp& (0+255),0,b
 12346  0027AE                     l7939:
 12347                           
 12348                           ; BSR set to: 0
 12349  0027AE  5161               	movf	___flmul@aexp& (0+255),w,b
 12350  0027B0  B4D8               	btfsc	status,2,c
 12351  0027B2  EFDD  F013         	goto	u8171
 12352  0027B6  EFDF  F013         	goto	u8170
 12353  0027BA                     u8171:
 12354  0027BA  EFF2  F013         	goto	l7947
 12355  0027BE                     u8170:
 12356  0027BE                     
 12357                           ; BSR set to: 0
 12358  0027BE  2961               	incf	___flmul@aexp& (0+255),w,b
 12359  0027C0  A4D8               	btfss	status,2,c
 12360  0027C2  EFE5  F013         	goto	u8181
 12361  0027C6  EFE7  F013         	goto	u8180
 12362  0027CA                     u8181:
 12363  0027CA  EFEF  F013         	goto	l7945
 12364  0027CE                     u8180:
 12365  0027CE                     
 12366                           ; BSR set to: 0
 12367  0027CE  0E00               	movlw	0
 12368  0027D0  6E2E               	movwf	___flmul@a^0,c
 12369  0027D2  0E00               	movlw	0
 12370  0027D4  6E2F               	movwf	(___flmul@a+1)^0,c
 12371  0027D6  0E00               	movlw	0
 12372  0027D8  6E30               	movwf	(___flmul@a+2)^0,c
 12373  0027DA  0E00               	movlw	0
 12374  0027DC  6E31               	movwf	(___flmul@a+3)^0,c
 12375  0027DE                     l7945:
 12376                           
 12377                           ; BSR set to: 0
 12378  0027DE  8E30               	bsf	(___flmul@a+2)^0,7,c
 12379  0027E0  EFFA  F013         	goto	l2019
 12380  0027E4                     l7947:
 12381                           
 12382                           ; BSR set to: 0
 12383  0027E4  0E00               	movlw	0
 12384  0027E6  6E2E               	movwf	___flmul@a^0,c
 12385  0027E8  0E00               	movlw	0
 12386  0027EA  6E2F               	movwf	(___flmul@a+1)^0,c
 12387  0027EC  0E00               	movlw	0
 12388  0027EE  6E30               	movwf	(___flmul@a+2)^0,c
 12389  0027F0  0E00               	movlw	0
 12390  0027F2  6E31               	movwf	(___flmul@a+3)^0,c
 12391  0027F4                     l2019:
 12392                           
 12393                           ; BSR set to: 0
 12394  0027F4  5161               	movf	___flmul@aexp& (0+255),w,b
 12395  0027F6  B4D8               	btfsc	status,2,c
 12396  0027F8  EF00  F014         	goto	u8191
 12397  0027FC  EF02  F014         	goto	u8190
 12398  002800                     u8191:
 12399  002800  EF0A  F014         	goto	l7951
 12400  002804                     u8190:
 12401  002804                     
 12402                           ; BSR set to: 0
 12403  002804  5166               	movf	___flmul@bexp& (0+255),w,b
 12404  002806  A4D8               	btfss	status,2,c
 12405  002808  EF08  F014         	goto	u8201
 12406  00280C  EF0A  F014         	goto	u8200
 12407  002810                     u8201:
 12408  002810  EF14  F014         	goto	l7955
 12409  002814                     u8200:
 12410  002814                     l7951:
 12411                           
 12412                           ; BSR set to: 0
 12413  002814  0E00               	movlw	0
 12414  002816  6E2A               	movwf	?___flmul^0,c
 12415  002818  0E00               	movlw	0
 12416  00281A  6E2B               	movwf	(?___flmul+1)^0,c
 12417  00281C  0E00               	movlw	0
 12418  00281E  6E2C               	movwf	(?___flmul+2)^0,c
 12419  002820  0E00               	movlw	0
 12420  002822  6E2D               	movwf	(?___flmul+3)^0,c
 12421  002824  EFBE  F015         	goto	l2023
 12422  002828                     l7955:
 12423                           
 12424                           ; BSR set to: 0
 12425  002828  5030               	movf	(___flmul@a+2)^0,w,c
 12426  00282A  022A               	mulwf	___flmul@b^0,c
 12427  00282C  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12428  002832  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12429  002838                     
 12430                           ; BSR set to: 0
 12431  002838  516B               	movf	___flmul@temp& (0+255),w,b
 12432  00283A  6F62               	movwf	___flmul@grs& (0+255),b
 12433  00283C  6B63               	clrf	(___flmul@grs+1)& (0+255),b
 12434  00283E  6B64               	clrf	(___flmul@grs+2)& (0+255),b
 12435  002840  6B65               	clrf	(___flmul@grs+3)& (0+255),b
 12436  002842                     
 12437                           ; BSR set to: 0
 12438  002842  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12439  002844  6F67               	movwf	___flmul@prod& (0+255),b
 12440  002846  6B68               	clrf	(___flmul@prod+1)& (0+255),b
 12441  002848  6B69               	clrf	(___flmul@prod+2)& (0+255),b
 12442  00284A  6B6A               	clrf	(___flmul@prod+3)& (0+255),b
 12443  00284C  502F               	movf	(___flmul@a+1)^0,w,c
 12444  00284E  022B               	mulwf	(___flmul@b+1)^0,c
 12445  002850  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12446  002856  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12447  00285C                     
 12448                           ; BSR set to: 0
 12449  00285C  516B               	movf	___flmul@temp& (0+255),w,b
 12450  00285E  2762               	addwf	___flmul@grs& (0+255),f,b
 12451  002860  0E00               	movlw	0
 12452  002862  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12453  002864  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12454  002866  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12455  002868                     
 12456                           ; BSR set to: 0
 12457  002868  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12458  00286A  2767               	addwf	___flmul@prod& (0+255),f,b
 12459  00286C  0E00               	movlw	0
 12460  00286E  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12461  002870  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12462  002872  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12463  002874  502E               	movf	___flmul@a^0,w,c
 12464  002876  022C               	mulwf	(___flmul@b+2)^0,c
 12465  002878  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12466  00287E  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12467  002884                     
 12468                           ; BSR set to: 0
 12469  002884  516B               	movf	___flmul@temp& (0+255),w,b
 12470  002886  2762               	addwf	___flmul@grs& (0+255),f,b
 12471  002888  0E00               	movlw	0
 12472  00288A  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12473  00288C  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12474  00288E  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12475  002890                     
 12476                           ; BSR set to: 0
 12477  002890  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12478  002892  2767               	addwf	___flmul@prod& (0+255),f,b
 12479  002894  0E00               	movlw	0
 12480  002896  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12481  002898  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12482  00289A  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12483  00289C                     
 12484                           ; BSR set to: 0
 12485  00289C  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
 12486  0028A0  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
 12487  0028A4  C062  F063         	movff	___flmul@grs,___flmul@grs+1
 12488  0028A8  6B62               	clrf	___flmul@grs& (0+255),b
 12489  0028AA                     
 12490                           ; BSR set to: 0
 12491  0028AA  502E               	movf	___flmul@a^0,w,c
 12492  0028AC  022B               	mulwf	(___flmul@b+1)^0,c
 12493  0028AE  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12494  0028B4  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12495  0028BA                     
 12496                           ; BSR set to: 0
 12497  0028BA  516B               	movf	___flmul@temp& (0+255),w,b
 12498  0028BC  2762               	addwf	___flmul@grs& (0+255),f,b
 12499  0028BE  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12500  0028C0  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12501  0028C2  0E00               	movlw	0
 12502  0028C4  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12503  0028C6  0E00               	movlw	0
 12504  0028C8  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12505  0028CA                     
 12506                           ; BSR set to: 0
 12507  0028CA  502F               	movf	(___flmul@a+1)^0,w,c
 12508  0028CC  022A               	mulwf	___flmul@b^0,c
 12509  0028CE  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12510  0028D4  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12511  0028DA                     
 12512                           ; BSR set to: 0
 12513  0028DA  516B               	movf	___flmul@temp& (0+255),w,b
 12514  0028DC  2762               	addwf	___flmul@grs& (0+255),f,b
 12515  0028DE  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12516  0028E0  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12517  0028E2  0E00               	movlw	0
 12518  0028E4  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12519  0028E6  0E00               	movlw	0
 12520  0028E8  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12521  0028EA                     
 12522                           ; BSR set to: 0
 12523  0028EA  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
 12524  0028EE  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
 12525  0028F2  C062  F063         	movff	___flmul@grs,___flmul@grs+1
 12526  0028F6  6B62               	clrf	___flmul@grs& (0+255),b
 12527  0028F8  502E               	movf	___flmul@a^0,w,c
 12528  0028FA  022A               	mulwf	___flmul@b^0,c
 12529  0028FC  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12530  002902  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12531  002908                     
 12532                           ; BSR set to: 0
 12533  002908  516B               	movf	___flmul@temp& (0+255),w,b
 12534  00290A  2762               	addwf	___flmul@grs& (0+255),f,b
 12535  00290C  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12536  00290E  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12537  002910  0E00               	movlw	0
 12538  002912  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12539  002914  0E00               	movlw	0
 12540  002916  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12541  002918                     
 12542                           ; BSR set to: 0
 12543  002918  5030               	movf	(___flmul@a+2)^0,w,c
 12544  00291A  022B               	mulwf	(___flmul@b+1)^0,c
 12545  00291C  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12546  002922  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12547  002928  516B               	movf	___flmul@temp& (0+255),w,b
 12548  00292A  2767               	addwf	___flmul@prod& (0+255),f,b
 12549  00292C  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12550  00292E  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12551  002930  0E00               	movlw	0
 12552  002932  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12553  002934  0E00               	movlw	0
 12554  002936  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12555  002938                     
 12556                           ; BSR set to: 0
 12557  002938  502F               	movf	(___flmul@a+1)^0,w,c
 12558  00293A  022C               	mulwf	(___flmul@b+2)^0,c
 12559  00293C  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12560  002942  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12561  002948                     
 12562                           ; BSR set to: 0
 12563  002948  516B               	movf	___flmul@temp& (0+255),w,b
 12564  00294A  2767               	addwf	___flmul@prod& (0+255),f,b
 12565  00294C  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12566  00294E  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12567  002950  0E00               	movlw	0
 12568  002952  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12569  002954  0E00               	movlw	0
 12570  002956  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12571  002958  5030               	movf	(___flmul@a+2)^0,w,c
 12572  00295A  022C               	mulwf	(___flmul@b+2)^0,c
 12573  00295C  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12574  002962  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12575  002968                     
 12576                           ; BSR set to: 0
 12577  002968  516B               	movf	___flmul@temp& (0+255),w,b
 12578  00296A  6E32               	movwf	??___flmul^0,c
 12579  00296C  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12580  00296E  6E33               	movwf	(??___flmul+1)^0,c
 12581  002970  6A34               	clrf	(??___flmul+2)^0,c
 12582  002972  6A35               	clrf	(??___flmul+3)^0,c
 12583  002974  C034  F035         	movff	??___flmul+2,??___flmul+3
 12584  002978  C033  F034         	movff	??___flmul+1,??___flmul+2
 12585  00297C  C032  F033         	movff	??___flmul,??___flmul+1
 12586  002980  6A32               	clrf	??___flmul^0,c
 12587  002982  5032               	movf	??___flmul^0,w,c
 12588  002984  2767               	addwf	___flmul@prod& (0+255),f,b
 12589  002986  5033               	movf	(??___flmul+1)^0,w,c
 12590  002988  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12591  00298A  5034               	movf	(??___flmul+2)^0,w,c
 12592  00298C  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12593  00298E  5035               	movf	(??___flmul+3)^0,w,c
 12594  002990  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12595  002992                     
 12596                           ; BSR set to: 0
 12597  002992  C062  F032         	movff	___flmul@grs,??___flmul
 12598  002996  C063  F033         	movff	___flmul@grs+1,??___flmul+1
 12599  00299A  C064  F034         	movff	___flmul@grs+2,??___flmul+2
 12600  00299E  C065  F035         	movff	___flmul@grs+3,??___flmul+3
 12601  0029A2  0E19               	movlw	25
 12602  0029A4  EFD9  F014         	goto	u8210
 12603  0029A8                     u8215:
 12604  0029A8  90D8               	bcf	status,0,c
 12605  0029AA  3235               	rrcf	(??___flmul+3)^0,f,c
 12606  0029AC  3234               	rrcf	(??___flmul+2)^0,f,c
 12607  0029AE  3233               	rrcf	(??___flmul+1)^0,f,c
 12608  0029B0  3232               	rrcf	??___flmul^0,f,c
 12609  0029B2                     u8210:
 12610  0029B2  2EE8               	decfsz	wreg,f,c
 12611  0029B4  EFD4  F014         	goto	u8215
 12612  0029B8  5032               	movf	??___flmul^0,w,c
 12613  0029BA  2767               	addwf	___flmul@prod& (0+255),f,b
 12614  0029BC  5033               	movf	(??___flmul+1)^0,w,c
 12615  0029BE  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12616  0029C0  5034               	movf	(??___flmul+2)^0,w,c
 12617  0029C2  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12618  0029C4  5035               	movf	(??___flmul+3)^0,w,c
 12619  0029C6  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12620  0029C8                     
 12621                           ; BSR set to: 0
 12622  0029C8  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
 12623  0029CC  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
 12624  0029D0  C062  F063         	movff	___flmul@grs,___flmul@grs+1
 12625  0029D4  6B62               	clrf	___flmul@grs& (0+255),b
 12626  0029D6                     
 12627                           ; BSR set to: 0
 12628  0029D6  5161               	movf	___flmul@aexp& (0+255),w,b
 12629  0029D8  C066  F032         	movff	___flmul@bexp,??___flmul
 12630  0029DC  6A33               	clrf	(??___flmul+1)^0,c
 12631  0029DE  2632               	addwf	??___flmul^0,f,c
 12632  0029E0  0E00               	movlw	0
 12633  0029E2  2233               	addwfc	(??___flmul+1)^0,f,c
 12634  0029E4  0E82               	movlw	130
 12635  0029E6  2432               	addwf	??___flmul^0,w,c
 12636  0029E8  6F6B               	movwf	___flmul@temp& (0+255),b
 12637  0029EA  0EFF               	movlw	255
 12638  0029EC  2033               	addwfc	(??___flmul+1)^0,w,c
 12639  0029EE  6F6C               	movwf	(___flmul@temp+1)& (0+255),b
 12640  0029F0  EF0F  F015         	goto	l8003
 12641  0029F4                     l7997:
 12642                           
 12643                           ; BSR set to: 0
 12644  0029F4  90D8               	bcf	status,0,c
 12645  0029F6  3767               	rlcf	___flmul@prod& (0+255),f,b
 12646  0029F8  3768               	rlcf	(___flmul@prod+1)& (0+255),f,b
 12647  0029FA  3769               	rlcf	(___flmul@prod+2)& (0+255),f,b
 12648  0029FC  376A               	rlcf	(___flmul@prod+3)& (0+255),f,b
 12649  0029FE                     
 12650                           ; BSR set to: 0
 12651  0029FE  AF65               	btfss	(___flmul@grs+3)& (0+255),7,b
 12652  002A00  EF04  F015         	goto	u8221
 12653  002A04  EF06  F015         	goto	u8220
 12654  002A08                     u8221:
 12655  002A08  EF07  F015         	goto	l2026
 12656  002A0C                     u8220:
 12657  002A0C                     
 12658                           ; BSR set to: 0
 12659  002A0C  8167               	bsf	___flmul@prod& (0+255),0,b
 12660  002A0E                     l2026:
 12661                           
 12662                           ; BSR set to: 0
 12663  002A0E  90D8               	bcf	status,0,c
 12664  002A10  3762               	rlcf	___flmul@grs& (0+255),f,b
 12665  002A12  3763               	rlcf	(___flmul@grs+1)& (0+255),f,b
 12666  002A14  3764               	rlcf	(___flmul@grs+2)& (0+255),f,b
 12667  002A16  3765               	rlcf	(___flmul@grs+3)& (0+255),f,b
 12668  002A18  076B               	decf	___flmul@temp& (0+255),f,b
 12669  002A1A  A0D8               	btfss	status,0,c
 12670  002A1C  076C               	decf	(___flmul@temp+1)& (0+255),f,b
 12671  002A1E                     l8003:
 12672                           
 12673                           ; BSR set to: 0
 12674  002A1E  AF69               	btfss	(___flmul@prod+2)& (0+255),7,b
 12675  002A20  EF14  F015         	goto	u8231
 12676  002A24  EF16  F015         	goto	u8230
 12677  002A28                     u8231:
 12678  002A28  EFFA  F014         	goto	l7997
 12679  002A2C                     u8230:
 12680  002A2C                     
 12681                           ; BSR set to: 0
 12682  002A2C  0E00               	movlw	0
 12683  002A2E  6F61               	movwf	___flmul@aexp& (0+255),b
 12684  002A30                     
 12685                           ; BSR set to: 0
 12686  002A30  AF65               	btfss	(___flmul@grs+3)& (0+255),7,b
 12687  002A32  EF1D  F015         	goto	u8241
 12688  002A36  EF1F  F015         	goto	u8240
 12689  002A3A                     u8241:
 12690  002A3A  EF43  F015         	goto	l2028
 12691  002A3E                     u8240:
 12692  002A3E                     
 12693                           ; BSR set to: 0
 12694  002A3E  0EFF               	movlw	255
 12695  002A40  1562               	andwf	___flmul@grs& (0+255),w,b
 12696  002A42  6E32               	movwf	??___flmul^0,c
 12697  002A44  0EFF               	movlw	255
 12698  002A46  1563               	andwf	(___flmul@grs+1)& (0+255),w,b
 12699  002A48  6E33               	movwf	(??___flmul+1)^0,c
 12700  002A4A  0EFF               	movlw	255
 12701  002A4C  1564               	andwf	(___flmul@grs+2)& (0+255),w,b
 12702  002A4E  6E34               	movwf	(??___flmul+2)^0,c
 12703  002A50  0E7F               	movlw	127
 12704  002A52  1565               	andwf	(___flmul@grs+3)& (0+255),w,b
 12705  002A54  6E35               	movwf	(??___flmul+3)^0,c
 12706  002A56  5032               	movf	??___flmul^0,w,c
 12707  002A58  1033               	iorwf	(??___flmul+1)^0,w,c
 12708  002A5A  1034               	iorwf	(??___flmul+2)^0,w,c
 12709  002A5C  1035               	iorwf	(??___flmul+3)^0,w,c
 12710  002A5E  B4D8               	btfsc	status,2,c
 12711  002A60  EF34  F015         	goto	u8251
 12712  002A64  EF36  F015         	goto	u8250
 12713  002A68                     u8251:
 12714  002A68  EF3A  F015         	goto	l2029
 12715  002A6C                     u8250:
 12716  002A6C                     l8011:
 12717                           
 12718                           ; BSR set to: 0
 12719  002A6C  0E01               	movlw	1
 12720  002A6E  6F61               	movwf	___flmul@aexp& (0+255),b
 12721  002A70  EF43  F015         	goto	l2028
 12722  002A74                     l2029:
 12723                           
 12724                           ; BSR set to: 0
 12725  002A74  A167               	btfss	___flmul@prod& (0+255),0,b
 12726  002A76  EF3F  F015         	goto	u8261
 12727  002A7A  EF41  F015         	goto	u8260
 12728  002A7E                     u8261:
 12729  002A7E  EF43  F015         	goto	l2028
 12730  002A82                     u8260:
 12731  002A82  EF36  F015         	goto	l8011
 12732  002A86                     l2028:
 12733                           
 12734                           ; BSR set to: 0
 12735  002A86  5161               	movf	___flmul@aexp& (0+255),w,b
 12736  002A88  B4D8               	btfsc	status,2,c
 12737  002A8A  EF49  F015         	goto	u8271
 12738  002A8E  EF4B  F015         	goto	u8270
 12739  002A92                     u8271:
 12740  002A92  EF6F  F015         	goto	l8023
 12741  002A96                     u8270:
 12742  002A96                     
 12743                           ; BSR set to: 0
 12744  002A96  0E01               	movlw	1
 12745  002A98  2767               	addwf	___flmul@prod& (0+255),f,b
 12746  002A9A  0E00               	movlw	0
 12747  002A9C  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12748  002A9E  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12749  002AA0  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12750  002AA2                     
 12751                           ; BSR set to: 0
 12752  002AA2  A16A               	btfss	(___flmul@prod+3)& (0+255),0,b
 12753  002AA4  EF56  F015         	goto	u8281
 12754  002AA8  EF58  F015         	goto	u8280
 12755  002AAC                     u8281:
 12756  002AAC  EF6F  F015         	goto	l8023
 12757  002AB0                     u8280:
 12758  002AB0                     
 12759                           ; BSR set to: 0
 12760  002AB0  C067  F032         	movff	___flmul@prod,??___flmul
 12761  002AB4  C068  F033         	movff	___flmul@prod+1,??___flmul+1
 12762  002AB8  C069  F034         	movff	___flmul@prod+2,??___flmul+2
 12763  002ABC  C06A  F035         	movff	___flmul@prod+3,??___flmul+3
 12764  002AC0  3435               	rlcf	(??___flmul+3)^0,w,c
 12765  002AC2  3235               	rrcf	(??___flmul+3)^0,f,c
 12766  002AC4  3234               	rrcf	(??___flmul+2)^0,f,c
 12767  002AC6  3233               	rrcf	(??___flmul+1)^0,f,c
 12768  002AC8  3232               	rrcf	??___flmul^0,f,c
 12769  002ACA  C032  F067         	movff	??___flmul,___flmul@prod
 12770  002ACE  C033  F068         	movff	??___flmul+1,___flmul@prod+1
 12771  002AD2  C034  F069         	movff	??___flmul+2,___flmul@prod+2
 12772  002AD6  C035  F06A         	movff	??___flmul+3,___flmul@prod+3
 12773  002ADA                     
 12774                           ; BSR set to: 0
 12775  002ADA  4B6B               	infsnz	___flmul@temp& (0+255),f,b
 12776  002ADC  2B6C               	incf	(___flmul@temp+1)& (0+255),f,b
 12777  002ADE                     l8023:
 12778                           
 12779                           ; BSR set to: 0
 12780  002ADE  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 12781  002AE0  EF7A  F015         	goto	u8291
 12782  002AE4  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12783  002AE6  E108               	bnz	u8290
 12784  002AE8  296B               	incf	___flmul@temp& (0+255),w,b
 12785  002AEA  A0D8               	btfss	status,0,c
 12786  002AEC  EF7A  F015         	goto	u8291
 12787  002AF0  EF7C  F015         	goto	u8290
 12788  002AF4                     u8291:
 12789  002AF4  EF86  F015         	goto	l8027
 12790  002AF8                     u8290:
 12791  002AF8                     
 12792                           ; BSR set to: 0
 12793  002AF8  0E00               	movlw	0
 12794  002AFA  6F67               	movwf	___flmul@prod& (0+255),b
 12795  002AFC  0E00               	movlw	0
 12796  002AFE  6F68               	movwf	(___flmul@prod+1)& (0+255),b
 12797  002B00  0E80               	movlw	128
 12798  002B02  6F69               	movwf	(___flmul@prod+2)& (0+255),b
 12799  002B04  0E7F               	movlw	127
 12800  002B06  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
 12801  002B08  EFB4  F015         	goto	l8039
 12802  002B0C                     l8027:
 12803                           
 12804                           ; BSR set to: 0
 12805  002B0C  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 12806  002B0E  EF93  F015         	goto	u8300
 12807  002B12  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12808  002B14  E106               	bnz	u8301
 12809  002B16  056B               	decf	___flmul@temp& (0+255),w,b
 12810  002B18  B0D8               	btfsc	status,0,c
 12811  002B1A  EF91  F015         	goto	u8301
 12812  002B1E  EF93  F015         	goto	u8300
 12813  002B22                     u8301:
 12814  002B22  EF9F  F015         	goto	l2036
 12815  002B26                     u8300:
 12816  002B26                     
 12817                           ; BSR set to: 0
 12818  002B26  0E00               	movlw	0
 12819  002B28  6F67               	movwf	___flmul@prod& (0+255),b
 12820  002B2A  0E00               	movlw	0
 12821  002B2C  6F68               	movwf	(___flmul@prod+1)& (0+255),b
 12822  002B2E  0E00               	movlw	0
 12823  002B30  6F69               	movwf	(___flmul@prod+2)& (0+255),b
 12824  002B32  0E00               	movlw	0
 12825  002B34  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
 12826  002B36  0E00               	movlw	0
 12827  002B38  6F60               	movwf	___flmul@sign& (0+255),b
 12828  002B3A  EFB4  F015         	goto	l8039
 12829  002B3E                     l2036:
 12830                           
 12831                           ; BSR set to: 0
 12832  002B3E  C06B  F066         	movff	___flmul@temp,___flmul@bexp
 12833  002B42                     
 12834                           ; BSR set to: 0
 12835  002B42  0EFF               	movlw	255
 12836  002B44  1767               	andwf	___flmul@prod& (0+255),f,b
 12837  002B46  0EFF               	movlw	255
 12838  002B48  1768               	andwf	(___flmul@prod+1)& (0+255),f,b
 12839  002B4A  0E7F               	movlw	127
 12840  002B4C  1769               	andwf	(___flmul@prod+2)& (0+255),f,b
 12841  002B4E  0E00               	movlw	0
 12842  002B50  176A               	andwf	(___flmul@prod+3)& (0+255),f,b
 12843  002B52                     
 12844                           ; BSR set to: 0
 12845  002B52  A166               	btfss	___flmul@bexp& (0+255),0,b
 12846  002B54  EFAE  F015         	goto	u8311
 12847  002B58  EFB0  F015         	goto	u8310
 12848  002B5C                     u8311:
 12849  002B5C  EFB1  F015         	goto	l8037
 12850  002B60                     u8310:
 12851  002B60                     
 12852                           ; BSR set to: 0
 12853  002B60  8F69               	bsf	(___flmul@prod+2)& (0+255),7,b
 12854  002B62                     l8037:
 12855                           
 12856                           ; BSR set to: 0
 12857  002B62  90D8               	bcf	status,0,c
 12858  002B64  3166               	rrcf	___flmul@bexp& (0+255),w,b
 12859  002B66  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
 12860  002B68                     l8039:
 12861                           
 12862                           ; BSR set to: 0
 12863  002B68  5160               	movf	___flmul@sign& (0+255),w,b
 12864  002B6A  136A               	iorwf	(___flmul@prod+3)& (0+255),f,b
 12865  002B6C                     
 12866                           ; BSR set to: 0
 12867  002B6C  C067  F02A         	movff	___flmul@prod,?___flmul
 12868  002B70  C068  F02B         	movff	___flmul@prod+1,?___flmul+1
 12869  002B74  C069  F02C         	movff	___flmul@prod+2,?___flmul+2
 12870  002B78  C06A  F02D         	movff	___flmul@prod+3,?___flmul+3
 12871  002B7C                     l2023:
 12872                           
 12873                           ; BSR set to: 0
 12874  002B7C  0012               	return		;funcret
 12875  002B7E                     __end_of___flmul:
 12876                           	callstack 0
 12877                           
 12878 ;; *************** function ___awdiv *****************
 12879 ;; Defined at:
 12880 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
 12881 ;; Parameters:    Size  Location     Type
 12882 ;;  dividend        2   19[COMRAM] int 
 12883 ;;  divisor         2   21[COMRAM] int 
 12884 ;; Auto vars:     Size  Location     Type
 12885 ;;  quotient        2   25[COMRAM] int 
 12886 ;;  sign            1   24[COMRAM] unsigned char 
 12887 ;;  counter         1   23[COMRAM] unsigned char 
 12888 ;; Return value:  Size  Location     Type
 12889 ;;                  2   19[COMRAM] int 
 12890 ;; Registers used:
 12891 ;;		wreg, status,2, status,0
 12892 ;; Tracked objects:
 12893 ;;		On entry : 0/0
 12894 ;;		On exit  : 0/0
 12895 ;;		Unchanged: 0/0
 12896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12897 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12898 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12900 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12901 ;;Total ram usage:        8 bytes
 12902 ;; Hardware stack levels used: 1
 12903 ;; Hardware stack levels required when called: 8
 12904 ;; This function calls:
 12905 ;;		Nothing
 12906 ;; This function is called by:
 12907 ;;		_calcMotorPow
 12908 ;;		_efgtoa
 12909 ;; This function uses a non-reentrant model
 12910 ;;
 12911                           
 12912                           	psect	text48
 12913  004B82                     __ptext48:
 12914                           	callstack 0
 12915  004B82                     ___awdiv:
 12916                           	callstack 16
 12917  004B82  0E00               	movlw	0
 12918  004B84  6E19               	movwf	___awdiv@sign^0,c
 12919  004B86  BE17               	btfsc	(___awdiv@divisor+1)^0,7,c
 12920  004B88  EFCA  F025         	goto	u8320
 12921  004B8C  EFC8  F025         	goto	u8321
 12922  004B90                     u8321:
 12923  004B90  EFD0  F025         	goto	l8059
 12924  004B94                     u8320:
 12925  004B94  6C16               	negf	___awdiv@divisor^0,c
 12926  004B96  1E17               	comf	(___awdiv@divisor+1)^0,f,c
 12927  004B98  B0D8               	btfsc	status,0,c
 12928  004B9A  2A17               	incf	(___awdiv@divisor+1)^0,f,c
 12929  004B9C  0E01               	movlw	1
 12930  004B9E  6E19               	movwf	___awdiv@sign^0,c
 12931  004BA0                     l8059:
 12932  004BA0  BE15               	btfsc	(___awdiv@dividend+1)^0,7,c
 12933  004BA2  EFD7  F025         	goto	u8330
 12934  004BA6  EFD5  F025         	goto	u8331
 12935  004BAA                     u8331:
 12936  004BAA  EFDD  F025         	goto	l8065
 12937  004BAE                     u8330:
 12938  004BAE  6C14               	negf	___awdiv@dividend^0,c
 12939  004BB0  1E15               	comf	(___awdiv@dividend+1)^0,f,c
 12940  004BB2  B0D8               	btfsc	status,0,c
 12941  004BB4  2A15               	incf	(___awdiv@dividend+1)^0,f,c
 12942  004BB6  0E01               	movlw	1
 12943  004BB8  1A19               	xorwf	___awdiv@sign^0,f,c
 12944  004BBA                     l8065:
 12945  004BBA  0E00               	movlw	0
 12946  004BBC  6E1B               	movwf	(___awdiv@quotient+1)^0,c
 12947  004BBE  0E00               	movlw	0
 12948  004BC0  6E1A               	movwf	___awdiv@quotient^0,c
 12949  004BC2  5016               	movf	___awdiv@divisor^0,w,c
 12950  004BC4  1017               	iorwf	(___awdiv@divisor+1)^0,w,c
 12951  004BC6  B4D8               	btfsc	status,2,c
 12952  004BC8  EFE8  F025         	goto	u8341
 12953  004BCC  EFEA  F025         	goto	u8340
 12954  004BD0                     u8341:
 12955  004BD0  EF12  F026         	goto	l8087
 12956  004BD4                     u8340:
 12957  004BD4  0E01               	movlw	1
 12958  004BD6  6E18               	movwf	___awdiv@counter^0,c
 12959  004BD8  EFF2  F025         	goto	l8073
 12960  004BDC                     l8071:
 12961  004BDC  90D8               	bcf	status,0,c
 12962  004BDE  3616               	rlcf	___awdiv@divisor^0,f,c
 12963  004BE0  3617               	rlcf	(___awdiv@divisor+1)^0,f,c
 12964  004BE2  2A18               	incf	___awdiv@counter^0,f,c
 12965  004BE4                     l8073:
 12966  004BE4  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
 12967  004BE6  EFF7  F025         	goto	u8351
 12968  004BEA  EFF9  F025         	goto	u8350
 12969  004BEE                     u8351:
 12970  004BEE  EFEE  F025         	goto	l8071
 12971  004BF2                     u8350:
 12972  004BF2                     l8075:
 12973  004BF2  90D8               	bcf	status,0,c
 12974  004BF4  361A               	rlcf	___awdiv@quotient^0,f,c
 12975  004BF6  361B               	rlcf	(___awdiv@quotient+1)^0,f,c
 12976  004BF8  5016               	movf	___awdiv@divisor^0,w,c
 12977  004BFA  5C14               	subwf	___awdiv@dividend^0,w,c
 12978  004BFC  5017               	movf	(___awdiv@divisor+1)^0,w,c
 12979  004BFE  5815               	subwfb	(___awdiv@dividend+1)^0,w,c
 12980  004C00  A0D8               	btfss	status,0,c
 12981  004C02  EF05  F026         	goto	u8361
 12982  004C06  EF07  F026         	goto	u8360
 12983  004C0A                     u8361:
 12984  004C0A  EF0C  F026         	goto	l8083
 12985  004C0E                     u8360:
 12986  004C0E  5016               	movf	___awdiv@divisor^0,w,c
 12987  004C10  5E14               	subwf	___awdiv@dividend^0,f,c
 12988  004C12  5017               	movf	(___awdiv@divisor+1)^0,w,c
 12989  004C14  5A15               	subwfb	(___awdiv@dividend+1)^0,f,c
 12990  004C16  801A               	bsf	___awdiv@quotient^0,0,c
 12991  004C18                     l8083:
 12992  004C18  90D8               	bcf	status,0,c
 12993  004C1A  3217               	rrcf	(___awdiv@divisor+1)^0,f,c
 12994  004C1C  3216               	rrcf	___awdiv@divisor^0,f,c
 12995  004C1E  2E18               	decfsz	___awdiv@counter^0,f,c
 12996  004C20  EFF9  F025         	goto	l8075
 12997  004C24                     l8087:
 12998  004C24  5019               	movf	___awdiv@sign^0,w,c
 12999  004C26  B4D8               	btfsc	status,2,c
 13000  004C28  EF18  F026         	goto	u8371
 13001  004C2C  EF1A  F026         	goto	u8370
 13002  004C30                     u8371:
 13003  004C30  EF1E  F026         	goto	l8091
 13004  004C34                     u8370:
 13005  004C34  6C1A               	negf	___awdiv@quotient^0,c
 13006  004C36  1E1B               	comf	(___awdiv@quotient+1)^0,f,c
 13007  004C38  B0D8               	btfsc	status,0,c
 13008  004C3A  2A1B               	incf	(___awdiv@quotient+1)^0,f,c
 13009  004C3C                     l8091:
 13010  004C3C  C01A  F014         	movff	___awdiv@quotient,?___awdiv
 13011  004C40  C01B  F015         	movff	___awdiv@quotient+1,?___awdiv+1
 13012  004C44  0012               	return		;funcret
 13013  004C46                     __end_of___awdiv:
 13014                           	callstack 0
 13015                           
 13016 ;; *************** function _SYSTEM_Initialize *****************
 13017 ;; Defined at:
 13018 ;;		line 50 in file "mcc_generated_files/mcc.c"
 13019 ;; Parameters:    Size  Location     Type
 13020 ;;		None
 13021 ;; Auto vars:     Size  Location     Type
 13022 ;;		None
 13023 ;; Return value:  Size  Location     Type
 13024 ;;                  1    wreg      void 
 13025 ;; Registers used:
 13026 ;;		wreg, status,2, status,0, cstack
 13027 ;; Tracked objects:
 13028 ;;		On entry : 0/0
 13029 ;;		On exit  : 0/0
 13030 ;;		Unchanged: 0/0
 13031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13036 ;;Total ram usage:        0 bytes
 13037 ;; Hardware stack levels used: 1
 13038 ;; Hardware stack levels required when called: 10
 13039 ;; This function calls:
 13040 ;;		_ADCC_Initialize
 13041 ;;		_CCP3_Initialize
 13042 ;;		_CCP4_Initialize
 13043 ;;		_CLC3_Initialize
 13044 ;;		_INTERRUPT_Initialize
 13045 ;;		_OSCILLATOR_Initialize
 13046 ;;		_PIN_MANAGER_Initialize
 13047 ;;		_PMD_Initialize
 13048 ;;		_PWM5_Initialize
 13049 ;;		_PWM6_Initialize
 13050 ;;		_PWM7_Initialize
 13051 ;;		_PWM8_Initialize
 13052 ;;		_SMT1_Initialize
 13053 ;;		_TMR2_Initialize
 13054 ;;		_TMR3_Initialize
 13055 ;;		_TMR4_Initialize
 13056 ;;		_TMR5_Initialize
 13057 ;;		_UART1_Initialize
 13058 ;; This function is called by:
 13059 ;;		_main
 13060 ;; This function uses a non-reentrant model
 13061 ;;
 13062                           
 13063                           	psect	text49
 13064  005488                     __ptext49:
 13065                           	callstack 0
 13066  005488                     _SYSTEM_Initialize:
 13067                           	callstack 20
 13068  005488                     
 13069                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 13070  005488  EC1E  F02A         	call	_INTERRUPT_Initialize	;wreg free
 13071                           
 13072                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 13073  00548C  EC02  F02E         	call	_PMD_Initialize	;wreg free
 13074                           
 13075                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 13076  005490  EC5C  F025         	call	_PIN_MANAGER_Initialize	;wreg free
 13077                           
 13078                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 13079  005494  EC83  F02E         	call	_OSCILLATOR_Initialize	;wreg free
 13080  005498                     
 13081                           ;mcc_generated_files/mcc.c: 56:     CCP3_Initialize();
 13082  005498  EC54  F02D         	call	_CCP3_Initialize	;wreg free
 13083  00549C                     
 13084                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 13085  00549C  ECC6  F029         	call	_ADCC_Initialize	;wreg free
 13086                           
 13087                           ;mcc_generated_files/mcc.c: 58:     TMR4_Initialize();
 13088  0054A0  EC82  F02D         	call	_TMR4_Initialize	;wreg free
 13089  0054A4                     
 13090                           ;mcc_generated_files/mcc.c: 59:     SMT1_Initialize();
 13091  0054A4  EC25  F02D         	call	_SMT1_Initialize	;wreg free
 13092  0054A8                     
 13093                           ;mcc_generated_files/mcc.c: 60:     PWM8_Initialize();
 13094  0054A8  EC53  F02E         	call	_PWM8_Initialize	;wreg free
 13095  0054AC                     
 13096                           ;mcc_generated_files/mcc.c: 61:     TMR2_Initialize();
 13097  0054AC  EC45  F02E         	call	_TMR2_Initialize	;wreg free
 13098  0054B0                     
 13099                           ;mcc_generated_files/mcc.c: 62:     PWM6_Initialize();
 13100  0054B0  EC6B  F02E         	call	_PWM6_Initialize	;wreg free
 13101                           
 13102                           ;mcc_generated_files/mcc.c: 63:     CCP4_Initialize();
 13103  0054B4  EC3D  F02D         	call	_CCP4_Initialize	;wreg free
 13104  0054B8                     
 13105                           ;mcc_generated_files/mcc.c: 64:     CLC3_Initialize();
 13106  0054B8  EC98  F02D         	call	_CLC3_Initialize	;wreg free
 13107  0054BC                     
 13108                           ;mcc_generated_files/mcc.c: 65:     TMR3_Initialize();
 13109  0054BC  ECCB  F02B         	call	_TMR3_Initialize	;wreg free
 13110                           
 13111                           ;mcc_generated_files/mcc.c: 66:     PWM5_Initialize();
 13112  0054C0  EC77  F02E         	call	_PWM5_Initialize	;wreg free
 13113  0054C4                     
 13114                           ;mcc_generated_files/mcc.c: 67:     TMR5_Initialize();
 13115  0054C4  EC69  F02A         	call	_TMR5_Initialize	;wreg free
 13116  0054C8                     
 13117                           ;mcc_generated_files/mcc.c: 68:     PWM7_Initialize();
 13118  0054C8  EC5F  F02E         	call	_PWM7_Initialize	;wreg free
 13119                           
 13120                           ;mcc_generated_files/mcc.c: 69:     UART1_Initialize();
 13121  0054CC  EC91  F027         	call	_UART1_Initialize	;wreg free
 13122  0054D0  0012               	return		;funcret
 13123  0054D2                     __end_of_SYSTEM_Initialize:
 13124                           	callstack 0
 13125                           
 13126 ;; *************** function _UART1_Initialize *****************
 13127 ;; Defined at:
 13128 ;;		line 87 in file "mcc_generated_files/uart1.c"
 13129 ;; Parameters:    Size  Location     Type
 13130 ;;		None
 13131 ;; Auto vars:     Size  Location     Type
 13132 ;;		None
 13133 ;; Return value:  Size  Location     Type
 13134 ;;                  1    wreg      void 
 13135 ;; Registers used:
 13136 ;;		wreg, status,2, status,0, cstack
 13137 ;; Tracked objects:
 13138 ;;		On entry : 0/0
 13139 ;;		On exit  : 0/0
 13140 ;;		Unchanged: 0/0
 13141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13146 ;;Total ram usage:        0 bytes
 13147 ;; Hardware stack levels used: 1
 13148 ;; Hardware stack levels required when called: 9
 13149 ;; This function calls:
 13150 ;;		_UART1_SetErrorHandler
 13151 ;;		_UART1_SetFramingErrorHandler
 13152 ;;		_UART1_SetOverrunErrorHandler
 13153 ;;		_UART1_SetRxInterruptHandler
 13154 ;;		_UART1_SetTxInterruptHandler
 13155 ;; This function is called by:
 13156 ;;		_SYSTEM_Initialize
 13157 ;; This function uses a non-reentrant model
 13158 ;;
 13159                           
 13160                           	psect	text50
 13161  004F22                     __ptext50:
 13162                           	callstack 0
 13163  004F22                     _UART1_Initialize:
 13164                           	callstack 20
 13165  004F22                     
 13166                           ;mcc_generated_files/uart1.c: 90:     PIE3bits.U1RXIE = 0;
 13167  004F22  0139               	movlb	57	; () banked
 13168  004F24  9793               	bcf	147,3,b	;volatile
 13169  004F26                     
 13170                           ; BSR set to: 57
 13171                           ;mcc_generated_files/uart1.c: 91:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 13172  004F26  0E08               	movlw	low _UART1_Receive_ISR
 13173  004F28  6E14               	movwf	UART1_SetRxInterruptHandler@InterruptHandler^0,c
 13174  004F2A  0E4D               	movlw	high _UART1_Receive_ISR
 13175  004F2C  6E15               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)^0,c
 13176  004F2E  ECA0  F02E         	call	_UART1_SetRxInterruptHandler	;wreg free
 13177  004F32                     
 13178                           ;mcc_generated_files/uart1.c: 92:     PIE3bits.U1TXIE = 0;
 13179  004F32  0139               	movlb	57	; () banked
 13180  004F34  9993               	bcf	147,4,b	;volatile
 13181                           
 13182                           ;mcc_generated_files/uart1.c: 93:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 13183  004F36  0EF2               	movlw	low _UART1_Transmit_ISR
 13184  004F38  6E14               	movwf	UART1_SetTxInterruptHandler@InterruptHandler^0,c
 13185  004F3A  0E55               	movlw	high _UART1_Transmit_ISR
 13186  004F3C  6E15               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)^0,c
 13187  004F3E  EC9B  F02E         	call	_UART1_SetTxInterruptHandler	;wreg free
 13188  004F42                     
 13189                           ;mcc_generated_files/uart1.c: 98:     U1P1L = 0x00;
 13190  004F42  0E00               	movlw	0
 13191  004F44  013D               	movlb	61	; () banked
 13192  004F46  6FEC               	movwf	236,b	;volatile
 13193  004F48                     
 13194                           ; BSR set to: 61
 13195                           ;mcc_generated_files/uart1.c: 101:     U1P1H = 0x00;
 13196  004F48  0E00               	movlw	0
 13197  004F4A  6FED               	movwf	237,b	;volatile
 13198  004F4C                     
 13199                           ; BSR set to: 61
 13200                           ;mcc_generated_files/uart1.c: 104:     U1P2L = 0x00;
 13201  004F4C  0E00               	movlw	0
 13202  004F4E  6FEE               	movwf	238,b	;volatile
 13203  004F50                     
 13204                           ; BSR set to: 61
 13205                           ;mcc_generated_files/uart1.c: 107:     U1P2H = 0x00;
 13206  004F50  0E00               	movlw	0
 13207  004F52  6FEF               	movwf	239,b	;volatile
 13208  004F54                     
 13209                           ; BSR set to: 61
 13210                           ;mcc_generated_files/uart1.c: 110:     U1P3L = 0x00;
 13211  004F54  0E00               	movlw	0
 13212  004F56  6FF0               	movwf	240,b	;volatile
 13213  004F58                     
 13214                           ; BSR set to: 61
 13215                           ;mcc_generated_files/uart1.c: 113:     U1P3H = 0x00;
 13216  004F58  0E00               	movlw	0
 13217  004F5A  6FF1               	movwf	241,b	;volatile
 13218  004F5C                     
 13219                           ; BSR set to: 61
 13220                           ;mcc_generated_files/uart1.c: 116:     U1CON0 = 0xB0;
 13221  004F5C  0EB0               	movlw	176
 13222  004F5E  6FF2               	movwf	242,b	;volatile
 13223  004F60                     
 13224                           ; BSR set to: 61
 13225                           ;mcc_generated_files/uart1.c: 119:     U1CON1 = 0x80;
 13226  004F60  0E80               	movlw	128
 13227  004F62  6FF3               	movwf	243,b	;volatile
 13228  004F64                     
 13229                           ; BSR set to: 61
 13230                           ;mcc_generated_files/uart1.c: 122:     U1CON2 = 0x00;
 13231  004F64  0E00               	movlw	0
 13232  004F66  6FF4               	movwf	244,b	;volatile
 13233  004F68                     
 13234                           ; BSR set to: 61
 13235                           ;mcc_generated_files/uart1.c: 125:     U1BRGL = 0x8A;
 13236  004F68  0E8A               	movlw	138
 13237  004F6A  6FF5               	movwf	245,b	;volatile
 13238  004F6C                     
 13239                           ; BSR set to: 61
 13240                           ;mcc_generated_files/uart1.c: 128:     U1BRGH = 0x00;
 13241  004F6C  0E00               	movlw	0
 13242  004F6E  6FF6               	movwf	246,b	;volatile
 13243  004F70                     
 13244                           ; BSR set to: 61
 13245                           ;mcc_generated_files/uart1.c: 131:     U1FIFO = 0x00;
 13246  004F70  0E00               	movlw	0
 13247  004F72  6FF7               	movwf	247,b	;volatile
 13248  004F74                     
 13249                           ; BSR set to: 61
 13250                           ;mcc_generated_files/uart1.c: 134:     U1UIR = 0x00;
 13251  004F74  0E00               	movlw	0
 13252  004F76  6FF8               	movwf	248,b	;volatile
 13253  004F78                     
 13254                           ; BSR set to: 61
 13255                           ;mcc_generated_files/uart1.c: 137:     U1ERRIR = 0x00;
 13256  004F78  0E00               	movlw	0
 13257  004F7A  6FF9               	movwf	249,b	;volatile
 13258  004F7C                     
 13259                           ; BSR set to: 61
 13260                           ;mcc_generated_files/uart1.c: 140:     U1ERRIE = 0x00;
 13261  004F7C  0E00               	movlw	0
 13262  004F7E  6FFA               	movwf	250,b	;volatile
 13263  004F80                     
 13264                           ; BSR set to: 61
 13265                           ;mcc_generated_files/uart1.c: 143:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
 13266  004F80  0EA2               	movlw	low _UART1_DefaultFramingErrorHandler
 13267  004F82  6E14               	movwf	UART1_SetFramingErrorHandler@interruptHandler^0,c
 13268  004F84  0E5D               	movlw	high _UART1_DefaultFramingErrorHandler
 13269  004F86  6E15               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^0,c
 13270  004F88  ECAA  F02E         	call	_UART1_SetFramingErrorHandler	;wreg free
 13271  004F8C                     
 13272                           ;mcc_generated_files/uart1.c: 144:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
 13273  004F8C  0EA0               	movlw	low _UART1_DefaultOverrunErrorHandler
 13274  004F8E  6E14               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^0,c
 13275  004F90  0E5D               	movlw	high _UART1_DefaultOverrunErrorHandler
 13276  004F92  6E15               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
 13277  004F94  ECA5  F02E         	call	_UART1_SetOverrunErrorHandler	;wreg free
 13278  004F98                     
 13279                           ;mcc_generated_files/uart1.c: 145:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
 13280  004F98  0E9A               	movlw	low _UART1_DefaultErrorHandler
 13281  004F9A  6E14               	movwf	UART1_SetErrorHandler@interruptHandler^0,c
 13282  004F9C  0E5D               	movlw	high _UART1_DefaultErrorHandler
 13283  004F9E  6E15               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^0,c
 13284  004FA0  ECAF  F02E         	call	_UART1_SetErrorHandler	;wreg free
 13285                           
 13286                           ;mcc_generated_files/uart1.c: 147:     uart1RxLastError.status = 0;
 13287  004FA4  0E00               	movlw	0
 13288  004FA6  6E42               	movwf	_uart1RxLastError^0,c	;volatile
 13289                           
 13290                           ;mcc_generated_files/uart1.c: 150:     uart1TxHead = 0;
 13291  004FA8  0E00               	movlw	0
 13292  004FAA  6E47               	movwf	_uart1TxHead^0,c	;volatile
 13293                           
 13294                           ;mcc_generated_files/uart1.c: 151:     uart1TxTail = 0;
 13295  004FAC  0E00               	movlw	0
 13296  004FAE  6E46               	movwf	_uart1TxTail^0,c	;volatile
 13297                           
 13298                           ;mcc_generated_files/uart1.c: 152:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 13299  004FB0  0E08               	movlw	8
 13300  004FB2  6E4C               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 13301                           
 13302                           ;mcc_generated_files/uart1.c: 153:     uart1RxHead = 0;
 13303  004FB4  0E00               	movlw	0
 13304  004FB6  6E45               	movwf	_uart1RxHead^0,c	;volatile
 13305                           
 13306                           ;mcc_generated_files/uart1.c: 154:     uart1RxTail = 0;
 13307  004FB8  0E00               	movlw	0
 13308  004FBA  6E44               	movwf	_uart1RxTail^0,c	;volatile
 13309                           
 13310                           ;mcc_generated_files/uart1.c: 155:     uart1RxCount = 0;
 13311  004FBC  0E00               	movlw	0
 13312  004FBE  6E43               	movwf	_uart1RxCount^0,c	;volatile
 13313  004FC0                     
 13314                           ;mcc_generated_files/uart1.c: 158:     PIE3bits.U1RXIE = 1;
 13315  004FC0  0139               	movlb	57	; () banked
 13316  004FC2  8793               	bsf	147,3,b	;volatile
 13317  004FC4                     
 13318                           ; BSR set to: 57
 13319  004FC4  0012               	return		;funcret
 13320  004FC6                     __end_of_UART1_Initialize:
 13321                           	callstack 0
 13322                           
 13323 ;; *************** function _UART1_SetTxInterruptHandler *****************
 13324 ;; Defined at:
 13325 ;;		line 333 in file "mcc_generated_files/uart1.c"
 13326 ;; Parameters:    Size  Location     Type
 13327 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
 13328 ;;		 -> UART1_Transmit_ISR(1), 
 13329 ;; Auto vars:     Size  Location     Type
 13330 ;;		None
 13331 ;; Return value:  Size  Location     Type
 13332 ;;                  1    wreg      void 
 13333 ;; Registers used:
 13334 ;;		wreg, status,2, status,0
 13335 ;; Tracked objects:
 13336 ;;		On entry : 0/0
 13337 ;;		On exit  : 0/0
 13338 ;;		Unchanged: 0/0
 13339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13340 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13343 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13344 ;;Total ram usage:        2 bytes
 13345 ;; Hardware stack levels used: 1
 13346 ;; Hardware stack levels required when called: 8
 13347 ;; This function calls:
 13348 ;;		Nothing
 13349 ;; This function is called by:
 13350 ;;		_UART1_Initialize
 13351 ;; This function uses a non-reentrant model
 13352 ;;
 13353                           
 13354                           	psect	text51
 13355  005D36                     __ptext51:
 13356                           	callstack 0
 13357  005D36                     _UART1_SetTxInterruptHandler:
 13358                           	callstack 20
 13359  005D36                     
 13360                           ;mcc_generated_files/uart1.c: 334:     UART1_TxInterruptHandler = InterruptHandler;
 13361  005D36  C014  F19C         	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
 13362  005D3A  C015  F19D         	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
 13363  005D3E  0012               	return		;funcret
 13364  005D40                     __end_of_UART1_SetTxInterruptHandler:
 13365                           	callstack 0
 13366                           
 13367 ;; *************** function _UART1_SetRxInterruptHandler *****************
 13368 ;; Defined at:
 13369 ;;		line 329 in file "mcc_generated_files/uart1.c"
 13370 ;; Parameters:    Size  Location     Type
 13371 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
 13372 ;;		 -> UART1_Receive_ISR(1), 
 13373 ;; Auto vars:     Size  Location     Type
 13374 ;;		None
 13375 ;; Return value:  Size  Location     Type
 13376 ;;                  1    wreg      void 
 13377 ;; Registers used:
 13378 ;;		wreg, status,2, status,0
 13379 ;; Tracked objects:
 13380 ;;		On entry : 0/0
 13381 ;;		On exit  : 0/0
 13382 ;;		Unchanged: 0/0
 13383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13384 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13387 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13388 ;;Total ram usage:        2 bytes
 13389 ;; Hardware stack levels used: 1
 13390 ;; Hardware stack levels required when called: 8
 13391 ;; This function calls:
 13392 ;;		Nothing
 13393 ;; This function is called by:
 13394 ;;		_UART1_Initialize
 13395 ;; This function uses a non-reentrant model
 13396 ;;
 13397                           
 13398                           	psect	text52
 13399  005D40                     __ptext52:
 13400                           	callstack 0
 13401  005D40                     _UART1_SetRxInterruptHandler:
 13402                           	callstack 20
 13403  005D40                     
 13404                           ;mcc_generated_files/uart1.c: 330:     UART1_RxInterruptHandler = InterruptHandler;
 13405  005D40  C014  F19E         	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
 13406  005D44  C015  F19F         	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
 13407  005D48  0012               	return		;funcret
 13408  005D4A                     __end_of_UART1_SetRxInterruptHandler:
 13409                           	callstack 0
 13410                           
 13411 ;; *************** function _UART1_SetOverrunErrorHandler *****************
 13412 ;; Defined at:
 13413 ;;		line 319 in file "mcc_generated_files/uart1.c"
 13414 ;; Parameters:    Size  Location     Type
 13415 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
 13416 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
 13417 ;; Auto vars:     Size  Location     Type
 13418 ;;		None
 13419 ;; Return value:  Size  Location     Type
 13420 ;;                  1    wreg      void 
 13421 ;; Registers used:
 13422 ;;		wreg, status,2, status,0
 13423 ;; Tracked objects:
 13424 ;;		On entry : 0/0
 13425 ;;		On exit  : 0/0
 13426 ;;		Unchanged: 0/0
 13427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13428 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13431 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13432 ;;Total ram usage:        2 bytes
 13433 ;; Hardware stack levels used: 1
 13434 ;; Hardware stack levels required when called: 8
 13435 ;; This function calls:
 13436 ;;		Nothing
 13437 ;; This function is called by:
 13438 ;;		_UART1_Initialize
 13439 ;; This function uses a non-reentrant model
 13440 ;;
 13441                           
 13442                           	psect	text53
 13443  005D4A                     __ptext53:
 13444                           	callstack 0
 13445  005D4A                     _UART1_SetOverrunErrorHandler:
 13446                           	callstack 20
 13447  005D4A                     
 13448                           ;mcc_generated_files/uart1.c: 320:     UART1_OverrunErrorHandler = interruptHandler;
 13449  005D4A  C014  F198         	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
 13450  005D4E  C015  F199         	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
 13451  005D52  0012               	return		;funcret
 13452  005D54                     __end_of_UART1_SetOverrunErrorHandler:
 13453                           	callstack 0
 13454                           
 13455 ;; *************** function _UART1_SetFramingErrorHandler *****************
 13456 ;; Defined at:
 13457 ;;		line 315 in file "mcc_generated_files/uart1.c"
 13458 ;; Parameters:    Size  Location     Type
 13459 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
 13460 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
 13461 ;; Auto vars:     Size  Location     Type
 13462 ;;		None
 13463 ;; Return value:  Size  Location     Type
 13464 ;;                  1    wreg      void 
 13465 ;; Registers used:
 13466 ;;		wreg, status,2, status,0
 13467 ;; Tracked objects:
 13468 ;;		On entry : 0/0
 13469 ;;		On exit  : 0/0
 13470 ;;		Unchanged: 0/0
 13471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13472 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13475 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13476 ;;Total ram usage:        2 bytes
 13477 ;; Hardware stack levels used: 1
 13478 ;; Hardware stack levels required when called: 8
 13479 ;; This function calls:
 13480 ;;		Nothing
 13481 ;; This function is called by:
 13482 ;;		_UART1_Initialize
 13483 ;; This function uses a non-reentrant model
 13484 ;;
 13485                           
 13486                           	psect	text54
 13487  005D54                     __ptext54:
 13488                           	callstack 0
 13489  005D54                     _UART1_SetFramingErrorHandler:
 13490                           	callstack 20
 13491  005D54                     
 13492                           ;mcc_generated_files/uart1.c: 316:     UART1_FramingErrorHandler = interruptHandler;
 13493  005D54  C014  F19A         	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
 13494  005D58  C015  F19B         	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
 13495  005D5C  0012               	return		;funcret
 13496  005D5E                     __end_of_UART1_SetFramingErrorHandler:
 13497                           	callstack 0
 13498                           
 13499 ;; *************** function _UART1_SetErrorHandler *****************
 13500 ;; Defined at:
 13501 ;;		line 323 in file "mcc_generated_files/uart1.c"
 13502 ;; Parameters:    Size  Location     Type
 13503 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
 13504 ;;		 -> UART1_DefaultErrorHandler(1), 
 13505 ;; Auto vars:     Size  Location     Type
 13506 ;;		None
 13507 ;; Return value:  Size  Location     Type
 13508 ;;                  1    wreg      void 
 13509 ;; Registers used:
 13510 ;;		wreg, status,2, status,0
 13511 ;; Tracked objects:
 13512 ;;		On entry : 0/0
 13513 ;;		On exit  : 0/0
 13514 ;;		Unchanged: 0/0
 13515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13516 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13519 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13520 ;;Total ram usage:        2 bytes
 13521 ;; Hardware stack levels used: 1
 13522 ;; Hardware stack levels required when called: 8
 13523 ;; This function calls:
 13524 ;;		Nothing
 13525 ;; This function is called by:
 13526 ;;		_UART1_Initialize
 13527 ;; This function uses a non-reentrant model
 13528 ;;
 13529                           
 13530                           	psect	text55
 13531  005D5E                     __ptext55:
 13532                           	callstack 0
 13533  005D5E                     _UART1_SetErrorHandler:
 13534                           	callstack 20
 13535  005D5E                     
 13536                           ;mcc_generated_files/uart1.c: 324:     UART1_ErrorHandler = interruptHandler;
 13537  005D5E  C014  F196         	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
 13538  005D62  C015  F197         	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
 13539  005D66  0012               	return		;funcret
 13540  005D68                     __end_of_UART1_SetErrorHandler:
 13541                           	callstack 0
 13542                           
 13543 ;; *************** function _TMR5_Initialize *****************
 13544 ;; Defined at:
 13545 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 13546 ;; Parameters:    Size  Location     Type
 13547 ;;		None
 13548 ;; Auto vars:     Size  Location     Type
 13549 ;;		None
 13550 ;; Return value:  Size  Location     Type
 13551 ;;                  1    wreg      void 
 13552 ;; Registers used:
 13553 ;;		wreg, status,2, status,0, cstack
 13554 ;; Tracked objects:
 13555 ;;		On entry : 0/0
 13556 ;;		On exit  : 0/0
 13557 ;;		Unchanged: 0/0
 13558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13561 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13562 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13563 ;;Total ram usage:        2 bytes
 13564 ;; Hardware stack levels used: 1
 13565 ;; Hardware stack levels required when called: 9
 13566 ;; This function calls:
 13567 ;;		_TMR5_SetGateInterruptHandler
 13568 ;; This function is called by:
 13569 ;;		_SYSTEM_Initialize
 13570 ;; This function uses a non-reentrant model
 13571 ;;
 13572                           
 13573                           	psect	text56
 13574  0054D2                     __ptext56:
 13575                           	callstack 0
 13576  0054D2                     _TMR5_Initialize:
 13577                           	callstack 20
 13578  0054D2                     
 13579                           ;mcc_generated_files/tmr5.c: 72:     T5GCON = 0xC0;
 13580  0054D2  0EC0               	movlw	192
 13581  0054D4  6E9B               	movwf	155,c	;volatile
 13582                           
 13583                           ;mcc_generated_files/tmr5.c: 75:     T5GATE = 0x00;
 13584  0054D6  0E00               	movlw	0
 13585  0054D8  6E9C               	movwf	156,c	;volatile
 13586                           
 13587                           ;mcc_generated_files/tmr5.c: 78:     T5CLK = 0x05;
 13588  0054DA  0E05               	movlw	5
 13589  0054DC  6E9D               	movwf	157,c	;volatile
 13590                           
 13591                           ;mcc_generated_files/tmr5.c: 81:     TMR5H = 0x00;
 13592  0054DE  0E00               	movlw	0
 13593  0054E0  6E99               	movwf	153,c	;volatile
 13594                           
 13595                           ;mcc_generated_files/tmr5.c: 84:     TMR5L = 0x00;
 13596  0054E2  0E00               	movlw	0
 13597  0054E4  6E98               	movwf	152,c	;volatile
 13598  0054E6                     
 13599                           ;mcc_generated_files/tmr5.c: 87:     PIR8bits.TMR5IF = 0;
 13600  0054E6  0139               	movlb	57	; () banked
 13601  0054E8  9DA8               	bcf	168,6,b	;volatile
 13602  0054EA                     
 13603                           ; BSR set to: 57
 13604                           ;mcc_generated_files/tmr5.c: 90:     timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 13605  0054EA  5098               	movf	152,w,c	;volatile
 13606  0054EC  006F FE64  F016    	movff	16281,??_TMR5_Initialize	;volatile
 13607  0054F2  6A17               	clrf	(??_TMR5_Initialize+1)^0,c
 13608  0054F4  C016  F017         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 13609  0054F8  6A16               	clrf	??_TMR5_Initialize^0,c
 13610  0054FA  1016               	iorwf	??_TMR5_Initialize^0,w,c
 13611  0054FC  0101               	movlb	1	; () banked
 13612  0054FE  6F90               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 13613  005500  5017               	movf	(??_TMR5_Initialize+1)^0,w,c
 13614  005502  6F91               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 13615  005504                     
 13616                           ; BSR set to: 1
 13617                           ;mcc_generated_files/tmr5.c: 93:     PIR8bits.TMR5GIF = 0;
 13618  005504  0139               	movlb	57	; () banked
 13619  005506  9FA8               	bcf	168,7,b	;volatile
 13620  005508                     
 13621                           ; BSR set to: 57
 13622                           ;mcc_generated_files/tmr5.c: 96:     PIE8bits.TMR5GIE = 1;
 13623  005508  8F98               	bsf	152,7,b	;volatile
 13624  00550A                     
 13625                           ; BSR set to: 57
 13626                           ;mcc_generated_files/tmr5.c: 99:     TMR5_SetGateInterruptHandler(TMR5_DefaultGateInterr
      +                          uptHandler);
 13627  00550A  0E6C               	movlw	low _TMR5_DefaultGateInterruptHandler
 13628  00550C  6E14               	movwf	TMR5_SetGateInterruptHandler@InterruptHandler^0,c
 13629  00550E  0E5C               	movlw	high _TMR5_DefaultGateInterruptHandler
 13630  005510  6E15               	movwf	(TMR5_SetGateInterruptHandler@InterruptHandler+1)^0,c
 13631  005512  ECB4  F02E         	call	_TMR5_SetGateInterruptHandler	;wreg free
 13632  005516                     
 13633                           ;mcc_generated_files/tmr5.c: 102:     T5CON = 0x03;
 13634  005516  0E03               	movlw	3
 13635  005518  6E9A               	movwf	154,c	;volatile
 13636  00551A  0012               	return		;funcret
 13637  00551C                     __end_of_TMR5_Initialize:
 13638                           	callstack 0
 13639                           
 13640 ;; *************** function _TMR5_SetGateInterruptHandler *****************
 13641 ;; Defined at:
 13642 ;;		line 186 in file "mcc_generated_files/tmr5.c"
 13643 ;; Parameters:    Size  Location     Type
 13644 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
 13645 ;;		 -> TMR5_DefaultGateInterruptHandler(1), 
 13646 ;; Auto vars:     Size  Location     Type
 13647 ;;		None
 13648 ;; Return value:  Size  Location     Type
 13649 ;;                  1    wreg      void 
 13650 ;; Registers used:
 13651 ;;		wreg, status,2, status,0
 13652 ;; Tracked objects:
 13653 ;;		On entry : 0/0
 13654 ;;		On exit  : 0/0
 13655 ;;		Unchanged: 0/0
 13656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13657 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13660 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13661 ;;Total ram usage:        2 bytes
 13662 ;; Hardware stack levels used: 1
 13663 ;; Hardware stack levels required when called: 8
 13664 ;; This function calls:
 13665 ;;		Nothing
 13666 ;; This function is called by:
 13667 ;;		_TMR5_Initialize
 13668 ;; This function uses a non-reentrant model
 13669 ;;
 13670                           
 13671                           	psect	text57
 13672  005D68                     __ptext57:
 13673                           	callstack 0
 13674  005D68                     _TMR5_SetGateInterruptHandler:
 13675                           	callstack 20
 13676  005D68                     
 13677                           ;mcc_generated_files/tmr5.c: 187:     TMR5_GateInterruptHandler = InterruptHandler;
 13678  005D68  C014  F18E         	movff	TMR5_SetGateInterruptHandler@InterruptHandler,_TMR5_GateInterruptHandler
 13679  005D6C  C015  F18F         	movff	TMR5_SetGateInterruptHandler@InterruptHandler+1,_TMR5_GateInterruptHandler+1
 13680  005D70  0012               	return		;funcret
 13681  005D72                     __end_of_TMR5_SetGateInterruptHandler:
 13682                           	callstack 0
 13683                           
 13684 ;; *************** function _TMR4_Initialize *****************
 13685 ;; Defined at:
 13686 ;;		line 65 in file "mcc_generated_files/tmr4.c"
 13687 ;; Parameters:    Size  Location     Type
 13688 ;;		None
 13689 ;; Auto vars:     Size  Location     Type
 13690 ;;		None
 13691 ;; Return value:  Size  Location     Type
 13692 ;;                  1    wreg      void 
 13693 ;; Registers used:
 13694 ;;		wreg, status,2, status,0, cstack
 13695 ;; Tracked objects:
 13696 ;;		On entry : 0/0
 13697 ;;		On exit  : 0/0
 13698 ;;		Unchanged: 0/0
 13699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13704 ;;Total ram usage:        0 bytes
 13705 ;; Hardware stack levels used: 1
 13706 ;; Hardware stack levels required when called: 9
 13707 ;; This function calls:
 13708 ;;		_TMR4_SetInterruptHandler
 13709 ;; This function is called by:
 13710 ;;		_SYSTEM_Initialize
 13711 ;; This function uses a non-reentrant model
 13712 ;;
 13713                           
 13714                           	psect	text58
 13715  005B04                     __ptext58:
 13716                           	callstack 0
 13717  005B04                     _TMR4_Initialize:
 13718                           	callstack 20
 13719  005B04                     
 13720                           ;mcc_generated_files/tmr4.c: 70:     T4CLKCON = 0x01;
 13721  005B04  0E01               	movlw	1
 13722  005B06  6EA2               	movwf	162,c	;volatile
 13723                           
 13724                           ;mcc_generated_files/tmr4.c: 73:     T4HLT = 0x00;
 13725  005B08  0E00               	movlw	0
 13726  005B0A  6EA1               	movwf	161,c	;volatile
 13727                           
 13728                           ;mcc_generated_files/tmr4.c: 76:     T4RST = 0x00;
 13729  005B0C  0E00               	movlw	0
 13730  005B0E  6EA3               	movwf	163,c	;volatile
 13731                           
 13732                           ;mcc_generated_files/tmr4.c: 79:     T4PR = 0xF9;
 13733  005B10  0EF9               	movlw	249
 13734  005B12  6E9F               	movwf	159,c	;volatile
 13735                           
 13736                           ;mcc_generated_files/tmr4.c: 82:     T4TMR = 0x00;
 13737  005B14  0E00               	movlw	0
 13738  005B16  6E9E               	movwf	158,c	;volatile
 13739  005B18                     
 13740                           ;mcc_generated_files/tmr4.c: 85:     PIR7bits.TMR4IF = 0;
 13741  005B18  0139               	movlb	57	; () banked
 13742  005B1A  91A7               	bcf	167,0,b	;volatile
 13743  005B1C                     
 13744                           ; BSR set to: 57
 13745                           ;mcc_generated_files/tmr4.c: 88:     PIE7bits.TMR4IE = 1;
 13746  005B1C  8197               	bsf	151,0,b	;volatile
 13747  005B1E                     
 13748                           ; BSR set to: 57
 13749                           ;mcc_generated_files/tmr4.c: 91:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
 13750  005B1E  0EA4               	movlw	low _TMR4_DefaultInterruptHandler
 13751  005B20  6E14               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
 13752  005B22  0E5D               	movlw	high _TMR4_DefaultInterruptHandler
 13753  005B24  6E15               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
 13754  005B26  ECB9  F02E         	call	_TMR4_SetInterruptHandler	;wreg free
 13755  005B2A                     
 13756                           ;mcc_generated_files/tmr4.c: 94:     T4CON = 0xE0;
 13757  005B2A  0EE0               	movlw	224
 13758  005B2C  6EA0               	movwf	160,c	;volatile
 13759  005B2E  0012               	return		;funcret
 13760  005B30                     __end_of_TMR4_Initialize:
 13761                           	callstack 0
 13762                           
 13763 ;; *************** function _TMR4_SetInterruptHandler *****************
 13764 ;; Defined at:
 13765 ;;		line 194 in file "mcc_generated_files/tmr4.c"
 13766 ;; Parameters:    Size  Location     Type
 13767 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
 13768 ;;		 -> TMR4_10msISR(1), TMR4_DefaultInterruptHandler(1), 
 13769 ;; Auto vars:     Size  Location     Type
 13770 ;;		None
 13771 ;; Return value:  Size  Location     Type
 13772 ;;                  1    wreg      void 
 13773 ;; Registers used:
 13774 ;;		wreg, status,2, status,0
 13775 ;; Tracked objects:
 13776 ;;		On entry : 0/0
 13777 ;;		On exit  : 0/0
 13778 ;;		Unchanged: 0/0
 13779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13780 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13783 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13784 ;;Total ram usage:        2 bytes
 13785 ;; Hardware stack levels used: 1
 13786 ;; Hardware stack levels required when called: 8
 13787 ;; This function calls:
 13788 ;;		Nothing
 13789 ;; This function is called by:
 13790 ;;		_TMR4_Initialize
 13791 ;;		_main
 13792 ;; This function uses a non-reentrant model
 13793 ;;
 13794                           
 13795                           	psect	text59
 13796  005D72                     __ptext59:
 13797                           	callstack 0
 13798  005D72                     _TMR4_SetInterruptHandler:
 13799                           	callstack 22
 13800  005D72                     
 13801                           ;mcc_generated_files/tmr4.c: 195:     TMR4_InterruptHandler = InterruptHandler;
 13802  005D72  C014  F18A         	movff	TMR4_SetInterruptHandler@InterruptHandler,_TMR4_InterruptHandler
 13803  005D76  C015  F18B         	movff	TMR4_SetInterruptHandler@InterruptHandler+1,_TMR4_InterruptHandler+1
 13804  005D7A  0012               	return		;funcret
 13805  005D7C                     __end_of_TMR4_SetInterruptHandler:
 13806                           	callstack 0
 13807                           
 13808 ;; *************** function _TMR3_Initialize *****************
 13809 ;; Defined at:
 13810 ;;		line 63 in file "mcc_generated_files/tmr3.c"
 13811 ;; Parameters:    Size  Location     Type
 13812 ;;		None
 13813 ;; Auto vars:     Size  Location     Type
 13814 ;;		None
 13815 ;; Return value:  Size  Location     Type
 13816 ;;                  1    wreg      void 
 13817 ;; Registers used:
 13818 ;;		wreg, status,2, status,0
 13819 ;; Tracked objects:
 13820 ;;		On entry : 0/0
 13821 ;;		On exit  : 0/0
 13822 ;;		Unchanged: 0/0
 13823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13826 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13827 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13828 ;;Total ram usage:        2 bytes
 13829 ;; Hardware stack levels used: 1
 13830 ;; Hardware stack levels required when called: 8
 13831 ;; This function calls:
 13832 ;;		Nothing
 13833 ;; This function is called by:
 13834 ;;		_SYSTEM_Initialize
 13835 ;; This function uses a non-reentrant model
 13836 ;;
 13837                           
 13838                           	psect	text60
 13839  005796                     __ptext60:
 13840                           	callstack 0
 13841  005796                     _TMR3_Initialize:
 13842                           	callstack 21
 13843  005796                     
 13844                           ;mcc_generated_files/tmr3.c: 68:     T3GCON = 0x00;
 13845  005796  0E00               	movlw	0
 13846  005798  6EA7               	movwf	167,c	;volatile
 13847                           
 13848                           ;mcc_generated_files/tmr3.c: 71:     T3GATE = 0x00;
 13849  00579A  0E00               	movlw	0
 13850  00579C  6EA8               	movwf	168,c	;volatile
 13851                           
 13852                           ;mcc_generated_files/tmr3.c: 74:     T3CLK = 0x05;
 13853  00579E  0E05               	movlw	5
 13854  0057A0  6EA9               	movwf	169,c	;volatile
 13855                           
 13856                           ;mcc_generated_files/tmr3.c: 77:     TMR3H = 0x00;
 13857  0057A2  0E00               	movlw	0
 13858  0057A4  6EA5               	movwf	165,c	;volatile
 13859                           
 13860                           ;mcc_generated_files/tmr3.c: 80:     TMR3L = 0x00;
 13861  0057A6  0E00               	movlw	0
 13862  0057A8  6EA4               	movwf	164,c	;volatile
 13863  0057AA                     
 13864                           ;mcc_generated_files/tmr3.c: 83:     PIR6bits.TMR3IF = 0;
 13865  0057AA  0139               	movlb	57	; () banked
 13866  0057AC  9DA6               	bcf	166,6,b	;volatile
 13867  0057AE                     
 13868                           ; BSR set to: 57
 13869                           ;mcc_generated_files/tmr3.c: 86:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 13870  0057AE  50A4               	movf	164,w,c	;volatile
 13871  0057B0  006F FE94  F014    	movff	16293,??_TMR3_Initialize	;volatile
 13872  0057B6  6A15               	clrf	(??_TMR3_Initialize+1)^0,c
 13873  0057B8  C014  F015         	movff	??_TMR3_Initialize,??_TMR3_Initialize+1
 13874  0057BC  6A14               	clrf	??_TMR3_Initialize^0,c
 13875  0057BE  1014               	iorwf	??_TMR3_Initialize^0,w,c
 13876  0057C0  0101               	movlb	1	; () banked
 13877  0057C2  6F8C               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 13878  0057C4  5015               	movf	(??_TMR3_Initialize+1)^0,w,c
 13879  0057C6  6F8D               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 13880  0057C8                     
 13881                           ; BSR set to: 1
 13882                           ;mcc_generated_files/tmr3.c: 89:     T3CON = 0x01;
 13883  0057C8  0E01               	movlw	1
 13884  0057CA  6EA6               	movwf	166,c	;volatile
 13885  0057CC                     
 13886                           ; BSR set to: 1
 13887  0057CC  0012               	return		;funcret
 13888  0057CE                     __end_of_TMR3_Initialize:
 13889                           	callstack 0
 13890                           
 13891 ;; *************** function _TMR2_Initialize *****************
 13892 ;; Defined at:
 13893 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 13894 ;; Parameters:    Size  Location     Type
 13895 ;;		None
 13896 ;; Auto vars:     Size  Location     Type
 13897 ;;		None
 13898 ;; Return value:  Size  Location     Type
 13899 ;;                  1    wreg      void 
 13900 ;; Registers used:
 13901 ;;		wreg, status,2
 13902 ;; Tracked objects:
 13903 ;;		On entry : 0/0
 13904 ;;		On exit  : 0/0
 13905 ;;		Unchanged: 0/0
 13906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13911 ;;Total ram usage:        0 bytes
 13912 ;; Hardware stack levels used: 1
 13913 ;; Hardware stack levels required when called: 8
 13914 ;; This function calls:
 13915 ;;		Nothing
 13916 ;; This function is called by:
 13917 ;;		_SYSTEM_Initialize
 13918 ;; This function uses a non-reentrant model
 13919 ;;
 13920                           
 13921                           	psect	text61
 13922  005C8A                     __ptext61:
 13923                           	callstack 0
 13924  005C8A                     _TMR2_Initialize:
 13925                           	callstack 21
 13926  005C8A                     
 13927                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x05;
 13928  005C8A  0E05               	movlw	5
 13929  005C8C  6EAE               	movwf	174,c	;volatile
 13930                           
 13931                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 13932  005C8E  0E00               	movlw	0
 13933  005C90  6EAD               	movwf	173,c	;volatile
 13934                           
 13935                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 13936  005C92  0E00               	movlw	0
 13937  005C94  6EAF               	movwf	175,c	;volatile
 13938  005C96                     
 13939                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
 13940  005C96  68AB               	setf	171,c	;volatile
 13941                           
 13942                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 13943  005C98  0E00               	movlw	0
 13944  005C9A  6EAA               	movwf	170,c	;volatile
 13945  005C9C                     
 13946                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 13947  005C9C  0139               	movlb	57	; () banked
 13948  005C9E  95A4               	bcf	164,2,b	;volatile
 13949                           
 13950                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xB0;
 13951  005CA0  0EB0               	movlw	176
 13952  005CA2  6EAC               	movwf	172,c	;volatile
 13953  005CA4                     
 13954                           ; BSR set to: 57
 13955  005CA4  0012               	return		;funcret
 13956  005CA6                     __end_of_TMR2_Initialize:
 13957                           	callstack 0
 13958                           
 13959 ;; *************** function _SMT1_Initialize *****************
 13960 ;; Defined at:
 13961 ;;		line 60 in file "mcc_generated_files/smt1.c"
 13962 ;; Parameters:    Size  Location     Type
 13963 ;;		None
 13964 ;; Auto vars:     Size  Location     Type
 13965 ;;		None
 13966 ;; Return value:  Size  Location     Type
 13967 ;;                  1    wreg      void 
 13968 ;; Registers used:
 13969 ;;		wreg, status,2
 13970 ;; Tracked objects:
 13971 ;;		On entry : 0/0
 13972 ;;		On exit  : 0/0
 13973 ;;		Unchanged: 0/0
 13974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13979 ;;Total ram usage:        0 bytes
 13980 ;; Hardware stack levels used: 1
 13981 ;; Hardware stack levels required when called: 8
 13982 ;; This function calls:
 13983 ;;		Nothing
 13984 ;; This function is called by:
 13985 ;;		_SYSTEM_Initialize
 13986 ;; This function uses a non-reentrant model
 13987 ;;
 13988                           
 13989                           	psect	text62
 13990  005A4A                     __ptext62:
 13991                           	callstack 0
 13992  005A4A                     _SMT1_Initialize:
 13993                           	callstack 21
 13994  005A4A                     
 13995                           ;mcc_generated_files/smt1.c: 63:     SMT1CON0 = 0x80;
 13996  005A4A  0E80               	movlw	128
 13997  005A4C  013F               	movlb	63	; () banked
 13998  005A4E  6F1E               	movwf	30,b	;volatile
 13999                           
 14000                           ;mcc_generated_files/smt1.c: 66:     SMT1CON1 = 0x42;
 14001  005A50  0E42               	movlw	66
 14002  005A52  6F1F               	movwf	31,b	;volatile
 14003                           
 14004                           ;mcc_generated_files/smt1.c: 69:     SMT1STAT = 0x00;
 14005  005A54  0E00               	movlw	0
 14006  005A56  6F20               	movwf	32,b	;volatile
 14007                           
 14008                           ;mcc_generated_files/smt1.c: 72:     SMT1CLK = 0x04;
 14009  005A58  0E04               	movlw	4
 14010  005A5A  6F21               	movwf	33,b	;volatile
 14011                           
 14012                           ;mcc_generated_files/smt1.c: 75:     SMT1WIN = 0x00;
 14013  005A5C  0E00               	movlw	0
 14014  005A5E  6F23               	movwf	35,b	;volatile
 14015                           
 14016                           ;mcc_generated_files/smt1.c: 78:     SMT1SIG = 0x00;
 14017  005A60  0E00               	movlw	0
 14018  005A62  6F22               	movwf	34,b	;volatile
 14019                           
 14020                           ;mcc_generated_files/smt1.c: 81:     SMT1PRU = 0x01;
 14021  005A64  0E01               	movlw	1
 14022  005A66  6F1D               	movwf	29,b	;volatile
 14023  005A68                     
 14024                           ; BSR set to: 63
 14025                           ;mcc_generated_files/smt1.c: 84:     SMT1PRH = 0xFF;
 14026  005A68  691C               	setf	28,b	;volatile
 14027  005A6A                     
 14028                           ; BSR set to: 63
 14029                           ;mcc_generated_files/smt1.c: 87:     SMT1PRL = 0xFF;
 14030  005A6A  691B               	setf	27,b	;volatile
 14031  005A6C                     
 14032                           ; BSR set to: 63
 14033                           ;mcc_generated_files/smt1.c: 90:     PIE1bits.SMT1IE = 1;
 14034  005A6C  0139               	movlb	57	; () banked
 14035  005A6E  8B91               	bsf	145,5,b	;volatile
 14036  005A70                     
 14037                           ; BSR set to: 57
 14038                           ;mcc_generated_files/smt1.c: 93:     PIE1bits.SMT1PWAIE = 1;
 14039  005A70  8F91               	bsf	145,7,b	;volatile
 14040  005A72                     
 14041                           ; BSR set to: 57
 14042                           ;mcc_generated_files/smt1.c: 96:     PIE1bits.SMT1PRAIE = 1;
 14043  005A72  8D91               	bsf	145,6,b	;volatile
 14044  005A74                     
 14045                           ; BSR set to: 57
 14046                           ;mcc_generated_files/smt1.c: 99:     SMT1CON1bits.SMT1GO = 1;
 14047  005A74  013F               	movlb	63	; () banked
 14048  005A76  8F1F               	bsf	31,7,b	;volatile
 14049  005A78                     
 14050                           ; BSR set to: 63
 14051  005A78  0012               	return		;funcret
 14052  005A7A                     __end_of_SMT1_Initialize:
 14053                           	callstack 0
 14054                           
 14055 ;; *************** function _PWM8_Initialize *****************
 14056 ;; Defined at:
 14057 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 14058 ;; Parameters:    Size  Location     Type
 14059 ;;		None
 14060 ;; Auto vars:     Size  Location     Type
 14061 ;;		None
 14062 ;; Return value:  Size  Location     Type
 14063 ;;                  1    wreg      void 
 14064 ;; Registers used:
 14065 ;;		wreg, status,2
 14066 ;; Tracked objects:
 14067 ;;		On entry : 0/0
 14068 ;;		On exit  : 0/0
 14069 ;;		Unchanged: 0/0
 14070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14075 ;;Total ram usage:        0 bytes
 14076 ;; Hardware stack levels used: 1
 14077 ;; Hardware stack levels required when called: 8
 14078 ;; This function calls:
 14079 ;;		Nothing
 14080 ;; This function is called by:
 14081 ;;		_SYSTEM_Initialize
 14082 ;; This function uses a non-reentrant model
 14083 ;;
 14084                           
 14085                           	psect	text63
 14086  005CA6                     __ptext63:
 14087                           	callstack 0
 14088  005CA6                     _PWM8_Initialize:
 14089                           	callstack 21
 14090  005CA6                     
 14091                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 14092  005CA6  0E80               	movlw	128
 14093  005CA8  6E62               	movwf	98,c	;volatile
 14094                           
 14095                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 14096  005CAA  0E00               	movlw	0
 14097  005CAC  6E61               	movwf	97,c	;volatile
 14098                           
 14099                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x00;
 14100  005CAE  0E00               	movlw	0
 14101  005CB0  6E60               	movwf	96,c	;volatile
 14102                           
 14103                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 2;
 14104  005CB2  013F               	movlb	63	; () banked
 14105  005CB4  515F               	movf	95,w,b	;volatile
 14106  005CB6  0B3F               	andlw	-193
 14107  005CB8  0980               	iorlw	128
 14108  005CBA  6F5F               	movwf	95,b	;volatile
 14109  005CBC                     
 14110                           ; BSR set to: 63
 14111  005CBC  0012               	return		;funcret
 14112  005CBE                     __end_of_PWM8_Initialize:
 14113                           	callstack 0
 14114                           
 14115 ;; *************** function _PWM7_Initialize *****************
 14116 ;; Defined at:
 14117 ;;		line 58 in file "mcc_generated_files/pwm7.c"
 14118 ;; Parameters:    Size  Location     Type
 14119 ;;		None
 14120 ;; Auto vars:     Size  Location     Type
 14121 ;;		None
 14122 ;; Return value:  Size  Location     Type
 14123 ;;                  1    wreg      void 
 14124 ;; Registers used:
 14125 ;;		wreg, status,2
 14126 ;; Tracked objects:
 14127 ;;		On entry : 0/0
 14128 ;;		On exit  : 0/0
 14129 ;;		Unchanged: 0/0
 14130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14135 ;;Total ram usage:        0 bytes
 14136 ;; Hardware stack levels used: 1
 14137 ;; Hardware stack levels required when called: 8
 14138 ;; This function calls:
 14139 ;;		Nothing
 14140 ;; This function is called by:
 14141 ;;		_SYSTEM_Initialize
 14142 ;; This function uses a non-reentrant model
 14143 ;;
 14144                           
 14145                           	psect	text64
 14146  005CBE                     __ptext64:
 14147                           	callstack 0
 14148  005CBE                     _PWM7_Initialize:
 14149                           	callstack 21
 14150  005CBE                     
 14151                           ;mcc_generated_files/pwm7.c: 62:     PWM7CON = 0x80;
 14152  005CBE  0E80               	movlw	128
 14153  005CC0  6E66               	movwf	102,c	;volatile
 14154                           
 14155                           ;mcc_generated_files/pwm7.c: 65:     PWM7DCH = 0x00;
 14156  005CC2  0E00               	movlw	0
 14157  005CC4  6E65               	movwf	101,c	;volatile
 14158                           
 14159                           ;mcc_generated_files/pwm7.c: 68:     PWM7DCL = 0x00;
 14160  005CC6  0E00               	movlw	0
 14161  005CC8  6E64               	movwf	100,c	;volatile
 14162                           
 14163                           ;mcc_generated_files/pwm7.c: 71:     CCPTMRS1bits.P7TSEL = 2;
 14164  005CCA  013F               	movlb	63	; () banked
 14165  005CCC  515F               	movf	95,w,b	;volatile
 14166  005CCE  0BCF               	andlw	-49
 14167  005CD0  0920               	iorlw	32
 14168  005CD2  6F5F               	movwf	95,b	;volatile
 14169  005CD4                     
 14170                           ; BSR set to: 63
 14171  005CD4  0012               	return		;funcret
 14172  005CD6                     __end_of_PWM7_Initialize:
 14173                           	callstack 0
 14174                           
 14175 ;; *************** function _PWM6_Initialize *****************
 14176 ;; Defined at:
 14177 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 14178 ;; Parameters:    Size  Location     Type
 14179 ;;		None
 14180 ;; Auto vars:     Size  Location     Type
 14181 ;;		None
 14182 ;; Return value:  Size  Location     Type
 14183 ;;                  1    wreg      void 
 14184 ;; Registers used:
 14185 ;;		wreg, status,2
 14186 ;; Tracked objects:
 14187 ;;		On entry : 0/0
 14188 ;;		On exit  : 0/0
 14189 ;;		Unchanged: 0/0
 14190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14195 ;;Total ram usage:        0 bytes
 14196 ;; Hardware stack levels used: 1
 14197 ;; Hardware stack levels required when called: 8
 14198 ;; This function calls:
 14199 ;;		Nothing
 14200 ;; This function is called by:
 14201 ;;		_SYSTEM_Initialize
 14202 ;; This function uses a non-reentrant model
 14203 ;;
 14204                           
 14205                           	psect	text65
 14206  005CD6                     __ptext65:
 14207                           	callstack 0
 14208  005CD6                     _PWM6_Initialize:
 14209                           	callstack 21
 14210  005CD6                     
 14211                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
 14212  005CD6  0E80               	movlw	128
 14213  005CD8  6E6A               	movwf	106,c	;volatile
 14214                           
 14215                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x59;
 14216  005CDA  0E59               	movlw	89
 14217  005CDC  6E69               	movwf	105,c	;volatile
 14218                           
 14219                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0x40;
 14220  005CDE  0E40               	movlw	64
 14221  005CE0  6E68               	movwf	104,c	;volatile
 14222                           
 14223                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
 14224  005CE2  013F               	movlb	63	; () banked
 14225  005CE4  515F               	movf	95,w,b	;volatile
 14226  005CE6  0BF3               	andlw	-13
 14227  005CE8  0904               	iorlw	4
 14228  005CEA  6F5F               	movwf	95,b	;volatile
 14229  005CEC                     
 14230                           ; BSR set to: 63
 14231  005CEC  0012               	return		;funcret
 14232  005CEE                     __end_of_PWM6_Initialize:
 14233                           	callstack 0
 14234                           
 14235 ;; *************** function _PWM5_Initialize *****************
 14236 ;; Defined at:
 14237 ;;		line 58 in file "mcc_generated_files/pwm5.c"
 14238 ;; Parameters:    Size  Location     Type
 14239 ;;		None
 14240 ;; Auto vars:     Size  Location     Type
 14241 ;;		None
 14242 ;; Return value:  Size  Location     Type
 14243 ;;                  1    wreg      void 
 14244 ;; Registers used:
 14245 ;;		wreg, status,2
 14246 ;; Tracked objects:
 14247 ;;		On entry : 0/0
 14248 ;;		On exit  : 0/0
 14249 ;;		Unchanged: 0/0
 14250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14255 ;;Total ram usage:        0 bytes
 14256 ;; Hardware stack levels used: 1
 14257 ;; Hardware stack levels required when called: 8
 14258 ;; This function calls:
 14259 ;;		Nothing
 14260 ;; This function is called by:
 14261 ;;		_SYSTEM_Initialize
 14262 ;; This function uses a non-reentrant model
 14263 ;;
 14264                           
 14265                           	psect	text66
 14266  005CEE                     __ptext66:
 14267                           	callstack 0
 14268  005CEE                     _PWM5_Initialize:
 14269                           	callstack 21
 14270  005CEE                     
 14271                           ;mcc_generated_files/pwm5.c: 62:     PWM5CON = 0x80;
 14272  005CEE  0E80               	movlw	128
 14273  005CF0  6E6E               	movwf	110,c	;volatile
 14274                           
 14275                           ;mcc_generated_files/pwm5.c: 65:     PWM5DCH = 0x59;
 14276  005CF2  0E59               	movlw	89
 14277  005CF4  6E6D               	movwf	109,c	;volatile
 14278                           
 14279                           ;mcc_generated_files/pwm5.c: 68:     PWM5DCL = 0x40;
 14280  005CF6  0E40               	movlw	64
 14281  005CF8  6E6C               	movwf	108,c	;volatile
 14282                           
 14283                           ;mcc_generated_files/pwm5.c: 71:     CCPTMRS1bits.P5TSEL = 1;
 14284  005CFA  013F               	movlb	63	; () banked
 14285  005CFC  515F               	movf	95,w,b	;volatile
 14286  005CFE  0BFC               	andlw	-4
 14287  005D00  0901               	iorlw	1
 14288  005D02  6F5F               	movwf	95,b	;volatile
 14289  005D04                     
 14290                           ; BSR set to: 63
 14291  005D04  0012               	return		;funcret
 14292  005D06                     __end_of_PWM5_Initialize:
 14293                           	callstack 0
 14294                           
 14295 ;; *************** function _PMD_Initialize *****************
 14296 ;; Defined at:
 14297 ;;		line 86 in file "mcc_generated_files/mcc.c"
 14298 ;; Parameters:    Size  Location     Type
 14299 ;;		None
 14300 ;; Auto vars:     Size  Location     Type
 14301 ;;		None
 14302 ;; Return value:  Size  Location     Type
 14303 ;;                  1    wreg      void 
 14304 ;; Registers used:
 14305 ;;		wreg, status,2
 14306 ;; Tracked objects:
 14307 ;;		On entry : 0/0
 14308 ;;		On exit  : 0/0
 14309 ;;		Unchanged: 0/0
 14310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14315 ;;Total ram usage:        0 bytes
 14316 ;; Hardware stack levels used: 1
 14317 ;; Hardware stack levels required when called: 8
 14318 ;; This function calls:
 14319 ;;		Nothing
 14320 ;; This function is called by:
 14321 ;;		_SYSTEM_Initialize
 14322 ;; This function uses a non-reentrant model
 14323 ;;
 14324                           
 14325                           	psect	text67
 14326  005C04                     __ptext67:
 14327                           	callstack 0
 14328  005C04                     _PMD_Initialize:
 14329                           	callstack 21
 14330  005C04                     
 14331                           ;mcc_generated_files/mcc.c: 89:     PMD0 = 0x00;
 14332  005C04  0E00               	movlw	0
 14333  005C06  0139               	movlb	57	; () banked
 14334  005C08  6FC0               	movwf	192,b	;volatile
 14335                           
 14336                           ;mcc_generated_files/mcc.c: 91:     PMD1 = 0x00;
 14337  005C0A  0E00               	movlw	0
 14338  005C0C  6FC1               	movwf	193,b	;volatile
 14339                           
 14340                           ;mcc_generated_files/mcc.c: 93:     PMD2 = 0x00;
 14341  005C0E  0E00               	movlw	0
 14342  005C10  6FC2               	movwf	194,b	;volatile
 14343                           
 14344                           ;mcc_generated_files/mcc.c: 95:     PMD3 = 0x00;
 14345  005C12  0E00               	movlw	0
 14346  005C14  6FC3               	movwf	195,b	;volatile
 14347                           
 14348                           ;mcc_generated_files/mcc.c: 97:     PMD4 = 0x00;
 14349  005C16  0E00               	movlw	0
 14350  005C18  6FC4               	movwf	196,b	;volatile
 14351                           
 14352                           ;mcc_generated_files/mcc.c: 99:     PMD5 = 0x00;
 14353  005C1A  0E00               	movlw	0
 14354  005C1C  6FC5               	movwf	197,b	;volatile
 14355                           
 14356                           ;mcc_generated_files/mcc.c: 101:     PMD6 = 0x00;
 14357  005C1E  0E00               	movlw	0
 14358  005C20  6FC6               	movwf	198,b	;volatile
 14359                           
 14360                           ;mcc_generated_files/mcc.c: 103:     PMD7 = 0x00;
 14361  005C22  0E00               	movlw	0
 14362  005C24  6FC7               	movwf	199,b	;volatile
 14363  005C26                     
 14364                           ; BSR set to: 57
 14365  005C26  0012               	return		;funcret
 14366  005C28                     __end_of_PMD_Initialize:
 14367                           	callstack 0
 14368                           
 14369 ;; *************** function _PIN_MANAGER_Initialize *****************
 14370 ;; Defined at:
 14371 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 14372 ;; Parameters:    Size  Location     Type
 14373 ;;		None
 14374 ;; Auto vars:     Size  Location     Type
 14375 ;;		None
 14376 ;; Return value:  Size  Location     Type
 14377 ;;                  1    wreg      void 
 14378 ;; Registers used:
 14379 ;;		wreg, status,2
 14380 ;; Tracked objects:
 14381 ;;		On entry : 0/0
 14382 ;;		On exit  : 0/0
 14383 ;;		Unchanged: 0/0
 14384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14389 ;;Total ram usage:        0 bytes
 14390 ;; Hardware stack levels used: 1
 14391 ;; Hardware stack levels required when called: 8
 14392 ;; This function calls:
 14393 ;;		Nothing
 14394 ;; This function is called by:
 14395 ;;		_SYSTEM_Initialize
 14396 ;; This function uses a non-reentrant model
 14397 ;;
 14398                           
 14399                           	psect	text68
 14400  004AB8                     __ptext68:
 14401                           	callstack 0
 14402  004AB8                     _PIN_MANAGER_Initialize:
 14403                           	callstack 21
 14404  004AB8                     
 14405                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 14406  004AB8  0E00               	movlw	0
 14407  004ABA  6EBE               	movwf	190,c	;volatile
 14408                           
 14409                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 14410  004ABC  0E00               	movlw	0
 14411  004ABE  6EBD               	movwf	189,c	;volatile
 14412                           
 14413                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x24;
 14414  004AC0  0E24               	movlw	36
 14415  004AC2  6EBA               	movwf	186,c	;volatile
 14416                           
 14417                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 14418  004AC4  0E00               	movlw	0
 14419  004AC6  6EBB               	movwf	187,c	;volatile
 14420                           
 14421                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 14422  004AC8  0E00               	movlw	0
 14423  004ACA  6EBC               	movwf	188,c	;volatile
 14424                           
 14425                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
 14426  004ACC  0E07               	movlw	7
 14427  004ACE  6EC6               	movwf	198,c	;volatile
 14428                           
 14429                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xC0;
 14430  004AD0  0EC0               	movlw	192
 14431  004AD2  6EC2               	movwf	194,c	;volatile
 14432                           
 14433                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xF7;
 14434  004AD4  0EF7               	movlw	247
 14435  004AD6  6EC3               	movwf	195,c	;volatile
 14436  004AD8                     
 14437                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
 14438  004AD8  68C4               	setf	196,c	;volatile
 14439  004ADA                     
 14440                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
 14441  004ADA  68C5               	setf	197,c	;volatile
 14442                           
 14443                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x1F;
 14444  004ADC  0E1F               	movlw	31
 14445  004ADE  013A               	movlb	58	; () banked
 14446  004AE0  6F70               	movwf	112,b	;volatile
 14447  004AE2                     
 14448                           ; BSR set to: 58
 14449                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xFF;
 14450  004AE2  6960               	setf	96,b	;volatile
 14451                           
 14452                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xC0;
 14453  004AE4  0EC0               	movlw	192
 14454  004AE6  6F50               	movwf	80,b	;volatile
 14455                           
 14456                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
 14457  004AE8  0E07               	movlw	7
 14458  004AEA  6F80               	movwf	128,b	;volatile
 14459                           
 14460                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x7F;
 14461  004AEC  0E7F               	movlw	127
 14462  004AEE  6F40               	movwf	64,b	;volatile
 14463                           
 14464                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 14465  004AF0  0E00               	movlw	0
 14466  004AF2  6F71               	movwf	113,b	;volatile
 14467                           
 14468                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 14469  004AF4  0E00               	movlw	0
 14470  004AF6  6F81               	movwf	129,b	;volatile
 14471                           
 14472                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
 14473  004AF8  0E00               	movlw	0
 14474  004AFA  6F51               	movwf	81,b	;volatile
 14475                           
 14476                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 14477  004AFC  0E00               	movlw	0
 14478  004AFE  6F41               	movwf	65,b	;volatile
 14479                           
 14480                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 14481  004B00  0E00               	movlw	0
 14482  004B02  6F61               	movwf	97,b	;volatile
 14483                           
 14484                           ;mcc_generated_files/pin_manager.c: 96:     RB1I2C = 0x00;
 14485  004B04  0E00               	movlw	0
 14486  004B06  6F5A               	movwf	90,b	;volatile
 14487                           
 14488                           ;mcc_generated_files/pin_manager.c: 97:     RB2I2C = 0x00;
 14489  004B08  0E00               	movlw	0
 14490  004B0A  6F5B               	movwf	91,b	;volatile
 14491                           
 14492                           ;mcc_generated_files/pin_manager.c: 98:     RC3I2C = 0x00;
 14493  004B0C  0E00               	movlw	0
 14494  004B0E  6F6A               	movwf	106,b	;volatile
 14495                           
 14496                           ;mcc_generated_files/pin_manager.c: 99:     RC4I2C = 0x00;
 14497  004B10  0E00               	movlw	0
 14498  004B12  6F6B               	movwf	107,b	;volatile
 14499                           
 14500                           ;mcc_generated_files/pin_manager.c: 100:     RD0I2C = 0x00;
 14501  004B14  0E00               	movlw	0
 14502  004B16  6F7A               	movwf	122,b	;volatile
 14503                           
 14504                           ;mcc_generated_files/pin_manager.c: 101:     RD1I2C = 0x00;
 14505  004B18  0E00               	movlw	0
 14506  004B1A  6F7B               	movwf	123,b	;volatile
 14507                           
 14508                           ;mcc_generated_files/pin_manager.c: 106:     ODCONE = 0x00;
 14509  004B1C  0E00               	movlw	0
 14510  004B1E  6F82               	movwf	130,b	;volatile
 14511                           
 14512                           ;mcc_generated_files/pin_manager.c: 107:     ODCONA = 0x00;
 14513  004B20  0E00               	movlw	0
 14514  004B22  6F42               	movwf	66,b	;volatile
 14515                           
 14516                           ;mcc_generated_files/pin_manager.c: 108:     ODCONB = 0x00;
 14517  004B24  0E00               	movlw	0
 14518  004B26  6F52               	movwf	82,b	;volatile
 14519                           
 14520                           ;mcc_generated_files/pin_manager.c: 109:     ODCONC = 0x00;
 14521  004B28  0E00               	movlw	0
 14522  004B2A  6F62               	movwf	98,b	;volatile
 14523                           
 14524                           ;mcc_generated_files/pin_manager.c: 110:     ODCOND = 0x00;
 14525  004B2C  0E00               	movlw	0
 14526  004B2E  6F72               	movwf	114,b	;volatile
 14527  004B30                     
 14528                           ; BSR set to: 58
 14529                           ;mcc_generated_files/pin_manager.c: 115:     SLRCONA = 0xFF;
 14530  004B30  6943               	setf	67,b	;volatile
 14531  004B32                     
 14532                           ; BSR set to: 58
 14533                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONB = 0xFF;
 14534  004B32  6953               	setf	83,b	;volatile
 14535  004B34                     
 14536                           ; BSR set to: 58
 14537                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONC = 0xFF;
 14538  004B34  6963               	setf	99,b	;volatile
 14539  004B36                     
 14540                           ; BSR set to: 58
 14541                           ;mcc_generated_files/pin_manager.c: 118:     SLRCOND = 0xFF;
 14542  004B36  6973               	setf	115,b	;volatile
 14543                           
 14544                           ;mcc_generated_files/pin_manager.c: 119:     SLRCONE = 0x07;
 14545  004B38  0E07               	movlw	7
 14546  004B3A  6F83               	movwf	131,b	;volatile
 14547  004B3C                     
 14548                           ; BSR set to: 58
 14549                           ;mcc_generated_files/pin_manager.c: 124:     INLVLA = 0xFF;
 14550  004B3C  6944               	setf	68,b	;volatile
 14551  004B3E                     
 14552                           ; BSR set to: 58
 14553                           ;mcc_generated_files/pin_manager.c: 125:     INLVLB = 0xFF;
 14554  004B3E  6954               	setf	84,b	;volatile
 14555  004B40                     
 14556                           ; BSR set to: 58
 14557                           ;mcc_generated_files/pin_manager.c: 126:     INLVLC = 0xFF;
 14558  004B40  6964               	setf	100,b	;volatile
 14559  004B42                     
 14560                           ; BSR set to: 58
 14561                           ;mcc_generated_files/pin_manager.c: 127:     INLVLD = 0xFF;
 14562  004B42  6974               	setf	116,b	;volatile
 14563                           
 14564                           ;mcc_generated_files/pin_manager.c: 128:     INLVLE = 0x0F;
 14565  004B44  0E0F               	movlw	15
 14566  004B46  6F84               	movwf	132,b	;volatile
 14567                           
 14568                           ;mcc_generated_files/pin_manager.c: 137:     CCP3PPS = 0x1F;
 14569  004B48  0E1F               	movlw	31
 14570  004B4A  6FCF               	movwf	207,b	;volatile
 14571                           
 14572                           ;mcc_generated_files/pin_manager.c: 138:     CLCIN3PPS = 0x09;
 14573  004B4C  0E09               	movlw	9
 14574  004B4E  6FDC               	movwf	220,b	;volatile
 14575                           
 14576                           ;mcc_generated_files/pin_manager.c: 139:     RA1PPS = 0x0E;
 14577  004B50  0E0E               	movlw	14
 14578  004B52  6F01               	movwf	1,b	;volatile
 14579                           
 14580                           ;mcc_generated_files/pin_manager.c: 140:     U1RXPPS = 0x0A;
 14581  004B54  0E0A               	movlw	10
 14582  004B56  6FE5               	movwf	229,b	;volatile
 14583                           
 14584                           ;mcc_generated_files/pin_manager.c: 141:     RA0PPS = 0x0D;
 14585  004B58  0E0D               	movlw	13
 14586  004B5A  6F00               	movwf	0,b	;volatile
 14587                           
 14588                           ;mcc_generated_files/pin_manager.c: 142:     T5GPPS = 0x1D;
 14589  004B5C  0E1D               	movlw	29
 14590  004B5E  6FC9               	movwf	201,b	;volatile
 14591                           
 14592                           ;mcc_generated_files/pin_manager.c: 143:     RA4PPS = 0x10;
 14593  004B60  0E10               	movlw	16
 14594  004B62  6F04               	movwf	4,b	;volatile
 14595                           
 14596                           ;mcc_generated_files/pin_manager.c: 144:     CLCIN0PPS = 0x07;
 14597  004B64  0E07               	movlw	7
 14598  004B66  6FD9               	movwf	217,b	;volatile
 14599                           
 14600                           ;mcc_generated_files/pin_manager.c: 145:     SMT1WINPPS = 0x09;
 14601  004B68  0E09               	movlw	9
 14602  004B6A  6FD1               	movwf	209,b	;volatile
 14603                           
 14604                           ;mcc_generated_files/pin_manager.c: 146:     RA3PPS = 0x0F;
 14605  004B6C  0E0F               	movlw	15
 14606  004B6E  6F03               	movwf	3,b	;volatile
 14607                           
 14608                           ;mcc_generated_files/pin_manager.c: 147:     RB3PPS = 0x13;
 14609  004B70  0E13               	movlw	19
 14610  004B72  6F0B               	movwf	11,b	;volatile
 14611                           
 14612                           ;mcc_generated_files/pin_manager.c: 148:     CLCIN2PPS = 0x08;
 14613  004B74  0E08               	movlw	8
 14614  004B76  6FDB               	movwf	219,b	;volatile
 14615                           
 14616                           ;mcc_generated_files/pin_manager.c: 149:     SMT1SIGPPS = 0x08;
 14617  004B78  0E08               	movlw	8
 14618  004B7A  6FD2               	movwf	210,b	;volatile
 14619                           
 14620                           ;mcc_generated_files/pin_manager.c: 150:     CCP4PPS = 0x1E;
 14621  004B7C  0E1E               	movlw	30
 14622  004B7E  6FD0               	movwf	208,b	;volatile
 14623  004B80                     
 14624                           ; BSR set to: 58
 14625  004B80  0012               	return		;funcret
 14626  004B82                     __end_of_PIN_MANAGER_Initialize:
 14627                           	callstack 0
 14628                           
 14629 ;; *************** function _OSCILLATOR_Initialize *****************
 14630 ;; Defined at:
 14631 ;;		line 72 in file "mcc_generated_files/mcc.c"
 14632 ;; Parameters:    Size  Location     Type
 14633 ;;		None
 14634 ;; Auto vars:     Size  Location     Type
 14635 ;;		None
 14636 ;; Return value:  Size  Location     Type
 14637 ;;                  1    wreg      void 
 14638 ;; Registers used:
 14639 ;;		wreg, status,2
 14640 ;; Tracked objects:
 14641 ;;		On entry : 0/0
 14642 ;;		On exit  : 0/0
 14643 ;;		Unchanged: 0/0
 14644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14649 ;;Total ram usage:        0 bytes
 14650 ;; Hardware stack levels used: 1
 14651 ;; Hardware stack levels required when called: 8
 14652 ;; This function calls:
 14653 ;;		Nothing
 14654 ;; This function is called by:
 14655 ;;		_SYSTEM_Initialize
 14656 ;; This function uses a non-reentrant model
 14657 ;;
 14658                           
 14659                           	psect	text69
 14660  005D06                     __ptext69:
 14661                           	callstack 0
 14662  005D06                     _OSCILLATOR_Initialize:
 14663                           	callstack 21
 14664  005D06                     
 14665                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x60;
 14666  005D06  0E60               	movlw	96
 14667  005D08  0139               	movlb	57	; () banked
 14668  005D0A  6FD9               	movwf	217,b	;volatile
 14669                           
 14670                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 14671  005D0C  0E00               	movlw	0
 14672  005D0E  6FDB               	movwf	219,b	;volatile
 14673                           
 14674                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 14675  005D10  0E00               	movlw	0
 14676  005D12  6FDD               	movwf	221,b	;volatile
 14677                           
 14678                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x08;
 14679  005D14  0E08               	movlw	8
 14680  005D16  6FDF               	movwf	223,b	;volatile
 14681                           
 14682                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 14683  005D18  0E00               	movlw	0
 14684  005D1A  6FDE               	movwf	222,b	;volatile
 14685  005D1C                     
 14686                           ; BSR set to: 57
 14687  005D1C  0012               	return		;funcret
 14688  005D1E                     __end_of_OSCILLATOR_Initialize:
 14689                           	callstack 0
 14690                           
 14691 ;; *************** function _INTERRUPT_Initialize *****************
 14692 ;; Defined at:
 14693 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 14694 ;; Parameters:    Size  Location     Type
 14695 ;;		None
 14696 ;; Auto vars:     Size  Location     Type
 14697 ;;  state           1   19[COMRAM] _Bool 
 14698 ;; Return value:  Size  Location     Type
 14699 ;;                  1    wreg      void 
 14700 ;; Registers used:
 14701 ;;		wreg, status,2
 14702 ;; Tracked objects:
 14703 ;;		On entry : 0/0
 14704 ;;		On exit  : 0/0
 14705 ;;		Unchanged: 0/0
 14706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14708 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14710 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14711 ;;Total ram usage:        1 bytes
 14712 ;; Hardware stack levels used: 1
 14713 ;; Hardware stack levels required when called: 8
 14714 ;; This function calls:
 14715 ;;		Nothing
 14716 ;; This function is called by:
 14717 ;;		_SYSTEM_Initialize
 14718 ;; This function uses a non-reentrant model
 14719 ;;
 14720                           
 14721                           	psect	text70
 14722  00543C                     __ptext70:
 14723                           	callstack 0
 14724  00543C                     _INTERRUPT_Initialize:
 14725                           	callstack 21
 14726  00543C                     
 14727                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 14728  00543C  8AD2               	bsf	210,5,c	;volatile
 14729  00543E                     
 14730                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 14731  00543E  0E00               	movlw	0
 14732  005440  BED2               	btfsc	16338,7,c	;volatile
 14733  005442  0E01               	movlw	1
 14734  005444  6E14               	movwf	INTERRUPT_Initialize@state^0,c
 14735  005446                     
 14736                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 14737  005446  9ED2               	bcf	16338,7,c	;volatile
 14738                           
 14739                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 14740  005448  0E55               	movlw	85
 14741  00544A  6ED4               	movwf	212,c	;volatile
 14742                           
 14743                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 14744  00544C  0EAA               	movlw	170
 14745  00544E  6ED4               	movwf	212,c	;volatile
 14746  005450                     
 14747                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 14748  005450  90D4               	bcf	212,0,c	;volatile
 14749                           
 14750                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTBASEU = 0;
 14751  005452  0E00               	movlw	0
 14752  005454  6ED7               	movwf	215,c	;volatile
 14753                           
 14754                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTBASEH = 0;
 14755  005456  0E00               	movlw	0
 14756  005458  6ED6               	movwf	214,c	;volatile
 14757                           
 14758                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTBASEL = 8;
 14759  00545A  0E08               	movlw	8
 14760  00545C  6ED5               	movwf	213,c	;volatile
 14761                           
 14762                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 14763  00545E  0E55               	movlw	85
 14764  005460  6ED4               	movwf	212,c	;volatile
 14765                           
 14766                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 14767  005462  0EAA               	movlw	170
 14768  005464  6ED4               	movwf	212,c	;volatile
 14769  005466                     
 14770                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 14771  005466  80D4               	bsf	212,0,c	;volatile
 14772  005468                     
 14773                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 14774  005468  B014               	btfsc	INTERRUPT_Initialize@state^0,0,c
 14775  00546A  D002               	bra	u2805
 14776  00546C  9ED2               	bcf	16338,7,c	;volatile
 14777  00546E  D001               	bra	u2806
 14778  005470                     u2805:
 14779  005470  8ED2               	bsf	16338,7,c	;volatile
 14780  005472                     u2806:
 14781  005472                     
 14782                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR3bits.U1TXIP = 0;
 14783  005472  0139               	movlb	57	; () banked
 14784  005474  9983               	bcf	131,4,b	;volatile
 14785  005476                     
 14786                           ; BSR set to: 57
 14787                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR3bits.U1RXIP = 0;
 14788  005476  9783               	bcf	131,3,b	;volatile
 14789  005478                     
 14790                           ; BSR set to: 57
 14791                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR1bits.SMT1PWAIP = 1;
 14792  005478  8F81               	bsf	129,7,b	;volatile
 14793  00547A                     
 14794                           ; BSR set to: 57
 14795                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR1bits.SMT1IP = 1;
 14796  00547A  8B81               	bsf	129,5,b	;volatile
 14797  00547C                     
 14798                           ; BSR set to: 57
 14799                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR1bits.SMT1PRAIP = 1;
 14800  00547C  8D81               	bsf	129,6,b	;volatile
 14801  00547E                     
 14802                           ; BSR set to: 57
 14803                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR10bits.CCP4IP = 1;
 14804  00547E  818A               	bsf	138,0,b	;volatile
 14805  005480                     
 14806                           ; BSR set to: 57
 14807                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR8bits.TMR5GIP = 1;
 14808  005480  8F88               	bsf	136,7,b	;volatile
 14809  005482                     
 14810                           ; BSR set to: 57
 14811                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR7bits.TMR4IP = 0;
 14812  005482  9187               	bcf	135,0,b	;volatile
 14813  005484                     
 14814                           ; BSR set to: 57
 14815                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR9bits.CCP3IP = 1;
 14816  005484  8389               	bsf	137,1,b	;volatile
 14817  005486                     
 14818                           ; BSR set to: 57
 14819  005486  0012               	return		;funcret
 14820  005488                     __end_of_INTERRUPT_Initialize:
 14821                           	callstack 0
 14822                           
 14823 ;; *************** function _CLC3_Initialize *****************
 14824 ;; Defined at:
 14825 ;;		line 58 in file "mcc_generated_files/clc3.c"
 14826 ;; Parameters:    Size  Location     Type
 14827 ;;		None
 14828 ;; Auto vars:     Size  Location     Type
 14829 ;;		None
 14830 ;; Return value:  Size  Location     Type
 14831 ;;                  1    wreg      void 
 14832 ;; Registers used:
 14833 ;;		wreg, status,2
 14834 ;; Tracked objects:
 14835 ;;		On entry : 0/0
 14836 ;;		On exit  : 0/0
 14837 ;;		Unchanged: 0/0
 14838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14843 ;;Total ram usage:        0 bytes
 14844 ;; Hardware stack levels used: 1
 14845 ;; Hardware stack levels required when called: 8
 14846 ;; This function calls:
 14847 ;;		Nothing
 14848 ;; This function is called by:
 14849 ;;		_SYSTEM_Initialize
 14850 ;; This function uses a non-reentrant model
 14851 ;;
 14852                           
 14853                           	psect	text71
 14854  005B30                     __ptext71:
 14855                           	callstack 0
 14856  005B30                     _CLC3_Initialize:
 14857                           	callstack 21
 14858  005B30                     
 14859                           ;mcc_generated_files/clc3.c: 63:     CLC3POL = 0x00;
 14860  005B30  0E00               	movlw	0
 14861  005B32  013C               	movlb	60	; () banked
 14862  005B34  6F61               	movwf	97,b	;volatile
 14863                           
 14864                           ;mcc_generated_files/clc3.c: 65:     CLC3SEL0 = 0x03;
 14865  005B36  0E03               	movlw	3
 14866  005B38  6F62               	movwf	98,b	;volatile
 14867                           
 14868                           ;mcc_generated_files/clc3.c: 67:     CLC3SEL1 = 0x02;
 14869  005B3A  0E02               	movlw	2
 14870  005B3C  6F63               	movwf	99,b	;volatile
 14871                           
 14872                           ;mcc_generated_files/clc3.c: 69:     CLC3SEL2 = 0x00;
 14873  005B3E  0E00               	movlw	0
 14874  005B40  6F64               	movwf	100,b	;volatile
 14875                           
 14876                           ;mcc_generated_files/clc3.c: 71:     CLC3SEL3 = 0x00;
 14877  005B42  0E00               	movlw	0
 14878  005B44  6F65               	movwf	101,b	;volatile
 14879                           
 14880                           ;mcc_generated_files/clc3.c: 73:     CLC3GLS0 = 0x02;
 14881  005B46  0E02               	movlw	2
 14882  005B48  6F66               	movwf	102,b	;volatile
 14883                           
 14884                           ;mcc_generated_files/clc3.c: 75:     CLC3GLS1 = 0x08;
 14885  005B4A  0E08               	movlw	8
 14886  005B4C  6F67               	movwf	103,b	;volatile
 14887                           
 14888                           ;mcc_generated_files/clc3.c: 77:     CLC3GLS2 = 0x00;
 14889  005B4E  0E00               	movlw	0
 14890  005B50  6F68               	movwf	104,b	;volatile
 14891                           
 14892                           ;mcc_generated_files/clc3.c: 79:     CLC3GLS3 = 0x00;
 14893  005B52  0E00               	movlw	0
 14894  005B54  6F69               	movwf	105,b	;volatile
 14895                           
 14896                           ;mcc_generated_files/clc3.c: 81:     CLC3CON = 0x85;
 14897  005B56  0E85               	movlw	133
 14898  005B58  6F60               	movwf	96,b	;volatile
 14899  005B5A                     
 14900                           ; BSR set to: 60
 14901  005B5A  0012               	return		;funcret
 14902  005B5C                     __end_of_CLC3_Initialize:
 14903                           	callstack 0
 14904                           
 14905 ;; *************** function _CCP4_Initialize *****************
 14906 ;; Defined at:
 14907 ;;		line 78 in file "mcc_generated_files/ccp4.c"
 14908 ;; Parameters:    Size  Location     Type
 14909 ;;		None
 14910 ;; Auto vars:     Size  Location     Type
 14911 ;;		None
 14912 ;; Return value:  Size  Location     Type
 14913 ;;                  1    wreg      void 
 14914 ;; Registers used:
 14915 ;;		wreg, status,2, status,0, cstack
 14916 ;; Tracked objects:
 14917 ;;		On entry : 0/0
 14918 ;;		On exit  : 0/0
 14919 ;;		Unchanged: 0/0
 14920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14925 ;;Total ram usage:        0 bytes
 14926 ;; Hardware stack levels used: 1
 14927 ;; Hardware stack levels required when called: 9
 14928 ;; This function calls:
 14929 ;;		_CCP4_SetCallBack
 14930 ;; This function is called by:
 14931 ;;		_SYSTEM_Initialize
 14932 ;; This function uses a non-reentrant model
 14933 ;;
 14934                           
 14935                           	psect	text72
 14936  005A7A                     __ptext72:
 14937                           	callstack 0
 14938  005A7A                     _CCP4_Initialize:
 14939                           	callstack 20
 14940  005A7A                     
 14941                           ;mcc_generated_files/ccp4.c: 83:  CCP4CON = 0x83;
 14942  005A7A  0E83               	movlw	131
 14943  005A7C  6E72               	movwf	114,c	;volatile
 14944                           
 14945                           ;mcc_generated_files/ccp4.c: 86:  CCP4CAP = 0x00;
 14946  005A7E  0E00               	movlw	0
 14947  005A80  6E73               	movwf	115,c	;volatile
 14948                           
 14949                           ;mcc_generated_files/ccp4.c: 89:  CCPR4H = 0x00;
 14950  005A82  0E00               	movlw	0
 14951  005A84  6E71               	movwf	113,c	;volatile
 14952                           
 14953                           ;mcc_generated_files/ccp4.c: 92:  CCPR4L = 0x00;
 14954  005A86  0E00               	movlw	0
 14955  005A88  6E70               	movwf	112,c	;volatile
 14956  005A8A                     
 14957                           ;mcc_generated_files/ccp4.c: 95:     CCP4_SetCallBack(CCP4_DefaultCallBack);
 14958  005A8A  0E74               	movlw	low _CCP4_DefaultCallBack
 14959  005A8C  6E14               	movwf	CCP4_SetCallBack@customCallBack^0,c
 14960  005A8E  0E58               	movlw	high _CCP4_DefaultCallBack
 14961  005A90  6E15               	movwf	(CCP4_SetCallBack@customCallBack+1)^0,c
 14962  005A92  ECBE  F02E         	call	_CCP4_SetCallBack	;wreg free
 14963  005A96                     
 14964                           ;mcc_generated_files/ccp4.c: 98:  CCPTMRS0bits.C4TSEL = 0x2;
 14965  005A96  013F               	movlb	63	; () banked
 14966  005A98  515E               	movf	94,w,b	;volatile
 14967  005A9A  0B3F               	andlw	-193
 14968  005A9C  0980               	iorlw	128
 14969  005A9E  6F5E               	movwf	94,b	;volatile
 14970  005AA0                     
 14971                           ; BSR set to: 63
 14972                           ;mcc_generated_files/ccp4.c: 101:     PIR10bits.CCP4IF = 0;
 14973  005AA0  0139               	movlb	57	; () banked
 14974  005AA2  91AA               	bcf	170,0,b	;volatile
 14975  005AA4                     
 14976                           ; BSR set to: 57
 14977                           ;mcc_generated_files/ccp4.c: 104:     PIE10bits.CCP4IE = 1;
 14978  005AA4  819A               	bsf	154,0,b	;volatile
 14979  005AA6                     
 14980                           ; BSR set to: 57
 14981  005AA6  0012               	return		;funcret
 14982  005AA8                     __end_of_CCP4_Initialize:
 14983                           	callstack 0
 14984                           
 14985 ;; *************** function _CCP4_SetCallBack *****************
 14986 ;; Defined at:
 14987 ;;		line 75 in file "mcc_generated_files/ccp4.c"
 14988 ;; Parameters:    Size  Location     Type
 14989 ;;  customCallBa    2   19[COMRAM] PTR FTN(unsigned short ,
 14990 ;;		 -> CCP4_DefaultCallBack(1), 
 14991 ;; Auto vars:     Size  Location     Type
 14992 ;;		None
 14993 ;; Return value:  Size  Location     Type
 14994 ;;                  1    wreg      void 
 14995 ;; Registers used:
 14996 ;;		wreg, status,2, status,0
 14997 ;; Tracked objects:
 14998 ;;		On entry : 0/0
 14999 ;;		On exit  : 0/0
 15000 ;;		Unchanged: 0/0
 15001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15002 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15005 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15006 ;;Total ram usage:        2 bytes
 15007 ;; Hardware stack levels used: 1
 15008 ;; Hardware stack levels required when called: 8
 15009 ;; This function calls:
 15010 ;;		Nothing
 15011 ;; This function is called by:
 15012 ;;		_CCP4_Initialize
 15013 ;; This function uses a non-reentrant model
 15014 ;;
 15015                           
 15016                           	psect	text73
 15017  005D7C                     __ptext73:
 15018                           	callstack 0
 15019  005D7C                     _CCP4_SetCallBack:
 15020                           	callstack 20
 15021  005D7C                     
 15022                           ;mcc_generated_files/ccp4.c: 76:     CCP4_CallBack = customCallBack;
 15023  005D7C  C014  F192         	movff	CCP4_SetCallBack@customCallBack,_CCP4_CallBack
 15024  005D80  C015  F193         	movff	CCP4_SetCallBack@customCallBack+1,_CCP4_CallBack+1
 15025  005D84  0012               	return		;funcret
 15026  005D86                     __end_of_CCP4_SetCallBack:
 15027                           	callstack 0
 15028                           
 15029 ;; *************** function _CCP3_Initialize *****************
 15030 ;; Defined at:
 15031 ;;		line 75 in file "mcc_generated_files/ccp3.c"
 15032 ;; Parameters:    Size  Location     Type
 15033 ;;		None
 15034 ;; Auto vars:     Size  Location     Type
 15035 ;;		None
 15036 ;; Return value:  Size  Location     Type
 15037 ;;                  1    wreg      void 
 15038 ;; Registers used:
 15039 ;;		wreg, status,2, status,0, cstack
 15040 ;; Tracked objects:
 15041 ;;		On entry : 0/0
 15042 ;;		On exit  : 0/0
 15043 ;;		Unchanged: 0/0
 15044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15049 ;;Total ram usage:        0 bytes
 15050 ;; Hardware stack levels used: 1
 15051 ;; Hardware stack levels required when called: 9
 15052 ;; This function calls:
 15053 ;;		_CCP3_SetCallBack
 15054 ;; This function is called by:
 15055 ;;		_SYSTEM_Initialize
 15056 ;; This function uses a non-reentrant model
 15057 ;;
 15058                           
 15059                           	psect	text74
 15060  005AA8                     __ptext74:
 15061                           	callstack 0
 15062  005AA8                     _CCP3_Initialize:
 15063                           	callstack 20
 15064  005AA8                     
 15065                           ;mcc_generated_files/ccp3.c: 80:  CCP3CON = 0x83;
 15066  005AA8  0E83               	movlw	131
 15067  005AAA  6E76               	movwf	118,c	;volatile
 15068                           
 15069                           ;mcc_generated_files/ccp3.c: 83:  CCP3CAP = 0x00;
 15070  005AAC  0E00               	movlw	0
 15071  005AAE  6E77               	movwf	119,c	;volatile
 15072                           
 15073                           ;mcc_generated_files/ccp3.c: 86:  CCPR3H = 0x00;
 15074  005AB0  0E00               	movlw	0
 15075  005AB2  6E75               	movwf	117,c	;volatile
 15076                           
 15077                           ;mcc_generated_files/ccp3.c: 89:  CCPR3L = 0x00;
 15078  005AB4  0E00               	movlw	0
 15079  005AB6  6E74               	movwf	116,c	;volatile
 15080  005AB8                     
 15081                           ;mcc_generated_files/ccp3.c: 92:     CCP3_SetCallBack(CCP3_DefaultCallBack);
 15082  005AB8  0E3E               	movlw	low _CCP3_DefaultCallBack
 15083  005ABA  6E14               	movwf	CCP3_SetCallBack@customCallBack^0,c
 15084  005ABC  0E58               	movlw	high _CCP3_DefaultCallBack
 15085  005ABE  6E15               	movwf	(CCP3_SetCallBack@customCallBack+1)^0,c
 15086  005AC0  ECC3  F02E         	call	_CCP3_SetCallBack	;wreg free
 15087  005AC4                     
 15088                           ;mcc_generated_files/ccp3.c: 95:  CCPTMRS0bits.C3TSEL = 0x2;
 15089  005AC4  013F               	movlb	63	; () banked
 15090  005AC6  515E               	movf	94,w,b	;volatile
 15091  005AC8  0BCF               	andlw	-49
 15092  005ACA  0920               	iorlw	32
 15093  005ACC  6F5E               	movwf	94,b	;volatile
 15094  005ACE                     
 15095                           ; BSR set to: 63
 15096                           ;mcc_generated_files/ccp3.c: 98:     PIR9bits.CCP3IF = 0;
 15097  005ACE  0139               	movlb	57	; () banked
 15098  005AD0  93A9               	bcf	169,1,b	;volatile
 15099  005AD2                     
 15100                           ; BSR set to: 57
 15101                           ;mcc_generated_files/ccp3.c: 101:     PIE9bits.CCP3IE = 1;
 15102  005AD2  8399               	bsf	153,1,b	;volatile
 15103  005AD4                     
 15104                           ; BSR set to: 57
 15105  005AD4  0012               	return		;funcret
 15106  005AD6                     __end_of_CCP3_Initialize:
 15107                           	callstack 0
 15108                           
 15109 ;; *************** function _CCP3_SetCallBack *****************
 15110 ;; Defined at:
 15111 ;;		line 119 in file "mcc_generated_files/ccp3.c"
 15112 ;; Parameters:    Size  Location     Type
 15113 ;;  customCallBa    2   19[COMRAM] PTR FTN(unsigned short ,
 15114 ;;		 -> CCP3_DefaultCallBack(1), 
 15115 ;; Auto vars:     Size  Location     Type
 15116 ;;		None
 15117 ;; Return value:  Size  Location     Type
 15118 ;;                  1    wreg      void 
 15119 ;; Registers used:
 15120 ;;		wreg, status,2, status,0
 15121 ;; Tracked objects:
 15122 ;;		On entry : 0/0
 15123 ;;		On exit  : 0/0
 15124 ;;		Unchanged: 0/0
 15125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15126 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15129 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15130 ;;Total ram usage:        2 bytes
 15131 ;; Hardware stack levels used: 1
 15132 ;; Hardware stack levels required when called: 8
 15133 ;; This function calls:
 15134 ;;		Nothing
 15135 ;; This function is called by:
 15136 ;;		_CCP3_Initialize
 15137 ;; This function uses a non-reentrant model
 15138 ;;
 15139                           
 15140                           	psect	text75
 15141  005D86                     __ptext75:
 15142                           	callstack 0
 15143  005D86                     _CCP3_SetCallBack:
 15144                           	callstack 20
 15145  005D86                     
 15146                           ;mcc_generated_files/ccp3.c: 120:     CCP3_CallBack = customCallBack;
 15147  005D86  C014  F194         	movff	CCP3_SetCallBack@customCallBack,_CCP3_CallBack
 15148  005D8A  C015  F195         	movff	CCP3_SetCallBack@customCallBack+1,_CCP3_CallBack+1
 15149  005D8E  0012               	return		;funcret
 15150  005D90                     __end_of_CCP3_SetCallBack:
 15151                           	callstack 0
 15152                           
 15153 ;; *************** function _ADCC_Initialize *****************
 15154 ;; Defined at:
 15155 ;;		line 62 in file "mcc_generated_files/adcc.c"
 15156 ;; Parameters:    Size  Location     Type
 15157 ;;		None
 15158 ;; Auto vars:     Size  Location     Type
 15159 ;;		None
 15160 ;; Return value:  Size  Location     Type
 15161 ;;                  1    wreg      void 
 15162 ;; Registers used:
 15163 ;;		wreg, status,2
 15164 ;; Tracked objects:
 15165 ;;		On entry : 0/0
 15166 ;;		On exit  : 0/0
 15167 ;;		Unchanged: 0/0
 15168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15173 ;;Total ram usage:        0 bytes
 15174 ;; Hardware stack levels used: 1
 15175 ;; Hardware stack levels required when called: 8
 15176 ;; This function calls:
 15177 ;;		Nothing
 15178 ;; This function is called by:
 15179 ;;		_SYSTEM_Initialize
 15180 ;; This function uses a non-reentrant model
 15181 ;;
 15182                           
 15183                           	psect	text76
 15184  00538C                     __ptext76:
 15185                           	callstack 0
 15186  00538C                     _ADCC_Initialize:
 15187                           	callstack 21
 15188  00538C                     
 15189                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
 15190  00538C  0E00               	movlw	0
 15191  00538E  013E               	movlb	62	; () banked
 15192  005390  6FDE               	movwf	222,b	;volatile
 15193                           
 15194                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
 15195  005392  0E00               	movlw	0
 15196  005394  6FDF               	movwf	223,b	;volatile
 15197                           
 15198                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
 15199  005396  0E00               	movlw	0
 15200  005398  6FE0               	movwf	224,b	;volatile
 15201                           
 15202                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
 15203  00539A  0E00               	movlw	0
 15204  00539C  6FE1               	movwf	225,b	;volatile
 15205                           
 15206                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
 15207  00539E  0E00               	movlw	0
 15208  0053A0  6FE4               	movwf	228,b	;volatile
 15209                           
 15210                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
 15211  0053A2  0E00               	movlw	0
 15212  0053A4  6FE5               	movwf	229,b	;volatile
 15213                           
 15214                           ;mcc_generated_files/adcc.c: 78:     ADACCU = 0x00;
 15215  0053A6  0E00               	movlw	0
 15216  0053A8  6FEA               	movwf	234,b	;volatile
 15217                           
 15218                           ;mcc_generated_files/adcc.c: 80:     ADRPT = 0x00;
 15219  0053AA  0E00               	movlw	0
 15220  0053AC  6FEC               	movwf	236,b	;volatile
 15221                           
 15222                           ;mcc_generated_files/adcc.c: 82:     ADPCH = 0x00;
 15223  0053AE  0E00               	movlw	0
 15224  0053B0  6FF1               	movwf	241,b	;volatile
 15225                           
 15226                           ;mcc_generated_files/adcc.c: 84:     ADACQL = 0x58;
 15227  0053B2  0E58               	movlw	88
 15228  0053B4  6FF3               	movwf	243,b	;volatile
 15229                           
 15230                           ;mcc_generated_files/adcc.c: 86:     ADACQH = 0x02;
 15231  0053B6  0E02               	movlw	2
 15232  0053B8  6FF4               	movwf	244,b	;volatile
 15233                           
 15234                           ;mcc_generated_files/adcc.c: 88:     ADCAP = 0x00;
 15235  0053BA  0E00               	movlw	0
 15236  0053BC  6FF5               	movwf	245,b	;volatile
 15237                           
 15238                           ;mcc_generated_files/adcc.c: 90:     ADPREL = 0x00;
 15239  0053BE  0E00               	movlw	0
 15240  0053C0  6FF6               	movwf	246,b	;volatile
 15241                           
 15242                           ;mcc_generated_files/adcc.c: 92:     ADPREH = 0x00;
 15243  0053C2  0E00               	movlw	0
 15244  0053C4  6FF7               	movwf	247,b	;volatile
 15245                           
 15246                           ;mcc_generated_files/adcc.c: 94:     ADCON1 = 0x00;
 15247  0053C6  0E00               	movlw	0
 15248  0053C8  6FF9               	movwf	249,b	;volatile
 15249                           
 15250                           ;mcc_generated_files/adcc.c: 96:     ADCON2 = 0x00;
 15251  0053CA  0E00               	movlw	0
 15252  0053CC  6FFA               	movwf	250,b	;volatile
 15253                           
 15254                           ;mcc_generated_files/adcc.c: 98:     ADCON3 = 0x00;
 15255  0053CE  0E00               	movlw	0
 15256  0053D0  6FFB               	movwf	251,b	;volatile
 15257                           
 15258                           ;mcc_generated_files/adcc.c: 100:     ADSTAT = 0x00;
 15259  0053D2  0E00               	movlw	0
 15260  0053D4  6FFC               	movwf	252,b	;volatile
 15261                           
 15262                           ;mcc_generated_files/adcc.c: 102:     ADREF = 0x00;
 15263  0053D6  0E00               	movlw	0
 15264  0053D8  6FFD               	movwf	253,b	;volatile
 15265                           
 15266                           ;mcc_generated_files/adcc.c: 104:     ADACT = 0x00;
 15267  0053DA  0E00               	movlw	0
 15268  0053DC  6FFE               	movwf	254,b	;volatile
 15269                           
 15270                           ;mcc_generated_files/adcc.c: 106:     ADCLK = 0x1F;
 15271  0053DE  0E1F               	movlw	31
 15272  0053E0  6FFF               	movwf	255,b	;volatile
 15273                           
 15274                           ;mcc_generated_files/adcc.c: 108:     ADCON0 = 0x84;
 15275  0053E2  0E84               	movlw	132
 15276  0053E4  6FF8               	movwf	248,b	;volatile
 15277  0053E6                     
 15278                           ; BSR set to: 62
 15279  0053E6  0012               	return		;funcret
 15280  0053E8                     __end_of_ADCC_Initialize:
 15281                           	callstack 0
 15282                           
 15283 ;; *************** function _UART1_tx_vect_isr *****************
 15284 ;; Defined at:
 15285 ;;		line 235 in file "mcc_generated_files/uart1.c"
 15286 ;; Parameters:    Size  Location     Type
 15287 ;;		None
 15288 ;; Auto vars:     Size  Location     Type
 15289 ;;		None
 15290 ;; Return value:  Size  Location     Type
 15291 ;;                  1    wreg      void 
 15292 ;; Registers used:
 15293 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 15294 ;; Tracked objects:
 15295 ;;		On entry : 0/0
 15296 ;;		On exit  : 0/0
 15297 ;;		Unchanged: 0/0
 15298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15301 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15302 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15303 ;;Total ram usage:        1 bytes
 15304 ;; Hardware stack levels used: 1
 15305 ;; Hardware stack levels required when called: 5
 15306 ;; This function calls:
 15307 ;;		Absolute function
 15308 ;;		_UART1_Transmit_ISR
 15309 ;; This function is called by:
 15310 ;;		Interrupt level 1
 15311 ;; This function uses a non-reentrant model
 15312 ;;
 15313                           
 15314                           	psect	text77
 15315  0056B0                     __ptext77:
 15316                           	callstack 0
 15317  0056B0                     _UART1_tx_vect_isr:
 15318                           	callstack 13
 15319                           
 15320                           ; BSR set to: 62
 15321                           ;incstack = 0
 15322  0056B0  006F FF60  F011    	movff	status,??_UART1_tx_vect_isr
 15323  0056B6                     
 15324                           ;mcc_generated_files/uart1.c: 237:     if(UART1_TxInterruptHandler)
 15325  0056B6  0101               	movlb	1	; () banked
 15326  0056B8  519C               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 15327  0056BA  119D               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 15328  0056BC  B4D8               	btfsc	status,2,c
 15329  0056BE  EF63  F02B         	goto	i1u708_21
 15330  0056C2  EF65  F02B         	goto	i1u708_20
 15331  0056C6                     i1u708_21:
 15332  0056C6  EF71  F02B         	goto	i1l324
 15333  0056CA                     i1u708_20:
 15334  0056CA                     
 15335                           ; BSR set to: 1
 15336                           ;mcc_generated_files/uart1.c: 238:     {;mcc_generated_files/uart1.c: 239:         UART1
      +                          _TxInterruptHandler();
 15337  0056CA  D802               	call	i1u709_28
 15338  0056CC  EF71  F02B         	goto	i1u709_29
 15339  0056D0                     i1u709_28:
 15340  0056D0  0005               	push	
 15341  0056D2  6EFA               	movwf	pclath,c
 15342  0056D4  519C               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 15343  0056D6  6EFD               	movwf	tosl,c
 15344  0056D8  519D               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 15345  0056DA  6EFE               	movwf	tosh,c
 15346  0056DC  6AFF               	clrf	tosu,c
 15347  0056DE  50FA               	movf	pclath,w,c
 15348  0056E0  0012               	return		;indir
 15349  0056E2                     i1u709_29:
 15350  0056E2                     i1l324:
 15351  0056E2  0060  F047  FFD8   	movff	??_UART1_tx_vect_isr,status
 15352  0056E8  0011               	retfie		f
 15353  0056EA                     __end_of_UART1_tx_vect_isr:
 15354                           	callstack 0
 15355                           
 15356 ;; *************** function _UART1_Transmit_ISR *****************
 15357 ;; Defined at:
 15358 ;;		line 253 in file "mcc_generated_files/uart1.c"
 15359 ;; Parameters:    Size  Location     Type
 15360 ;;		None
 15361 ;; Auto vars:     Size  Location     Type
 15362 ;;		None
 15363 ;; Return value:  Size  Location     Type
 15364 ;;                  1    wreg      void 
 15365 ;; Registers used:
 15366 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15367 ;; Tracked objects:
 15368 ;;		On entry : 0/0
 15369 ;;		On exit  : 0/0
 15370 ;;		Unchanged: 0/0
 15371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15376 ;;Total ram usage:        0 bytes
 15377 ;; Hardware stack levels used: 1
 15378 ;; Hardware stack levels required when called: 4
 15379 ;; This function calls:
 15380 ;;		Nothing
 15381 ;; This function is called by:
 15382 ;;		_UART1_Initialize
 15383 ;;		_UART1_tx_vect_isr
 15384 ;; This function uses a non-reentrant model
 15385 ;;
 15386                           
 15387                           	psect	text78
 15388  0055F2                     __ptext78:
 15389                           	callstack 0
 15390  0055F2                     _UART1_Transmit_ISR:
 15391                           	callstack 13
 15392  0055F2                     
 15393                           ;mcc_generated_files/uart1.c: 256:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
 15394  0055F2  0E08               	movlw	8
 15395  0055F4  604C               	cpfslt	_uart1TxBufferRemaining^0,c	;volatile
 15396  0055F6  EFFF  F02A         	goto	i1u689_21
 15397  0055FA  EF01  F02B         	goto	i1u689_20
 15398  0055FE                     i1u689_21:
 15399  0055FE  EF18  F02B         	goto	i1l333
 15400  005602                     i1u689_20:
 15401  005602                     
 15402                           ;mcc_generated_files/uart1.c: 257:     {;mcc_generated_files/uart1.c: 258:         U1TXB
      +                           = uart1TxBuffer[uart1TxTail++];
 15403  005602  0E10               	movlw	low _uart1TxBuffer
 15404  005604  2446               	addwf	_uart1TxTail^0,w,c	;volatile
 15405  005606  6ED9               	movwf	fsr2l,c
 15406  005608  6ADA               	clrf	fsr2h,c
 15407  00560A  0E01               	movlw	high _uart1TxBuffer
 15408  00560C  22DA               	addwfc	fsr2h,f,c
 15409  00560E  50DF               	movf	indf2,w,c
 15410  005610  013D               	movlb	61	; () banked
 15411  005612  6FEA               	movwf	234,b	;volatile
 15412  005614                     
 15413                           ; BSR set to: 61
 15414  005614  2A46               	incf	_uart1TxTail^0,f,c	;volatile
 15415  005616                     
 15416                           ; BSR set to: 61
 15417                           ;mcc_generated_files/uart1.c: 259:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
 15418  005616  0E07               	movlw	7
 15419  005618  6446               	cpfsgt	_uart1TxTail^0,c	;volatile
 15420  00561A  EF11  F02B         	goto	i1u690_21
 15421  00561E  EF13  F02B         	goto	i1u690_20
 15422  005622                     i1u690_21:
 15423  005622  EF15  F02B         	goto	i1l7081
 15424  005626                     i1u690_20:
 15425  005626                     
 15426                           ; BSR set to: 61
 15427                           ;mcc_generated_files/uart1.c: 260:         {;mcc_generated_files/uart1.c: 261:          
      +                             uart1TxTail = 0;
 15428  005626  0E00               	movlw	0
 15429  005628  6E46               	movwf	_uart1TxTail^0,c	;volatile
 15430  00562A                     i1l7081:
 15431                           
 15432                           ; BSR set to: 61
 15433                           ;mcc_generated_files/uart1.c: 263:         uart1TxBufferRemaining++;
 15434  00562A  2A4C               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 15435                           
 15436                           ;mcc_generated_files/uart1.c: 264:     }
 15437  00562C  EF1A  F02B         	goto	i1l336
 15438  005630                     i1l333:
 15439                           
 15440                           ;mcc_generated_files/uart1.c: 266:     {;mcc_generated_files/uart1.c: 267:         PIE3b
      +                          its.U1TXIE = 0;
 15441  005630  0139               	movlb	57	; () banked
 15442  005632  9993               	bcf	147,4,b	;volatile
 15443  005634                     i1l336:
 15444  005634  0012               	return		;funcret
 15445  005636                     __end_of_UART1_Transmit_ISR:
 15446                           	callstack 0
 15447                           
 15448 ;; *************** function _UART1_rx_vect_isr *****************
 15449 ;; Defined at:
 15450 ;;		line 243 in file "mcc_generated_files/uart1.c"
 15451 ;; Parameters:    Size  Location     Type
 15452 ;;		None
 15453 ;; Auto vars:     Size  Location     Type
 15454 ;;		None
 15455 ;; Return value:  Size  Location     Type
 15456 ;;                  1    wreg      void 
 15457 ;; Registers used:
 15458 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 15459 ;; Tracked objects:
 15460 ;;		On entry : 0/0
 15461 ;;		On exit  : 0/0
 15462 ;;		Unchanged: 0/0
 15463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15466 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15467 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15468 ;;Total ram usage:        1 bytes
 15469 ;; Hardware stack levels used: 1
 15470 ;; Hardware stack levels required when called: 7
 15471 ;; This function calls:
 15472 ;;		Absolute function
 15473 ;;		_UART1_Receive_ISR
 15474 ;; This function is called by:
 15475 ;;		Interrupt level 1
 15476 ;; This function uses a non-reentrant model
 15477 ;;
 15478                           
 15479                           	psect	text79
 15480  0056EC                     __ptext79:
 15481                           	callstack 0
 15482  0056EC                     _UART1_rx_vect_isr:
 15483                           	callstack 11
 15484                           
 15485                           ;incstack = 0
 15486  0056EC  006F FF60  F012    	movff	status,??_UART1_rx_vect_isr
 15487  0056F2                     
 15488                           ;mcc_generated_files/uart1.c: 245:     if(UART1_RxInterruptHandler)
 15489  0056F2  0101               	movlb	1	; () banked
 15490  0056F4  519E               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 15491  0056F6  119F               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 15492  0056F8  B4D8               	btfsc	status,2,c
 15493  0056FA  EF81  F02B         	goto	i1u710_21
 15494  0056FE  EF83  F02B         	goto	i1u710_20
 15495  005702                     i1u710_21:
 15496  005702  EF8F  F02B         	goto	i1l330
 15497  005706                     i1u710_20:
 15498  005706                     
 15499                           ; BSR set to: 1
 15500                           ;mcc_generated_files/uart1.c: 246:     {;mcc_generated_files/uart1.c: 247:         UART1
      +                          _RxInterruptHandler();
 15501  005706  D802               	call	i1u711_28
 15502  005708  EF8F  F02B         	goto	i1u711_29
 15503  00570C                     i1u711_28:
 15504  00570C  0005               	push	
 15505  00570E  6EFA               	movwf	pclath,c
 15506  005710  519E               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 15507  005712  6EFD               	movwf	tosl,c
 15508  005714  519F               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 15509  005716  6EFE               	movwf	tosh,c
 15510  005718  6AFF               	clrf	tosu,c
 15511  00571A  50FA               	movf	pclath,w,c
 15512  00571C  0012               	return		;indir
 15513  00571E                     i1u711_29:
 15514  00571E                     i1l330:
 15515  00571E  0060  F04B  FFD8   	movff	??_UART1_rx_vect_isr,status
 15516  005724  0011               	retfie		f
 15517  005726                     __end_of_UART1_rx_vect_isr:
 15518                           	callstack 0
 15519                           
 15520 ;; *************** function _UART1_Receive_ISR *****************
 15521 ;; Defined at:
 15522 ;;		line 273 in file "mcc_generated_files/uart1.c"
 15523 ;; Parameters:    Size  Location     Type
 15524 ;;		None
 15525 ;; Auto vars:     Size  Location     Type
 15526 ;;		None
 15527 ;; Return value:  Size  Location     Type
 15528 ;;                  1    wreg      void 
 15529 ;; Registers used:
 15530 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 15531 ;; Tracked objects:
 15532 ;;		On entry : 0/0
 15533 ;;		On exit  : 0/0
 15534 ;;		Unchanged: 0/0
 15535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15540 ;;Total ram usage:        0 bytes
 15541 ;; Hardware stack levels used: 1
 15542 ;; Hardware stack levels required when called: 6
 15543 ;; This function calls:
 15544 ;;		Absolute function
 15545 ;;		_UART1_DefaultErrorHandler
 15546 ;;		_UART1_DefaultFramingErrorHandler
 15547 ;;		_UART1_DefaultOverrunErrorHandler
 15548 ;;		_UART1_RxDataHandler
 15549 ;; This function is called by:
 15550 ;;		_UART1_Initialize
 15551 ;;		_UART1_rx_vect_isr
 15552 ;; This function uses a non-reentrant model
 15553 ;;
 15554                           
 15555                           	psect	text80
 15556  004D08                     __ptext80:
 15557                           	callstack 0
 15558  004D08                     _UART1_Receive_ISR:
 15559                           	callstack 11
 15560  004D08                     
 15561                           ;mcc_generated_files/uart1.c: 276:     uart1RxStatusBuffer[uart1RxHead].status = 0;
 15562  004D08  0E00               	movlw	low _uart1RxStatusBuffer
 15563  004D0A  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 15564  004D0C  6ED9               	movwf	fsr2l,c
 15565  004D0E  6ADA               	clrf	fsr2h,c
 15566  004D10  0E01               	movlw	high _uart1RxStatusBuffer
 15567  004D12  22DA               	addwfc	fsr2h,f,c
 15568  004D14  0E00               	movlw	0
 15569  004D16  6EDF               	movwf	indf2,c
 15570  004D18                     
 15571                           ;mcc_generated_files/uart1.c: 278:     if(U1ERRIRbits.FERIF){
 15572  004D18  013D               	movlb	61	; () banked
 15573  004D1A  A7F9               	btfss	249,3,b	;volatile
 15574  004D1C  EF92  F026         	goto	i1u691_21
 15575  004D20  EF94  F026         	goto	i1u691_20
 15576  004D24                     i1u691_21:
 15577  004D24  EFA8  F026         	goto	i1l7091
 15578  004D28                     i1u691_20:
 15579  004D28                     
 15580                           ; BSR set to: 61
 15581                           ;mcc_generated_files/uart1.c: 279:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
 15582  004D28  0E00               	movlw	low _uart1RxStatusBuffer
 15583  004D2A  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 15584  004D2C  6ED9               	movwf	fsr2l,c
 15585  004D2E  6ADA               	clrf	fsr2h,c
 15586  004D30  0E01               	movlw	high _uart1RxStatusBuffer
 15587  004D32  22DA               	addwfc	fsr2h,f,c
 15588  004D34  0101               	movlb	1	; () banked
 15589  004D36  82DF               	bsf	indf2,1,c
 15590  004D38                     
 15591                           ; BSR set to: 1
 15592                           ;mcc_generated_files/uart1.c: 280:         UART1_FramingErrorHandler();
 15593  004D38  D802               	call	i1u692_28
 15594  004D3A  EFA8  F026         	goto	i1u692_29
 15595  004D3E                     i1u692_28:
 15596  004D3E  0005               	push	
 15597  004D40  6EFA               	movwf	pclath,c
 15598  004D42  519A               	movf	_UART1_FramingErrorHandler& (0+255),w,b
 15599  004D44  6EFD               	movwf	tosl,c
 15600  004D46  519B               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
 15601  004D48  6EFE               	movwf	tosh,c
 15602  004D4A  6AFF               	clrf	tosu,c
 15603  004D4C  50FA               	movf	pclath,w,c
 15604  004D4E  0012               	return		;indir
 15605  004D50                     i1u692_29:
 15606  004D50                     i1l7091:
 15607                           
 15608                           ;mcc_generated_files/uart1.c: 283:     if(U1ERRIRbits.RXFOIF){
 15609  004D50  013D               	movlb	61	; () banked
 15610  004D52  A3F9               	btfss	249,1,b	;volatile
 15611  004D54  EFAE  F026         	goto	i1u693_21
 15612  004D58  EFB0  F026         	goto	i1u693_20
 15613  004D5C                     i1u693_21:
 15614  004D5C  EFC4  F026         	goto	i1l7097
 15615  004D60                     i1u693_20:
 15616  004D60                     
 15617                           ; BSR set to: 61
 15618                           ;mcc_generated_files/uart1.c: 284:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
 15619  004D60  0E00               	movlw	low _uart1RxStatusBuffer
 15620  004D62  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 15621  004D64  6ED9               	movwf	fsr2l,c
 15622  004D66  6ADA               	clrf	fsr2h,c
 15623  004D68  0E01               	movlw	high _uart1RxStatusBuffer
 15624  004D6A  22DA               	addwfc	fsr2h,f,c
 15625  004D6C  0101               	movlb	1	; () banked
 15626  004D6E  84DF               	bsf	indf2,2,c
 15627  004D70                     
 15628                           ; BSR set to: 1
 15629                           ;mcc_generated_files/uart1.c: 285:         UART1_OverrunErrorHandler();
 15630  004D70  D802               	call	i1u694_28
 15631  004D72  EFC4  F026         	goto	i1u694_29
 15632  004D76                     i1u694_28:
 15633  004D76  0005               	push	
 15634  004D78  6EFA               	movwf	pclath,c
 15635  004D7A  5198               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
 15636  004D7C  6EFD               	movwf	tosl,c
 15637  004D7E  5199               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
 15638  004D80  6EFE               	movwf	tosh,c
 15639  004D82  6AFF               	clrf	tosu,c
 15640  004D84  50FA               	movf	pclath,w,c
 15641  004D86  0012               	return		;indir
 15642  004D88                     i1u694_29:
 15643  004D88                     i1l7097:
 15644                           
 15645                           ;mcc_generated_files/uart1.c: 288:     if(uart1RxStatusBuffer[uart1RxHead].status){
 15646  004D88  0E00               	movlw	low _uart1RxStatusBuffer
 15647  004D8A  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 15648  004D8C  6ED9               	movwf	fsr2l,c
 15649  004D8E  6ADA               	clrf	fsr2h,c
 15650  004D90  0E01               	movlw	high _uart1RxStatusBuffer
 15651  004D92  22DA               	addwfc	fsr2h,f,c
 15652  004D94  50DF               	movf	indf2,w,c
 15653  004D96  B4D8               	btfsc	status,2,c
 15654  004D98  EFD0  F026         	goto	i1u695_21
 15655  004D9C  EFD2  F026         	goto	i1u695_20
 15656  004DA0                     i1u695_21:
 15657  004DA0  EFE1  F026         	goto	i1l7101
 15658  004DA4                     i1u695_20:
 15659  004DA4                     
 15660                           ;mcc_generated_files/uart1.c: 289:         UART1_ErrorHandler();
 15661  004DA4  D802               	call	i1u696_28
 15662  004DA6  EFDF  F026         	goto	i1u696_29
 15663  004DAA                     i1u696_28:
 15664  004DAA  0005               	push	
 15665  004DAC  6EFA               	movwf	pclath,c
 15666  004DAE  0101               	movlb	1	; () banked
 15667  004DB0  5196               	movf	_UART1_ErrorHandler& (0+255),w,b
 15668  004DB2  6EFD               	movwf	tosl,c
 15669  004DB4  5197               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
 15670  004DB6  6EFE               	movwf	tosh,c
 15671  004DB8  6AFF               	clrf	tosu,c
 15672  004DBA  50FA               	movf	pclath,w,c
 15673  004DBC  0012               	return		;indir
 15674  004DBE                     i1u696_29:
 15675                           
 15676                           ;mcc_generated_files/uart1.c: 290:     } else {
 15677  004DBE  EFE3  F026         	goto	i1l343
 15678  004DC2                     i1l7101:
 15679                           
 15680                           ;mcc_generated_files/uart1.c: 291:         UART1_RxDataHandler();
 15681  004DC2  ECAE  F02D         	call	_UART1_RxDataHandler	;wreg free
 15682  004DC6                     i1l343:
 15683  004DC6  0012               	return		;funcret
 15684  004DC8                     __end_of_UART1_Receive_ISR:
 15685                           	callstack 0
 15686                           
 15687 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
 15688 ;; Defined at:
 15689 ;;		line 309 in file "mcc_generated_files/uart1.c"
 15690 ;; Parameters:    Size  Location     Type
 15691 ;;		None
 15692 ;; Auto vars:     Size  Location     Type
 15693 ;;		None
 15694 ;; Return value:  Size  Location     Type
 15695 ;;                  1    wreg      void 
 15696 ;; Registers used:
 15697 ;;		None
 15698 ;; Tracked objects:
 15699 ;;		On entry : 0/0
 15700 ;;		On exit  : 0/0
 15701 ;;		Unchanged: 0/0
 15702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15707 ;;Total ram usage:        0 bytes
 15708 ;; Hardware stack levels used: 1
 15709 ;; Hardware stack levels required when called: 4
 15710 ;; This function calls:
 15711 ;;		Nothing
 15712 ;; This function is called by:
 15713 ;;		_UART1_Initialize
 15714 ;;		_UART1_Receive_ISR
 15715 ;; This function uses a non-reentrant model
 15716 ;;
 15717                           
 15718                           	psect	text81
 15719  005DA0                     __ptext81:
 15720                           	callstack 0
 15721  005DA0                     _UART1_DefaultOverrunErrorHandler:
 15722                           	callstack 12
 15723  005DA0  0012               	return		;funcret
 15724  005DA2                     __end_of_UART1_DefaultOverrunErrorHandler:
 15725                           	callstack 0
 15726                           
 15727 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
 15728 ;; Defined at:
 15729 ;;		line 307 in file "mcc_generated_files/uart1.c"
 15730 ;; Parameters:    Size  Location     Type
 15731 ;;		None
 15732 ;; Auto vars:     Size  Location     Type
 15733 ;;		None
 15734 ;; Return value:  Size  Location     Type
 15735 ;;                  1    wreg      void 
 15736 ;; Registers used:
 15737 ;;		None
 15738 ;; Tracked objects:
 15739 ;;		On entry : 0/0
 15740 ;;		On exit  : 0/0
 15741 ;;		Unchanged: 0/0
 15742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15747 ;;Total ram usage:        0 bytes
 15748 ;; Hardware stack levels used: 1
 15749 ;; Hardware stack levels required when called: 4
 15750 ;; This function calls:
 15751 ;;		Nothing
 15752 ;; This function is called by:
 15753 ;;		_UART1_Initialize
 15754 ;;		_UART1_Receive_ISR
 15755 ;; This function uses a non-reentrant model
 15756 ;;
 15757                           
 15758                           	psect	text82
 15759  005DA2                     __ptext82:
 15760                           	callstack 0
 15761  005DA2                     _UART1_DefaultFramingErrorHandler:
 15762                           	callstack 12
 15763  005DA2  0012               	return		;funcret
 15764  005DA4                     __end_of_UART1_DefaultFramingErrorHandler:
 15765                           	callstack 0
 15766                           
 15767 ;; *************** function _UART1_DefaultErrorHandler *****************
 15768 ;; Defined at:
 15769 ;;		line 311 in file "mcc_generated_files/uart1.c"
 15770 ;; Parameters:    Size  Location     Type
 15771 ;;		None
 15772 ;; Auto vars:     Size  Location     Type
 15773 ;;		None
 15774 ;; Return value:  Size  Location     Type
 15775 ;;                  1    wreg      void 
 15776 ;; Registers used:
 15777 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15778 ;; Tracked objects:
 15779 ;;		On entry : 0/0
 15780 ;;		On exit  : 0/0
 15781 ;;		Unchanged: 0/0
 15782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15787 ;;Total ram usage:        0 bytes
 15788 ;; Hardware stack levels used: 1
 15789 ;; Hardware stack levels required when called: 5
 15790 ;; This function calls:
 15791 ;;		_UART1_RxDataHandler
 15792 ;; This function is called by:
 15793 ;;		_UART1_Initialize
 15794 ;;		_UART1_Receive_ISR
 15795 ;; This function uses a non-reentrant model
 15796 ;;
 15797                           
 15798                           	psect	text83
 15799  005D9A                     __ptext83:
 15800                           	callstack 0
 15801  005D9A                     _UART1_DefaultErrorHandler:
 15802                           	callstack 11
 15803  005D9A                     
 15804                           ;mcc_generated_files/uart1.c: 312:     UART1_RxDataHandler();
 15805  005D9A  ECAE  F02D         	call	_UART1_RxDataHandler	;wreg free
 15806  005D9E  0012               	return		;funcret
 15807  005DA0                     __end_of_UART1_DefaultErrorHandler:
 15808                           	callstack 0
 15809                           
 15810 ;; *************** function _UART1_RxDataHandler *****************
 15811 ;; Defined at:
 15812 ;;		line 297 in file "mcc_generated_files/uart1.c"
 15813 ;; Parameters:    Size  Location     Type
 15814 ;;		None
 15815 ;; Auto vars:     Size  Location     Type
 15816 ;;		None
 15817 ;; Return value:  Size  Location     Type
 15818 ;;                  1    wreg      void 
 15819 ;; Registers used:
 15820 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15821 ;; Tracked objects:
 15822 ;;		On entry : 0/0
 15823 ;;		On exit  : 0/0
 15824 ;;		Unchanged: 0/0
 15825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15830 ;;Total ram usage:        0 bytes
 15831 ;; Hardware stack levels used: 1
 15832 ;; Hardware stack levels required when called: 4
 15833 ;; This function calls:
 15834 ;;		Nothing
 15835 ;; This function is called by:
 15836 ;;		_UART1_Receive_ISR
 15837 ;;		_UART1_DefaultErrorHandler
 15838 ;; This function uses a non-reentrant model
 15839 ;;
 15840                           
 15841                           	psect	text84
 15842  005B5C                     __ptext84:
 15843                           	callstack 0
 15844  005B5C                     _UART1_RxDataHandler:
 15845                           	callstack 12
 15846  005B5C                     
 15847                           ;mcc_generated_files/uart1.c: 299:     uart1RxBuffer[uart1RxHead++] = U1RXB;
 15848  005B5C  0E08               	movlw	low _uart1RxBuffer
 15849  005B5E  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 15850  005B60  6ED9               	movwf	fsr2l,c
 15851  005B62  6ADA               	clrf	fsr2h,c
 15852  005B64  0E01               	movlw	high _uart1RxBuffer
 15853  005B66  22DA               	addwfc	fsr2h,f,c
 15854  005B68  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 15855  005B6E  2A45               	incf	_uart1RxHead^0,f,c	;volatile
 15856  005B70                     
 15857                           ;mcc_generated_files/uart1.c: 300:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 15858  005B70  0E07               	movlw	7
 15859  005B72  6445               	cpfsgt	_uart1RxHead^0,c	;volatile
 15860  005B74  EFBE  F02D         	goto	i1u631_21
 15861  005B78  EFC0  F02D         	goto	i1u631_20
 15862  005B7C                     i1u631_21:
 15863  005B7C  EFC2  F02D         	goto	i1l6525
 15864  005B80                     i1u631_20:
 15865  005B80                     
 15866                           ;mcc_generated_files/uart1.c: 301:     {;mcc_generated_files/uart1.c: 302:         uart1
      +                          RxHead = 0;
 15867  005B80  0E00               	movlw	0
 15868  005B82  6E45               	movwf	_uart1RxHead^0,c	;volatile
 15869  005B84                     i1l6525:
 15870                           
 15871                           ;mcc_generated_files/uart1.c: 304:     uart1RxCount++;
 15872  005B84  2A43               	incf	_uart1RxCount^0,f,c	;volatile
 15873  005B86  0012               	return		;funcret
 15874  005B88                     __end_of_UART1_RxDataHandler:
 15875                           	callstack 0
 15876                           
 15877 ;; *************** function _TMR4_ISR *****************
 15878 ;; Defined at:
 15879 ;;		line 166 in file "mcc_generated_files/tmr4.c"
 15880 ;; Parameters:    Size  Location     Type
 15881 ;;		None
 15882 ;; Auto vars:     Size  Location     Type
 15883 ;;		None
 15884 ;; Return value:  Size  Location     Type
 15885 ;;                  1    wreg      void 
 15886 ;; Registers used:
 15887 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 15888 ;; Tracked objects:
 15889 ;;		On entry : 0/0
 15890 ;;		On exit  : 0/0
 15891 ;;		Unchanged: 0/0
 15892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15895 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15896 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15897 ;;Total ram usage:        1 bytes
 15898 ;; Hardware stack levels used: 1
 15899 ;; Hardware stack levels required when called: 6
 15900 ;; This function calls:
 15901 ;;		_TMR4_CallBack
 15902 ;; This function is called by:
 15903 ;;		Interrupt level 1
 15904 ;; This function uses a non-reentrant model
 15905 ;;
 15906                           
 15907                           	psect	text85
 15908  0057D0                     __ptext85:
 15909                           	callstack 0
 15910  0057D0                     _TMR4_ISR:
 15911                           	callstack 12
 15912                           
 15913                           ;incstack = 0
 15914  0057D0  006F FF60  F013    	movff	status,??_TMR4_ISR
 15915  0057D6                     
 15916                           ;mcc_generated_files/tmr4.c: 168:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr4.c: 171:     PIR7bits.TMR4IF = 0;
 15917  0057D6  0139               	movlb	57	; () banked
 15918  0057D8  91A7               	bcf	167,0,b	;volatile
 15919  0057DA                     
 15920                           ; BSR set to: 57
 15921                           ;mcc_generated_files/tmr4.c: 174:     if (++CountCallBack >= 10)
 15922  0057DA  4A40               	infsnz	TMR4_ISR@CountCallBack^0,f,c	;volatile
 15923  0057DC  2A41               	incf	(TMR4_ISR@CountCallBack+1)^0,f,c	;volatile
 15924  0057DE  5041               	movf	(TMR4_ISR@CountCallBack+1)^0,w,c	;volatile
 15925  0057E0  E109               	bnz	i1u716_20
 15926  0057E2  0E0A               	movlw	10
 15927  0057E4  5C40               	subwf	TMR4_ISR@CountCallBack^0,w,c	;volatile
 15928  0057E6  A0D8               	btfss	status,0,c
 15929  0057E8  EFF8  F02B         	goto	i1u716_21
 15930  0057EC  EFFA  F02B         	goto	i1u716_20
 15931  0057F0                     i1u716_21:
 15932  0057F0  EF00  F02C         	goto	i1l688
 15933  0057F4                     i1u716_20:
 15934  0057F4                     
 15935                           ; BSR set to: 57
 15936                           ;mcc_generated_files/tmr4.c: 175:     {;mcc_generated_files/tmr4.c: 177:         TMR4_Ca
      +                          llBack();
 15937  0057F4  EC6B  F02D         	call	_TMR4_CallBack	;wreg free
 15938  0057F8                     
 15939                           ;mcc_generated_files/tmr4.c: 180:         CountCallBack = 0;
 15940  0057F8  0E00               	movlw	0
 15941  0057FA  6E41               	movwf	(TMR4_ISR@CountCallBack+1)^0,c	;volatile
 15942  0057FC  0E00               	movlw	0
 15943  0057FE  6E40               	movwf	TMR4_ISR@CountCallBack^0,c	;volatile
 15944  005800                     i1l688:
 15945  005800  0060  F04F  FFD8   	movff	??_TMR4_ISR,status
 15946  005806  0011               	retfie		f
 15947  005808                     __end_of_TMR4_ISR:
 15948                           	callstack 0
 15949                           
 15950 ;; *************** function _TMR4_CallBack *****************
 15951 ;; Defined at:
 15952 ;;		line 184 in file "mcc_generated_files/tmr4.c"
 15953 ;; Parameters:    Size  Location     Type
 15954 ;;		None
 15955 ;; Auto vars:     Size  Location     Type
 15956 ;;		None
 15957 ;; Return value:  Size  Location     Type
 15958 ;;                  1    wreg      void 
 15959 ;; Registers used:
 15960 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 15961 ;; Tracked objects:
 15962 ;;		On entry : 0/0
 15963 ;;		On exit  : 0/0
 15964 ;;		Unchanged: 0/0
 15965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15970 ;;Total ram usage:        0 bytes
 15971 ;; Hardware stack levels used: 1
 15972 ;; Hardware stack levels required when called: 5
 15973 ;; This function calls:
 15974 ;;		Absolute function
 15975 ;;		_TMR4_10msISR
 15976 ;;		_TMR4_DefaultInterruptHandler
 15977 ;; This function is called by:
 15978 ;;		_TMR4_ISR
 15979 ;; This function uses a non-reentrant model
 15980 ;;
 15981                           
 15982                           	psect	text86
 15983  005AD6                     __ptext86:
 15984                           	callstack 0
 15985  005AD6                     _TMR4_CallBack:
 15986                           	callstack 12
 15987  005AD6                     
 15988                           ;mcc_generated_files/tmr4.c: 188:     if(TMR4_InterruptHandler)
 15989  005AD6  0101               	movlb	1	; () banked
 15990  005AD8  518A               	movf	_TMR4_InterruptHandler& (0+255),w,b
 15991  005ADA  118B               	iorwf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 15992  005ADC  B4D8               	btfsc	status,2,c
 15993  005ADE  EF73  F02D         	goto	i1u700_21
 15994  005AE2  EF75  F02D         	goto	i1u700_20
 15995  005AE6                     i1u700_21:
 15996  005AE6  EF81  F02D         	goto	i1l692
 15997  005AEA                     i1u700_20:
 15998  005AEA                     
 15999                           ; BSR set to: 1
 16000                           ;mcc_generated_files/tmr4.c: 189:     {;mcc_generated_files/tmr4.c: 190:         TMR4_In
      +                          terruptHandler();
 16001  005AEA  D802               	call	i1u701_28
 16002  005AEC  EF81  F02D         	goto	i1u701_29
 16003  005AF0                     i1u701_28:
 16004  005AF0  0005               	push	
 16005  005AF2  6EFA               	movwf	pclath,c
 16006  005AF4  518A               	movf	_TMR4_InterruptHandler& (0+255),w,b
 16007  005AF6  6EFD               	movwf	tosl,c
 16008  005AF8  518B               	movf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 16009  005AFA  6EFE               	movwf	tosh,c
 16010  005AFC  6AFF               	clrf	tosu,c
 16011  005AFE  50FA               	movf	pclath,w,c
 16012  005B00  0012               	return		;indir
 16013  005B02                     i1u701_29:
 16014  005B02                     i1l692:
 16015  005B02  0012               	return		;funcret
 16016  005B04                     __end_of_TMR4_CallBack:
 16017                           	callstack 0
 16018                           
 16019 ;; *************** function _TMR4_10msISR *****************
 16020 ;; Defined at:
 16021 ;;		line 62 in file "main.c"
 16022 ;; Parameters:    Size  Location     Type
 16023 ;;		None
 16024 ;; Auto vars:     Size  Location     Type
 16025 ;;		None
 16026 ;; Return value:  Size  Location     Type
 16027 ;;                  1    wreg      void 
 16028 ;; Registers used:
 16029 ;;		status,2, status,0
 16030 ;; Tracked objects:
 16031 ;;		On entry : 0/0
 16032 ;;		On exit  : 0/0
 16033 ;;		Unchanged: 0/0
 16034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16039 ;;Total ram usage:        0 bytes
 16040 ;; Hardware stack levels used: 1
 16041 ;; Hardware stack levels required when called: 4
 16042 ;; This function calls:
 16043 ;;		Nothing
 16044 ;; This function is called by:
 16045 ;;		_main
 16046 ;;		_TMR4_CallBack
 16047 ;; This function uses a non-reentrant model
 16048 ;;
 16049                           
 16050                           	psect	text87
 16051  005D90                     __ptext87:
 16052                           	callstack 0
 16053  005D90                     _TMR4_10msISR:
 16054                           	callstack 12
 16055  005D90                     
 16056                           ;main.c: 63:     ++cycle10ms;
 16057  005D90  0100               	movlb	0	; () banked
 16058  005D92  2BFA               	incf	_cycle10ms& (0+255),f,b	;volatile
 16059                           
 16060                           ;main.c: 64:     ++roundTimeCount;
 16061  005D94  4A3E               	infsnz	_roundTimeCount^0,f,c	;volatile
 16062  005D96  2A3F               	incf	(_roundTimeCount+1)^0,f,c	;volatile
 16063  005D98                     
 16064                           ; BSR set to: 0
 16065  005D98  0012               	return		;funcret
 16066  005D9A                     __end_of_TMR4_10msISR:
 16067                           	callstack 0
 16068                           
 16069 ;; *************** function _TMR4_DefaultInterruptHandler *****************
 16070 ;; Defined at:
 16071 ;;		line 198 in file "mcc_generated_files/tmr4.c"
 16072 ;; Parameters:    Size  Location     Type
 16073 ;;		None
 16074 ;; Auto vars:     Size  Location     Type
 16075 ;;		None
 16076 ;; Return value:  Size  Location     Type
 16077 ;;                  1    wreg      void 
 16078 ;; Registers used:
 16079 ;;		None
 16080 ;; Tracked objects:
 16081 ;;		On entry : 0/0
 16082 ;;		On exit  : 0/0
 16083 ;;		Unchanged: 0/0
 16084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16089 ;;Total ram usage:        0 bytes
 16090 ;; Hardware stack levels used: 1
 16091 ;; Hardware stack levels required when called: 4
 16092 ;; This function calls:
 16093 ;;		Nothing
 16094 ;; This function is called by:
 16095 ;;		_TMR4_Initialize
 16096 ;;		_TMR4_CallBack
 16097 ;; This function uses a non-reentrant model
 16098 ;;
 16099                           
 16100                           	psect	text88
 16101  005DA4                     __ptext88:
 16102                           	callstack 0
 16103  005DA4                     _TMR4_DefaultInterruptHandler:
 16104                           	callstack 12
 16105  005DA4  0012               	return		;funcret
 16106  005DA6                     __end_of_TMR4_DefaultInterruptHandler:
 16107                           	callstack 0
 16108                           
 16109 ;; *************** function _Default_ISR *****************
 16110 ;; Defined at:
 16111 ;;		line 83 in file "mcc_generated_files/interrupt_manager.c"
 16112 ;; Parameters:    Size  Location     Type
 16113 ;;		None
 16114 ;; Auto vars:     Size  Location     Type
 16115 ;;		None
 16116 ;; Return value:  Size  Location     Type
 16117 ;;                  1    wreg      void 
 16118 ;; Registers used:
 16119 ;;		None
 16120 ;; Tracked objects:
 16121 ;;		On entry : 0/0
 16122 ;;		On exit  : 0/0
 16123 ;;		Unchanged: 0/0
 16124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16129 ;;Total ram usage:        0 bytes
 16130 ;; Hardware stack levels used: 1
 16131 ;; This function calls:
 16132 ;;		Nothing
 16133 ;; This function is called by:
 16134 ;;		Interrupt level 2
 16135 ;; This function uses a non-reentrant model
 16136 ;;
 16137                           
 16138                           	psect	text89
 16139  005DA8                     __ptext89:
 16140                           	callstack 0
 16141  005DA8                     _Default_ISR:
 16142                           	callstack 14
 16143  005DA8  0011               	retfie		f
 16144  005DAA                     __end_of_Default_ISR:
 16145                           	callstack 0
 16146                           
 16147 ;; *************** function _CCP3_CaptureISR *****************
 16148 ;; Defined at:
 16149 ;;		line 104 in file "mcc_generated_files/ccp3.c"
 16150 ;; Parameters:    Size  Location     Type
 16151 ;;		None
 16152 ;; Auto vars:     Size  Location     Type
 16153 ;;  module          2    2[COMRAM] struct CCPR3Reg_tag
 16154 ;; Return value:  Size  Location     Type
 16155 ;;                  1    wreg      void 
 16156 ;; Registers used:
 16157 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 16158 ;; Tracked objects:
 16159 ;;		On entry : 0/0
 16160 ;;		On exit  : 0/0
 16161 ;;		Unchanged: 0/0
 16162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16164 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16166 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16167 ;;Total ram usage:        2 bytes
 16168 ;; Hardware stack levels used: 1
 16169 ;; Hardware stack levels required when called: 1
 16170 ;; This function calls:
 16171 ;;		Absolute function
 16172 ;;		_CCP3_DefaultCallBack
 16173 ;; This function is called by:
 16174 ;;		Interrupt level 2
 16175 ;; This function uses a non-reentrant model
 16176 ;;
 16177                           
 16178                           	psect	text90
 16179  00597C                     __ptext90:
 16180                           	callstack 0
 16181  00597C                     _CCP3_CaptureISR:
 16182                           	callstack 13
 16183  00597C                     
 16184                           ;mcc_generated_files/ccp3.c: 106:     CCP3_PERIOD_REG_T module;;mcc_generated_files/ccp3
      +                          .c: 109:     PIR9bits.CCP3IF = 0;
 16185  00597C  0139               	movlb	57	; () banked
 16186  00597E  93A9               	bcf	169,1,b	;volatile
 16187                           
 16188                           ;mcc_generated_files/ccp3.c: 112:     module.ccpr3l = CCPR3L;
 16189  005980  006F FDD0  F003    	movff	16244,CCP3_CaptureISR@module	;volatile
 16190                           
 16191                           ;mcc_generated_files/ccp3.c: 113:     module.ccpr3h = CCPR3H;
 16192  005986  006F FDD4  F004    	movff	16245,CCP3_CaptureISR@module+1	;volatile
 16193  00598C                     
 16194                           ; BSR set to: 57
 16195                           ;mcc_generated_files/ccp3.c: 116:     CCP3_CallBack(module.ccpr3_16Bit);
 16196  00598C  C003  F001         	movff	CCP3_CaptureISR@module,CCP3_DefaultCallBack@capturedValue
 16197  005990  C004  F002         	movff	CCP3_CaptureISR@module+1,CCP3_DefaultCallBack@capturedValue+1
 16198  005994  D802               	call	i2u712_48
 16199  005996  EFD7  F02C         	goto	i2u712_49
 16200  00599A                     i2u712_48:
 16201  00599A  0005               	push	
 16202  00599C  6EFA               	movwf	pclath,c
 16203  00599E  0101               	movlb	1	; () banked
 16204  0059A0  5194               	movf	_CCP3_CallBack& (0+255),w,b
 16205  0059A2  6EFD               	movwf	tosl,c
 16206  0059A4  5195               	movf	(_CCP3_CallBack+1)& (0+255),w,b
 16207  0059A6  6EFE               	movwf	tosh,c
 16208  0059A8  6AFF               	clrf	tosu,c
 16209  0059AA  50FA               	movf	pclath,w,c
 16210  0059AC  0012               	return		;indir
 16211  0059AE                     i2u712_49:
 16212  0059AE  0011               	retfie		f
 16213  0059B0                     __end_of_CCP3_CaptureISR:
 16214                           	callstack 0
 16215                           
 16216 ;; *************** function _CCP3_DefaultCallBack *****************
 16217 ;; Defined at:
 16218 ;;		line 64 in file "mcc_generated_files/ccp3.c"
 16219 ;; Parameters:    Size  Location     Type
 16220 ;;  capturedValu    2    0[COMRAM] unsigned short 
 16221 ;; Auto vars:     Size  Location     Type
 16222 ;;		None
 16223 ;; Return value:  Size  Location     Type
 16224 ;;                  1    wreg      void 
 16225 ;; Registers used:
 16226 ;;		wreg, status,2, status,0
 16227 ;; Tracked objects:
 16228 ;;		On entry : 0/0
 16229 ;;		On exit  : 0/0
 16230 ;;		Unchanged: 0/0
 16231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16232 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16235 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16236 ;;Total ram usage:        2 bytes
 16237 ;; Hardware stack levels used: 1
 16238 ;; This function calls:
 16239 ;;		Nothing
 16240 ;; This function is called by:
 16241 ;;		_CCP3_Initialize
 16242 ;;		_CCP3_CaptureISR
 16243 ;; This function uses a non-reentrant model
 16244 ;;
 16245                           
 16246                           	psect	text91
 16247  00583E                     __ptext91:
 16248                           	callstack 0
 16249  00583E                     _CCP3_DefaultCallBack:
 16250                           	callstack 13
 16251  00583E                     
 16252                           ;mcc_generated_files/ccp3.c: 64: static void CCP3_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp3.c: 65: {;mcc_generated_files/ccp3.c: 67:     if(PORTDbits.RD7
      +                          ) {
 16253  00583E  AECD               	btfss	205,7,c	;volatile
 16254  005840  EF24  F02C         	goto	i2u697_41
 16255  005844  EF26  F02C         	goto	i2u697_40
 16256  005848                     i2u697_41:
 16257  005848  EF2C  F02C         	goto	i2l7107
 16258  00584C                     i2u697_40:
 16259  00584C                     
 16260                           ;mcc_generated_files/ccp3.c: 68:         distLeftM = capturedValue;
 16261  00584C  C001  F138         	movff	CCP3_DefaultCallBack@capturedValue,_distLeftM
 16262  005850  C002  F139         	movff	CCP3_DefaultCallBack@capturedValue+1,_distLeftM+1
 16263                           
 16264                           ;mcc_generated_files/ccp3.c: 69:     } else {
 16265  005854  EF39  F02C         	goto	i2l438
 16266  005858                     i2l7107:
 16267                           
 16268                           ;mcc_generated_files/ccp3.c: 70:         distLeft = capturedValue - distLeftM;
 16269  005858  0101               	movlb	1	; () banked
 16270  00585A  5138               	movf	_distLeftM& (0+255),w,b
 16271  00585C  5C01               	subwf	CCP3_DefaultCallBack@capturedValue^0,w,c
 16272  00585E  0100               	movlb	0	; () banked
 16273  005860  6FF5               	movwf	_distLeft& (0+255),b	;volatile
 16274  005862  0101               	movlb	1	; () banked
 16275  005864  5139               	movf	(_distLeftM+1)& (0+255),w,b
 16276  005866  5802               	subwfb	(CCP3_DefaultCallBack@capturedValue+1)^0,w,c
 16277  005868  0100               	movlb	0	; () banked
 16278  00586A  6FF6               	movwf	(_distLeft+1)& (0+255),b	;volatile
 16279  00586C                     
 16280                           ; BSR set to: 0
 16281                           ;mcc_generated_files/ccp3.c: 71:         distLeft >>= 1;
 16282  00586C  90D8               	bcf	status,0,c
 16283  00586E  33F6               	rrcf	(_distLeft+1)& (0+255),f,b	;volatile
 16284  005870  33F5               	rrcf	_distLeft& (0+255),f,b	;volatile
 16285  005872                     i2l438:
 16286  005872  0012               	return		;funcret
 16287  005874                     __end_of_CCP3_DefaultCallBack:
 16288                           	callstack 0
 16289                           
 16290 ;; *************** function _CCP4_CaptureISR *****************
 16291 ;; Defined at:
 16292 ;;		line 107 in file "mcc_generated_files/ccp4.c"
 16293 ;; Parameters:    Size  Location     Type
 16294 ;;		None
 16295 ;; Auto vars:     Size  Location     Type
 16296 ;;  module          2    6[COMRAM] struct CCPR4Reg_tag
 16297 ;; Return value:  Size  Location     Type
 16298 ;;                  1    wreg      void 
 16299 ;; Registers used:
 16300 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 16301 ;; Tracked objects:
 16302 ;;		On entry : 0/0
 16303 ;;		On exit  : 0/0
 16304 ;;		Unchanged: 0/0
 16305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16307 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16309 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16310 ;;Total ram usage:        2 bytes
 16311 ;; Hardware stack levels used: 1
 16312 ;; Hardware stack levels required when called: 1
 16313 ;; This function calls:
 16314 ;;		Absolute function
 16315 ;;		_CCP4_DefaultCallBack
 16316 ;; This function is called by:
 16317 ;;		Interrupt level 2
 16318 ;; This function uses a non-reentrant model
 16319 ;;
 16320                           
 16321                           	psect	text92
 16322  0059B0                     __ptext92:
 16323                           	callstack 0
 16324  0059B0                     _CCP4_CaptureISR:
 16325                           	callstack 13
 16326  0059B0                     
 16327                           ;mcc_generated_files/ccp4.c: 109:     CCP4_PERIOD_REG_T module;;mcc_generated_files/ccp4
      +                          .c: 112:     PIR10bits.CCP4IF = 0;
 16328  0059B0  0139               	movlb	57	; () banked
 16329  0059B2  91AA               	bcf	170,0,b	;volatile
 16330                           
 16331                           ;mcc_generated_files/ccp4.c: 115:     module.ccpr4l = CCPR4L;
 16332  0059B4  006F FDC0  F007    	movff	16240,CCP4_CaptureISR@module	;volatile
 16333                           
 16334                           ;mcc_generated_files/ccp4.c: 116:     module.ccpr4h = CCPR4H;
 16335  0059BA  006F FDC4  F008    	movff	16241,CCP4_CaptureISR@module+1	;volatile
 16336  0059C0                     
 16337                           ; BSR set to: 57
 16338                           ;mcc_generated_files/ccp4.c: 119:     CCP4_CallBack(module.ccpr4_16Bit);
 16339  0059C0  C007  F005         	movff	CCP4_CaptureISR@module,CCP4_DefaultCallBack@capturedValue
 16340  0059C4  C008  F006         	movff	CCP4_CaptureISR@module+1,CCP4_DefaultCallBack@capturedValue+1
 16341  0059C8  D802               	call	i2u713_48
 16342  0059CA  EFF1  F02C         	goto	i2u713_49
 16343  0059CE                     i2u713_48:
 16344  0059CE  0005               	push	
 16345  0059D0  6EFA               	movwf	pclath,c
 16346  0059D2  0101               	movlb	1	; () banked
 16347  0059D4  5192               	movf	_CCP4_CallBack& (0+255),w,b
 16348  0059D6  6EFD               	movwf	tosl,c
 16349  0059D8  5193               	movf	(_CCP4_CallBack+1)& (0+255),w,b
 16350  0059DA  6EFE               	movwf	tosh,c
 16351  0059DC  6AFF               	clrf	tosu,c
 16352  0059DE  50FA               	movf	pclath,w,c
 16353  0059E0  0012               	return		;indir
 16354  0059E2                     i2u713_49:
 16355  0059E2  0011               	retfie		f
 16356  0059E4                     __end_of_CCP4_CaptureISR:
 16357                           	callstack 0
 16358                           
 16359 ;; *************** function _CCP4_DefaultCallBack *****************
 16360 ;; Defined at:
 16361 ;;		line 64 in file "mcc_generated_files/ccp4.c"
 16362 ;; Parameters:    Size  Location     Type
 16363 ;;  capturedValu    2    4[COMRAM] unsigned short 
 16364 ;; Auto vars:     Size  Location     Type
 16365 ;;		None
 16366 ;; Return value:  Size  Location     Type
 16367 ;;                  1    wreg      void 
 16368 ;; Registers used:
 16369 ;;		wreg, status,2, status,0
 16370 ;; Tracked objects:
 16371 ;;		On entry : 0/0
 16372 ;;		On exit  : 0/0
 16373 ;;		Unchanged: 0/0
 16374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16375 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16378 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16379 ;;Total ram usage:        2 bytes
 16380 ;; Hardware stack levels used: 1
 16381 ;; This function calls:
 16382 ;;		Nothing
 16383 ;; This function is called by:
 16384 ;;		_CCP4_Initialize
 16385 ;;		_CCP4_CaptureISR
 16386 ;; This function uses a non-reentrant model
 16387 ;;
 16388                           
 16389                           	psect	text93
 16390  005874                     __ptext93:
 16391                           	callstack 0
 16392  005874                     _CCP4_DefaultCallBack:
 16393                           	callstack 13
 16394  005874                     
 16395                           ;mcc_generated_files/ccp4.c: 64: static void CCP4_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp4.c: 65: {;mcc_generated_files/ccp4.c: 67:     if(PORTDbits.RD6
      +                          ) {
 16396  005874  ACCD               	btfss	205,6,c	;volatile
 16397  005876  EF3F  F02C         	goto	i2u698_41
 16398  00587A  EF41  F02C         	goto	i2u698_40
 16399  00587E                     i2u698_41:
 16400  00587E  EF47  F02C         	goto	i2l7115
 16401  005882                     i2u698_40:
 16402  005882                     
 16403                           ;mcc_generated_files/ccp4.c: 68:         distRightM = capturedValue;
 16404  005882  C005  F136         	movff	CCP4_DefaultCallBack@capturedValue,_distRightM
 16405  005886  C006  F137         	movff	CCP4_DefaultCallBack@capturedValue+1,_distRightM+1
 16406                           
 16407                           ;mcc_generated_files/ccp4.c: 70:     } else {
 16408  00588A  EF54  F02C         	goto	i2l476
 16409  00588E                     i2l7115:
 16410                           
 16411                           ;mcc_generated_files/ccp4.c: 71:         distRight = capturedValue - distRightM;
 16412  00588E  0101               	movlb	1	; () banked
 16413  005890  5136               	movf	_distRightM& (0+255),w,b
 16414  005892  5C05               	subwf	CCP4_DefaultCallBack@capturedValue^0,w,c
 16415  005894  0100               	movlb	0	; () banked
 16416  005896  6FF3               	movwf	_distRight& (0+255),b	;volatile
 16417  005898  0101               	movlb	1	; () banked
 16418  00589A  5137               	movf	(_distRightM+1)& (0+255),w,b
 16419  00589C  5806               	subwfb	(CCP4_DefaultCallBack@capturedValue+1)^0,w,c
 16420  00589E  0100               	movlb	0	; () banked
 16421  0058A0  6FF4               	movwf	(_distRight+1)& (0+255),b	;volatile
 16422  0058A2                     
 16423                           ; BSR set to: 0
 16424                           ;mcc_generated_files/ccp4.c: 72:         distRight >>= 1;
 16425  0058A2  90D8               	bcf	status,0,c
 16426  0058A4  33F4               	rrcf	(_distRight+1)& (0+255),f,b	;volatile
 16427  0058A6  33F3               	rrcf	_distRight& (0+255),f,b	;volatile
 16428  0058A8                     i2l476:
 16429  0058A8  0012               	return		;funcret
 16430  0058AA                     __end_of_CCP4_DefaultCallBack:
 16431                           	callstack 0
 16432                           
 16433 ;; *************** function _TMR5_GATE_ISR *****************
 16434 ;; Defined at:
 16435 ;;		line 175 in file "mcc_generated_files/tmr5.c"
 16436 ;; Parameters:    Size  Location     Type
 16437 ;;		None
 16438 ;; Auto vars:     Size  Location     Type
 16439 ;;		None
 16440 ;; Return value:  Size  Location     Type
 16441 ;;                  1    wreg      void 
 16442 ;; Registers used:
 16443 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 16444 ;; Tracked objects:
 16445 ;;		On entry : 0/0
 16446 ;;		On exit  : 0/0
 16447 ;;		Unchanged: 0/0
 16448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16453 ;;Total ram usage:        0 bytes
 16454 ;; Hardware stack levels used: 1
 16455 ;; Hardware stack levels required when called: 3
 16456 ;; This function calls:
 16457 ;;		Absolute function
 16458 ;;		_TMR5_DefaultGateInterruptHandler
 16459 ;; This function is called by:
 16460 ;;		Interrupt level 2
 16461 ;; This function uses a non-reentrant model
 16462 ;;
 16463                           
 16464                           	psect	text94
 16465  005A18                     __ptext94:
 16466                           	callstack 0
 16467  005A18                     _TMR5_GATE_ISR:
 16468                           	callstack 11
 16469  005A18                     
 16470                           ;mcc_generated_files/tmr5.c: 178:     PIR8bits.TMR5GIF = 0;
 16471  005A18  0139               	movlb	57	; () banked
 16472  005A1A  9FA8               	bcf	168,7,b	;volatile
 16473  005A1C                     
 16474                           ; BSR set to: 57
 16475                           ;mcc_generated_files/tmr5.c: 180:     if(TMR5_GateInterruptHandler)
 16476  005A1C  0101               	movlb	1	; () banked
 16477  005A1E  518E               	movf	_TMR5_GateInterruptHandler& (0+255),w,b
 16478  005A20  118F               	iorwf	(_TMR5_GateInterruptHandler+1)& (0+255),w,b
 16479  005A22  B4D8               	btfsc	status,2,c
 16480  005A24  EF16  F02D         	goto	i2u714_41
 16481  005A28  EF18  F02D         	goto	i2u714_40
 16482  005A2C                     i2u714_41:
 16483  005A2C  EF24  F02D         	goto	i2l552
 16484  005A30                     i2u714_40:
 16485  005A30                     
 16486                           ; BSR set to: 1
 16487                           ;mcc_generated_files/tmr5.c: 181:     {;mcc_generated_files/tmr5.c: 182:         TMR5_Ga
      +                          teInterruptHandler();
 16488  005A30  D802               	call	i2u715_48
 16489  005A32  EF24  F02D         	goto	i2u715_49
 16490  005A36                     i2u715_48:
 16491  005A36  0005               	push	
 16492  005A38  6EFA               	movwf	pclath,c
 16493  005A3A  518E               	movf	_TMR5_GateInterruptHandler& (0+255),w,b
 16494  005A3C  6EFD               	movwf	tosl,c
 16495  005A3E  518F               	movf	(_TMR5_GateInterruptHandler+1)& (0+255),w,b
 16496  005A40  6EFE               	movwf	tosh,c
 16497  005A42  6AFF               	clrf	tosu,c
 16498  005A44  50FA               	movf	pclath,w,c
 16499  005A46  0012               	return		;indir
 16500  005A48                     i2u715_49:
 16501  005A48                     i2l552:
 16502  005A48  0011               	retfie		f
 16503  005A4A                     __end_of_TMR5_GATE_ISR:
 16504                           	callstack 0
 16505                           
 16506 ;; *************** function _TMR5_DefaultGateInterruptHandler *****************
 16507 ;; Defined at:
 16508 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 16509 ;; Parameters:    Size  Location     Type
 16510 ;;		None
 16511 ;; Auto vars:     Size  Location     Type
 16512 ;;		None
 16513 ;; Return value:  Size  Location     Type
 16514 ;;                  1    wreg      void 
 16515 ;; Registers used:
 16516 ;;		wreg, status,2, status,0, cstack
 16517 ;; Tracked objects:
 16518 ;;		On entry : 0/0
 16519 ;;		On exit  : 0/0
 16520 ;;		Unchanged: 0/0
 16521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16526 ;;Total ram usage:        0 bytes
 16527 ;; Hardware stack levels used: 1
 16528 ;; Hardware stack levels required when called: 2
 16529 ;; This function calls:
 16530 ;;		_TMR5_ReadTimer
 16531 ;;		_TMR5_Reload
 16532 ;; This function is called by:
 16533 ;;		_TMR5_Initialize
 16534 ;;		_TMR5_GATE_ISR
 16535 ;; This function uses a non-reentrant model
 16536 ;;
 16537                           
 16538                           	psect	text95
 16539  005C6C                     __ptext95:
 16540                           	callstack 0
 16541  005C6C                     _TMR5_DefaultGateInterruptHandler:
 16542                           	callstack 11
 16543  005C6C                     
 16544                           ;mcc_generated_files/tmr5.c: 194:     distFront = TMR5_ReadTimer();
 16545  005C6C  EC14  F02E         	call	_TMR5_ReadTimer	;wreg free
 16546  005C70  C009  F0FD         	movff	?_TMR5_ReadTimer,_distFront	;volatile
 16547  005C74  C00A  F0FE         	movff	?_TMR5_ReadTimer+1,_distFront+1	;volatile
 16548  005C78                     
 16549                           ;mcc_generated_files/tmr5.c: 195:     distFront >>= 1;
 16550  005C78  0100               	movlb	0	; () banked
 16551  005C7A  90D8               	bcf	status,0,c
 16552  005C7C  33FE               	rrcf	(_distFront+1)& (0+255),f,b	;volatile
 16553  005C7E  33FD               	rrcf	_distFront& (0+255),f,b	;volatile
 16554  005C80                     
 16555                           ; BSR set to: 0
 16556                           ;mcc_generated_files/tmr5.c: 196:     TMR5_Reload();
 16557  005C80  EC8F  F02E         	call	_TMR5_Reload	;wreg free
 16558  005C84                     
 16559                           ;mcc_generated_files/tmr5.c: 197:     PIR8bits.TMR5GIF = 0;
 16560  005C84  0139               	movlb	57	; () banked
 16561  005C86  9FA8               	bcf	168,7,b	;volatile
 16562  005C88                     
 16563                           ; BSR set to: 57
 16564  005C88  0012               	return		;funcret
 16565  005C8A                     __end_of_TMR5_DefaultGateInterruptHandler:
 16566                           	callstack 0
 16567                           
 16568 ;; *************** function _TMR5_Reload *****************
 16569 ;; Defined at:
 16570 ;;		line 155 in file "mcc_generated_files/tmr5.c"
 16571 ;; Parameters:    Size  Location     Type
 16572 ;;		None
 16573 ;; Auto vars:     Size  Location     Type
 16574 ;;		None
 16575 ;; Return value:  Size  Location     Type
 16576 ;;                  1    wreg      void 
 16577 ;; Registers used:
 16578 ;;		wreg, status,2, cstack
 16579 ;; Tracked objects:
 16580 ;;		On entry : 0/0
 16581 ;;		On exit  : 0/0
 16582 ;;		Unchanged: 0/0
 16583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16588 ;;Total ram usage:        0 bytes
 16589 ;; Hardware stack levels used: 1
 16590 ;; Hardware stack levels required when called: 1
 16591 ;; This function calls:
 16592 ;;		_TMR5_WriteTimer
 16593 ;; This function is called by:
 16594 ;;		_TMR5_DefaultGateInterruptHandler
 16595 ;; This function uses a non-reentrant model
 16596 ;;
 16597                           
 16598                           	psect	text96
 16599  005D1E                     __ptext96:
 16600                           	callstack 0
 16601  005D1E                     _TMR5_Reload:
 16602                           	callstack 11
 16603  005D1E                     
 16604                           ;mcc_generated_files/tmr5.c: 157:     TMR5_WriteTimer(timer5ReloadVal);
 16605  005D1E  C190  F009         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 16606  005D22  C191  F00A         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 16607  005D26  ECC4  F02D         	call	_TMR5_WriteTimer	;wreg free
 16608  005D2A  0012               	return		;funcret
 16609  005D2C                     __end_of_TMR5_Reload:
 16610                           	callstack 0
 16611                           
 16612 ;; *************** function _TMR5_WriteTimer *****************
 16613 ;; Defined at:
 16614 ;;		line 133 in file "mcc_generated_files/tmr5.c"
 16615 ;; Parameters:    Size  Location     Type
 16616 ;;  timerVal        2    8[COMRAM] unsigned short 
 16617 ;; Auto vars:     Size  Location     Type
 16618 ;;		None
 16619 ;; Return value:  Size  Location     Type
 16620 ;;                  1    wreg      void 
 16621 ;; Registers used:
 16622 ;;		wreg, status,2
 16623 ;; Tracked objects:
 16624 ;;		On entry : 0/0
 16625 ;;		On exit  : 0/0
 16626 ;;		Unchanged: 0/0
 16627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16628 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16631 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16632 ;;Total ram usage:        2 bytes
 16633 ;; Hardware stack levels used: 1
 16634 ;; This function calls:
 16635 ;;		Nothing
 16636 ;; This function is called by:
 16637 ;;		_TMR5_Reload
 16638 ;; This function uses a non-reentrant model
 16639 ;;
 16640                           
 16641                           	psect	text97
 16642  005B88                     __ptext97:
 16643                           	callstack 0
 16644  005B88                     _TMR5_WriteTimer:
 16645                           	callstack 11
 16646  005B88                     
 16647                           ;mcc_generated_files/tmr5.c: 133: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 134: {;mcc_generated_files/tmr5.c: 135:     if (T5CONbits.NOT_SYNC == 1)
 16648  005B88  A49A               	btfss	154,2,c	;volatile
 16649  005B8A  EFC9  F02D         	goto	i2u632_41
 16650  005B8E  EFCB  F02D         	goto	i2u632_40
 16651  005B92                     i2u632_41:
 16652  005B92  EFD4  F02D         	goto	i2l6543
 16653  005B96                     i2u632_40:
 16654  005B96                     
 16655                           ;mcc_generated_files/tmr5.c: 136:     {;mcc_generated_files/tmr5.c: 138:         T5CONbi
      +                          ts.TMR5ON = 0;
 16656  005B96  909A               	bcf	154,0,c	;volatile
 16657  005B98                     
 16658                           ;mcc_generated_files/tmr5.c: 141:         TMR5H = (uint8_t)(timerVal >> 8);
 16659  005B98  500A               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
 16660  005B9A  6E99               	movwf	153,c	;volatile
 16661  005B9C                     
 16662                           ;mcc_generated_files/tmr5.c: 142:         TMR5L = (uint8_t)timerVal;
 16663  005B9C  0060  F027  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 16664  005BA2                     
 16665                           ;mcc_generated_files/tmr5.c: 145:         T5CONbits.TMR5ON =1;
 16666  005BA2  809A               	bsf	154,0,c	;volatile
 16667                           
 16668                           ;mcc_generated_files/tmr5.c: 146:     }
 16669  005BA4  EFD9  F02D         	goto	i2l534
 16670  005BA8                     i2l6543:
 16671                           
 16672                           ;mcc_generated_files/tmr5.c: 148:     {;mcc_generated_files/tmr5.c: 150:         TMR5H =
      +                           (uint8_t)(timerVal >> 8);
 16673  005BA8  500A               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
 16674  005BAA  6E99               	movwf	153,c	;volatile
 16675  005BAC                     
 16676                           ;mcc_generated_files/tmr5.c: 151:         TMR5L = (uint8_t)timerVal;
 16677  005BAC  0060  F027  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 16678  005BB2                     i2l534:
 16679  005BB2  0012               	return		;funcret
 16680  005BB4                     __end_of_TMR5_WriteTimer:
 16681                           	callstack 0
 16682                           
 16683 ;; *************** function _TMR5_ReadTimer *****************
 16684 ;; Defined at:
 16685 ;;		line 117 in file "mcc_generated_files/tmr5.c"
 16686 ;; Parameters:    Size  Location     Type
 16687 ;;		None
 16688 ;; Auto vars:     Size  Location     Type
 16689 ;;  readVal         2   12[COMRAM] unsigned short 
 16690 ;;  readValLow      1   15[COMRAM] unsigned char 
 16691 ;;  readValHigh     1   14[COMRAM] unsigned char 
 16692 ;; Return value:  Size  Location     Type
 16693 ;;                  2    8[COMRAM] unsigned short 
 16694 ;; Registers used:
 16695 ;;		wreg, status,2
 16696 ;; Tracked objects:
 16697 ;;		On entry : 0/0
 16698 ;;		On exit  : 0/0
 16699 ;;		Unchanged: 0/0
 16700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16701 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16702 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16703 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16704 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16705 ;;Total ram usage:        8 bytes
 16706 ;; Hardware stack levels used: 1
 16707 ;; This function calls:
 16708 ;;		Nothing
 16709 ;; This function is called by:
 16710 ;;		_TMR5_DefaultGateInterruptHandler
 16711 ;; This function uses a non-reentrant model
 16712 ;;
 16713                           
 16714                           	psect	text98
 16715  005C28                     __ptext98:
 16716                           	callstack 0
 16717  005C28                     _TMR5_ReadTimer:
 16718                           	callstack 12
 16719  005C28                     
 16720                           ;mcc_generated_files/tmr5.c: 119:     uint16_t readVal;;mcc_generated_files/tmr5.c: 120:
      +                               uint8_t readValHigh;;mcc_generated_files/tmr5.c: 121:     uint8_t readValLow;;mcc_g
      +                          enerated_files/tmr5.c: 123:     T5CONbits.T5RD16 = 1;
 16721  005C28  829A               	bsf	154,1,c	;volatile
 16722                           
 16723                           ;mcc_generated_files/tmr5.c: 125:     readValLow = TMR5L;
 16724  005C2A  006F FE60  F010    	movff	16280,TMR5_ReadTimer@readValLow	;volatile
 16725                           
 16726                           ;mcc_generated_files/tmr5.c: 126:     readValHigh = TMR5H;
 16727  005C30  006F FE64  F00F    	movff	16281,TMR5_ReadTimer@readValHigh	;volatile
 16728  005C36                     
 16729                           ;mcc_generated_files/tmr5.c: 128:     readVal = ((uint16_t)readValHigh << 8) | readValLo
      +                          w;
 16730  005C36  500F               	movf	TMR5_ReadTimer@readValHigh^0,w,c
 16731  005C38  6E0B               	movwf	??_TMR5_ReadTimer^0,c
 16732  005C3A  5010               	movf	TMR5_ReadTimer@readValLow^0,w,c
 16733  005C3C  6E0D               	movwf	TMR5_ReadTimer@readVal^0,c
 16734  005C3E  C00B  F00E         	movff	??_TMR5_ReadTimer,TMR5_ReadTimer@readVal+1
 16735  005C42                     
 16736                           ;mcc_generated_files/tmr5.c: 130:     return readVal;
 16737  005C42  C00D  F009         	movff	TMR5_ReadTimer@readVal,?_TMR5_ReadTimer
 16738  005C46  C00E  F00A         	movff	TMR5_ReadTimer@readVal+1,?_TMR5_ReadTimer+1
 16739  005C4A  0012               	return		;funcret
 16740  005C4C                     __end_of_TMR5_ReadTimer:
 16741                           	callstack 0
 16742                           
 16743 ;; *************** function _SMT1_PR_ACQ_ISR *****************
 16744 ;; Defined at:
 16745 ;;		line 192 in file "mcc_generated_files/smt1.c"
 16746 ;; Parameters:    Size  Location     Type
 16747 ;;		None
 16748 ;; Auto vars:     Size  Location     Type
 16749 ;;		None
 16750 ;; Return value:  Size  Location     Type
 16751 ;;                  1    wreg      void 
 16752 ;; Registers used:
 16753 ;;		wreg, status,2, status,0
 16754 ;; Tracked objects:
 16755 ;;		On entry : 0/0
 16756 ;;		On exit  : 0/0
 16757 ;;		Unchanged: 0/0
 16758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16763 ;;Total ram usage:        0 bytes
 16764 ;; Hardware stack levels used: 1
 16765 ;; This function calls:
 16766 ;;		Nothing
 16767 ;; This function is called by:
 16768 ;;		Interrupt level 2
 16769 ;; This function uses a non-reentrant model
 16770 ;;
 16771                           
 16772                           	psect	text99
 16773  00551C                     __ptext99:
 16774                           	callstack 0
 16775  00551C                     _SMT1_PR_ACQ_ISR:
 16776                           	callstack 14
 16777  00551C                     
 16778                           ;mcc_generated_files/smt1.c: 196:     PIR1bits.SMT1PRAIF = 0;
 16779  00551C  0139               	movlb	57	; () banked
 16780  00551E  9DA1               	bcf	161,6,b	;volatile
 16781  005520                     
 16782                           ; BSR set to: 57
 16783                           ;mcc_generated_files/smt1.c: 197:     smtPeriod = SMT1CPR;
 16784  005520  013F               	movlb	63	; () banked
 16785  005522  5115               	movf	21,w,b	;volatile
 16786  005524  6E48               	movwf	_smtPeriod^0,c	;volatile
 16787  005526  5116               	movf	22,w,b	;volatile
 16788  005528  6E49               	movwf	(_smtPeriod+1)^0,c	;volatile
 16789  00552A  5117               	movf	23,w,b	;volatile
 16790  00552C  6E4A               	movwf	(_smtPeriod+2)^0,c	;volatile
 16791  00552E  6A4B               	clrf	(_smtPeriod+3)^0,c	;volatile
 16792  005530                     
 16793                           ; BSR set to: 63
 16794                           ;mcc_generated_files/smt1.c: 198:     if(CLC3CONbits.LC3OUT) smtWay++;
 16795  005530  013C               	movlb	60	; () banked
 16796  005532  AB60               	btfss	96,5,b	;volatile
 16797  005534  EF9E  F02A         	goto	i2u717_41
 16798  005538  EFA0  F02A         	goto	i2u717_40
 16799  00553C                     i2u717_41:
 16800  00553C  EFA9  F02A         	goto	i2l7223
 16801  005540                     i2u717_40:
 16802  005540                     
 16803                           ; BSR set to: 60
 16804  005540  0E01               	movlw	1
 16805  005542  0101               	movlb	1	; () banked
 16806  005544  2720               	addwf	_smtWay& (0+255),f,b	;volatile
 16807  005546  0E00               	movlw	0
 16808  005548  2321               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 16809  00554A  2322               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 16810  00554C  2323               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 16811  00554E  EFB2  F02A         	goto	i2l856
 16812  005552                     i2l7223:
 16813                           
 16814                           ; BSR set to: 60
 16815  005552  0EFF               	movlw	255
 16816  005554  0101               	movlb	1	; () banked
 16817  005556  2720               	addwf	_smtWay& (0+255),f,b	;volatile
 16818  005558  0EFF               	movlw	255
 16819  00555A  2321               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 16820  00555C  0EFF               	movlw	255
 16821  00555E  2322               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 16822  005560  0EFF               	movlw	255
 16823  005562  2323               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 16824  005564                     i2l856:
 16825                           
 16826                           ; BSR set to: 1
 16827  005564  0011               	retfie		f
 16828  005566                     __end_of_SMT1_PR_ACQ_ISR:
 16829                           	callstack 0
 16830                           
 16831 ;; *************** function _SMT1_PW_ACQ_ISR *****************
 16832 ;; Defined at:
 16833 ;;		line 203 in file "mcc_generated_files/smt1.c"
 16834 ;; Parameters:    Size  Location     Type
 16835 ;;		None
 16836 ;; Auto vars:     Size  Location     Type
 16837 ;;		None
 16838 ;; Return value:  Size  Location     Type
 16839 ;;                  1    wreg      void 
 16840 ;; Registers used:
 16841 ;;		wreg, status,2, status,0
 16842 ;; Tracked objects:
 16843 ;;		On entry : 0/0
 16844 ;;		On exit  : 0/0
 16845 ;;		Unchanged: 0/0
 16846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16851 ;;Total ram usage:        0 bytes
 16852 ;; Hardware stack levels used: 1
 16853 ;; This function calls:
 16854 ;;		Nothing
 16855 ;; This function is called by:
 16856 ;;		Interrupt level 2
 16857 ;; This function uses a non-reentrant model
 16858 ;;
 16859                           
 16860                           	psect	text100
 16861  0053E8                     __ptext100:
 16862                           	callstack 0
 16863  0053E8                     _SMT1_PW_ACQ_ISR:
 16864                           	callstack 14
 16865  0053E8                     
 16866                           ;mcc_generated_files/smt1.c: 207:     PIR1bits.SMT1PWAIF = 0;
 16867  0053E8  0139               	movlb	57	; () banked
 16868  0053EA  9FA1               	bcf	161,7,b	;volatile
 16869  0053EC                     
 16870                           ; BSR set to: 57
 16871                           ;mcc_generated_files/smt1.c: 208:     smtDuty = SMT1CPW;
 16872  0053EC  013F               	movlb	63	; () banked
 16873  0053EE  5118               	movf	24,w,b	;volatile
 16874  0053F0  0101               	movlb	1	; () banked
 16875  0053F2  6F24               	movwf	_smtDuty& (0+255),b	;volatile
 16876  0053F4  013F               	movlb	63	; () banked
 16877  0053F6  5119               	movf	25,w,b	;volatile
 16878  0053F8  0101               	movlb	1	; () banked
 16879  0053FA  6F25               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 16880  0053FC  013F               	movlb	63	; () banked
 16881  0053FE  511A               	movf	26,w,b	;volatile
 16882  005400  0101               	movlb	1	; () banked
 16883  005402  6F26               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 16884  005404  6B27               	clrf	(_smtDuty+3)& (0+255),b	;volatile
 16885  005406                     
 16886                           ; BSR set to: 1
 16887                           ;mcc_generated_files/smt1.c: 209:     if(CLC3CONbits.LC3OUT) smtWay++;
 16888  005406  013C               	movlb	60	; () banked
 16889  005408  AB60               	btfss	96,5,b	;volatile
 16890  00540A  EF09  F02A         	goto	i2u718_41
 16891  00540E  EF0B  F02A         	goto	i2u718_40
 16892  005412                     i2u718_41:
 16893  005412  EF14  F02A         	goto	i2l7233
 16894  005416                     i2u718_40:
 16895  005416                     
 16896                           ; BSR set to: 60
 16897  005416  0E01               	movlw	1
 16898  005418  0101               	movlb	1	; () banked
 16899  00541A  2720               	addwf	_smtWay& (0+255),f,b	;volatile
 16900  00541C  0E00               	movlw	0
 16901  00541E  2321               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 16902  005420  2322               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 16903  005422  2323               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 16904  005424  EF1D  F02A         	goto	i2l863
 16905  005428                     i2l7233:
 16906                           
 16907                           ; BSR set to: 60
 16908  005428  0EFF               	movlw	255
 16909  00542A  0101               	movlb	1	; () banked
 16910  00542C  2720               	addwf	_smtWay& (0+255),f,b	;volatile
 16911  00542E  0EFF               	movlw	255
 16912  005430  2321               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 16913  005432  0EFF               	movlw	255
 16914  005434  2322               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 16915  005436  0EFF               	movlw	255
 16916  005438  2323               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 16917  00543A                     i2l863:
 16918                           
 16919                           ; BSR set to: 1
 16920  00543A  0011               	retfie		f
 16921  00543C                     __end_of_SMT1_PW_ACQ_ISR:
 16922                           	callstack 0
 16923                           
 16924 ;; *************** function _SMT1_Overflow_ISR *****************
 16925 ;; Defined at:
 16926 ;;		line 213 in file "mcc_generated_files/smt1.c"
 16927 ;; Parameters:    Size  Location     Type
 16928 ;;		None
 16929 ;; Auto vars:     Size  Location     Type
 16930 ;;		None
 16931 ;; Return value:  Size  Location     Type
 16932 ;;                  1    wreg      void 
 16933 ;; Registers used:
 16934 ;;		wreg, status,2
 16935 ;; Tracked objects:
 16936 ;;		On entry : 0/0
 16937 ;;		On exit  : 0/0
 16938 ;;		Unchanged: 0/0
 16939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16944 ;;Total ram usage:        0 bytes
 16945 ;; Hardware stack levels used: 1
 16946 ;; This function calls:
 16947 ;;		Nothing
 16948 ;; This function is called by:
 16949 ;;		Interrupt level 2
 16950 ;; This function uses a non-reentrant model
 16951 ;;
 16952                           
 16953                           	psect	text101
 16954  005BDC                     __ptext101:
 16955                           	callstack 0
 16956  005BDC                     _SMT1_Overflow_ISR:
 16957                           	callstack 14
 16958  005BDC                     
 16959                           ;mcc_generated_files/smt1.c: 217:     PIR1bits.SMT1IF = 0;
 16960  005BDC  0139               	movlb	57	; () banked
 16961  005BDE  9BA1               	bcf	161,5,b	;volatile
 16962  005BE0                     
 16963                           ; BSR set to: 57
 16964                           ;mcc_generated_files/smt1.c: 218:     smtPeriod = 0;
 16965  005BE0  0E00               	movlw	0
 16966  005BE2  6E48               	movwf	_smtPeriod^0,c	;volatile
 16967  005BE4  0E00               	movlw	0
 16968  005BE6  6E49               	movwf	(_smtPeriod+1)^0,c	;volatile
 16969  005BE8  0E00               	movlw	0
 16970  005BEA  6E4A               	movwf	(_smtPeriod+2)^0,c	;volatile
 16971  005BEC  0E00               	movlw	0
 16972  005BEE  6E4B               	movwf	(_smtPeriod+3)^0,c	;volatile
 16973                           
 16974                           ;mcc_generated_files/smt1.c: 219:     smtDuty = 0;
 16975  005BF0  0E00               	movlw	0
 16976  005BF2  0101               	movlb	1	; () banked
 16977  005BF4  6F24               	movwf	_smtDuty& (0+255),b	;volatile
 16978  005BF6  0E00               	movlw	0
 16979  005BF8  6F25               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 16980  005BFA  0E00               	movlw	0
 16981  005BFC  6F26               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 16982  005BFE  0E00               	movlw	0
 16983  005C00  6F27               	movwf	(_smtDuty+3)& (0+255),b	;volatile
 16984  005C02                     
 16985                           ; BSR set to: 1
 16986  005C02  0011               	retfie		f
 16987  005C04                     __end_of_SMT1_Overflow_ISR:
 16988                           	callstack 0
 16989                           
 16990                           ;
 16991                           ; Interrupt Vector Table @ 0x8
 16992                           ;
 16993                           
 16994                           	psect	ivt0x8
 16995  000008                     __pivt0x8:
 16996                           	callstack 0
 16997  000008                     ivt0x8_base:
 16998                           	callstack 0
 16999                           
 17000                           ; Vector 0 : SWINT
 17001  000008  176A               	dw	_Default_ISR shr (0+2)
 17002                           
 17003                           ; Vector 1 : HLVD
 17004  00000A  176A               	dw	_Default_ISR shr (0+2)
 17005                           
 17006                           ; Vector 2 : OSF
 17007  00000C  176A               	dw	_Default_ISR shr (0+2)
 17008                           
 17009                           ; Vector 3 : CSW
 17010  00000E  176A               	dw	_Default_ISR shr (0+2)
 17011                           
 17012                           ; Vector 4 : NVM
 17013  000010  176A               	dw	_Default_ISR shr (0+2)
 17014                           
 17015                           ; Vector 5 : SCAN
 17016  000012  176A               	dw	_Default_ISR shr (0+2)
 17017                           
 17018                           ; Vector 6 : CRC
 17019  000014  176A               	dw	_Default_ISR shr (0+2)
 17020                           
 17021                           ; Vector 7 : IOC
 17022  000016  176A               	dw	_Default_ISR shr (0+2)
 17023                           
 17024                           ; Vector 8 : INT0
 17025  000018  176A               	dw	_Default_ISR shr (0+2)
 17026                           
 17027                           ; Vector 9 : ZCD
 17028  00001A  176A               	dw	_Default_ISR shr (0+2)
 17029                           
 17030                           ; Vector 10 : AD
 17031  00001C  176A               	dw	_Default_ISR shr (0+2)
 17032                           
 17033                           ; Vector 11 : ADT
 17034  00001E  176A               	dw	_Default_ISR shr (0+2)
 17035                           
 17036                           ; Vector 12 : CMP1
 17037  000020  176A               	dw	_Default_ISR shr (0+2)
 17038                           
 17039                           ; Vector 13 : SMT1
 17040  000022  16F7               	dw	_SMT1_Overflow_ISR shr (0+2)
 17041                           
 17042                           ; Vector 14 : SMT1PRA
 17043  000024  1547               	dw	_SMT1_PR_ACQ_ISR shr (0+2)
 17044                           
 17045                           ; Vector 15 : SMT1PRW
 17046  000026  14FA               	dw	_SMT1_PW_ACQ_ISR shr (0+2)
 17047                           
 17048                           ; Vector 16 : DMA1SCNT
 17049  000028  176A               	dw	_Default_ISR shr (0+2)
 17050                           
 17051                           ; Vector 17 : DMA1DCNT
 17052  00002A  176A               	dw	_Default_ISR shr (0+2)
 17053                           
 17054                           ; Vector 18 : DMA1OR
 17055  00002C  176A               	dw	_Default_ISR shr (0+2)
 17056                           
 17057                           ; Vector 19 : DMA1A
 17058  00002E  176A               	dw	_Default_ISR shr (0+2)
 17059                           
 17060                           ; Vector 20 : SPI1RX
 17061  000030  176A               	dw	_Default_ISR shr (0+2)
 17062                           
 17063                           ; Vector 21 : SPI1TX
 17064  000032  176A               	dw	_Default_ISR shr (0+2)
 17065                           
 17066                           ; Vector 22 : SPI1
 17067  000034  176A               	dw	_Default_ISR shr (0+2)
 17068                           
 17069                           ; Vector 23 : I2C1RX
 17070  000036  176A               	dw	_Default_ISR shr (0+2)
 17071                           
 17072                           ; Vector 24 : I2C1TX
 17073  000038  176A               	dw	_Default_ISR shr (0+2)
 17074                           
 17075                           ; Vector 25 : I2C1
 17076  00003A  176A               	dw	_Default_ISR shr (0+2)
 17077                           
 17078                           ; Vector 26 : I2C1E
 17079  00003C  176A               	dw	_Default_ISR shr (0+2)
 17080                           
 17081                           ; Vector 27 : U1RX
 17082  00003E  15BB               	dw	_UART1_rx_vect_isr shr (0+2)
 17083                           
 17084                           ; Vector 28 : U1TX
 17085  000040  15AC               	dw	_UART1_tx_vect_isr shr (0+2)
 17086                           
 17087                           ; Vector 29 : U1E
 17088  000042  176A               	dw	_Default_ISR shr (0+2)
 17089                           
 17090                           ; Vector 30 : U1
 17091  000044  176A               	dw	_Default_ISR shr (0+2)
 17092                           
 17093                           ; Vector 31 : TMR0
 17094  000046  176A               	dw	_Default_ISR shr (0+2)
 17095                           
 17096                           ; Vector 32 : TMR1
 17097  000048  176A               	dw	_Default_ISR shr (0+2)
 17098                           
 17099                           ; Vector 33 : TMR1G
 17100  00004A  176A               	dw	_Default_ISR shr (0+2)
 17101                           
 17102                           ; Vector 34 : TMR2
 17103  00004C  176A               	dw	_Default_ISR shr (0+2)
 17104                           
 17105                           ; Vector 35 : CCP1
 17106  00004E  176A               	dw	_Default_ISR shr (0+2)
 17107                           
 17108                           ; Vector 36 : Undefined
 17109  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 17110                           
 17111                           ; Vector 37 : NCO1
 17112  000052  176A               	dw	_Default_ISR shr (0+2)
 17113                           
 17114                           ; Vector 38 : CWG1
 17115  000054  176A               	dw	_Default_ISR shr (0+2)
 17116                           
 17117                           ; Vector 39 : CLC1
 17118  000056  176A               	dw	_Default_ISR shr (0+2)
 17119                           
 17120                           ; Vector 40 : INT1
 17121  000058  176A               	dw	_Default_ISR shr (0+2)
 17122                           
 17123                           ; Vector 41 : CMP2
 17124  00005A  176A               	dw	_Default_ISR shr (0+2)
 17125                           
 17126                           ; Vector 42 : DMA2SCNT
 17127  00005C  176A               	dw	_Default_ISR shr (0+2)
 17128                           
 17129                           ; Vector 43 : DMA2DCNT
 17130  00005E  176A               	dw	_Default_ISR shr (0+2)
 17131                           
 17132                           ; Vector 44 : DMA2OR
 17133  000060  176A               	dw	_Default_ISR shr (0+2)
 17134                           
 17135                           ; Vector 45 : DMA2A
 17136  000062  176A               	dw	_Default_ISR shr (0+2)
 17137                           
 17138                           ; Vector 46 : I2C2RX
 17139  000064  176A               	dw	_Default_ISR shr (0+2)
 17140                           
 17141                           ; Vector 47 : I2C2TX
 17142  000066  176A               	dw	_Default_ISR shr (0+2)
 17143                           
 17144                           ; Vector 48 : I2C2
 17145  000068  176A               	dw	_Default_ISR shr (0+2)
 17146                           
 17147                           ; Vector 49 : I2C2E
 17148  00006A  176A               	dw	_Default_ISR shr (0+2)
 17149                           
 17150                           ; Vector 50 : U2RX
 17151  00006C  176A               	dw	_Default_ISR shr (0+2)
 17152                           
 17153                           ; Vector 51 : U2TX
 17154  00006E  176A               	dw	_Default_ISR shr (0+2)
 17155                           
 17156                           ; Vector 52 : U2E
 17157  000070  176A               	dw	_Default_ISR shr (0+2)
 17158                           
 17159                           ; Vector 53 : U2
 17160  000072  176A               	dw	_Default_ISR shr (0+2)
 17161                           
 17162                           ; Vector 54 : TMR3
 17163  000074  176A               	dw	_Default_ISR shr (0+2)
 17164                           
 17165                           ; Vector 55 : TMR3G
 17166  000076  176A               	dw	_Default_ISR shr (0+2)
 17167                           
 17168                           ; Vector 56 : TMR4
 17169  000078  15F4               	dw	_TMR4_ISR shr (0+2)
 17170                           
 17171                           ; Vector 57 : CCP2
 17172  00007A  176A               	dw	_Default_ISR shr (0+2)
 17173                           
 17174                           ; Vector 58 : Undefined
 17175  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 17176                           
 17177                           ; Vector 59 : CWG2
 17178  00007E  176A               	dw	_Default_ISR shr (0+2)
 17179                           
 17180                           ; Vector 60 : CLC2
 17181  000080  176A               	dw	_Default_ISR shr (0+2)
 17182                           
 17183                           ; Vector 61 : INT2
 17184  000082  176A               	dw	_Default_ISR shr (0+2)
 17185                           
 17186                           ; Vector 62 : Undefined
 17187  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 17188                           
 17189                           ; Vector 63 : Undefined
 17190  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 17191                           
 17192                           ; Vector 64 : Undefined
 17193  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 17194                           
 17195                           ; Vector 65 : Undefined
 17196  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 17197                           
 17198                           ; Vector 66 : Undefined
 17199  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 17200                           
 17201                           ; Vector 67 : Undefined
 17202  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 17203                           
 17204                           ; Vector 68 : Undefined
 17205  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 17206                           
 17207                           ; Vector 69 : Undefined
 17208  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 17209                           
 17210                           ; Vector 70 : TMR5
 17211  000094  176A               	dw	_Default_ISR shr (0+2)
 17212                           
 17213                           ; Vector 71 : TMR5G
 17214  000096  1686               	dw	_TMR5_GATE_ISR shr (0+2)
 17215                           
 17216                           ; Vector 72 : TMR6
 17217  000098  176A               	dw	_Default_ISR shr (0+2)
 17218                           
 17219                           ; Vector 73 : CCP3
 17220  00009A  165F               	dw	_CCP3_CaptureISR shr (0+2)
 17221                           
 17222                           ; Vector 74 : CWG3
 17223  00009C  176A               	dw	_Default_ISR shr (0+2)
 17224                           
 17225                           ; Vector 75 : CLC3
 17226  00009E  176A               	dw	_Default_ISR shr (0+2)
 17227                           
 17228                           ; Vector 76 : Undefined
 17229  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 17230                           
 17231                           ; Vector 77 : Undefined
 17232  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 17233                           
 17234                           ; Vector 78 : Undefined
 17235  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 17236                           
 17237                           ; Vector 79 : Undefined
 17238  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 17239                           
 17240                           ; Vector 80 : CCP4
 17241  0000A8  166C               	dw	_CCP4_CaptureISR shr (0+2)
 17242                           
 17243                           ; Vector 81 : CLC4
 17244  0000AA  176A               	dw	_Default_ISR shr (0+2)
 17245  0000AC                     ivt0x8_undefint:
 17246                           	callstack 0
 17247  0000AC  00FF               	reset	
 17248                           
 17249                           	psect	text102
 17250  000000                     __ptext102:
 17251                           	callstack 0
 17252  000000                     
 17253                           	psect	rparam
 17254  0000                     
 17255                           	psect	idloc
 17256                           
 17257                           ;Config register IDLOC0 @ 0x200000
 17258                           ;	unspecified, using default values
 17259  200000                     	org	2097152
 17260  200000  0FFF               	dw	4095
 17261                           
 17262                           ;Config register IDLOC1 @ 0x200002
 17263                           ;	unspecified, using default values
 17264  200002                     	org	2097154
 17265  200002  0FFF               	dw	4095
 17266                           
 17267                           ;Config register IDLOC2 @ 0x200004
 17268                           ;	unspecified, using default values
 17269  200004                     	org	2097156
 17270  200004  0FFF               	dw	4095
 17271                           
 17272                           ;Config register IDLOC3 @ 0x200006
 17273                           ;	unspecified, using default values
 17274  200006                     	org	2097158
 17275  200006  0FFF               	dw	4095
 17276                           
 17277                           ;Config register IDLOC4 @ 0x200008
 17278                           ;	unspecified, using default values
 17279  200008                     	org	2097160
 17280  200008  0FFF               	dw	4095
 17281                           
 17282                           ;Config register IDLOC5 @ 0x20000A
 17283                           ;	unspecified, using default values
 17284  20000A                     	org	2097162
 17285  20000A  0FFF               	dw	4095
 17286                           
 17287                           ;Config register IDLOC6 @ 0x20000C
 17288                           ;	unspecified, using default values
 17289  20000C                     	org	2097164
 17290  20000C  0FFF               	dw	4095
 17291                           
 17292                           ;Config register IDLOC7 @ 0x20000E
 17293                           ;	unspecified, using default values
 17294  20000E                     	org	2097166
 17295  20000E  0FFF               	dw	4095
 17296                           
 17297                           	psect	config
 17298                           
 17299                           ;Config register CONFIG1L @ 0x300000
 17300                           ;	External Oscillator Selection
 17301                           ;	FEXTOSC = OFF, Oscillator not enabled
 17302                           ;	Reset Oscillator Selection
 17303                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 17304  300000                     	org	3145728
 17305  300000  8C                 	db	140
 17306                           
 17307                           ;Config register CONFIG1H @ 0x300001
 17308                           ;	Clock out Enable bit
 17309                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 17310                           ;	PRLOCKED One-Way Set Enable bit
 17311                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
 17312                           ;	Clock Switch Enable bit
 17313                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 17314                           ;	Fail-Safe Clock Monitor Enable bit
 17315                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 17316  300001                     	org	3145729
 17317  300001  FF                 	db	255
 17318                           
 17319                           ;Config register CONFIG2L @ 0x300002
 17320                           ;	MCLR Enable bit
 17321                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 17322                           ;	Power-up timer selection bits
 17323                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 17324                           ;	Multi-vector enable bit
 17325                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 17326                           ;	IVTLOCK bit One-way set enable bit
 17327                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
 17328                           ;	Low Power BOR Enable bit
 17329                           ;	LPBOREN = OFF, ULPBOR disabled
 17330                           ;	Brown-out Reset Enable bits
 17331                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 17332  300002                     	org	3145730
 17333  300002  FF                 	db	255
 17334                           
 17335                           ;Config register CONFIG2H @ 0x300003
 17336                           ;	Brown-out Reset Voltage Selection bits
 17337                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 17338                           ;	ZCD Disable bit
 17339                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 17340                           ;	PPSLOCK bit One-Way Set Enable bit
 17341                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 17342                           ;	Stack Full/Underflow Reset Enable bit
 17343                           ;	STVREN = ON, Stack full/underflow will cause Reset
 17344                           ;	Debugger Enable bit
 17345                           ;	DEBUG = OFF, Background debugger disabled
 17346                           ;	Extended Instruction Set Enable bit
 17347                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 17348  300003                     	org	3145731
 17349  300003  FF                 	db	255
 17350                           
 17351                           ;Config register CONFIG3L @ 0x300004
 17352                           ;	WDT Period selection bits
 17353                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 17354                           ;	WDT operating mode
 17355                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 17356  300004                     	org	3145732
 17357  300004  9F                 	db	159
 17358                           
 17359                           ;Config register CONFIG3H @ 0x300005
 17360                           ;	WDT Window Select bits
 17361                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 17362                           ;	WDT input clock selector
 17363                           ;	WDTCCS = SC, Software Control
 17364  300005                     	org	3145733
 17365  300005  FF                 	db	255
 17366                           
 17367                           ;Config register CONFIG4L @ 0x300006
 17368                           ;	Boot Block Size selection bits
 17369                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 17370                           ;	Boot Block enable bit
 17371                           ;	BBEN = OFF, Boot block disabled
 17372                           ;	Storage Area Flash enable bit
 17373                           ;	SAFEN = OFF, SAF disabled
 17374                           ;	Application Block write protection bit
 17375                           ;	WRTAPP = OFF, Application Block not write protected
 17376  300006                     	org	3145734
 17377  300006  FF                 	db	255
 17378                           
 17379                           ;Config register CONFIG4H @ 0x300007
 17380                           ;	Configuration Register Write Protection bit
 17381                           ;	WRTB = OFF, Configuration registers (300000-30000Bh) not write-protected
 17382                           ;	Boot Block Write Protection bit
 17383                           ;	WRTC = OFF, Boot Block (000000-0007FFh) not write-protected
 17384                           ;	Data EEPROM Write Protection bit
 17385                           ;	WRTD = OFF, Data EEPROM not write-protected
 17386                           ;	SAF Write protection bit
 17387                           ;	WRTSAF = OFF, SAF not Write Protected
 17388                           ;	Low Voltage Programming Enable bit
 17389                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 17390  300007                     	org	3145735
 17391  300007  FF                 	db	255
 17392                           
 17393                           ;Config register CONFIG5L @ 0x300008
 17394                           ;	PFM and Data EEPROM Code Protection bit
 17395                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 17396  300008                     	org	3145736
 17397  300008  FF                 	db	255
 17398                           
 17399                           ;Config register CONFIG5H @ 0x300009
 17400                           ;	unspecified, using default values
 17401  300009                     	org	3145737
 17402  300009  FF                 	db	255
 17403                           tosu	equ	0x3FFF
 17404                           tosh	equ	0x3FFE
 17405                           tosl	equ	0x3FFD
 17406                           stkptr	equ	0x3FFC
 17407                           pclatu	equ	0x3FFB
 17408                           pclath	equ	0x3FFA
 17409                           pcl	equ	0x3FF9
 17410                           tblptru	equ	0x3FF8
 17411                           tblptrh	equ	0x3FF7
 17412                           tblptrl	equ	0x3FF6
 17413                           tablat	equ	0x3FF5
 17414                           prodh	equ	0x3FF4
 17415                           prodl	equ	0x3FF3
 17416                           indf0	equ	0x3FEF
 17417                           postinc0	equ	0x3FEE
 17418                           postdec0	equ	0x3FED
 17419                           preinc0	equ	0x3FEC
 17420                           plusw0	equ	0x3FEB
 17421                           fsr0h	equ	0x3FEA
 17422                           fsr0l	equ	0x3FE9
 17423                           wreg	equ	0x3FE8
 17424                           indf1	equ	0x3FE7
 17425                           postinc1	equ	0x3FE6
 17426                           postdec1	equ	0x3FE5
 17427                           preinc1	equ	0x3FE4
 17428                           plusw1	equ	0x3FE3
 17429                           fsr1h	equ	0x3FE2
 17430                           fsr1l	equ	0x3FE1
 17431                           bsr	equ	0x3FE0
 17432                           indf2	equ	0x3FDF
 17433                           postinc2	equ	0x3FDE
 17434                           postdec2	equ	0x3FDD
 17435                           preinc2	equ	0x3FDC
 17436                           plusw2	equ	0x3FDB
 17437                           fsr2h	equ	0x3FDA
 17438                           fsr2l	equ	0x3FD9
 17439                           status	equ	0x3FD8

Data Sizes:
    Strings     152
    Constant    0
    Data        0
    BSS         182
    Persistent  23
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     57      76
    BANK0           160    133     159
    BANK1           256     20     180
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_21(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_21(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_16(CODE[4]), STR_15(CODE[4]), STR_12(CODE[4]), STR_11(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_16(CODE[4]), STR_15(CODE[4]), STR_12(CODE[4]), STR_11(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S3438_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_10(CODE[14]), STR_9(CODE[13]), STR_8(CODE[14]), STR_7(CODE[22]), 
		 -> STR_6(CODE[15]), STR_5(CODE[12]), STR_4(CODE[12]), STR_3(CODE[11]), 
		 -> STR_2(CODE[9]), STR_1(CODE[11]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 22
		 -> STR_10(CODE[14]), STR_9(CODE[13]), STR_8(CODE[14]), STR_7(CODE[22]), 
		 -> STR_6(CODE[15]), STR_5(CODE[12]), STR_4(CODE[12]), STR_3(CODE[11]), 
		 -> STR_2(CODE[9]), STR_1(CODE[11]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_10(CODE[14]), STR_9(CODE[13]), STR_8(CODE[14]), STR_7(CODE[22]), 
		 -> STR_6(CODE[15]), STR_5(CODE[12]), STR_4(CODE[12]), STR_3(CODE[11]), 
		 -> STR_2(CODE[9]), STR_1(CODE[11]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), Absolute function(), 

    TMR5_SetGateInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), 

    TMR5_GateInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), Absolute function(), 

    CCP4_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), 

    CCP4_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), Absolute function(), 

    CCP3_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), 

    CCP3_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), Absolute function(), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultErrorHandler(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultOverrunErrorHandler(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultFramingErrorHandler(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Receive_ISR(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _loop->___flge
    _checkBatt->___flge
    _efgtoa->___fladd
    _efgtoa->___flge
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___fladd
    ___flge->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_UART1_Write
    _abs->___aomod
    ___fldiv->___xxtofl
    _calcSpeed->___fladd
    ___fladd->___flmul
    _setMotor->_PWM7_LoadDutyValue
    _setMotor->_PWM8_LoadDutyValue
    _actSpeed->___aldiv
    ___xxtofl->___awdiv
    ___fltol->___fladd
    ___flmul->___xxtofl
    _SYSTEM_Initialize->_TMR5_Initialize
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR5_Initialize->_TMR5_SetGateInterruptHandler
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _CCP4_Initialize->_CCP4_SetCallBack
    _CCP3_Initialize->_CCP3_SetCallBack

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR4_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _CCP3_CaptureISR in COMRAM

    _CCP3_CaptureISR->_CCP3_DefaultCallBack

Critical Paths under _CCP4_CaptureISR in COMRAM

    _CCP4_CaptureISR->_CCP4_DefaultCallBack

Critical Paths under _TMR5_GATE_ISR in COMRAM

    _TMR5_DefaultGateInterruptHandler->_TMR5_ReadTimer
    _TMR5_Reload->_TMR5_WriteTimer

Critical Paths under _SMT1_PR_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_Overflow_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___fltol
    _floorf->___fldiv
    ___flsub->___fladd
    ___flge->___flmul
    _calcSteering->_setSteering
    _setSteering->___fltol
    _calcSpeed->___fltol
    ___fladd->___flmul
    _calcMotorPow->___fltol
    ___fltol->___fladd

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR4_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _CCP3_CaptureISR in BANK0

    None.

Critical Paths under _CCP4_CaptureISR in BANK0

    None.

Critical Paths under _TMR5_GATE_ISR in BANK0

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _loop->_getCurve
    _getReverse->_printf
    _getCurve->_printf
    _checkBatt->_getBatteryVoltage
    _getBatteryVoltage->_printf
    _printf->_vfprintf

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR4_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _CCP3_CaptureISR in BANK1

    None.

Critical Paths under _CCP4_CaptureISR in BANK1

    None.

Critical Paths under _TMR5_GATE_ISR in BANK1

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR4_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _CCP3_CaptureISR in BANK2

    None.

Critical Paths under _CCP4_CaptureISR in BANK2

    None.

Critical Paths under _TMR5_GATE_ISR in BANK2

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR4_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _CCP3_CaptureISR in BANK3

    None.

Critical Paths under _CCP4_CaptureISR in BANK3

    None.

Critical Paths under _TMR5_GATE_ISR in BANK3

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR4_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _CCP3_CaptureISR in BANK4

    None.

Critical Paths under _CCP4_CaptureISR in BANK4

    None.

Critical Paths under _TMR5_GATE_ISR in BANK4

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR4_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _CCP3_CaptureISR in BANK5

    None.

Critical Paths under _CCP4_CaptureISR in BANK5

    None.

Critical Paths under _TMR5_GATE_ISR in BANK5

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR4_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _CCP3_CaptureISR in BANK6

    None.

Critical Paths under _CCP4_CaptureISR in BANK6

    None.

Critical Paths under _TMR5_GATE_ISR in BANK6

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR4_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _CCP3_CaptureISR in BANK7

    None.

Critical Paths under _CCP4_CaptureISR in BANK7

    None.

Critical Paths under _TMR5_GATE_ISR in BANK7

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR4_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _CCP3_CaptureISR in BANK8

    None.

Critical Paths under _CCP4_CaptureISR in BANK8

    None.

Critical Paths under _TMR5_GATE_ISR in BANK8

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR4_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _CCP3_CaptureISR in BANK9

    None.

Critical Paths under _CCP4_CaptureISR in BANK9

    None.

Critical Paths under _TMR5_GATE_ISR in BANK9

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR4_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _CCP3_CaptureISR in BANK10

    None.

Critical Paths under _CCP4_CaptureISR in BANK10

    None.

Critical Paths under _TMR5_GATE_ISR in BANK10

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR4_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _CCP3_CaptureISR in BANK11

    None.

Critical Paths under _CCP4_CaptureISR in BANK11

    None.

Critical Paths under _TMR5_GATE_ISR in BANK11

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR4_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _CCP3_CaptureISR in BANK12

    None.

Critical Paths under _CCP4_CaptureISR in BANK12

    None.

Critical Paths under _TMR5_GATE_ISR in BANK12

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR4_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _CCP3_CaptureISR in BANK13

    None.

Critical Paths under _CCP4_CaptureISR in BANK13

    None.

Critical Paths under _TMR5_GATE_ISR in BANK13

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR4_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _CCP3_CaptureISR in BANK14

    None.

Critical Paths under _CCP4_CaptureISR in BANK14

    None.

Critical Paths under _TMR5_GATE_ISR in BANK14

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR4_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _CCP3_CaptureISR in BANK15

    None.

Critical Paths under _CCP4_CaptureISR in BANK15

    None.

Critical Paths under _TMR5_GATE_ISR in BANK15

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  235832
                  _SYSTEM_Initialize
           _TMR4_SetInterruptHandler
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0  234685
                             ___flge
                           ___xxtofl
                       _calcMotorPow
                          _calcSpeed
                       _calcSteering
                          _checkBatt
                  _getBatteryVoltage
                           _getCurve
                         _getReverse
                           _setMotor
                        _setSteering
 ---------------------------------------------------------------------------------
 (2) _getReverse                                           0     0      0   44584
                             _printf
 ---------------------------------------------------------------------------------
 (2) _getCurve                                             6     6      0   44776
                                             14 BANK1      6     6      0
                             _printf
 ---------------------------------------------------------------------------------
 (2) _checkBatt                                            0     0      0   59185
                             ___flge
                           ___xxtofl
                  _getBatteryVoltage
                        _setSteering
 ---------------------------------------------------------------------------------
 (2) _getBatteryVoltage                                    4     4      0   48838
                                             14 BANK1      4     4      0
           _ADCC_GetSingleConversion
                            ___fldiv
                           ___xxtofl
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              10     4      6   44584
                                              6 BANK1      8     2      6
                           ___xxtofl (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   43585
                                            131 BANK0      2     2      0
                                              0 BANK1      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           46    40      6   43079
                                            103 BANK0     28    22      6
                               _dtoa
                             _efgtoa
                              _fputc
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6     595
                                             19 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              68    61      7   31700
                                             35 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _tolower                                              8     6      2    1142
                                             25 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     551
                                             19 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _strcpy                                              10     6      4    1037
                                             19 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     669
                                             53 COMRAM     4     0      4
                                             13 BANK0     16    16      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       14    10      4     375
                                             19 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (7) ___flsub                                              8     0      8    4187
                                             25 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     155
                                             19 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8    1346
                                             53 COMRAM     4     4      0
                                             13 BANK0      8     0      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     770
                                             19 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     613
                                             19 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    6493
                                             48 COMRAM     8     8      0
                                              0 BANK0     28    18     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    4227
                                             37 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     220
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1537
                                             30 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4    1037
                                             21 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0      93
                                             20 COMRAM     1     1      0
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (8) _UART1_Write                                          1     1      0      62
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     183
                                             37 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     613
                                             19 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     625
                                             19 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (3) _ADCC_GetSingleConversion                             5     3      2      31
                                             19 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _calcSteering                                         4     4      0    8090
                                             44 BANK0      4     4      0
                        _setSteering
 ---------------------------------------------------------------------------------
 (2) _setSteering                                          9     6      3    7895
                                             35 BANK0      9     6      3
                 _PWM5_LoadDutyValue
                 _PWM6_LoadDutyValue
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    3083
                                             41 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _PWM6_LoadDutyValue                                   4     2      2     120
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _PWM5_LoadDutyValue                                   4     2      2     120
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _calcSpeed                                            6     6      0    9600
                                             35 BANK0      6     6      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (8) ___fladd                                             16     8      8    3622
                                             53 COMRAM     4     4      0
                                             13 BANK0     12     4      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _calcMotorPow                                         7     7      0    8359
                                             35 BANK0      7     7      0
                            ___awdiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                           _actSpeed
                           _setMotor
 ---------------------------------------------------------------------------------
 (2) _setMotor                                             4     2      2     906
                                             23 COMRAM     4     2      2
                 _PWM7_LoadDutyValue
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _PWM8_LoadDutyValue                                   4     2      2     272
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _PWM7_LoadDutyValue                                   4     2      2     272
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _actSpeed                                             4     2      2     629
                                             33 COMRAM     4     2      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     604
                                             19 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    1106
                                             27 COMRAM    14    10      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     787
                                             25 BANK0     10     6      4
                            ___awdiv (ARG)
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             25    17      8    3953
                                             41 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___awdiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     805
                                             19 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     973
                    _ADCC_Initialize
                    _CCP3_Initialize
                    _CCP4_Initialize
                    _CLC3_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM5_Initialize
                    _PWM6_Initialize
                    _PWM7_Initialize
                    _PWM8_Initialize
                    _SMT1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR4_Initialize
                    _TMR5_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     490
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0      98
                                             21 COMRAM     2     2      0
       _TMR5_SetGateInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetGateInterruptHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     174
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             2     0      2     174
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      2     2      0       0
                                             19 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMT1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM7_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      15
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CLC3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP4_Initialize                                      0     0      0      98
                   _CCP4_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP4_SetCallBack                                     2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CCP3_Initialize                                      0     0      0      98
                   _CCP3_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP3_SetCallBack                                     2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _UART1_tx_vect_isr                                   1     1      0       0
                                             16 COMRAM     1     1      0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (14) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _UART1_rx_vect_isr                                   1     1      0       0
                                             17 COMRAM     1     1      0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (14) _UART1_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _UART1_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _UART1_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _UART1_DefaultErrorHandler                           0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _UART1_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _TMR4_ISR                                            1     1      0       0
                                             18 COMRAM     1     1      0
                      _TMR4_CallBack
 ---------------------------------------------------------------------------------
 (14) _TMR4_CallBack                                       0     0      0       0
                   Absolute function *
                       _TMR4_10msISR *
       _TMR4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (15) _TMR4_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _TMR4_10msISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _CCP3_CaptureISR                                     2     2      0     144
                                              2 COMRAM     2     2      0
                   Absolute function *
               _CCP3_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (18) _CCP3_DefaultCallBack                                2     0      2      97
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _CCP4_CaptureISR                                     2     2      0     144
                                              6 COMRAM     2     2      0
                   Absolute function *
               _CCP4_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (18) _CCP4_DefaultCallBack                                2     0      2      97
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _TMR5_GATE_ISR                                       0     0      0     233
                   Absolute function *
   _TMR5_DefaultGateInterruptHandler *
 ---------------------------------------------------------------------------------
 (18) _TMR5_DefaultGateInterruptHandler                    0     0      0     233
                     _TMR5_ReadTimer
                        _TMR5_Reload
 ---------------------------------------------------------------------------------
 (19) _TMR5_Reload                                         0     0      0     164
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (20) _TMR5_WriteTimer                                     2     0      2     164
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (19) _TMR5_ReadTimer                                      8     6      2      69
                                              8 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 20
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _SMT1_PR_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _SMT1_PW_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _SMT1_Overflow_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
     _CCP3_Initialize
       _CCP3_SetCallBack
     _CCP4_Initialize
       _CCP4_SetCallBack
     _CLC3_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM5_Initialize
     _PWM6_Initialize
     _PWM7_Initialize
     _PWM8_Initialize
     _SMT1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetGateInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
   _TMR4_SetInterruptHandler
   _loop
     ___flge
       ___flmul (ARG)
         ___awdiv (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _calcMotorPow
       ___awdiv
       ___flmul
       ___fltol
         ___awdiv (ARG)
         ___fladd (ARG)
           ___flmul (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _actSpeed
         ___aldiv
       _setMotor
         _PWM7_LoadDutyValue
         _PWM8_LoadDutyValue
     _calcSpeed
       ___fladd
       ___flmul
       ___fltol
       ___xxtofl
     _calcSteering
       _setSteering
         _PWM5_LoadDutyValue
         _PWM6_LoadDutyValue
         ___fldiv
         ___fltol
         ___xxtofl
     _checkBatt
       ___flge
       ___xxtofl
       _getBatteryVoltage
         _ADCC_GetSingleConversion
         ___fldiv
         ___xxtofl
         _printf
           ___xxtofl (ARG)
           _vfprintf (ARG)
             _vfpfcnvrt
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                   ___flmul (ARG)
                 ___fltol
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                 _isupper
                 _pad
                 _strcpy
                 _tolower
                   _isupper
               _fputc
               _isupper
               _strncmp
               _tolower
       _setSteering
     _getBatteryVoltage
     _getCurve
       _printf
     _getReverse
       _printf
     _setMotor
     _setSteering

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *

 _TMR4_ISR (ROOT)
   _TMR4_CallBack
     Absolute function(Fake) *
     _TMR4_10msISR *
     _TMR4_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _CCP3_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP3_DefaultCallBack *

 _CCP4_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP4_DefaultCallBack *

 _TMR5_GATE_ISR (ROOT)
   Absolute function(Fake) *
   _TMR5_DefaultGateInterruptHandler *
     _TMR5_ReadTimer
     _TMR5_Reload
       _TMR5_WriteTimer

 _SMT1_PR_ACQ_ISR (ROOT)

 _SMT1_PW_ACQ_ISR (ROOT)

 _SMT1_Overflow_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK15          100      0       0      30        0.0%
BANK15             100      0       0      31        0.0%
BITBANK14          100      0       0      28        0.0%
BANK14             100      0       0      29        0.0%
BITBANK13          100      0       0      36        0.0%
BANK13             100      0       0      27        0.0%
BITBANK12          100      0       0      35        0.0%
BANK12             100      0       0      26        0.0%
BITBANK11          100      0       0      34        0.0%
BANK11             100      0       0      25        0.0%
BITBANK10          100      0       0      33        0.0%
BANK10             100      0       0      24        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     14      B4       7       70.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     85      9F       5       99.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     39      4C       1       80.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     19F      32        0.0%
DATA                 0      0     19F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Jan 31 09:01:35 2024

                             _CCP4_Initialize 5A7A                        ??_CCP3_DefaultCallBack 0003  
                                ___fldiv@aexp 006C                                  ___fldiv@bexp 006B  
                                ___fldiv@sign 0064                                            l72 5D1C  
                                          l75 5C26                                            l69 54D0  
                                ___awdiv@sign 0019                             ??_TMR5_WriteTimer 000B  
                 __size_of_PWM6_LoadDutyValue 0034                                           l312 538A  
                                         l404 5486                                           l308 5342  
                                         l309 535C                                           l318 5D34  
                                         l520 551A                                           l441 5AD4  
                                         l362 5D52                                           l371 5D3E  
                                         l188 4B80                                           l284 4FC4  
                                         l365 5D66                                           l359 5D5C  
                                         l368 5D48                                           l712 5978  
                                         l449 5D8E                                           l482 5AA6  
                                         l723 5CBC                                           l555 5D70  
                                         l644 5B2E                                           l740 5910  
                                         l709 5CD4                                           l581 57CC  
                                         l726 5944                                           l479 5D84  
                                         l751 5CEC                                           l737 5D04  
                                         l754 58DC                                           l923 5CA4  
                                         l695 5D7A                                           l795 5A78  
                                         l893 5B5A                                           _GIE 01FE97  
                                         _PR2 003FAB                                           _PR4 003F9F  
                                         _abs 5636                                           _pad 4C46  
                     __size_of_PMD_Initialize 0024                                  ___awmod@sign 0019  
                             _TMR2_Initialize 5C8A                CCP4_SetCallBack@customCallBack 0014  
                                         tosl 003FFD                                           wreg 003FE8  
                            _CCP4_SetCallBack 5D7C                                  ___flmul@aexp 0061  
                                ___flmul@bexp 0066                            _UART1_Transmit_ISR 55F2  
                                ___flmul@sign 0060                                  ___flmul@temp 006B  
                                ___flmul@prod 0067                       __end_of_CCP4_CaptureISR 59E4  
                                ___fltol@exp1 0082                                          l2000 2E36  
                                        l2001 2E24                                          l1042 53E6  
                                        ?_abs 0026                                          l1054 59F4  
                                        l2023 2B7C                                          l1320 439A  
                                        l1057 5A14                                          l1321 43AC  
                                        l2026 2A0E                                          l1402 3AFC  
                                        l2122 4C8A                                          l1306 3200  
                                        l2019 27F4                                          l1235 443C  
                                        l2036 2B3E                                          l2028 2A86  
                                        l2060 3B54                                          l1332 3D5A  
                                        l1244 44C8                                          l1228 43CC  
                                        l2029 2A74                                          l1253 50EE  
                                        l2125 4CCC                                          l2133 32A2  
                                        l1261 5180                                          l2063 3CB0  
                                        l1327 3CD0                                          l2127 4D06  
                                        l2135 32AA                                          l2304 575C  
                                        l1256 51F4                                          l4001 4B3E  
                                        l2153 34E6                                          l2217 18F6  
                                        l2074 3C48                                          l1346 3E44  
                                        l4003 4B40                                          l2067 3BEC  
                                        l2171 1D46                                          l2083 5BDA  
                             _timer3ReloadVal 018C                                          l1532 4130  
                                        l1284 31F0                                          l4005 4B42  
                                        l2333 52CE                                          l1702 46DC  
                                        l2270 5264                                          l4007 5D06  
                                        l4031 5A4A                                          l1367 3906  
                                        l1391 393A                                          l1519 3FCC  
                                        l2319 505A                                          l2327 55F0  
                                        l2343 49D4                                          l2263 2164  
                                        l2255 226A                                          l1376 427C  
                                        l1392 394E                                          l2280 48E0  
                                        l4041 5A72                                          l4033 5A68  
                                        l1385 4AB6                                          l1393 39C2  
                                        l2353 5326                                          l1298 3116  
                                        l4019 538C                                          l4043 5A74  
                                        l4035 5A6A                                          l4051 5C9C  
                                        l2339 56AE                                          l1636 4C44  
                                        l1484 45D4                                          l4053 5CD6  
                                        l4045 5CA6                                          l4037 5A6C  
                                        l1389 3916                                          l2285 566C  
                                        l2189 14B8                                          l2269 525C  
                                        l1670 479C                                          l2294 36FC  
                                        l2358 532E                                          l4039 5A70  
                                        l4047 5C8A                                          l2288 5674  
                                        l1664 4F20                                          l4065 5B30  
                                        l4049 5C96                                          l1649 4E76  
                                        l2297 3640                                          l4075 5CEE  
                                        l4091 5CBE                                          l1675 47E2  
                                        l1933 245C                                          l1950 2576  
                                        l1942 272C                                          l1934 244A  
                                        l1935 2410                                          l1679 5794  
                                        l1960 2634                                          ?_pad 0026  
                                        l7031 549C                                          l1959 2646  
                                        l1975 55AC                                          l1992 2D3C  
                                        l7041 54B8                                          l7033 54A4  
                                        l8001 2A0C                                          l7043 54BC  
                                        l7035 54A8                                          l7027 5488  
                                        l8011 2A6C                                          l8003 2A1E  
                                        l1987 2F18                                          l7045 54C4  
                                        l7037 54AC                                          l7029 5498  
                                        l8021 2ADA                                          l8005 2A2C  
                                        l6421 44DC                                          l1989 2D78  
                                        l8101 4DE2                                          l1998 2DBE  
                                        l3951 543C                                          l6511 5D54  
                                        l7047 54C8                                          l7039 54B0  
                                        l8031 2B42                                          l8015 2A96  
                                        l8023 2ADE                                          l8007 2A30  
                                        l6431 4512                                          l6423 44EC  
                                        l8111 4E16                                          l8103 4DE6  
                                        l3961 5468                                          l3953 543E  
                                        l6513 5D4A                                          l8041 2B6C  
                                        l8033 2B52                                          l8025 2AF8  
                                        l8017 2AA2                                          l8009 2A3E  
                                        l8201 4672                                          l6441 455A  
                                        l6433 4522                                          l6425 44F0  
                                        l6417 44CA                                          l8121 4E50  
                                        l8113 4E1E                                          l8105 4DF4  
                                        l3971 547C                                          l3963 5472  
                                        l3955 5446                                          l6531 5D68  
                                        l6515 5D5E                                          l6507 5D40  
                                        l8051 4B82                                          l8035 2B60  
                                        l8027 2B0C                                          l8019 2AB0  
                                        l8211 469C                                          l8203 467C  
                                        l6451 459E                                          l6443 4564  
                                        l6435 4538                                          l6427 44FE  
                                        l6419 44CE                                          l8115 4E2C  
                                        l8123 4E56                                          l8107 4DFC  
                                        l8131 4E78                                          l9003 31B2  
                                        l9011 4296                                          l3973 547E  
                                        l3965 5476                                          l3957 5450  
                                        l3981 5C04                                          l6509 5D36  
                                        l6701 4F5C                                          l8061 4BAE  
                                        l8053 4B86                                          l8037 2B62  
                                        l8029 2B26                                          l8213 46AC  
                                        l6445 4582                                          l6437 4540  
                                        l6453 45A4                                          l6429 450E  
                                        l6621 507A                                          l7501 2302  
                                        l9101 370C                                          l8221 4C46  
                                        l8125 4E66                                          l8117 4E42  
                                        l8109 4E0E                                          l8141 4F18  
                                        l8133 4EA6                                          l8045 5566  
                                        l8301 36A0                                          l9021 42E6  
                                        l9013 42A0                                          l6527 5D86  
                                        l6631 5AA8                                          l3975 5480  
                                        l3967 5478                                          l3959 5466  
                                        l3991 4B30                                          l3983 4AB8  
                                        l6711 4F70                                          l6703 4F60  
                                        l8071 4BDC                                          l8063 4BB6  
                                        l8055 4B94                                          l8039 2B68  
                                        l8215 46BC                                          l6455 45B4  
                                        l6447 4592                                          l6439 454C  
                                        l6623 508A                                          l6391 5946  
                                        l6551 49F2                                          l7511 2336  
                                        l7503 2304                                          l9111 3760  
                                        l9103 3722                                          l8231 4C96  
                                        l8223 4C54                                          l8311 3202  
                                        l8127 4E6E                                          l8119 4E4A  
                                        l8143 4F1E                                          l8135 4EB6  
                                        l8151 471E                                          l8047 5578  
                                        l8303 36B4                                          l9031 4334  
                                        l9023 42EA                                          l9015 42B2  
                                        l6633 5AB8                                          l6529 5D7C  
                                        l3977 5482                                          l3969 547A  
                                        l3993 4B32                                          l3985 4AD8  
                                        l6641 5B04                                          l6721 4F8C  
                                        l6713 4F74                                          l6705 4F64  
                                        l8081 4C16                                          l8073 4BE4  
                                        l8065 4BBA                                          l8057 4B9C  
                                        l8217 46CC                                          l8209 4690  
                                        l6457 45C4                                          l6449 4594  
                                        l6625 50BA                                          l6617 505C  
                                        l6393 5912                                          l6561 4A4E  
                                        l6553 4A0E                                          l7601 2544  
                                        l7521 2372                                          l7505 2314  
                                        l7513 233E                                          l9121 379E  
                                        l9113 376C                                          l9105 3726  
                                        l7441 5332                                          l8233 4CAA  
                                        l8225 4C68                                          l8321 327C  
                                        l8313 3222                                          l8137 4EE4  
                                        l8161 478A                                          l8153 474C  
                                        l8305 36DC                                          l8401 114E  
                                        l9041 4386                                          l9033 433E  
                                        l9025 42FE                                          l9017 42C4  
                                        l9009 427E                                          l9201 4466  
                                        l6635 5AC4                                          l6651 5A7A  
                                        l3979 5484                                          l3995 4B34  
                                        l3987 4ADA                                          l6547 5D72  
                                        l6643 5B18                                          l6723 4F98  
                                        l6715 4F78                                          l6707 4F68  
                                        l8091 4C3C                                          l8083 4C18  
                                        l8075 4BF2                                          l8067 4BC2  
                                        l8059 4BA0                                          l6627 50E6  
                                        l6619 5064                                          l6563 4A6A  
                                        l6555 4A16                                          l7611 259C  
                                        l7603 2546                                          l7531 2386  
                                        l7523 2376                                          l7515 234E  
                                        l7507 2324                                          l9131 385E  
                                        l9123 37B4                                          l9107 3742  
                                        l9115 3778                                          l6395 58DE  
                                        l9051 3CD0                                          l8243 5636  
                                        l7451 5382                                          l7443 5352  
                                        l8235 4CAE                                          l8227 4C76  
                                        l8331 32D8                                          l8323 3296  
                                        l8315 324C                                          l8139 4EF4  
                                        l8163 47DA                                          l8155 475C  
                                        l8147 46DE                                          l8171 5774  
                                        l8251 4842                                          l8307 36EC  
                                        l8411 11C2                                          l8403 1154  
                                        l9035 434C                                          l9027 4310  
                                        l9019 42CE                                          l9211 44B0  
                                        l9203 4474                                          l6637 5ACE  
                                        l6653 5A8A                                          l3997 4B36  
                                        l3989 4AE2                                          l6661 5796  
                                        l6645 5B1C                                          l6725 4FC0  
                                        l6717 4F7C                                          l6709 4F6C  
                                        l8085 4C1E                                          l8077 4BF8  
                                        l8069 4BD4                                          l6565 4A72  
                                        l6557 4A22                                          l6549 49D6  
                                        l7621 25CA                                          l7605 2556  
                                        l7541 239A                                          l7533 238A  
                                        l7525 237A                                          l7517 2360  
                                        l7509 2334                                          l9141 38D2  
                                        l9125 3846                                          l9117 3784  
                                        l9109 374A                                          l6397 58AA  
                                        l9053 3CEC                                          l9061 3D20  
                                        l7701 3E58                                          l8245 5650  
                                        l7453 5386                                          l7445 535E  
                                        l7461 4FD8                                          l8237 4CDA  
                                        l8229 4C82                                          l8341 337A  
                                        l8333 32E0                                          l8325 32B2  
                                        l8317 326C                                          l8165 47E0  
                                        l8157 476A                                          l8149 470E  
                                        l8173 5784                                          l8261 4894  
                                        l8253 486A                                          l8501 15A4  
                                        l8413 11DE                                          l8405 117A  
                                        l8421 1228                                          l9045 4394  
                                        l9029 4326                                          l9037 4352  
                                        l9213 44B8                                          l9205 4484  
                                        l9221 5C50                                          l6639 5AD2  
                                        l6655 5A96                                          l3999 4B3C  
                                        l6663 57AA                                          l6647 5B1E  
                                        l6671 54E6                                          l6719 4F80  
                                        l8079 4C0E                                          l8087 4C24  
                                        l8191 4642                                          l8183 4602  
                                        l6567 4A7E                                          l6559 4A32  
                                        l7623 25D8                                          l7615 25B0  
                                        l7631 25F6                                          l7607 2566  
                                        l7543 239E                                          l7535 238E  
                                        l7527 237E                                          l7519 236E  
                                        l7551 23AE                                          l9143 38DA  
                                        l9127 3852                                          l9119 379A  
                                        l9071 3DAE                                          l9063 3D5E  
                                        l9055 3CF8                                          l7711 3EAE  
                                        l7703 3E78                                          l7447 5370  
                                        l7455 5388                                          l7439 5332  
                                        l7463 4FEA                                          l8239 4CEE  
                                        l8351 3438                                          l8343 3380  
                                        l8335 32EA                                          l8327 32C4  
                                        l8319 327A                                          l8095 4DC8  
                                        l8159 477C                                          l8255 4876  
                                        l8247 47E4                                          l8271 5276  
                                        l8511 15EE                                          l8503 15BC  
                                        l8431 12B2                                          l8423 124E  
                                        l8415 11F6                                          l9039 4368  
                                        l9215 44BC                                          l9207 4498  
                                        l9223 5C52                                          l6657 5AA0  
                                        l6665 57AE                                          l6649 5B2A  
                                        l6681 5516                                          l6673 54EA  
                                        l8089 4C34                                          l8193 4650  
                                        l8185 462C                                          l8177 45D6  
                                        l6569 4A9E                                          l9161 4160  
                                        l9153 4132                                          l7625 25E0  
                                        l7617 25BA                                          l7609 258C  
                                        l7633 2604                                          l7561 241E  
                                        l7553 23B2                                          l7545 23A2  
                                        l7537 2392                                          l7529 2382  
                                        l7481 229A                                          l7473 226C  
                                        l9145 38F6                                          l9137 386A  
                                        l7801 2C00                                          l9401 3E0E  
                                        l9073 3DC0                                          l9065 3D72  
                                        l9057 3D14                                          l9049 3CB2  
                                        l7721 3F02                                          l7713 3EBA  
                                        l7705 3E7C                                          l7449 5372  
                                        l7457 5D2E                                          l7465 4FF4  
                                        l8361 3486                                          l8353 3452  
                                        l8337 32F0                                          l8345 33E4  
                                        l8329 32D2                                          l8097 4DCC  
                                        l8169 575E                                          l8265 48D8  
                                        l8249 4804                                          l8273 52D0  
                                        l8601 1AEA                                          l8513 1602  
                                        l8521 16F8                                          l8505 15CE  
                                        l8441 1316                                          l8433 12CA  
                                        l8417 1200                                          l8409 11B0  
                                        l9217 44C0                                          l9225 5C60  
                                        l6659 5AA4                                          l6667 57C8  
                                        l6675 5504                                          l6691 4F48  
                                        l6683 4F22                                          l8187 462E  
                                        l8179 45EE                                          l9171 4210  
                                        l9163 41DC                                          l9155 413E  
                                        l7643 2656                                          l7651 26AC  
                                        l7635 2608                                          l7627 25E4  
                                        l7619 25C8                                          l7571 2448  
                                        l7563 242A                                          l7555 23DC  
                                        l7547 23A6                                          l7539 2396  
                                        l7491 22D4                                          l7483 22AA  
                                        l7475 227A                                          l9147 38FE  
                                        l9139 38B4                                          l7811 2C34  
                                        l7803 2C02                                          l9403 3A12  
                                        l9067 3D86                                          l7731 3F76  
                                        l7723 3F14                                          l7715 3ED8  
                                        l7707 3E8A                                          l7467 5012  
                                        l7459 4FC6                                          l8363 3498  
                                        l8347 3400                                          l8355 3460  
                                        l8339 3372                                          l8099 4DDA  
                                        l8259 4882                                          l8291 3582  
                                        l8283 34E8                                          l8611 1B48  
                                        l8603 1AEE                                          l8531 17C4  
                                        l8523 1716                                          l8515 1666  
                                        l8507 15D6                                          l8451 13E2  
                                        l8435 12D4                                          l8427 1284  
                                        l9219 5C4C                                          l6677 5508  
                                        l6669 54D2                                          l6693 4F4C  
                                        l6685 4F26                                          l8189 463E  
                                        l9181 4268                                          l9173 421C  
                                        l9165 41F0                                          l9157 414C  
                                        l7661 26FE                                          l7653 26BC  
                                        l7645 2662                                          l7637 2616  
                                        l7629 25F4                                          l7581 249E  
                                        l7573 246A                                          l7565 242E  
                                        l7557 23F8                                          l7549 23AA  
                                        l7493 22DA                                          l7485 22BA  
                                        l7477 2288                                          l9405 387E  
                                        l7901 2EF8                                          l7821 2C7A  
                                        l7805 2C12                                          l7813 2C3C  
                                        l9077 3DD4                                          l9069 3D9A  
                                        l9085 3DFA                                          l7725 3F42  
                                        l7717 3EE0                                          l7733 3F7C  
                                        l7709 3EAA                                          l7741 3FCE  
                                        l7469 5048                                          l8365 34A4  
                                        l8357 3472                                          l8349 341E  
                                        l8285 3508                                          l8269 5266  
                                        l8277 5306                                          l8621 1B86  
                                        l8613 1B58                                          l8605 1B0C  
                                        l8541 1874                                          l8533 17D4  
                                        l8525 174A                                          l8517 16BE  
                                        l8509 15DE                                          l8461 1466  
                                        l8453 1416                                          l8445 134C  
                                        l8429 1296                                          l8381 10CA  
                                        l8373 109A                                          l8701 1D48  
                                        l6679 550A                                          l6695 4F50  
                                        l6687 4F32                                          l8199 4668  
                                        l9183 4274                                          l9175 4238  
                                        l9167 41F8                                          l9159 4160  
                                        l7671 271C                                          l7663 2704  
                                        l7655 26CC                                          l7647 2670  
                                        l7639 262C                                          l7591 24D8  
                                        l7583 24AC                                          l7575 247A  
                                        l7567 243C                                          l7559 2408  
                                        l7495 22EC                                          l7487 22BC  
                                        l7479 228A                                          l7903 2F06  
                                        l7831 2CA2                                          l7823 2C7E  
                                        l7815 2C4C                                          l7807 2C22  
                                        l9079 3DE6                                          l7735 3F8C  
                                        l7727 3F62                                          l7719 3EF4  
                                        l7751 4012                                          l7743 3FD2  
                                        l8367 34AC                                          l8359 3480  
                                        l8295 35F4                                          l8287 3560  
                                        l8279 5318                                          l8631 1BBC  
                                        l8623 1B96                                          l8615 1B5C  
                                        l8607 1B28                                          l8551 18E2  
                                        l8543 18A8                                          l8535 17E4  
                                        l8527 177E                                          l8519 16F2  
                                        l8463 1478                                          l8471 14C4  
                                        l8455 141E                                          l8447 1380  
                                        l8439 12FC                                          l8391 1120  
                                        l8383 10EE                                          l8375 10A4  
                                        l8711 1DCA                                          l8703 1D76  
                                        l9191 43F0                                          l6697 4F54  
                                        l6689 4F42                                          l7921 274C  
                                        l9177 4244                                          l9169 420C  
                                        l7665 2706                                          l7657 26EC  
                                        l7649 26AA                                          l7593 24DA  
                                        l7585 24BA                                          l7569 243E  
                                        l7497 22EE                                          l7489 22C4  
                                        l7905 2F0C                                          l7841 2CF0  
                                        l7817 2C62                                          l7809 2C32  
                                        l7737 3FAC                                          l7729 3F64  
                                        l7761 407A                                          l7753 4032  
                                        l7745 3FE0                                          l7681 55D0  
                                        l8369 34BE                                          l8297 3630  
                                        l8289 3574                                          l8641 1C18  
                                        l8633 1BC8                                          l8625 1B9E  
                                        l8617 1B6C                                          l8609 1B3A  
                                        l8561 1998                                          l8553 18EE  
                                        l8545 18BC                                          l8537 1818  
                                        l8529 1792                                          l8481 1504  
                                        l8465 148A                                          l8449 1386  
                                        l8457 1452                                          l8393 1132  
                                        l8385 10F8                                          l8377 10B4  
                                        l8721 1E98                                          l8713 1DDA  
                                        l8705 1D88                                          l8801 5BB4  
                                        l9193 43F4                                          l9185 43AE  
                                        l6699 4F58                                          l7931 2792  
                                        l7923 275C                                          l7915 272E  
                                        l8811 3B1E                                          l9179 4260  
                                        l7667 270C                                          l7659 26F0  
                                        l7595 24E4                                          l7587 24C6  
                                        l7579 248E                                          l7499 22F4  
                                        l9099 36FE                                          l7907 2F0E  
                                        l7851 2D3A                                          l7843 2D00  
                                        l7835 2CB6                                          l7819 2C72  
                                        l7827 2C92                                          l7771 40F0  
                                        l7763 40A8                                          l7755 4050  
                                        l7747 4000                                          l7675 55AE  
                                        l7683 5676                                          l8299 3664  
                                        l8651 1C62                                          l8635 1BCE  
                                        l8643 1C1E                                          l8627 1BAC  
                                        l8619 1B7E                                          l8571 19E2  
                                        l8563 19AA                                          l8555 1912  
                                        l8539 1870                                          l8547 18C0  
                                        l8491 1560                                          l8483 153A  
                                        l8467 1492                                          l8459 1462  
                                        l8395 113E                                          l8387 1100  
                                        l8379 10C2                                          l8731 1F6C  
                                        l8723 1EC6                                          l8715 1E1A  
                                        l8707 1D9A                                          l8803 5BBE  
                                        l9195 444C                                          l9187 43DA  
                                        l7941 27BE                                          l7933 2798  
                                        l7925 276C                                          l7917 273C  
                                        l8821 3B96                                          l8813 3B64  
                                        l7669 271A                                          l7589 24CA  
                                        l7597 24EA                                          l7861 2D88  
                                        l7853 2D46                                          l7845 2D08  
                                        l7837 2CD0                                          l7829 2CA2  
                                        l7781 2B9A                                          l7773 4110  
                                        l7765 40C8                                          l7757 4058  
                                        l7749 4004                                          l7677 55BA  
                                        l7685 5682                                          l7693 5726  
                                        l8661 1C94                                          l8653 1C6E  
                                        l8645 1C30                                          l8637 1BF4  
                                        l8629 1BB4                                          l8581 1A18  
                                        l8573 19F2                                          l8565 19B8  
                                        l8557 1976                                          l8549 18D0  
                                        l8493 1572                                          l8485 1542  
                                        l8477 14D6                                          l8469 14AC  
                                        l8397 1146                                          l8389 1112  
                                        l8733 1F8E                                          l8741 2010  
                                        l8725 1F22                                          l8717 1E2A  
                                        l8709 1D9E                                          l8901 50F6  
                                        l9197 4450                                          l9189 43EC  
                                        l7951 2814                                          l7943 27CE  
                                        l7935 279E                                          l7927 277C  
                                        l7919 274A                                          l8831 3C1E  
                                        l8823 3BA2                                          l8815 3B7A  
                                        l8807 3B00                                          l7599 2510  
                                        l7863 2D9E                                          l7871 2DCE  
                                        l7855 2D64                                          l7847 2D18  
                                        l7839 2CE0                                          l7791 2BCE  
                                        l7783 2B9C                                          l7767 40DA  
                                        l7759 406C                                          l7679 55CC  
                                        l7687 5686                                          l8671 1CEE  
                                        l8655 1C76                                          l8647 1C4A  
                                        l8639 1C10                                          l8591 1A4C  
                                        l8583 1A1C                                          l8575 19F6  
                                        l8559 1984                                          l8567 19C0  
                                        l8495 1580                                          l8479 14E8  
                                        l8487 1546                                          l8399 114A  
                                        l8751 2120                                          l8743 203E  
                                        l8735 1FA0                                          l8719 1E6A  
                                        l8911 5168                                          l8903 510C  
                                        l9199 4462                                          l7961 285C  
                                        l7945 27DE                                          l7937 27AC  
                                        l7929 2782                                          l8841 3C5C  
                                        l8833 3C2A                                          l8825 3BD4  
                                        l8809 3B10                                          l7873 2DDC  
                                        l7865 2DA4                                          l7857 2D66  
                                        l7849 2D2C                                          l7785 2BAC  
                                        l7793 2BD6                                          l7777 2B7E  
                                        l7697 3E46                                          l7769 40E0  
                                        l7689 56A2                                          l8673 1D00  
                                        l8665 1CC8                                          l8657 1C88  
                                        l8649 1C50                                          l8593 1A50  
                                        l8585 1A22                                          l8577 19FC  
                                        l8569 19D4                                          l8497 1584  
                                        l8489 154E                                          l8681 48E2  
                                        l8761 21E4                                          l8753 2178  
                                        l8737 1FE4                                          l8729 1F5A  
                                        l8913 5178                                          l8905 5114  
                                        l8921 2F1A                                          l7971 28AA  
                                        l7963 2868                                          l7955 2828  
                                        l7947 27E4                                          l7939 27AE  
                                        l8843 3C80                                          l8835 3C38  
                                        l8827 3BD6                                          l8819 3B8E  
                                        l7883 2E46                                          l7891 2E8E  
                                        l7875 2DE0                                          l7867 2DAE  
                                        l7859 2D76                                          l7795 2BE6  
                                        l7787 2BBC                                          l7779 2B8C  
                                        l7699 3E4A                                          l8675 1D06  
                                        l8667 1CDA                                          l8659 1C8E  
                                        l8579 1A08                                          l8587 1A28  
                                        l8595 1A56                                          l8499 1596  
                                        l8691 4942                                          l8683 490C  
                                        l8763 21F8                                          l8747 20C6  
                                        l8907 5118                                          l8931 2FA2  
                                        l8923 2F46                                          l7981 2908  
                                        l7973 28BA                                          l7965 2884  
                                        l7957 2838                                          l7949 2804  
                                        l8845 3C90                                          l8837 3C56  
                                        l8829 3BE2                                          l7893 2EA8  
                                        l7885 2E52                                          l7877 2DEE  
                                        l7869 2DBC                                          l7797 2BEC  
                                        l7789 2BCC                                          l8861 39DE  
                                        l8853 3908                                          l8669 1CE6  
                                        l8677 1D22                                          l8597 1AAE  
                                        l8589 1A3A                                          l8693 4964  
                                        l8749 20D8                                          l8757 21A4  
                                        l8773 2226                                          l8781 51F6  
                                        l8909 5160                                          l8917 517E  
                                        l9397 31CA                                          l8941 3006  
                                        l8925 2F62                                          l8933 2FA8  
                                        l7991 2992                                          l7983 2918  
                                        l7975 28CA                                          l7967 2890  
                                        l7959 2842                                          l8847 3C9E  
                                        l8839 3C58                                          l7895 2EBE  
                                        l7887 2E60                                          l7879 2E1C  
                                        l7799 2BF2                                          l8871 3A5E  
                                        l8863 39EA                                          l8855 3956  
                                        l9399 3D34                                          l8791 59EC  
                                        l8599 1AE2                                          l8695 4976  
                                        l8687 4918                                          l8775 2254  
                                        l8759 21D2                                          l8767 2206  
                                        l8783 51FE                                          l8951 3040  
                                        l8943 300C                                          l8935 2FC6  
                                        l8927 2F7E                                          l7993 29C8  
                                        l7985 2938                                          l7977 28DA  
                                        l7969 289C                                          l8849 3CA0  
                                        l7897 2ED8                                          l7889 2E8A  
                                        l8881 3AB6                                          l8873 3A6A  
                                        l8857 39CA                                          l8793 59F0  
                                        l8697 49A8                                          l8689 4926  
                                        l8769 2218                                          l8785 520C  
                                        l8961 30A2                                          l8953 3052  
                                        l8945 301E                                          l8937 2FE2  
                                        l8929 2F96                                          l7995 29D6  
                                        l7987 2948                                          l7979 28EA  
                                        l7899 2EF4                                          l8883 3AD2  
                                        l8875 3A86                                          l8859 39D6  
                                        l8867 39FE                                          l8795 59F2  
                                        l8787 523A                                          l8971 3108  
                                        l8963 30B8                                          l8955 3064  
                                        l8947 3026                                          l8939 2FFA  
                                        l7997 29F4                                          l7989 2968  
                                        l8885 3ADA                                          l8877 3A8E  
                                        l8869 3A40                                          l8797 5A02  
                                        l8789 59E6                                          l8981 314E  
                                        l8973 312A                                          l8965 30CE  
                                        l8957 307A                                          l8949 3038  
                                        l7999 29FE                                          l8887 3AEA  
                                        l8879 3AAA                                          l8895 5182  
                                        l8991 318E                                          l8983 316C  
                                        l8975 3130                                          l8967 30E0  
                                        l8959 308C                                          STR_1 1072  
                                        STR_2 107D                                          l8897 51D6  
                                        l8985 3180                                          l8977 3134  
                                        l8969 30F6                                          STR_3 1067  
                                        STR_4 104F                                          l8899 50F0  
                                        l8995 3194                                          l8987 3186  
                                        l8979 313C                                          STR_5 105B  
                                        STR_6 1017                                          l8997 31A6  
                                        l8989 318A                                          STR_7 1001  
                                        STR_8 1034                                          STR_9 1042  
                                        _LATA 003FBA                                          _LATB 003FBB  
                                        _LATC 003FBC                                          _LATD 003FBD  
                                        _LATE 003FBE                                          _T2PR 003FAB  
                                        _T4PR 003F9F                                          u2805 5470  
                                        u2806 5472                                          u6200 45B4  
                                        u6201 45B0                                          u6105 596A  
                                        u6115 5936                                          _PMD0 0039C0  
                                        u6125 5902                                          _PMD1 0039C1  
                                        u6150 44DC                                          _PMD2 0039C2  
                                        u6151 44D8                                          u6135 58CE  
                                        _PMD3 0039C3                                          u6160 44FE  
                                        u8000 2D64                                          _PMD4 0039C4  
                                        u6161 44FA                                          u8001 2D60  
                                        _PMD5 0039C5                                          u6170 4538  
                                        u6410 507A                                          u6330 49F2  
                                        u8010 2D88                                          _PMD6 0039C6  
                                        u6171 4534                                          u6411 5076  
                                        u6331 49EE                                          u8011 2D84  
                                        _PMD7 0039C7                                          u6180 455A  
                                        u6420 508A                                          u6340 4A0E  
                                        u8100 2EA8                                          u8020 2D9E  
                                        u7300 4FD8                                          u6181 4556  
                                        u6421 5086                                          u6341 4A0A  
                                        u8101 2EA4                                          u8021 2D9A  
                                        u7301 4FD4                                          u6190 4582  
                                        u6350 4A4E                                          u8110 2ED8  
                                        u8030 2DBC                                          u7310 4FEA  
                                        u6191 457E                                          u6351 4A4A  
                                        u8111 2ED4                                          u8031 2DB8  
                                        u7311 4FE6                                          u8200 2814  
                                        u6360 4A6A                                          u7400 2324  
                                        u8120 2F06                                          u8040 2DDC  
                                        u7320 5012                                          u9000 3480  
                                        u8201 2810                                          u6361 4A66  
                                        u7401 2320                                          u8121 2F02  
                                        u8041 2DD8                                          u7321 500E  
                                        u9001 347C                                          u8210 29B2  
                                        u8130 274A                                          u7410 2360  
                                        u8050 2DEE                                          u7330 5048  
                                        u9010 3498                                          u8131 2746  
                                        u7411 235C                                          u8051 2DEA  
                                        u7331 5044                                          u9011 3494  
                                        u8300 2B26                                          u8220 2A0C  
                                        u8140 275C                                          u7500 247A  
                                        u7420 236E                                          u7340 2288  
                                        u8060 2E1C                                          u9100 124E  
                                        u9020 10C2                                          u8301 2B22  
                                        u8221 2A08                                          u8141 2758  
                                        u7501 2476                                          u7421 236A  
                                        u7341 2284                                          u8061 2E18  
                                        u9101 124A                                          u9021 10BE  
                                        u8310 2B60                                          u8230 2A2C  
                                        u8150 276C                                          u7510 24AC  
                                        u7430 23DC                                          u7350 229A  
                                        u8070 2E32                                          u7270 5342  
                                        u9110 127E                                          u9030 1112  
                                        u8311 2B5C                                          u8231 2A28  
                                        u8215 29A8                                          u8151 2768  
                                        u7511 24A8                                          u7431 23D8  
                                        u7351 2296                                          u8071 2E2E  
                                        u7271 533E                                          u9111 1278  
                                        u9031 110E                                          u8320 4B94  
                                        u8240 2A3E                                          u8160 27AC  
                                        u7600 25F4                                          u7520 24BA  
                                        u7440 23F4                                          u7360 22AA  
                                        u8080 2E46                                          u7280 5352  
                                        u8400 4E0E                                          u9200 14D2  
                                        u9120 1280                                          u9040 1120  
                                        u8321 4B90                                          u8241 2A3A  
                                        u8161 27A8                                          u7601 25F0  
                                        u7521 24B6                                          u7441 23EE  
                                        u7361 22A6                                          u8081 2E42  
                                        u7281 534E                                          u8401 4E0A  
                                        u9201 14CE                                          u9041 111C  
                                        u8330 4BAE                                          u8250 2A6C  
                                        u8170 27BE                                          u7610 2604  
                                        u7530 24D8                                          u7450 23F6  
                                        u7370 22EC                                          u8090 2E60  
                                        u7290 5382                                          u8410 4E2C  
                                        u9210 14E8                                          u9130 1296  
                                        u9050 1132                                          u8331 4BAA  
                                        u8251 2A68                                          u8171 27BA  
                                        u7611 2600                                          u7531 24D4  
                                        u7371 22E8                                          u8091 2E5C  
                                        u7291 537E                                          u8411 4E28  
                                        u9211 14E4                                          u9131 1292  
                                        u9051 112E                                          u8340 4BD4  
                                        u8260 2A82                                          u8180 27CE  
                                        u7700 26EC                                          u7620 2616  
                                        u7540 2510                                          u7460 241E  
                                        u7380 2302                                          u8420 4E42  
                                        u8500 478A                                          u9300 1716  
                                        u9220 1504                                          u9140 1348  
                                        u9060 117A                                          u8341 4BD0  
                                        u8261 2A7E                                          u8181 27CA  
                                        u7701 26E8                                          u7621 2612  
                                        u7541 250C                                          u7461 241A  
                                        u7381 22FE                                          u8421 4E3E  
                                        u8501 4786                                          u9301 1712  
                                        u9221 1500                                          u9141 1344  
                                        u9061 1176                                          u8350 4BF2  
                                        u8270 2A96                                          u8190 2804  
                                        u7710 26FE                                          u7630 262C  
                                        u7550 2556                                          u7470 243C  
                                        u7390 2314                                          u8430 4E66  
                                        u8510 47DA                                          u9310 177E  
                                        u9230 153A                                          u9150 13DE  
                                        u9070 11AA                                          u8351 4BEE  
                                        u8271 2A92                                          u8191 2800  
                                        u7711 26FA                                          u7631 2628  
                                        u7551 2552                                          u7471 2438  
                                        u7391 2310                                          u8431 4E62  
                                        u8511 47D6                                          u9311 177A  
                                        u9231 1536                                          u9151 13DA  
                                        u9071 11A4                                          u8360 4C0E  
                                        u8280 2AB0                                          u7720 271A  
                                        u7640 2642                                          u7560 258C  
                                        u7480 245C                                          u7800 3ED8  
                                        u8600 4C54                                          u8440 4EA6  
                                        u8520 5774                                          u9400 19B8  
                                        u9320 17C4                                          u9240 1560  
                                        u9160 1452                                          u9080 11AC  
                                        u8361 4C0A                                          u8281 2AAC  
                                        u7721 2716                                          u7641 263E  
                                        u7561 2588                                          u7481 2458  
                                        u7801 3ED4                                          u8601 4C50  
                                        u8441 4EA2                                          u8521 5770  
                                        u9401 19B4                                          u9321 17C0  
                                        u9241 155C                                          u9161 144E  
                                        u8370 4C34                                          u8290 2AF8  
                                        u8530 45EE                                          u7650 2656  
                                        u7570 259C                                          u7490 246A  
                                        u7810 3F02                                          u7730 55F0  
                                        u8610 4C76                                          u8450 4EE4  
                                        u9410 19D4                                          u9330 17D4  
                                        u9250 1572                                          u9170 1478  
                                        u9090 11C2                                          u8371 4C30  
                                        u8291 2AF4                                          u8531 45EA  
                                        u7651 2652                                          u7571 2598  
                                        u7491 2466                                          u7811 3EFE  
                                        u7731 55EC                                          u8611 4C72  
                                        u8451 4EE0                                          u9411 19D0  
                                        u9331 17D0                                          u9251 156E  
                                        u9171 1474                                          u9091 11BE  
                                        u8540 4622                                          u7660 2670  
                                        u7580 25C8                                          u7900 2B9A  
                                        u7820 3F42                                          u7740 56A2  
                                        u8620 4CCC                                          u8380 4DDA  
                                        u8460 4F18                                          u8700 48CE  
                                        u9500 1C30                                          u9420 19E2  
                                        u9340 1870                                          u9260 1580  
                                        u9180 148A                                          u7661 266C  
                                        u7581 25C4                                          u7901 2B96  
                                        u7821 3F3E                                          u7741 569E  
                                        u8621 4CC8                                          u8381 4DD6  
                                        u8461 4F14                                          u8701 48C8  
                                        u9501 1C2C                                          u9421 19DE  
                                        u9341 186C                                          u9261 157C  
                                        u9181 1486                                          u8550 4650  
                                        u7670 26AA                                          u7590 25D8  
                                        u7910 2BAC                                          u7830 3F8C  
                                        u8630 4CDA                                          u8390 4DF4  
                                        u8470 470E                                          u8710 48D0  
                                        u7750 5756                                          u9510 1C4A  
                                        u9430 1A3A                                          u9350 18BC  
                                        u9270 1596                                          u9190 14AC  
                                        u8551 464C                                          u7671 26A6  
                                        u7591 25D4                                          u7911 2BA8  
                                        u7831 3F88                                          u8631 4CD6  
                                        u8391 4DF0                                          u8471 470A  
                                        u7751 5750                                          u9511 1C46  
                                        u9431 1A36                                          u9351 18B8  
                                        u9271 1592                                          u9191 14A8  
                                        u8560 4664                                          u7680 26BC  
                                        u7920 2BBC                                          u7840 3FE0  
                                        u8640 5650                                          u8480 474C  
                                        u8720 52BC                                          u7760 5758  
                                        u9520 1C62                                          u9440 1B0C  
                                        u9360 18E2                                          u9280 15A4  
                                        u9600 49A8                                          u8561 4660  
                                        u8545 4618                                          u7681 26B8  
                                        u7921 2BB8                                          u7841 3FDC  
                                        u8641 564C                                          u8481 4748  
                                        u9521 1C5E                                          u9441 1B08  
                                        u9361 18DE                                          u9281 15A0  
                                        u9601 49A4                                          u8570 468C  
                                        u7690 26CC                                          u7930 2C00  
                                        u7770 3E58                                          u7850 4012  
                                        u8490 476A                                          u8650 4824  
                                        u8810 35F0                                          u8730 52CE  
                                        u9530 1CC2                                          u9450 1B28  
                                        u9370 1984                                          u9290 15CE  
                                        u9610 1D76                                          u8571 4688  
                                        u7691 26C8                                          u7931 2BFC  
                                        u7771 3E54                                          u7851 400E  
                                        u8491 4766                                          u8811 35EC  
                                        u8731 52CA                                          u9531 1CBC  
                                        u9451 1B24                                          u9371 1980  
                                        u9291 15CA                                          u9611 1D72  
                                        u8580 46AC                                          u7940 2C12  
                                        u7780 3E8A                                          u7860 4050  
                                        u8900 327A                                          u8660 4842  
                                        u8820 3614                                          u8740 5300  
                                        u9540 1CC4                                          u9460 1B3A  
                                        u9380 1998                                          u9700 20D8  
                                        u9620 1DDA                                          u8581 46A8  
                                        u7941 2C0E                                          u7781 3E86  
                                        u7861 404C                                          u8901 3276  
                                        u8661 483E                                          u8805 3596  
                                        u8741 52FA                                          u9461 1B36  
                                        u9381 1994                                          u9701 20D4  
                                        u9621 1DD6                                          u8590 46BC  
                                        u7950 2C22                                          u7870 407A  
                                        u8910 3296                                          u8670 486A  
                                        u8830 3630                                          u8806 35A0  
                                        u8750 5302                                          u9550 1CDA  
                                        u9470 1B48                                          u9390 19AA  
                                        u9710 21D2                                          u9630 1E2A  
                                        u8591 46B8                                          u7951 2C1E  
                                        u7791 3EB4                                          u7871 4076  
                                        u8911 3292                                          u8671 4866  
                                        u8655 481A                                          u8831 362C  
                                        u8807 35B0                                          u8727 52AE  
                                        u9551 1CD6                                          u9471 1B44  
                                        u9391 19A6                                          u9711 21CE  
                                        u9631 1E26                                          u9800 3C48  
                                        u7960 2C62                                          u7880 40A8  
                                        u8920 32C4                                          u8680 4894  
                                        u8840 3684                                          u8760 5318  
                                        u9480 1B7E                                          u9560 490C  
                                        u9640 1E98                                          u9720 525C  
                                        u9801 3C44                                          u7961 2C5E  
                                        u7881 40A4                                          u8921 32C0  
                                        u8681 4890                                          u8825 360A  
                                        u8761 5314                                          u9481 1B7A  
                                        u9561 4908                                          u9641 1E94  
                                        u9721 5258                                          u9810 3C56  
                                        u7970 2CA2                                          u9730 5A02  
                                        u7890 40F0                                          u8930 32D2  
                                        u8850 36A0                                          u8770 3532  
                                        u9490 1BAC                                          u9570 4942  
                                        u9650 1EC6                                          u9811 3C52  
                                        u7971 2C9E                                          u9731 59FE  
                                        u7891 40EC                                          u8931 32CE  
                                        u8851 369C                                          u9491 1BA8  
                                        u9571 493E                                          u9651 1EC2  
                                        u9820 3C90                                          u9740 3B10  
                                        u7980 2D18                                          u8940 3400  
                                        u8860 36DC                                          u8780 3560  
                                        u9580 4964                                          u9660 1F6C  
                                        u9900 2F62                                          u9821 3C8C  
                                        u9741 3B0C                                          u7981 2D14  
                                        u8941 33FC                                          u8861 36D8  
                                        u8845 367A                                          u8781 355C  
                                        u9581 4960                                          u9661 1F68  
                                        u9901 2F5E                                          u9830 3C9E  
                                        u9750 3B1E                                          u7990 2D3A  
                                        u8950 341E                                          u8870 3234  
                                        u8790 3582                                          u9590 4976  
                                        u9670 203E                                          u9910 2F7E  
                                        u9831 3C9A                                          u9751 3B1A  
                                        u7991 2D36                                          u8951 341A  
                                        u8871 322E                                          u8695 48A6  
                                        u8791 357E                                          u8775 3528  
                                        u9591 4972                                          u9671 203A  
                                        u9911 2F7A                                          u9760 3B7A  
                                        u9840 3A5E                                          u8960 3438  
                                        u8880 3236                                          u9680 20C0  
                                        u9920 2F96                                          u9761 3B76  
                                        u9841 3A5A                                          u8961 3434  
                                        u9681 20BA                                          u9921 2F92  
                                        u9770 3BD0                                          u9850 3A86  
                                        u8970 3452                                          u8890 324C  
                                        u9690 20C2                                          u9930 2FC6  
                                        u9771 3BCC                                          u9851 3A82  
                                        u8971 344E                                          u8891 3248  
                                        u9931 2FC2                                          u9780 3C1A  
                                        u9860 3AAA                                          u8980 3460  
                                        u9940 2FE2                                          u9781 3C16  
                                        u9861 3AA6                                          u8981 345C  
                                        u9941 2FDE                                          u9790 3C38  
                                        u9870 3AD2                                          u8990 3472  
                                        u9950 2FFA                                          u9791 3C34  
                                        u9871 3ACE                                          u8991 346E  
                                        u9951 2FF6                                          u9880 510C  
                                        u9960 301E                                          u9881 5108  
                                        u9961 301A                                          u9890 5160  
                                        u9970 3052                                          _TMR2 003FAA  
                                        u9891 515C                                          u9971 304E  
                                        u9980 3064                                          _TMR4 003F9E  
                                        u9981 3060                                          u9990 307A  
                                        u9991 3076                                          _WPUA 003A41  
                                        _WPUB 003A51                                          _WPUC 003A61  
                                        _WPUD 003A71                                          _WPUE 003A81  
                         ?_UART1_Transmit_ISR 0001                                          abs@a 0026  
                                        _dbuf 013A                                          _main 5C4C  
                                        _dtoa 3202                                          _loop 43AE  
                                        _prec 003A                                          _nout 0128  
                                        pad@i 002D                                          pad@p 002A  
                                        fsr0h 003FEA                                          fsr1h 003FE2  
                                        indf0 003FEF                                          fsr2h 003FDA  
                                        fsr0l 003FE9                                          indf2 003FDF  
                                        fsr1l 003FE1                                          pad@w 002F  
                                        fsr2l 003FD9                                 ___fpclassifyf 47E4  
                                        prodh 003FF4                                          prodl 003FF3  
                                        start 00AE                               _timer5ReloadVal 0190  
                             ___fldiv@new_exp 0065                               _TMR3_Initialize 5796  
                             _PWM5_Initialize 5CEE                             ??_CLC3_Initialize 0014  
               ??_UART1_SetTxInterruptHandler 0016                                  _tolower$3681 0020  
                  ??_TMR4_SetInterruptHandler 0016                             _UART1_rx_vect_isr 56EC  
                                ___param_bank 000000                    __end_of_PWM5_LoadDutyValue 5912  
                          ?_UART1_rx_vect_isr 0001                                         ??_abs 0028  
                                       ??_pad 002C                __size_of_OSCILLATOR_Initialize 0018  
                        ??_UART1_Transmit_ISR 0011                 __end_of_OSCILLATOR_Initialize 5D1E  
                               ___fltol@sign1 0081                               __end_of___aldiv 45D6  
                             __end_of___aodiv 3FCE                                         _ADCAP 003EF5  
                                       _ADACT 003EFE                       __end_of_CCP3_Initialize 5AD6  
                             __end_of___fladd 272E                                         ?_main 0001  
                                       ?_dtoa 0060                                         _ADCLK 003EFF  
                             __end_of___aomod 4132                                         _ADCNT 003EEB  
                                       _ADPCH 003EF1                               __end_of___fldiv 2F1A  
                                       _ADREF 003EFD                               __end_of___awdiv 4C46  
                             __end_of___flneg 5796                                         ?_loop 0001  
                                       STR_10 1026                                         STR_11 1086  
                                       STR_12 108E                                         STR_21 1096  
                                       STR_15 108A                                         STR_16 1092  
                                       STR_19 1096                               __end_of___awmod 4E78  
                                       _ADRPT 003EEC                        ??_CCP4_DefaultCallBack 0007  
                             __end_of___flmul 2B7E                      TMR5_ReadTimer@readValLow 0010  
                             __end_of___flsub 55AE                               __end_of___fltol 46DE  
                                       u10000 308C                                         u10001 3088  
                                       u10010 30A2                                         u10011 309E  
                                       u10020 30B8                                         u10100 42C4  
                                       u10021 30B4                                         u10101 42C0  
                                       u10030 30CE                                         u10110 42E6  
                                       u10031 30CA                                         u10111 42E2  
                                       u10200 3DE6                                         u10040 30F6  
                                       u10120 42FE                                         u10201 3DE2  
                                       u10041 30F2                                         u10121 42FA  
                                       u10210 3722                                         u10050 314E  
                                       u10130 4310                                         u10211 371E  
                                       u10051 314A                                         u10131 430C  
                                       u10300 4238                                         u10220 3742  
                                       u10060 316C                                         u10140 4326  
                                       u10301 4234                                         u10221 373E  
                                       u10061 3168                                         u10141 4322  
                                       u10310 4260                                         u10230 3760  
                                       u10070 31A6                                         u10150 4368  
                                       u10311 425C                                         u10231 375C  
                                       u10071 31A2                                         u10151 4364  
                                       u10240 379A                                         u10160 4386  
                                       u10080 4296                                         u10320 43DA  
                                       u10241 3796                                         u10161 4382  
                                       u10081 4292                                         u10321 43D6  
                                       u10250 37B4                                         u10170 3CEC  
                                       u10090 42B2                                         u10330 43EC  
                                       u10251 37B0                                         u10171 3CE8  
                                       u10091 42AE                                         u10331 43E8  
                                       u10260 38D2                                         u10180 3D14  
                                       u10340 443C                                         u10261 38CE  
                                       u10181 3D10                                         u10341 4438  
                                       u10270 38F6                                         u10190 3DC0  
                                       u10350 4462                                         u10271 38F2  
                                       u10191 3DBC                                         u10351 445E  
                                       u10280 41F0                                         u10360 4474  
                                       u10281 41EC                                         u10361 4470  
                                       u10290 420C                                         u10370 44AC  
                                       u10291 4208                                         u10371 44A8  
                             ___awdiv@divisor 0016                                         _U1P1H 003DED  
                                       _U1P2H 003DEF                                         _U1P1L 003DEC  
                                       _U1P3H 003DF1                                         _T3CLK 003FA9  
                                       _T2CON 003FAC                                         _U1P2L 003DEE  
                                       _U1P3L 003DF0                                         _T3CON 003FA6  
                                       _T5CLK 003F9D                                         _T4CON 003FA0  
                                       _T2HLT 003FAD                                         _T5CON 003F9A  
                                       _T4HLT 003FA1                                         _T2TMR 003FAA  
                                       _U1UIR 003DF8                                         i1l330 571E  
                                       _T2RST 003FAF                                         _U1RXB 003DE8  
                                       i1l324 56E2                                         i1l333 5630  
                                       i1l350 5DA2                                         i1l343 4DC6  
                                       i1l336 5634                                         i1l353 5DA0  
                                       _U1TXB 003DEA                                         i1l347 5B86  
                                       i1l356 5D9E                                         _T4TMR 003F9E  
                                       _T4RST 003FA3                                         i2l409 5DA8  
                                       i1l692 5B02                                         i2l534 5BB2  
                                       i2l438 5872                                         i2l446 59AE  
                                       i2l552 5A48                                         i1l688 5800  
                                       i2l529 5C4A                                         i2l537 5D2A  
                                       i1l698 5DA4                                         i2l476 58A8  
                                       i2l558 5C88                                         i2l487 59E2  
                         ??_UART1_rx_vect_isr 0012                                         i2l863 543A  
                                       i2l856 5564                                         i2l868 5C02  
                             ___awdiv@counter 0018                                         _OSCEN 0039DD  
                                vfpfcnvrt@fmt 00C9                                         _TMR3H 003FA5  
                                       _TMR5H 003F99                                         _TMR3L 003FA4  
                                       _TMR5L 003F98                                         _TRISA 003FC2  
                                       _TRISB 003FC3                                         _TRISC 003FC4  
                                       _TRISD 003FC5                                         _TRISE 003FC6  
                                 _Default_ISR 5DA8                               _TMR4_Initialize 5B04  
                             _PWM6_Initialize 5CD6                             _UART1_tx_vect_isr 56B0  
                            __end_of_TMR4_ISR 5808                       setSteering@steeringMode 0085  
                                       _delay 00F7                                         _flags 003C  
                                       _fputc 4FC6                                         _fputs 55AE  
                       __size_of_calcMotorPow 014C                            ?_UART1_tx_vect_isr 0001  
                                       pad@fp 0026                                         _width 00E5  
                                       _putch 5D2C                                         dtoa@d 0062  
                                       dtoa@i 007A                                         dtoa@n 0072  
                                       dtoa@p 006C                                         dtoa@s 0070  
                                       dtoa@w 006E                              ?_SMT1_Initialize 0001  
                             __end_of_isupper 575E                                         pclath 003FFA  
                                       tablat 003FF5                                   _BatteryVolt 00E7  
                             _curveRightCount 00F8                         __size_of_calcSteering 0194  
                                       status 003FD8           __end_of_UART1_SetRxInterruptHandler 5D4A  
                 _UART1_SetRxInterruptHandler 5D40                       __end_of_CCP4_Initialize 5AA8  
                              ?___fpclassifyf 0014                               __end_of_tolower 5330  
                             __end_of_strncmp 49D6           fp__UART1_DefaultFramingErrorHandler 0000  
    __end_of_UART1_DefaultFramingErrorHandler 5DA4     __size_of_UART1_DefaultFramingErrorHandler 0002  
          ??_UART1_DefaultFramingErrorHandler 0012             ?_UART1_DefaultFramingErrorHandler 0001  
            _UART1_DefaultFramingErrorHandler 5DA2                           ??_UART1_tx_vect_isr 0011  
                   __end_of_UART1_rx_vect_isr 5726                               _TMR5_Initialize 54D2  
                             _PWM7_Initialize 5CBE                               __initialization 5808  
                       TMR5_ReadTimer@readVal 000D                              ?_CCP3_CaptureISR 0001  
                                __end_of_main 5C6C                                  __end_of_dtoa 34E8  
                                __end_of_loop 44CA                   ??_UART1_DefaultErrorHandler 0012  
                     __end_of_TMR2_Initialize 5CA6                                _roundTimeCount 003E  
                                ?_UART1_Write 0001                                        ??_main 003A  
                                      ??_dtoa 0031                                        ??_loop 003A  
                               __activetblptr 000003                                  _calcMotorPow 4132  
        __size_of_UART1_SetTxInterruptHandler 000A                     __end_of_UART1_tx_vect_isr 56EA  
                             _PWM8_Initialize 5CA6                              _UART1_Initialize 4F22  
                                _calcSteering 3CB2                              ?_CCP4_CaptureISR 0001  
                                      _ADACCH 003EE9                                        _ADACCL 003EE8  
                                      _ADACCU 003EEA                                        _ADACQH 003EF4  
                                      _ADACQL 003EF3                                        _ADCON0 003EF8  
                                      _ADCON1 003EF9                                        _ADCON2 003EFA  
                                      _ADCON3 003EFB                                        _ADERRH 003EE3  
                                      _ADERRL 003EE2                                        ?_fputc 0016  
                                      _ADLTHH 003EDF                                        _ADLTHL 003EDE  
                                      ?_fputs 001F                                        _ADRESH 003EF0  
                                      _ADRESL 003EEF                                        _ADPREH 003EF7  
                                      _ADPREL 003EF6                                        _CCPR3H 003F75  
                                      _CCPR4H 003F71                                        _CCPR3L 003F74  
                                      _CCPR4L 003F70                                        _ADSTAT 003EFC  
                                      _ADUTHH 003EE1                              ___awdiv@dividend 0014  
                                      _ADUTHL 003EE0                            _PWM8_LoadDutyValue 5912  
                                      _ANSELA 003A40                                        ?_putch 0001  
                                      _ANSELB 003A50                                        _ANSELC 003A60  
                                      _ANSELD 003A70                                        _ANSELE 003A80  
                                      _RB1I2C 003A5A                                        _RB2I2C 003A5B  
                                      _RD0I2C 003A7A                                        _U1CON0 003DF2  
                                      _U1CON1 003DF3                                        _U1CON2 003DF4  
                                      _RC3I2C 003A6A                                        _RD1I2C 003A7B  
                                      _T3GATE 003FA8                                        _RC4I2C 003A6B  
                                      _U1BRGH 003DF6                                        _U1FIFO 003DF7  
                                      _T3GCON 003FA7                                        _U1BRGL 003DF5  
                                      _T5GATE 003F9C                                        _T5GCON 003F9B  
                                      _RA0PPS 003A00                                        _RA1PPS 003A01  
                                      _RA3PPS 003A03                                        _RA4PPS 003A04  
                                      _RB3PPS 003A0B                                        _T5GPPS 003AC9  
                                      i1l1247 5D98                                        _ODCONA 003A42  
                                      _ODCONB 003A52                                        _ODCONC 003A62  
                                      _ODCOND 003A72                                        _ODCONE 003A82  
                     __end_of_PWM5_Initialize 5D06                       __end_of_TMR3_Initialize 57CE  
                                      i1l7101 4DC2                                        i1l7025 5D90  
                                      i1l7211 57F4                                        i1l7141 5AD6  
                                      i1l7213 57F8                                        i1l7143 5AEA  
                                      i1l7207 57D6                                        i1l7071 55F2  
                                      i1l7209 57DA                                        i1l6521 5B70  
                                      i1l7081 562A                                        i1l7073 5602  
                                      i1l6523 5B80                                        i1l7091 4D50  
                                      i1l7083 4D08                                        i1l7075 5614  
                                      i1l6525 5B84                                        i1l6517 5B5C  
                                      i1l7093 4D60                                        i1l7085 4D18  
                                      i1l7077 5616                                        i1l6519 5B6E  
                                      i1l7095 4D70                                        i1l7087 4D28  
                                      i1l7079 5626                                        i1l7183 56B6  
                                      i1l7097 4D88                                        i1l7089 4D38  
                                      i1l7185 56CA                                        i1l7099 4DA4  
                                      i1l7187 56F2                                        i1l7189 5706  
                                      i1l6727 5D9A                                        i2l7111 5874  
                                      i2l7103 583E                                        i2l7121 5C78  
                                      i2l7201 5A1C                                        i2l7113 5882  
                                      i2l7105 584C                                        _INLVLA 003A44  
                                      _INLVLB 003A54                                        i2l7123 5C80  
                                      i2l7203 5A30                                        i2l7115 588E  
                                      i2l7107 5858                                        _INLVLC 003A64  
                                      _INLVLD 003A74                                        i2l7221 5540  
                                      i2l7125 5C84                                        i2l7117 58A2  
                                      i2l7109 586C                                        _INLVLE 003A84  
                                      i2l7231 5416                                        i2l7223 5552  
                                      i2l7215 551C                                        i2l7119 5C6C  
                                      i2l7233 5428                                        i2l7225 53E8  
                                      i2l7217 5520                                        i2l7235 5BDC  
                                      i2l7227 53EC                                        i2l7219 5530  
                                      i2l7237 5BE0                                        i2l7229 5406  
                                      i2l6541 5BA2                                        i2l6533 5B88  
                                      i2l6535 5B96                                        i2l6543 5BA8  
                                      i2l7191 597C                                        i2l6545 5BAC  
                                      i2l6537 5B98                                        i2l7193 598C  
                                      i2l6731 5C36                                        i2l6539 5B9C  
                                      i2l7195 59B0                                        i2l6733 5C42  
                                      i2l7197 59C0                                        i2l7199 5A18  
                                      i2l6729 5C28                                        i2l6737 5D1E  
                                ?_setSteering 0083                                        _OSCFRQ 0039DF  
                            __end_of_actSpeed 50F0                                        _SMT1PR 003F1B  
                       _UART1_SetErrorHandler 5D5E                              __end_of___xxtofl 3CB2  
                         ?_PWM8_LoadDutyValue 0014                              __end_of_getCurve 3202  
                    __end_of_CCP3_SetCallBack 5D90                                  _CCPTMRS0bits 003F5E  
                                _CCPTMRS1bits 003F5F                                  vfprintf@cfmt 00E3  
                                      ___flge 46DE                                        ___fleq 4E78  
                                   ??___aldiv 001C                                     ??___aodiv 0024  
                                   ??___fladd 0036                                     ??___aomod 0024  
                                   ??___fldiv 0032                                     ??___awdiv 0018  
                                   ??___flneg 0018                                     ??___awmod 0018  
                                   ??___flmul 0032                                     ??___flsub 003A  
                                   ??___fltol 007D                                        _efgtoa 109A  
                               _CCP3_CallBack 0194                                        _floorf 34E8  
                                ?_TMR5_Reload 0001                       __end_of_PWM6_Initialize 5CEE  
                     __end_of_TMR4_Initialize 5B30                                        clear_0 580E  
                                      clear_1 581A                                        clear_2 5826  
                            ___awdiv@quotient 001A                                        _motPow 012E  
                             ___awmod@divisor 0016                       fp__CCP3_DefaultCallBack 0000  
                                      isa$std 000001                               ___awmod@counter 0018  
                               _CCP4_CallBack 0192                                        _smtWay 0120  
                                      _printf 5BB4                                        pad@buf 0028  
                                      dtoa@fp 0060                              ?_CCP3_Initialize 0001  
                                      _strcpy 5266                                        _strlen 5676  
                        ??_PWM8_LoadDutyValue 0016                              __end_of_setMotor 4AB8  
                             _ADCC_Initialize 538C          __end_of_TMR4_DefaultInterruptHandler 5DA6  
       __size_of_TMR4_DefaultInterruptHandler 0002                  _TMR4_DefaultInterruptHandler 5DA4  
                                      fputc@c 0016                                _PMD_Initialize 5C04  
                                      fputs@c 0023                                        fputs@i 0024  
                                      fputs@s 001F                               ___fpclassifyf@e 001C  
                             ___fpclassifyf@u 001E                               ___fpclassifyf@x 0014  
                                __mediumconst 0000                         __end_of_TMR5_GATE_ISR 5A4A  
                                      tblptrh 003FF7                                     ??_isupper 0016  
                                      tblptrl 003FF6                                        tblptru 003FF8  
           __size_of_ADCC_GetSingleConversion 0032                              __end_of_vfprintf 5266  
                   ?_ADCC_GetSingleConversion 0014      TMR4_SetInterruptHandler@InterruptHandler 0014  
TMR5_SetGateInterruptHandler@InterruptHandler 0014   UART1_SetTxInterruptHandler@InterruptHandler 0014  
 UART1_SetRxInterruptHandler@InterruptHandler 0014          __end_of_UART1_SetOverrunErrorHandler 5D54  
       __size_of_UART1_SetOverrunErrorHandler 000A                  _UART1_SetOverrunErrorHandler 5D4A  
                   _UART1_DefaultErrorHandler 5D9A                                     ??_tolower 001C  
                                   ??_strncmp 001A                 __size_of_INTERRUPT_Initialize 004C  
                __size_of_UART1_RxDataHandler 002C                             getCurve@deltaLeft 01B2  
                                  ___flge@ff1 006D                               ??___fpclassifyf 0018  
                                  ___flge@ff2 0071                       __end_of_PWM7_Initialize 5CD6  
                     __end_of_TMR5_Initialize 551C                                  ___xxtofl@arg 0026  
                                ___xxtofl@exp 0025                             _SYSTEM_Initialize 5488  
                                ___xxtofl@val 001C                                    ___fleq@ff1 0014  
                                  ___fleq@ff2 0018                                    __accesstop 0060  
                     __end_of__initialization 5838                                    ___flneg@f1 0014  
                            ?_CCP4_Initialize 0001                           setSteering@steering 0083  
                          ?_SYSTEM_Initialize 0001                                 ___rparam_used 000001  
                  __size_of_UART1_rx_vect_isr 003A                                    ___fltol@f1 0079  
                             _TMR5_WriteTimer 5B88                            __size_of_calcSpeed 020A  
                   calcMotorPow@setSpeedDelta 0085                      __end_of_CCP4_SetCallBack 5D86  
                              __pcstackCOMRAM 0001                         __end_of_TMR4_CallBack 5B04  
                          __size_of_checkBatt 0092                           ??_SYSTEM_Initialize 0018  
                                   ?_TMR4_ISR 0001                                ivt0x8_undefint 00AC  
                               __end_of_fputc 505C                                 __end_of_fputs 55F2  
                             fp__TMR4_10msISR 0000                                 __end_of_putch 5D36  
                            ?_TMR2_Initialize 0001                       __end_of_PWM8_Initialize 5CBE  
                      __end_of_PMD_Initialize 5C28                   __size_of_PWM7_LoadDutyValue 0034  
                       CCP3_CaptureISR@module 0003                    __size_of_UART1_tx_vect_isr 003A  
              CCP3_SetCallBack@customCallBack 0014                     _UART1_FramingErrorHandler 019A  
             fp__TMR4_DefaultInterruptHandler 0000                 ?_TMR4_DefaultInterruptHandler 0001  
                     fp__CCP4_DefaultCallBack 0000                      __size_of_SMT1_PR_ACQ_ISR 004A  
                                     ??_fputc 001A                     __end_of_SYSTEM_Initialize 54D2  
                                     ??_fputs 0023                               _CLC3_Initialize 5B30  
                                     ??_putch 0015                   PWM7_LoadDutyValue@dutyValue 0014  
                                  __pbssBANK0 00E5                                    __pbssBANK1 0100  
               ?_UART1_SetOverrunErrorHandler 0014                        ?_UART1_SetErrorHandler 0014  
                            ?_PWM5_Initialize 0001                              ?_TMR3_Initialize 0001  
                                  __pnvCOMRAM 004C                      __size_of_SMT1_PW_ACQ_ISR 0054  
                       _TMR4_InterruptHandler 018A                                       IVTBASEH 003FD6  
                                     IVTBASEL 003FD5                                       IVTBASEU 003FD7  
                                     ?___flge 006D                                       ?___fleq 0014  
                                  ??_TMR4_ISR 0013                       __end_of_ADCC_Initialize 53E8  
                  __end_of_PWM6_LoadDutyValue 58DE                                       ?_efgtoa 0083  
        __end_of_TMR5_SetGateInterruptHandler 5D72         __size_of_TMR5_SetGateInterruptHandler 000A  
                _TMR5_SetGateInterruptHandler 5D68                                       _CCP3CAP 003F77  
                                     _CCP4CAP 003F73                                       _CCP3CON 003F76  
                                     _CCP4CON 003F72                                       _ADFLTRH 003EE7  
                                     ?_floorf 0036                                       _ADFLTRL 003EE6  
               __size_of_CCP3_DefaultCallBack 0036                                       _CCP3PPS 003ACF  
                                     _CCP4PPS 003AD0                                       _CLC3CON 003C60  
                                     _CLC3POL 003C61                                       _ADPREVH 003EEE  
                                     _ADPREVL 003EED                              ?_PWM6_Initialize 0001  
                            ?_TMR4_Initialize 0001                                       _ADSTPTH 003EE5  
                                     _ADSTPTL 003EE4                                       ?_printf 01A6  
                             ?_PMD_Initialize 0001                             _UART1_Receive_ISR 4D08  
                                  _getReverse 427E                                       ?_strcpy 0014  
                                     ?_strlen 0014                                       _U1ERRIE 003DFA  
                                   ?_actSpeed 0022                                       _U1ERRIR 003DF9  
                               ?_TMR4_10msISR 0001                                  ?_Default_ISR 0001  
                        __size_of_UART1_Write 005C                            ?_UART1_Receive_ISR 0001  
                                     _U1RXPPS 003AE5                                     ?___xxtofl 001C  
                          _PWM5_LoadDutyValue 58DE                                    _distRightM 0136  
                     __size_of_TMR5_ReadTimer 0024                                       _OSCCON1 0039D9  
                                     _OSCCON3 0039DB                             __end_of_calcSpeed 3908  
                                     _IVTLOCK 003FD4                            __size_of_vfpfcnvrt 0524  
                                     _SMT1CLK 003F21                                       _OSCTUNE 0039DE  
                                     _SMT1CPR 003F15                                       _SMT1CPW 003F18  
                                     _PWM5DCH 003F6D                                       _PWM5DCL 003F6C  
                                     _PWM6DCH 003F69                                       _PWM6DCL 003F68  
                                     _PWM7DCH 003F65                                       _PWM7DCL 003F64  
                                     _SMT1SIG 003F22                                       _PWM8DCH 003F61  
                                     _PWM5CON 003F6E                                       _PWM8DCL 003F60  
                                     _SMT1PRH 003F1C                                       _PWM6CON 003F6A  
                                     _SMT1PRL 003F1B                                       _PWM7CON 003F66  
                                     _SMT1PRU 003F1D                                     ?_getCurve 0001  
                                     _SMT1WIN 003F23                                       _SMT1TMR 003F12  
                                     _PWM8CON 003F62                                       _SLRCONA 003A43  
                                     _SLRCONB 003A53                                       _SLRCONC 003A63  
                                     _SLRCOND 003A73                                       _SLRCONE 003A83  
                           __end_of_checkBatt 5182                           ??_UART1_Receive_ISR 0012  
                     __end_of_TMR5_WriteTimer 5BB4                           ?_PWM5_LoadDutyValue 0014  
                            ?_PWM7_Initialize 0001                              ?_TMR5_Initialize 0001  
                   INTERRUPT_Initialize@state 0014                          __size_of_setSteering 01F6  
                                   _CLCIN0PPS 003AD9                                     _CLCIN2PPS 003ADB  
                                   _CLCIN3PPS 003ADC                                       __Hparam 0000  
                                   ?_setMotor 0018                                       __Lparam 0000  
                    __end_of_UART1_Initialize 4FC6                                       ___aldiv 44CA  
                             __size_of___flge 0106                               __size_of___fleq 00AA  
                                     ___aodiv 3E46                                       ___fladd 226C  
                                     ___aomod 3FCE                                       ___fldiv 2B7E  
                                     ___awdiv 4B82                                       ___flneg 575E  
                                     ___awmod 4DC8                                       ___flmul 272E  
                                     ___flsub 5566                                       ___fltol 45D6  
                   __end_of_UART1_Receive_ISR 4DC8                                     ?_vfprintf 01A0  
                        ??_PWM5_LoadDutyValue 0016                                  __psmallconst 1000  
                             __size_of_efgtoa 0CAE                               __size_of_floorf 0216  
                                     __pcinit 5808                     _TMR5_GateInterruptHandler 018E  
                            ?_PWM8_Initialize 0001                                       __ramtop 1000  
                 __size_of_UART1_Transmit_ISR 0044                 ?_TMR5_SetGateInterruptHandler 0014  
                                     __ptext0 5C4C                                       __ptext1 43AE  
                                     __ptext2 427E                                       __ptext3 2F1A  
                                     __ptext4 50F0                                       __ptext5 5182  
                                     __ptext6 5BB4                                       __ptext7 51F6  
                                     __ptext8 1D48                                       __ptext9 48E2  
                             __size_of_printf 0028                                ??_TMR4_10msISR 0013  
                        __size_of_TMR5_Reload 000E                                    ??_actSpeed 0024  
                             __size_of_strcpy 006A                               __size_of_strlen 003A  
                     __end_of_CLC3_Initialize 5B5C                         _OSCILLATOR_Initialize 5D06  
                                   _T2CONbits 003FAC                                  __size_of_abs 0040  
                                __size_of_pad 00C2                                    ??___xxtofl 0020  
                                   _T3CONbits 003FA6                              ___awmod@dividend 0014  
               __size_of_CCP4_DefaultCallBack 0036                              ___aldiv@dividend 0014  
                                   _T4CONbits 003FA0                      ??_PIN_MANAGER_Initialize 0014  
           __size_of_TMR4_SetInterruptHandler 000A                                     _T2HLTbits 003FAD  
                                   _T5CONbits 003F9A                     ?_TMR4_SetInterruptHandler 0014  
                                     _isupper 5726                                       efgtoa@c 0089  
                                     efgtoa@d 00A7                                       efgtoa@e 00BF  
                                     efgtoa@f 0085                                       efgtoa@g 00BB  
                                     efgtoa@h 00B1                                       efgtoa@i 00B9  
                                     efgtoa@l 00B5                                       efgtoa@m 00A1  
                                     efgtoa@n 00C1                                       efgtoa@p 00AB  
                                     efgtoa@t 009B                                       efgtoa@u 00C3  
                                     efgtoa@w 00AD                                     _IPR10bits 00398A  
                                     _smtDuty 0124                                     _T4HLTbits 003FA1  
                                  ??_getCurve 01AE                                     _PIE10bits 00399A  
                  __size_of_SYSTEM_Initialize 004A                                       _tolower 52D0  
                                     _strncmp 48E2                          end_of_initialization 5838  
                                     floorf@e 0077                                     _T2RSTbits 003FAF  
                                     floorf@m 0073                                       floorf@u 0079  
                                     floorf@x 0036                ??_TMR4_DefaultInterruptHandler 0013  
                                   _T4RSTbits 003FA3                                     _PIR10bits 0039AA  
                                     fputc@fp 0018                             ??_SMT1_PR_ACQ_ISR 0011  
         __end_of_UART1_SetTxInterruptHandler 5D40                   _UART1_SetTxInterruptHandler 5D36  
                                     fputs@fp 0021                ??_UART1_SetOverrunErrorHandler 0016  
                                  ??_setMotor 001A                      __size_of_SMT1_Initialize 0030  
                           __end_of_vfpfcnvrt 226C                                    efgtoa@mode 00B0  
                           ?_CCP3_SetCallBack 0014                                    efgtoa@sign 00A9  
                            ___aldiv@quotient 001E                                       postdec2 003FDD  
                           ??_SMT1_PW_ACQ_ISR 0011                                       postinc0 003FEE  
                                     postinc1 003FE6                                       postinc2 003FDE  
                            ?_ADCC_Initialize 0001                            ??_CCP3_SetCallBack 0016  
                                  ??_vfprintf 003A              __end_of_ADCC_GetSingleConversion 5A16  
                           UART1_Write@txData 0014                           _UART1_RxDataHandler 5B5C  
                                     strcpy@d 001C                                       strlen@a 0016  
                                     strcpy@s 001A                                       strlen@s 0014  
                                 ?_getReverse 0001                                     _PORTBbits 003FCB  
                                   _PORTDbits 003FCD                      __size_of_CCP3_CaptureISR 0034  
                                 ___fladd@grs 0078                            getCurve@deltaRight 01B0  
                               ___xxtofl@sign 0024                                   ___fldiv@grs 0067  
                                 ___fldiv@rem 0060                          ?_UART1_RxDataHandler 0001  
                            ?_TMR5_WriteTimer 0009                          setSteering@steeringB 008A  
                        setSteering@steeringF 0088                       TMR5_WriteTimer@timerVal 0009  
                                 ___flmul@grs 0062                                _curveLeftCount 00F9  
                    __size_of_CCP4_CaptureISR 0034             CCP4_DefaultCallBack@capturedValue 0005  
                           ?_CCP4_SetCallBack 0014                  __end_of_INTERRUPT_Initialize 5488  
                              __end_of___flge 47E4                                __end_of___fleq 4F22  
                  __size_of_UART1_Receive_ISR 00C0                            ??_CCP4_SetCallBack 0016  
                                 _CLC3CONbits 003C60                                   vfpfcnvrt@ap 00CB  
                                 vfpfcnvrt@ct 00DF                                   vfpfcnvrt@fp 00C7  
                                 vfpfcnvrt@ll 00D1                                __end_of_efgtoa 1D48  
                           __size_of_TMR4_ISR 0038                                __end_of_floorf 36FE  
                      ?_OSCILLATOR_Initialize 0001                                    floorf@F527 0118  
                              __end_of_printf 5BDC                   __size_of_PWM8_LoadDutyValue 0034  
                            ?_CLC3_Initialize 0001                                __end_of_strcpy 52D0  
                              __end_of_strlen 56B0                                _TMR5_ReadTimer 5C28  
                         start_initialization 5808                ??_TMR5_SetGateInterruptHandler 0016  
             __size_of_PIN_MANAGER_Initialize 00CA                                   __end_of_abs 5676  
                                 __end_of_pad 4D08                          __size_of_Default_ISR 0002  
                     ??_UART1_SetErrorHandler 0016                      __size_of_CCP3_Initialize 002E  
                       ??_UART1_RxDataHandler 0012                                   putch@txData 0015  
                                  ivt0x8_base 0008                                 _uart1RxBuffer 0108  
                                 _actMotorPow 00E9                         __end_of___fpclassifyf 48E2  
                               _uart1TxBuffer 0110                           __size_of_getReverse 0130  
                        __end_of_TMR4_10msISR 5D9A                                   vfprintf@fmt 01A2  
                                    ??___flge 0036                                      ??___fleq 001C  
                            ??_PMD_Initialize 0014                        __size_of_TMR5_GATE_ISR 0032  
                                _oldDistRight 00EF                      __size_of_CCP4_Initialize 002E  
                                    ??_efgtoa 008A                                      ??_floorf 006D  
                  __end_of_PWM7_LoadDutyValue 597A                             ??_SMT1_Initialize 0014  
                                    ??_printf 003A                                      ??_strcpy 0018  
                                    ??_strlen 0016                        __end_of_TMR5_ReadTimer 5C4C  
                       CCP4_CaptureISR@module 0007                                     ___fladd@a 0071  
                                   ___fladd@b 006D                           calcMotorPow@addMPow 0089  
                    _ADCC_GetSingleConversion 59E4                                     ___fldiv@a 002E  
                                   ___fldiv@b 002A                   PWM5_LoadDutyValue@dutyValue 0014  
                       TMR4_ISR@CountCallBack 0040                                     ___flmul@a 002E  
                                   ___flmul@b 002A                                   __pbssCOMRAM 003A  
                                   ___flsub@a 007D                                     ___flsub@b 0079  
                          _UART1_ErrorHandler 0196                                 __pcstackBANK0 0060  
                               __pcstackBANK1 01A0                             __size_of_actSpeed 0094  
                            ___aodiv@dividend 0014                            _PWM6_LoadDutyValue 58AA  
                    __size_of_TMR2_Initialize 001C                             __size_of___xxtofl 01B4  
                    _UART1_RxInterruptHandler 019E                             ??_CCP3_CaptureISR 0003  
                __end_of_CCP3_DefaultCallBack 5874                        __size_of_TMR4_CallBack 002E  
                                   _calcSpeed 36FE                             __size_of_getCurve 02E8  
                         ?_PWM6_LoadDutyValue 0014                   PWM8_LoadDutyValue@dutyValue 0014  
                fp__UART1_DefaultErrorHandler 0000                                     _checkBatt 50F0  
                                _currentSpeed 00EB                  ?_UART1_SetRxInterruptHandler 0014  
                                   __pnvBANK1 018A                                   _efgtoa$3560 0091  
                                 _efgtoa$3570 0099                                   _efgtoa$3564 0093  
                                 _efgtoa$3559 008F                                   _efgtoa$3568 0095  
                                 _efgtoa$3569 0097                            setMotor@motorPower 0018  
                      _PIN_MANAGER_Initialize 4AB8                                     _dtoa$3535 006A  
                    __size_of_PWM5_Initialize 0018                      __size_of_TMR3_Initialize 0038  
                           ?_UART1_Initialize 0001          __end_of_UART1_SetFramingErrorHandler 5D5E  
       __size_of_UART1_SetFramingErrorHandler 000A                  _UART1_SetFramingErrorHandler 5D54  
                                    ?___aldiv 0014               ADCC_GetSingleConversion@channel 0018  
                                    ?___aodiv 0014                                      ?___fladd 006D  
                                    ?___aomod 0014                             __size_of_setMotor 00E2  
            __end_of_TMR4_SetInterruptHandler 5D7C                                      ?___fldiv 002A  
                                    ?___awdiv 0014                                     __ptext100 53E8  
                                   __ptext101 5BDC                                     __ptext102 0000  
                            ___aodiv@quotient 0026                                      ?___flneg 0014  
           CCP3_DefaultCallBack@capturedValue 0001                                      ?___awmod 0014  
                           ??_CCP4_CaptureISR 0007                                      ?___flmul 002A  
                                    ?___flsub 0079                                      ?___fltol 0079  
                          ??_UART1_Initialize 0016                                     _distLeftM 0138  
                                   _distFront 00FD                              _uart1RxLastError 0042  
                               ??_UART1_Write 0014                                     _distRight 00F3  
                        ??_PWM6_LoadDutyValue 0016                                     _cycle10ms 00FA  
                           __size_of_vfprintf 0070                               ?_TMR5_ReadTimer 0009  
                               ?_calcMotorPow 0001                                   __smallconst 1000  
                                    _CLC3GLS0 003C66                                      _CLC3GLS1 003C67  
                                    _CLC3GLS2 003C68                                      _CLC3GLS3 003C69  
                                   _driveMode 00FC           fp__UART1_DefaultOverrunErrorHandler 0000  
    __end_of_UART1_DefaultOverrunErrorHandler 5DA2     __size_of_UART1_DefaultOverrunErrorHandler 0002  
          ??_UART1_DefaultOverrunErrorHandler 0012             ?_UART1_DefaultOverrunErrorHandler 0001  
            _UART1_DefaultOverrunErrorHandler 5DA0                                      _CLC3SEL0 003C62  
                                    _CLC3SEL1 003C63                                      _CLC3SEL2 003C64  
                                    _CLC3SEL3 003C65                               _SMT1_PR_ACQ_ISR 551C  
                               ?_calcSteering 0001                                      ?_isupper 0014  
                    __size_of_PWM6_Initialize 0018                      __size_of_TMR4_Initialize 002C  
                               _TMR5_GATE_ISR 5A18                                     _curveMode 00FB  
                                    ?_tolower 001A                                __size_of_fputc 0096  
                                    _T2CLKCON 003FAE                                __size_of_fputs 0044  
                                    ?_strncmp 0014                                   _U1ERRIRbits 003DF9  
                                    _T4CLKCON 003FA2                                __size_of_putch 000A  
                                  ?_calcSpeed 0001                          _INTERRUPT_Initialize 543C  
                               ??_setSteering 0086                               ___aldiv@divisor 0018  
                             _SMT1_PW_ACQ_ISR 53E8                               ___aldiv@counter 001C  
                                  ?_checkBatt 0001         UART1_SetErrorHandler@interruptHandler 0014  
                                    _IPR1bits 003981                  __end_of_CCP4_DefaultCallBack 58AA  
                           ??_CCP3_Initialize 0016                                      _IPR3bits 003983  
                                    _PIE1bits 003991                                      _PIE3bits 003993  
                                    _IPR7bits 003987                                      _IPR8bits 003988  
                                    _IPR9bits 003989                                      _PIE7bits 003997  
                                    _PIE8bits 003998                                      _PIE9bits 003999  
                                    _IVTBASEH 003FD6                                      _IVTBASEL 003FD5  
                                    _IVTBASEU 003FD7                 ??_UART1_SetRxInterruptHandler 0016  
                                    i1u700_20 5AEA                                      i1u700_21 5AE6  
                                    i1u701_28 5AF0                                      i1u710_20 5706  
                                    i1u701_29 5B02                                      i1u710_21 5702  
                                    i1u631_20 5B80                                      i1u631_21 5B7C  
                                    i1u711_28 570C                                      i1u711_29 571E  
                                    i1u716_20 57F4                                      i1u708_20 56CA  
                                    i1u716_21 57F0                                      i1u708_21 56C6  
                                    i1u709_28 56D0                                      i1u709_29 56E2  
                                    _PIR1bits 0039A1                                      i1u690_20 5626  
                                    i1u690_21 5622                                      i1u691_20 4D28  
                                    i1u691_21 4D24                                      i1u693_20 4D60  
                                    i1u692_28 4D3E                                      i1u693_21 4D5C  
                                    i1u692_29 4D50                                      i1u695_20 4DA4  
                                    i1u694_28 4D76                                      i1u695_21 4DA0  
                                    i1u694_29 4D88                                      _PIR4bits 0039A4  
                                    i2u632_40 5B96                                      i2u632_41 5B92  
                                    i1u696_28 4DAA                                      i1u689_20 5602  
                                    i1u696_29 4DBE                                      i1u689_21 55FE  
                                    i2u712_48 599A                                      i2u712_49 59AE  
                                    i2u714_40 5A30                                      i2u713_48 59CE  
                                    i2u714_41 5A2C                                      i2u713_49 59E2  
                                    _PIR6bits 0039A6                                      i2u715_48 5A36  
                                    i2u715_49 5A48                                      i2u717_40 5540  
                                    i2u717_41 553C                                      _PIR7bits 0039A7  
                                    i2u718_40 5416                                      i2u718_41 5412  
                                    _PIR8bits 0039A8                                      _PIR9bits 0039A9  
                                    i2u697_40 584C                                      i2u697_41 5848  
                                    i2u698_40 5882                                      i2u698_41 587E  
                                    _SMT1CON0 003F1E                                      _SMT1CON1 003F1F  
                    __size_of_PWM7_Initialize 0018                      __size_of_TMR5_Initialize 004A  
                                    _SMT1STAT 003F20                             _SMT1_Overflow_ISR 5BDC  
                                    _TMR4_ISR 57D0                    __end_of_UART1_Transmit_ISR 5636  
                               _TMR4_CallBack 5AD6                                     _smtPeriod 0048  
               ?_UART1_SetFramingErrorHandler 0014                                 ??_TMR5_Reload 000B  
                 __size_of_PWM5_LoadDutyValue 0034                                     _vfpfcnvrt 1D48  
                          ?_SMT1_Overflow_ISR 0001                             _getBatteryVoltage 5182  
                                ??_getReverse 003A                                ??_calcMotorPow 0083  
                                  _ADCON0bits 003EF8                                    _ADCON1bits 003EF9  
                                  _ADCON2bits 003EFA                                    _ADCON3bits 003EFB  
                          ?_getBatteryVoltage 0001                             ??_CCP4_Initialize 0016  
                              ??_calcSteering 008C                           ??_SMT1_Overflow_ISR 0011  
                   TMR5_ReadTimer@readValHigh 000F                     __size_of_CCP3_SetCallBack 000A  
                              ?_TMR5_GATE_ISR 0001                           __end_of_UART1_Write 538C  
                    __size_of_PWM8_Initialize 0018                                  _SMT1CON0bits 003F1E  
                                _SMT1CON1bits 003F1F                                    vfpfcnvrt@c 00E2  
                                  vfpfcnvrt@f 00DB                           ??_getBatteryVoltage 003A  
                                 _INTCON0bits 003FD2                         ?_INTERRUPT_Initialize 0001  
                       __size_of_TMR4_10msISR 000A                          fp__UART1_Receive_ISR 0000  
                      _uart1TxBufferRemaining 004C                             ??_TMR2_Initialize 0014  
                                _uart1RxCount 0043                            __end_of_getReverse 43AE  
                                  _ADSTATbits 003EFC                                   _followCount 0130  
                                    __Hrparam 0000                     __end_of_SMT1_Overflow_ISR 5C04  
                         __end_of_setSteering 3AFE                                    vfprintf@ap 01A4  
                                    __Lrparam 0000                                    vfprintf@fp 01A0  
                                 _oldDistLeft 00F1                                ?_TMR4_CallBack 0001  
                              calcSpeed@speed 0087                     __end_of_getBatteryVoltage 51F6  
                     ??_OSCILLATOR_Initialize 0014                              __size_of___aldiv 010C  
                            __size_of___aodiv 0188                              __size_of___fladd 04C2  
                            __size_of___aomod 0164                              __size_of___fldiv 039C  
                            __size_of___awdiv 00C4                              __size_of___flneg 0038  
                            __size_of___awmod 00B0                              __size_of___flmul 0450  
                            __size_of___flsub 0048                              __size_of___fltol 0108  
                                _SMT1STATbits 003F20                          _CCP3_DefaultCallBack 583E  
                     __end_of_SMT1_PR_ACQ_ISR 5566                                    ?_vfpfcnvrt 00C7  
                             ___aodiv@divisor 001C                             ??_PWM5_Initialize 0014  
                           ??_TMR3_Initialize 0014                               ___aodiv@counter 0024  
                    _TMR4_SetInterruptHandler 5D72                            ___fpclassifyf@F465 011C  
                                    _actSpeed 505C          __size_of_UART1_SetRxInterruptHandler 000A  
                                _TMR4_10msISR 5D90                                      ___xxtofl 3AFE  
                    __size_of_ADCC_Initialize 005C                           __end_of_TMR5_Reload 5D2C  
                   __size_of_CCP4_SetCallBack 000A                                      __pivt0x8 0008  
                     __end_of_SMT1_PW_ACQ_ISR 543C                                      _getCurve 2F1A  
                                    __ptext10 109A                                      __ptext11 52D0  
                                    __ptext20 4DC8                                      __ptext12 5726  
                                    __ptext21 3202                                      __ptext13 5266  
                                    __ptext30 3E46                                      __ptext22 4C46  
                                    __ptext14 34E8                                      __ptext31 59E4  
                                    __ptext23 5676                                      __ptext15 47E4  
                                    __ptext40 49D6                                      __ptext32 3CB2  
                                    __ptext24 55AE                                      __ptext16 5566  
                                    __ptext41 5912                                      __ptext33 3908  
                                    __ptext25 4FC6                                      __ptext17 575E  
                                    __ptext50 4F22                                      __ptext42 5946  
                                    __ptext34 2B7E                                      __ptext26 5D2C  
                                    __ptext18 46DE                                      __ptext51 5D36  
                                    __ptext43 505C                                      __ptext35 58AA  
                                    __ptext27 5330                                      __ptext19 4E78  
                                    __ptext60 5796                                      __ptext52 5D40  
                                    __ptext44 44CA                                      __ptext36 58DE  
                                    __ptext28 5636                                      __ptext61 5C8A  
                                    __ptext53 5D4A                                      __ptext45 3AFE  
                                    __ptext37 36FE                                      __ptext29 3FCE  
                                    __ptext70 543C                                      __ptext62 5A4A  
                                    __ptext54 5D54                                      __ptext46 45D6  
                                    __ptext38 226C                                      __ptext71 5B30  
                                    __ptext63 5CA6                                      __ptext55 5D5E  
                                    __ptext47 272E                                      __ptext39 4132  
                                    __ptext80 4D08                                      __ptext72 5A7A  
                                    __ptext64 5CBE                                      __ptext56 54D2  
                                    __ptext48 4B82                                      __ptext81 5DA0  
                                    __ptext73 5D7C                                      __ptext65 5CD6  
                                    __ptext57 5D68                                      __ptext49 5488  
                                    __ptext90 597C                                      __ptext82 5DA2  
                                    __ptext74 5AA8                                      __ptext66 5CEE  
                                    __ptext58 5B04                                      __ptext91 583E  
                                    __ptext83 5D9A                                      __ptext75 5D86  
                                    __ptext67 5C04                                      __ptext59 5D72  
                                    __ptext92 59B0                                      __ptext84 5B5C  
                                    __ptext76 538C                                      __ptext68 4AB8  
                                    __ptext93 5874                                      __ptext85 57D0  
                                    __ptext77 56B0                                      __ptext69 5D06  
                                    __ptext94 5A18                                      __ptext86 5AD6  
                                    __ptext78 55F2                                      __ptext95 5C6C  
                                    __ptext87 5D90                                      __ptext79 56EC  
                                    __ptext96 5D1E                                      __ptext88 5DA4  
                                    __ptext97 5B88                                      __ptext89 5DA8  
                                    __ptext98 5C28                                      __ptext99 551C  
                            __size_of_isupper 0038                                      _distLeft 00F5  
              __size_of_UART1_SetErrorHandler 000A                                   ??_calcSpeed 0083  
               __end_of_UART1_SetErrorHandler 5D68                              __size_of_tolower 0060  
                                  _T3GCONbits 003FA7                                    strcpy@dest 0014  
                            __size_of_strncmp 00F4                                   ??_checkBatt 003A  
                           ??_TMR4_Initialize 0016                             ??_PWM6_Initialize 0014  
                               __size_of_main 0020                                 __size_of_dtoa 02E6  
                                    _oldSpeed 012C                                    _T5GCONbits 003F9B  
                               __size_of_loop 011C                               _SMT1_Initialize 5A4A  
                                 _IVTLOCKbits 003FD4                                      _setMotor 49D6  
                                    _setSpeed 00ED                      __size_of_TMR5_WriteTimer 002C  
                                    efgtoa@fp 0083                                      efgtoa@ne 009F  
                                    efgtoa@pp 009D                                      efgtoa@ou 00A3  
                   _UART1_OverrunErrorHandler 0198  UART1_SetOverrunErrorHandler@interruptHandler 0014  
                                    isa$xinst 000000            __size_of_UART1_DefaultErrorHandler 0006  
                  ??_ADCC_GetSingleConversion 0016                    ?_UART1_DefaultErrorHandler 0001  
                       ?_CCP3_DefaultCallBack 0001                                      _vfprintf 51F6  
                                   printf@fmt 01A6                    __end_of_PWM8_LoadDutyValue 5946  
                             _CCP3_CaptureISR 597C                                   _UART1_Write 5330  
                       fp__UART1_Transmit_ISR 0000                             ??_TMR5_Initialize 0016  
                           ??_PWM7_Initialize 0014           fp__TMR5_DefaultGateInterruptHandler 0000  
    __end_of_TMR5_DefaultGateInterruptHandler 5C8A     __size_of_TMR5_DefaultGateInterruptHandler 001E  
          ??_TMR5_DefaultGateInterruptHandler 0011             ?_TMR5_DefaultGateInterruptHandler 0001  
            _TMR5_DefaultGateInterruptHandler 5C6C                              ___aomod@dividend 0014  
                              _battCheckCount 0132                                 ??_Default_ISR 0001  
              ??_UART1_SetFramingErrorHandler 0016                                  _reverseCount 0134  
                             ??_TMR5_GATE_ISR 0011                                _vfpfcnvrt$3588 00D9  
                 __end_of_UART1_RxDataHandler 5B88                                   _uart1RxHead 0045  
                        _CCP4_DefaultCallBack 5874                                   _uart1TxHead 0047  
                                 _uart1RxTail 0044                                   _uart1TxTail 0046  
                      ??_INTERRUPT_Initialize 0014                            _PWM7_LoadDutyValue 5946  
                                    intlevel1 0000                                      intlevel2 0000  
                    __size_of_CLC3_Initialize 002C                                   _setSteering 3908  
                             _CCP4_CaptureISR 59B0                       ?_PIN_MANAGER_Initialize 0001  
                           ??_PWM8_Initialize 0014                           ?_PWM7_LoadDutyValue 0014  
                        __end_of_calcMotorPow 427E                                     strcpy@src 0016  
                                    isupper@c 0014                                     strncmp@_l 0014  
                                   strncmp@_r 0016                               ??_TMR4_CallBack 0013  
                  __size_of_SMT1_Overflow_ISR 0028                          __end_of_calcSteering 3E46  
                         _uart1RxStatusBuffer 0100                                   efgtoa@nmode 00AF  
                                    printf@ap 01AC                              ??_TMR5_ReadTimer 000B  
                  __size_of_getBatteryVoltage 0074  UART1_SetFramingErrorHandler@interruptHandler 0014  
           __end_of_UART1_DefaultErrorHandler 5DA0                               ___aomod@divisor 001C  
                                 ??_vfpfcnvrt 00CD                                   _reverseTime 012A  
                             ___aomod@counter 0024                              ?_SMT1_PR_ACQ_ISR 0001  
                                 _TMR5_Reload 5D1E                                    _SMT1SIGPPS 003AD2  
                                  _SMT1WINPPS 003AD1                          ??_PWM7_LoadDutyValue 0016  
                                    tolower@c 001A                                 actSpeed@speed 0024  
                      __size_of___fpclassifyf 00FE                         ?_CCP4_DefaultCallBack 0005  
                   calcMotorPow@oldSpeedDelta 0087                                      strncmp@l 001B  
                                    strncmp@n 0018                              _CCP3_SetCallBack 5D86  
                                    strncmp@r 001D                     __size_of_UART1_Initialize 00A4  
                                ___aldiv@sign 001D                              ?_SMT1_PW_ACQ_ISR 0001  
                             _CCP3_Initialize 5AA8                   PWM6_LoadDutyValue@dutyValue 0014  
                           calcSteering@delta 008E                        _getBatteryVoltage$4185 01AE  
                    _UART1_TxInterruptHandler 019C                                 ___fladd@signs 0075  
                         __end_of_Default_ISR 5DAA                       __end_of_SMT1_Initialize 5A7A  
                                ___aodiv@sign 0025                __end_of_PIN_MANAGER_Initialize 4B82  
                           ??_ADCC_Initialize 0014                                  ___fladd@aexp 0076  
                                ___fladd@bexp 0077                  ?_UART1_SetTxInterruptHandler 0014  
                                ___aomod@sign 0025                       __end_of_CCP3_CaptureISR 59B0  
