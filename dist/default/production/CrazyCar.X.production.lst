

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Jan 31 09:13:00 2024

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F46K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=4,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=4,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1
    87                           	psect	text72,global,reloc=2,class=CODE,delta=1
    88                           	psect	text73,global,reloc=2,class=CODE,delta=1
    89                           	psect	text74,global,reloc=4,class=CODE,delta=1
    90                           	psect	text75,global,reloc=2,class=CODE,delta=1
    91                           	psect	text76,global,reloc=2,class=CODE,delta=1
    92                           	psect	text77,global,reloc=2,class=CODE,delta=1
    93                           	psect	text78,global,reloc=4,class=CODE,delta=1
    94                           	psect	text79,global,reloc=4,class=CODE,delta=1
    95                           	psect	text80,global,reloc=2,class=CODE,delta=1
    96                           	psect	text81,global,reloc=4,class=CODE,delta=1
    97                           	psect	text82,global,reloc=2,class=CODE,delta=1
    98                           	psect	text83,global,reloc=4,class=CODE,delta=1
    99                           	psect	text84,global,reloc=2,class=CODE,delta=1
   100                           	psect	text85,global,reloc=2,class=CODE,delta=1
   101                           	psect	text86,global,reloc=2,class=CODE,delta=1
   102                           	psect	text87,global,reloc=2,class=CODE,delta=1
   103                           	psect	text88,global,reloc=4,class=CODE,delta=1
   104                           	psect	text89,global,reloc=4,class=CODE,delta=1
   105                           	psect	text90,global,reloc=4,class=CODE,delta=1
   106                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   107                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   108                           	psect	text91,global,reloc=4,class=CODE,delta=1
   109                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   110                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   111                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   112  0000                     
   113                           ; Version 2.20
   114                           ; Generated 05/05/2020 GMT
   115                           ; 
   116                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   117                           ; All rights reserved.
   118                           ; 
   119                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   120                           ; 
   121                           ; Redistribution and use in source and binary forms, with or without modification, are
   122                           ; permitted provided that the following conditions are met:
   123                           ; 
   124                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   125                           ;        conditions and the following disclaimer.
   126                           ; 
   127                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   128                           ;        of conditions and the following disclaimer in the documentation and/or other
   129                           ;        materials provided with the distribution.
   130                           ; 
   131                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   132                           ;        software without specific prior written permission.
   133                           ; 
   134                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   135                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   136                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   137                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   138                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   139                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   140                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   141                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   142                           ; 
   143                           ; 
   144                           ; Code-generator required, PIC18F46K42 Definitions
   145                           ; 
   146                           ; SFR Addresses
   147  0000                     
   148                           	psect	nvCOMRAM
   149  00004C                     __pnvCOMRAM:
   150                           	callstack 0
   151  00004C                     _uart1TxBufferRemaining:
   152                           	callstack 0
   153  00004C                     	ds	1
   154                           
   155                           	psect	nvBANK0
   156  0000E8                     __pnvBANK0:
   157                           	callstack 0
   158  0000E8                     _TMR4_InterruptHandler:
   159                           	callstack 0
   160  0000E8                     	ds	2
   161  0000EA                     _timer3ReloadVal:
   162                           	callstack 0
   163  0000EA                     	ds	2
   164  0000EC                     _TMR5_GateInterruptHandler:
   165                           	callstack 0
   166  0000EC                     	ds	2
   167  0000EE                     _timer5ReloadVal:
   168                           	callstack 0
   169  0000EE                     	ds	2
   170  0000F0                     _CCP4_CallBack:
   171                           	callstack 0
   172  0000F0                     	ds	2
   173  0000F2                     _CCP3_CallBack:
   174                           	callstack 0
   175  0000F2                     	ds	2
   176  0000F4                     _UART1_ErrorHandler:
   177                           	callstack 0
   178  0000F4                     	ds	2
   179  0000F6                     _UART1_OverrunErrorHandler:
   180                           	callstack 0
   181  0000F6                     	ds	2
   182  0000F8                     _UART1_FramingErrorHandler:
   183                           	callstack 0
   184  0000F8                     	ds	2
   185  0000FA                     _UART1_TxInterruptHandler:
   186                           	callstack 0
   187  0000FA                     	ds	2
   188  0000FC                     _UART1_RxInterruptHandler:
   189                           	callstack 0
   190  0000FC                     	ds	2
   191  0000                     _PIR4bits	set	14756
   192  0000                     _PIR1bits	set	14753
   193  0000                     _PIE1bits	set	14737
   194  0000                     _PIE7bits	set	14743
   195  0000                     _PIR7bits	set	14759
   196  0000                     _PIR6bits	set	14758
   197  0000                     _PIE8bits	set	14744
   198  0000                     _PIR8bits	set	14760
   199  0000                     _PIE10bits	set	14746
   200  0000                     _PIR10bits	set	14762
   201  0000                     _PIE9bits	set	14745
   202  0000                     _PIR9bits	set	14761
   203  0000                     _IPR9bits	set	14729
   204  0000                     _IPR7bits	set	14727
   205  0000                     _IPR8bits	set	14728
   206  0000                     _IPR10bits	set	14730
   207  0000                     _IPR1bits	set	14721
   208  0000                     _IPR3bits	set	14723
   209  0000                     _PIE3bits	set	14739
   210  0000                     _PMD7	set	14791
   211  0000                     _PMD6	set	14790
   212  0000                     _PMD5	set	14789
   213  0000                     _PMD4	set	14788
   214  0000                     _PMD3	set	14787
   215  0000                     _PMD2	set	14786
   216  0000                     _PMD1	set	14785
   217  0000                     _PMD0	set	14784
   218  0000                     _OSCTUNE	set	14814
   219  0000                     _OSCFRQ	set	14815
   220  0000                     _OSCEN	set	14813
   221  0000                     _OSCCON3	set	14811
   222  0000                     _OSCCON1	set	14809
   223  0000                     _CCP4PPS	set	15056
   224  0000                     _SMT1SIGPPS	set	15058
   225  0000                     _CLCIN2PPS	set	15067
   226  0000                     _RB3PPS	set	14859
   227  0000                     _RA3PPS	set	14851
   228  0000                     _SMT1WINPPS	set	15057
   229  0000                     _CLCIN0PPS	set	15065
   230  0000                     _RA4PPS	set	14852
   231  0000                     _T5GPPS	set	15049
   232  0000                     _RA0PPS	set	14848
   233  0000                     _U1RXPPS	set	15077
   234  0000                     _RA1PPS	set	14849
   235  0000                     _CLCIN3PPS	set	15068
   236  0000                     _CCP3PPS	set	15055
   237  0000                     _INLVLE	set	14980
   238  0000                     _INLVLD	set	14964
   239  0000                     _INLVLC	set	14948
   240  0000                     _INLVLB	set	14932
   241  0000                     _INLVLA	set	14916
   242  0000                     _SLRCONE	set	14979
   243  0000                     _SLRCOND	set	14963
   244  0000                     _SLRCONC	set	14947
   245  0000                     _SLRCONB	set	14931
   246  0000                     _SLRCONA	set	14915
   247  0000                     _ODCOND	set	14962
   248  0000                     _ODCONC	set	14946
   249  0000                     _ODCONB	set	14930
   250  0000                     _ODCONA	set	14914
   251  0000                     _ODCONE	set	14978
   252  0000                     _RD1I2C	set	14971
   253  0000                     _RD0I2C	set	14970
   254  0000                     _RC4I2C	set	14955
   255  0000                     _RC3I2C	set	14954
   256  0000                     _RB2I2C	set	14939
   257  0000                     _RB1I2C	set	14938
   258  0000                     _WPUC	set	14945
   259  0000                     _WPUA	set	14913
   260  0000                     _WPUB	set	14929
   261  0000                     _WPUE	set	14977
   262  0000                     _WPUD	set	14961
   263  0000                     _ANSELA	set	14912
   264  0000                     _ANSELE	set	14976
   265  0000                     _ANSELB	set	14928
   266  0000                     _ANSELC	set	14944
   267  0000                     _ANSELD	set	14960
   268  0000                     _CLC3CON	set	15456
   269  0000                     _CLC3GLS3	set	15465
   270  0000                     _CLC3GLS2	set	15464
   271  0000                     _CLC3GLS1	set	15463
   272  0000                     _CLC3GLS0	set	15462
   273  0000                     _CLC3SEL3	set	15461
   274  0000                     _CLC3SEL2	set	15460
   275  0000                     _CLC3SEL1	set	15459
   276  0000                     _CLC3SEL0	set	15458
   277  0000                     _CLC3POL	set	15457
   278  0000                     _CLC3CONbits	set	15456
   279  0000                     _U1RXB	set	15848
   280  0000                     _U1TXB	set	15850
   281  0000                     _U1ERRIRbits	set	15865
   282  0000                     _U1ERRIE	set	15866
   283  0000                     _U1ERRIR	set	15865
   284  0000                     _U1UIR	set	15864
   285  0000                     _U1FIFO	set	15863
   286  0000                     _U1BRGH	set	15862
   287  0000                     _U1BRGL	set	15861
   288  0000                     _U1CON2	set	15860
   289  0000                     _U1CON1	set	15859
   290  0000                     _U1CON0	set	15858
   291  0000                     _U1P3H	set	15857
   292  0000                     _U1P3L	set	15856
   293  0000                     _U1P2H	set	15855
   294  0000                     _U1P2L	set	15854
   295  0000                     _U1P1H	set	15853
   296  0000                     _U1P1L	set	15852
   297  0000                     _ADCON1bits	set	16121
   298  0000                     _ADERRL	set	16098
   299  0000                     _ADERRH	set	16099
   300  0000                     _ADPREVL	set	16109
   301  0000                     _ADPREVH	set	16110
   302  0000                     _ADFLTRL	set	16102
   303  0000                     _ADFLTRH	set	16103
   304  0000                     _ADSTATbits	set	16124
   305  0000                     _ADACCL	set	16104
   306  0000                     _ADACCH	set	16105
   307  0000                     _ADCON2bits	set	16122
   308  0000                     _ADCNT	set	16107
   309  0000                     _ADCON3bits	set	16123
   310  0000                     _ADRESL	set	16111
   311  0000                     _ADRESH	set	16112
   312  0000                     _ADCON0bits	set	16120
   313  0000                     _ADCON0	set	16120
   314  0000                     _ADCLK	set	16127
   315  0000                     _ADACT	set	16126
   316  0000                     _ADREF	set	16125
   317  0000                     _ADSTAT	set	16124
   318  0000                     _ADCON3	set	16123
   319  0000                     _ADCON2	set	16122
   320  0000                     _ADCON1	set	16121
   321  0000                     _ADPREH	set	16119
   322  0000                     _ADPREL	set	16118
   323  0000                     _ADCAP	set	16117
   324  0000                     _ADACQH	set	16116
   325  0000                     _ADACQL	set	16115
   326  0000                     _ADPCH	set	16113
   327  0000                     _ADRPT	set	16108
   328  0000                     _ADACCU	set	16106
   329  0000                     _ADSTPTH	set	16101
   330  0000                     _ADSTPTL	set	16100
   331  0000                     _ADUTHH	set	16097
   332  0000                     _ADUTHL	set	16096
   333  0000                     _ADLTHH	set	16095
   334  0000                     _ADLTHL	set	16094
   335  0000                     _SMT1TMR	set	16146
   336  0000                     _SMT1CPR	set	16149
   337  0000                     _SMT1CPW	set	16152
   338  0000                     _SMT1PR	set	16155
   339  0000                     _SMT1STATbits	set	16160
   340  0000                     _SMT1CON0bits	set	16158
   341  0000                     _SMT1CON1bits	set	16159
   342  0000                     _SMT1PRL	set	16155
   343  0000                     _SMT1PRH	set	16156
   344  0000                     _SMT1PRU	set	16157
   345  0000                     _SMT1SIG	set	16162
   346  0000                     _SMT1WIN	set	16163
   347  0000                     _SMT1CLK	set	16161
   348  0000                     _SMT1STAT	set	16160
   349  0000                     _SMT1CON1	set	16159
   350  0000                     _SMT1CON0	set	16158
   351  0000                     _CCPTMRS1bits	set	16223
   352  0000                     _CCPTMRS0bits	set	16222
   353  0000                     _PORTBbits	set	16331
   354  0000                     _PR2	set	16299
   355  0000                     _TMR2	set	16298
   356  0000                     _T2CONbits	set	16300
   357  0000                     _T2RSTbits	set	16303
   358  0000                     _T2HLTbits	set	16301
   359  0000                     _T2CON	set	16300
   360  0000                     _T2TMR	set	16298
   361  0000                     _T2PR	set	16299
   362  0000                     _T2RST	set	16303
   363  0000                     _T2HLT	set	16301
   364  0000                     _T2CLKCON	set	16302
   365  0000                     _PWM6DCL	set	16232
   366  0000                     _PWM6DCH	set	16233
   367  0000                     _PWM6CON	set	16234
   368  0000                     _PWM5DCL	set	16236
   369  0000                     _PWM5DCH	set	16237
   370  0000                     _PWM5CON	set	16238
   371  0000                     _PWM8DCL	set	16224
   372  0000                     _PWM8DCH	set	16225
   373  0000                     _PWM8CON	set	16226
   374  0000                     _PWM7DCL	set	16228
   375  0000                     _PWM7DCH	set	16229
   376  0000                     _PWM7CON	set	16230
   377  0000                     _PR4	set	16287
   378  0000                     _TMR4	set	16286
   379  0000                     _T4CONbits	set	16288
   380  0000                     _T4RSTbits	set	16291
   381  0000                     _T4HLTbits	set	16289
   382  0000                     _T4CON	set	16288
   383  0000                     _T4TMR	set	16286
   384  0000                     _T4PR	set	16287
   385  0000                     _T4RST	set	16291
   386  0000                     _T4HLT	set	16289
   387  0000                     _T4CLKCON	set	16290
   388  0000                     _T3GCONbits	set	16295
   389  0000                     _T3CONbits	set	16294
   390  0000                     _T3CON	set	16294
   391  0000                     _TMR3L	set	16292
   392  0000                     _TMR3H	set	16293
   393  0000                     _T3CLK	set	16297
   394  0000                     _T3GATE	set	16296
   395  0000                     _T3GCON	set	16295
   396  0000                     _T5GCONbits	set	16283
   397  0000                     _T5CONbits	set	16282
   398  0000                     _T5CON	set	16282
   399  0000                     _TMR5L	set	16280
   400  0000                     _TMR5H	set	16281
   401  0000                     _T5CLK	set	16285
   402  0000                     _T5GATE	set	16284
   403  0000                     _T5GCON	set	16283
   404  0000                     _CCPR4L	set	16240
   405  0000                     _CCPR4H	set	16241
   406  0000                     _CCP4CAP	set	16243
   407  0000                     _CCP4CON	set	16242
   408  0000                     _CCPR3L	set	16244
   409  0000                     _CCPR3H	set	16245
   410  0000                     _CCP3CAP	set	16247
   411  0000                     _CCP3CON	set	16246
   412  0000                     _PORTDbits	set	16333
   413  0000                     _IVTBASEL	set	16341
   414  0000                     _IVTBASEH	set	16342
   415  0000                     _IVTBASEU	set	16343
   416  0000                     _IVTLOCKbits	set	16340
   417  0000                     _IVTLOCK	set	16340
   418  0000                     _INTCON0bits	set	16338
   419  0000                     _TRISD	set	16325
   420  0000                     _TRISC	set	16324
   421  0000                     _TRISB	set	16323
   422  0000                     _TRISA	set	16322
   423  0000                     _TRISE	set	16326
   424  0000                     _LATC	set	16316
   425  0000                     _LATB	set	16315
   426  0000                     _LATA	set	16314
   427  0000                     _LATD	set	16317
   428  0000                     _LATE	set	16318
   429  0000                     _GIE	set	130711
   430                           
   431                           	psect	smallconst
   432  001000                     __psmallconst:
   433                           	callstack 0
   434  001000  00                 	db	0
   435  001001                     STR_1:
   436                           
   437                           ; BSR set to: 0
   438  001001  44                 	db	68	;'D'
   439  001002  65                 	db	101	;'e'
   440  001003  6C                 	db	108	;'l'
   441  001004  74                 	db	116	;'t'
   442  001005  4C                 	db	76	;'L'
   443  001006  65                 	db	101	;'e'
   444  001007  66                 	db	102	;'f'
   445  001008  74                 	db	116	;'t'
   446  001009  3A                 	db	58	;':'
   447  00100A  20                 	db	32
   448  00100B  25                 	db	37
   449  00100C  64                 	db	100	;'d'
   450  00100D  0A                 	db	10
   451  00100E  00                 	db	0
   452  00100F                     STR_4:
   453                           
   454                           ; BSR set to: 0
   455  00100F  53                 	db	83	;'S'
   456  001010  74                 	db	116	;'t'
   457  001011  6F                 	db	111	;'o'
   458  001012  70                 	db	112	;'p'
   459  001013  20                 	db	32
   460  001014  52                 	db	82	;'R'
   461  001015  65                 	db	101	;'e'
   462  001016  76                 	db	118	;'v'
   463  001017  65                 	db	101	;'e'
   464  001018  72                 	db	114	;'r'
   465  001019  73                 	db	115	;'s'
   466  00101A  65                 	db	101	;'e'
   467  00101B  0A                 	db	10
   468  00101C  00                 	db	0
   469  00101D                     STR_2:
   470                           
   471                           ; BSR set to: 0
   472  00101D  52                 	db	82	;'R'
   473  00101E  65                 	db	101	;'e'
   474  00101F  76                 	db	118	;'v'
   475  001020  65                 	db	101	;'e'
   476  001021  72                 	db	114	;'r'
   477  001022  73                 	db	115	;'s'
   478  001023  65                 	db	101	;'e'
   479  001024  52                 	db	82	;'R'
   480  001025  69                 	db	105	;'i'
   481  001026  67                 	db	103	;'g'
   482  001027  74                 	db	116	;'t'
   483  001028  68                 	db	104	;'h'
   484  001029  0A                 	db	10
   485  00102A  00                 	db	0
   486  00102B                     STR_3:
   487                           
   488                           ; BSR set to: 0
   489  00102B  52                 	db	82	;'R'
   490  00102C  65                 	db	101	;'e'
   491  00102D  76                 	db	118	;'v'
   492  00102E  65                 	db	101	;'e'
   493  00102F  72                 	db	114	;'r'
   494  001030  73                 	db	115	;'s'
   495  001031  65                 	db	101	;'e'
   496  001032  4C                 	db	76	;'L'
   497  001033  65                 	db	101	;'e'
   498  001034  66                 	db	102	;'f'
   499  001035  74                 	db	116	;'t'
   500  001036  0A                 	db	10
   501  001037  00                 	db	0
   502  001038  00                 	db	0	; dummy byte at the end
   503  0000                     
   504                           ; #config settings
   505                           
   506                           	psect	cinit
   507  003FDC                     __pcinit:
   508                           	callstack 0
   509  003FDC                     start_initialization:
   510                           	callstack 0
   511  003FDC                     __initialization:
   512                           	callstack 0
   513                           
   514                           ; Clear objects allocated to BANK1 (32 bytes)
   515  003FDC  EE00  F100         	lfsr	0,__pbssBANK1
   516  003FE0  0E20               	movlw	32
   517  003FE2                     clear_0:
   518  003FE2  6AEE               	clrf	postinc0,c
   519  003FE4  06E8               	decf	wreg,f,c
   520  003FE6  E1FD               	bnz	clear_0
   521                           
   522                           ; Clear objects allocated to BANK0 (76 bytes)
   523  003FE8  EE00  F060         	lfsr	0,__pbssBANK0
   524  003FEC  0E4C               	movlw	76
   525  003FEE                     clear_1:
   526  003FEE  6AEE               	clrf	postinc0,c
   527  003FF0  06E8               	decf	wreg,f,c
   528  003FF2  E1FD               	bnz	clear_1
   529                           
   530                           ; Clear objects allocated to COMRAM (18 bytes)
   531  003FF4  EE00  F03A         	lfsr	0,__pbssCOMRAM
   532  003FF8  0E12               	movlw	18
   533  003FFA                     clear_2:
   534  003FFA  6AEE               	clrf	postinc0,c
   535  003FFC  06E8               	decf	wreg,f,c
   536  003FFE  E1FD               	bnz	clear_2
   537                           
   538                           ;
   539                           ; Setup IVTBASE
   540                           ;
   541  004000  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   542  004002  6ED5               	movwf	213,c
   543  004004  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   544  004006  6ED6               	movwf	214,c
   545  004008  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   546  00400A  6ED7               	movwf	215,c
   547  00400C                     end_of_initialization:
   548                           	callstack 0
   549  00400C                     __end_of__initialization:
   550                           	callstack 0
   551  00400C  0100               	movlb	0
   552  00400E  EF0A  F022         	goto	_main	;jump to C main() function
   553                           
   554                           	psect	bssCOMRAM
   555  00003A                     __pbssCOMRAM:
   556                           	callstack 0
   557  00003A                     _prec:
   558                           	callstack 0
   559  00003A                     	ds	2
   560  00003C                     _flags:
   561                           	callstack 0
   562  00003C                     	ds	2
   563  00003E                     _roundTimeCount:
   564                           	callstack 0
   565  00003E                     	ds	2
   566  000040                     TMR4_ISR@CountCallBack:
   567                           	callstack 0
   568  000040                     	ds	2
   569  000042                     _uart1RxLastError:
   570                           	callstack 0
   571  000042                     	ds	1
   572  000043                     _uart1RxCount:
   573                           	callstack 0
   574  000043                     	ds	1
   575  000044                     _uart1RxTail:
   576                           	callstack 0
   577  000044                     	ds	1
   578  000045                     _uart1RxHead:
   579                           	callstack 0
   580  000045                     	ds	1
   581  000046                     _uart1TxTail:
   582                           	callstack 0
   583  000046                     	ds	1
   584  000047                     _uart1TxHead:
   585                           	callstack 0
   586  000047                     	ds	1
   587  000048                     _smtPeriod:
   588                           	callstack 0
   589  000048                     	ds	4
   590                           
   591                           	psect	bssBANK0
   592  000060                     __pbssBANK0:
   593                           	callstack 0
   594  000060                     _uart1RxStatusBuffer:
   595                           	callstack 0
   596  000060                     	ds	8
   597  000068                     _uart1RxBuffer:
   598                           	callstack 0
   599  000068                     	ds	8
   600  000070                     _uart1TxBuffer:
   601                           	callstack 0
   602  000070                     	ds	8
   603  000078                     _smtWay:
   604                           	callstack 0
   605  000078                     	ds	4
   606  00007C                     _smtDuty:
   607                           	callstack 0
   608  00007C                     	ds	4
   609  000080                     _nout:
   610                           	callstack 0
   611  000080                     	ds	2
   612  000082                     _width:
   613                           	callstack 0
   614  000082                     	ds	2
   615  000084                     _BatteryVolt:
   616                           	callstack 0
   617  000084                     	ds	2
   618  000086                     _reverseTime:
   619                           	callstack 0
   620  000086                     	ds	2
   621  000088                     _actMotorPow:
   622                           	callstack 0
   623  000088                     	ds	2
   624  00008A                     _oldSpeed:
   625                           	callstack 0
   626  00008A                     	ds	2
   627  00008C                     _currentSpeed:
   628                           	callstack 0
   629  00008C                     	ds	2
   630  00008E                     _setSpeed:
   631                           	callstack 0
   632  00008E                     	ds	2
   633  000090                     _motPow:
   634                           	callstack 0
   635  000090                     	ds	2
   636  000092                     _followCount:
   637                           	callstack 0
   638  000092                     	ds	2
   639  000094                     _battCheckCount:
   640                           	callstack 0
   641  000094                     	ds	2
   642  000096                     _oldDistRight:
   643                           	callstack 0
   644  000096                     	ds	2
   645  000098                     _oldDistLeft:
   646                           	callstack 0
   647  000098                     	ds	2
   648  00009A                     _reverseCount:
   649                           	callstack 0
   650  00009A                     	ds	2
   651  00009C                     _distRightM:
   652                           	callstack 0
   653  00009C                     	ds	2
   654  00009E                     _distRight:
   655                           	callstack 0
   656  00009E                     	ds	2
   657  0000A0                     _distLeftM:
   658                           	callstack 0
   659  0000A0                     	ds	2
   660  0000A2                     _distLeft:
   661                           	callstack 0
   662  0000A2                     	ds	2
   663  0000A4                     _delay:
   664                           	callstack 0
   665  0000A4                     	ds	1
   666  0000A5                     _curveRightCount:
   667                           	callstack 0
   668  0000A5                     	ds	1
   669  0000A6                     _curveLeftCount:
   670                           	callstack 0
   671  0000A6                     	ds	1
   672  0000A7                     _cycle10ms:
   673                           	callstack 0
   674  0000A7                     	ds	1
   675  0000A8                     _curveMode:
   676                           	callstack 0
   677  0000A8                     	ds	1
   678  0000A9                     _driveMode:
   679                           	callstack 0
   680  0000A9                     	ds	1
   681  0000AA                     _distFront:
   682                           	callstack 0
   683  0000AA                     	ds	2
   684                           
   685                           	psect	bssBANK1
   686  000100                     __pbssBANK1:
   687                           	callstack 0
   688  000100                     _dbuf:
   689                           	callstack 0
   690  000100                     	ds	32
   691                           
   692                           	psect	cstackBANK1
   693  000120                     __pcstackBANK1:
   694                           	callstack 0
   695  000120                     getCurve@deltaRight:
   696                           	callstack 0
   697                           
   698                           ; 2 bytes @ 0x0
   699  000120                     	ds	2
   700  000122                     getCurve@deltaLeft:
   701                           	callstack 0
   702                           
   703                           ; 2 bytes @ 0x2
   704  000122                     	ds	2
   705                           
   706                           	psect	cstackBANK0
   707  0000AC                     __pcstackBANK0:
   708                           	callstack 0
   709  0000AC                     ?_dtoa:
   710                           	callstack 0
   711  0000AC                     ___flmul@sign:
   712                           	callstack 0
   713  0000AC                     dtoa@fp:
   714                           	callstack 0
   715  0000AC                     ___fldiv@rem:
   716                           	callstack 0
   717                           
   718                           ; 4 bytes @ 0x0
   719  0000AC                     	ds	1
   720  0000AD                     ___flmul@aexp:
   721                           	callstack 0
   722                           
   723                           ; 1 bytes @ 0x1
   724  0000AD                     	ds	1
   725  0000AE                     ___flmul@grs:
   726                           	callstack 0
   727  0000AE                     dtoa@d:
   728                           	callstack 0
   729                           
   730                           ; 8 bytes @ 0x2
   731  0000AE                     	ds	2
   732  0000B0                     ___fldiv@sign:
   733                           	callstack 0
   734                           
   735                           ; 1 bytes @ 0x4
   736  0000B0                     	ds	1
   737  0000B1                     ___fldiv@new_exp:
   738                           	callstack 0
   739                           
   740                           ; 2 bytes @ 0x5
   741  0000B1                     	ds	1
   742  0000B2                     ___flmul@bexp:
   743                           	callstack 0
   744                           
   745                           ; 1 bytes @ 0x6
   746  0000B2                     	ds	1
   747  0000B3                     ___fldiv@grs:
   748                           	callstack 0
   749  0000B3                     ___flmul@prod:
   750                           	callstack 0
   751                           
   752                           ; 4 bytes @ 0x7
   753  0000B3                     	ds	3
   754  0000B6                     _dtoa$3494:
   755                           	callstack 0
   756                           
   757                           ; 2 bytes @ 0xA
   758  0000B6                     	ds	1
   759  0000B7                     ___fldiv@bexp:
   760                           	callstack 0
   761  0000B7                     ___flmul@temp:
   762                           	callstack 0
   763                           
   764                           ; 2 bytes @ 0xB
   765  0000B7                     	ds	1
   766  0000B8                     ___fldiv@aexp:
   767                           	callstack 0
   768  0000B8                     dtoa@p:
   769                           	callstack 0
   770                           
   771                           ; 2 bytes @ 0xC
   772  0000B8                     	ds	1
   773  0000B9                     ?___fladd:
   774                           	callstack 0
   775  0000B9                     ___fladd@b:
   776                           	callstack 0
   777                           
   778                           ; 4 bytes @ 0xD
   779  0000B9                     	ds	1
   780  0000BA                     dtoa@w:
   781                           	callstack 0
   782                           
   783                           ; 2 bytes @ 0xE
   784  0000BA                     	ds	2
   785  0000BC                     dtoa@s:
   786                           	callstack 0
   787                           
   788                           ; 2 bytes @ 0x10
   789  0000BC                     	ds	1
   790  0000BD                     ___fladd@a:
   791                           	callstack 0
   792                           
   793                           ; 4 bytes @ 0x11
   794  0000BD                     	ds	1
   795  0000BE                     dtoa@n:
   796                           	callstack 0
   797                           
   798                           ; 8 bytes @ 0x12
   799  0000BE                     	ds	3
   800  0000C1                     ___fladd@signs:
   801                           	callstack 0
   802                           
   803                           ; 1 bytes @ 0x15
   804  0000C1                     	ds	1
   805  0000C2                     ___fladd@aexp:
   806                           	callstack 0
   807                           
   808                           ; 1 bytes @ 0x16
   809  0000C2                     	ds	1
   810  0000C3                     ___fladd@bexp:
   811                           	callstack 0
   812                           
   813                           ; 1 bytes @ 0x17
   814  0000C3                     	ds	1
   815  0000C4                     ___fladd@grs:
   816                           	callstack 0
   817                           
   818                           ; 1 bytes @ 0x18
   819  0000C4                     	ds	1
   820  0000C5                     ?___fltol:
   821                           	callstack 0
   822  0000C5                     ___fltol@f1:
   823                           	callstack 0
   824                           
   825                           ; 4 bytes @ 0x19
   826  0000C5                     	ds	1
   827  0000C6                     dtoa@i:
   828                           	callstack 0
   829                           
   830                           ; 2 bytes @ 0x1A
   831  0000C6                     	ds	2
   832  0000C8                     ?_vfpfcnvrt:
   833                           	callstack 0
   834  0000C8                     vfpfcnvrt@fp:
   835                           	callstack 0
   836                           
   837                           ; 2 bytes @ 0x1C
   838  0000C8                     	ds	1
   839  0000C9                     ??___fltol:
   840                           
   841                           ; 1 bytes @ 0x1D
   842  0000C9                     	ds	1
   843  0000CA                     vfpfcnvrt@fmt:
   844                           	callstack 0
   845                           
   846                           ; 2 bytes @ 0x1E
   847  0000CA                     	ds	2
   848  0000CC                     vfpfcnvrt@ap:
   849                           	callstack 0
   850                           
   851                           ; 2 bytes @ 0x20
   852  0000CC                     	ds	1
   853  0000CD                     ___fltol@sign1:
   854                           	callstack 0
   855                           
   856                           ; 1 bytes @ 0x21
   857  0000CD                     	ds	1
   858  0000CE                     ??_vfpfcnvrt:
   859  0000CE                     ___fltol@exp1:
   860                           	callstack 0
   861                           
   862                           ; 1 bytes @ 0x22
   863  0000CE                     	ds	1
   864  0000CF                     ??_calcSpeed:
   865  0000CF                     ??_calcMotorPow:
   866  0000CF                     setSteering@steering:
   867                           	callstack 0
   868                           
   869                           ; 2 bytes @ 0x23
   870  0000CF                     	ds	1
   871  0000D0                     vfpfcnvrt@ll:
   872                           	callstack 0
   873                           
   874                           ; 8 bytes @ 0x24
   875  0000D0                     	ds	1
   876  0000D1                     setSteering@steeringMode:
   877                           	callstack 0
   878  0000D1                     calcMotorPow@setSpeedDelta:
   879                           	callstack 0
   880                           
   881                           ; 2 bytes @ 0x25
   882  0000D1                     	ds	1
   883  0000D2                     ??_setSteering:
   884                           
   885                           ; 1 bytes @ 0x26
   886  0000D2                     	ds	1
   887  0000D3                     calcSpeed@speed:
   888                           	callstack 0
   889  0000D3                     calcMotorPow@oldSpeedDelta:
   890                           	callstack 0
   891                           
   892                           ; 2 bytes @ 0x27
   893  0000D3                     	ds	1
   894  0000D4                     setSteering@steeringF:
   895                           	callstack 0
   896                           
   897                           ; 2 bytes @ 0x28
   898  0000D4                     	ds	1
   899  0000D5                     calcMotorPow@addMPow:
   900                           	callstack 0
   901                           
   902                           ; 1 bytes @ 0x29
   903  0000D5                     	ds	1
   904  0000D6                     setSteering@steeringB:
   905                           	callstack 0
   906                           
   907                           ; 2 bytes @ 0x2A
   908  0000D6                     	ds	2
   909  0000D8                     ??_calcSteering:
   910  0000D8                     ?_vfprintf:
   911                           	callstack 0
   912  0000D8                     vfprintf@fp:
   913                           	callstack 0
   914                           
   915                           ; 2 bytes @ 0x2C
   916  0000D8                     	ds	2
   917  0000DA                     calcSteering@delta:
   918                           	callstack 0
   919  0000DA                     vfprintf@fmt:
   920                           	callstack 0
   921                           
   922                           ; 2 bytes @ 0x2E
   923  0000DA                     	ds	2
   924  0000DC                     vfprintf@ap:
   925                           	callstack 0
   926                           
   927                           ; 2 bytes @ 0x30
   928  0000DC                     	ds	2
   929  0000DE                     vfprintf@cfmt:
   930                           	callstack 0
   931                           
   932                           ; 2 bytes @ 0x32
   933  0000DE                     	ds	2
   934  0000E0                     ?_printf:
   935                           	callstack 0
   936  0000E0                     printf@fmt:
   937                           	callstack 0
   938                           
   939                           ; 2 bytes @ 0x34
   940  0000E0                     	ds	4
   941  0000E4                     printf@ap:
   942                           	callstack 0
   943                           
   944                           ; 2 bytes @ 0x38
   945  0000E4                     	ds	2
   946  0000E6                     ??_getCurve:
   947                           
   948                           ; 1 bytes @ 0x3A
   949  0000E6                     	ds	2
   950                           
   951                           	psect	cstackCOMRAM
   952  000001                     __pcstackCOMRAM:
   953                           	callstack 0
   954  000001                     CCP3_DefaultCallBack@capturedValue:
   955                           	callstack 0
   956                           
   957                           ; 2 bytes @ 0x0
   958  000001                     	ds	2
   959  000003                     CCP3_CaptureISR@module:
   960                           	callstack 0
   961                           
   962                           ; 2 bytes @ 0x2
   963  000003                     	ds	2
   964  000005                     CCP4_DefaultCallBack@capturedValue:
   965                           	callstack 0
   966                           
   967                           ; 2 bytes @ 0x4
   968  000005                     	ds	2
   969  000007                     CCP4_CaptureISR@module:
   970                           	callstack 0
   971                           
   972                           ; 2 bytes @ 0x6
   973  000007                     	ds	2
   974  000009                     ?_TMR5_ReadTimer:
   975                           	callstack 0
   976  000009                     TMR5_WriteTimer@timerVal:
   977                           	callstack 0
   978                           
   979                           ; 2 bytes @ 0x8
   980  000009                     	ds	2
   981  00000B                     ??_TMR5_ReadTimer:
   982  00000B                     
   983                           ; 1 bytes @ 0xA
   984  00000B                     	ds	2
   985  00000D                     TMR5_ReadTimer@readVal:
   986                           	callstack 0
   987                           
   988                           ; 2 bytes @ 0xC
   989  00000D                     	ds	2
   990  00000F                     TMR5_ReadTimer@readValHigh:
   991                           	callstack 0
   992                           
   993                           ; 1 bytes @ 0xE
   994  00000F                     	ds	1
   995  000010                     TMR5_ReadTimer@readValLow:
   996                           	callstack 0
   997                           
   998                           ; 1 bytes @ 0xF
   999  000010                     	ds	1
  1000  000011                     ??_UART1_tx_vect_isr:
  1001  000011                     
  1002                           ; 1 bytes @ 0x10
  1003  000011                     	ds	1
  1004  000012                     ??_UART1_rx_vect_isr:
  1005                           
  1006                           ; 1 bytes @ 0x11
  1007  000012                     	ds	1
  1008  000013                     ??_TMR4_ISR:
  1009                           
  1010                           ; 1 bytes @ 0x12
  1011  000013                     	ds	1
  1012  000014                     ??_TMR3_Initialize:
  1013  000014                     ?_strlen:
  1014                           	callstack 0
  1015  000014                     ?_ADCC_GetSingleConversion:
  1016                           	callstack 0
  1017  000014                     ?___awdiv:
  1018                           	callstack 0
  1019  000014                     ?___aldiv:
  1020                           	callstack 0
  1021  000014                     ?___aodiv:
  1022                           	callstack 0
  1023  000014                     ?___aomod:
  1024                           	callstack 0
  1025  000014                     UART1_Write@txData:
  1026                           	callstack 0
  1027  000014                     INTERRUPT_Initialize@state:
  1028                           	callstack 0
  1029  000014                     UART1_SetFramingErrorHandler@interruptHandler:
  1030                           	callstack 0
  1031  000014                     UART1_SetOverrunErrorHandler@interruptHandler:
  1032                           	callstack 0
  1033  000014                     UART1_SetErrorHandler@interruptHandler:
  1034                           	callstack 0
  1035  000014                     UART1_SetRxInterruptHandler@InterruptHandler:
  1036                           	callstack 0
  1037  000014                     UART1_SetTxInterruptHandler@InterruptHandler:
  1038                           	callstack 0
  1039  000014                     CCP3_SetCallBack@customCallBack:
  1040                           	callstack 0
  1041  000014                     CCP4_SetCallBack@customCallBack:
  1042                           	callstack 0
  1043  000014                     TMR5_SetGateInterruptHandler@InterruptHandler:
  1044                           	callstack 0
  1045  000014                     TMR4_SetInterruptHandler@InterruptHandler:
  1046                           	callstack 0
  1047  000014                     PWM7_LoadDutyValue@dutyValue:
  1048                           	callstack 0
  1049  000014                     PWM8_LoadDutyValue@dutyValue:
  1050                           	callstack 0
  1051  000014                     PWM5_LoadDutyValue@dutyValue:
  1052                           	callstack 0
  1053  000014                     PWM6_LoadDutyValue@dutyValue:
  1054                           	callstack 0
  1055  000014                     ___awdiv@dividend:
  1056                           	callstack 0
  1057  000014                     strlen@s:
  1058                           	callstack 0
  1059  000014                     ___aldiv@dividend:
  1060                           	callstack 0
  1061  000014                     ___aodiv@dividend:
  1062                           	callstack 0
  1063  000014                     ___aomod@dividend:
  1064                           	callstack 0
  1065                           
  1066                           ; 8 bytes @ 0x13
  1067  000014                     	ds	1
  1068  000015                     putch@txData:
  1069                           	callstack 0
  1070                           
  1071                           ; 1 bytes @ 0x14
  1072  000015                     	ds	1
  1073  000016                     ??_TMR5_Initialize:
  1074  000016                     ??_PWM7_LoadDutyValue:
  1075  000016                     ??_PWM8_LoadDutyValue:
  1076  000016                     ??_PWM5_LoadDutyValue:
  1077  000016                     ??_PWM6_LoadDutyValue:
  1078  000016                     ??_ADCC_GetSingleConversion:
  1079  000016                     ___awdiv@divisor:
  1080                           	callstack 0
  1081  000016                     fputc@c:
  1082                           	callstack 0
  1083  000016                     strlen@a:
  1084                           	callstack 0
  1085                           
  1086                           ; 2 bytes @ 0x15
  1087  000016                     	ds	2
  1088  000018                     ADCC_GetSingleConversion@channel:
  1089                           	callstack 0
  1090  000018                     ___awdiv@counter:
  1091                           	callstack 0
  1092  000018                     setMotor@motorPower:
  1093                           	callstack 0
  1094  000018                     fputc@fp:
  1095                           	callstack 0
  1096  000018                     ___aldiv@divisor:
  1097                           	callstack 0
  1098                           
  1099                           ; 4 bytes @ 0x17
  1100  000018                     	ds	1
  1101  000019                     ___awdiv@sign:
  1102                           	callstack 0
  1103                           
  1104                           ; 1 bytes @ 0x18
  1105  000019                     	ds	1
  1106  00001A                     ??_setMotor:
  1107  00001A                     ??_fputc:
  1108  00001A                     ___awdiv@quotient:
  1109                           	callstack 0
  1110                           
  1111                           ; 2 bytes @ 0x19
  1112  00001A                     	ds	2
  1113  00001C                     ?___xxtofl:
  1114                           	callstack 0
  1115  00001C                     ___aldiv@counter:
  1116                           	callstack 0
  1117  00001C                     ___xxtofl@val:
  1118                           	callstack 0
  1119  00001C                     ___aodiv@divisor:
  1120                           	callstack 0
  1121  00001C                     ___aomod@divisor:
  1122                           	callstack 0
  1123                           
  1124                           ; 8 bytes @ 0x1B
  1125  00001C                     	ds	1
  1126  00001D                     ___aldiv@sign:
  1127                           	callstack 0
  1128                           
  1129                           ; 1 bytes @ 0x1C
  1130  00001D                     	ds	1
  1131  00001E                     ___aldiv@quotient:
  1132                           	callstack 0
  1133                           
  1134                           ; 4 bytes @ 0x1D
  1135  00001E                     	ds	1
  1136  00001F                     fputs@s:
  1137                           	callstack 0
  1138                           
  1139                           ; 2 bytes @ 0x1E
  1140  00001F                     	ds	1
  1141  000020                     ??___xxtofl:
  1142                           
  1143                           ; 1 bytes @ 0x1F
  1144  000020                     	ds	1
  1145  000021                     fputs@fp:
  1146                           	callstack 0
  1147                           
  1148                           ; 2 bytes @ 0x20
  1149  000021                     	ds	1
  1150  000022                     ?_actSpeed:
  1151                           	callstack 0
  1152                           
  1153                           ; 2 bytes @ 0x21
  1154  000022                     	ds	1
  1155  000023                     fputs@c:
  1156                           	callstack 0
  1157                           
  1158                           ; 1 bytes @ 0x22
  1159  000023                     	ds	1
  1160  000024                     ___aodiv@counter:
  1161                           	callstack 0
  1162  000024                     ___aomod@counter:
  1163                           	callstack 0
  1164  000024                     ___xxtofl@sign:
  1165                           	callstack 0
  1166  000024                     actSpeed@speed:
  1167                           	callstack 0
  1168  000024                     fputs@i:
  1169                           	callstack 0
  1170                           
  1171                           ; 2 bytes @ 0x23
  1172  000024                     	ds	1
  1173  000025                     ___aodiv@sign:
  1174                           	callstack 0
  1175  000025                     ___aomod@sign:
  1176                           	callstack 0
  1177  000025                     ___xxtofl@exp:
  1178                           	callstack 0
  1179                           
  1180                           ; 1 bytes @ 0x24
  1181  000025                     	ds	1
  1182  000026                     ?_abs:
  1183                           	callstack 0
  1184  000026                     ?_pad:
  1185                           	callstack 0
  1186  000026                     pad@fp:
  1187                           	callstack 0
  1188  000026                     abs@a:
  1189                           	callstack 0
  1190  000026                     ___xxtofl@arg:
  1191                           	callstack 0
  1192  000026                     ___aodiv@quotient:
  1193                           	callstack 0
  1194                           
  1195                           ; 8 bytes @ 0x25
  1196  000026                     	ds	2
  1197  000028                     ??_abs:
  1198  000028                     pad@buf:
  1199                           	callstack 0
  1200                           
  1201                           ; 2 bytes @ 0x27
  1202  000028                     	ds	2
  1203  00002A                     ?___fldiv:
  1204                           	callstack 0
  1205  00002A                     ?___flmul:
  1206                           	callstack 0
  1207  00002A                     pad@p:
  1208                           	callstack 0
  1209  00002A                     ___flge@ff1:
  1210                           	callstack 0
  1211  00002A                     ___fldiv@b:
  1212                           	callstack 0
  1213  00002A                     ___flmul@b:
  1214                           	callstack 0
  1215                           
  1216                           ; 4 bytes @ 0x29
  1217  00002A                     	ds	2
  1218  00002C                     ??_pad:
  1219                           
  1220                           ; 1 bytes @ 0x2B
  1221  00002C                     	ds	1
  1222  00002D                     pad@i:
  1223                           	callstack 0
  1224                           
  1225                           ; 2 bytes @ 0x2C
  1226  00002D                     	ds	1
  1227  00002E                     ___flge@ff2:
  1228                           	callstack 0
  1229  00002E                     ___fldiv@a:
  1230                           	callstack 0
  1231  00002E                     ___flmul@a:
  1232                           	callstack 0
  1233                           
  1234                           ; 4 bytes @ 0x2D
  1235  00002E                     	ds	1
  1236  00002F                     pad@w:
  1237                           	callstack 0
  1238                           
  1239                           ; 2 bytes @ 0x2E
  1240  00002F                     	ds	2
  1241  000031                     ??_dtoa:
  1242                           
  1243                           ; 1 bytes @ 0x30
  1244  000031                     	ds	1
  1245  000032                     ??___fldiv:
  1246  000032                     ??___flmul:
  1247  000032                     ??___flge:
  1248                           
  1249                           ; 1 bytes @ 0x31
  1250  000032                     	ds	4
  1251  000036                     ??___fladd:
  1252                           
  1253                           ; 1 bytes @ 0x35
  1254  000036                     	ds	3
  1255  000039                     
  1256                           ; 1 bytes @ 0x38
  1257  000039                     	ds	1
  1258  00003A                     
  1259                           ; 1 bytes @ 0x39
  1260 ;;
  1261 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1262 ;;
  1263 ;; *************** function _main *****************
  1264 ;; Defined at:
  1265 ;;		line 8 in file "main.c"
  1266 ;; Parameters:    Size  Location     Type
  1267 ;;		None
  1268 ;; Auto vars:     Size  Location     Type
  1269 ;;		None
  1270 ;; Return value:  Size  Location     Type
  1271 ;;                  1    wreg      void 
  1272 ;; Registers used:
  1273 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1274 ;; Tracked objects:
  1275 ;;		On entry : 0/0
  1276 ;;		On exit  : 0/0
  1277 ;;		Unchanged: 0/0
  1278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1283 ;;Total ram usage:        0 bytes
  1284 ;; Hardware stack levels required when called: 19
  1285 ;; This function calls:
  1286 ;;		_SYSTEM_Initialize
  1287 ;;		_TMR4_SetInterruptHandler
  1288 ;;		_loop
  1289 ;; This function is called by:
  1290 ;;		Startup code after reset
  1291 ;; This function uses a non-reentrant model
  1292 ;;
  1293                           
  1294                           	psect	text0
  1295  004414                     __ptext0:
  1296                           	callstack 0
  1297  004414                     _main:
  1298                           	callstack 12
  1299  004414                     
  1300                           ;main.c: 9:     SYSTEM_Initialize();
  1301  004414  EC8A  F01E         	call	_SYSTEM_Initialize	;wreg free
  1302  004418                     
  1303                           ;main.c: 10:     (INTCON0bits.GIEH = 1);
  1304  004418  8ED2               	bsf	210,7,c	;volatile
  1305  00441A                     
  1306                           ;main.c: 11:     (INTCON0bits.GIEL = 1);
  1307  00441A  8CD2               	bsf	210,6,c	;volatile
  1308                           
  1309                           ;main.c: 12:     TMR4_SetInterruptHandler(TMR4_10msISR);
  1310  00441C  0E68               	movlw	low _TMR4_10msISR
  1311  00441E  6E14               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
  1312  004420  0E45               	movlw	high _TMR4_10msISR
  1313  004422  6E15               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
  1314  004424  ECA5  F022         	call	_TMR4_SetInterruptHandler	;wreg free
  1315  004428                     l7368:
  1316                           
  1317                           ;main.c: 15:         loop();
  1318  004428  EC69  F018         	call	_loop	;wreg free
  1319  00442C  EF14  F022         	goto	l7368
  1320  004430  EF57  F000         	goto	start
  1321  004434                     __end_of_main:
  1322                           	callstack 0
  1323                           
  1324 ;; *************** function _loop *****************
  1325 ;; Defined at:
  1326 ;;		line 19 in file "main.c"
  1327 ;; Parameters:    Size  Location     Type
  1328 ;;		None
  1329 ;; Auto vars:     Size  Location     Type
  1330 ;;		None
  1331 ;; Return value:  Size  Location     Type
  1332 ;;                  1    wreg      void 
  1333 ;; Registers used:
  1334 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1335 ;; Tracked objects:
  1336 ;;		On entry : 0/0
  1337 ;;		On exit  : 0/0
  1338 ;;		Unchanged: 0/0
  1339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1344 ;;Total ram usage:        0 bytes
  1345 ;; Hardware stack levels used: 1
  1346 ;; Hardware stack levels required when called: 18
  1347 ;; This function calls:
  1348 ;;		___flge
  1349 ;;		___xxtofl
  1350 ;;		_calcMotorPow
  1351 ;;		_calcSpeed
  1352 ;;		_calcSteering
  1353 ;;		_checkBatt
  1354 ;;		_getBatteryVoltage
  1355 ;;		_getCurve
  1356 ;;		_getReverse
  1357 ;;		_setMotor
  1358 ;;		_setSteering
  1359 ;; This function is called by:
  1360 ;;		_main
  1361 ;; This function uses a non-reentrant model
  1362 ;;
  1363                           
  1364                           	psect	text1
  1365  0030D2                     __ptext1:
  1366                           	callstack 0
  1367  0030D2                     _loop:
  1368                           	callstack 12
  1369  0030D2                     
  1370                           ;main.c: 20:     setMotor(0);
  1371  0030D2  0E00               	movlw	0
  1372  0030D4  6E19               	movwf	(setMotor@motorPower+1)^0,c
  1373  0030D6  0E00               	movlw	0
  1374  0030D8  6E18               	movwf	setMotor@motorPower^0,c
  1375  0030DA  EC82  F01A         	call	_setMotor	;wreg free
  1376                           
  1377                           ;main.c: 21:     setSteering(0, Front);
  1378  0030DE  0E00               	movlw	0
  1379  0030E0  0100               	movlb	0	; () banked
  1380  0030E2  6FD0               	movwf	(setSteering@steering+1)& (0+255),b
  1381  0030E4  0E00               	movlw	0
  1382  0030E6  6FCF               	movwf	setSteering@steering& (0+255),b
  1383  0030E8  0E03               	movlw	3
  1384  0030EA  6FD1               	movwf	setSteering@steeringMode& (0+255),b
  1385  0030EC  EC23  F013         	call	_setSteering	;wreg free
  1386  0030F0                     l1228:
  1387  0030F0  B8CB               	btfsc	203,4,c	;volatile
  1388  0030F2  EF7D  F018         	goto	u7041
  1389  0030F6  EF7F  F018         	goto	u7040
  1390  0030FA                     u7041:
  1391  0030FA  EF78  F018         	goto	l1228
  1392  0030FE                     u7040:
  1393  0030FE                     l7330:
  1394  0030FE  0100               	movlb	0	; () banked
  1395  003100  51A7               	movf	_cycle10ms& (0+255),w,b	;volatile
  1396  003102  B4D8               	btfsc	status,2,c
  1397  003104  EF86  F018         	goto	u7051
  1398  003108  EF88  F018         	goto	u7050
  1399  00310C                     u7051:
  1400  00310C  EF7F  F018         	goto	l7330
  1401  003110                     u7050:
  1402  003110                     
  1403                           ; BSR set to: 0
  1404                           ;main.c: 26:         cycle10ms = 0;
  1405  003110  0E00               	movlw	0
  1406  003112  6FA7               	movwf	_cycle10ms& (0+255),b	;volatile
  1407  003114                     
  1408                           ; BSR set to: 0
  1409                           ;main.c: 28:         getBatteryVoltage();
  1410  003114  EC73  F022         	call	_getBatteryVoltage	;wreg free
  1411  003118                     
  1412                           ;main.c: 29:     } while (BatteryVolt < ((6.8) * 409.6));
  1413  003118  C084  F01C         	movff	_BatteryVolt,___xxtofl@val
  1414  00311C  C085  F01D         	movff	_BatteryVolt+1,___xxtofl@val+1
  1415  003120  6A1E               	clrf	(___xxtofl@val+2)^0,c
  1416  003122  6A1F               	clrf	(___xxtofl@val+3)^0,c
  1417  003124  0E00               	movlw	0
  1418  003126  EC1E  F014         	call	___xxtofl
  1419  00312A  C01C  F02A         	movff	?___xxtofl,___flge@ff1
  1420  00312E  C01D  F02B         	movff	?___xxtofl+1,___flge@ff1+1
  1421  003132  C01E  F02C         	movff	?___xxtofl+2,___flge@ff1+2
  1422  003136  C01F  F02D         	movff	?___xxtofl+3,___flge@ff1+3
  1423  00313A  0E7B               	movlw	123
  1424  00313C  6E2E               	movwf	___flge@ff2^0,c
  1425  00313E  0E14               	movlw	20
  1426  003140  6E2F               	movwf	(___flge@ff2+1)^0,c
  1427  003142  0E2E               	movlw	46
  1428  003144  6E30               	movwf	(___flge@ff2+2)^0,c
  1429  003146  0E45               	movlw	69
  1430  003148  6E31               	movwf	(___flge@ff2+3)^0,c
  1431  00314A  EC00  F01A         	call	___flge	;wreg free
  1432  00314E  A0D8               	btfss	status,0,c
  1433  003150  EFAC  F018         	goto	u7061
  1434  003154  EFAE  F018         	goto	u7060
  1435  003158                     u7061:
  1436  003158  EF7F  F018         	goto	l7330
  1437  00315C                     u7060:
  1438  00315C                     
  1439                           ;main.c: 33:     oldDistLeft = distLeft;
  1440  00315C  C0A2  F098         	movff	_distLeft,_oldDistLeft	;volatile
  1441  003160  C0A3  F099         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  1442                           
  1443                           ;main.c: 34:     oldDistRight = distRight;
  1444  003164  C09E  F096         	movff	_distRight,_oldDistRight	;volatile
  1445  003168  C09F  F097         	movff	_distRight+1,_oldDistRight+1	;volatile
  1446  00316C                     
  1447                           ;main.c: 35:     cycle10ms = 0;
  1448  00316C  0E00               	movlw	0
  1449  00316E  0100               	movlb	0	; () banked
  1450  003170  6FA7               	movwf	_cycle10ms& (0+255),b	;volatile
  1451  003172                     l7340:
  1452  003172  0100               	movlb	0	; () banked
  1453  003174  51A7               	movf	_cycle10ms& (0+255),w,b	;volatile
  1454  003176  B4D8               	btfsc	status,2,c
  1455  003178  EFC0  F018         	goto	u7071
  1456  00317C  EFC2  F018         	goto	u7070
  1457  003180                     u7071:
  1458  003180  EFB9  F018         	goto	l7340
  1459  003184                     u7070:
  1460  003184                     
  1461                           ; BSR set to: 0
  1462                           ;main.c: 38:         cycle10ms = 0;
  1463  003184  0E00               	movlw	0
  1464  003186  6FA7               	movwf	_cycle10ms& (0+255),b	;volatile
  1465  003188                     
  1466                           ; BSR set to: 0
  1467                           ;main.c: 40:         if (!PORTBbits.RB5) {
  1468  003188  BACB               	btfsc	203,5,c	;volatile
  1469  00318A  EFC9  F018         	goto	u7081
  1470  00318E  EFCB  F018         	goto	u7080
  1471  003192                     u7081:
  1472  003192  EFDD  F018         	goto	l7350
  1473  003196                     u7080:
  1474  003196                     
  1475                           ; BSR set to: 0
  1476                           ;main.c: 41:             setSpeed = 0;
  1477  003196  0E00               	movlw	0
  1478  003198  6F8F               	movwf	(_setSpeed+1)& (0+255),b
  1479  00319A  0E00               	movlw	0
  1480  00319C  6F8E               	movwf	_setSpeed& (0+255),b
  1481                           
  1482                           ;main.c: 42:             actMotorPow = 0;
  1483  00319E  0E00               	movlw	0
  1484  0031A0  6F89               	movwf	(_actMotorPow+1)& (0+255),b
  1485  0031A2  0E00               	movlw	0
  1486  0031A4  6F88               	movwf	_actMotorPow& (0+255),b
  1487  0031A6                     
  1488                           ; BSR set to: 0
  1489                           ;main.c: 43:             setSteering(0, Front);
  1490  0031A6  0E00               	movlw	0
  1491  0031A8  6FD0               	movwf	(setSteering@steering+1)& (0+255),b
  1492  0031AA  0E00               	movlw	0
  1493  0031AC  6FCF               	movwf	setSteering@steering& (0+255),b
  1494  0031AE  0E03               	movlw	3
  1495  0031B0  6FD1               	movwf	setSteering@steeringMode& (0+255),b
  1496  0031B2  EC23  F013         	call	_setSteering	;wreg free
  1497                           
  1498                           ;main.c: 44:             break;
  1499  0031B6  EFF5  F018         	goto	l1244
  1500  0031BA                     l7350:
  1501                           
  1502                           ; BSR set to: 0
  1503                           ;main.c: 47:         if (checkBatt()) {
  1504  0031BA  EC62  F01D         	call	_checkBatt	;wreg free
  1505  0031BE  0900               	iorlw	0
  1506  0031C0  B4D8               	btfsc	status,2,c
  1507  0031C2  EFE5  F018         	goto	u7091
  1508  0031C6  EFE7  F018         	goto	u7090
  1509  0031CA                     u7091:
  1510  0031CA  EFE9  F018         	goto	l7354
  1511  0031CE                     u7090:
  1512  0031CE  EFF5  F018         	goto	l1244
  1513  0031D2                     l7354:
  1514                           
  1515                           ;main.c: 51:         getCurve();
  1516  0031D2  ECE7  F00F         	call	_getCurve	;wreg free
  1517                           
  1518                           ;main.c: 52:         getReverse();
  1519  0031D6  ECDA  F017         	call	_getReverse	;wreg free
  1520  0031DA                     
  1521                           ;main.c: 54:         calcSteering();
  1522  0031DA  ECF8  F014         	call	_calcSteering	;wreg free
  1523  0031DE                     
  1524                           ;main.c: 55:         calcSpeed();
  1525  0031DE  EC1E  F012         	call	_calcSpeed	;wreg free
  1526  0031E2                     
  1527                           ;main.c: 56:         calcMotorPow();
  1528  0031E2  EC38  F017         	call	_calcMotorPow	;wreg free
  1529  0031E6  EFB9  F018         	goto	l7340
  1530  0031EA                     l1244:
  1531  0031EA  0012               	return		;funcret
  1532  0031EC                     __end_of_loop:
  1533                           	callstack 0
  1534                           
  1535 ;; *************** function _getReverse *****************
  1536 ;; Defined at:
  1537 ;;		line 193 in file "main.c"
  1538 ;; Parameters:    Size  Location     Type
  1539 ;;		None
  1540 ;; Auto vars:     Size  Location     Type
  1541 ;;		None
  1542 ;; Return value:  Size  Location     Type
  1543 ;;                  1    wreg      void 
  1544 ;; Registers used:
  1545 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1546 ;; Tracked objects:
  1547 ;;		On entry : 0/0
  1548 ;;		On exit  : 0/0
  1549 ;;		Unchanged: 0/0
  1550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1555 ;;Total ram usage:        0 bytes
  1556 ;; Hardware stack levels used: 1
  1557 ;; Hardware stack levels required when called: 17
  1558 ;; This function calls:
  1559 ;;		_printf
  1560 ;; This function is called by:
  1561 ;;		_loop
  1562 ;; This function uses a non-reentrant model
  1563 ;;
  1564                           
  1565                           	psect	text2
  1566  002FB4                     __ptext2:
  1567                           	callstack 0
  1568  002FB4                     _getReverse:
  1569                           	callstack 12
  1570  002FB4                     
  1571                           ;main.c: 194:     if (distFront < (15)) {
  1572  002FB4  0100               	movlb	0	; () banked
  1573  002FB6  51AB               	movf	(_distFront+1)& (0+255),w,b	;volatile
  1574  002FB8  E107               	bnz	u6801
  1575  002FBA  0E0F               	movlw	15
  1576  002FBC  5DAA               	subwf	_distFront& (0+255),w,b	;volatile
  1577  002FBE  B0D8               	btfsc	status,0,c
  1578  002FC0  EFE4  F017         	goto	u6801
  1579  002FC4  EFE6  F017         	goto	u6800
  1580  002FC8                     u6801:
  1581  002FC8  EFEA  F017         	goto	l7156
  1582  002FCC                     u6800:
  1583  002FCC                     
  1584                           ; BSR set to: 0
  1585                           ;main.c: 195:         ++reverseCount;
  1586  002FCC  4B9A               	infsnz	_reverseCount& (0+255),f,b
  1587  002FCE  2B9B               	incf	(_reverseCount+1)& (0+255),f,b
  1588                           
  1589                           ;main.c: 196:     } else if(driveMode != ReverseRight && driveMode != ReverseLeft) {
  1590  002FD0  EF00  F018         	goto	l7162
  1591  002FD4                     l7156:
  1592                           
  1593                           ; BSR set to: 0
  1594  002FD4  0E02               	movlw	2
  1595  002FD6  19A9               	xorwf	_driveMode& (0+255),w,b
  1596  002FD8  B4D8               	btfsc	status,2,c
  1597  002FDA  EFF1  F017         	goto	u6811
  1598  002FDE  EFF3  F017         	goto	u6810
  1599  002FE2                     u6811:
  1600  002FE2  EF00  F018         	goto	l7162
  1601  002FE6                     u6810:
  1602  002FE6                     
  1603                           ; BSR set to: 0
  1604  002FE6  0E03               	movlw	3
  1605  002FE8  19A9               	xorwf	_driveMode& (0+255),w,b
  1606  002FEA  B4D8               	btfsc	status,2,c
  1607  002FEC  EFFA  F017         	goto	u6821
  1608  002FF0  EFFC  F017         	goto	u6820
  1609  002FF4                     u6821:
  1610  002FF4  EF00  F018         	goto	l7162
  1611  002FF8                     u6820:
  1612  002FF8                     
  1613                           ; BSR set to: 0
  1614                           ;main.c: 197:         reverseCount = 0;
  1615  002FF8  0E00               	movlw	0
  1616  002FFA  6F9B               	movwf	(_reverseCount+1)& (0+255),b
  1617  002FFC  0E00               	movlw	0
  1618  002FFE  6F9A               	movwf	_reverseCount& (0+255),b
  1619  003000                     l7162:
  1620                           
  1621                           ; BSR set to: 0
  1622                           ;main.c: 200:     if (reverseCount > (50)) {
  1623  003000  519B               	movf	(_reverseCount+1)& (0+255),w,b
  1624  003002  E109               	bnz	u6830
  1625  003004  0E33               	movlw	51
  1626  003006  5D9A               	subwf	_reverseCount& (0+255),w,b
  1627  003008  A0D8               	btfss	status,0,c
  1628  00300A  EF09  F018         	goto	u6831
  1629  00300E  EF0B  F018         	goto	u6830
  1630  003012                     u6831:
  1631  003012  EF68  F018         	goto	l1317
  1632  003016                     u6830:
  1633  003016                     
  1634                           ; BSR set to: 0
  1635                           ;main.c: 201:         ++reverseTime;
  1636  003016  4B86               	infsnz	_reverseTime& (0+255),f,b
  1637  003018  2B87               	incf	(_reverseTime+1)& (0+255),f,b
  1638  00301A                     
  1639                           ; BSR set to: 0
  1640                           ;main.c: 203:         if (driveMode != ReverseRight && driveMode != ReverseLeft) {
  1641  00301A  0E02               	movlw	2
  1642  00301C  19A9               	xorwf	_driveMode& (0+255),w,b
  1643  00301E  B4D8               	btfsc	status,2,c
  1644  003020  EF14  F018         	goto	u6841
  1645  003024  EF16  F018         	goto	u6840
  1646  003028                     u6841:
  1647  003028  EF3E  F018         	goto	l7180
  1648  00302C                     u6840:
  1649  00302C                     
  1650                           ; BSR set to: 0
  1651  00302C  0E03               	movlw	3
  1652  00302E  19A9               	xorwf	_driveMode& (0+255),w,b
  1653  003030  B4D8               	btfsc	status,2,c
  1654  003032  EF1D  F018         	goto	u6851
  1655  003036  EF1F  F018         	goto	u6850
  1656  00303A                     u6851:
  1657  00303A  EF3E  F018         	goto	l7180
  1658  00303E                     u6850:
  1659  00303E                     
  1660                           ; BSR set to: 0
  1661                           ;main.c: 204:             if (distLeft > distRight) {
  1662  00303E  51A2               	movf	_distLeft& (0+255),w,b	;volatile
  1663  003040  5D9E               	subwf	_distRight& (0+255),w,b	;volatile
  1664  003042  51A3               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  1665  003044  599F               	subwfb	(_distRight+1)& (0+255),w,b	;volatile
  1666  003046  B0D8               	btfsc	status,0,c
  1667  003048  EF28  F018         	goto	u6861
  1668  00304C  EF2A  F018         	goto	u6860
  1669  003050                     u6861:
  1670  003050  EF35  F018         	goto	l7176
  1671  003054                     u6860:
  1672  003054                     
  1673                           ; BSR set to: 0
  1674                           ;main.c: 205:                 printf("ReverseRigth\n");
  1675  003054  0E1D               	movlw	low STR_2
  1676  003056  6FE0               	movwf	printf@fmt& (0+255),b
  1677  003058  0E10               	movlw	high STR_2
  1678  00305A  6FE1               	movwf	(printf@fmt+1)& (0+255),b
  1679  00305C  ECBE  F021         	call	_printf	;wreg free
  1680  003060                     
  1681                           ;main.c: 206:                 driveMode = ReverseRight;
  1682  003060  0E02               	movlw	2
  1683  003062  0100               	movlb	0	; () banked
  1684  003064  6FA9               	movwf	_driveMode& (0+255),b
  1685                           
  1686                           ;main.c: 207:             } else {
  1687  003066  EF3E  F018         	goto	l7180
  1688  00306A                     l7176:
  1689                           
  1690                           ; BSR set to: 0
  1691                           ;main.c: 208:                 printf("ReverseLeft\n");
  1692  00306A  0E2B               	movlw	low STR_3
  1693  00306C  6FE0               	movwf	printf@fmt& (0+255),b
  1694  00306E  0E10               	movlw	high STR_3
  1695  003070  6FE1               	movwf	(printf@fmt+1)& (0+255),b
  1696  003072  ECBE  F021         	call	_printf	;wreg free
  1697  003076                     
  1698                           ;main.c: 209:                 driveMode = ReverseLeft;
  1699  003076  0E03               	movlw	3
  1700  003078  0100               	movlb	0	; () banked
  1701  00307A  6FA9               	movwf	_driveMode& (0+255),b
  1702  00307C                     l7180:
  1703                           
  1704                           ; BSR set to: 0
  1705                           ;main.c: 213:         if (distFront > (35) || reverseTime > (300)) {
  1706  00307C  51AB               	movf	(_distFront+1)& (0+255),w,b	;volatile
  1707  00307E  E107               	bnz	u6871
  1708  003080  0E24               	movlw	36
  1709  003082  5DAA               	subwf	_distFront& (0+255),w,b	;volatile
  1710  003084  B0D8               	btfsc	status,0,c
  1711  003086  EF47  F018         	goto	u6871
  1712  00308A  EF49  F018         	goto	u6870
  1713  00308E                     u6871:
  1714  00308E  EF57  F018         	goto	l7184
  1715  003092                     u6870:
  1716  003092                     
  1717                           ; BSR set to: 0
  1718  003092  BF87               	btfsc	(_reverseTime+1)& (0+255),7,b
  1719  003094  EF55  F018         	goto	u6881
  1720  003098  0E2D               	movlw	45
  1721  00309A  5D86               	subwf	_reverseTime& (0+255),w,b
  1722  00309C  0E01               	movlw	1
  1723  00309E  5987               	subwfb	(_reverseTime+1)& (0+255),w,b
  1724  0030A0  A0D8               	btfss	status,0,c
  1725  0030A2  EF55  F018         	goto	u6881
  1726  0030A6  EF57  F018         	goto	u6880
  1727  0030AA                     u6881:
  1728  0030AA  EF68  F018         	goto	l1317
  1729  0030AE                     u6880:
  1730  0030AE                     l7184:
  1731                           
  1732                           ; BSR set to: 0
  1733                           ;main.c: 214:             printf("Stop Reverse\n");
  1734  0030AE  0E0F               	movlw	low STR_4
  1735  0030B0  6FE0               	movwf	printf@fmt& (0+255),b
  1736  0030B2  0E10               	movlw	high STR_4
  1737  0030B4  6FE1               	movwf	(printf@fmt+1)& (0+255),b
  1738  0030B6  ECBE  F021         	call	_printf	;wreg free
  1739  0030BA                     
  1740                           ;main.c: 216:                 driveMode = Straight;
  1741  0030BA  0E00               	movlw	0
  1742  0030BC  0100               	movlb	0	; () banked
  1743  0030BE  6FA9               	movwf	_driveMode& (0+255),b
  1744  0030C0                     
  1745                           ; BSR set to: 0
  1746                           ;main.c: 221:             reverseCount = 0;
  1747  0030C0  0E00               	movlw	0
  1748  0030C2  6F9B               	movwf	(_reverseCount+1)& (0+255),b
  1749  0030C4  0E00               	movlw	0
  1750  0030C6  6F9A               	movwf	_reverseCount& (0+255),b
  1751                           
  1752                           ;main.c: 222:             reverseTime = 0;
  1753  0030C8  0E00               	movlw	0
  1754  0030CA  6F87               	movwf	(_reverseTime+1)& (0+255),b
  1755  0030CC  0E00               	movlw	0
  1756  0030CE  6F86               	movwf	_reverseTime& (0+255),b
  1757  0030D0                     l1317:
  1758                           
  1759                           ; BSR set to: 0
  1760  0030D0  0012               	return		;funcret
  1761  0030D2                     __end_of_getReverse:
  1762                           	callstack 0
  1763                           
  1764 ;; *************** function _getCurve *****************
  1765 ;; Defined at:
  1766 ;;		line 128 in file "main.c"
  1767 ;; Parameters:    Size  Location     Type
  1768 ;;		None
  1769 ;; Auto vars:     Size  Location     Type
  1770 ;;  deltaLeft       2    2[BANK1 ] short 
  1771 ;;  deltaRight      2    0[BANK1 ] short 
  1772 ;; Return value:  Size  Location     Type
  1773 ;;                  1    wreg      void 
  1774 ;; Registers used:
  1775 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1776 ;; Tracked objects:
  1777 ;;		On entry : 0/0
  1778 ;;		On exit  : 0/0
  1779 ;;		Unchanged: 0/0
  1780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1782 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1783 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1784 ;;      Totals:         0       2       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1785 ;;Total ram usage:        6 bytes
  1786 ;; Hardware stack levels used: 1
  1787 ;; Hardware stack levels required when called: 17
  1788 ;; This function calls:
  1789 ;;		_printf
  1790 ;; This function is called by:
  1791 ;;		_loop
  1792 ;; This function uses a non-reentrant model
  1793 ;;
  1794                           
  1795                           	psect	text3
  1796  001FCE                     __ptext3:
  1797                           	callstack 0
  1798  001FCE                     _getCurve:
  1799                           	callstack 12
  1800  001FCE                     
  1801                           ;main.c: 129:     int16_t deltaLeft = (int16_t) (distLeft - oldDistLeft);
  1802  001FCE  0100               	movlb	0	; () banked
  1803  001FD0  5198               	movf	_oldDistLeft& (0+255),w,b
  1804  001FD2  5DA2               	subwf	_distLeft& (0+255),w,b	;volatile
  1805  001FD4  0101               	movlb	1	; () banked
  1806  001FD6  6F22               	movwf	getCurve@deltaLeft& (0+255),b
  1807  001FD8  0100               	movlb	0	; () banked
  1808  001FDA  5199               	movf	(_oldDistLeft+1)& (0+255),w,b
  1809  001FDC  59A3               	subwfb	(_distLeft+1)& (0+255),w,b	;volatile
  1810  001FDE  0101               	movlb	1	; () banked
  1811  001FE0  6F23               	movwf	(getCurve@deltaLeft+1)& (0+255),b
  1812                           
  1813                           ;main.c: 130:     int16_t deltaRight = (int16_t) (distRight - oldDistRight);
  1814  001FE2  0100               	movlb	0	; () banked
  1815  001FE4  5196               	movf	_oldDistRight& (0+255),w,b
  1816  001FE6  5D9E               	subwf	_distRight& (0+255),w,b	;volatile
  1817  001FE8  0101               	movlb	1	; () banked
  1818  001FEA  6F20               	movwf	getCurve@deltaRight& (0+255),b
  1819  001FEC  0100               	movlb	0	; () banked
  1820  001FEE  5197               	movf	(_oldDistRight+1)& (0+255),w,b
  1821  001FF0  599F               	subwfb	(_distRight+1)& (0+255),w,b	;volatile
  1822  001FF2  0101               	movlb	1	; () banked
  1823  001FF4  6F21               	movwf	(getCurve@deltaRight+1)& (0+255),b
  1824                           
  1825                           ;main.c: 132:     switch (curveMode) {
  1826  001FF6  EFF1  F010         	goto	l7146
  1827  001FFA                     l7082:
  1828                           
  1829                           ; BSR set to: 0
  1830                           ;main.c: 134:             if (deltaLeft > (30) && deltaLeft < (300) && oldDistLeft < (12
      +                          5)) {
  1831  001FFA  0101               	movlb	1	; () banked
  1832  001FFC  BF23               	btfsc	(getCurve@deltaLeft+1)& (0+255),7,b
  1833  001FFE  EF0A  F010         	goto	u6641
  1834  002002  5123               	movf	(getCurve@deltaLeft+1)& (0+255),w,b
  1835  002004  E109               	bnz	u6640
  1836  002006  0E1F               	movlw	31
  1837  002008  5D22               	subwf	getCurve@deltaLeft& (0+255),w,b
  1838  00200A  A0D8               	btfss	status,0,c
  1839  00200C  EF0A  F010         	goto	u6641
  1840  002010  EF0C  F010         	goto	u6640
  1841  002014                     u6641:
  1842  002014  EF2F  F010         	goto	l7092
  1843  002018                     u6640:
  1844  002018                     
  1845                           ; BSR set to: 1
  1846  002018  BF23               	btfsc	(getCurve@deltaLeft+1)& (0+255),7,b
  1847  00201A  EF1A  F010         	goto	u6650
  1848  00201E  0E2C               	movlw	44
  1849  002020  5D22               	subwf	getCurve@deltaLeft& (0+255),w,b
  1850  002022  0E01               	movlw	1
  1851  002024  5923               	subwfb	(getCurve@deltaLeft+1)& (0+255),w,b
  1852  002026  B0D8               	btfsc	status,0,c
  1853  002028  EF18  F010         	goto	u6651
  1854  00202C  EF1A  F010         	goto	u6650
  1855  002030                     u6651:
  1856  002030  EF2F  F010         	goto	l7092
  1857  002034                     u6650:
  1858  002034                     
  1859                           ; BSR set to: 1
  1860  002034  0100               	movlb	0	; () banked
  1861  002036  5199               	movf	(_oldDistLeft+1)& (0+255),w,b
  1862  002038  E107               	bnz	u6661
  1863  00203A  0E7D               	movlw	125
  1864  00203C  5D98               	subwf	_oldDistLeft& (0+255),w,b
  1865  00203E  B0D8               	btfsc	status,0,c
  1866  002040  EF24  F010         	goto	u6661
  1867  002044  EF26  F010         	goto	u6660
  1868  002048                     u6661:
  1869  002048  EF2F  F010         	goto	l7092
  1870  00204C                     u6660:
  1871  00204C                     
  1872                           ; BSR set to: 0
  1873                           ;main.c: 135:                 delay = 0;
  1874  00204C  0E00               	movlw	0
  1875  00204E  6FA4               	movwf	_delay& (0+255),b
  1876                           
  1877                           ;main.c: 136:                 curveMode = BeforeCurve;
  1878  002050  0E01               	movlw	1
  1879  002052  6FA8               	movwf	_curveMode& (0+255),b
  1880                           
  1881                           ;main.c: 137:                 driveMode = CurveLeft;
  1882  002054  0E04               	movlw	4
  1883  002056  6FA9               	movwf	_driveMode& (0+255),b
  1884  002058                     
  1885                           ; BSR set to: 0
  1886                           ;main.c: 138:                 ++curveLeftCount;
  1887  002058  2BA6               	incf	_curveLeftCount& (0+255),f,b
  1888                           
  1889                           ;main.c: 141:             } else if (deltaRight > (30) && deltaRight < (300) && oldDistR
      +                          ight < (125)) {
  1890  00205A  EF0F  F011         	goto	l1284
  1891  00205E                     l7092:
  1892  00205E  0101               	movlb	1	; () banked
  1893  002060  BF21               	btfsc	(getCurve@deltaRight+1)& (0+255),7,b
  1894  002062  EF3C  F010         	goto	u6671
  1895  002066  5121               	movf	(getCurve@deltaRight+1)& (0+255),w,b
  1896  002068  E109               	bnz	u6670
  1897  00206A  0E1F               	movlw	31
  1898  00206C  5D20               	subwf	getCurve@deltaRight& (0+255),w,b
  1899  00206E  A0D8               	btfss	status,0,c
  1900  002070  EF3C  F010         	goto	u6671
  1901  002074  EF3E  F010         	goto	u6670
  1902  002078                     u6671:
  1903  002078  EF0F  F011         	goto	l1284
  1904  00207C                     u6670:
  1905  00207C                     
  1906                           ; BSR set to: 1
  1907  00207C  BF21               	btfsc	(getCurve@deltaRight+1)& (0+255),7,b
  1908  00207E  EF4C  F010         	goto	u6680
  1909  002082  0E2C               	movlw	44
  1910  002084  5D20               	subwf	getCurve@deltaRight& (0+255),w,b
  1911  002086  0E01               	movlw	1
  1912  002088  5921               	subwfb	(getCurve@deltaRight+1)& (0+255),w,b
  1913  00208A  B0D8               	btfsc	status,0,c
  1914  00208C  EF4A  F010         	goto	u6681
  1915  002090  EF4C  F010         	goto	u6680
  1916  002094                     u6681:
  1917  002094  EF0F  F011         	goto	l1284
  1918  002098                     u6680:
  1919  002098                     
  1920                           ; BSR set to: 1
  1921  002098  0100               	movlb	0	; () banked
  1922  00209A  5197               	movf	(_oldDistRight+1)& (0+255),w,b
  1923  00209C  E107               	bnz	u6691
  1924  00209E  0E7D               	movlw	125
  1925  0020A0  5D96               	subwf	_oldDistRight& (0+255),w,b
  1926  0020A2  B0D8               	btfsc	status,0,c
  1927  0020A4  EF56  F010         	goto	u6691
  1928  0020A8  EF58  F010         	goto	u6690
  1929  0020AC                     u6691:
  1930  0020AC  EF0F  F011         	goto	l1284
  1931  0020B0                     u6690:
  1932  0020B0                     
  1933                           ; BSR set to: 0
  1934                           ;main.c: 142:                 delay = 0;
  1935  0020B0  0E00               	movlw	0
  1936  0020B2  6FA4               	movwf	_delay& (0+255),b
  1937                           
  1938                           ;main.c: 143:                 curveMode = BeforeCurve;
  1939  0020B4  0E01               	movlw	1
  1940  0020B6  6FA8               	movwf	_curveMode& (0+255),b
  1941                           
  1942                           ;main.c: 144:                 driveMode = CurveRight;
  1943  0020B8  0E05               	movlw	5
  1944  0020BA  6FA9               	movwf	_driveMode& (0+255),b
  1945  0020BC                     
  1946                           ; BSR set to: 0
  1947                           ;main.c: 145:                 ++curveRightCount;
  1948  0020BC  2BA5               	incf	_curveRightCount& (0+255),f,b
  1949  0020BE  EF0F  F011         	goto	l1284
  1950  0020C2                     l7102:
  1951                           
  1952                           ; BSR set to: 0
  1953                           ;main.c: 152:             if (delay >= (10)) {
  1954  0020C2  0E09               	movlw	9
  1955  0020C4  65A4               	cpfsgt	_delay& (0+255),b
  1956  0020C6  EF67  F010         	goto	u6701
  1957  0020CA  EF69  F010         	goto	u6700
  1958  0020CE                     u6701:
  1959  0020CE  EF6F  F010         	goto	l7106
  1960  0020D2                     u6700:
  1961  0020D2                     
  1962                           ; BSR set to: 0
  1963                           ;main.c: 153:                 delay = 0;
  1964  0020D2  0E00               	movlw	0
  1965  0020D4  6FA4               	movwf	_delay& (0+255),b
  1966                           
  1967                           ;main.c: 154:                 curveMode = InCurve;
  1968  0020D6  0E02               	movlw	2
  1969  0020D8  6FA8               	movwf	_curveMode& (0+255),b
  1970                           
  1971                           ;main.c: 156:             } else {
  1972  0020DA  EF0F  F011         	goto	l1284
  1973  0020DE                     l7106:
  1974                           
  1975                           ;main.c: 157:                 ++delay;
  1976  0020DE  0100               	movlb	0	; () banked
  1977  0020E0  2BA4               	incf	_delay& (0+255),f,b
  1978  0020E2  EF0F  F011         	goto	l1284
  1979  0020E6                     l7108:
  1980                           
  1981                           ; BSR set to: 0
  1982                           ;main.c: 161:             if (delay >= (20)) {
  1983  0020E6  0E13               	movlw	19
  1984  0020E8  65A4               	cpfsgt	_delay& (0+255),b
  1985  0020EA  EF79  F010         	goto	u6711
  1986  0020EE  EF7B  F010         	goto	u6710
  1987  0020F2                     u6711:
  1988  0020F2  EF6F  F010         	goto	l7106
  1989  0020F6                     u6710:
  1990  0020F6                     
  1991                           ; BSR set to: 0
  1992                           ;main.c: 162:                 if ((driveMode == CurveLeft && distLeft < (45)) || (driveM
      +                          ode == CurveRight && distRight < (45)) || distFront > (300)) {
  1993  0020F6  0E04               	movlw	4
  1994  0020F8  19A9               	xorwf	_driveMode& (0+255),w,b
  1995  0020FA  A4D8               	btfss	status,2,c
  1996  0020FC  EF82  F010         	goto	u6721
  1997  002100  EF84  F010         	goto	u6720
  1998  002104                     u6721:
  1999  002104  EF8F  F010         	goto	l7114
  2000  002108                     u6720:
  2001  002108                     
  2002                           ; BSR set to: 0
  2003  002108  51A3               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  2004  00210A  E109               	bnz	u6730
  2005  00210C  0E2D               	movlw	45
  2006  00210E  5DA2               	subwf	_distLeft& (0+255),w,b	;volatile
  2007  002110  A0D8               	btfss	status,0,c
  2008  002112  EF8D  F010         	goto	u6731
  2009  002116  EF8F  F010         	goto	u6730
  2010  00211A                     u6731:
  2011  00211A  EFAE  F010         	goto	l7120
  2012  00211E                     u6730:
  2013  00211E                     l7114:
  2014                           
  2015                           ; BSR set to: 0
  2016  00211E  0E05               	movlw	5
  2017  002120  19A9               	xorwf	_driveMode& (0+255),w,b
  2018  002122  A4D8               	btfss	status,2,c
  2019  002124  EF96  F010         	goto	u6741
  2020  002128  EF98  F010         	goto	u6740
  2021  00212C                     u6741:
  2022  00212C  EFA3  F010         	goto	l7118
  2023  002130                     u6740:
  2024  002130                     
  2025                           ; BSR set to: 0
  2026  002130  519F               	movf	(_distRight+1)& (0+255),w,b	;volatile
  2027  002132  E109               	bnz	u6750
  2028  002134  0E2D               	movlw	45
  2029  002136  5D9E               	subwf	_distRight& (0+255),w,b	;volatile
  2030  002138  A0D8               	btfss	status,0,c
  2031  00213A  EFA1  F010         	goto	u6751
  2032  00213E  EFA3  F010         	goto	u6750
  2033  002142                     u6751:
  2034  002142  EFAE  F010         	goto	l7120
  2035  002146                     u6750:
  2036  002146                     l7118:
  2037                           
  2038                           ; BSR set to: 0
  2039  002146  0E2D               	movlw	45
  2040  002148  5DAA               	subwf	_distFront& (0+255),w,b	;volatile
  2041  00214A  0E01               	movlw	1
  2042  00214C  59AB               	subwfb	(_distFront+1)& (0+255),w,b	;volatile
  2043  00214E  A0D8               	btfss	status,0,c
  2044  002150  EFAC  F010         	goto	u6761
  2045  002154  EFAE  F010         	goto	u6760
  2046  002158                     u6761:
  2047  002158  EFB6  F010         	goto	l7122
  2048  00215C                     u6760:
  2049  00215C                     l7120:
  2050                           
  2051                           ; BSR set to: 0
  2052                           ;main.c: 164:                     delay = 0;
  2053  00215C  0E00               	movlw	0
  2054  00215E  6FA4               	movwf	_delay& (0+255),b
  2055                           
  2056                           ;main.c: 165:                     curveMode = AfterCurve;
  2057  002160  0E03               	movlw	3
  2058  002162  6FA8               	movwf	_curveMode& (0+255),b
  2059                           
  2060                           ;main.c: 166:                     driveMode = Straight;
  2061  002164  0E00               	movlw	0
  2062  002166  6FA9               	movwf	_driveMode& (0+255),b
  2063                           
  2064                           ;main.c: 169:                 } else if(driveMode == CurveRight && deltaLeft > (30)){
  2065  002168  EF6F  F010         	goto	l7106
  2066  00216C                     l7122:
  2067                           
  2068                           ; BSR set to: 0
  2069  00216C  0E05               	movlw	5
  2070  00216E  19A9               	xorwf	_driveMode& (0+255),w,b
  2071  002170  A4D8               	btfss	status,2,c
  2072  002172  EFBD  F010         	goto	u6771
  2073  002176  EFBF  F010         	goto	u6770
  2074  00217A                     u6771:
  2075  00217A  EF6F  F010         	goto	l7106
  2076  00217E                     u6770:
  2077  00217E                     
  2078                           ; BSR set to: 0
  2079  00217E  0101               	movlb	1	; () banked
  2080  002180  BF23               	btfsc	(getCurve@deltaLeft+1)& (0+255),7,b
  2081  002182  EFCC  F010         	goto	u6781
  2082  002186  5123               	movf	(getCurve@deltaLeft+1)& (0+255),w,b
  2083  002188  E109               	bnz	u6780
  2084  00218A  0E1F               	movlw	31
  2085  00218C  5D22               	subwf	getCurve@deltaLeft& (0+255),w,b
  2086  00218E  A0D8               	btfss	status,0,c
  2087  002190  EFCC  F010         	goto	u6781
  2088  002194  EFCE  F010         	goto	u6780
  2089  002198                     u6781:
  2090  002198  EF6F  F010         	goto	l7106
  2091  00219C                     u6780:
  2092  00219C                     
  2093                           ; BSR set to: 1
  2094                           ;main.c: 170:                     printf("DeltLeft: %d\n", deltaLeft);
  2095  00219C  0E01               	movlw	low STR_1
  2096  00219E  0100               	movlb	0	; () banked
  2097  0021A0  6FE0               	movwf	printf@fmt& (0+255),b
  2098  0021A2  0E10               	movlw	high STR_1
  2099  0021A4  6FE1               	movwf	(printf@fmt+1)& (0+255),b
  2100  0021A6  C122  F0E2         	movff	getCurve@deltaLeft,?_printf+2
  2101  0021AA  C123  F0E3         	movff	getCurve@deltaLeft+1,?_printf+3
  2102  0021AE  ECBE  F021         	call	_printf	;wreg free
  2103  0021B2                     
  2104                           ;main.c: 171:                     delay = 0;
  2105  0021B2  0E00               	movlw	0
  2106  0021B4  0100               	movlb	0	; () banked
  2107  0021B6  6FA4               	movwf	_delay& (0+255),b
  2108  0021B8                     
  2109                           ; BSR set to: 0
  2110                           ;main.c: 172:                     curveMode = BeforeCurve;
  2111  0021B8  0E01               	movlw	1
  2112  0021BA  6FA8               	movwf	_curveMode& (0+255),b
  2113  0021BC                     
  2114                           ; BSR set to: 0
  2115                           ;main.c: 173:                     driveMode = CurveLeft;
  2116  0021BC  0E04               	movlw	4
  2117  0021BE  6FA9               	movwf	_driveMode& (0+255),b
  2118  0021C0                     
  2119                           ; BSR set to: 0
  2120                           ;main.c: 174:                     ++curveLeftCount;
  2121  0021C0  2BA6               	incf	_curveLeftCount& (0+255),f,b
  2122  0021C2  EF6F  F010         	goto	l7106
  2123  0021C6                     l7138:
  2124                           
  2125                           ; BSR set to: 0
  2126                           ;main.c: 180:             if (delay >= (1)) {
  2127  0021C6  51A4               	movf	_delay& (0+255),w,b
  2128  0021C8  B4D8               	btfsc	status,2,c
  2129  0021CA  EFE9  F010         	goto	u6791
  2130  0021CE  EFEB  F010         	goto	u6790
  2131  0021D2                     u6791:
  2132  0021D2  EF6F  F010         	goto	l7106
  2133  0021D6                     u6790:
  2134  0021D6                     
  2135                           ; BSR set to: 0
  2136                           ;main.c: 181:                 delay = 0;
  2137  0021D6  0E00               	movlw	0
  2138  0021D8  6FA4               	movwf	_delay& (0+255),b
  2139                           
  2140                           ;main.c: 182:                 curveMode = OutCurve;
  2141  0021DA  0E00               	movlw	0
  2142  0021DC  6FA8               	movwf	_curveMode& (0+255),b
  2143                           
  2144                           ;main.c: 184:             } else {
  2145  0021DE  EF0F  F011         	goto	l1284
  2146  0021E2                     l7146:
  2147                           
  2148                           ; BSR set to: 1
  2149  0021E2  0100               	movlb	0	; () banked
  2150  0021E4  51A8               	movf	_curveMode& (0+255),w,b
  2151  0021E6  6FE6               	movwf	??_getCurve& (0+255),b
  2152  0021E8  6BE7               	clrf	(??_getCurve+1)& (0+255),b
  2153                           
  2154                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2155                           ; Switch size 1, requested type "simple"
  2156                           ; Number of cases is 1, Range of values is 0 to 0
  2157                           ; switch strategies available:
  2158                           ; Name         Instructions Cycles
  2159                           ; simple_byte            4     3 (average)
  2160                           ;	Chosen strategy is simple_byte
  2161  0021EA  51E7               	movf	(??_getCurve+1)& (0+255),w,b
  2162  0021EC  0A00               	xorlw	0	; case 0
  2163  0021EE  B4D8               	btfsc	status,2,c
  2164  0021F0  EFFC  F010         	goto	l7528
  2165  0021F4  EF0F  F011         	goto	l1284
  2166  0021F8                     l7528:
  2167                           
  2168                           ; BSR set to: 0
  2169                           ; Switch size 1, requested type "simple"
  2170                           ; Number of cases is 4, Range of values is 0 to 3
  2171                           ; switch strategies available:
  2172                           ; Name         Instructions Cycles
  2173                           ; simple_byte           13     7 (average)
  2174                           ;	Chosen strategy is simple_byte
  2175  0021F8  51E6               	movf	??_getCurve& (0+255),w,b
  2176  0021FA  0A00               	xorlw	0	; case 0
  2177  0021FC  B4D8               	btfsc	status,2,c
  2178  0021FE  EFFD  F00F         	goto	l7082
  2179  002202  0A01               	xorlw	1	; case 1
  2180  002204  B4D8               	btfsc	status,2,c
  2181  002206  EF61  F010         	goto	l7102
  2182  00220A  0A03               	xorlw	3	; case 2
  2183  00220C  B4D8               	btfsc	status,2,c
  2184  00220E  EF73  F010         	goto	l7108
  2185  002212  0A01               	xorlw	1	; case 3
  2186  002214  B4D8               	btfsc	status,2,c
  2187  002216  EFE3  F010         	goto	l7138
  2188  00221A  EF0F  F011         	goto	l1284
  2189  00221E                     l1284:
  2190                           
  2191                           ;main.c: 189:     oldDistLeft = distLeft;
  2192  00221E  C0A2  F098         	movff	_distLeft,_oldDistLeft	;volatile
  2193  002222  C0A3  F099         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  2194                           
  2195                           ;main.c: 190:     oldDistRight = distRight;
  2196  002226  C09E  F096         	movff	_distRight,_oldDistRight	;volatile
  2197  00222A  C09F  F097         	movff	_distRight+1,_oldDistRight+1	;volatile
  2198  00222E  0012               	return		;funcret
  2199  002230                     __end_of_getCurve:
  2200                           	callstack 0
  2201                           
  2202 ;; *************** function _printf *****************
  2203 ;; Defined at:
  2204 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
  2205 ;; Parameters:    Size  Location     Type
  2206 ;;  fmt             2   52[BANK0 ] PTR const unsigned char 
  2207 ;;		 -> STR_4(14), STR_3(13), STR_2(14), STR_1(14), 
  2208 ;; Auto vars:     Size  Location     Type
  2209 ;;  ap              2   56[BANK0 ] PTR void [1]
  2210 ;;		 -> ?_printf(2), 
  2211 ;;  ret             2    0        int 
  2212 ;; Return value:  Size  Location     Type
  2213 ;;                  2   52[BANK0 ] int 
  2214 ;; Registers used:
  2215 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2216 ;; Tracked objects:
  2217 ;;		On entry : 0/0
  2218 ;;		On exit  : 0/0
  2219 ;;		Unchanged: 0/0
  2220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2221 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2222 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2224 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2225 ;;Total ram usage:        6 bytes
  2226 ;; Hardware stack levels used: 1
  2227 ;; Hardware stack levels required when called: 16
  2228 ;; This function calls:
  2229 ;;		_vfprintf
  2230 ;; This function is called by:
  2231 ;;		_getCurve
  2232 ;;		_getReverse
  2233 ;; This function uses a non-reentrant model
  2234 ;;
  2235                           
  2236                           	psect	text4
  2237  00437C                     __ptext4:
  2238                           	callstack 0
  2239  00437C                     _printf:
  2240                           	callstack 12
  2241  00437C  0EE2               	movlw	low (?_printf+2)
  2242  00437E  0100               	movlb	0	; () banked
  2243  004380  6FE4               	movwf	printf@ap& (0+255),b
  2244  004382  0E00               	movlw	high (?_printf+2)
  2245  004384  6FE5               	movwf	(printf@ap+1)& (0+255),b
  2246  004386                     
  2247                           ; BSR set to: 0
  2248  004386  0E00               	movlw	0
  2249  004388  6FD8               	movwf	vfprintf@fp& (0+255),b
  2250  00438A  0E00               	movlw	0
  2251  00438C  6FD9               	movwf	(vfprintf@fp+1)& (0+255),b
  2252  00438E  C0E0  F0DA         	movff	printf@fmt,vfprintf@fmt
  2253  004392  C0E1  F0DB         	movff	printf@fmt+1,vfprintf@fmt+1
  2254  004396  0EE4               	movlw	low printf@ap
  2255  004398  6FDC               	movwf	vfprintf@ap& (0+255),b
  2256  00439A  0E00               	movlw	high printf@ap
  2257  00439C  6FDD               	movwf	(vfprintf@ap+1)& (0+255),b
  2258  00439E  ECAA  F01D         	call	_vfprintf	;wreg free
  2259  0043A2  0012               	return		;funcret
  2260  0043A4                     __end_of_printf:
  2261                           	callstack 0
  2262                           
  2263 ;; *************** function _vfprintf *****************
  2264 ;; Defined at:
  2265 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2266 ;; Parameters:    Size  Location     Type
  2267 ;;  fp              2   44[BANK0 ] PTR struct _IO_FILE
  2268 ;;		 -> NULL(0), 
  2269 ;;  fmt             2   46[BANK0 ] PTR const unsigned char 
  2270 ;;		 -> STR_4(14), STR_3(13), STR_2(14), STR_1(14), 
  2271 ;;  ap              2   48[BANK0 ] PTR PTR void 
  2272 ;;		 -> printf@ap(2), 
  2273 ;; Auto vars:     Size  Location     Type
  2274 ;;  cfmt            2   50[BANK0 ] PTR unsigned char 
  2275 ;;		 -> STR_4(14), STR_3(13), STR_2(14), STR_1(14), 
  2276 ;; Return value:  Size  Location     Type
  2277 ;;                  2   44[BANK0 ] int 
  2278 ;; Registers used:
  2279 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2280 ;; Tracked objects:
  2281 ;;		On entry : 0/0
  2282 ;;		On exit  : 0/0
  2283 ;;		Unchanged: 0/0
  2284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2285 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2286 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2288 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2289 ;;Total ram usage:        8 bytes
  2290 ;; Hardware stack levels used: 1
  2291 ;; Hardware stack levels required when called: 15
  2292 ;; This function calls:
  2293 ;;		_vfpfcnvrt
  2294 ;; This function is called by:
  2295 ;;		_printf
  2296 ;; This function uses a non-reentrant model
  2297 ;;
  2298                           
  2299                           	psect	text5
  2300  003B54                     __ptext5:
  2301                           	callstack 0
  2302  003B54                     _vfprintf:
  2303                           	callstack 12
  2304  003B54                     
  2305                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2306  003B54  C0DA  F0DE         	movff	vfprintf@fmt,vfprintf@cfmt
  2307  003B58  C0DB  F0DF         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2308  003B5C                     
  2309                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2310  003B5C  0E00               	movlw	0
  2311  003B5E  0100               	movlb	0	; () banked
  2312  003B60  6F81               	movwf	(_nout+1)& (0+255),b
  2313  003B62  0E00               	movlw	0
  2314  003B64  6F80               	movwf	_nout& (0+255),b
  2315                           
  2316                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2317  003B66  EFC8  F01D         	goto	l6676
  2318  003B6A                     l6674:
  2319                           
  2320                           ; BSR set to: 0
  2321                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2322  003B6A  C0D8  F0C8         	movff	vfprintf@fp,vfpfcnvrt@fp
  2323  003B6E  C0D9  F0C9         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2324  003B72  0EDE               	movlw	low vfprintf@cfmt
  2325  003B74  6FCA               	movwf	vfpfcnvrt@fmt& (0+255),b
  2326  003B76  0E00               	movlw	high vfprintf@cfmt
  2327  003B78  6FCB               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2328  003B7A  C0DC  F0CC         	movff	vfprintf@ap,vfpfcnvrt@ap
  2329  003B7E  C0DD  F0CD         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2330  003B82  EC18  F011         	call	_vfpfcnvrt	;wreg free
  2331  003B86  0100               	movlb	0	; () banked
  2332  003B88  51C8               	movf	?_vfpfcnvrt& (0+255),w,b
  2333  003B8A  2780               	addwf	_nout& (0+255),f,b
  2334  003B8C  51C9               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2335  003B8E  2381               	addwfc	(_nout+1)& (0+255),f,b
  2336  003B90                     l6676:
  2337                           
  2338                           ; BSR set to: 0
  2339                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2340  003B90  0060  F37B  FFF6   	movff	vfprintf@cfmt,tblptrl
  2341  003B96  0060  F37F  FFF7   	movff	vfprintf@cfmt+1,tblptrh
  2342  003B9C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2343  003B9C  6AF8               	clrf	tblptru,c
  2344  003B9E                     	endif
  2345  003B9E                     	if	0	;tblptru may be non-zero
  2346  003B9E                     	endif
  2347  003B9E  0008               	tblrd		*
  2348  003BA0  50F5               	movf	tablat,w,c
  2349  003BA2  0900               	iorlw	0
  2350  003BA4  A4D8               	btfss	status,2,c
  2351  003BA6  EFD7  F01D         	goto	u5991
  2352  003BAA  EFD9  F01D         	goto	u5990
  2353  003BAE                     u5991:
  2354  003BAE  EFB5  F01D         	goto	l6674
  2355  003BB2                     u5990:
  2356  003BB2                     
  2357                           ; BSR set to: 0
  2358                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2359  003BB2  C080  F0D8         	movff	_nout,?_vfprintf
  2360  003BB6  C081  F0D9         	movff	_nout+1,?_vfprintf+1
  2361  003BBA                     
  2362                           ; BSR set to: 0
  2363  003BBA  0012               	return		;funcret
  2364  003BBC                     __end_of_vfprintf:
  2365                           	callstack 0
  2366                           
  2367 ;; *************** function _vfpfcnvrt *****************
  2368 ;; Defined at:
  2369 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2370 ;; Parameters:    Size  Location     Type
  2371 ;;  fp              2   28[BANK0 ] PTR struct _IO_FILE
  2372 ;;		 -> NULL(0), 
  2373 ;;  fmt             2   30[BANK0 ] PTR PTR unsigned char 
  2374 ;;		 -> vfprintf@cfmt(2), 
  2375 ;;  ap              2   32[BANK0 ] PTR PTR void 
  2376 ;;		 -> printf@ap(2), 
  2377 ;; Auto vars:     Size  Location     Type
  2378 ;;  ll              8   36[BANK0 ] long long 
  2379 ;;  llu             8    0        unsigned long long 
  2380 ;;  f               4    0        unsigned long long 
  2381 ;;  vp              3    0        PTR void 
  2382 ;;  ct              3    0        unsigned char [3]
  2383 ;;  cp              3    0        PTR unsigned char 
  2384 ;;  i               2    0        int 
  2385 ;;  done            2    0        int 
  2386 ;;  c               1    0        unsigned char 
  2387 ;; Return value:  Size  Location     Type
  2388 ;;                  2   28[BANK0 ] int 
  2389 ;; Registers used:
  2390 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2391 ;; Tracked objects:
  2392 ;;		On entry : 0/0
  2393 ;;		On exit  : 0/0
  2394 ;;		Unchanged: 0/0
  2395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2396 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2397 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2398 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2399 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2400 ;;Total ram usage:       16 bytes
  2401 ;; Hardware stack levels used: 1
  2402 ;; Hardware stack levels required when called: 14
  2403 ;; This function calls:
  2404 ;;		_dtoa
  2405 ;;		_fputc
  2406 ;; This function is called by:
  2407 ;;		_vfprintf
  2408 ;; This function uses a non-reentrant model
  2409 ;;
  2410                           
  2411                           	psect	text6
  2412  002230                     __ptext6:
  2413                           	callstack 0
  2414  002230                     _vfpfcnvrt:
  2415                           	callstack 12
  2416  002230                     
  2417                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2418  002230  0060  F32B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2419  002236  0060  F32F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2420  00223C  006F FF7B FFF6     	movff	postinc2,tblptrl
  2421  002242  006F FF77 FFF7     	movff	postdec2,tblptrh
  2422  002248                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2423  002248  6AF8               	clrf	tblptru,c
  2424  00224A                     	endif
  2425  00224A                     	if	0	;tblptru may be non-zero
  2426  00224A                     	endif
  2427  00224A  0008               	tblrd		*
  2428  00224C  50F5               	movf	tablat,w,c
  2429  00224E  0A25               	xorlw	37
  2430  002250  A4D8               	btfss	status,2,c
  2431  002252  EF2D  F011         	goto	u5651
  2432  002256  EF2F  F011         	goto	u5650
  2433  00225A                     u5651:
  2434  00225A  EFFB  F011         	goto	l6480
  2435  00225E                     u5650:
  2436  00225E                     
  2437                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2438  00225E  0060  F32B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2439  002264  0060  F32F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2440  00226A  2ADE               	incf	postinc2,f,c
  2441  00226C  0E00               	movlw	0
  2442  00226E  22DD               	addwfc	postdec2,f,c
  2443  002270                     
  2444                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2445  002270  0E00               	movlw	0
  2446  002272  0100               	movlb	0	; () banked
  2447  002274  6F83               	movwf	(_width+1)& (0+255),b
  2448  002276  0E00               	movlw	0
  2449  002278  6F82               	movwf	_width& (0+255),b
  2450  00227A  C082  F03C         	movff	_width,_flags
  2451  00227E  C083  F03D         	movff	_width+1,_flags+1
  2452  002282                     
  2453                           ; BSR set to: 0
  2454                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2455  002282  683A               	setf	_prec^0,c
  2456  002284  683B               	setf	(_prec+1)^0,c
  2457  002286                     
  2458                           ; BSR set to: 0
  2459                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2460  002286  0060  F32B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2461  00228C  0060  F32F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2462  002292  006F FF7B FFF6     	movff	postinc2,tblptrl
  2463  002298  006F FF77 FFF7     	movff	postdec2,tblptrh
  2464  00229E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2465  00229E  6AF8               	clrf	tblptru,c
  2466  0022A0                     	endif
  2467  0022A0                     	if	0	;tblptru may be non-zero
  2468  0022A0                     	endif
  2469  0022A0  0008               	tblrd		*
  2470  0022A2  50F5               	movf	tablat,w,c
  2471  0022A4  0A64               	xorlw	100
  2472  0022A6  B4D8               	btfsc	status,2,c
  2473  0022A8  EF58  F011         	goto	u5661
  2474  0022AC  EF5A  F011         	goto	u5660
  2475  0022B0                     u5661:
  2476  0022B0  EF71  F011         	goto	l6458
  2477  0022B4                     u5660:
  2478  0022B4                     
  2479                           ; BSR set to: 0
  2480  0022B4  0060  F32B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2481  0022BA  0060  F32F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2482  0022C0  006F FF7B FFF6     	movff	postinc2,tblptrl
  2483  0022C6  006F FF77 FFF7     	movff	postdec2,tblptrh
  2484  0022CC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2485  0022CC  6AF8               	clrf	tblptru,c
  2486  0022CE                     	endif
  2487  0022CE                     	if	0	;tblptru may be non-zero
  2488  0022CE                     	endif
  2489  0022CE  0008               	tblrd		*
  2490  0022D0  50F5               	movf	tablat,w,c
  2491  0022D2  0A69               	xorlw	105
  2492  0022D4  A4D8               	btfss	status,2,c
  2493  0022D6  EF6F  F011         	goto	u5671
  2494  0022DA  EF71  F011         	goto	u5670
  2495  0022DE                     u5671:
  2496  0022DE  EFBB  F011         	goto	l6464
  2497  0022E2                     u5670:
  2498  0022E2                     l6458:
  2499                           
  2500                           ; BSR set to: 0
  2501                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2502  0022E2  0060  F32B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2503  0022E8  0060  F32F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2504  0022EE  2ADE               	incf	postinc2,f,c
  2505  0022F0  0E00               	movlw	0
  2506  0022F2  22DD               	addwfc	postdec2,f,c
  2507                           
  2508                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2509  0022F4  0060  F333  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  2510  0022FA  0060  F337  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  2511  002300  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt
  2512  002306  0E02               	movlw	2
  2513  002308  26DE               	addwf	postinc2,f,c
  2514  00230A  006F FF7C  F0CF    	movff	indf2,??_vfpfcnvrt+1
  2515  002310  0E00               	movlw	0
  2516  002312  22DD               	addwfc	postdec2,f,c
  2517  002314  0060  F33B  FFD9   	movff	??_vfpfcnvrt,fsr2l
  2518  00231A  0060  F33F  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  2519  002320  006F FF78  F0D0    	movff	postinc2,vfpfcnvrt@ll
  2520  002326  006F FF74  F0D1    	movff	postdec2,vfpfcnvrt@ll+1
  2521  00232C  0E00               	movlw	0
  2522  00232E  BFD1               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2523  002330  0EFF               	movlw	-1
  2524  002332  6FD2               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2525  002334  6FD3               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2526  002336  6FD4               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2527  002338  6FD5               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2528  00233A  6FD6               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2529  00233C  6FD7               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2530  00233E                     
  2531                           ; BSR set to: 0
  2532                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2533  00233E  C0C8  F0AC         	movff	vfpfcnvrt@fp,dtoa@fp
  2534  002342  C0C9  F0AD         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2535  002346  C0D0  F0AE         	movff	vfpfcnvrt@ll,dtoa@d
  2536  00234A  C0D1  F0AF         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2537  00234E  C0D2  F0B0         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2538  002352  C0D3  F0B1         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2539  002356  C0D4  F0B2         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2540  00235A  C0D5  F0B3         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2541  00235E  C0D6  F0B4         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2542  002362  C0D7  F0B5         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2543  002366  EC74  F00E         	call	_dtoa	;wreg free
  2544  00236A  C0AC  F0C8         	movff	?_dtoa,?_vfpfcnvrt
  2545  00236E  C0AD  F0C9         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2546  002372  EF1D  F012         	goto	l2144
  2547  002376                     l6464:
  2548                           
  2549                           ; BSR set to: 0
  2550                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2551  002376  0060  F32B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2552  00237C  0060  F32F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2553  002382  006F FF7B FFF6     	movff	postinc2,tblptrl
  2554  002388  006F FF77 FFF7     	movff	postdec2,tblptrh
  2555  00238E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2556  00238E  6AF8               	clrf	tblptru,c
  2557  002390                     	endif
  2558  002390                     	if	0	;tblptru may be non-zero
  2559  002390                     	endif
  2560  002390  0008               	tblrd		*
  2561  002392  50F5               	movf	tablat,w,c
  2562  002394  0A25               	xorlw	37
  2563  002396  A4D8               	btfss	status,2,c
  2564  002398  EFD0  F011         	goto	u5681
  2565  00239C  EFD2  F011         	goto	u5680
  2566  0023A0                     u5681:
  2567  0023A0  EFEC  F011         	goto	l6474
  2568  0023A4                     u5680:
  2569  0023A4                     
  2570                           ; BSR set to: 0
  2571                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2572  0023A4  0060  F32B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2573  0023AA  0060  F32F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2574  0023B0  2ADE               	incf	postinc2,f,c
  2575  0023B2  0E00               	movlw	0
  2576  0023B4  22DD               	addwfc	postdec2,f,c
  2577  0023B6                     
  2578                           ; BSR set to: 0
  2579                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2580  0023B6  0E00               	movlw	0
  2581  0023B8  6E17               	movwf	(fputc@c+1)^0,c
  2582  0023BA  0E25               	movlw	37
  2583  0023BC  6E16               	movwf	fputc@c^0,c
  2584  0023BE  C0C8  F018         	movff	vfpfcnvrt@fp,fputc@fp
  2585  0023C2  C0C9  F019         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2586  0023C6  ECCD  F01C         	call	_fputc	;wreg free
  2587  0023CA                     l6470:
  2588                           
  2589                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2590  0023CA  0E00               	movlw	0
  2591  0023CC  0100               	movlb	0	; () banked
  2592  0023CE  6FC9               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2593  0023D0  0E01               	movlw	1
  2594  0023D2  6FC8               	movwf	?_vfpfcnvrt& (0+255),b
  2595  0023D4  EF1D  F012         	goto	l2144
  2596  0023D8                     l6474:
  2597                           
  2598                           ; BSR set to: 0
  2599                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2600  0023D8  0060  F32B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2601  0023DE  0060  F32F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2602  0023E4  2ADE               	incf	postinc2,f,c
  2603  0023E6  0E00               	movlw	0
  2604  0023E8  22DD               	addwfc	postdec2,f,c
  2605  0023EA                     
  2606                           ; BSR set to: 0
  2607                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2608  0023EA  0E00               	movlw	0
  2609  0023EC  6FC9               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2610  0023EE  0E00               	movlw	0
  2611  0023F0  6FC8               	movwf	?_vfpfcnvrt& (0+255),b
  2612  0023F2  EF1D  F012         	goto	l2144
  2613  0023F6                     l6480:
  2614                           
  2615                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2616  0023F6  0060  F32B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2617  0023FC  0060  F32F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2618  002402  006F FF7B FFF6     	movff	postinc2,tblptrl
  2619  002408  006F FF77 FFF7     	movff	postdec2,tblptrh
  2620  00240E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2621  00240E  6AF8               	clrf	tblptru,c
  2622  002410                     	endif
  2623  002410                     	if	0	;tblptru may be non-zero
  2624  002410                     	endif
  2625  002410  0008               	tblrd		*
  2626  002412  50F5               	movf	tablat,w,c
  2627  002414  6E16               	movwf	fputc@c^0,c
  2628  002416  6A17               	clrf	(fputc@c+1)^0,c
  2629  002418  C0C8  F018         	movff	vfpfcnvrt@fp,fputc@fp
  2630  00241C  C0C9  F019         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2631  002420  ECCD  F01C         	call	_fputc	;wreg free
  2632  002424                     
  2633                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2634  002424  0060  F32B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2635  00242A  0060  F32F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2636  002430  2ADE               	incf	postinc2,f,c
  2637  002432  0E00               	movlw	0
  2638  002434  22DD               	addwfc	postdec2,f,c
  2639  002436  EFE5  F011         	goto	l6470
  2640  00243A                     l2144:
  2641  00243A  0012               	return		;funcret
  2642  00243C                     __end_of_vfpfcnvrt:
  2643                           	callstack 0
  2644                           
  2645 ;; *************** function _dtoa *****************
  2646 ;; Defined at:
  2647 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2648 ;; Parameters:    Size  Location     Type
  2649 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  2650 ;;		 -> NULL(0), 
  2651 ;;  d               8    2[BANK0 ] long long 
  2652 ;; Auto vars:     Size  Location     Type
  2653 ;;  n               8   18[BANK0 ] long long 
  2654 ;;  i               2   26[BANK0 ] int 
  2655 ;;  s               2   16[BANK0 ] int 
  2656 ;;  w               2   14[BANK0 ] int 
  2657 ;;  p               2   12[BANK0 ] int 
  2658 ;; Return value:  Size  Location     Type
  2659 ;;                  2    0[BANK0 ] int 
  2660 ;; Registers used:
  2661 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2662 ;; Tracked objects:
  2663 ;;		On entry : 0/0
  2664 ;;		On exit  : 0/0
  2665 ;;		Unchanged: 0/0
  2666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2667 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2668 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2669 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2670 ;;      Totals:         8      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2671 ;;Total ram usage:       36 bytes
  2672 ;; Hardware stack levels used: 1
  2673 ;; Hardware stack levels required when called: 13
  2674 ;; This function calls:
  2675 ;;		___aodiv
  2676 ;;		___aomod
  2677 ;;		_abs
  2678 ;;		_pad
  2679 ;; This function is called by:
  2680 ;;		_vfpfcnvrt
  2681 ;; This function uses a non-reentrant model
  2682 ;;
  2683                           
  2684                           	psect	text7
  2685  001CE8                     __ptext7:
  2686                           	callstack 0
  2687  001CE8                     _dtoa:
  2688                           	callstack 12
  2689  001CE8                     
  2690                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  2691  001CE8  C0AE  F0BE         	movff	dtoa@d,dtoa@n
  2692  001CEC  C0AF  F0BF         	movff	dtoa@d+1,dtoa@n+1
  2693  001CF0  C0B0  F0C0         	movff	dtoa@d+2,dtoa@n+2
  2694  001CF4  C0B1  F0C1         	movff	dtoa@d+3,dtoa@n+3
  2695  001CF8  C0B2  F0C2         	movff	dtoa@d+4,dtoa@n+4
  2696  001CFC  C0B3  F0C3         	movff	dtoa@d+5,dtoa@n+5
  2697  001D00  C0B4  F0C4         	movff	dtoa@d+6,dtoa@n+6
  2698  001D04  C0B5  F0C5         	movff	dtoa@d+7,dtoa@n+7
  2699  001D08                     
  2700                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  2701  001D08  0100               	movlb	0	; () banked
  2702  001D0A  BFC5               	btfsc	(dtoa@n+7)& (0+255),7,b
  2703  001D0C  EF8A  F00E         	goto	u5501
  2704  001D10  EF8D  F00E         	goto	u5500
  2705  001D14                     u5501:
  2706  001D14  0E01               	movlw	1
  2707  001D16  EF8E  F00E         	goto	u5510
  2708  001D1A                     u5500:
  2709  001D1A  0E00               	movlw	0
  2710  001D1C                     u5510:
  2711  001D1C  6FBC               	movwf	dtoa@s& (0+255),b
  2712  001D1E  6BBD               	clrf	(dtoa@s+1)& (0+255),b
  2713                           
  2714                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  2715  001D20  51BC               	movf	dtoa@s& (0+255),w,b
  2716  001D22  11BD               	iorwf	(dtoa@s+1)& (0+255),w,b
  2717  001D24  B4D8               	btfsc	status,2,c
  2718  001D26  EF97  F00E         	goto	u5521
  2719  001D2A  EF99  F00E         	goto	u5520
  2720  001D2E                     u5521:
  2721  001D2E  EFA9  F00E         	goto	l6390
  2722  001D32                     u5520:
  2723  001D32                     
  2724                           ; BSR set to: 0
  2725                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  2726  001D32  1FC5               	comf	(dtoa@n+7)& (0+255),f,b
  2727  001D34  1FC4               	comf	(dtoa@n+6)& (0+255),f,b
  2728  001D36  1FC3               	comf	(dtoa@n+5)& (0+255),f,b
  2729  001D38  1FC2               	comf	(dtoa@n+4)& (0+255),f,b
  2730  001D3A  1FC1               	comf	(dtoa@n+3)& (0+255),f,b
  2731  001D3C  1FC0               	comf	(dtoa@n+2)& (0+255),f,b
  2732  001D3E  1FBF               	comf	(dtoa@n+1)& (0+255),f,b
  2733  001D40  6DBE               	negf	dtoa@n& (0+255),b
  2734  001D42  0E00               	movlw	0
  2735  001D44  23BF               	addwfc	(dtoa@n+1)& (0+255),f,b
  2736  001D46  23C0               	addwfc	(dtoa@n+2)& (0+255),f,b
  2737  001D48  23C1               	addwfc	(dtoa@n+3)& (0+255),f,b
  2738  001D4A  23C2               	addwfc	(dtoa@n+4)& (0+255),f,b
  2739  001D4C  23C3               	addwfc	(dtoa@n+5)& (0+255),f,b
  2740  001D4E  23C4               	addwfc	(dtoa@n+6)& (0+255),f,b
  2741  001D50  23C5               	addwfc	(dtoa@n+7)& (0+255),f,b
  2742  001D52                     l6390:
  2743                           
  2744                           ; BSR set to: 0
  2745                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  2746  001D52  BE3B               	btfsc	(_prec+1)^0,7,c
  2747  001D54  EFAE  F00E         	goto	u5531
  2748  001D58  EFB0  F00E         	goto	u5530
  2749  001D5C                     u5531:
  2750  001D5C  EFB1  F00E         	goto	l6394
  2751  001D60                     u5530:
  2752  001D60                     
  2753                           ; BSR set to: 0
  2754                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  2755  001D60  923C               	bcf	_flags^0,1,c
  2756  001D62                     l6394:
  2757                           
  2758                           ; BSR set to: 0
  2759                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  2760  001D62  BE3B               	btfsc	(_prec+1)^0,7,c
  2761  001D64  EFBE  F00E         	goto	u5540
  2762  001D68  503B               	movf	(_prec+1)^0,w,c
  2763  001D6A  E106               	bnz	u5541
  2764  001D6C  043A               	decf	_prec^0,w,c
  2765  001D6E  B0D8               	btfsc	status,0,c
  2766  001D70  EFBC  F00E         	goto	u5541
  2767  001D74  EFBE  F00E         	goto	u5540
  2768  001D78                     u5541:
  2769  001D78  EFC4  F00E         	goto	l2117
  2770  001D7C                     u5540:
  2771  001D7C                     
  2772                           ; BSR set to: 0
  2773  001D7C  0E00               	movlw	0
  2774  001D7E  6FB9               	movwf	(dtoa@p+1)& (0+255),b
  2775  001D80  0E01               	movlw	1
  2776  001D82  6FB8               	movwf	dtoa@p& (0+255),b
  2777  001D84  EFC8  F00E         	goto	l2119
  2778  001D88                     l2117:
  2779                           
  2780                           ; BSR set to: 0
  2781  001D88  C03A  F0B8         	movff	_prec,dtoa@p
  2782  001D8C  C03B  F0B9         	movff	_prec+1,dtoa@p+1
  2783  001D90                     l2119:
  2784                           
  2785                           ; BSR set to: 0
  2786                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  2787  001D90  C082  F0BA         	movff	_width,dtoa@w
  2788  001D94  C083  F0BB         	movff	_width+1,dtoa@w+1
  2789  001D98                     
  2790                           ; BSR set to: 0
  2791                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  2792  001D98  51BC               	movf	dtoa@s& (0+255),w,b
  2793  001D9A  11BD               	iorwf	(dtoa@s+1)& (0+255),w,b
  2794  001D9C  A4D8               	btfss	status,2,c
  2795  001D9E  EFD3  F00E         	goto	u5551
  2796  001DA2  EFD5  F00E         	goto	u5550
  2797  001DA6                     u5551:
  2798  001DA6  EFDC  F00E         	goto	l6402
  2799  001DAA                     u5550:
  2800  001DAA                     
  2801                           ; BSR set to: 0
  2802  001DAA  A43C               	btfss	_flags^0,2,c
  2803  001DAC  EFDA  F00E         	goto	u5561
  2804  001DB0  EFDC  F00E         	goto	u5560
  2805  001DB4                     u5561:
  2806  001DB4  EFDF  F00E         	goto	l6404
  2807  001DB8                     u5560:
  2808  001DB8                     l6402:
  2809                           
  2810                           ; BSR set to: 0
  2811                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  2812  001DB8  07BA               	decf	dtoa@w& (0+255),f,b
  2813  001DBA  A0D8               	btfss	status,0,c
  2814  001DBC  07BB               	decf	(dtoa@w+1)& (0+255),f,b
  2815  001DBE                     l6404:
  2816                           
  2817                           ; BSR set to: 0
  2818                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  2819  001DBE  0E00               	movlw	0
  2820  001DC0  6FC7               	movwf	(dtoa@i+1)& (0+255),b
  2821  001DC2  0E1F               	movlw	31
  2822  001DC4  6FC6               	movwf	dtoa@i& (0+255),b
  2823  001DC6                     
  2824                           ; BSR set to: 0
  2825                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  2826  001DC6  0E00               	movlw	0
  2827  001DC8  0101               	movlb	1	; () banked
  2828  001DCA  6F1F               	movwf	(_dbuf+31)& (0+255),b
  2829                           
  2830                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2831  001DCC  EF65  F00F         	goto	l6418
  2832  001DD0                     l6408:
  2833                           
  2834                           ; BSR set to: 0
  2835                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  2836  001DD0  07C6               	decf	dtoa@i& (0+255),f,b
  2837  001DD2  A0D8               	btfss	status,0,c
  2838  001DD4  07C7               	decf	(dtoa@i+1)& (0+255),f,b
  2839  001DD6                     
  2840                           ; BSR set to: 0
  2841                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2842  001DD6  0E00               	movlw	low _dbuf
  2843  001DD8  25C6               	addwf	dtoa@i& (0+255),w,b
  2844  001DDA  6ED9               	movwf	fsr2l,c
  2845  001DDC  0E01               	movlw	high _dbuf
  2846  001DDE  21C7               	addwfc	(dtoa@i+1)& (0+255),w,b
  2847  001DE0  6EDA               	movwf	fsr2h,c
  2848  001DE2  C0BE  F014         	movff	dtoa@n,___aomod@dividend
  2849  001DE6  C0BF  F015         	movff	dtoa@n+1,___aomod@dividend+1
  2850  001DEA  C0C0  F016         	movff	dtoa@n+2,___aomod@dividend+2
  2851  001DEE  C0C1  F017         	movff	dtoa@n+3,___aomod@dividend+3
  2852  001DF2  C0C2  F018         	movff	dtoa@n+4,___aomod@dividend+4
  2853  001DF6  C0C3  F019         	movff	dtoa@n+5,___aomod@dividend+5
  2854  001DFA  C0C4  F01A         	movff	dtoa@n+6,___aomod@dividend+6
  2855  001DFE  C0C5  F01B         	movff	dtoa@n+7,___aomod@dividend+7
  2856  001E02  0E0A               	movlw	10
  2857  001E04  6E1C               	movwf	___aomod@divisor^0,c
  2858  001E06  0E00               	movlw	0
  2859  001E08  6E1D               	movwf	(___aomod@divisor+1)^0,c
  2860  001E0A  0E00               	movlw	0
  2861  001E0C  6E1E               	movwf	(___aomod@divisor+2)^0,c
  2862  001E0E  0E00               	movlw	0
  2863  001E10  6E1F               	movwf	(___aomod@divisor+3)^0,c
  2864  001E12  0E00               	movlw	0
  2865  001E14  6E20               	movwf	(___aomod@divisor+4)^0,c
  2866  001E16  0E00               	movlw	0
  2867  001E18  6E21               	movwf	(___aomod@divisor+5)^0,c
  2868  001E1A  0E00               	movlw	0
  2869  001E1C  6E22               	movwf	(___aomod@divisor+6)^0,c
  2870  001E1E  0E00               	movlw	0
  2871  001E20  6E23               	movwf	(___aomod@divisor+7)^0,c
  2872  001E22  EC86  F016         	call	___aomod	;wreg free
  2873  001E26  C014  F031         	movff	?___aomod,??_dtoa
  2874  001E2A  C015  F032         	movff	?___aomod+1,??_dtoa+1
  2875  001E2E  C016  F033         	movff	?___aomod+2,??_dtoa+2
  2876  001E32  C017  F034         	movff	?___aomod+3,??_dtoa+3
  2877  001E36  C018  F035         	movff	?___aomod+4,??_dtoa+4
  2878  001E3A  C019  F036         	movff	?___aomod+5,??_dtoa+5
  2879  001E3E  C01A  F037         	movff	?___aomod+6,??_dtoa+6
  2880  001E42  C01B  F038         	movff	?___aomod+7,??_dtoa+7
  2881  001E46  C031  F026         	movff	??_dtoa,abs@a
  2882  001E4A  C033  F027         	movff	??_dtoa+2,abs@a+1
  2883  001E4E  EC3D  F01F         	call	_abs	;wreg free
  2884  001E52  5026               	movf	?_abs^0,w,c
  2885  001E54  0F30               	addlw	48
  2886  001E56  6EDF               	movwf	indf2,c
  2887  001E58                     
  2888                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  2889  001E58  0100               	movlb	0	; () banked
  2890  001E5A  07B8               	decf	dtoa@p& (0+255),f,b
  2891  001E5C  A0D8               	btfss	status,0,c
  2892  001E5E  07B9               	decf	(dtoa@p+1)& (0+255),f,b
  2893  001E60                     
  2894                           ; BSR set to: 0
  2895                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  2896  001E60  07BA               	decf	dtoa@w& (0+255),f,b
  2897  001E62  A0D8               	btfss	status,0,c
  2898  001E64  07BB               	decf	(dtoa@w+1)& (0+255),f,b
  2899  001E66                     
  2900                           ; BSR set to: 0
  2901                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  2902  001E66  C0BE  F014         	movff	dtoa@n,___aodiv@dividend
  2903  001E6A  C0BF  F015         	movff	dtoa@n+1,___aodiv@dividend+1
  2904  001E6E  C0C0  F016         	movff	dtoa@n+2,___aodiv@dividend+2
  2905  001E72  C0C1  F017         	movff	dtoa@n+3,___aodiv@dividend+3
  2906  001E76  C0C2  F018         	movff	dtoa@n+4,___aodiv@dividend+4
  2907  001E7A  C0C3  F019         	movff	dtoa@n+5,___aodiv@dividend+5
  2908  001E7E  C0C4  F01A         	movff	dtoa@n+6,___aodiv@dividend+6
  2909  001E82  C0C5  F01B         	movff	dtoa@n+7,___aodiv@dividend+7
  2910  001E86  0E0A               	movlw	10
  2911  001E88  6E1C               	movwf	___aodiv@divisor^0,c
  2912  001E8A  0E00               	movlw	0
  2913  001E8C  6E1D               	movwf	(___aodiv@divisor+1)^0,c
  2914  001E8E  0E00               	movlw	0
  2915  001E90  6E1E               	movwf	(___aodiv@divisor+2)^0,c
  2916  001E92  0E00               	movlw	0
  2917  001E94  6E1F               	movwf	(___aodiv@divisor+3)^0,c
  2918  001E96  0E00               	movlw	0
  2919  001E98  6E20               	movwf	(___aodiv@divisor+4)^0,c
  2920  001E9A  0E00               	movlw	0
  2921  001E9C  6E21               	movwf	(___aodiv@divisor+5)^0,c
  2922  001E9E  0E00               	movlw	0
  2923  001EA0  6E22               	movwf	(___aodiv@divisor+6)^0,c
  2924  001EA2  0E00               	movlw	0
  2925  001EA4  6E23               	movwf	(___aodiv@divisor+7)^0,c
  2926  001EA6  ECC2  F015         	call	___aodiv	;wreg free
  2927  001EAA  C014  F0BE         	movff	?___aodiv,dtoa@n
  2928  001EAE  C015  F0BF         	movff	?___aodiv+1,dtoa@n+1
  2929  001EB2  C016  F0C0         	movff	?___aodiv+2,dtoa@n+2
  2930  001EB6  C017  F0C1         	movff	?___aodiv+3,dtoa@n+3
  2931  001EBA  C018  F0C2         	movff	?___aodiv+4,dtoa@n+4
  2932  001EBE  C019  F0C3         	movff	?___aodiv+5,dtoa@n+5
  2933  001EC2  C01A  F0C4         	movff	?___aodiv+6,dtoa@n+6
  2934  001EC6  C01B  F0C5         	movff	?___aodiv+7,dtoa@n+7
  2935  001ECA                     l6418:
  2936                           
  2937                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2938  001ECA  0100               	movlb	0	; () banked
  2939  001ECC  BFC7               	btfsc	(dtoa@i+1)& (0+255),7,b
  2940  001ECE  EF71  F00F         	goto	u5571
  2941  001ED2  51C7               	movf	(dtoa@i+1)& (0+255),w,b
  2942  001ED4  E108               	bnz	u5570
  2943  001ED6  05C6               	decf	dtoa@i& (0+255),w,b
  2944  001ED8  A0D8               	btfss	status,0,c
  2945  001EDA  EF71  F00F         	goto	u5571
  2946  001EDE  EF73  F00F         	goto	u5570
  2947  001EE2                     u5571:
  2948  001EE2  EFA3  F00F         	goto	l6428
  2949  001EE6                     u5570:
  2950  001EE6                     
  2951                           ; BSR set to: 0
  2952  001EE6  51BE               	movf	dtoa@n& (0+255),w,b
  2953  001EE8  11BF               	iorwf	(dtoa@n+1)& (0+255),w,b
  2954  001EEA  11C0               	iorwf	(dtoa@n+2)& (0+255),w,b
  2955  001EEC  11C1               	iorwf	(dtoa@n+3)& (0+255),w,b
  2956  001EEE  11C2               	iorwf	(dtoa@n+4)& (0+255),w,b
  2957  001EF0  11C3               	iorwf	(dtoa@n+5)& (0+255),w,b
  2958  001EF2  11C4               	iorwf	(dtoa@n+6)& (0+255),w,b
  2959  001EF4  11C5               	iorwf	(dtoa@n+7)& (0+255),w,b
  2960  001EF6  A4D8               	btfss	status,2,c
  2961  001EF8  EF80  F00F         	goto	u5581
  2962  001EFC  EF82  F00F         	goto	u5580
  2963  001F00                     u5581:
  2964  001F00  EFE8  F00E         	goto	l6408
  2965  001F04                     u5580:
  2966  001F04                     
  2967                           ; BSR set to: 0
  2968  001F04  BFB9               	btfsc	(dtoa@p+1)& (0+255),7,b
  2969  001F06  EF8F  F00F         	goto	u5590
  2970  001F0A  51B9               	movf	(dtoa@p+1)& (0+255),w,b
  2971  001F0C  E106               	bnz	u5591
  2972  001F0E  05B8               	decf	dtoa@p& (0+255),w,b
  2973  001F10  B0D8               	btfsc	status,0,c
  2974  001F12  EF8D  F00F         	goto	u5591
  2975  001F16  EF8F  F00F         	goto	u5590
  2976  001F1A                     u5591:
  2977  001F1A  EFE8  F00E         	goto	l6408
  2978  001F1E                     u5590:
  2979  001F1E                     
  2980                           ; BSR set to: 0
  2981  001F1E  BFBB               	btfsc	(dtoa@w+1)& (0+255),7,b
  2982  001F20  EF9A  F00F         	goto	u5601
  2983  001F24  51BB               	movf	(dtoa@w+1)& (0+255),w,b
  2984  001F26  E108               	bnz	u5600
  2985  001F28  05BA               	decf	dtoa@w& (0+255),w,b
  2986  001F2A  A0D8               	btfss	status,0,c
  2987  001F2C  EF9A  F00F         	goto	u5601
  2988  001F30  EF9C  F00F         	goto	u5600
  2989  001F34                     u5601:
  2990  001F34  EFA3  F00F         	goto	l6428
  2991  001F38                     u5600:
  2992  001F38                     
  2993                           ; BSR set to: 0
  2994  001F38  B23C               	btfsc	_flags^0,1,c
  2995  001F3A  EFA1  F00F         	goto	u5611
  2996  001F3E  EFA3  F00F         	goto	u5610
  2997  001F42                     u5611:
  2998  001F42  EFE8  F00E         	goto	l6408
  2999  001F46                     u5610:
  3000  001F46                     l6428:
  3001                           
  3002                           ; BSR set to: 0
  3003                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  3004  001F46  51BC               	movf	dtoa@s& (0+255),w,b
  3005  001F48  11BD               	iorwf	(dtoa@s+1)& (0+255),w,b
  3006  001F4A  A4D8               	btfss	status,2,c
  3007  001F4C  EFAA  F00F         	goto	u5621
  3008  001F50  EFAC  F00F         	goto	u5620
  3009  001F54                     u5621:
  3010  001F54  EFB3  F00F         	goto	l6432
  3011  001F58                     u5620:
  3012  001F58                     
  3013                           ; BSR set to: 0
  3014  001F58  A43C               	btfss	_flags^0,2,c
  3015  001F5A  EFB1  F00F         	goto	u5631
  3016  001F5E  EFB3  F00F         	goto	u5630
  3017  001F62                     u5631:
  3018  001F62  EFD2  F00F         	goto	l6442
  3019  001F66                     u5630:
  3020  001F66                     l6432:
  3021                           
  3022                           ; BSR set to: 0
  3023                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  3024  001F66  07C6               	decf	dtoa@i& (0+255),f,b
  3025  001F68  A0D8               	btfss	status,0,c
  3026  001F6A  07C7               	decf	(dtoa@i+1)& (0+255),f,b
  3027  001F6C                     
  3028                           ; BSR set to: 0
  3029                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  3030  001F6C  51BC               	movf	dtoa@s& (0+255),w,b
  3031  001F6E  11BD               	iorwf	(dtoa@s+1)& (0+255),w,b
  3032  001F70  A4D8               	btfss	status,2,c
  3033  001F72  EFBD  F00F         	goto	u5641
  3034  001F76  EFBF  F00F         	goto	u5640
  3035  001F7A                     u5641:
  3036  001F7A  EFC5  F00F         	goto	l6438
  3037  001F7E                     u5640:
  3038  001F7E                     
  3039                           ; BSR set to: 0
  3040  001F7E  0E00               	movlw	0
  3041  001F80  6FB7               	movwf	(_dtoa$3494+1)& (0+255),b
  3042  001F82  0E2B               	movlw	43
  3043  001F84  6FB6               	movwf	_dtoa$3494& (0+255),b
  3044  001F86  EFC9  F00F         	goto	l6440
  3045  001F8A                     l6438:
  3046                           
  3047                           ; BSR set to: 0
  3048  001F8A  0E00               	movlw	0
  3049  001F8C  6FB7               	movwf	(_dtoa$3494+1)& (0+255),b
  3050  001F8E  0E2D               	movlw	45
  3051  001F90  6FB6               	movwf	_dtoa$3494& (0+255),b
  3052  001F92                     l6440:
  3053                           
  3054                           ; BSR set to: 0
  3055  001F92  0E00               	movlw	low _dbuf
  3056  001F94  25C6               	addwf	dtoa@i& (0+255),w,b
  3057  001F96  6ED9               	movwf	fsr2l,c
  3058  001F98  0E01               	movlw	high _dbuf
  3059  001F9A  21C7               	addwfc	(dtoa@i+1)& (0+255),w,b
  3060  001F9C  6EDA               	movwf	fsr2h,c
  3061  001F9E  0060  F2DB  FFDF   	movff	_dtoa$3494,indf2
  3062  001FA4                     l6442:
  3063                           
  3064                           ; BSR set to: 0
  3065                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  3066  001FA4  C0AC  F026         	movff	dtoa@fp,pad@fp
  3067  001FA8  C0AD  F027         	movff	dtoa@fp+1,pad@fp+1
  3068  001FAC  0E00               	movlw	low _dbuf
  3069  001FAE  25C6               	addwf	dtoa@i& (0+255),w,b
  3070  001FB0  6E28               	movwf	pad@buf^0,c
  3071  001FB2  0E01               	movlw	high _dbuf
  3072  001FB4  21C7               	addwfc	(dtoa@i+1)& (0+255),w,b
  3073  001FB6  6E29               	movwf	(pad@buf+1)^0,c
  3074  001FB8  C0BA  F02A         	movff	dtoa@w,pad@p
  3075  001FBC  C0BB  F02B         	movff	dtoa@w+1,pad@p+1
  3076  001FC0  ECBA  F01B         	call	_pad	;wreg free
  3077  001FC4  C026  F0AC         	movff	?_pad,?_dtoa
  3078  001FC8  C027  F0AD         	movff	?_pad+1,?_dtoa+1
  3079  001FCC  0012               	return		;funcret
  3080  001FCE                     __end_of_dtoa:
  3081                           	callstack 0
  3082                           
  3083 ;; *************** function _pad *****************
  3084 ;; Defined at:
  3085 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3086 ;; Parameters:    Size  Location     Type
  3087 ;;  fp              2   37[COMRAM] PTR struct _IO_FILE
  3088 ;;		 -> NULL(0), 
  3089 ;;  buf             2   39[COMRAM] PTR unsigned char 
  3090 ;;		 -> dbuf(32), 
  3091 ;;  p               2   41[COMRAM] int 
  3092 ;; Auto vars:     Size  Location     Type
  3093 ;;  w               2   46[COMRAM] int 
  3094 ;;  i               2   44[COMRAM] int 
  3095 ;; Return value:  Size  Location     Type
  3096 ;;                  2   37[COMRAM] int 
  3097 ;; Registers used:
  3098 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3099 ;; Tracked objects:
  3100 ;;		On entry : 0/0
  3101 ;;		On exit  : 0/0
  3102 ;;		Unchanged: 0/0
  3103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3104 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3105 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3106 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3107 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3108 ;;Total ram usage:       11 bytes
  3109 ;; Hardware stack levels used: 1
  3110 ;; Hardware stack levels required when called: 12
  3111 ;; This function calls:
  3112 ;;		_fputc
  3113 ;;		_fputs
  3114 ;;		_strlen
  3115 ;; This function is called by:
  3116 ;;		_dtoa
  3117 ;; This function uses a non-reentrant model
  3118 ;;
  3119                           
  3120                           	psect	text8
  3121  003774                     __ptext8:
  3122                           	callstack 0
  3123  003774                     _pad:
  3124                           	callstack 12
  3125  003774                     
  3126                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  3127  003774  A03C               	btfss	_flags^0,0,c
  3128  003776  EFBF  F01B         	goto	u5451
  3129  00377A  EFC1  F01B         	goto	u5450
  3130  00377E                     u5451:
  3131  00377E  EFCB  F01B         	goto	l6362
  3132  003782                     u5450:
  3133  003782                     
  3134                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  3135  003782  C028  F01F         	movff	pad@buf,fputs@s
  3136  003786  C029  F020         	movff	pad@buf+1,fputs@s+1
  3137  00378A  C026  F021         	movff	pad@fp,fputs@fp
  3138  00378E  C027  F022         	movff	pad@fp+1,fputs@fp+1
  3139  003792  ECF9  F01E         	call	_fputs	;wreg free
  3140  003796                     l6362:
  3141                           
  3142                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  3143  003796  BE2B               	btfsc	(pad@p+1)^0,7,c
  3144  003798  EFD0  F01B         	goto	u5461
  3145  00379C  EFD2  F01B         	goto	u5460
  3146  0037A0                     u5461:
  3147  0037A0  EFD8  F01B         	goto	l6366
  3148  0037A4                     u5460:
  3149  0037A4  C02A  F02F         	movff	pad@p,pad@w
  3150  0037A8  C02B  F030         	movff	pad@p+1,pad@w+1
  3151  0037AC  EFDC  F01B         	goto	l2106
  3152  0037B0                     l6366:
  3153  0037B0  0E00               	movlw	0
  3154  0037B2  6E30               	movwf	(pad@w+1)^0,c
  3155  0037B4  0E00               	movlw	0
  3156  0037B6  6E2F               	movwf	pad@w^0,c
  3157  0037B8                     l2106:
  3158                           
  3159                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  3160  0037B8  0E00               	movlw	0
  3161  0037BA  6E2E               	movwf	(pad@i+1)^0,c
  3162  0037BC  0E00               	movlw	0
  3163  0037BE  6E2D               	movwf	pad@i^0,c
  3164                           
  3165                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3166  0037C0  EFEE  F01B         	goto	l6372
  3167  0037C4                     l6368:
  3168                           
  3169                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  3170  0037C4  0E00               	movlw	0
  3171  0037C6  6E17               	movwf	(fputc@c+1)^0,c
  3172  0037C8  0E20               	movlw	32
  3173  0037CA  6E16               	movwf	fputc@c^0,c
  3174  0037CC  C026  F018         	movff	pad@fp,fputc@fp
  3175  0037D0  C027  F019         	movff	pad@fp+1,fputc@fp+1
  3176  0037D4  ECCD  F01C         	call	_fputc	;wreg free
  3177  0037D8                     
  3178                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  3179  0037D8  4A2D               	infsnz	pad@i^0,f,c
  3180  0037DA  2A2E               	incf	(pad@i+1)^0,f,c
  3181  0037DC                     l6372:
  3182                           
  3183                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3184  0037DC  502F               	movf	pad@w^0,w,c
  3185  0037DE  5C2D               	subwf	pad@i^0,w,c
  3186  0037E0  502E               	movf	(pad@i+1)^0,w,c
  3187  0037E2  0A80               	xorlw	128
  3188  0037E4  6E2C               	movwf	??_pad^0,c
  3189  0037E6  5030               	movf	(pad@w+1)^0,w,c
  3190  0037E8  0A80               	xorlw	128
  3191  0037EA  582C               	subwfb	??_pad^0,w,c
  3192  0037EC  A0D8               	btfss	status,0,c
  3193  0037EE  EFFB  F01B         	goto	u5471
  3194  0037F2  EFFD  F01B         	goto	u5470
  3195  0037F6                     u5471:
  3196  0037F6  EFE2  F01B         	goto	l6368
  3197  0037FA                     u5470:
  3198  0037FA                     
  3199                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  3200  0037FA  B03C               	btfsc	_flags^0,0,c
  3201  0037FC  EF02  F01C         	goto	u5481
  3202  003800  EF04  F01C         	goto	u5480
  3203  003804                     u5481:
  3204  003804  EF0E  F01C         	goto	l6376
  3205  003808                     u5480:
  3206  003808                     
  3207                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  3208  003808  C028  F01F         	movff	pad@buf,fputs@s
  3209  00380C  C029  F020         	movff	pad@buf+1,fputs@s+1
  3210  003810  C026  F021         	movff	pad@fp,fputs@fp
  3211  003814  C027  F022         	movff	pad@fp+1,fputs@fp+1
  3212  003818  ECF9  F01E         	call	_fputs	;wreg free
  3213  00381C                     l6376:
  3214                           
  3215                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  3216  00381C  C028  F014         	movff	pad@buf,strlen@s
  3217  003820  C029  F015         	movff	pad@buf+1,strlen@s+1
  3218  003824  EC5D  F01F         	call	_strlen	;wreg free
  3219  003828  502F               	movf	pad@w^0,w,c
  3220  00382A  2414               	addwf	?_strlen^0,w,c
  3221  00382C  6E26               	movwf	?_pad^0,c
  3222  00382E  5030               	movf	(pad@w+1)^0,w,c
  3223  003830  2015               	addwfc	(?_strlen+1)^0,w,c
  3224  003832  6E27               	movwf	(?_pad+1)^0,c
  3225  003834  0012               	return		;funcret
  3226  003836                     __end_of_pad:
  3227                           	callstack 0
  3228                           
  3229 ;; *************** function _strlen *****************
  3230 ;; Defined at:
  3231 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  3232 ;; Parameters:    Size  Location     Type
  3233 ;;  s               2   19[COMRAM] PTR const unsigned char 
  3234 ;;		 -> dbuf(32), 
  3235 ;; Auto vars:     Size  Location     Type
  3236 ;;  a               2   21[COMRAM] PTR const unsigned char 
  3237 ;;		 -> dbuf(32), 
  3238 ;; Return value:  Size  Location     Type
  3239 ;;                  2   19[COMRAM] unsigned int 
  3240 ;; Registers used:
  3241 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3242 ;; Tracked objects:
  3243 ;;		On entry : 0/0
  3244 ;;		On exit  : 0/0
  3245 ;;		Unchanged: 0/0
  3246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3247 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3248 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3250 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3251 ;;Total ram usage:        4 bytes
  3252 ;; Hardware stack levels used: 1
  3253 ;; Hardware stack levels required when called: 8
  3254 ;; This function calls:
  3255 ;;		Nothing
  3256 ;; This function is called by:
  3257 ;;		_pad
  3258 ;; This function uses a non-reentrant model
  3259 ;;
  3260                           
  3261                           	psect	text9
  3262  003EBA                     __ptext9:
  3263                           	callstack 0
  3264  003EBA                     _strlen:
  3265                           	callstack 15
  3266  003EBA  C014  F016         	movff	strlen@s,strlen@a
  3267  003EBE  C015  F017         	movff	strlen@s+1,strlen@a+1
  3268  003EC2  EF65  F01F         	goto	l6272
  3269  003EC6                     l6270:
  3270  003EC6  4A14               	infsnz	strlen@s^0,f,c
  3271  003EC8  2A15               	incf	(strlen@s+1)^0,f,c
  3272  003ECA                     l6272:
  3273  003ECA  0060  F053  FFD9   	movff	strlen@s,fsr2l
  3274  003ED0  0060  F057  FFDA   	movff	strlen@s+1,fsr2h
  3275  003ED6  50DF               	movf	indf2,w,c
  3276  003ED8  A4D8               	btfss	status,2,c
  3277  003EDA  EF71  F01F         	goto	u5311
  3278  003EDE  EF73  F01F         	goto	u5310
  3279  003EE2                     u5311:
  3280  003EE2  EF63  F01F         	goto	l6270
  3281  003EE6                     u5310:
  3282  003EE6  5016               	movf	strlen@a^0,w,c
  3283  003EE8  5C14               	subwf	strlen@s^0,w,c
  3284  003EEA  6E14               	movwf	?_strlen^0,c
  3285  003EEC  5017               	movf	(strlen@a+1)^0,w,c
  3286  003EEE  5815               	subwfb	(strlen@s+1)^0,w,c
  3287  003EF0  6E15               	movwf	(?_strlen+1)^0,c
  3288  003EF2  0012               	return		;funcret
  3289  003EF4                     __end_of_strlen:
  3290                           	callstack 0
  3291                           
  3292 ;; *************** function _fputs *****************
  3293 ;; Defined at:
  3294 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  3295 ;; Parameters:    Size  Location     Type
  3296 ;;  s               2   30[COMRAM] PTR const unsigned char 
  3297 ;;		 -> dbuf(32), 
  3298 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  3299 ;;		 -> NULL(0), 
  3300 ;; Auto vars:     Size  Location     Type
  3301 ;;  i               2   35[COMRAM] int 
  3302 ;;  c               1   34[COMRAM] unsigned char 
  3303 ;; Return value:  Size  Location     Type
  3304 ;;                  2   30[COMRAM] int 
  3305 ;; Registers used:
  3306 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3307 ;; Tracked objects:
  3308 ;;		On entry : 0/0
  3309 ;;		On exit  : 0/0
  3310 ;;		Unchanged: 0/0
  3311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3312 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3313 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3315 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3316 ;;Total ram usage:        7 bytes
  3317 ;; Hardware stack levels used: 1
  3318 ;; Hardware stack levels required when called: 11
  3319 ;; This function calls:
  3320 ;;		_fputc
  3321 ;; This function is called by:
  3322 ;;		_pad
  3323 ;; This function uses a non-reentrant model
  3324 ;;
  3325                           
  3326                           	psect	text10
  3327  003DF2                     __ptext10:
  3328                           	callstack 0
  3329  003DF2                     _fputs:
  3330                           	callstack 12
  3331  003DF2  0E00               	movlw	0
  3332  003DF4  6E25               	movwf	(fputs@i+1)^0,c
  3333  003DF6  0E00               	movlw	0
  3334  003DF8  6E24               	movwf	fputs@i^0,c
  3335  003DFA  EF0A  F01F         	goto	l6266
  3336  003DFE                     l6262:
  3337  003DFE  C023  F016         	movff	fputs@c,fputc@c
  3338  003E02  6A17               	clrf	(fputc@c+1)^0,c
  3339  003E04  C021  F018         	movff	fputs@fp,fputc@fp
  3340  003E08  C022  F019         	movff	fputs@fp+1,fputc@fp+1
  3341  003E0C  ECCD  F01C         	call	_fputc	;wreg free
  3342  003E10  4A24               	infsnz	fputs@i^0,f,c
  3343  003E12  2A25               	incf	(fputs@i+1)^0,f,c
  3344  003E14                     l6266:
  3345  003E14  5024               	movf	fputs@i^0,w,c
  3346  003E16  241F               	addwf	fputs@s^0,w,c
  3347  003E18  6ED9               	movwf	fsr2l,c
  3348  003E1A  5025               	movf	(fputs@i+1)^0,w,c
  3349  003E1C  2020               	addwfc	(fputs@s+1)^0,w,c
  3350  003E1E  6EDA               	movwf	fsr2h,c
  3351  003E20  50DF               	movf	indf2,w,c
  3352  003E22  6E23               	movwf	fputs@c^0,c
  3353  003E24  5023               	movf	fputs@c^0,w,c
  3354  003E26  A4D8               	btfss	status,2,c
  3355  003E28  EF18  F01F         	goto	u5301
  3356  003E2C  EF1A  F01F         	goto	u5300
  3357  003E30                     u5301:
  3358  003E30  EFFF  F01E         	goto	l6262
  3359  003E34                     u5300:
  3360  003E34  0012               	return		;funcret
  3361  003E36                     __end_of_fputs:
  3362                           	callstack 0
  3363                           
  3364 ;; *************** function _fputc *****************
  3365 ;; Defined at:
  3366 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  3367 ;; Parameters:    Size  Location     Type
  3368 ;;  c               2   21[COMRAM] int 
  3369 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
  3370 ;;		 -> NULL(0), 
  3371 ;; Auto vars:     Size  Location     Type
  3372 ;;		None
  3373 ;; Return value:  Size  Location     Type
  3374 ;;                  2   21[COMRAM] int 
  3375 ;; Registers used:
  3376 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3377 ;; Tracked objects:
  3378 ;;		On entry : 0/0
  3379 ;;		On exit  : 0/0
  3380 ;;		Unchanged: 0/0
  3381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3382 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3384 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3385 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3386 ;;Total ram usage:        9 bytes
  3387 ;; Hardware stack levels used: 1
  3388 ;; Hardware stack levels required when called: 10
  3389 ;; This function calls:
  3390 ;;		_putch
  3391 ;; This function is called by:
  3392 ;;		_pad
  3393 ;;		_vfpfcnvrt
  3394 ;;		_fputs
  3395 ;; This function uses a non-reentrant model
  3396 ;;
  3397                           
  3398                           	psect	text11
  3399  00399A                     __ptext11:
  3400                           	callstack 0
  3401  00399A                     _fputc:
  3402                           	callstack 15
  3403  00399A  5018               	movf	fputc@fp^0,w,c
  3404  00399C  1019               	iorwf	(fputc@fp+1)^0,w,c
  3405  00399E  B4D8               	btfsc	status,2,c
  3406  0039A0  EFD4  F01C         	goto	u5261
  3407  0039A4  EFD6  F01C         	goto	u5260
  3408  0039A8                     u5261:
  3409  0039A8  EFDF  F01C         	goto	l6250
  3410  0039AC                     u5260:
  3411  0039AC  5018               	movf	fputc@fp^0,w,c
  3412  0039AE  1019               	iorwf	(fputc@fp+1)^0,w,c
  3413  0039B0  A4D8               	btfss	status,2,c
  3414  0039B2  EFDD  F01C         	goto	u5271
  3415  0039B6  EFDF  F01C         	goto	u5270
  3416  0039BA                     u5271:
  3417  0039BA  EFE4  F01C         	goto	l6252
  3418  0039BE                     u5270:
  3419  0039BE                     l6250:
  3420  0039BE  5016               	movf	fputc@c^0,w,c
  3421  0039C0  EC82  F022         	call	_putch
  3422  0039C4  EF17  F01D         	goto	l2170
  3423  0039C8                     l6252:
  3424  0039C8  EE20 F004          	lfsr	2,4
  3425  0039CC  5018               	movf	fputc@fp^0,w,c
  3426  0039CE  26D9               	addwf	fsr2l,f,c
  3427  0039D0  5019               	movf	(fputc@fp+1)^0,w,c
  3428  0039D2  22DA               	addwfc	fsr2h,f,c
  3429  0039D4  50DE               	movf	postinc2,w,c
  3430  0039D6  10DE               	iorwf	postinc2,w,c
  3431  0039D8  B4D8               	btfsc	status,2,c
  3432  0039DA  EFF1  F01C         	goto	u5281
  3433  0039DE  EFF3  F01C         	goto	u5280
  3434  0039E2                     u5281:
  3435  0039E2  EF0E  F01D         	goto	l6256
  3436  0039E6                     u5280:
  3437  0039E6  EE20 F004          	lfsr	2,4
  3438  0039EA  5018               	movf	fputc@fp^0,w,c
  3439  0039EC  26D9               	addwf	fsr2l,f,c
  3440  0039EE  5019               	movf	(fputc@fp+1)^0,w,c
  3441  0039F0  22DA               	addwfc	fsr2h,f,c
  3442  0039F2  EE10 F002          	lfsr	1,2
  3443  0039F6  5018               	movf	fputc@fp^0,w,c
  3444  0039F8  26E1               	addwf	fsr1l,f,c
  3445  0039FA  5019               	movf	(fputc@fp+1)^0,w,c
  3446  0039FC  22E2               	addwfc	fsr1h,f,c
  3447  0039FE  50DE               	movf	postinc2,w,c
  3448  003A00  5CE6               	subwf	postinc1,w,c
  3449  003A02  50E6               	movf	postinc1,w,c
  3450  003A04  0A80               	xorlw	128
  3451  003A06  6E1E               	movwf	(??_fputc+4)^0,c
  3452  003A08  50DE               	movf	postinc2,w,c
  3453  003A0A  0A80               	xorlw	128
  3454  003A0C  581E               	subwfb	(??_fputc+4)^0,w,c
  3455  003A0E  B0D8               	btfsc	status,0,c
  3456  003A10  EF0C  F01D         	goto	u5291
  3457  003A14  EF0E  F01D         	goto	u5290
  3458  003A18                     u5291:
  3459  003A18  EF17  F01D         	goto	l2170
  3460  003A1C                     u5290:
  3461  003A1C                     l6256:
  3462  003A1C  EE20 F002          	lfsr	2,2
  3463  003A20  5018               	movf	fputc@fp^0,w,c
  3464  003A22  26D9               	addwf	fsr2l,f,c
  3465  003A24  5019               	movf	(fputc@fp+1)^0,w,c
  3466  003A26  22DA               	addwfc	fsr2h,f,c
  3467  003A28  2ADE               	incf	postinc2,f,c
  3468  003A2A  0E00               	movlw	0
  3469  003A2C  22DD               	addwfc	postdec2,f,c
  3470  003A2E                     l2170:
  3471  003A2E  0012               	return		;funcret
  3472  003A30                     __end_of_fputc:
  3473                           	callstack 0
  3474                           
  3475 ;; *************** function _putch *****************
  3476 ;; Defined at:
  3477 ;;		line 230 in file "mcc_generated_files/uart1.c"
  3478 ;; Parameters:    Size  Location     Type
  3479 ;;  txData          1    wreg     unsigned char 
  3480 ;; Auto vars:     Size  Location     Type
  3481 ;;  txData          1   20[COMRAM] unsigned char 
  3482 ;; Return value:  Size  Location     Type
  3483 ;;                  1    wreg      void 
  3484 ;; Registers used:
  3485 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3486 ;; Tracked objects:
  3487 ;;		On entry : 0/0
  3488 ;;		On exit  : 0/0
  3489 ;;		Unchanged: 0/0
  3490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3492 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3494 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3495 ;;Total ram usage:        1 bytes
  3496 ;; Hardware stack levels used: 1
  3497 ;; Hardware stack levels required when called: 9
  3498 ;; This function calls:
  3499 ;;		_UART1_Write
  3500 ;; This function is called by:
  3501 ;;		_fputc
  3502 ;; This function uses a non-reentrant model
  3503 ;;
  3504                           
  3505                           	psect	text12
  3506  004504                     __ptext12:
  3507                           	callstack 0
  3508  004504                     _putch:
  3509                           	callstack 15
  3510                           
  3511                           ;incstack = 0
  3512                           ;putch@txData stored from wreg
  3513  004504  6E15               	movwf	putch@txData^0,c
  3514  004506                     
  3515                           ;mcc_generated_files/uart1.c: 230: void putch(char txData);mcc_generated_files/uart1.c: 
      +                          231: {;mcc_generated_files/uart1.c: 232:     UART1_Write(txData);
  3516  004506  5015               	movf	putch@txData^0,w,c
  3517  004508  ECDE  F01D         	call	_UART1_Write
  3518  00450C  0012               	return		;funcret
  3519  00450E                     __end_of_putch:
  3520                           	callstack 0
  3521                           
  3522 ;; *************** function _UART1_Write *****************
  3523 ;; Defined at:
  3524 ;;		line 202 in file "mcc_generated_files/uart1.c"
  3525 ;; Parameters:    Size  Location     Type
  3526 ;;  txData          1    wreg     unsigned char 
  3527 ;; Auto vars:     Size  Location     Type
  3528 ;;  txData          1   19[COMRAM] unsigned char 
  3529 ;; Return value:  Size  Location     Type
  3530 ;;                  1    wreg      void 
  3531 ;; Registers used:
  3532 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3533 ;; Tracked objects:
  3534 ;;		On entry : 0/0
  3535 ;;		On exit  : 0/0
  3536 ;;		Unchanged: 0/0
  3537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3539 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3541 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3542 ;;Total ram usage:        1 bytes
  3543 ;; Hardware stack levels used: 1
  3544 ;; Hardware stack levels required when called: 8
  3545 ;; This function calls:
  3546 ;;		Nothing
  3547 ;; This function is called by:
  3548 ;;		_putch
  3549 ;; This function uses a non-reentrant model
  3550 ;;
  3551                           
  3552                           	psect	text13
  3553  003BBC                     __ptext13:
  3554                           	callstack 0
  3555  003BBC                     _UART1_Write:
  3556                           	callstack 15
  3557                           
  3558                           ;incstack = 0
  3559                           ;UART1_Write@txData stored from wreg
  3560  003BBC  6E14               	movwf	UART1_Write@txData^0,c
  3561  003BBE                     l6228:
  3562                           
  3563                           ;mcc_generated_files/uart1.c: 204:     while(0 == uart1TxBufferRemaining)
  3564  003BBE  504C               	movf	_uart1TxBufferRemaining^0,w,c	;volatile
  3565  003BC0  B4D8               	btfsc	status,2,c
  3566  003BC2  EFE5  F01D         	goto	u5231
  3567  003BC6  EFE7  F01D         	goto	u5230
  3568  003BCA                     u5231:
  3569  003BCA  EFDF  F01D         	goto	l6228
  3570  003BCE                     u5230:
  3571  003BCE                     
  3572                           ;mcc_generated_files/uart1.c: 208:     if(0 == PIE3bits.U1TXIE)
  3573  003BCE  0139               	movlb	57	; () banked
  3574  003BD0  B993               	btfsc	147,4,b	;volatile
  3575  003BD2  EFED  F01D         	goto	u5241
  3576  003BD6  EFEF  F01D         	goto	u5240
  3577  003BDA                     u5241:
  3578  003BDA  EFF4  F01D         	goto	l309
  3579  003BDE                     u5240:
  3580  003BDE                     
  3581                           ; BSR set to: 57
  3582                           ;mcc_generated_files/uart1.c: 209:     {;mcc_generated_files/uart1.c: 210:         U1TXB
      +                           = txData;
  3583  003BDE  0060  F053  FDEA   	movff	UART1_Write@txData,15850	;volatile
  3584                           
  3585                           ;mcc_generated_files/uart1.c: 211:     }
  3586  003BE4  EF0A  F01E         	goto	l6242
  3587  003BE8                     l309:
  3588                           
  3589                           ; BSR set to: 57
  3590                           ;mcc_generated_files/uart1.c: 213:     {;mcc_generated_files/uart1.c: 214:         PIE3b
      +                          its.U1TXIE = 0;
  3591  003BE8  9993               	bcf	147,4,b	;volatile
  3592  003BEA                     
  3593                           ; BSR set to: 57
  3594                           ;mcc_generated_files/uart1.c: 215:         uart1TxBuffer[uart1TxHead++] = txData;
  3595  003BEA  0E70               	movlw	low _uart1TxBuffer
  3596  003BEC  2447               	addwf	_uart1TxHead^0,w,c	;volatile
  3597  003BEE  6ED9               	movwf	fsr2l,c
  3598  003BF0  6ADA               	clrf	fsr2h,c
  3599  003BF2  0E00               	movlw	high _uart1TxBuffer
  3600  003BF4  22DA               	addwfc	fsr2h,f,c
  3601  003BF6  0060  F053  FFDF   	movff	UART1_Write@txData,indf2
  3602  003BFC                     
  3603                           ; BSR set to: 57
  3604  003BFC  2A47               	incf	_uart1TxHead^0,f,c	;volatile
  3605  003BFE                     
  3606                           ; BSR set to: 57
  3607                           ;mcc_generated_files/uart1.c: 216:         if(sizeof(uart1TxBuffer) <= uart1TxHead)
  3608  003BFE  0E07               	movlw	7
  3609  003C00  6447               	cpfsgt	_uart1TxHead^0,c	;volatile
  3610  003C02  EF05  F01E         	goto	u5251
  3611  003C06  EF07  F01E         	goto	u5250
  3612  003C0A                     u5251:
  3613  003C0A  EF09  F01E         	goto	l6240
  3614  003C0E                     u5250:
  3615  003C0E                     
  3616                           ; BSR set to: 57
  3617                           ;mcc_generated_files/uart1.c: 217:         {;mcc_generated_files/uart1.c: 218:          
      +                             uart1TxHead = 0;
  3618  003C0E  0E00               	movlw	0
  3619  003C10  6E47               	movwf	_uart1TxHead^0,c	;volatile
  3620  003C12                     l6240:
  3621                           
  3622                           ; BSR set to: 57
  3623                           ;mcc_generated_files/uart1.c: 220:         uart1TxBufferRemaining--;
  3624  003C12  064C               	decf	_uart1TxBufferRemaining^0,f,c	;volatile
  3625  003C14                     l6242:
  3626                           
  3627                           ; BSR set to: 57
  3628                           ;mcc_generated_files/uart1.c: 222:     PIE3bits.U1TXIE = 1;
  3629  003C14  8993               	bsf	147,4,b	;volatile
  3630  003C16                     
  3631                           ; BSR set to: 57
  3632  003C16  0012               	return		;funcret
  3633  003C18                     __end_of_UART1_Write:
  3634                           	callstack 0
  3635                           
  3636 ;; *************** function _abs *****************
  3637 ;; Defined at:
  3638 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  3639 ;; Parameters:    Size  Location     Type
  3640 ;;  a               2   37[COMRAM] int 
  3641 ;; Auto vars:     Size  Location     Type
  3642 ;;		None
  3643 ;; Return value:  Size  Location     Type
  3644 ;;                  2   37[COMRAM] int 
  3645 ;; Registers used:
  3646 ;;		wreg, status,2, status,0
  3647 ;; Tracked objects:
  3648 ;;		On entry : 0/0
  3649 ;;		On exit  : 0/0
  3650 ;;		Unchanged: 0/0
  3651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3652 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3654 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3655 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3656 ;;Total ram usage:        4 bytes
  3657 ;; Hardware stack levels used: 1
  3658 ;; Hardware stack levels required when called: 8
  3659 ;; This function calls:
  3660 ;;		Nothing
  3661 ;; This function is called by:
  3662 ;;		_dtoa
  3663 ;; This function uses a non-reentrant model
  3664 ;;
  3665                           
  3666                           	psect	text14
  3667  003E7A                     __ptext14:
  3668                           	callstack 0
  3669  003E7A                     _abs:
  3670                           	callstack 16
  3671  003E7A  BE27               	btfsc	(abs@a+1)^0,7,c
  3672  003E7C  EF4A  F01F         	goto	u5490
  3673  003E80  5027               	movf	(abs@a+1)^0,w,c
  3674  003E82  E106               	bnz	u5491
  3675  003E84  0426               	decf	abs@a^0,w,c
  3676  003E86  B0D8               	btfsc	status,0,c
  3677  003E88  EF48  F01F         	goto	u5491
  3678  003E8C  EF4A  F01F         	goto	u5490
  3679  003E90                     u5491:
  3680  003E90  EF58  F01F         	goto	l2155
  3681  003E94                     u5490:
  3682  003E94  C026  F028         	movff	abs@a,??_abs
  3683  003E98  C027  F029         	movff	abs@a+1,??_abs+1
  3684  003E9C  1E28               	comf	??_abs^0,f,c
  3685  003E9E  1E29               	comf	(??_abs+1)^0,f,c
  3686  003EA0  4A28               	infsnz	??_abs^0,f,c
  3687  003EA2  2A29               	incf	(??_abs+1)^0,f,c
  3688  003EA4  C028  F026         	movff	??_abs,?_abs
  3689  003EA8  C029  F027         	movff	??_abs+1,?_abs+1
  3690  003EAC  EF5C  F01F         	goto	l2158
  3691  003EB0                     l2155:
  3692  003EB0  C026  F026         	movff	abs@a,?_abs
  3693  003EB4  C027  F027         	movff	abs@a+1,?_abs+1
  3694  003EB8                     l2158:
  3695  003EB8  0012               	return		;funcret
  3696  003EBA                     __end_of_abs:
  3697                           	callstack 0
  3698                           
  3699 ;; *************** function ___aomod *****************
  3700 ;; Defined at:
  3701 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  3702 ;; Parameters:    Size  Location     Type
  3703 ;;  dividend        8   19[COMRAM] long long 
  3704 ;;  divisor         8   27[COMRAM] long long 
  3705 ;; Auto vars:     Size  Location     Type
  3706 ;;  sign            1   36[COMRAM] unsigned char 
  3707 ;;  counter         1   35[COMRAM] unsigned char 
  3708 ;; Return value:  Size  Location     Type
  3709 ;;                  8   19[COMRAM] long long 
  3710 ;; Registers used:
  3711 ;;		wreg, status,2, status,0
  3712 ;; Tracked objects:
  3713 ;;		On entry : 0/0
  3714 ;;		On exit  : 0/0
  3715 ;;		Unchanged: 0/0
  3716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3717 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3718 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3720 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3721 ;;Total ram usage:       18 bytes
  3722 ;; Hardware stack levels used: 1
  3723 ;; Hardware stack levels required when called: 8
  3724 ;; This function calls:
  3725 ;;		Nothing
  3726 ;; This function is called by:
  3727 ;;		_dtoa
  3728 ;; This function uses a non-reentrant model
  3729 ;;
  3730                           
  3731                           	psect	text15
  3732  002D0C                     __ptext15:
  3733                           	callstack 0
  3734  002D0C                     ___aomod:
  3735                           	callstack 16
  3736  002D0C  0E00               	movlw	0
  3737  002D0E  6E25               	movwf	___aomod@sign^0,c
  3738  002D10  BE1B               	btfsc	(___aomod@dividend+7)^0,7,c
  3739  002D12  EF8F  F016         	goto	u5390
  3740  002D16  EF8D  F016         	goto	u5391
  3741  002D1A                     u5391:
  3742  002D1A  EFA1  F016         	goto	l6330
  3743  002D1E                     u5390:
  3744  002D1E  1E1B               	comf	(___aomod@dividend+7)^0,f,c
  3745  002D20  1E1A               	comf	(___aomod@dividend+6)^0,f,c
  3746  002D22  1E19               	comf	(___aomod@dividend+5)^0,f,c
  3747  002D24  1E18               	comf	(___aomod@dividend+4)^0,f,c
  3748  002D26  1E17               	comf	(___aomod@dividend+3)^0,f,c
  3749  002D28  1E16               	comf	(___aomod@dividend+2)^0,f,c
  3750  002D2A  1E15               	comf	(___aomod@dividend+1)^0,f,c
  3751  002D2C  6C14               	negf	___aomod@dividend^0,c
  3752  002D2E  0E00               	movlw	0
  3753  002D30  2215               	addwfc	(___aomod@dividend+1)^0,f,c
  3754  002D32  2216               	addwfc	(___aomod@dividend+2)^0,f,c
  3755  002D34  2217               	addwfc	(___aomod@dividend+3)^0,f,c
  3756  002D36  2218               	addwfc	(___aomod@dividend+4)^0,f,c
  3757  002D38  2219               	addwfc	(___aomod@dividend+5)^0,f,c
  3758  002D3A  221A               	addwfc	(___aomod@dividend+6)^0,f,c
  3759  002D3C  221B               	addwfc	(___aomod@dividend+7)^0,f,c
  3760  002D3E  0E01               	movlw	1
  3761  002D40  6E25               	movwf	___aomod@sign^0,c
  3762  002D42                     l6330:
  3763  002D42  BE23               	btfsc	(___aomod@divisor+7)^0,7,c
  3764  002D44  EFA8  F016         	goto	u5400
  3765  002D48  EFA6  F016         	goto	u5401
  3766  002D4C                     u5401:
  3767  002D4C  EFB8  F016         	goto	l6334
  3768  002D50                     u5400:
  3769  002D50  1E23               	comf	(___aomod@divisor+7)^0,f,c
  3770  002D52  1E22               	comf	(___aomod@divisor+6)^0,f,c
  3771  002D54  1E21               	comf	(___aomod@divisor+5)^0,f,c
  3772  002D56  1E20               	comf	(___aomod@divisor+4)^0,f,c
  3773  002D58  1E1F               	comf	(___aomod@divisor+3)^0,f,c
  3774  002D5A  1E1E               	comf	(___aomod@divisor+2)^0,f,c
  3775  002D5C  1E1D               	comf	(___aomod@divisor+1)^0,f,c
  3776  002D5E  6C1C               	negf	___aomod@divisor^0,c
  3777  002D60  0E00               	movlw	0
  3778  002D62  221D               	addwfc	(___aomod@divisor+1)^0,f,c
  3779  002D64  221E               	addwfc	(___aomod@divisor+2)^0,f,c
  3780  002D66  221F               	addwfc	(___aomod@divisor+3)^0,f,c
  3781  002D68  2220               	addwfc	(___aomod@divisor+4)^0,f,c
  3782  002D6A  2221               	addwfc	(___aomod@divisor+5)^0,f,c
  3783  002D6C  2222               	addwfc	(___aomod@divisor+6)^0,f,c
  3784  002D6E  2223               	addwfc	(___aomod@divisor+7)^0,f,c
  3785  002D70                     l6334:
  3786  002D70  501C               	movf	___aomod@divisor^0,w,c
  3787  002D72  101D               	iorwf	(___aomod@divisor+1)^0,w,c
  3788  002D74  101E               	iorwf	(___aomod@divisor+2)^0,w,c
  3789  002D76  101F               	iorwf	(___aomod@divisor+3)^0,w,c
  3790  002D78  1020               	iorwf	(___aomod@divisor+4)^0,w,c
  3791  002D7A  1021               	iorwf	(___aomod@divisor+5)^0,w,c
  3792  002D7C  1022               	iorwf	(___aomod@divisor+6)^0,w,c
  3793  002D7E  1023               	iorwf	(___aomod@divisor+7)^0,w,c
  3794  002D80  B4D8               	btfsc	status,2,c
  3795  002D82  EFC5  F016         	goto	u5411
  3796  002D86  EFC7  F016         	goto	u5410
  3797  002D8A                     u5411:
  3798  002D8A  EF0F  F017         	goto	l6350
  3799  002D8E                     u5410:
  3800  002D8E  0E01               	movlw	1
  3801  002D90  6E24               	movwf	___aomod@counter^0,c
  3802  002D92  EFD5  F016         	goto	l6340
  3803  002D96                     l6338:
  3804  002D96  90D8               	bcf	status,0,c
  3805  002D98  361C               	rlcf	___aomod@divisor^0,f,c
  3806  002D9A  361D               	rlcf	(___aomod@divisor+1)^0,f,c
  3807  002D9C  361E               	rlcf	(___aomod@divisor+2)^0,f,c
  3808  002D9E  361F               	rlcf	(___aomod@divisor+3)^0,f,c
  3809  002DA0  3620               	rlcf	(___aomod@divisor+4)^0,f,c
  3810  002DA2  3621               	rlcf	(___aomod@divisor+5)^0,f,c
  3811  002DA4  3622               	rlcf	(___aomod@divisor+6)^0,f,c
  3812  002DA6  3623               	rlcf	(___aomod@divisor+7)^0,f,c
  3813  002DA8  2A24               	incf	___aomod@counter^0,f,c
  3814  002DAA                     l6340:
  3815  002DAA  AE23               	btfss	(___aomod@divisor+7)^0,7,c
  3816  002DAC  EFDA  F016         	goto	u5421
  3817  002DB0  EFDC  F016         	goto	u5420
  3818  002DB4                     u5421:
  3819  002DB4  EFCB  F016         	goto	l6338
  3820  002DB8                     u5420:
  3821  002DB8                     l6342:
  3822  002DB8  501C               	movf	___aomod@divisor^0,w,c
  3823  002DBA  5C14               	subwf	___aomod@dividend^0,w,c
  3824  002DBC  501D               	movf	(___aomod@divisor+1)^0,w,c
  3825  002DBE  5815               	subwfb	(___aomod@dividend+1)^0,w,c
  3826  002DC0  501E               	movf	(___aomod@divisor+2)^0,w,c
  3827  002DC2  5816               	subwfb	(___aomod@dividend+2)^0,w,c
  3828  002DC4  501F               	movf	(___aomod@divisor+3)^0,w,c
  3829  002DC6  5817               	subwfb	(___aomod@dividend+3)^0,w,c
  3830  002DC8  5020               	movf	(___aomod@divisor+4)^0,w,c
  3831  002DCA  5818               	subwfb	(___aomod@dividend+4)^0,w,c
  3832  002DCC  5021               	movf	(___aomod@divisor+5)^0,w,c
  3833  002DCE  5819               	subwfb	(___aomod@dividend+5)^0,w,c
  3834  002DD0  5022               	movf	(___aomod@divisor+6)^0,w,c
  3835  002DD2  581A               	subwfb	(___aomod@dividend+6)^0,w,c
  3836  002DD4  5023               	movf	(___aomod@divisor+7)^0,w,c
  3837  002DD6  581B               	subwfb	(___aomod@dividend+7)^0,w,c
  3838  002DD8  A0D8               	btfss	status,0,c
  3839  002DDA  EFF1  F016         	goto	u5431
  3840  002DDE  EFF3  F016         	goto	u5430
  3841  002DE2                     u5431:
  3842  002DE2  EF03  F017         	goto	l6346
  3843  002DE6                     u5430:
  3844  002DE6  501C               	movf	___aomod@divisor^0,w,c
  3845  002DE8  5E14               	subwf	___aomod@dividend^0,f,c
  3846  002DEA  501D               	movf	(___aomod@divisor+1)^0,w,c
  3847  002DEC  5A15               	subwfb	(___aomod@dividend+1)^0,f,c
  3848  002DEE  501E               	movf	(___aomod@divisor+2)^0,w,c
  3849  002DF0  5A16               	subwfb	(___aomod@dividend+2)^0,f,c
  3850  002DF2  501F               	movf	(___aomod@divisor+3)^0,w,c
  3851  002DF4  5A17               	subwfb	(___aomod@dividend+3)^0,f,c
  3852  002DF6  5020               	movf	(___aomod@divisor+4)^0,w,c
  3853  002DF8  5A18               	subwfb	(___aomod@dividend+4)^0,f,c
  3854  002DFA  5021               	movf	(___aomod@divisor+5)^0,w,c
  3855  002DFC  5A19               	subwfb	(___aomod@dividend+5)^0,f,c
  3856  002DFE  5022               	movf	(___aomod@divisor+6)^0,w,c
  3857  002E00  5A1A               	subwfb	(___aomod@dividend+6)^0,f,c
  3858  002E02  5023               	movf	(___aomod@divisor+7)^0,w,c
  3859  002E04  5A1B               	subwfb	(___aomod@dividend+7)^0,f,c
  3860  002E06                     l6346:
  3861  002E06  90D8               	bcf	status,0,c
  3862  002E08  3223               	rrcf	(___aomod@divisor+7)^0,f,c
  3863  002E0A  3222               	rrcf	(___aomod@divisor+6)^0,f,c
  3864  002E0C  3221               	rrcf	(___aomod@divisor+5)^0,f,c
  3865  002E0E  3220               	rrcf	(___aomod@divisor+4)^0,f,c
  3866  002E10  321F               	rrcf	(___aomod@divisor+3)^0,f,c
  3867  002E12  321E               	rrcf	(___aomod@divisor+2)^0,f,c
  3868  002E14  321D               	rrcf	(___aomod@divisor+1)^0,f,c
  3869  002E16  321C               	rrcf	___aomod@divisor^0,f,c
  3870  002E18  2E24               	decfsz	___aomod@counter^0,f,c
  3871  002E1A  EFDC  F016         	goto	l6342
  3872  002E1E                     l6350:
  3873  002E1E  5025               	movf	___aomod@sign^0,w,c
  3874  002E20  B4D8               	btfsc	status,2,c
  3875  002E22  EF15  F017         	goto	u5441
  3876  002E26  EF17  F017         	goto	u5440
  3877  002E2A                     u5441:
  3878  002E2A  EF27  F017         	goto	l6354
  3879  002E2E                     u5440:
  3880  002E2E  1E1B               	comf	(___aomod@dividend+7)^0,f,c
  3881  002E30  1E1A               	comf	(___aomod@dividend+6)^0,f,c
  3882  002E32  1E19               	comf	(___aomod@dividend+5)^0,f,c
  3883  002E34  1E18               	comf	(___aomod@dividend+4)^0,f,c
  3884  002E36  1E17               	comf	(___aomod@dividend+3)^0,f,c
  3885  002E38  1E16               	comf	(___aomod@dividend+2)^0,f,c
  3886  002E3A  1E15               	comf	(___aomod@dividend+1)^0,f,c
  3887  002E3C  6C14               	negf	___aomod@dividend^0,c
  3888  002E3E  0E00               	movlw	0
  3889  002E40  2215               	addwfc	(___aomod@dividend+1)^0,f,c
  3890  002E42  2216               	addwfc	(___aomod@dividend+2)^0,f,c
  3891  002E44  2217               	addwfc	(___aomod@dividend+3)^0,f,c
  3892  002E46  2218               	addwfc	(___aomod@dividend+4)^0,f,c
  3893  002E48  2219               	addwfc	(___aomod@dividend+5)^0,f,c
  3894  002E4A  221A               	addwfc	(___aomod@dividend+6)^0,f,c
  3895  002E4C  221B               	addwfc	(___aomod@dividend+7)^0,f,c
  3896  002E4E                     l6354:
  3897  002E4E  C014  F014         	movff	___aomod@dividend,?___aomod
  3898  002E52  C015  F015         	movff	___aomod@dividend+1,?___aomod+1
  3899  002E56  C016  F016         	movff	___aomod@dividend+2,?___aomod+2
  3900  002E5A  C017  F017         	movff	___aomod@dividend+3,?___aomod+3
  3901  002E5E  C018  F018         	movff	___aomod@dividend+4,?___aomod+4
  3902  002E62  C019  F019         	movff	___aomod@dividend+5,?___aomod+5
  3903  002E66  C01A  F01A         	movff	___aomod@dividend+6,?___aomod+6
  3904  002E6A  C01B  F01B         	movff	___aomod@dividend+7,?___aomod+7
  3905  002E6E  0012               	return		;funcret
  3906  002E70                     __end_of___aomod:
  3907                           	callstack 0
  3908                           
  3909 ;; *************** function ___aodiv *****************
  3910 ;; Defined at:
  3911 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  3912 ;; Parameters:    Size  Location     Type
  3913 ;;  dividend        8   19[COMRAM] long long 
  3914 ;;  divisor         8   27[COMRAM] long long 
  3915 ;; Auto vars:     Size  Location     Type
  3916 ;;  quotient        8   37[COMRAM] long long 
  3917 ;;  sign            1   36[COMRAM] unsigned char 
  3918 ;;  counter         1   35[COMRAM] unsigned char 
  3919 ;; Return value:  Size  Location     Type
  3920 ;;                  8   19[COMRAM] long long 
  3921 ;; Registers used:
  3922 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3923 ;; Tracked objects:
  3924 ;;		On entry : 0/0
  3925 ;;		On exit  : 0/0
  3926 ;;		Unchanged: 0/0
  3927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3928 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3929 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3931 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3932 ;;Total ram usage:       26 bytes
  3933 ;; Hardware stack levels used: 1
  3934 ;; Hardware stack levels required when called: 8
  3935 ;; This function calls:
  3936 ;;		Nothing
  3937 ;; This function is called by:
  3938 ;;		_dtoa
  3939 ;; This function uses a non-reentrant model
  3940 ;;
  3941                           
  3942                           	psect	text16
  3943  002B84                     __ptext16:
  3944                           	callstack 0
  3945  002B84                     ___aodiv:
  3946                           	callstack 16
  3947  002B84  0E00               	movlw	0
  3948  002B86  6E25               	movwf	___aodiv@sign^0,c
  3949  002B88  BE23               	btfsc	(___aodiv@divisor+7)^0,7,c
  3950  002B8A  EFCB  F015         	goto	u5320
  3951  002B8E  EFC9  F015         	goto	u5321
  3952  002B92                     u5321:
  3953  002B92  EFDD  F015         	goto	l6286
  3954  002B96                     u5320:
  3955  002B96  1E23               	comf	(___aodiv@divisor+7)^0,f,c
  3956  002B98  1E22               	comf	(___aodiv@divisor+6)^0,f,c
  3957  002B9A  1E21               	comf	(___aodiv@divisor+5)^0,f,c
  3958  002B9C  1E20               	comf	(___aodiv@divisor+4)^0,f,c
  3959  002B9E  1E1F               	comf	(___aodiv@divisor+3)^0,f,c
  3960  002BA0  1E1E               	comf	(___aodiv@divisor+2)^0,f,c
  3961  002BA2  1E1D               	comf	(___aodiv@divisor+1)^0,f,c
  3962  002BA4  6C1C               	negf	___aodiv@divisor^0,c
  3963  002BA6  0E00               	movlw	0
  3964  002BA8  221D               	addwfc	(___aodiv@divisor+1)^0,f,c
  3965  002BAA  221E               	addwfc	(___aodiv@divisor+2)^0,f,c
  3966  002BAC  221F               	addwfc	(___aodiv@divisor+3)^0,f,c
  3967  002BAE  2220               	addwfc	(___aodiv@divisor+4)^0,f,c
  3968  002BB0  2221               	addwfc	(___aodiv@divisor+5)^0,f,c
  3969  002BB2  2222               	addwfc	(___aodiv@divisor+6)^0,f,c
  3970  002BB4  2223               	addwfc	(___aodiv@divisor+7)^0,f,c
  3971  002BB6  0E01               	movlw	1
  3972  002BB8  6E25               	movwf	___aodiv@sign^0,c
  3973  002BBA                     l6286:
  3974  002BBA  BE1B               	btfsc	(___aodiv@dividend+7)^0,7,c
  3975  002BBC  EFE4  F015         	goto	u5330
  3976  002BC0  EFE2  F015         	goto	u5331
  3977  002BC4                     u5331:
  3978  002BC4  EFF6  F015         	goto	l6292
  3979  002BC8                     u5330:
  3980  002BC8  1E1B               	comf	(___aodiv@dividend+7)^0,f,c
  3981  002BCA  1E1A               	comf	(___aodiv@dividend+6)^0,f,c
  3982  002BCC  1E19               	comf	(___aodiv@dividend+5)^0,f,c
  3983  002BCE  1E18               	comf	(___aodiv@dividend+4)^0,f,c
  3984  002BD0  1E17               	comf	(___aodiv@dividend+3)^0,f,c
  3985  002BD2  1E16               	comf	(___aodiv@dividend+2)^0,f,c
  3986  002BD4  1E15               	comf	(___aodiv@dividend+1)^0,f,c
  3987  002BD6  6C14               	negf	___aodiv@dividend^0,c
  3988  002BD8  0E00               	movlw	0
  3989  002BDA  2215               	addwfc	(___aodiv@dividend+1)^0,f,c
  3990  002BDC  2216               	addwfc	(___aodiv@dividend+2)^0,f,c
  3991  002BDE  2217               	addwfc	(___aodiv@dividend+3)^0,f,c
  3992  002BE0  2218               	addwfc	(___aodiv@dividend+4)^0,f,c
  3993  002BE2  2219               	addwfc	(___aodiv@dividend+5)^0,f,c
  3994  002BE4  221A               	addwfc	(___aodiv@dividend+6)^0,f,c
  3995  002BE6  221B               	addwfc	(___aodiv@dividend+7)^0,f,c
  3996  002BE8  0E01               	movlw	1
  3997  002BEA  1A25               	xorwf	___aodiv@sign^0,f,c
  3998  002BEC                     l6292:
  3999  002BEC  EE20  F026         	lfsr	2,___aodiv@quotient
  4000  002BF0  0E07               	movlw	7
  4001  002BF2                     u5341:
  4002  002BF2  6ADE               	clrf	postinc2,c
  4003  002BF4  06E8               	decf	wreg,f,c
  4004  002BF6  E2FD               	bc	u5341
  4005  002BF8  501C               	movf	___aodiv@divisor^0,w,c
  4006  002BFA  101D               	iorwf	(___aodiv@divisor+1)^0,w,c
  4007  002BFC  101E               	iorwf	(___aodiv@divisor+2)^0,w,c
  4008  002BFE  101F               	iorwf	(___aodiv@divisor+3)^0,w,c
  4009  002C00  1020               	iorwf	(___aodiv@divisor+4)^0,w,c
  4010  002C02  1021               	iorwf	(___aodiv@divisor+5)^0,w,c
  4011  002C04  1022               	iorwf	(___aodiv@divisor+6)^0,w,c
  4012  002C06  1023               	iorwf	(___aodiv@divisor+7)^0,w,c
  4013  002C08  B4D8               	btfsc	status,2,c
  4014  002C0A  EF09  F016         	goto	u5351
  4015  002C0E  EF0B  F016         	goto	u5350
  4016  002C12                     u5351:
  4017  002C12  EF5D  F016         	goto	l6314
  4018  002C16                     u5350:
  4019  002C16  0E01               	movlw	1
  4020  002C18  6E24               	movwf	___aodiv@counter^0,c
  4021  002C1A  EF19  F016         	goto	l6300
  4022  002C1E                     l6298:
  4023  002C1E  90D8               	bcf	status,0,c
  4024  002C20  361C               	rlcf	___aodiv@divisor^0,f,c
  4025  002C22  361D               	rlcf	(___aodiv@divisor+1)^0,f,c
  4026  002C24  361E               	rlcf	(___aodiv@divisor+2)^0,f,c
  4027  002C26  361F               	rlcf	(___aodiv@divisor+3)^0,f,c
  4028  002C28  3620               	rlcf	(___aodiv@divisor+4)^0,f,c
  4029  002C2A  3621               	rlcf	(___aodiv@divisor+5)^0,f,c
  4030  002C2C  3622               	rlcf	(___aodiv@divisor+6)^0,f,c
  4031  002C2E  3623               	rlcf	(___aodiv@divisor+7)^0,f,c
  4032  002C30  2A24               	incf	___aodiv@counter^0,f,c
  4033  002C32                     l6300:
  4034  002C32  AE23               	btfss	(___aodiv@divisor+7)^0,7,c
  4035  002C34  EF1E  F016         	goto	u5361
  4036  002C38  EF20  F016         	goto	u5360
  4037  002C3C                     u5361:
  4038  002C3C  EF0F  F016         	goto	l6298
  4039  002C40                     u5360:
  4040  002C40                     l6302:
  4041  002C40  90D8               	bcf	status,0,c
  4042  002C42  3626               	rlcf	___aodiv@quotient^0,f,c
  4043  002C44  3627               	rlcf	(___aodiv@quotient+1)^0,f,c
  4044  002C46  3628               	rlcf	(___aodiv@quotient+2)^0,f,c
  4045  002C48  3629               	rlcf	(___aodiv@quotient+3)^0,f,c
  4046  002C4A  362A               	rlcf	(___aodiv@quotient+4)^0,f,c
  4047  002C4C  362B               	rlcf	(___aodiv@quotient+5)^0,f,c
  4048  002C4E  362C               	rlcf	(___aodiv@quotient+6)^0,f,c
  4049  002C50  362D               	rlcf	(___aodiv@quotient+7)^0,f,c
  4050  002C52  501C               	movf	___aodiv@divisor^0,w,c
  4051  002C54  5C14               	subwf	___aodiv@dividend^0,w,c
  4052  002C56  501D               	movf	(___aodiv@divisor+1)^0,w,c
  4053  002C58  5815               	subwfb	(___aodiv@dividend+1)^0,w,c
  4054  002C5A  501E               	movf	(___aodiv@divisor+2)^0,w,c
  4055  002C5C  5816               	subwfb	(___aodiv@dividend+2)^0,w,c
  4056  002C5E  501F               	movf	(___aodiv@divisor+3)^0,w,c
  4057  002C60  5817               	subwfb	(___aodiv@dividend+3)^0,w,c
  4058  002C62  5020               	movf	(___aodiv@divisor+4)^0,w,c
  4059  002C64  5818               	subwfb	(___aodiv@dividend+4)^0,w,c
  4060  002C66  5021               	movf	(___aodiv@divisor+5)^0,w,c
  4061  002C68  5819               	subwfb	(___aodiv@dividend+5)^0,w,c
  4062  002C6A  5022               	movf	(___aodiv@divisor+6)^0,w,c
  4063  002C6C  581A               	subwfb	(___aodiv@dividend+6)^0,w,c
  4064  002C6E  5023               	movf	(___aodiv@divisor+7)^0,w,c
  4065  002C70  581B               	subwfb	(___aodiv@dividend+7)^0,w,c
  4066  002C72  A0D8               	btfss	status,0,c
  4067  002C74  EF3E  F016         	goto	u5371
  4068  002C78  EF40  F016         	goto	u5370
  4069  002C7C                     u5371:
  4070  002C7C  EF51  F016         	goto	l6310
  4071  002C80                     u5370:
  4072  002C80  501C               	movf	___aodiv@divisor^0,w,c
  4073  002C82  5E14               	subwf	___aodiv@dividend^0,f,c
  4074  002C84  501D               	movf	(___aodiv@divisor+1)^0,w,c
  4075  002C86  5A15               	subwfb	(___aodiv@dividend+1)^0,f,c
  4076  002C88  501E               	movf	(___aodiv@divisor+2)^0,w,c
  4077  002C8A  5A16               	subwfb	(___aodiv@dividend+2)^0,f,c
  4078  002C8C  501F               	movf	(___aodiv@divisor+3)^0,w,c
  4079  002C8E  5A17               	subwfb	(___aodiv@dividend+3)^0,f,c
  4080  002C90  5020               	movf	(___aodiv@divisor+4)^0,w,c
  4081  002C92  5A18               	subwfb	(___aodiv@dividend+4)^0,f,c
  4082  002C94  5021               	movf	(___aodiv@divisor+5)^0,w,c
  4083  002C96  5A19               	subwfb	(___aodiv@dividend+5)^0,f,c
  4084  002C98  5022               	movf	(___aodiv@divisor+6)^0,w,c
  4085  002C9A  5A1A               	subwfb	(___aodiv@dividend+6)^0,f,c
  4086  002C9C  5023               	movf	(___aodiv@divisor+7)^0,w,c
  4087  002C9E  5A1B               	subwfb	(___aodiv@dividend+7)^0,f,c
  4088  002CA0  8026               	bsf	___aodiv@quotient^0,0,c
  4089  002CA2                     l6310:
  4090  002CA2  90D8               	bcf	status,0,c
  4091  002CA4  3223               	rrcf	(___aodiv@divisor+7)^0,f,c
  4092  002CA6  3222               	rrcf	(___aodiv@divisor+6)^0,f,c
  4093  002CA8  3221               	rrcf	(___aodiv@divisor+5)^0,f,c
  4094  002CAA  3220               	rrcf	(___aodiv@divisor+4)^0,f,c
  4095  002CAC  321F               	rrcf	(___aodiv@divisor+3)^0,f,c
  4096  002CAE  321E               	rrcf	(___aodiv@divisor+2)^0,f,c
  4097  002CB0  321D               	rrcf	(___aodiv@divisor+1)^0,f,c
  4098  002CB2  321C               	rrcf	___aodiv@divisor^0,f,c
  4099  002CB4  2E24               	decfsz	___aodiv@counter^0,f,c
  4100  002CB6  EF20  F016         	goto	l6302
  4101  002CBA                     l6314:
  4102  002CBA  5025               	movf	___aodiv@sign^0,w,c
  4103  002CBC  B4D8               	btfsc	status,2,c
  4104  002CBE  EF63  F016         	goto	u5381
  4105  002CC2  EF65  F016         	goto	u5380
  4106  002CC6                     u5381:
  4107  002CC6  EF75  F016         	goto	l6318
  4108  002CCA                     u5380:
  4109  002CCA  1E2D               	comf	(___aodiv@quotient+7)^0,f,c
  4110  002CCC  1E2C               	comf	(___aodiv@quotient+6)^0,f,c
  4111  002CCE  1E2B               	comf	(___aodiv@quotient+5)^0,f,c
  4112  002CD0  1E2A               	comf	(___aodiv@quotient+4)^0,f,c
  4113  002CD2  1E29               	comf	(___aodiv@quotient+3)^0,f,c
  4114  002CD4  1E28               	comf	(___aodiv@quotient+2)^0,f,c
  4115  002CD6  1E27               	comf	(___aodiv@quotient+1)^0,f,c
  4116  002CD8  6C26               	negf	___aodiv@quotient^0,c
  4117  002CDA  0E00               	movlw	0
  4118  002CDC  2227               	addwfc	(___aodiv@quotient+1)^0,f,c
  4119  002CDE  2228               	addwfc	(___aodiv@quotient+2)^0,f,c
  4120  002CE0  2229               	addwfc	(___aodiv@quotient+3)^0,f,c
  4121  002CE2  222A               	addwfc	(___aodiv@quotient+4)^0,f,c
  4122  002CE4  222B               	addwfc	(___aodiv@quotient+5)^0,f,c
  4123  002CE6  222C               	addwfc	(___aodiv@quotient+6)^0,f,c
  4124  002CE8  222D               	addwfc	(___aodiv@quotient+7)^0,f,c
  4125  002CEA                     l6318:
  4126  002CEA  C026  F014         	movff	___aodiv@quotient,?___aodiv
  4127  002CEE  C027  F015         	movff	___aodiv@quotient+1,?___aodiv+1
  4128  002CF2  C028  F016         	movff	___aodiv@quotient+2,?___aodiv+2
  4129  002CF6  C029  F017         	movff	___aodiv@quotient+3,?___aodiv+3
  4130  002CFA  C02A  F018         	movff	___aodiv@quotient+4,?___aodiv+4
  4131  002CFE  C02B  F019         	movff	___aodiv@quotient+5,?___aodiv+5
  4132  002D02  C02C  F01A         	movff	___aodiv@quotient+6,?___aodiv+6
  4133  002D06  C02D  F01B         	movff	___aodiv@quotient+7,?___aodiv+7
  4134  002D0A  0012               	return		;funcret
  4135  002D0C                     __end_of___aodiv:
  4136                           	callstack 0
  4137                           
  4138 ;; *************** function _checkBatt *****************
  4139 ;; Defined at:
  4140 ;;		line 84 in file "main.c"
  4141 ;; Parameters:    Size  Location     Type
  4142 ;;		None
  4143 ;; Auto vars:     Size  Location     Type
  4144 ;;		None
  4145 ;; Return value:  Size  Location     Type
  4146 ;;                  1    wreg      _Bool 
  4147 ;; Registers used:
  4148 ;;		wreg, status,2, status,0, cstack
  4149 ;; Tracked objects:
  4150 ;;		On entry : 0/0
  4151 ;;		On exit  : 0/0
  4152 ;;		Unchanged: 0/0
  4153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4158 ;;Total ram usage:        0 bytes
  4159 ;; Hardware stack levels used: 1
  4160 ;; Hardware stack levels required when called: 10
  4161 ;; This function calls:
  4162 ;;		___flge
  4163 ;;		___xxtofl
  4164 ;;		_getBatteryVoltage
  4165 ;;		_setSteering
  4166 ;; This function is called by:
  4167 ;;		_loop
  4168 ;; This function uses a non-reentrant model
  4169 ;;
  4170                           
  4171                           	psect	text17
  4172  003AC4                     __ptext17:
  4173                           	callstack 0
  4174  003AC4                     _checkBatt:
  4175                           	callstack 19
  4176  003AC4                     
  4177                           ;main.c: 85:     ++battCheckCount;
  4178  003AC4  0100               	movlb	0	; () banked
  4179  003AC6  4B94               	infsnz	_battCheckCount& (0+255),f,b
  4180  003AC8  2B95               	incf	(_battCheckCount+1)& (0+255),f,b
  4181  003ACA                     
  4182                           ; BSR set to: 0
  4183                           ;main.c: 86:     if (battCheckCount > (500)) {
  4184  003ACA  0EF5               	movlw	245
  4185  003ACC  5D94               	subwf	_battCheckCount& (0+255),w,b
  4186  003ACE  0E01               	movlw	1
  4187  003AD0  5995               	subwfb	(_battCheckCount+1)& (0+255),w,b
  4188  003AD2  A0D8               	btfss	status,0,c
  4189  003AD4  EF6E  F01D         	goto	u6621
  4190  003AD8  EF70  F01D         	goto	u6620
  4191  003ADC                     u6621:
  4192  003ADC  EFA8  F01D         	goto	l7076
  4193  003AE0                     u6620:
  4194  003AE0                     
  4195                           ; BSR set to: 0
  4196                           ;main.c: 87:         battCheckCount = 0;
  4197  003AE0  0E00               	movlw	0
  4198  003AE2  6F95               	movwf	(_battCheckCount+1)& (0+255),b
  4199  003AE4  0E00               	movlw	0
  4200  003AE6  6F94               	movwf	_battCheckCount& (0+255),b
  4201  003AE8                     
  4202                           ; BSR set to: 0
  4203                           ;main.c: 88:         getBatteryVoltage();
  4204  003AE8  EC73  F022         	call	_getBatteryVoltage	;wreg free
  4205  003AEC                     
  4206                           ;main.c: 90:         if (BatteryVolt < (6.8) * 409.6f) {
  4207  003AEC  C084  F01C         	movff	_BatteryVolt,___xxtofl@val
  4208  003AF0  C085  F01D         	movff	_BatteryVolt+1,___xxtofl@val+1
  4209  003AF4  6A1E               	clrf	(___xxtofl@val+2)^0,c
  4210  003AF6  6A1F               	clrf	(___xxtofl@val+3)^0,c
  4211  003AF8  0E00               	movlw	0
  4212  003AFA  EC1E  F014         	call	___xxtofl
  4213  003AFE  C01C  F02A         	movff	?___xxtofl,___flge@ff1
  4214  003B02  C01D  F02B         	movff	?___xxtofl+1,___flge@ff1+1
  4215  003B06  C01E  F02C         	movff	?___xxtofl+2,___flge@ff1+2
  4216  003B0A  C01F  F02D         	movff	?___xxtofl+3,___flge@ff1+3
  4217  003B0E  0E7B               	movlw	123
  4218  003B10  6E2E               	movwf	___flge@ff2^0,c
  4219  003B12  0E14               	movlw	20
  4220  003B14  6E2F               	movwf	(___flge@ff2+1)^0,c
  4221  003B16  0E2E               	movlw	46
  4222  003B18  6E30               	movwf	(___flge@ff2+2)^0,c
  4223  003B1A  0E45               	movlw	69
  4224  003B1C  6E31               	movwf	(___flge@ff2+3)^0,c
  4225  003B1E  EC00  F01A         	call	___flge	;wreg free
  4226  003B22  B0D8               	btfsc	status,0,c
  4227  003B24  EF96  F01D         	goto	u6631
  4228  003B28  EF98  F01D         	goto	u6630
  4229  003B2C                     u6631:
  4230  003B2C  EFA8  F01D         	goto	l7076
  4231  003B30                     u6630:
  4232  003B30                     
  4233                           ;main.c: 91:             setSpeed = 0;
  4234  003B30  0E00               	movlw	0
  4235  003B32  0100               	movlb	0	; () banked
  4236  003B34  6F8F               	movwf	(_setSpeed+1)& (0+255),b
  4237  003B36  0E00               	movlw	0
  4238  003B38  6F8E               	movwf	_setSpeed& (0+255),b
  4239  003B3A                     
  4240                           ; BSR set to: 0
  4241                           ;main.c: 92:             setSteering(0, Front);
  4242  003B3A  0E00               	movlw	0
  4243  003B3C  6FD0               	movwf	(setSteering@steering+1)& (0+255),b
  4244  003B3E  0E00               	movlw	0
  4245  003B40  6FCF               	movwf	setSteering@steering& (0+255),b
  4246  003B42  0E03               	movlw	3
  4247  003B44  6FD1               	movwf	setSteering@steeringMode& (0+255),b
  4248  003B46  EC23  F013         	call	_setSteering	;wreg free
  4249  003B4A                     
  4250                           ;main.c: 93:             return 1;
  4251  003B4A  0E01               	movlw	1
  4252  003B4C  EFA9  F01D         	goto	l1261
  4253  003B50                     l7076:
  4254                           
  4255                           ;main.c: 96:     return 0;
  4256  003B50  0E00               	movlw	0
  4257  003B52                     l1261:
  4258  003B52  0012               	return		;funcret
  4259  003B54                     __end_of_checkBatt:
  4260                           	callstack 0
  4261                           
  4262 ;; *************** function _getBatteryVoltage *****************
  4263 ;; Defined at:
  4264 ;;		line 79 in file "main.c"
  4265 ;; Parameters:    Size  Location     Type
  4266 ;;		None
  4267 ;; Auto vars:     Size  Location     Type
  4268 ;;		None
  4269 ;; Return value:  Size  Location     Type
  4270 ;;                  1    wreg      void 
  4271 ;; Registers used:
  4272 ;;		wreg, status,2, status,0, cstack
  4273 ;; Tracked objects:
  4274 ;;		On entry : 0/0
  4275 ;;		On exit  : 0/0
  4276 ;;		Unchanged: 0/0
  4277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4282 ;;Total ram usage:        0 bytes
  4283 ;; Hardware stack levels used: 1
  4284 ;; Hardware stack levels required when called: 9
  4285 ;; This function calls:
  4286 ;;		_ADCC_GetSingleConversion
  4287 ;; This function is called by:
  4288 ;;		_loop
  4289 ;;		_checkBatt
  4290 ;; This function uses a non-reentrant model
  4291 ;;
  4292                           
  4293                           	psect	text18
  4294  0044E6                     __ptext18:
  4295                           	callstack 0
  4296  0044E6                     _getBatteryVoltage:
  4297                           	callstack 20
  4298  0044E6                     
  4299                           ;main.c: 80:     BatteryVolt = ADCC_GetSingleConversion(aiBatt);
  4300  0044E6  0E22               	movlw	34
  4301  0044E8  ECA6  F020         	call	_ADCC_GetSingleConversion
  4302  0044EC  C014  F084         	movff	?_ADCC_GetSingleConversion,_BatteryVolt
  4303  0044F0  C015  F085         	movff	?_ADCC_GetSingleConversion+1,_BatteryVolt+1
  4304  0044F4  0012               	return		;funcret
  4305  0044F6                     __end_of_getBatteryVoltage:
  4306                           	callstack 0
  4307                           
  4308 ;; *************** function _ADCC_GetSingleConversion *****************
  4309 ;; Defined at:
  4310 ;;		line 137 in file "mcc_generated_files/adcc.c"
  4311 ;; Parameters:    Size  Location     Type
  4312 ;;  channel         1    wreg     enum E16058
  4313 ;; Auto vars:     Size  Location     Type
  4314 ;;  channel         1   23[COMRAM] enum E16058
  4315 ;; Return value:  Size  Location     Type
  4316 ;;                  2   19[COMRAM] unsigned short 
  4317 ;; Registers used:
  4318 ;;		wreg, status,2, status,0
  4319 ;; Tracked objects:
  4320 ;;		On entry : 0/0
  4321 ;;		On exit  : 0/0
  4322 ;;		Unchanged: 0/0
  4323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4324 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4325 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4326 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4327 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4328 ;;Total ram usage:        5 bytes
  4329 ;; Hardware stack levels used: 1
  4330 ;; Hardware stack levels required when called: 8
  4331 ;; This function calls:
  4332 ;;		Nothing
  4333 ;; This function is called by:
  4334 ;;		_getBatteryVoltage
  4335 ;; This function uses a non-reentrant model
  4336 ;;
  4337                           
  4338                           	psect	text19
  4339  00414C                     __ptext19:
  4340                           	callstack 0
  4341  00414C                     _ADCC_GetSingleConversion:
  4342                           	callstack 20
  4343                           
  4344                           ;incstack = 0
  4345                           ;ADCC_GetSingleConversion@channel stored from wreg
  4346  00414C  6E18               	movwf	ADCC_GetSingleConversion@channel^0,c
  4347  00414E                     
  4348                           ;mcc_generated_files/adcc.c: 137: adc_result_t ADCC_GetSingleConversion(adcc_channel_t c
      +                          hannel);mcc_generated_files/adcc.c: 138: {;mcc_generated_files/adcc.c: 140:     ADPCH = 
      +                          channel;
  4349  00414E  0060  F063  FEF1   	movff	ADCC_GetSingleConversion@channel,16113	;volatile
  4350  004154                     
  4351                           ;mcc_generated_files/adcc.c: 143:     ADCON0bits.ADON = 1;
  4352  004154  013E               	movlb	62	; () banked
  4353  004156  8FF8               	bsf	248,7,b	;volatile
  4354  004158                     
  4355                           ; BSR set to: 62
  4356                           ;mcc_generated_files/adcc.c: 146:     ADCON0bits.ADCONT = 0;
  4357  004158  9DF8               	bcf	248,6,b	;volatile
  4358  00415A                     
  4359                           ; BSR set to: 62
  4360                           ;mcc_generated_files/adcc.c: 149:     ADCON0bits.ADGO = 1;
  4361  00415A  81F8               	bsf	248,0,b	;volatile
  4362  00415C                     l1054:
  4363                           
  4364                           ; BSR set to: 62
  4365                           ;mcc_generated_files/adcc.c: 153:     while (ADCON0bits.ADGO)
  4366  00415C  B1F8               	btfsc	248,0,b	;volatile
  4367  00415E  EFB3  F020         	goto	u3121
  4368  004162  EFB5  F020         	goto	u3120
  4369  004166                     u3121:
  4370  004166  EFAE  F020         	goto	l1054
  4371  00416A                     u3120:
  4372  00416A                     
  4373                           ; BSR set to: 62
  4374                           ;mcc_generated_files/adcc.c: 159:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  4375  00416A  51F0               	movf	240,w,b	;volatile
  4376  00416C  6E17               	movwf	(??_ADCC_GetSingleConversion+1)^0,c
  4377  00416E  6A16               	clrf	??_ADCC_GetSingleConversion^0,c
  4378  004170  51EF               	movf	239,w,b	;volatile
  4379  004172  2416               	addwf	??_ADCC_GetSingleConversion^0,w,c
  4380  004174  6E14               	movwf	?_ADCC_GetSingleConversion^0,c
  4381  004176  0E00               	movlw	0
  4382  004178  2017               	addwfc	(??_ADCC_GetSingleConversion+1)^0,w,c
  4383  00417A  6E15               	movwf	(?_ADCC_GetSingleConversion+1)^0,c
  4384  00417C                     
  4385                           ; BSR set to: 62
  4386  00417C  0012               	return		;funcret
  4387  00417E                     __end_of_ADCC_GetSingleConversion:
  4388                           	callstack 0
  4389                           
  4390 ;; *************** function ___flge *****************
  4391 ;; Defined at:
  4392 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  4393 ;; Parameters:    Size  Location     Type
  4394 ;;  ff1             4   41[COMRAM] unsigned short 
  4395 ;;  ff2             4   45[COMRAM] unsigned short 
  4396 ;; Auto vars:     Size  Location     Type
  4397 ;;		None
  4398 ;; Return value:  Size  Location     Type
  4399 ;;		None               void
  4400 ;; Registers used:
  4401 ;;		wreg, status,2, status,0
  4402 ;; Tracked objects:
  4403 ;;		On entry : 0/0
  4404 ;;		On exit  : 0/0
  4405 ;;		Unchanged: 0/0
  4406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4407 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4409 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4410 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4411 ;;Total ram usage:       12 bytes
  4412 ;; Hardware stack levels used: 1
  4413 ;; Hardware stack levels required when called: 8
  4414 ;; This function calls:
  4415 ;;		Nothing
  4416 ;; This function is called by:
  4417 ;;		_loop
  4418 ;;		_checkBatt
  4419 ;; This function uses a non-reentrant model
  4420 ;;
  4421                           
  4422                           	psect	text20
  4423  003400                     __ptext20:
  4424                           	callstack 0
  4425  003400                     ___flge:
  4426                           	callstack 20
  4427  003400  0E00               	movlw	0
  4428  003402  142A               	andwf	___flge@ff1^0,w,c
  4429  003404  6E32               	movwf	??___flge^0,c
  4430  003406  0E00               	movlw	0
  4431  003408  142B               	andwf	(___flge@ff1+1)^0,w,c
  4432  00340A  6E33               	movwf	(??___flge+1)^0,c
  4433  00340C  0E80               	movlw	128
  4434  00340E  142C               	andwf	(___flge@ff1+2)^0,w,c
  4435  003410  6E34               	movwf	(??___flge+2)^0,c
  4436  003412  0E7F               	movlw	127
  4437  003414  142D               	andwf	(___flge@ff1+3)^0,w,c
  4438  003416  6E35               	movwf	(??___flge+3)^0,c
  4439  003418  5032               	movf	??___flge^0,w,c
  4440  00341A  1033               	iorwf	(??___flge+1)^0,w,c
  4441  00341C  1034               	iorwf	(??___flge+2)^0,w,c
  4442  00341E  1035               	iorwf	(??___flge+3)^0,w,c
  4443  003420  A4D8               	btfss	status,2,c
  4444  003422  EF15  F01A         	goto	u4361
  4445  003426  EF17  F01A         	goto	u4360
  4446  00342A                     u4361:
  4447  00342A  EF1F  F01A         	goto	l5416
  4448  00342E                     u4360:
  4449  00342E  0E00               	movlw	0
  4450  003430  6E2A               	movwf	___flge@ff1^0,c
  4451  003432  0E00               	movlw	0
  4452  003434  6E2B               	movwf	(___flge@ff1+1)^0,c
  4453  003436  0E00               	movlw	0
  4454  003438  6E2C               	movwf	(___flge@ff1+2)^0,c
  4455  00343A  0E00               	movlw	0
  4456  00343C  6E2D               	movwf	(___flge@ff1+3)^0,c
  4457  00343E                     l5416:
  4458  00343E  0E00               	movlw	0
  4459  003440  142E               	andwf	___flge@ff2^0,w,c
  4460  003442  6E32               	movwf	??___flge^0,c
  4461  003444  0E00               	movlw	0
  4462  003446  142F               	andwf	(___flge@ff2+1)^0,w,c
  4463  003448  6E33               	movwf	(??___flge+1)^0,c
  4464  00344A  0E80               	movlw	128
  4465  00344C  1430               	andwf	(___flge@ff2+2)^0,w,c
  4466  00344E  6E34               	movwf	(??___flge+2)^0,c
  4467  003450  0E7F               	movlw	127
  4468  003452  1431               	andwf	(___flge@ff2+3)^0,w,c
  4469  003454  6E35               	movwf	(??___flge+3)^0,c
  4470  003456  5032               	movf	??___flge^0,w,c
  4471  003458  1033               	iorwf	(??___flge+1)^0,w,c
  4472  00345A  1034               	iorwf	(??___flge+2)^0,w,c
  4473  00345C  1035               	iorwf	(??___flge+3)^0,w,c
  4474  00345E  A4D8               	btfss	status,2,c
  4475  003460  EF34  F01A         	goto	u4371
  4476  003464  EF36  F01A         	goto	u4370
  4477  003468                     u4371:
  4478  003468  EF3E  F01A         	goto	l5420
  4479  00346C                     u4370:
  4480  00346C  0E00               	movlw	0
  4481  00346E  6E2E               	movwf	___flge@ff2^0,c
  4482  003470  0E00               	movlw	0
  4483  003472  6E2F               	movwf	(___flge@ff2+1)^0,c
  4484  003474  0E00               	movlw	0
  4485  003476  6E30               	movwf	(___flge@ff2+2)^0,c
  4486  003478  0E00               	movlw	0
  4487  00347A  6E31               	movwf	(___flge@ff2+3)^0,c
  4488  00347C                     l5420:
  4489  00347C  AE2D               	btfss	(___flge@ff1+3)^0,7,c
  4490  00347E  EF43  F01A         	goto	u4381
  4491  003482  EF45  F01A         	goto	u4380
  4492  003486                     u4381:
  4493  003486  EF4E  F01A         	goto	l5424
  4494  00348A                     u4380:
  4495  00348A  6C2A               	negf	___flge@ff1^0,c
  4496  00348C  1E2B               	comf	(___flge@ff1+1)^0,f,c
  4497  00348E  B0D8               	btfsc	status,0,c
  4498  003490  2A2B               	incf	(___flge@ff1+1)^0,f,c
  4499  003492  1E2C               	comf	(___flge@ff1+2)^0,f,c
  4500  003494  B0D8               	btfsc	status,0,c
  4501  003496  2A2C               	incf	(___flge@ff1+2)^0,f,c
  4502  003498  0E80               	movlw	128
  4503  00349A  562D               	subfwb	(___flge@ff1+3)^0,f,c
  4504  00349C                     l5424:
  4505  00349C  AE31               	btfss	(___flge@ff2+3)^0,7,c
  4506  00349E  EF53  F01A         	goto	u4391
  4507  0034A2  EF55  F01A         	goto	u4390
  4508  0034A6                     u4391:
  4509  0034A6  EF5E  F01A         	goto	l1666
  4510  0034AA                     u4390:
  4511  0034AA  6C2E               	negf	___flge@ff2^0,c
  4512  0034AC  1E2F               	comf	(___flge@ff2+1)^0,f,c
  4513  0034AE  B0D8               	btfsc	status,0,c
  4514  0034B0  2A2F               	incf	(___flge@ff2+1)^0,f,c
  4515  0034B2  1E30               	comf	(___flge@ff2+2)^0,f,c
  4516  0034B4  B0D8               	btfsc	status,0,c
  4517  0034B6  2A30               	incf	(___flge@ff2+2)^0,f,c
  4518  0034B8  0E80               	movlw	128
  4519  0034BA  5631               	subfwb	(___flge@ff2+3)^0,f,c
  4520  0034BC                     l1666:
  4521  0034BC  0E00               	movlw	0
  4522  0034BE  1A2A               	xorwf	___flge@ff1^0,f,c
  4523  0034C0  0E00               	movlw	0
  4524  0034C2  1A2B               	xorwf	(___flge@ff1+1)^0,f,c
  4525  0034C4  0E00               	movlw	0
  4526  0034C6  1A2C               	xorwf	(___flge@ff1+2)^0,f,c
  4527  0034C8  0E80               	movlw	128
  4528  0034CA  1A2D               	xorwf	(___flge@ff1+3)^0,f,c
  4529  0034CC  0E00               	movlw	0
  4530  0034CE  1A2E               	xorwf	___flge@ff2^0,f,c
  4531  0034D0  0E00               	movlw	0
  4532  0034D2  1A2F               	xorwf	(___flge@ff2+1)^0,f,c
  4533  0034D4  0E00               	movlw	0
  4534  0034D6  1A30               	xorwf	(___flge@ff2+2)^0,f,c
  4535  0034D8  0E80               	movlw	128
  4536  0034DA  1A31               	xorwf	(___flge@ff2+3)^0,f,c
  4537  0034DC  502E               	movf	___flge@ff2^0,w,c
  4538  0034DE  5C2A               	subwf	___flge@ff1^0,w,c
  4539  0034E0  502F               	movf	(___flge@ff2+1)^0,w,c
  4540  0034E2  582B               	subwfb	(___flge@ff1+1)^0,w,c
  4541  0034E4  5030               	movf	(___flge@ff2+2)^0,w,c
  4542  0034E6  582C               	subwfb	(___flge@ff1+2)^0,w,c
  4543  0034E8  5031               	movf	(___flge@ff2+3)^0,w,c
  4544  0034EA  582D               	subwfb	(___flge@ff1+3)^0,w,c
  4545  0034EC  B0D8               	btfsc	status,0,c
  4546  0034EE  EF7B  F01A         	goto	u4401
  4547  0034F2  EF7D  F01A         	goto	u4400
  4548  0034F6                     u4401:
  4549  0034F6  EF80  F01A         	goto	l5430
  4550  0034FA                     u4400:
  4551  0034FA  90D8               	bcf	status,0,c
  4552  0034FC  EF81  F01A         	goto	l1671
  4553  003500                     l5430:
  4554  003500  80D8               	bsf	status,0,c
  4555  003502                     l1671:
  4556  003502  0012               	return		;funcret
  4557  003504                     __end_of___flge:
  4558                           	callstack 0
  4559                           
  4560 ;; *************** function _calcSteering *****************
  4561 ;; Defined at:
  4562 ;;		line 227 in file "main.c"
  4563 ;; Parameters:    Size  Location     Type
  4564 ;;		None
  4565 ;; Auto vars:     Size  Location     Type
  4566 ;;  delta           2   46[BANK0 ] short 
  4567 ;; Return value:  Size  Location     Type
  4568 ;;                  1    wreg      void 
  4569 ;; Registers used:
  4570 ;;		wreg, status,2, status,0, cstack
  4571 ;; Tracked objects:
  4572 ;;		On entry : 0/0
  4573 ;;		On exit  : 0/0
  4574 ;;		Unchanged: 0/0
  4575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4577 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4578 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4579 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4580 ;;Total ram usage:        4 bytes
  4581 ;; Hardware stack levels used: 1
  4582 ;; Hardware stack levels required when called: 10
  4583 ;; This function calls:
  4584 ;;		_setSteering
  4585 ;; This function is called by:
  4586 ;;		_loop
  4587 ;;		_startAccell
  4588 ;; This function uses a non-reentrant model
  4589 ;;
  4590                           
  4591                           	psect	text21
  4592  0029F0                     __ptext21:
  4593                           	callstack 0
  4594  0029F0                     _calcSteering:
  4595                           	callstack 19
  4596  0029F0                     
  4597                           ;main.c: 228:     int16_t delta = (int16_t) (distLeft - distRight) - (int16_t) ((-5) * 1
      +                          .4142135);
  4598  0029F0  0100               	movlb	0	; () banked
  4599  0029F2  519E               	movf	_distRight& (0+255),w,b	;volatile
  4600  0029F4  5DA2               	subwf	_distLeft& (0+255),w,b	;volatile
  4601  0029F6  6FD8               	movwf	??_calcSteering& (0+255),b
  4602  0029F8  519F               	movf	(_distRight+1)& (0+255),w,b	;volatile
  4603  0029FA  59A3               	subwfb	(_distLeft+1)& (0+255),w,b	;volatile
  4604  0029FC  6FD9               	movwf	(??_calcSteering+1)& (0+255),b
  4605  0029FE  0E07               	movlw	7
  4606  002A00  25D8               	addwf	??_calcSteering& (0+255),w,b
  4607  002A02  6FDA               	movwf	calcSteering@delta& (0+255),b
  4608  002A04  0E00               	movlw	0
  4609  002A06  21D9               	addwfc	(??_calcSteering+1)& (0+255),w,b
  4610  002A08  6FDB               	movwf	(calcSteering@delta+1)& (0+255),b
  4611                           
  4612                           ;main.c: 232:     switch (driveMode) {
  4613  002A0A  EF2F  F015         	goto	l7204
  4614  002A0E                     l1323:
  4615  002A0E                     l7194:
  4616                           
  4617                           ; BSR set to: 0
  4618                           ;main.c: 237:             if (delta > (40)) {
  4619  002A0E  BFDB               	btfsc	(calcSteering@delta+1)& (0+255),7,b
  4620  002A10  EF13  F015         	goto	u6891
  4621  002A14  51DB               	movf	(calcSteering@delta+1)& (0+255),w,b
  4622  002A16  E109               	bnz	u6890
  4623  002A18  0E29               	movlw	41
  4624  002A1A  5DDA               	subwf	calcSteering@delta& (0+255),w,b
  4625  002A1C  A0D8               	btfss	status,0,c
  4626  002A1E  EF13  F015         	goto	u6891
  4627  002A22  EF15  F015         	goto	u6890
  4628  002A26                     u6891:
  4629  002A26  EF1B  F015         	goto	l7198
  4630  002A2A                     u6890:
  4631  002A2A                     
  4632                           ; BSR set to: 0
  4633                           ;main.c: 238:                 delta = (40);
  4634  002A2A  0E00               	movlw	0
  4635  002A2C  6FDB               	movwf	(calcSteering@delta+1)& (0+255),b
  4636  002A2E  0E28               	movlw	40
  4637  002A30  6FDA               	movwf	calcSteering@delta& (0+255),b
  4638                           
  4639                           ;main.c: 239:             } else if (delta < -(40)) {
  4640  002A32  EF9C  F015         	goto	l7228
  4641  002A36                     l7198:
  4642                           
  4643                           ; BSR set to: 0
  4644  002A36  AFDB               	btfss	(calcSteering@delta+1)& (0+255),7,b
  4645  002A38  EF27  F015         	goto	u6901
  4646  002A3C  0ED8               	movlw	216
  4647  002A3E  5DDA               	subwf	calcSteering@delta& (0+255),w,b
  4648  002A40  0EFF               	movlw	255
  4649  002A42  59DB               	subwfb	(calcSteering@delta+1)& (0+255),w,b
  4650  002A44  B0D8               	btfsc	status,0,c
  4651  002A46  EF27  F015         	goto	u6901
  4652  002A4A  EF29  F015         	goto	u6900
  4653  002A4E                     u6901:
  4654  002A4E  EF4C  F015         	goto	l1328
  4655  002A52                     u6900:
  4656  002A52                     
  4657                           ; BSR set to: 0
  4658                           ;main.c: 240:                 delta = -(40);
  4659  002A52  0EFF               	movlw	255
  4660  002A54  6FDB               	movwf	(calcSteering@delta+1)& (0+255),b
  4661  002A56  0ED8               	movlw	216
  4662  002A58  6FDA               	movwf	calcSteering@delta& (0+255),b
  4663  002A5A  EF9C  F015         	goto	l7228
  4664  002A5E                     l7204:
  4665                           
  4666                           ; BSR set to: 0
  4667  002A5E  51A9               	movf	_driveMode& (0+255),w,b
  4668  002A60  6FD8               	movwf	??_calcSteering& (0+255),b
  4669  002A62  6BD9               	clrf	(??_calcSteering+1)& (0+255),b
  4670                           
  4671                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4672                           ; Switch size 1, requested type "simple"
  4673                           ; Number of cases is 1, Range of values is 0 to 0
  4674                           ; switch strategies available:
  4675                           ; Name         Instructions Cycles
  4676                           ; simple_byte            4     3 (average)
  4677                           ;	Chosen strategy is simple_byte
  4678  002A64  51D9               	movf	(??_calcSteering+1)& (0+255),w,b
  4679  002A66  0A00               	xorlw	0	; case 0
  4680  002A68  B4D8               	btfsc	status,2,c
  4681  002A6A  EF39  F015         	goto	l7530
  4682  002A6E  EF9C  F015         	goto	l7228
  4683  002A72                     l7530:
  4684                           
  4685                           ; BSR set to: 0
  4686                           ; Switch size 1, requested type "simple"
  4687                           ; Number of cases is 4, Range of values is 0 to 5
  4688                           ; switch strategies available:
  4689                           ; Name         Instructions Cycles
  4690                           ; simple_byte           13     7 (average)
  4691                           ;	Chosen strategy is simple_byte
  4692  002A72  51D8               	movf	??_calcSteering& (0+255),w,b
  4693  002A74  0A00               	xorlw	0	; case 0
  4694  002A76  B4D8               	btfsc	status,2,c
  4695  002A78  EF07  F015         	goto	l7194
  4696  002A7C  0A01               	xorlw	1	; case 1
  4697  002A7E  B4D8               	btfsc	status,2,c
  4698  002A80  EF07  F015         	goto	l1323
  4699  002A84  0A05               	xorlw	5	; case 4
  4700  002A86  B4D8               	btfsc	status,2,c
  4701  002A88  EF07  F015         	goto	l7194
  4702  002A8C  0A01               	xorlw	1	; case 5
  4703  002A8E  B4D8               	btfsc	status,2,c
  4704  002A90  EF07  F015         	goto	l7194
  4705  002A94  EF9C  F015         	goto	l7228
  4706  002A98                     l1328:
  4707                           
  4708                           ; BSR set to: 0
  4709                           ;main.c: 247:     switch (driveMode) {
  4710  002A98  EF9C  F015         	goto	l7228
  4711  002A9C                     l7206:
  4712                           
  4713                           ; BSR set to: 0
  4714                           ;main.c: 249:             setSteering(delta, Ratio);
  4715  002A9C  C0DA  F0CF         	movff	calcSteering@delta,setSteering@steering
  4716  002AA0  C0DB  F0D0         	movff	calcSteering@delta+1,setSteering@steering+1
  4717  002AA4  0E02               	movlw	2
  4718  002AA6  6FD1               	movwf	setSteering@steeringMode& (0+255),b
  4719  002AA8  EC23  F013         	call	_setSteering	;wreg free
  4720                           
  4721                           ;main.c: 250:             break;
  4722  002AAC  EFC1  F015         	goto	l1342
  4723  002AB0                     l7208:
  4724                           
  4725                           ; BSR set to: 0
  4726                           ;main.c: 252:             setSteering(delta, Front);
  4727  002AB0  C0DA  F0CF         	movff	calcSteering@delta,setSteering@steering
  4728  002AB4  C0DB  F0D0         	movff	calcSteering@delta+1,setSteering@steering+1
  4729  002AB8  0E03               	movlw	3
  4730  002ABA  6FD1               	movwf	setSteering@steeringMode& (0+255),b
  4731  002ABC  EC23  F013         	call	_setSteering	;wreg free
  4732                           
  4733                           ;main.c: 253:             break;
  4734  002AC0  EFC1  F015         	goto	l1342
  4735  002AC4                     l7210:
  4736                           
  4737                           ; BSR set to: 0
  4738                           ;main.c: 255:             setSteering(-(50), Inverted);
  4739  002AC4  0EFF               	movlw	255
  4740  002AC6  6FD0               	movwf	(setSteering@steering+1)& (0+255),b
  4741  002AC8  0ECE               	movlw	206
  4742  002ACA  6FCF               	movwf	setSteering@steering& (0+255),b
  4743  002ACC  0E00               	movlw	0
  4744  002ACE  6FD1               	movwf	setSteering@steeringMode& (0+255),b
  4745  002AD0  EC23  F013         	call	_setSteering	;wreg free
  4746                           
  4747                           ;main.c: 256:             break;
  4748  002AD4  EFC1  F015         	goto	l1342
  4749  002AD8                     l7212:
  4750                           
  4751                           ; BSR set to: 0
  4752                           ;main.c: 258:             setSteering((50), Inverted);
  4753  002AD8  0E00               	movlw	0
  4754  002ADA  6FD0               	movwf	(setSteering@steering+1)& (0+255),b
  4755  002ADC  0E32               	movlw	50
  4756  002ADE  6FCF               	movwf	setSteering@steering& (0+255),b
  4757  002AE0  0E00               	movlw	0
  4758  002AE2  6FD1               	movwf	setSteering@steeringMode& (0+255),b
  4759  002AE4  EC23  F013         	call	_setSteering	;wreg free
  4760                           
  4761                           ;main.c: 259:             break;
  4762  002AE8  EFC1  F015         	goto	l1342
  4763  002AEC                     l7214:
  4764                           
  4765                           ; BSR set to: 0
  4766                           ;main.c: 261:             if (curveMode == InCurve) {
  4767  002AEC  0E02               	movlw	2
  4768  002AEE  19A8               	xorwf	_curveMode& (0+255),w,b
  4769  002AF0  A4D8               	btfss	status,2,c
  4770  002AF2  EF7D  F015         	goto	u6911
  4771  002AF6  EF7F  F015         	goto	u6910
  4772  002AFA                     u6911:
  4773  002AFA  EF4E  F015         	goto	l7206
  4774  002AFE                     u6910:
  4775  002AFE                     
  4776                           ; BSR set to: 0
  4777                           ;main.c: 262:                 setSteering((50), Ratio);
  4778  002AFE  0E00               	movlw	0
  4779  002B00  6FD0               	movwf	(setSteering@steering+1)& (0+255),b
  4780  002B02  0E32               	movlw	50
  4781  002B04  6FCF               	movwf	setSteering@steering& (0+255),b
  4782  002B06  0E02               	movlw	2
  4783  002B08  6FD1               	movwf	setSteering@steeringMode& (0+255),b
  4784  002B0A  EC23  F013         	call	_setSteering	;wreg free
  4785                           
  4786                           ;main.c: 263:             } else {
  4787  002B0E  EFC1  F015         	goto	l1342
  4788  002B12                     l7220:
  4789                           
  4790                           ; BSR set to: 0
  4791                           ;main.c: 268:             if (curveMode == InCurve) {
  4792  002B12  0E02               	movlw	2
  4793  002B14  19A8               	xorwf	_curveMode& (0+255),w,b
  4794  002B16  A4D8               	btfss	status,2,c
  4795  002B18  EF90  F015         	goto	u6921
  4796  002B1C  EF92  F015         	goto	u6920
  4797  002B20                     u6921:
  4798  002B20  EF4E  F015         	goto	l7206
  4799  002B24                     u6920:
  4800  002B24                     
  4801                           ; BSR set to: 0
  4802                           ;main.c: 269:                 setSteering(-(50), Ratio);
  4803  002B24  0EFF               	movlw	255
  4804  002B26  6FD0               	movwf	(setSteering@steering+1)& (0+255),b
  4805  002B28  0ECE               	movlw	206
  4806  002B2A  6FCF               	movwf	setSteering@steering& (0+255),b
  4807  002B2C  0E02               	movlw	2
  4808  002B2E  6FD1               	movwf	setSteering@steeringMode& (0+255),b
  4809  002B30  EC23  F013         	call	_setSteering	;wreg free
  4810                           
  4811                           ;main.c: 270:             } else {
  4812  002B34  EFC1  F015         	goto	l1342
  4813  002B38                     l7228:
  4814                           
  4815                           ; BSR set to: 0
  4816  002B38  51A9               	movf	_driveMode& (0+255),w,b
  4817  002B3A  6FD8               	movwf	??_calcSteering& (0+255),b
  4818  002B3C  6BD9               	clrf	(??_calcSteering+1)& (0+255),b
  4819                           
  4820                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4821                           ; Switch size 1, requested type "simple"
  4822                           ; Number of cases is 1, Range of values is 0 to 0
  4823                           ; switch strategies available:
  4824                           ; Name         Instructions Cycles
  4825                           ; simple_byte            4     3 (average)
  4826                           ;	Chosen strategy is simple_byte
  4827  002B3E  51D9               	movf	(??_calcSteering+1)& (0+255),w,b
  4828  002B40  0A00               	xorlw	0	; case 0
  4829  002B42  B4D8               	btfsc	status,2,c
  4830  002B44  EFA6  F015         	goto	l7532
  4831  002B48  EFC1  F015         	goto	l1342
  4832  002B4C                     l7532:
  4833                           
  4834                           ; BSR set to: 0
  4835                           ; Switch size 1, requested type "simple"
  4836                           ; Number of cases is 6, Range of values is 0 to 5
  4837                           ; switch strategies available:
  4838                           ; Name         Instructions Cycles
  4839                           ; simple_byte           19    10 (average)
  4840                           ;	Chosen strategy is simple_byte
  4841  002B4C  51D8               	movf	??_calcSteering& (0+255),w,b
  4842  002B4E  0A00               	xorlw	0	; case 0
  4843  002B50  B4D8               	btfsc	status,2,c
  4844  002B52  EF58  F015         	goto	l7208
  4845  002B56  0A01               	xorlw	1	; case 1
  4846  002B58  B4D8               	btfsc	status,2,c
  4847  002B5A  EF4E  F015         	goto	l7206
  4848  002B5E  0A03               	xorlw	3	; case 2
  4849  002B60  B4D8               	btfsc	status,2,c
  4850  002B62  EF62  F015         	goto	l7210
  4851  002B66  0A01               	xorlw	1	; case 3
  4852  002B68  B4D8               	btfsc	status,2,c
  4853  002B6A  EF6C  F015         	goto	l7212
  4854  002B6E  0A07               	xorlw	7	; case 4
  4855  002B70  B4D8               	btfsc	status,2,c
  4856  002B72  EF76  F015         	goto	l7214
  4857  002B76  0A01               	xorlw	1	; case 5
  4858  002B78  B4D8               	btfsc	status,2,c
  4859  002B7A  EF89  F015         	goto	l7220
  4860  002B7E  EFC1  F015         	goto	l1342
  4861  002B82                     l1342:
  4862  002B82  0012               	return		;funcret
  4863  002B84                     __end_of_calcSteering:
  4864                           	callstack 0
  4865                           
  4866 ;; *************** function _setSteering *****************
  4867 ;; Defined at:
  4868 ;;		line 385 in file "main.c"
  4869 ;; Parameters:    Size  Location     Type
  4870 ;;  steering        2   35[BANK0 ] short 
  4871 ;;  steeringMode    1   37[BANK0 ] enum E17303
  4872 ;; Auto vars:     Size  Location     Type
  4873 ;;  steeringB       2   42[BANK0 ] short 
  4874 ;;  steeringF       2   40[BANK0 ] short 
  4875 ;; Return value:  Size  Location     Type
  4876 ;;                  1    wreg      void 
  4877 ;; Registers used:
  4878 ;;		wreg, status,2, status,0, cstack
  4879 ;; Tracked objects:
  4880 ;;		On entry : 0/0
  4881 ;;		On exit  : 0/0
  4882 ;;		Unchanged: 0/0
  4883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4884 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4885 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4886 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4887 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4888 ;;Total ram usage:        9 bytes
  4889 ;; Hardware stack levels used: 1
  4890 ;; Hardware stack levels required when called: 9
  4891 ;; This function calls:
  4892 ;;		_PWM5_LoadDutyValue
  4893 ;;		_PWM6_LoadDutyValue
  4894 ;;		___fldiv
  4895 ;;		___fltol
  4896 ;;		___xxtofl
  4897 ;; This function is called by:
  4898 ;;		_loop
  4899 ;;		_checkBatt
  4900 ;;		_calcSteering
  4901 ;;		_startAccell
  4902 ;; This function uses a non-reentrant model
  4903 ;;
  4904                           
  4905                           	psect	text22
  4906  002646                     __ptext22:
  4907                           	callstack 0
  4908  002646                     _setSteering:
  4909                           	callstack 20
  4910  002646  0E00               	movlw	0
  4911  002648  0100               	movlb	0	; () banked
  4912  00264A  6FD7               	movwf	(setSteering@steeringB+1)& (0+255),b
  4913  00264C  0E00               	movlw	0
  4914  00264E  6FD6               	movwf	setSteering@steeringB& (0+255),b
  4915                           
  4916                           ;main.c: 387:     switch (steeringMode) {
  4917  002650  EF9E  F013         	goto	l6692
  4918  002654                     l1385:
  4919                           
  4920                           ; BSR set to: 0
  4921                           ;main.c: 389:             steeringF = (+steering);
  4922  002654  C0CF  F0D4         	movff	setSteering@steering,setSteering@steeringF
  4923  002658  C0D0  F0D5         	movff	setSteering@steering+1,setSteering@steeringF+1
  4924                           
  4925                           ;main.c: 390:             steeringB = -steering;
  4926  00265C  C0CF  F0D2         	movff	setSteering@steering,??_setSteering
  4927  002660  C0D0  F0D3         	movff	setSteering@steering+1,??_setSteering+1
  4928  002664  1FD2               	comf	??_setSteering& (0+255),f,b
  4929  002666  1FD3               	comf	(??_setSteering+1)& (0+255),f,b
  4930  002668  4BD2               	infsnz	??_setSteering& (0+255),f,b
  4931  00266A  2BD3               	incf	(??_setSteering+1)& (0+255),f,b
  4932  00266C  C0D2  F0D6         	movff	??_setSteering,setSteering@steeringB
  4933  002670  C0D3  F0D7         	movff	??_setSteering+1,setSteering@steeringB+1
  4934                           
  4935                           ;main.c: 391:             break;
  4936  002674  EFBF  F013         	goto	l6694
  4937  002678                     l1387:
  4938                           
  4939                           ; BSR set to: 0
  4940                           ;main.c: 393:             steeringF = (+steering);
  4941  002678  C0CF  F0D4         	movff	setSteering@steering,setSteering@steeringF
  4942  00267C  C0D0  F0D5         	movff	setSteering@steering+1,setSteering@steeringF+1
  4943                           
  4944                           ;main.c: 394:             steeringB = (+steering);
  4945  002680  C0CF  F0D6         	movff	setSteering@steering,setSteering@steeringB
  4946  002684  C0D0  F0D7         	movff	setSteering@steering+1,setSteering@steeringB+1
  4947                           
  4948                           ;main.c: 395:             break;
  4949  002688  EFBF  F013         	goto	l6694
  4950  00268C                     l1388:
  4951                           
  4952                           ; BSR set to: 0
  4953                           ;main.c: 397:             steeringF = (+steering);
  4954  00268C  C0CF  F0D4         	movff	setSteering@steering,setSteering@steeringF
  4955  002690  C0D0  F0D5         	movff	setSteering@steering+1,setSteering@steeringF+1
  4956  002694                     
  4957                           ; BSR set to: 0
  4958                           ;main.c: 398:             steeringB = (-steering / (1.25));
  4959  002694  0E00               	movlw	0
  4960  002696  6E2E               	movwf	___fldiv@a^0,c
  4961  002698  0E00               	movlw	0
  4962  00269A  6E2F               	movwf	(___fldiv@a+1)^0,c
  4963  00269C  0EA0               	movlw	160
  4964  00269E  6E30               	movwf	(___fldiv@a+2)^0,c
  4965  0026A0  0E3F               	movlw	63
  4966  0026A2  6E31               	movwf	(___fldiv@a+3)^0,c
  4967  0026A4  C0CF  F0D2         	movff	setSteering@steering,??_setSteering
  4968  0026A8  C0D0  F0D3         	movff	setSteering@steering+1,??_setSteering+1
  4969  0026AC  1FD2               	comf	??_setSteering& (0+255),f,b
  4970  0026AE  1FD3               	comf	(??_setSteering+1)& (0+255),f,b
  4971  0026B0  4BD2               	infsnz	??_setSteering& (0+255),f,b
  4972  0026B2  2BD3               	incf	(??_setSteering+1)& (0+255),f,b
  4973  0026B4  C0D2  F01C         	movff	??_setSteering,___xxtofl@val
  4974  0026B8  C0D3  F01D         	movff	??_setSteering+1,___xxtofl@val+1
  4975  0026BC  0E00               	movlw	0
  4976  0026BE  BE1D               	btfsc	(___xxtofl@val+1)^0,7,c
  4977  0026C0  0EFF               	movlw	-1
  4978  0026C2  6E1E               	movwf	(___xxtofl@val+2)^0,c
  4979  0026C4  6E1F               	movwf	(___xxtofl@val+3)^0,c
  4980  0026C6  0E01               	movlw	1
  4981  0026C8  EC1E  F014         	call	___xxtofl
  4982  0026CC  C01C  F02A         	movff	?___xxtofl,___fldiv@b
  4983  0026D0  C01D  F02B         	movff	?___xxtofl+1,___fldiv@b+1
  4984  0026D4  C01E  F02C         	movff	?___xxtofl+2,___fldiv@b+2
  4985  0026D8  C01F  F02D         	movff	?___xxtofl+3,___fldiv@b+3
  4986  0026DC  ECA6  F00C         	call	___fldiv	;wreg free
  4987  0026E0  C02A  F0C5         	movff	?___fldiv,___fltol@f1
  4988  0026E4  C02B  F0C6         	movff	?___fldiv+1,___fltol@f1+1
  4989  0026E8  C02C  F0C7         	movff	?___fldiv+2,___fltol@f1+2
  4990  0026EC  C02D  F0C8         	movff	?___fldiv+3,___fltol@f1+3
  4991  0026F0  EC7C  F019         	call	___fltol	;wreg free
  4992  0026F4  C0C5  F0D6         	movff	?___fltol,setSteering@steeringB
  4993  0026F8  C0C6  F0D7         	movff	?___fltol+1,setSteering@steeringB+1
  4994                           
  4995                           ;main.c: 399:             break;
  4996  0026FC  EFBF  F013         	goto	l6694
  4997  002700                     l1389:
  4998                           
  4999                           ; BSR set to: 0
  5000                           ;main.c: 401:             steeringF = (+steering);
  5001  002700  C0CF  F0D4         	movff	setSteering@steering,setSteering@steeringF
  5002  002704  C0D0  F0D5         	movff	setSteering@steering+1,setSteering@steeringF+1
  5003  002708                     
  5004                           ; BSR set to: 0
  5005                           ;main.c: 402:             steeringB = 0;
  5006  002708  0E00               	movlw	0
  5007  00270A  6FD7               	movwf	(setSteering@steeringB+1)& (0+255),b
  5008  00270C  0E00               	movlw	0
  5009  00270E  6FD6               	movwf	setSteering@steeringB& (0+255),b
  5010                           
  5011                           ;main.c: 403:             break;
  5012  002710  EFBF  F013         	goto	l6694
  5013  002714                     l6684:
  5014                           
  5015                           ; BSR set to: 0
  5016                           ;main.c: 405:             steeringF = 0;
  5017  002714  0E00               	movlw	0
  5018  002716  6FD5               	movwf	(setSteering@steeringF+1)& (0+255),b
  5019  002718  0E00               	movlw	0
  5020  00271A  6FD4               	movwf	setSteering@steeringF& (0+255),b
  5021  00271C                     
  5022                           ; BSR set to: 0
  5023                           ;main.c: 406:             steeringB = (+steering);
  5024  00271C  C0CF  F0D6         	movff	setSteering@steering,setSteering@steeringB
  5025  002720  C0D0  F0D7         	movff	setSteering@steering+1,setSteering@steeringB+1
  5026                           
  5027                           ;main.c: 407:             break;
  5028  002724  EFBF  F013         	goto	l6694
  5029  002728                     l6688:
  5030                           
  5031                           ; BSR set to: 0
  5032                           ;main.c: 409:             steeringF = 0;
  5033  002728  0E00               	movlw	0
  5034  00272A  6FD5               	movwf	(setSteering@steeringF+1)& (0+255),b
  5035  00272C  0E00               	movlw	0
  5036  00272E  6FD4               	movwf	setSteering@steeringF& (0+255),b
  5037                           
  5038                           ;main.c: 410:             steeringB = 0;
  5039  002730  0E00               	movlw	0
  5040  002732  6FD7               	movwf	(setSteering@steeringB+1)& (0+255),b
  5041  002734  0E00               	movlw	0
  5042  002736  6FD6               	movwf	setSteering@steeringB& (0+255),b
  5043                           
  5044                           ;main.c: 411:             break;
  5045  002738  EFBF  F013         	goto	l6694
  5046  00273C                     l6692:
  5047                           
  5048                           ; BSR set to: 0
  5049  00273C  51D1               	movf	setSteering@steeringMode& (0+255),w,b
  5050  00273E  6FD2               	movwf	??_setSteering& (0+255),b
  5051  002740  6BD3               	clrf	(??_setSteering+1)& (0+255),b
  5052                           
  5053                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5054                           ; Switch size 1, requested type "simple"
  5055                           ; Number of cases is 1, Range of values is 0 to 0
  5056                           ; switch strategies available:
  5057                           ; Name         Instructions Cycles
  5058                           ; simple_byte            4     3 (average)
  5059                           ;	Chosen strategy is simple_byte
  5060  002742  51D3               	movf	(??_setSteering+1)& (0+255),w,b
  5061  002744  0A00               	xorlw	0	; case 0
  5062  002746  B4D8               	btfsc	status,2,c
  5063  002748  EFA8  F013         	goto	l7534
  5064  00274C  EF94  F013         	goto	l6688
  5065  002750                     l7534:
  5066                           
  5067                           ; BSR set to: 0
  5068                           ; Switch size 1, requested type "simple"
  5069                           ; Number of cases is 5, Range of values is 0 to 4
  5070                           ; switch strategies available:
  5071                           ; Name         Instructions Cycles
  5072                           ; simple_byte           16     9 (average)
  5073                           ;	Chosen strategy is simple_byte
  5074  002750  51D2               	movf	??_setSteering& (0+255),w,b
  5075  002752  0A00               	xorlw	0	; case 0
  5076  002754  B4D8               	btfsc	status,2,c
  5077  002756  EF2A  F013         	goto	l1385
  5078  00275A  0A01               	xorlw	1	; case 1
  5079  00275C  B4D8               	btfsc	status,2,c
  5080  00275E  EF3C  F013         	goto	l1387
  5081  002762  0A03               	xorlw	3	; case 2
  5082  002764  B4D8               	btfsc	status,2,c
  5083  002766  EF46  F013         	goto	l1388
  5084  00276A  0A01               	xorlw	1	; case 3
  5085  00276C  B4D8               	btfsc	status,2,c
  5086  00276E  EF80  F013         	goto	l1389
  5087  002772  0A07               	xorlw	7	; case 4
  5088  002774  B4D8               	btfsc	status,2,c
  5089  002776  EF8A  F013         	goto	l6684
  5090  00277A  EF94  F013         	goto	l6688
  5091  00277E                     l6694:
  5092                           
  5093                           ;main.c: 414:     if (steeringF > ((65))) {
  5094  00277E  0100               	movlb	0	; () banked
  5095  002780  BFD5               	btfsc	(setSteering@steeringF+1)& (0+255),7,b
  5096  002782  EFCC  F013         	goto	u6001
  5097  002786  51D5               	movf	(setSteering@steeringF+1)& (0+255),w,b
  5098  002788  E109               	bnz	u6000
  5099  00278A  0E42               	movlw	66
  5100  00278C  5DD4               	subwf	setSteering@steeringF& (0+255),w,b
  5101  00278E  A0D8               	btfss	status,0,c
  5102  002790  EFCC  F013         	goto	u6001
  5103  002794  EFCE  F013         	goto	u6000
  5104  002798                     u6001:
  5105  002798  EFD4  F013         	goto	l6698
  5106  00279C                     u6000:
  5107  00279C                     
  5108                           ; BSR set to: 0
  5109                           ;main.c: 415:         steeringF = ((65));
  5110  00279C  0E00               	movlw	0
  5111  00279E  6FD5               	movwf	(setSteering@steeringF+1)& (0+255),b
  5112  0027A0  0E41               	movlw	65
  5113  0027A2  6FD4               	movwf	setSteering@steeringF& (0+255),b
  5114                           
  5115                           ;main.c: 416:     } else if (steeringF < (-(65))) {
  5116  0027A4  EFE6  F013         	goto	l6702
  5117  0027A8                     l6698:
  5118                           
  5119                           ; BSR set to: 0
  5120  0027A8  AFD5               	btfss	(setSteering@steeringF+1)& (0+255),7,b
  5121  0027AA  EFE0  F013         	goto	u6011
  5122  0027AE  0EBF               	movlw	191
  5123  0027B0  5DD4               	subwf	setSteering@steeringF& (0+255),w,b
  5124  0027B2  0EFF               	movlw	255
  5125  0027B4  59D5               	subwfb	(setSteering@steeringF+1)& (0+255),w,b
  5126  0027B6  B0D8               	btfsc	status,0,c
  5127  0027B8  EFE0  F013         	goto	u6011
  5128  0027BC  EFE2  F013         	goto	u6010
  5129  0027C0                     u6011:
  5130  0027C0  EFE6  F013         	goto	l6702
  5131  0027C4                     u6010:
  5132  0027C4                     
  5133                           ; BSR set to: 0
  5134                           ;main.c: 417:         steeringF = (-(65));
  5135  0027C4  0EFF               	movlw	255
  5136  0027C6  6FD5               	movwf	(setSteering@steeringF+1)& (0+255),b
  5137  0027C8  0EBF               	movlw	191
  5138  0027CA  6FD4               	movwf	setSteering@steeringF& (0+255),b
  5139  0027CC                     l6702:
  5140                           
  5141                           ; BSR set to: 0
  5142                           ;main.c: 420:     if (steeringB > ((40))) {
  5143  0027CC  BFD7               	btfsc	(setSteering@steeringB+1)& (0+255),7,b
  5144  0027CE  EFF2  F013         	goto	u6021
  5145  0027D2  51D7               	movf	(setSteering@steeringB+1)& (0+255),w,b
  5146  0027D4  E109               	bnz	u6020
  5147  0027D6  0E29               	movlw	41
  5148  0027D8  5DD6               	subwf	setSteering@steeringB& (0+255),w,b
  5149  0027DA  A0D8               	btfss	status,0,c
  5150  0027DC  EFF2  F013         	goto	u6021
  5151  0027E0  EFF4  F013         	goto	u6020
  5152  0027E4                     u6021:
  5153  0027E4  EFFA  F013         	goto	l6706
  5154  0027E8                     u6020:
  5155  0027E8                     
  5156                           ; BSR set to: 0
  5157                           ;main.c: 421:         steeringB = ((40));
  5158  0027E8  0E00               	movlw	0
  5159  0027EA  6FD7               	movwf	(setSteering@steeringB+1)& (0+255),b
  5160  0027EC  0E28               	movlw	40
  5161  0027EE  6FD6               	movwf	setSteering@steeringB& (0+255),b
  5162                           
  5163                           ;main.c: 422:     } else if (steeringB < (-(40))) {
  5164  0027F0  EF0C  F014         	goto	l6710
  5165  0027F4                     l6706:
  5166                           
  5167                           ; BSR set to: 0
  5168  0027F4  AFD7               	btfss	(setSteering@steeringB+1)& (0+255),7,b
  5169  0027F6  EF06  F014         	goto	u6031
  5170  0027FA  0ED8               	movlw	216
  5171  0027FC  5DD6               	subwf	setSteering@steeringB& (0+255),w,b
  5172  0027FE  0EFF               	movlw	255
  5173  002800  59D7               	subwfb	(setSteering@steeringB+1)& (0+255),w,b
  5174  002802  B0D8               	btfsc	status,0,c
  5175  002804  EF06  F014         	goto	u6031
  5176  002808  EF08  F014         	goto	u6030
  5177  00280C                     u6031:
  5178  00280C  EF0C  F014         	goto	l6710
  5179  002810                     u6030:
  5180  002810                     
  5181                           ; BSR set to: 0
  5182                           ;main.c: 423:         steeringB = (-(40));
  5183  002810  0EFF               	movlw	255
  5184  002812  6FD7               	movwf	(setSteering@steeringB+1)& (0+255),b
  5185  002814  0ED8               	movlw	216
  5186  002816  6FD6               	movwf	setSteering@steeringB& (0+255),b
  5187  002818                     l6710:
  5188                           
  5189                           ; BSR set to: 0
  5190                           ;main.c: 427:     PWM6_LoadDutyValue((uint16_t) ((352) + steeringF));
  5191  002818  0E60               	movlw	96
  5192  00281A  25D4               	addwf	setSteering@steeringF& (0+255),w,b
  5193  00281C  6E14               	movwf	PWM6_LoadDutyValue@dutyValue^0,c
  5194  00281E  0E01               	movlw	1
  5195  002820  21D5               	addwfc	(setSteering@steeringF+1)& (0+255),w,b
  5196  002822  6E15               	movwf	(PWM6_LoadDutyValue@dutyValue+1)^0,c
  5197  002824  EC09  F020         	call	_PWM6_LoadDutyValue	;wreg free
  5198  002828                     
  5199                           ;main.c: 428:     PWM5_LoadDutyValue((uint16_t) ((357) + steeringB));
  5200  002828  0E65               	movlw	101
  5201  00282A  0100               	movlb	0	; () banked
  5202  00282C  25D6               	addwf	setSteering@steeringB& (0+255),w,b
  5203  00282E  6E14               	movwf	PWM5_LoadDutyValue@dutyValue^0,c
  5204  002830  0E01               	movlw	1
  5205  002832  21D7               	addwfc	(setSteering@steeringB+1)& (0+255),w,b
  5206  002834  6E15               	movwf	(PWM5_LoadDutyValue@dutyValue+1)^0,c
  5207  002836  EC23  F020         	call	_PWM5_LoadDutyValue	;wreg free
  5208  00283A  0012               	return		;funcret
  5209  00283C                     __end_of_setSteering:
  5210                           	callstack 0
  5211                           
  5212 ;; *************** function ___fldiv *****************
  5213 ;; Defined at:
  5214 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  5215 ;; Parameters:    Size  Location     Type
  5216 ;;  b               4   41[COMRAM] void 
  5217 ;;  a               4   45[COMRAM] void 
  5218 ;; Auto vars:     Size  Location     Type
  5219 ;;  grs             4    7[BANK0 ] unsigned long 
  5220 ;;  rem             4    0[BANK0 ] unsigned long 
  5221 ;;  new_exp         2    5[BANK0 ] short 
  5222 ;;  aexp            1   12[BANK0 ] unsigned char 
  5223 ;;  bexp            1   11[BANK0 ] unsigned char 
  5224 ;;  sign            1    4[BANK0 ] unsigned char 
  5225 ;; Return value:  Size  Location     Type
  5226 ;;                  4   41[COMRAM] unsigned char 
  5227 ;; Registers used:
  5228 ;;		wreg, status,2, status,0
  5229 ;; Tracked objects:
  5230 ;;		On entry : 0/0
  5231 ;;		On exit  : 0/0
  5232 ;;		Unchanged: 0/0
  5233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5234 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5235 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5236 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5237 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5238 ;;Total ram usage:       25 bytes
  5239 ;; Hardware stack levels used: 1
  5240 ;; Hardware stack levels required when called: 8
  5241 ;; This function calls:
  5242 ;;		Nothing
  5243 ;; This function is called by:
  5244 ;;		_setSteering
  5245 ;; This function uses a non-reentrant model
  5246 ;;
  5247                           
  5248                           	psect	text23
  5249  00194C                     __ptext23:
  5250                           	callstack 0
  5251  00194C                     ___fldiv:
  5252                           	callstack 20
  5253  00194C  502D               	movf	(___fldiv@b+3)^0,w,c
  5254  00194E  0B80               	andlw	128
  5255  001950  0100               	movlb	0	; () banked
  5256  001952  6FB0               	movwf	___fldiv@sign& (0+255),b
  5257  001954  502D               	movf	(___fldiv@b+3)^0,w,c
  5258  001956  242D               	addwf	(___fldiv@b+3)^0,w,c
  5259  001958  6FB7               	movwf	___fldiv@bexp& (0+255),b
  5260  00195A                     
  5261                           ; BSR set to: 0
  5262  00195A  AE2C               	btfss	(___fldiv@b+2)^0,7,c
  5263  00195C  EFB2  F00C         	goto	u5691
  5264  001960  EFB4  F00C         	goto	u5690
  5265  001964                     u5691:
  5266  001964  EFB5  F00C         	goto	l6494
  5267  001968                     u5690:
  5268  001968                     
  5269                           ; BSR set to: 0
  5270  001968  81B7               	bsf	___fldiv@bexp& (0+255),0,b
  5271  00196A                     l6494:
  5272                           
  5273                           ; BSR set to: 0
  5274  00196A  51B7               	movf	___fldiv@bexp& (0+255),w,b
  5275  00196C  B4D8               	btfsc	status,2,c
  5276  00196E  EFBB  F00C         	goto	u5701
  5277  001972  EFBD  F00C         	goto	u5700
  5278  001976                     u5701:
  5279  001976  EFD2  F00C         	goto	l6504
  5280  00197A                     u5700:
  5281  00197A                     
  5282                           ; BSR set to: 0
  5283  00197A  29B7               	incf	___fldiv@bexp& (0+255),w,b
  5284  00197C  A4D8               	btfss	status,2,c
  5285  00197E  EFC3  F00C         	goto	u5711
  5286  001982  EFC5  F00C         	goto	u5710
  5287  001986                     u5711:
  5288  001986  EFCD  F00C         	goto	l6500
  5289  00198A                     u5710:
  5290  00198A                     
  5291                           ; BSR set to: 0
  5292  00198A  0E00               	movlw	0
  5293  00198C  6E2A               	movwf	___fldiv@b^0,c
  5294  00198E  0E00               	movlw	0
  5295  001990  6E2B               	movwf	(___fldiv@b+1)^0,c
  5296  001992  0E00               	movlw	0
  5297  001994  6E2C               	movwf	(___fldiv@b+2)^0,c
  5298  001996  0E00               	movlw	0
  5299  001998  6E2D               	movwf	(___fldiv@b+3)^0,c
  5300  00199A                     l6500:
  5301                           
  5302                           ; BSR set to: 0
  5303  00199A  8E2C               	bsf	(___fldiv@b+2)^0,7,c
  5304  00199C                     
  5305                           ; BSR set to: 0
  5306  00199C  0E00               	movlw	0
  5307  00199E  6E2D               	movwf	(___fldiv@b+3)^0,c
  5308  0019A0  EFDA  F00C         	goto	l6506
  5309  0019A4                     l6504:
  5310                           
  5311                           ; BSR set to: 0
  5312  0019A4  0E00               	movlw	0
  5313  0019A6  6E2A               	movwf	___fldiv@b^0,c
  5314  0019A8  0E00               	movlw	0
  5315  0019AA  6E2B               	movwf	(___fldiv@b+1)^0,c
  5316  0019AC  0E00               	movlw	0
  5317  0019AE  6E2C               	movwf	(___fldiv@b+2)^0,c
  5318  0019B0  0E00               	movlw	0
  5319  0019B2  6E2D               	movwf	(___fldiv@b+3)^0,c
  5320  0019B4                     l6506:
  5321                           
  5322                           ; BSR set to: 0
  5323  0019B4  5031               	movf	(___fldiv@a+3)^0,w,c
  5324  0019B6  0B80               	andlw	128
  5325  0019B8  1BB0               	xorwf	___fldiv@sign& (0+255),f,b
  5326  0019BA                     
  5327                           ; BSR set to: 0
  5328  0019BA  5031               	movf	(___fldiv@a+3)^0,w,c
  5329  0019BC  2431               	addwf	(___fldiv@a+3)^0,w,c
  5330  0019BE  6FB8               	movwf	___fldiv@aexp& (0+255),b
  5331  0019C0                     
  5332                           ; BSR set to: 0
  5333  0019C0  AE30               	btfss	(___fldiv@a+2)^0,7,c
  5334  0019C2  EFE5  F00C         	goto	u5721
  5335  0019C6  EFE7  F00C         	goto	u5720
  5336  0019CA                     u5721:
  5337  0019CA  EFE8  F00C         	goto	l6514
  5338  0019CE                     u5720:
  5339  0019CE                     
  5340                           ; BSR set to: 0
  5341  0019CE  81B8               	bsf	___fldiv@aexp& (0+255),0,b
  5342  0019D0                     l6514:
  5343                           
  5344                           ; BSR set to: 0
  5345  0019D0  51B8               	movf	___fldiv@aexp& (0+255),w,b
  5346  0019D2  B4D8               	btfsc	status,2,c
  5347  0019D4  EFEE  F00C         	goto	u5731
  5348  0019D8  EFF0  F00C         	goto	u5730
  5349  0019DC                     u5731:
  5350  0019DC  EF05  F00D         	goto	l6524
  5351  0019E0                     u5730:
  5352  0019E0                     
  5353                           ; BSR set to: 0
  5354  0019E0  29B8               	incf	___fldiv@aexp& (0+255),w,b
  5355  0019E2  A4D8               	btfss	status,2,c
  5356  0019E4  EFF6  F00C         	goto	u5741
  5357  0019E8  EFF8  F00C         	goto	u5740
  5358  0019EC                     u5741:
  5359  0019EC  EF00  F00D         	goto	l6520
  5360  0019F0                     u5740:
  5361  0019F0                     
  5362                           ; BSR set to: 0
  5363  0019F0  0E00               	movlw	0
  5364  0019F2  6E2E               	movwf	___fldiv@a^0,c
  5365  0019F4  0E00               	movlw	0
  5366  0019F6  6E2F               	movwf	(___fldiv@a+1)^0,c
  5367  0019F8  0E00               	movlw	0
  5368  0019FA  6E30               	movwf	(___fldiv@a+2)^0,c
  5369  0019FC  0E00               	movlw	0
  5370  0019FE  6E31               	movwf	(___fldiv@a+3)^0,c
  5371  001A00                     l6520:
  5372                           
  5373                           ; BSR set to: 0
  5374  001A00  8E30               	bsf	(___fldiv@a+2)^0,7,c
  5375  001A02                     
  5376                           ; BSR set to: 0
  5377  001A02  0E00               	movlw	0
  5378  001A04  6E31               	movwf	(___fldiv@a+3)^0,c
  5379  001A06  EF0D  F00D         	goto	l6526
  5380  001A0A                     l6524:
  5381                           
  5382                           ; BSR set to: 0
  5383  001A0A  0E00               	movlw	0
  5384  001A0C  6E2E               	movwf	___fldiv@a^0,c
  5385  001A0E  0E00               	movlw	0
  5386  001A10  6E2F               	movwf	(___fldiv@a+1)^0,c
  5387  001A12  0E00               	movlw	0
  5388  001A14  6E30               	movwf	(___fldiv@a+2)^0,c
  5389  001A16  0E00               	movlw	0
  5390  001A18  6E31               	movwf	(___fldiv@a+3)^0,c
  5391  001A1A                     l6526:
  5392                           
  5393                           ; BSR set to: 0
  5394  001A1A  502E               	movf	___fldiv@a^0,w,c
  5395  001A1C  102F               	iorwf	(___fldiv@a+1)^0,w,c
  5396  001A1E  1030               	iorwf	(___fldiv@a+2)^0,w,c
  5397  001A20  1031               	iorwf	(___fldiv@a+3)^0,w,c
  5398  001A22  A4D8               	btfss	status,2,c
  5399  001A24  EF16  F00D         	goto	u5751
  5400  001A28  EF18  F00D         	goto	u5750
  5401  001A2C                     u5751:
  5402  001A2C  EF30  F00D         	goto	l6538
  5403  001A30                     u5750:
  5404  001A30                     
  5405                           ; BSR set to: 0
  5406  001A30  0E00               	movlw	0
  5407  001A32  6E2A               	movwf	___fldiv@b^0,c
  5408  001A34  0E00               	movlw	0
  5409  001A36  6E2B               	movwf	(___fldiv@b+1)^0,c
  5410  001A38  0E00               	movlw	0
  5411  001A3A  6E2C               	movwf	(___fldiv@b+2)^0,c
  5412  001A3C  0E00               	movlw	0
  5413  001A3E  6E2D               	movwf	(___fldiv@b+3)^0,c
  5414  001A40                     
  5415                           ; BSR set to: 0
  5416  001A40  0E80               	movlw	128
  5417  001A42  122C               	iorwf	(___fldiv@b+2)^0,f,c
  5418  001A44  0E7F               	movlw	127
  5419  001A46  122D               	iorwf	(___fldiv@b+3)^0,f,c
  5420  001A48                     l6532:
  5421                           
  5422                           ; BSR set to: 0
  5423  001A48  51B0               	movf	___fldiv@sign& (0+255),w,b
  5424  001A4A  122D               	iorwf	(___fldiv@b+3)^0,f,c
  5425  001A4C                     
  5426                           ; BSR set to: 0
  5427  001A4C  C02A  F02A         	movff	___fldiv@b,?___fldiv
  5428  001A50  C02B  F02B         	movff	___fldiv@b+1,?___fldiv+1
  5429  001A54  C02C  F02C         	movff	___fldiv@b+2,?___fldiv+2
  5430  001A58  C02D  F02D         	movff	___fldiv@b+3,?___fldiv+3
  5431  001A5C  EF73  F00E         	goto	l1983
  5432  001A60                     l6538:
  5433                           
  5434                           ; BSR set to: 0
  5435  001A60  51B7               	movf	___fldiv@bexp& (0+255),w,b
  5436  001A62  A4D8               	btfss	status,2,c
  5437  001A64  EF36  F00D         	goto	u5761
  5438  001A68  EF38  F00D         	goto	u5760
  5439  001A6C                     u5761:
  5440  001A6C  EF42  F00D         	goto	l6546
  5441  001A70                     u5760:
  5442  001A70                     
  5443                           ; BSR set to: 0
  5444  001A70  0E00               	movlw	0
  5445  001A72  6E2A               	movwf	?___fldiv^0,c
  5446  001A74  0E00               	movlw	0
  5447  001A76  6E2B               	movwf	(?___fldiv+1)^0,c
  5448  001A78  0E00               	movlw	0
  5449  001A7A  6E2C               	movwf	(?___fldiv+2)^0,c
  5450  001A7C  0E00               	movlw	0
  5451  001A7E  6E2D               	movwf	(?___fldiv+3)^0,c
  5452  001A80  EF73  F00E         	goto	l1983
  5453  001A84                     l6546:
  5454                           
  5455                           ; BSR set to: 0
  5456  001A84  51B8               	movf	___fldiv@aexp& (0+255),w,b
  5457  001A86  C0B7  F032         	movff	___fldiv@bexp,??___fldiv
  5458  001A8A  6A33               	clrf	(??___fldiv+1)^0,c
  5459  001A8C  5E32               	subwf	??___fldiv^0,f,c
  5460  001A8E  0E00               	movlw	0
  5461  001A90  5A33               	subwfb	(??___fldiv+1)^0,f,c
  5462  001A92  0E7F               	movlw	127
  5463  001A94  2432               	addwf	??___fldiv^0,w,c
  5464  001A96  6FB1               	movwf	___fldiv@new_exp& (0+255),b
  5465  001A98  0E00               	movlw	0
  5466  001A9A  2033               	addwfc	(??___fldiv+1)^0,w,c
  5467  001A9C  6FB2               	movwf	(___fldiv@new_exp+1)& (0+255),b
  5468  001A9E                     
  5469                           ; BSR set to: 0
  5470  001A9E  C02A  F0AC         	movff	___fldiv@b,___fldiv@rem
  5471  001AA2  C02B  F0AD         	movff	___fldiv@b+1,___fldiv@rem+1
  5472  001AA6  C02C  F0AE         	movff	___fldiv@b+2,___fldiv@rem+2
  5473  001AAA  C02D  F0AF         	movff	___fldiv@b+3,___fldiv@rem+3
  5474  001AAE                     
  5475                           ; BSR set to: 0
  5476  001AAE  0E00               	movlw	0
  5477  001AB0  6E2A               	movwf	___fldiv@b^0,c
  5478  001AB2  0E00               	movlw	0
  5479  001AB4  6E2B               	movwf	(___fldiv@b+1)^0,c
  5480  001AB6  0E00               	movlw	0
  5481  001AB8  6E2C               	movwf	(___fldiv@b+2)^0,c
  5482  001ABA  0E00               	movlw	0
  5483  001ABC  6E2D               	movwf	(___fldiv@b+3)^0,c
  5484  001ABE                     
  5485                           ; BSR set to: 0
  5486  001ABE  0E00               	movlw	0
  5487  001AC0  6FB3               	movwf	___fldiv@grs& (0+255),b
  5488  001AC2  0E00               	movlw	0
  5489  001AC4  6FB4               	movwf	(___fldiv@grs+1)& (0+255),b
  5490  001AC6  0E00               	movlw	0
  5491  001AC8  6FB5               	movwf	(___fldiv@grs+2)& (0+255),b
  5492  001ACA  0E00               	movlw	0
  5493  001ACC  6FB6               	movwf	(___fldiv@grs+3)& (0+255),b
  5494  001ACE                     
  5495                           ; BSR set to: 0
  5496  001ACE  0E00               	movlw	0
  5497  001AD0  6FB8               	movwf	___fldiv@aexp& (0+255),b
  5498  001AD2  EFA3  F00D         	goto	l1985
  5499  001AD6                     l6556:
  5500                           
  5501                           ; BSR set to: 0
  5502  001AD6  51B8               	movf	___fldiv@aexp& (0+255),w,b
  5503  001AD8  B4D8               	btfsc	status,2,c
  5504  001ADA  EF71  F00D         	goto	u5771
  5505  001ADE  EF73  F00D         	goto	u5770
  5506  001AE2                     u5771:
  5507  001AE2  EF8A  F00D         	goto	l6564
  5508  001AE6                     u5770:
  5509  001AE6                     
  5510                           ; BSR set to: 0
  5511  001AE6  90D8               	bcf	status,0,c
  5512  001AE8  37AC               	rlcf	___fldiv@rem& (0+255),f,b
  5513  001AEA  37AD               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  5514  001AEC  37AE               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  5515  001AEE  37AF               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  5516  001AF0  90D8               	bcf	status,0,c
  5517  001AF2  362A               	rlcf	___fldiv@b^0,f,c
  5518  001AF4  362B               	rlcf	(___fldiv@b+1)^0,f,c
  5519  001AF6  362C               	rlcf	(___fldiv@b+2)^0,f,c
  5520  001AF8  362D               	rlcf	(___fldiv@b+3)^0,f,c
  5521  001AFA                     
  5522                           ; BSR set to: 0
  5523  001AFA  AFB6               	btfss	(___fldiv@grs+3)& (0+255),7,b
  5524  001AFC  EF82  F00D         	goto	u5781
  5525  001B00  EF84  F00D         	goto	u5780
  5526  001B04                     u5781:
  5527  001B04  EF85  F00D         	goto	l1988
  5528  001B08                     u5780:
  5529  001B08                     
  5530                           ; BSR set to: 0
  5531  001B08  802A               	bsf	___fldiv@b^0,0,c
  5532  001B0A                     l1988:
  5533                           
  5534                           ; BSR set to: 0
  5535  001B0A  90D8               	bcf	status,0,c
  5536  001B0C  37B3               	rlcf	___fldiv@grs& (0+255),f,b
  5537  001B0E  37B4               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  5538  001B10  37B5               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  5539  001B12  37B6               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  5540  001B14                     l6564:
  5541                           
  5542                           ; BSR set to: 0
  5543  001B14  502E               	movf	___fldiv@a^0,w,c
  5544  001B16  5DAC               	subwf	___fldiv@rem& (0+255),w,b
  5545  001B18  502F               	movf	(___fldiv@a+1)^0,w,c
  5546  001B1A  59AD               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  5547  001B1C  5030               	movf	(___fldiv@a+2)^0,w,c
  5548  001B1E  59AE               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  5549  001B20  5031               	movf	(___fldiv@a+3)^0,w,c
  5550  001B22  59AF               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  5551  001B24  A0D8               	btfss	status,0,c
  5552  001B26  EF97  F00D         	goto	u5791
  5553  001B2A  EF99  F00D         	goto	u5790
  5554  001B2E                     u5791:
  5555  001B2E  EFA2  F00D         	goto	l6570
  5556  001B32                     u5790:
  5557  001B32                     
  5558                           ; BSR set to: 0
  5559  001B32  8DB6               	bsf	(___fldiv@grs+3)& (0+255),6,b
  5560  001B34                     
  5561                           ; BSR set to: 0
  5562  001B34  502E               	movf	___fldiv@a^0,w,c
  5563  001B36  5FAC               	subwf	___fldiv@rem& (0+255),f,b
  5564  001B38  502F               	movf	(___fldiv@a+1)^0,w,c
  5565  001B3A  5BAD               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  5566  001B3C  5030               	movf	(___fldiv@a+2)^0,w,c
  5567  001B3E  5BAE               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  5568  001B40  5031               	movf	(___fldiv@a+3)^0,w,c
  5569  001B42  5BAF               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  5570  001B44                     l6570:
  5571                           
  5572                           ; BSR set to: 0
  5573  001B44  2BB8               	incf	___fldiv@aexp& (0+255),f,b
  5574  001B46                     l1985:
  5575                           
  5576                           ; BSR set to: 0
  5577  001B46  0E19               	movlw	25
  5578  001B48  65B8               	cpfsgt	___fldiv@aexp& (0+255),b
  5579  001B4A  EFA9  F00D         	goto	u5801
  5580  001B4E  EFAB  F00D         	goto	u5800
  5581  001B52                     u5801:
  5582  001B52  EF6B  F00D         	goto	l6556
  5583  001B56                     u5800:
  5584  001B56                     
  5585                           ; BSR set to: 0
  5586  001B56  51AC               	movf	___fldiv@rem& (0+255),w,b
  5587  001B58  11AD               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  5588  001B5A  11AE               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  5589  001B5C  11AF               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  5590  001B5E  B4D8               	btfsc	status,2,c
  5591  001B60  EFB4  F00D         	goto	u5811
  5592  001B64  EFB6  F00D         	goto	u5810
  5593  001B68                     u5811:
  5594  001B68  EFCE  F00D         	goto	l6582
  5595  001B6C                     u5810:
  5596  001B6C                     
  5597                           ; BSR set to: 0
  5598  001B6C  81B3               	bsf	___fldiv@grs& (0+255),0,b
  5599  001B6E  EFCE  F00D         	goto	l6582
  5600  001B72                     l6576:
  5601                           
  5602                           ; BSR set to: 0
  5603  001B72  90D8               	bcf	status,0,c
  5604  001B74  362A               	rlcf	___fldiv@b^0,f,c
  5605  001B76  362B               	rlcf	(___fldiv@b+1)^0,f,c
  5606  001B78  362C               	rlcf	(___fldiv@b+2)^0,f,c
  5607  001B7A  362D               	rlcf	(___fldiv@b+3)^0,f,c
  5608  001B7C                     
  5609                           ; BSR set to: 0
  5610  001B7C  AFB6               	btfss	(___fldiv@grs+3)& (0+255),7,b
  5611  001B7E  EFC3  F00D         	goto	u5821
  5612  001B82  EFC5  F00D         	goto	u5820
  5613  001B86                     u5821:
  5614  001B86  EFC6  F00D         	goto	l1994
  5615  001B8A                     u5820:
  5616  001B8A                     
  5617                           ; BSR set to: 0
  5618  001B8A  802A               	bsf	___fldiv@b^0,0,c
  5619  001B8C                     l1994:
  5620                           
  5621                           ; BSR set to: 0
  5622  001B8C  90D8               	bcf	status,0,c
  5623  001B8E  37B3               	rlcf	___fldiv@grs& (0+255),f,b
  5624  001B90  37B4               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  5625  001B92  37B5               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  5626  001B94  37B6               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  5627  001B96  07B1               	decf	___fldiv@new_exp& (0+255),f,b
  5628  001B98  A0D8               	btfss	status,0,c
  5629  001B9A  07B2               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  5630  001B9C                     l6582:
  5631                           
  5632                           ; BSR set to: 0
  5633  001B9C  AE2C               	btfss	(___fldiv@b+2)^0,7,c
  5634  001B9E  EFD3  F00D         	goto	u5831
  5635  001BA2  EFD5  F00D         	goto	u5830
  5636  001BA6                     u5831:
  5637  001BA6  EFB9  F00D         	goto	l6576
  5638  001BAA                     u5830:
  5639  001BAA                     
  5640                           ; BSR set to: 0
  5641  001BAA  0E00               	movlw	0
  5642  001BAC  6FB8               	movwf	___fldiv@aexp& (0+255),b
  5643  001BAE                     
  5644                           ; BSR set to: 0
  5645  001BAE  AFB6               	btfss	(___fldiv@grs+3)& (0+255),7,b
  5646  001BB0  EFDC  F00D         	goto	u5841
  5647  001BB4  EFDE  F00D         	goto	u5840
  5648  001BB8                     u5841:
  5649  001BB8  EF02  F00E         	goto	l1996
  5650  001BBC                     u5840:
  5651  001BBC                     
  5652                           ; BSR set to: 0
  5653  001BBC  0EFF               	movlw	255
  5654  001BBE  15B3               	andwf	___fldiv@grs& (0+255),w,b
  5655  001BC0  6E32               	movwf	??___fldiv^0,c
  5656  001BC2  0EFF               	movlw	255
  5657  001BC4  15B4               	andwf	(___fldiv@grs+1)& (0+255),w,b
  5658  001BC6  6E33               	movwf	(??___fldiv+1)^0,c
  5659  001BC8  0EFF               	movlw	255
  5660  001BCA  15B5               	andwf	(___fldiv@grs+2)& (0+255),w,b
  5661  001BCC  6E34               	movwf	(??___fldiv+2)^0,c
  5662  001BCE  0E7F               	movlw	127
  5663  001BD0  15B6               	andwf	(___fldiv@grs+3)& (0+255),w,b
  5664  001BD2  6E35               	movwf	(??___fldiv+3)^0,c
  5665  001BD4  5032               	movf	??___fldiv^0,w,c
  5666  001BD6  1033               	iorwf	(??___fldiv+1)^0,w,c
  5667  001BD8  1034               	iorwf	(??___fldiv+2)^0,w,c
  5668  001BDA  1035               	iorwf	(??___fldiv+3)^0,w,c
  5669  001BDC  B4D8               	btfsc	status,2,c
  5670  001BDE  EFF3  F00D         	goto	u5851
  5671  001BE2  EFF5  F00D         	goto	u5850
  5672  001BE6                     u5851:
  5673  001BE6  EFF9  F00D         	goto	l1997
  5674  001BEA                     u5850:
  5675  001BEA                     l6590:
  5676                           
  5677                           ; BSR set to: 0
  5678  001BEA  0E01               	movlw	1
  5679  001BEC  6FB8               	movwf	___fldiv@aexp& (0+255),b
  5680  001BEE  EF02  F00E         	goto	l1996
  5681  001BF2                     l1997:
  5682                           
  5683                           ; BSR set to: 0
  5684  001BF2  A02A               	btfss	___fldiv@b^0,0,c
  5685  001BF4  EFFE  F00D         	goto	u5861
  5686  001BF8  EF00  F00E         	goto	u5860
  5687  001BFC                     u5861:
  5688  001BFC  EF02  F00E         	goto	l1996
  5689  001C00                     u5860:
  5690  001C00  EFF5  F00D         	goto	l6590
  5691  001C04                     l1996:
  5692                           
  5693                           ; BSR set to: 0
  5694  001C04  51B8               	movf	___fldiv@aexp& (0+255),w,b
  5695  001C06  B4D8               	btfsc	status,2,c
  5696  001C08  EF08  F00E         	goto	u5871
  5697  001C0C  EF0A  F00E         	goto	u5870
  5698  001C10                     u5871:
  5699  001C10  EF2E  F00E         	goto	l6602
  5700  001C14                     u5870:
  5701  001C14                     
  5702                           ; BSR set to: 0
  5703  001C14  0E01               	movlw	1
  5704  001C16  262A               	addwf	___fldiv@b^0,f,c
  5705  001C18  0E00               	movlw	0
  5706  001C1A  222B               	addwfc	(___fldiv@b+1)^0,f,c
  5707  001C1C  222C               	addwfc	(___fldiv@b+2)^0,f,c
  5708  001C1E  222D               	addwfc	(___fldiv@b+3)^0,f,c
  5709  001C20                     
  5710                           ; BSR set to: 0
  5711  001C20  A02D               	btfss	(___fldiv@b+3)^0,0,c
  5712  001C22  EF15  F00E         	goto	u5881
  5713  001C26  EF17  F00E         	goto	u5880
  5714  001C2A                     u5881:
  5715  001C2A  EF2E  F00E         	goto	l6602
  5716  001C2E                     u5880:
  5717  001C2E                     
  5718                           ; BSR set to: 0
  5719  001C2E  C02A  F032         	movff	___fldiv@b,??___fldiv
  5720  001C32  C02B  F033         	movff	___fldiv@b+1,??___fldiv+1
  5721  001C36  C02C  F034         	movff	___fldiv@b+2,??___fldiv+2
  5722  001C3A  C02D  F035         	movff	___fldiv@b+3,??___fldiv+3
  5723  001C3E  3435               	rlcf	(??___fldiv+3)^0,w,c
  5724  001C40  3235               	rrcf	(??___fldiv+3)^0,f,c
  5725  001C42  3234               	rrcf	(??___fldiv+2)^0,f,c
  5726  001C44  3233               	rrcf	(??___fldiv+1)^0,f,c
  5727  001C46  3232               	rrcf	??___fldiv^0,f,c
  5728  001C48  C032  F02A         	movff	??___fldiv,___fldiv@b
  5729  001C4C  C033  F02B         	movff	??___fldiv+1,___fldiv@b+1
  5730  001C50  C034  F02C         	movff	??___fldiv+2,___fldiv@b+2
  5731  001C54  C035  F02D         	movff	??___fldiv+3,___fldiv@b+3
  5732  001C58                     
  5733                           ; BSR set to: 0
  5734  001C58  4BB1               	infsnz	___fldiv@new_exp& (0+255),f,b
  5735  001C5A  2BB2               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  5736  001C5C                     l6602:
  5737                           
  5738                           ; BSR set to: 0
  5739  001C5C  BFB2               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  5740  001C5E  EF39  F00E         	goto	u5891
  5741  001C62  51B2               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  5742  001C64  E108               	bnz	u5890
  5743  001C66  29B1               	incf	___fldiv@new_exp& (0+255),w,b
  5744  001C68  A0D8               	btfss	status,0,c
  5745  001C6A  EF39  F00E         	goto	u5891
  5746  001C6E  EF3B  F00E         	goto	u5890
  5747  001C72                     u5891:
  5748  001C72  EF46  F00E         	goto	l6606
  5749  001C76                     u5890:
  5750  001C76                     
  5751                           ; BSR set to: 0
  5752  001C76  0E00               	movlw	0
  5753  001C78  6FB2               	movwf	(___fldiv@new_exp+1)& (0+255),b
  5754  001C7A  69B1               	setf	___fldiv@new_exp& (0+255),b
  5755  001C7C  0E00               	movlw	0
  5756  001C7E  6E2A               	movwf	___fldiv@b^0,c
  5757  001C80  0E00               	movlw	0
  5758  001C82  6E2B               	movwf	(___fldiv@b+1)^0,c
  5759  001C84  0E00               	movlw	0
  5760  001C86  6E2C               	movwf	(___fldiv@b+2)^0,c
  5761  001C88  0E00               	movlw	0
  5762  001C8A  6E2D               	movwf	(___fldiv@b+3)^0,c
  5763  001C8C                     l6606:
  5764                           
  5765                           ; BSR set to: 0
  5766  001C8C  BFB2               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  5767  001C8E  EF53  F00E         	goto	u5900
  5768  001C92  51B2               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  5769  001C94  E106               	bnz	u5901
  5770  001C96  05B1               	decf	___fldiv@new_exp& (0+255),w,b
  5771  001C98  B0D8               	btfsc	status,0,c
  5772  001C9A  EF51  F00E         	goto	u5901
  5773  001C9E  EF53  F00E         	goto	u5900
  5774  001CA2                     u5901:
  5775  001CA2  EF61  F00E         	goto	l6610
  5776  001CA6                     u5900:
  5777  001CA6                     
  5778                           ; BSR set to: 0
  5779  001CA6  0E00               	movlw	0
  5780  001CA8  6FB2               	movwf	(___fldiv@new_exp+1)& (0+255),b
  5781  001CAA  0E00               	movlw	0
  5782  001CAC  6FB1               	movwf	___fldiv@new_exp& (0+255),b
  5783  001CAE  0E00               	movlw	0
  5784  001CB0  6E2A               	movwf	___fldiv@b^0,c
  5785  001CB2  0E00               	movlw	0
  5786  001CB4  6E2B               	movwf	(___fldiv@b+1)^0,c
  5787  001CB6  0E00               	movlw	0
  5788  001CB8  6E2C               	movwf	(___fldiv@b+2)^0,c
  5789  001CBA  0E00               	movlw	0
  5790  001CBC  6E2D               	movwf	(___fldiv@b+3)^0,c
  5791  001CBE  0E00               	movlw	0
  5792  001CC0  6FB0               	movwf	___fldiv@sign& (0+255),b
  5793  001CC2                     l6610:
  5794                           
  5795                           ; BSR set to: 0
  5796  001CC2  C0B1  F0B7         	movff	___fldiv@new_exp,___fldiv@bexp
  5797  001CC6                     
  5798                           ; BSR set to: 0
  5799  001CC6  A1B7               	btfss	___fldiv@bexp& (0+255),0,b
  5800  001CC8  EF68  F00E         	goto	u5911
  5801  001CCC  EF6A  F00E         	goto	u5910
  5802  001CD0                     u5911:
  5803  001CD0  EF6D  F00E         	goto	l6616
  5804  001CD4                     u5910:
  5805  001CD4                     
  5806                           ; BSR set to: 0
  5807  001CD4  8E2C               	bsf	(___fldiv@b+2)^0,7,c
  5808  001CD6  EF6E  F00E         	goto	l6618
  5809  001CDA                     l6616:
  5810                           
  5811                           ; BSR set to: 0
  5812  001CDA  9E2C               	bcf	(___fldiv@b+2)^0,7,c
  5813  001CDC                     l6618:
  5814                           
  5815                           ; BSR set to: 0
  5816  001CDC  90D8               	bcf	status,0,c
  5817  001CDE  31B7               	rrcf	___fldiv@bexp& (0+255),w,b
  5818  001CE0  6E2D               	movwf	(___fldiv@b+3)^0,c
  5819  001CE2  EF24  F00D         	goto	l6532
  5820  001CE6                     l1983:
  5821                           
  5822                           ; BSR set to: 0
  5823  001CE6  0012               	return		;funcret
  5824  001CE8                     __end_of___fldiv:
  5825                           	callstack 0
  5826                           
  5827 ;; *************** function _PWM6_LoadDutyValue *****************
  5828 ;; Defined at:
  5829 ;;		line 74 in file "mcc_generated_files/pwm6.c"
  5830 ;; Parameters:    Size  Location     Type
  5831 ;;  dutyValue       2   19[COMRAM] unsigned short 
  5832 ;; Auto vars:     Size  Location     Type
  5833 ;;		None
  5834 ;; Return value:  Size  Location     Type
  5835 ;;                  1    wreg      void 
  5836 ;; Registers used:
  5837 ;;		wreg, status,2, status,0
  5838 ;; Tracked objects:
  5839 ;;		On entry : 0/0
  5840 ;;		On exit  : 0/0
  5841 ;;		Unchanged: 0/0
  5842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5843 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5845 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5846 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5847 ;;Total ram usage:        4 bytes
  5848 ;; Hardware stack levels used: 1
  5849 ;; Hardware stack levels required when called: 8
  5850 ;; This function calls:
  5851 ;;		Nothing
  5852 ;; This function is called by:
  5853 ;;		_setSteering
  5854 ;; This function uses a non-reentrant model
  5855 ;;
  5856                           
  5857                           	psect	text24
  5858  004012                     __ptext24:
  5859                           	callstack 0
  5860  004012                     _PWM6_LoadDutyValue:
  5861                           	callstack 20
  5862  004012                     
  5863                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  5864  004012  C014  F016         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
  5865  004016  C015  F017         	movff	PWM6_LoadDutyValue@dutyValue+1,??_PWM6_LoadDutyValue+1
  5866  00401A  90D8               	bcf	status,0,c
  5867  00401C  3217               	rrcf	(??_PWM6_LoadDutyValue+1)^0,f,c
  5868  00401E  3216               	rrcf	??_PWM6_LoadDutyValue^0,f,c
  5869  004020  90D8               	bcf	status,0,c
  5870  004022  3217               	rrcf	(??_PWM6_LoadDutyValue+1)^0,f,c
  5871  004024  3216               	rrcf	??_PWM6_LoadDutyValue^0,f,c
  5872  004026  5016               	movf	??_PWM6_LoadDutyValue^0,w,c
  5873  004028  6E69               	movwf	105,c	;volatile
  5874                           
  5875                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
  5876  00402A  C014  F016         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
  5877  00402E  0E03               	movlw	3
  5878  004030  1616               	andwf	??_PWM6_LoadDutyValue^0,f,c
  5879  004032  0E06               	movlw	6
  5880  004034  6E17               	movwf	(??_PWM6_LoadDutyValue+1)^0,c
  5881  004036                     u3115:
  5882  004036  90D8               	bcf	status,0,c
  5883  004038  3616               	rlcf	??_PWM6_LoadDutyValue^0,f,c
  5884  00403A  2E17               	decfsz	(??_PWM6_LoadDutyValue+1)^0,f,c
  5885  00403C  EF1B  F020         	goto	u3115
  5886  004040  5016               	movf	??_PWM6_LoadDutyValue^0,w,c
  5887  004042  6E68               	movwf	104,c	;volatile
  5888  004044  0012               	return		;funcret
  5889  004046                     __end_of_PWM6_LoadDutyValue:
  5890                           	callstack 0
  5891                           
  5892 ;; *************** function _PWM5_LoadDutyValue *****************
  5893 ;; Defined at:
  5894 ;;		line 74 in file "mcc_generated_files/pwm5.c"
  5895 ;; Parameters:    Size  Location     Type
  5896 ;;  dutyValue       2   19[COMRAM] unsigned short 
  5897 ;; Auto vars:     Size  Location     Type
  5898 ;;		None
  5899 ;; Return value:  Size  Location     Type
  5900 ;;                  1    wreg      void 
  5901 ;; Registers used:
  5902 ;;		wreg, status,2, status,0
  5903 ;; Tracked objects:
  5904 ;;		On entry : 0/0
  5905 ;;		On exit  : 0/0
  5906 ;;		Unchanged: 0/0
  5907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5908 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5910 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5911 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5912 ;;Total ram usage:        4 bytes
  5913 ;; Hardware stack levels used: 1
  5914 ;; Hardware stack levels required when called: 8
  5915 ;; This function calls:
  5916 ;;		Nothing
  5917 ;; This function is called by:
  5918 ;;		_setSteering
  5919 ;; This function uses a non-reentrant model
  5920 ;;
  5921                           
  5922                           	psect	text25
  5923  004046                     __ptext25:
  5924                           	callstack 0
  5925  004046                     _PWM5_LoadDutyValue:
  5926                           	callstack 20
  5927  004046                     
  5928                           ;mcc_generated_files/pwm5.c: 74:  void PWM5_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm5.c: 75:  {;mcc_generated_files/pwm5.c: 77:      PWM5DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  5929  004046  C014  F016         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
  5930  00404A  C015  F017         	movff	PWM5_LoadDutyValue@dutyValue+1,??_PWM5_LoadDutyValue+1
  5931  00404E  90D8               	bcf	status,0,c
  5932  004050  3217               	rrcf	(??_PWM5_LoadDutyValue+1)^0,f,c
  5933  004052  3216               	rrcf	??_PWM5_LoadDutyValue^0,f,c
  5934  004054  90D8               	bcf	status,0,c
  5935  004056  3217               	rrcf	(??_PWM5_LoadDutyValue+1)^0,f,c
  5936  004058  3216               	rrcf	??_PWM5_LoadDutyValue^0,f,c
  5937  00405A  5016               	movf	??_PWM5_LoadDutyValue^0,w,c
  5938  00405C  6E6D               	movwf	109,c	;volatile
  5939                           
  5940                           ;mcc_generated_files/pwm5.c: 80:      PWM5DCL = (dutyValue & 0x0003)<<6;
  5941  00405E  C014  F016         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
  5942  004062  0E03               	movlw	3
  5943  004064  1616               	andwf	??_PWM5_LoadDutyValue^0,f,c
  5944  004066  0E06               	movlw	6
  5945  004068  6E17               	movwf	(??_PWM5_LoadDutyValue+1)^0,c
  5946  00406A                     u3105:
  5947  00406A  90D8               	bcf	status,0,c
  5948  00406C  3616               	rlcf	??_PWM5_LoadDutyValue^0,f,c
  5949  00406E  2E17               	decfsz	(??_PWM5_LoadDutyValue+1)^0,f,c
  5950  004070  EF35  F020         	goto	u3105
  5951  004074  5016               	movf	??_PWM5_LoadDutyValue^0,w,c
  5952  004076  6E6C               	movwf	108,c	;volatile
  5953  004078  0012               	return		;funcret
  5954  00407A                     __end_of_PWM5_LoadDutyValue:
  5955                           	callstack 0
  5956                           
  5957 ;; *************** function _calcSpeed *****************
  5958 ;; Defined at:
  5959 ;;		line 277 in file "main.c"
  5960 ;; Parameters:    Size  Location     Type
  5961 ;;		None
  5962 ;; Auto vars:     Size  Location     Type
  5963 ;;  speed           2   39[BANK0 ] short 
  5964 ;; Return value:  Size  Location     Type
  5965 ;;                  1    wreg      void 
  5966 ;; Registers used:
  5967 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5968 ;; Tracked objects:
  5969 ;;		On entry : 0/0
  5970 ;;		On exit  : 0/0
  5971 ;;		Unchanged: 0/0
  5972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5974 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5975 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5976 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5977 ;;Total ram usage:        6 bytes
  5978 ;; Hardware stack levels used: 1
  5979 ;; Hardware stack levels required when called: 9
  5980 ;; This function calls:
  5981 ;;		___fladd
  5982 ;;		___flmul
  5983 ;;		___fltol
  5984 ;;		___xxtofl
  5985 ;; This function is called by:
  5986 ;;		_loop
  5987 ;; This function uses a non-reentrant model
  5988 ;;
  5989                           
  5990                           	psect	text26
  5991  00243C                     __ptext26:
  5992                           	callstack 0
  5993  00243C                     _calcSpeed:
  5994                           	callstack 20
  5995  00243C                     
  5996                           ;main.c: 278:     int16_t speed = 0;
  5997  00243C  0E00               	movlw	0
  5998  00243E  0100               	movlb	0	; () banked
  5999  002440  6FD4               	movwf	(calcSpeed@speed+1)& (0+255),b
  6000  002442  0E00               	movlw	0
  6001  002444  6FD3               	movwf	calcSpeed@speed& (0+255),b
  6002                           
  6003                           ;main.c: 280:     switch (driveMode) {
  6004  002446  EFD4  F012         	goto	l7280
  6005  00244A                     l7244:
  6006                           
  6007                           ; BSR set to: 0
  6008                           ;main.c: 282:             if (distFront > (30)) {
  6009  00244A  51AB               	movf	(_distFront+1)& (0+255),w,b	;volatile
  6010  00244C  E109               	bnz	u6930
  6011  00244E  0E1F               	movlw	31
  6012  002450  5DAA               	subwf	_distFront& (0+255),w,b	;volatile
  6013  002452  A0D8               	btfss	status,0,c
  6014  002454  EF2E  F012         	goto	u6931
  6015  002458  EF30  F012         	goto	u6930
  6016  00245C                     u6931:
  6017  00245C  EF32  F012         	goto	l7248
  6018  002460                     u6930:
  6019  002460                     
  6020                           ; BSR set to: 0
  6021                           ;main.c: 283:                 driveMode = Straight;
  6022  002460  0E00               	movlw	0
  6023  002462  6FA9               	movwf	_driveMode& (0+255),b
  6024  002464                     l7248:
  6025                           
  6026                           ; BSR set to: 0
  6027                           ;main.c: 285:             if (setSpeed > (100)) {
  6028  002464  BF8F               	btfsc	(_setSpeed+1)& (0+255),7,b
  6029  002466  EF3E  F012         	goto	u6941
  6030  00246A  518F               	movf	(_setSpeed+1)& (0+255),w,b
  6031  00246C  E109               	bnz	u6940
  6032  00246E  0E65               	movlw	101
  6033  002470  5D8E               	subwf	_setSpeed& (0+255),w,b
  6034  002472  A0D8               	btfss	status,0,c
  6035  002474  EF3E  F012         	goto	u6941
  6036  002478  EF40  F012         	goto	u6940
  6037  00247C                     u6941:
  6038  00247C  EF5B  F012         	goto	l7258
  6039  002480                     u6940:
  6040  002480                     
  6041                           ; BSR set to: 0
  6042                           ;main.c: 286:                     speed = setSpeed;
  6043  002480  C08E  F0D3         	movff	_setSpeed,calcSpeed@speed
  6044  002484  C08F  F0D4         	movff	_setSpeed+1,calcSpeed@speed+1
  6045  002488                     
  6046                           ; BSR set to: 0
  6047                           ;main.c: 287:                 if (distFront < (15)) {
  6048  002488  51AB               	movf	(_distFront+1)& (0+255),w,b	;volatile
  6049  00248A  E107               	bnz	u6951
  6050  00248C  0E0F               	movlw	15
  6051  00248E  5DAA               	subwf	_distFront& (0+255),w,b	;volatile
  6052  002490  B0D8               	btfsc	status,0,c
  6053  002492  EF4D  F012         	goto	u6951
  6054  002496  EF4F  F012         	goto	u6950
  6055  00249A                     u6951:
  6056  00249A  EF55  F012         	goto	l7256
  6057  00249E                     u6950:
  6058  00249E                     
  6059                           ; BSR set to: 0
  6060                           ;main.c: 288:                     speed -= 4;
  6061  00249E  0EFC               	movlw	252
  6062  0024A0  27D3               	addwf	calcSpeed@speed& (0+255),f,b
  6063  0024A2  0EFF               	movlw	255
  6064  0024A4  23D4               	addwfc	(calcSpeed@speed+1)& (0+255),f,b
  6065                           
  6066                           ;main.c: 289:                 } else {
  6067  0024A6  EFF9  F012         	goto	l7282
  6068  0024AA                     l7256:
  6069                           
  6070                           ; BSR set to: 0
  6071                           ;main.c: 290:                     speed -= 2;
  6072  0024AA  0EFE               	movlw	254
  6073  0024AC  27D3               	addwf	calcSpeed@speed& (0+255),f,b
  6074  0024AE  0EFF               	movlw	255
  6075  0024B0  23D4               	addwfc	(calcSpeed@speed+1)& (0+255),f,b
  6076  0024B2  EFF9  F012         	goto	l7282
  6077  0024B6                     l7258:
  6078                           
  6079                           ; BSR set to: 0
  6080                           ;main.c: 293:                 speed = (100);
  6081  0024B6  0E00               	movlw	0
  6082  0024B8  6FD4               	movwf	(calcSpeed@speed+1)& (0+255),b
  6083  0024BA  0E64               	movlw	100
  6084  0024BC  6FD3               	movwf	calcSpeed@speed& (0+255),b
  6085  0024BE  EFF9  F012         	goto	l7282
  6086  0024C2                     l7260:
  6087                           
  6088                           ; BSR set to: 0
  6089                           ;main.c: 297:             if (distFront < (30)) {
  6090  0024C2  51AB               	movf	(_distFront+1)& (0+255),w,b	;volatile
  6091  0024C4  E107               	bnz	u6961
  6092  0024C6  0E1E               	movlw	30
  6093  0024C8  5DAA               	subwf	_distFront& (0+255),w,b	;volatile
  6094  0024CA  B0D8               	btfsc	status,0,c
  6095  0024CC  EF6A  F012         	goto	u6961
  6096  0024D0  EF6C  F012         	goto	u6960
  6097  0024D4                     u6961:
  6098  0024D4  EF6E  F012         	goto	l7264
  6099  0024D8                     u6960:
  6100  0024D8                     
  6101                           ; BSR set to: 0
  6102                           ;main.c: 298:                 driveMode = Brake;
  6103  0024D8  0E01               	movlw	1
  6104  0024DA  6FA9               	movwf	_driveMode& (0+255),b
  6105  0024DC                     l7264:
  6106                           
  6107                           ; BSR set to: 0
  6108                           ;main.c: 301:             if (distFront >= (150)) {
  6109  0024DC  51AB               	movf	(_distFront+1)& (0+255),w,b	;volatile
  6110  0024DE  E109               	bnz	u6970
  6111  0024E0  0E96               	movlw	150
  6112  0024E2  5DAA               	subwf	_distFront& (0+255),w,b	;volatile
  6113  0024E4  A0D8               	btfss	status,0,c
  6114  0024E6  EF77  F012         	goto	u6971
  6115  0024EA  EF79  F012         	goto	u6970
  6116  0024EE                     u6971:
  6117  0024EE  EFC2  F012         	goto	l7268
  6118  0024F2                     u6970:
  6119  0024F2                     
  6120                           ; BSR set to: 0
  6121                           ;main.c: 302:                 speed = (int16_t) ((0.4) * (distFront - (150)) + (275));
  6122  0024F2  0E00               	movlw	0
  6123  0024F4  6FBD               	movwf	___fladd@a& (0+255),b
  6124  0024F6  0E80               	movlw	128
  6125  0024F8  6FBE               	movwf	(___fladd@a+1)& (0+255),b
  6126  0024FA  0E89               	movlw	137
  6127  0024FC  6FBF               	movwf	(___fladd@a+2)& (0+255),b
  6128  0024FE  0E43               	movlw	67
  6129  002500  6FC0               	movwf	(___fladd@a+3)& (0+255),b
  6130  002502  0ECD               	movlw	205
  6131  002504  6E2E               	movwf	___flmul@a^0,c
  6132  002506  0ECC               	movlw	204
  6133  002508  6E2F               	movwf	(___flmul@a+1)^0,c
  6134  00250A  0ECC               	movlw	204
  6135  00250C  6E30               	movwf	(___flmul@a+2)^0,c
  6136  00250E  0E3E               	movlw	62
  6137  002510  6E31               	movwf	(___flmul@a+3)^0,c
  6138  002512  0E6A               	movlw	106
  6139  002514  6FCF               	movwf	??_calcSpeed& (0+255),b
  6140  002516  0EFF               	movlw	255
  6141  002518  6FD0               	movwf	(??_calcSpeed+1)& (0+255),b
  6142  00251A  C0AA  F0D1         	movff	_distFront,??_calcSpeed+2	;volatile
  6143  00251E  C0AB  F0D2         	movff	_distFront+1,??_calcSpeed+3	;volatile
  6144  002522  51CF               	movf	??_calcSpeed& (0+255),w,b
  6145  002524  27D1               	addwf	(??_calcSpeed+2)& (0+255),f,b
  6146  002526  51D0               	movf	(??_calcSpeed+1)& (0+255),w,b
  6147  002528  23D2               	addwfc	(??_calcSpeed+3)& (0+255),f,b
  6148  00252A  C0D1  F01C         	movff	??_calcSpeed+2,___xxtofl@val
  6149  00252E  C0D2  F01D         	movff	??_calcSpeed+3,___xxtofl@val+1
  6150  002532  6A1E               	clrf	(___xxtofl@val+2)^0,c
  6151  002534  6A1F               	clrf	(___xxtofl@val+3)^0,c
  6152  002536  0E00               	movlw	0
  6153  002538  EC1E  F014         	call	___xxtofl
  6154  00253C  C01C  F02A         	movff	?___xxtofl,___flmul@b
  6155  002540  C01D  F02B         	movff	?___xxtofl+1,___flmul@b+1
  6156  002544  C01E  F02C         	movff	?___xxtofl+2,___flmul@b+2
  6157  002548  C01F  F02D         	movff	?___xxtofl+3,___flmul@b+3
  6158  00254C  EC7E  F00A         	call	___flmul	;wreg free
  6159  002550  C02A  F0B9         	movff	?___flmul,___fladd@b
  6160  002554  C02B  F0BA         	movff	?___flmul+1,___fladd@b+1
  6161  002558  C02C  F0BB         	movff	?___flmul+2,___fladd@b+2
  6162  00255C  C02D  F0BC         	movff	?___flmul+3,___fladd@b+3
  6163  002560  EC1D  F008         	call	___fladd	;wreg free
  6164  002564  C0B9  F0C5         	movff	?___fladd,___fltol@f1
  6165  002568  C0BA  F0C6         	movff	?___fladd+1,___fltol@f1+1
  6166  00256C  C0BB  F0C7         	movff	?___fladd+2,___fltol@f1+2
  6167  002570  C0BC  F0C8         	movff	?___fladd+3,___fltol@f1+3
  6168  002574  EC7C  F019         	call	___fltol	;wreg free
  6169  002578  C0C5  F0D3         	movff	?___fltol,calcSpeed@speed
  6170  00257C  C0C6  F0D4         	movff	?___fltol+1,calcSpeed@speed+1
  6171                           
  6172                           ;main.c: 303:             } else {
  6173  002580  EFF9  F012         	goto	l7282
  6174  002584                     l7268:
  6175                           
  6176                           ; BSR set to: 0
  6177                           ;main.c: 304:                 speed = (275);
  6178  002584  0E01               	movlw	1
  6179  002586  6FD4               	movwf	(calcSpeed@speed+1)& (0+255),b
  6180  002588  0E13               	movlw	19
  6181  00258A  6FD3               	movwf	calcSpeed@speed& (0+255),b
  6182  00258C  EFF9  F012         	goto	l7282
  6183  002590                     l7270:
  6184                           
  6185                           ; BSR set to: 0
  6186                           ;main.c: 309:             speed = (-125);
  6187  002590  0EFF               	movlw	255
  6188  002592  6FD4               	movwf	(calcSpeed@speed+1)& (0+255),b
  6189  002594  0E83               	movlw	131
  6190  002596  6FD3               	movwf	calcSpeed@speed& (0+255),b
  6191                           
  6192                           ;main.c: 310:             break;
  6193  002598  EFF9  F012         	goto	l7282
  6194  00259C                     l7274:
  6195                           
  6196                           ; BSR set to: 0
  6197                           ;main.c: 315:             speed = (200);
  6198  00259C  0E00               	movlw	0
  6199  00259E  6FD4               	movwf	(calcSpeed@speed+1)& (0+255),b
  6200  0025A0  0EC8               	movlw	200
  6201  0025A2  6FD3               	movwf	calcSpeed@speed& (0+255),b
  6202                           
  6203                           ;main.c: 316:             break;
  6204  0025A4  EFF9  F012         	goto	l7282
  6205  0025A8                     l7280:
  6206                           
  6207                           ; BSR set to: 0
  6208  0025A8  51A9               	movf	_driveMode& (0+255),w,b
  6209  0025AA  6FCF               	movwf	??_calcSpeed& (0+255),b
  6210  0025AC  6BD0               	clrf	(??_calcSpeed+1)& (0+255),b
  6211                           
  6212                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6213                           ; Switch size 1, requested type "simple"
  6214                           ; Number of cases is 1, Range of values is 0 to 0
  6215                           ; switch strategies available:
  6216                           ; Name         Instructions Cycles
  6217                           ; simple_byte            4     3 (average)
  6218                           ;	Chosen strategy is simple_byte
  6219  0025AE  51D0               	movf	(??_calcSpeed+1)& (0+255),w,b
  6220  0025B0  0A00               	xorlw	0	; case 0
  6221  0025B2  B4D8               	btfsc	status,2,c
  6222  0025B4  EFDE  F012         	goto	l7536
  6223  0025B8  EFF9  F012         	goto	l7282
  6224  0025BC                     l7536:
  6225                           
  6226                           ; BSR set to: 0
  6227                           ; Switch size 1, requested type "simple"
  6228                           ; Number of cases is 6, Range of values is 0 to 5
  6229                           ; switch strategies available:
  6230                           ; Name         Instructions Cycles
  6231                           ; simple_byte           19    10 (average)
  6232                           ;	Chosen strategy is simple_byte
  6233  0025BC  51CF               	movf	??_calcSpeed& (0+255),w,b
  6234  0025BE  0A00               	xorlw	0	; case 0
  6235  0025C0  B4D8               	btfsc	status,2,c
  6236  0025C2  EF61  F012         	goto	l7260
  6237  0025C6  0A01               	xorlw	1	; case 1
  6238  0025C8  B4D8               	btfsc	status,2,c
  6239  0025CA  EF25  F012         	goto	l7244
  6240  0025CE  0A03               	xorlw	3	; case 2
  6241  0025D0  B4D8               	btfsc	status,2,c
  6242  0025D2  EFC8  F012         	goto	l7270
  6243  0025D6  0A01               	xorlw	1	; case 3
  6244  0025D8  B4D8               	btfsc	status,2,c
  6245  0025DA  EFC8  F012         	goto	l7270
  6246  0025DE  0A07               	xorlw	7	; case 4
  6247  0025E0  B4D8               	btfsc	status,2,c
  6248  0025E2  EFCE  F012         	goto	l7274
  6249  0025E6  0A01               	xorlw	1	; case 5
  6250  0025E8  B4D8               	btfsc	status,2,c
  6251  0025EA  EFCE  F012         	goto	l7274
  6252  0025EE  EFF9  F012         	goto	l7282
  6253  0025F2                     l7282:
  6254                           
  6255                           ;main.c: 322:     if (speed > (400)) {
  6256  0025F2  0100               	movlb	0	; () banked
  6257  0025F4  BFD4               	btfsc	(calcSpeed@speed+1)& (0+255),7,b
  6258  0025F6  EF06  F013         	goto	u6981
  6259  0025FA  0E91               	movlw	145
  6260  0025FC  5DD3               	subwf	calcSpeed@speed& (0+255),w,b
  6261  0025FE  0E01               	movlw	1
  6262  002600  59D4               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
  6263  002602  A0D8               	btfss	status,0,c
  6264  002604  EF06  F013         	goto	u6981
  6265  002608  EF08  F013         	goto	u6980
  6266  00260C                     u6981:
  6267  00260C  EF0C  F013         	goto	l7286
  6268  002610                     u6980:
  6269  002610                     
  6270                           ; BSR set to: 0
  6271                           ;main.c: 323:         speed = (400);
  6272  002610  0E01               	movlw	1
  6273  002612  6FD4               	movwf	(calcSpeed@speed+1)& (0+255),b
  6274  002614  0E90               	movlw	144
  6275  002616  6FD3               	movwf	calcSpeed@speed& (0+255),b
  6276  002618                     l7286:
  6277                           
  6278                           ; BSR set to: 0
  6279                           ;main.c: 325:     if (speed < (-250)) {
  6280  002618  AFD4               	btfss	(calcSpeed@speed+1)& (0+255),7,b
  6281  00261A  EF18  F013         	goto	u6991
  6282  00261E  0E06               	movlw	6
  6283  002620  5DD3               	subwf	calcSpeed@speed& (0+255),w,b
  6284  002622  0EFF               	movlw	255
  6285  002624  59D4               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
  6286  002626  B0D8               	btfsc	status,0,c
  6287  002628  EF18  F013         	goto	u6991
  6288  00262C  EF1A  F013         	goto	u6990
  6289  002630                     u6991:
  6290  002630  EF1E  F013         	goto	l7290
  6291  002634                     u6990:
  6292  002634                     
  6293                           ; BSR set to: 0
  6294                           ;main.c: 326:         speed = (-250);
  6295  002634  0EFF               	movlw	255
  6296  002636  6FD4               	movwf	(calcSpeed@speed+1)& (0+255),b
  6297  002638  0E06               	movlw	6
  6298  00263A  6FD3               	movwf	calcSpeed@speed& (0+255),b
  6299  00263C                     l7290:
  6300                           
  6301                           ; BSR set to: 0
  6302                           ;main.c: 328:     setSpeed = speed;
  6303  00263C  C0D3  F08E         	movff	calcSpeed@speed,_setSpeed
  6304  002640  C0D4  F08F         	movff	calcSpeed@speed+1,_setSpeed+1
  6305  002644                     
  6306                           ; BSR set to: 0
  6307  002644  0012               	return		;funcret
  6308  002646                     __end_of_calcSpeed:
  6309                           	callstack 0
  6310                           
  6311 ;; *************** function ___fladd *****************
  6312 ;; Defined at:
  6313 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  6314 ;; Parameters:    Size  Location     Type
  6315 ;;  b               4   13[BANK0 ] void 
  6316 ;;  a               4   17[BANK0 ] void 
  6317 ;; Auto vars:     Size  Location     Type
  6318 ;;  grs             1   24[BANK0 ] unsigned char 
  6319 ;;  bexp            1   23[BANK0 ] unsigned char 
  6320 ;;  aexp            1   22[BANK0 ] unsigned char 
  6321 ;;  signs           1   21[BANK0 ] unsigned char 
  6322 ;; Return value:  Size  Location     Type
  6323 ;;                  4   13[BANK0 ] unsigned char 
  6324 ;; Registers used:
  6325 ;;		wreg, status,2, status,0
  6326 ;; Tracked objects:
  6327 ;;		On entry : 0/0
  6328 ;;		On exit  : 0/0
  6329 ;;		Unchanged: 0/0
  6330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6331 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6332 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6333 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6334 ;;      Totals:         4      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6335 ;;Total ram usage:       16 bytes
  6336 ;; Hardware stack levels used: 1
  6337 ;; Hardware stack levels required when called: 8
  6338 ;; This function calls:
  6339 ;;		Nothing
  6340 ;; This function is called by:
  6341 ;;		_calcSpeed
  6342 ;; This function uses a non-reentrant model
  6343 ;;
  6344                           
  6345                           	psect	text27
  6346  00103A                     __ptext27:
  6347                           	callstack 0
  6348  00103A                     ___fladd:
  6349                           	callstack 20
  6350  00103A  0100               	movlb	0	; () banked
  6351  00103C  51BC               	movf	(___fladd@b+3)& (0+255),w,b
  6352  00103E  0B80               	andlw	128
  6353  001040  6FC1               	movwf	___fladd@signs& (0+255),b
  6354  001042  51BC               	movf	(___fladd@b+3)& (0+255),w,b
  6355  001044  25BC               	addwf	(___fladd@b+3)& (0+255),w,b
  6356  001046  6FC3               	movwf	___fladd@bexp& (0+255),b
  6357  001048                     
  6358                           ; BSR set to: 0
  6359  001048  AFBB               	btfss	(___fladd@b+2)& (0+255),7,b
  6360  00104A  EF29  F008         	goto	u6041
  6361  00104E  EF2B  F008         	goto	u6040
  6362  001052                     u6041:
  6363  001052  EF2C  F008         	goto	l6732
  6364  001056                     u6040:
  6365  001056                     
  6366                           ; BSR set to: 0
  6367  001056  81C3               	bsf	___fladd@bexp& (0+255),0,b
  6368  001058                     l6732:
  6369                           
  6370                           ; BSR set to: 0
  6371  001058  51C3               	movf	___fladd@bexp& (0+255),w,b
  6372  00105A  B4D8               	btfsc	status,2,c
  6373  00105C  EF32  F008         	goto	u6051
  6374  001060  EF34  F008         	goto	u6050
  6375  001064                     u6051:
  6376  001064  EF49  F008         	goto	l6742
  6377  001068                     u6050:
  6378  001068                     
  6379                           ; BSR set to: 0
  6380  001068  29C3               	incf	___fladd@bexp& (0+255),w,b
  6381  00106A  A4D8               	btfss	status,2,c
  6382  00106C  EF3A  F008         	goto	u6061
  6383  001070  EF3C  F008         	goto	u6060
  6384  001074                     u6061:
  6385  001074  EF44  F008         	goto	l6738
  6386  001078                     u6060:
  6387  001078                     
  6388                           ; BSR set to: 0
  6389  001078  0E00               	movlw	0
  6390  00107A  6FB9               	movwf	___fladd@b& (0+255),b
  6391  00107C  0E00               	movlw	0
  6392  00107E  6FBA               	movwf	(___fladd@b+1)& (0+255),b
  6393  001080  0E00               	movlw	0
  6394  001082  6FBB               	movwf	(___fladd@b+2)& (0+255),b
  6395  001084  0E00               	movlw	0
  6396  001086  6FBC               	movwf	(___fladd@b+3)& (0+255),b
  6397  001088                     l6738:
  6398                           
  6399                           ; BSR set to: 0
  6400  001088  8FBB               	bsf	(___fladd@b+2)& (0+255),7,b
  6401  00108A                     
  6402                           ; BSR set to: 0
  6403  00108A  0E00               	movlw	0
  6404  00108C  6FBC               	movwf	(___fladd@b+3)& (0+255),b
  6405  00108E  EF51  F008         	goto	l6744
  6406  001092                     l6742:
  6407                           
  6408                           ; BSR set to: 0
  6409  001092  0E00               	movlw	0
  6410  001094  6FB9               	movwf	___fladd@b& (0+255),b
  6411  001096  0E00               	movlw	0
  6412  001098  6FBA               	movwf	(___fladd@b+1)& (0+255),b
  6413  00109A  0E00               	movlw	0
  6414  00109C  6FBB               	movwf	(___fladd@b+2)& (0+255),b
  6415  00109E  0E00               	movlw	0
  6416  0010A0  6FBC               	movwf	(___fladd@b+3)& (0+255),b
  6417  0010A2                     l6744:
  6418                           
  6419                           ; BSR set to: 0
  6420  0010A2  51C0               	movf	(___fladd@a+3)& (0+255),w,b
  6421  0010A4  0B80               	andlw	128
  6422  0010A6  6FC2               	movwf	___fladd@aexp& (0+255),b
  6423  0010A8                     
  6424                           ; BSR set to: 0
  6425  0010A8  51C1               	movf	___fladd@signs& (0+255),w,b
  6426  0010AA  19C2               	xorwf	___fladd@aexp& (0+255),w,b
  6427  0010AC  B4D8               	btfsc	status,2,c
  6428  0010AE  EF5B  F008         	goto	u6071
  6429  0010B2  EF5D  F008         	goto	u6070
  6430  0010B6                     u6071:
  6431  0010B6  EF5E  F008         	goto	l6750
  6432  0010BA                     u6070:
  6433  0010BA                     
  6434                           ; BSR set to: 0
  6435  0010BA  8DC1               	bsf	___fladd@signs& (0+255),6,b
  6436  0010BC                     l6750:
  6437                           
  6438                           ; BSR set to: 0
  6439  0010BC  51C0               	movf	(___fladd@a+3)& (0+255),w,b
  6440  0010BE  25C0               	addwf	(___fladd@a+3)& (0+255),w,b
  6441  0010C0  6FC2               	movwf	___fladd@aexp& (0+255),b
  6442  0010C2                     
  6443                           ; BSR set to: 0
  6444  0010C2  AFBF               	btfss	(___fladd@a+2)& (0+255),7,b
  6445  0010C4  EF66  F008         	goto	u6081
  6446  0010C8  EF68  F008         	goto	u6080
  6447  0010CC                     u6081:
  6448  0010CC  EF69  F008         	goto	l6756
  6449  0010D0                     u6080:
  6450  0010D0                     
  6451                           ; BSR set to: 0
  6452  0010D0  81C2               	bsf	___fladd@aexp& (0+255),0,b
  6453  0010D2                     l6756:
  6454                           
  6455                           ; BSR set to: 0
  6456  0010D2  51C2               	movf	___fladd@aexp& (0+255),w,b
  6457  0010D4  B4D8               	btfsc	status,2,c
  6458  0010D6  EF6F  F008         	goto	u6091
  6459  0010DA  EF71  F008         	goto	u6090
  6460  0010DE                     u6091:
  6461  0010DE  EF86  F008         	goto	l6766
  6462  0010E2                     u6090:
  6463  0010E2                     
  6464                           ; BSR set to: 0
  6465  0010E2  29C2               	incf	___fladd@aexp& (0+255),w,b
  6466  0010E4  A4D8               	btfss	status,2,c
  6467  0010E6  EF77  F008         	goto	u6101
  6468  0010EA  EF79  F008         	goto	u6100
  6469  0010EE                     u6101:
  6470  0010EE  EF81  F008         	goto	l6762
  6471  0010F2                     u6100:
  6472  0010F2                     
  6473                           ; BSR set to: 0
  6474  0010F2  0E00               	movlw	0
  6475  0010F4  6FBD               	movwf	___fladd@a& (0+255),b
  6476  0010F6  0E00               	movlw	0
  6477  0010F8  6FBE               	movwf	(___fladd@a+1)& (0+255),b
  6478  0010FA  0E00               	movlw	0
  6479  0010FC  6FBF               	movwf	(___fladd@a+2)& (0+255),b
  6480  0010FE  0E00               	movlw	0
  6481  001100  6FC0               	movwf	(___fladd@a+3)& (0+255),b
  6482  001102                     l6762:
  6483                           
  6484                           ; BSR set to: 0
  6485  001102  8FBF               	bsf	(___fladd@a+2)& (0+255),7,b
  6486  001104                     
  6487                           ; BSR set to: 0
  6488  001104  0E00               	movlw	0
  6489  001106  6FC0               	movwf	(___fladd@a+3)& (0+255),b
  6490  001108  EF8E  F008         	goto	l6768
  6491  00110C                     l6766:
  6492                           
  6493                           ; BSR set to: 0
  6494  00110C  0E00               	movlw	0
  6495  00110E  6FBD               	movwf	___fladd@a& (0+255),b
  6496  001110  0E00               	movlw	0
  6497  001112  6FBE               	movwf	(___fladd@a+1)& (0+255),b
  6498  001114  0E00               	movlw	0
  6499  001116  6FBF               	movwf	(___fladd@a+2)& (0+255),b
  6500  001118  0E00               	movlw	0
  6501  00111A  6FC0               	movwf	(___fladd@a+3)& (0+255),b
  6502  00111C                     l6768:
  6503                           
  6504                           ; BSR set to: 0
  6505  00111C  51C3               	movf	___fladd@bexp& (0+255),w,b
  6506  00111E  5DC2               	subwf	___fladd@aexp& (0+255),w,b
  6507  001120  B0D8               	btfsc	status,0,c
  6508  001122  EF95  F008         	goto	u6111
  6509  001126  EF97  F008         	goto	u6110
  6510  00112A                     u6111:
  6511  00112A  EFBE  F008         	goto	l6804
  6512  00112E                     u6110:
  6513  00112E                     
  6514                           ; BSR set to: 0
  6515  00112E  ADC1               	btfss	___fladd@signs& (0+255),6,b
  6516  001130  EF9C  F008         	goto	u6121
  6517  001134  EF9E  F008         	goto	u6120
  6518  001138                     u6121:
  6519  001138  EFA0  F008         	goto	l6774
  6520  00113C                     u6120:
  6521  00113C                     
  6522                           ; BSR set to: 0
  6523  00113C  0E80               	movlw	128
  6524  00113E  1BC1               	xorwf	___fladd@signs& (0+255),f,b
  6525  001140                     l6774:
  6526                           
  6527                           ; BSR set to: 0
  6528  001140  C0C3  F0C4         	movff	___fladd@bexp,___fladd@grs
  6529  001144                     
  6530                           ; BSR set to: 0
  6531  001144  C0C2  F0C3         	movff	___fladd@aexp,___fladd@bexp
  6532  001148                     
  6533                           ; BSR set to: 0
  6534  001148  C0C4  F0C2         	movff	___fladd@grs,___fladd@aexp
  6535  00114C                     
  6536                           ; BSR set to: 0
  6537  00114C  C0B9  F0C4         	movff	___fladd@b,___fladd@grs
  6538  001150                     
  6539                           ; BSR set to: 0
  6540  001150  C0BD  F0B9         	movff	___fladd@a,___fladd@b
  6541  001154                     
  6542                           ; BSR set to: 0
  6543  001154  C0C4  F0BD         	movff	___fladd@grs,___fladd@a
  6544  001158                     
  6545                           ; BSR set to: 0
  6546  001158  C0BA  F0C4         	movff	___fladd@b+1,___fladd@grs
  6547  00115C                     
  6548                           ; BSR set to: 0
  6549  00115C  C0BE  F0BA         	movff	___fladd@a+1,___fladd@b+1
  6550  001160                     
  6551                           ; BSR set to: 0
  6552  001160  C0C4  F0BE         	movff	___fladd@grs,___fladd@a+1
  6553  001164                     
  6554                           ; BSR set to: 0
  6555  001164  C0BB  F0C4         	movff	___fladd@b+2,___fladd@grs
  6556  001168                     
  6557                           ; BSR set to: 0
  6558  001168  C0BF  F0BB         	movff	___fladd@a+2,___fladd@b+2
  6559  00116C                     
  6560                           ; BSR set to: 0
  6561  00116C  C0C4  F0BF         	movff	___fladd@grs,___fladd@a+2
  6562  001170                     
  6563                           ; BSR set to: 0
  6564  001170  C0BC  F0C4         	movff	___fladd@b+3,___fladd@grs
  6565  001174                     
  6566                           ; BSR set to: 0
  6567  001174  C0C0  F0BC         	movff	___fladd@a+3,___fladd@b+3
  6568  001178                     
  6569                           ; BSR set to: 0
  6570  001178  C0C4  F0C0         	movff	___fladd@grs,___fladd@a+3
  6571  00117C                     l6804:
  6572                           
  6573                           ; BSR set to: 0
  6574  00117C  0E00               	movlw	0
  6575  00117E  6FC4               	movwf	___fladd@grs& (0+255),b
  6576  001180                     
  6577                           ; BSR set to: 0
  6578  001180  51C3               	movf	___fladd@bexp& (0+255),w,b
  6579  001182  C0C2  F036         	movff	___fladd@aexp,??___fladd
  6580  001186  6A37               	clrf	(??___fladd+1)^0,c
  6581  001188  5E36               	subwf	??___fladd^0,f,c
  6582  00118A  0E00               	movlw	0
  6583  00118C  5A37               	subwfb	(??___fladd+1)^0,f,c
  6584  00118E  BE37               	btfsc	(??___fladd+1)^0,7,c
  6585  001190  EFD3  F008         	goto	u6131
  6586  001194  5037               	movf	(??___fladd+1)^0,w,c
  6587  001196  E109               	bnz	u6130
  6588  001198  0E1A               	movlw	26
  6589  00119A  5C36               	subwf	??___fladd^0,w,c
  6590  00119C  A0D8               	btfss	status,0,c
  6591  00119E  EFD3  F008         	goto	u6131
  6592  0011A2  EFD5  F008         	goto	u6130
  6593  0011A6                     u6131:
  6594  0011A6  EF0C  F009         	goto	l1930
  6595  0011AA                     u6130:
  6596  0011AA                     
  6597                           ; BSR set to: 0
  6598  0011AA  51B9               	movf	___fladd@b& (0+255),w,b
  6599  0011AC  11BA               	iorwf	(___fladd@b+1)& (0+255),w,b
  6600  0011AE  11BB               	iorwf	(___fladd@b+2)& (0+255),w,b
  6601  0011B0  11BC               	iorwf	(___fladd@b+3)& (0+255),w,b
  6602  0011B2  A4D8               	btfss	status,2,c
  6603  0011B4  EFDE  F008         	goto	u6141
  6604  0011B8  EFE1  F008         	goto	u6140
  6605  0011BC                     u6141:
  6606  0011BC  0E01               	movlw	1
  6607  0011BE  EFE2  F008         	goto	u6150
  6608  0011C2                     u6140:
  6609  0011C2  0E00               	movlw	0
  6610  0011C4                     u6150:
  6611  0011C4  6FC4               	movwf	___fladd@grs& (0+255),b
  6612  0011C6                     
  6613                           ; BSR set to: 0
  6614  0011C6  0E00               	movlw	0
  6615  0011C8  6FB9               	movwf	___fladd@b& (0+255),b
  6616  0011CA  0E00               	movlw	0
  6617  0011CC  6FBA               	movwf	(___fladd@b+1)& (0+255),b
  6618  0011CE  0E00               	movlw	0
  6619  0011D0  6FBB               	movwf	(___fladd@b+2)& (0+255),b
  6620  0011D2  0E00               	movlw	0
  6621  0011D4  6FBC               	movwf	(___fladd@b+3)& (0+255),b
  6622  0011D6                     
  6623                           ; BSR set to: 0
  6624  0011D6  C0C2  F0C3         	movff	___fladd@aexp,___fladd@bexp
  6625  0011DA  EF15  F009         	goto	l1929
  6626  0011DE                     l1931:
  6627                           
  6628                           ; BSR set to: 0
  6629  0011DE  A1C4               	btfss	___fladd@grs& (0+255),0,b
  6630  0011E0  EFF4  F008         	goto	u6161
  6631  0011E4  EFF6  F008         	goto	u6160
  6632  0011E8                     u6161:
  6633  0011E8  EFFC  F008         	goto	l6816
  6634  0011EC                     u6160:
  6635  0011EC                     
  6636                           ; BSR set to: 0
  6637  0011EC  90D8               	bcf	status,0,c
  6638  0011EE  31C4               	rrcf	___fladd@grs& (0+255),w,b
  6639  0011F0  0901               	iorlw	1
  6640  0011F2  6FC4               	movwf	___fladd@grs& (0+255),b
  6641  0011F4  EFFE  F008         	goto	l6818
  6642  0011F8                     l6816:
  6643                           
  6644                           ; BSR set to: 0
  6645  0011F8  90D8               	bcf	status,0,c
  6646  0011FA  33C4               	rrcf	___fladd@grs& (0+255),f,b
  6647  0011FC                     l6818:
  6648                           
  6649                           ; BSR set to: 0
  6650  0011FC  A1B9               	btfss	___fladd@b& (0+255),0,b
  6651  0011FE  EF03  F009         	goto	u6171
  6652  001202  EF05  F009         	goto	u6170
  6653  001206                     u6171:
  6654  001206  EF06  F009         	goto	l6822
  6655  00120A                     u6170:
  6656  00120A                     
  6657                           ; BSR set to: 0
  6658  00120A  8FC4               	bsf	___fladd@grs& (0+255),7,b
  6659  00120C                     l6822:
  6660                           
  6661                           ; BSR set to: 0
  6662  00120C  35BC               	rlcf	(___fladd@b+3)& (0+255),w,b
  6663  00120E  33BC               	rrcf	(___fladd@b+3)& (0+255),f,b
  6664  001210  33BB               	rrcf	(___fladd@b+2)& (0+255),f,b
  6665  001212  33BA               	rrcf	(___fladd@b+1)& (0+255),f,b
  6666  001214  33B9               	rrcf	___fladd@b& (0+255),f,b
  6667  001216                     
  6668                           ; BSR set to: 0
  6669  001216  2BC3               	incf	___fladd@bexp& (0+255),f,b
  6670  001218                     l1930:
  6671                           
  6672                           ; BSR set to: 0
  6673  001218  51C2               	movf	___fladd@aexp& (0+255),w,b
  6674  00121A  5DC3               	subwf	___fladd@bexp& (0+255),w,b
  6675  00121C  A0D8               	btfss	status,0,c
  6676  00121E  EF13  F009         	goto	u6181
  6677  001222  EF15  F009         	goto	u6180
  6678  001226                     u6181:
  6679  001226  EFEF  F008         	goto	l1931
  6680  00122A                     u6180:
  6681  00122A                     l1929:
  6682                           
  6683                           ; BSR set to: 0
  6684  00122A  BDC1               	btfsc	___fladd@signs& (0+255),6,b
  6685  00122C  EF1A  F009         	goto	u6191
  6686  001230  EF1C  F009         	goto	u6190
  6687  001234                     u6191:
  6688  001234  EF5C  F009         	goto	l6850
  6689  001238                     u6190:
  6690  001238                     
  6691                           ; BSR set to: 0
  6692  001238  51C3               	movf	___fladd@bexp& (0+255),w,b
  6693  00123A  A4D8               	btfss	status,2,c
  6694  00123C  EF22  F009         	goto	u6201
  6695  001240  EF24  F009         	goto	u6200
  6696  001244                     u6201:
  6697  001244  EF2E  F009         	goto	l6832
  6698  001248                     u6200:
  6699  001248                     
  6700                           ; BSR set to: 0
  6701  001248  0E00               	movlw	0
  6702  00124A  6FB9               	movwf	?___fladd& (0+255),b
  6703  00124C  0E00               	movlw	0
  6704  00124E  6FBA               	movwf	(?___fladd+1)& (0+255),b
  6705  001250  0E00               	movlw	0
  6706  001252  6FBB               	movwf	(?___fladd+2)& (0+255),b
  6707  001254  0E00               	movlw	0
  6708  001256  6FBC               	movwf	(?___fladd+3)& (0+255),b
  6709  001258  EF7D  F00A         	goto	l1938
  6710  00125C                     l6832:
  6711                           
  6712                           ; BSR set to: 0
  6713  00125C  51BD               	movf	___fladd@a& (0+255),w,b
  6714  00125E  27B9               	addwf	___fladd@b& (0+255),f,b
  6715  001260  51BE               	movf	(___fladd@a+1)& (0+255),w,b
  6716  001262  23BA               	addwfc	(___fladd@b+1)& (0+255),f,b
  6717  001264  51BF               	movf	(___fladd@a+2)& (0+255),w,b
  6718  001266  23BB               	addwfc	(___fladd@b+2)& (0+255),f,b
  6719  001268  51C0               	movf	(___fladd@a+3)& (0+255),w,b
  6720  00126A  23BC               	addwfc	(___fladd@b+3)& (0+255),f,b
  6721  00126C                     
  6722                           ; BSR set to: 0
  6723  00126C  A1BC               	btfss	(___fladd@b+3)& (0+255),0,b
  6724  00126E  EF3B  F009         	goto	u6211
  6725  001272  EF3D  F009         	goto	u6210
  6726  001276                     u6211:
  6727  001276  EFE9  F009         	goto	l6886
  6728  00127A                     u6210:
  6729  00127A                     
  6730                           ; BSR set to: 0
  6731  00127A  A1C4               	btfss	___fladd@grs& (0+255),0,b
  6732  00127C  EF42  F009         	goto	u6221
  6733  001280  EF44  F009         	goto	u6220
  6734  001284                     u6221:
  6735  001284  EF4A  F009         	goto	l6840
  6736  001288                     u6220:
  6737  001288                     
  6738                           ; BSR set to: 0
  6739  001288  90D8               	bcf	status,0,c
  6740  00128A  31C4               	rrcf	___fladd@grs& (0+255),w,b
  6741  00128C  0901               	iorlw	1
  6742  00128E  6FC4               	movwf	___fladd@grs& (0+255),b
  6743  001290  EF4C  F009         	goto	l6842
  6744  001294                     l6840:
  6745                           
  6746                           ; BSR set to: 0
  6747  001294  90D8               	bcf	status,0,c
  6748  001296  33C4               	rrcf	___fladd@grs& (0+255),f,b
  6749  001298                     l6842:
  6750                           
  6751                           ; BSR set to: 0
  6752  001298  A1B9               	btfss	___fladd@b& (0+255),0,b
  6753  00129A  EF51  F009         	goto	u6231
  6754  00129E  EF53  F009         	goto	u6230
  6755  0012A2                     u6231:
  6756  0012A2  EF54  F009         	goto	l6846
  6757  0012A6                     u6230:
  6758  0012A6                     
  6759                           ; BSR set to: 0
  6760  0012A6  8FC4               	bsf	___fladd@grs& (0+255),7,b
  6761  0012A8                     l6846:
  6762                           
  6763                           ; BSR set to: 0
  6764  0012A8  35BC               	rlcf	(___fladd@b+3)& (0+255),w,b
  6765  0012AA  33BC               	rrcf	(___fladd@b+3)& (0+255),f,b
  6766  0012AC  33BB               	rrcf	(___fladd@b+2)& (0+255),f,b
  6767  0012AE  33BA               	rrcf	(___fladd@b+1)& (0+255),f,b
  6768  0012B0  33B9               	rrcf	___fladd@b& (0+255),f,b
  6769  0012B2                     
  6770                           ; BSR set to: 0
  6771  0012B2  2BC3               	incf	___fladd@bexp& (0+255),f,b
  6772  0012B4  EFE9  F009         	goto	l6886
  6773  0012B8                     l6850:
  6774                           
  6775                           ; BSR set to: 0
  6776  0012B8  51BD               	movf	___fladd@a& (0+255),w,b
  6777  0012BA  5DB9               	subwf	___fladd@b& (0+255),w,b
  6778  0012BC  51BE               	movf	(___fladd@a+1)& (0+255),w,b
  6779  0012BE  59BA               	subwfb	(___fladd@b+1)& (0+255),w,b
  6780  0012C0  51BF               	movf	(___fladd@a+2)& (0+255),w,b
  6781  0012C2  59BB               	subwfb	(___fladd@b+2)& (0+255),w,b
  6782  0012C4  51BC               	movf	(___fladd@b+3)& (0+255),w,b
  6783  0012C6  0A80               	xorlw	128
  6784  0012C8  6E36               	movwf	??___fladd^0,c
  6785  0012CA  51C0               	movf	(___fladd@a+3)& (0+255),w,b
  6786  0012CC  0A80               	xorlw	128
  6787  0012CE  5836               	subwfb	??___fladd^0,w,c
  6788  0012D0  B0D8               	btfsc	status,0,c
  6789  0012D2  EF6D  F009         	goto	u6241
  6790  0012D6  EF6F  F009         	goto	u6240
  6791  0012DA                     u6241:
  6792  0012DA  EF9A  F009         	goto	l6860
  6793  0012DE                     u6240:
  6794  0012DE                     
  6795                           ; BSR set to: 0
  6796  0012DE  51B9               	movf	___fladd@b& (0+255),w,b
  6797  0012E0  5DBD               	subwf	___fladd@a& (0+255),w,b
  6798  0012E2  6E36               	movwf	??___fladd^0,c
  6799  0012E4  51BA               	movf	(___fladd@b+1)& (0+255),w,b
  6800  0012E6  59BE               	subwfb	(___fladd@a+1)& (0+255),w,b
  6801  0012E8  6E37               	movwf	(??___fladd+1)^0,c
  6802  0012EA  51BB               	movf	(___fladd@b+2)& (0+255),w,b
  6803  0012EC  59BF               	subwfb	(___fladd@a+2)& (0+255),w,b
  6804  0012EE  6E38               	movwf	(??___fladd+2)^0,c
  6805  0012F0  51BC               	movf	(___fladd@b+3)& (0+255),w,b
  6806  0012F2  59C0               	subwfb	(___fladd@a+3)& (0+255),w,b
  6807  0012F4  6E39               	movwf	(??___fladd+3)^0,c
  6808  0012F6  0EFF               	movlw	255
  6809  0012F8  2436               	addwf	??___fladd^0,w,c
  6810  0012FA  6FB9               	movwf	___fladd@b& (0+255),b
  6811  0012FC  0EFF               	movlw	255
  6812  0012FE  2037               	addwfc	(??___fladd+1)^0,w,c
  6813  001300  6FBA               	movwf	(___fladd@b+1)& (0+255),b
  6814  001302  0EFF               	movlw	255
  6815  001304  2038               	addwfc	(??___fladd+2)^0,w,c
  6816  001306  6FBB               	movwf	(___fladd@b+2)& (0+255),b
  6817  001308  0EFF               	movlw	255
  6818  00130A  2039               	addwfc	(??___fladd+3)^0,w,c
  6819  00130C  6FBC               	movwf	(___fladd@b+3)& (0+255),b
  6820  00130E  0E80               	movlw	128
  6821  001310  1BC1               	xorwf	___fladd@signs& (0+255),f,b
  6822  001312                     
  6823                           ; BSR set to: 0
  6824  001312  6DC4               	negf	___fladd@grs& (0+255),b
  6825  001314                     
  6826                           ; BSR set to: 0
  6827  001314  51C4               	movf	___fladd@grs& (0+255),w,b
  6828  001316  A4D8               	btfss	status,2,c
  6829  001318  EF90  F009         	goto	u6251
  6830  00131C  EF92  F009         	goto	u6250
  6831  001320                     u6251:
  6832  001320  EFA2  F009         	goto	l1946
  6833  001324                     u6250:
  6834  001324                     
  6835                           ; BSR set to: 0
  6836  001324  0E01               	movlw	1
  6837  001326  27B9               	addwf	___fladd@b& (0+255),f,b
  6838  001328  0E00               	movlw	0
  6839  00132A  23BA               	addwfc	(___fladd@b+1)& (0+255),f,b
  6840  00132C  23BB               	addwfc	(___fladd@b+2)& (0+255),f,b
  6841  00132E  23BC               	addwfc	(___fladd@b+3)& (0+255),f,b
  6842  001330  EFA2  F009         	goto	l1946
  6843  001334                     l6860:
  6844                           
  6845                           ; BSR set to: 0
  6846  001334  51BD               	movf	___fladd@a& (0+255),w,b
  6847  001336  5FB9               	subwf	___fladd@b& (0+255),f,b
  6848  001338  51BE               	movf	(___fladd@a+1)& (0+255),w,b
  6849  00133A  5BBA               	subwfb	(___fladd@b+1)& (0+255),f,b
  6850  00133C  51BF               	movf	(___fladd@a+2)& (0+255),w,b
  6851  00133E  5BBB               	subwfb	(___fladd@b+2)& (0+255),f,b
  6852  001340  51C0               	movf	(___fladd@a+3)& (0+255),w,b
  6853  001342  5BBC               	subwfb	(___fladd@b+3)& (0+255),f,b
  6854  001344                     l1946:
  6855                           
  6856                           ; BSR set to: 0
  6857  001344  51B9               	movf	___fladd@b& (0+255),w,b
  6858  001346  11BA               	iorwf	(___fladd@b+1)& (0+255),w,b
  6859  001348  11BB               	iorwf	(___fladd@b+2)& (0+255),w,b
  6860  00134A  11BC               	iorwf	(___fladd@b+3)& (0+255),w,b
  6861  00134C  A4D8               	btfss	status,2,c
  6862  00134E  EFAB  F009         	goto	u6261
  6863  001352  EFAD  F009         	goto	u6260
  6864  001356                     u6261:
  6865  001356  EFE2  F009         	goto	l6884
  6866  00135A                     u6260:
  6867  00135A                     
  6868                           ; BSR set to: 0
  6869  00135A  51C4               	movf	___fladd@grs& (0+255),w,b
  6870  00135C  A4D8               	btfss	status,2,c
  6871  00135E  EFB3  F009         	goto	u6271
  6872  001362  EFB5  F009         	goto	u6270
  6873  001366                     u6271:
  6874  001366  EFE2  F009         	goto	l6884
  6875  00136A                     u6270:
  6876  00136A                     
  6877                           ; BSR set to: 0
  6878  00136A  0E00               	movlw	0
  6879  00136C  6FB9               	movwf	?___fladd& (0+255),b
  6880  00136E  0E00               	movlw	0
  6881  001370  6FBA               	movwf	(?___fladd+1)& (0+255),b
  6882  001372  0E00               	movlw	0
  6883  001374  6FBB               	movwf	(?___fladd+2)& (0+255),b
  6884  001376  0E00               	movlw	0
  6885  001378  6FBC               	movwf	(?___fladd+3)& (0+255),b
  6886  00137A  EF7D  F00A         	goto	l1938
  6887  00137E                     l6868:
  6888                           
  6889                           ; BSR set to: 0
  6890  00137E  90D8               	bcf	status,0,c
  6891  001380  37B9               	rlcf	___fladd@b& (0+255),f,b
  6892  001382  37BA               	rlcf	(___fladd@b+1)& (0+255),f,b
  6893  001384  37BB               	rlcf	(___fladd@b+2)& (0+255),f,b
  6894  001386  37BC               	rlcf	(___fladd@b+3)& (0+255),f,b
  6895  001388                     
  6896                           ; BSR set to: 0
  6897  001388  AFC4               	btfss	___fladd@grs& (0+255),7,b
  6898  00138A  EFC9  F009         	goto	u6281
  6899  00138E  EFCB  F009         	goto	u6280
  6900  001392                     u6281:
  6901  001392  EFCC  F009         	goto	l6874
  6902  001396                     u6280:
  6903  001396                     
  6904                           ; BSR set to: 0
  6905  001396  81B9               	bsf	___fladd@b& (0+255),0,b
  6906  001398                     l6874:
  6907                           
  6908                           ; BSR set to: 0
  6909  001398  A1C4               	btfss	___fladd@grs& (0+255),0,b
  6910  00139A  EFD1  F009         	goto	u6291
  6911  00139E  EFD3  F009         	goto	u6290
  6912  0013A2                     u6291:
  6913  0013A2  EFD7  F009         	goto	l6878
  6914  0013A6                     u6290:
  6915  0013A6                     
  6916                           ; BSR set to: 0
  6917  0013A6  80D8               	bsf	status,0,c
  6918  0013A8  37C4               	rlcf	___fladd@grs& (0+255),f,b
  6919  0013AA  EFD9  F009         	goto	l6880
  6920  0013AE                     l6878:
  6921                           
  6922                           ; BSR set to: 0
  6923  0013AE  90D8               	bcf	status,0,c
  6924  0013B0  37C4               	rlcf	___fladd@grs& (0+255),f,b
  6925  0013B2                     l6880:
  6926                           
  6927                           ; BSR set to: 0
  6928  0013B2  51C3               	movf	___fladd@bexp& (0+255),w,b
  6929  0013B4  B4D8               	btfsc	status,2,c
  6930  0013B6  EFDF  F009         	goto	u6301
  6931  0013BA  EFE1  F009         	goto	u6300
  6932  0013BE                     u6301:
  6933  0013BE  EFE2  F009         	goto	l6884
  6934  0013C2                     u6300:
  6935  0013C2                     
  6936                           ; BSR set to: 0
  6937  0013C2  07C3               	decf	___fladd@bexp& (0+255),f,b
  6938  0013C4                     l6884:
  6939                           
  6940                           ; BSR set to: 0
  6941  0013C4  AFBB               	btfss	(___fladd@b+2)& (0+255),7,b
  6942  0013C6  EFE7  F009         	goto	u6311
  6943  0013CA  EFE9  F009         	goto	u6310
  6944  0013CE                     u6311:
  6945  0013CE  EFBF  F009         	goto	l6868
  6946  0013D2                     u6310:
  6947  0013D2                     l6886:
  6948                           
  6949                           ; BSR set to: 0
  6950  0013D2  0E00               	movlw	0
  6951  0013D4  6FC2               	movwf	___fladd@aexp& (0+255),b
  6952  0013D6                     
  6953                           ; BSR set to: 0
  6954  0013D6  AFC4               	btfss	___fladd@grs& (0+255),7,b
  6955  0013D8  EFF0  F009         	goto	u6321
  6956  0013DC  EFF2  F009         	goto	u6320
  6957  0013E0                     u6321:
  6958  0013E0  EF0A  F00A         	goto	l1955
  6959  0013E4                     u6320:
  6960  0013E4                     
  6961                           ; BSR set to: 0
  6962  0013E4  C0C4  F036         	movff	___fladd@grs,??___fladd
  6963  0013E8  0E7F               	movlw	127
  6964  0013EA  1636               	andwf	??___fladd^0,f,c
  6965  0013EC  B4D8               	btfsc	status,2,c
  6966  0013EE  EFFB  F009         	goto	u6331
  6967  0013F2  EFFD  F009         	goto	u6330
  6968  0013F6                     u6331:
  6969  0013F6  EF01  F00A         	goto	l1956
  6970  0013FA                     u6330:
  6971  0013FA                     l6892:
  6972                           
  6973                           ; BSR set to: 0
  6974  0013FA  0E01               	movlw	1
  6975  0013FC  6FC2               	movwf	___fladd@aexp& (0+255),b
  6976  0013FE  EF0A  F00A         	goto	l1955
  6977  001402                     l1956:
  6978                           
  6979                           ; BSR set to: 0
  6980  001402  A1B9               	btfss	___fladd@b& (0+255),0,b
  6981  001404  EF06  F00A         	goto	u6341
  6982  001408  EF08  F00A         	goto	u6340
  6983  00140C                     u6341:
  6984  00140C  EF0A  F00A         	goto	l1955
  6985  001410                     u6340:
  6986  001410  EFFD  F009         	goto	l6892
  6987  001414                     l1955:
  6988                           
  6989                           ; BSR set to: 0
  6990  001414  51C2               	movf	___fladd@aexp& (0+255),w,b
  6991  001416  B4D8               	btfsc	status,2,c
  6992  001418  EF10  F00A         	goto	u6351
  6993  00141C  EF12  F00A         	goto	u6350
  6994  001420                     u6351:
  6995  001420  EF3D  F00A         	goto	l6904
  6996  001424                     u6350:
  6997  001424                     
  6998                           ; BSR set to: 0
  6999  001424  0E01               	movlw	1
  7000  001426  27B9               	addwf	___fladd@b& (0+255),f,b
  7001  001428  0E00               	movlw	0
  7002  00142A  23BA               	addwfc	(___fladd@b+1)& (0+255),f,b
  7003  00142C  23BB               	addwfc	(___fladd@b+2)& (0+255),f,b
  7004  00142E  23BC               	addwfc	(___fladd@b+3)& (0+255),f,b
  7005  001430                     
  7006                           ; BSR set to: 0
  7007  001430  A1BC               	btfss	(___fladd@b+3)& (0+255),0,b
  7008  001432  EF1D  F00A         	goto	u6361
  7009  001436  EF1F  F00A         	goto	u6360
  7010  00143A                     u6361:
  7011  00143A  EF3D  F00A         	goto	l6904
  7012  00143E                     u6360:
  7013  00143E                     
  7014                           ; BSR set to: 0
  7015  00143E  C0B9  F036         	movff	___fladd@b,??___fladd
  7016  001442  C0BA  F037         	movff	___fladd@b+1,??___fladd+1
  7017  001446  C0BB  F038         	movff	___fladd@b+2,??___fladd+2
  7018  00144A  C0BC  F039         	movff	___fladd@b+3,??___fladd+3
  7019  00144E  3439               	rlcf	(??___fladd+3)^0,w,c
  7020  001450  3239               	rrcf	(??___fladd+3)^0,f,c
  7021  001452  3238               	rrcf	(??___fladd+2)^0,f,c
  7022  001454  3237               	rrcf	(??___fladd+1)^0,f,c
  7023  001456  3236               	rrcf	??___fladd^0,f,c
  7024  001458  C036  F0B9         	movff	??___fladd,___fladd@b
  7025  00145C  C037  F0BA         	movff	??___fladd+1,___fladd@b+1
  7026  001460  C038  F0BB         	movff	??___fladd+2,___fladd@b+2
  7027  001464  C039  F0BC         	movff	??___fladd+3,___fladd@b+3
  7028  001468  29C3               	incf	___fladd@bexp& (0+255),w,b
  7029  00146A  B4D8               	btfsc	status,2,c
  7030  00146C  EF3A  F00A         	goto	u6371
  7031  001470  EF3C  F00A         	goto	u6370
  7032  001474                     u6371:
  7033  001474  EF3D  F00A         	goto	l6904
  7034  001478                     u6370:
  7035  001478                     
  7036                           ; BSR set to: 0
  7037  001478  2BC3               	incf	___fladd@bexp& (0+255),f,b
  7038  00147A                     l6904:
  7039                           
  7040                           ; BSR set to: 0
  7041  00147A  29C3               	incf	___fladd@bexp& (0+255),w,b
  7042  00147C  B4D8               	btfsc	status,2,c
  7043  00147E  EF43  F00A         	goto	u6381
  7044  001482  EF45  F00A         	goto	u6380
  7045  001486                     u6381:
  7046  001486  EF4D  F00A         	goto	l6908
  7047  00148A                     u6380:
  7048  00148A                     
  7049                           ; BSR set to: 0
  7050  00148A  51C3               	movf	___fladd@bexp& (0+255),w,b
  7051  00148C  A4D8               	btfss	status,2,c
  7052  00148E  EF4B  F00A         	goto	u6391
  7053  001492  EF4D  F00A         	goto	u6390
  7054  001496                     u6391:
  7055  001496  EF5F  F00A         	goto	l6912
  7056  00149A                     u6390:
  7057  00149A                     l6908:
  7058                           
  7059                           ; BSR set to: 0
  7060  00149A  0E00               	movlw	0
  7061  00149C  6FB9               	movwf	___fladd@b& (0+255),b
  7062  00149E  0E00               	movlw	0
  7063  0014A0  6FBA               	movwf	(___fladd@b+1)& (0+255),b
  7064  0014A2  0E00               	movlw	0
  7065  0014A4  6FBB               	movwf	(___fladd@b+2)& (0+255),b
  7066  0014A6  0E00               	movlw	0
  7067  0014A8  6FBC               	movwf	(___fladd@b+3)& (0+255),b
  7068  0014AA  51C3               	movf	___fladd@bexp& (0+255),w,b
  7069  0014AC  A4D8               	btfss	status,2,c
  7070  0014AE  EF5B  F00A         	goto	u6401
  7071  0014B2  EF5D  F00A         	goto	u6400
  7072  0014B6                     u6401:
  7073  0014B6  EF5F  F00A         	goto	l6912
  7074  0014BA                     u6400:
  7075  0014BA                     
  7076                           ; BSR set to: 0
  7077  0014BA  0E00               	movlw	0
  7078  0014BC  6FC1               	movwf	___fladd@signs& (0+255),b
  7079  0014BE                     l6912:
  7080                           
  7081                           ; BSR set to: 0
  7082  0014BE  A1C3               	btfss	___fladd@bexp& (0+255),0,b
  7083  0014C0  EF64  F00A         	goto	u6411
  7084  0014C4  EF66  F00A         	goto	u6410
  7085  0014C8                     u6411:
  7086  0014C8  EF69  F00A         	goto	l6916
  7087  0014CC                     u6410:
  7088  0014CC                     
  7089                           ; BSR set to: 0
  7090  0014CC  8FBB               	bsf	(___fladd@b+2)& (0+255),7,b
  7091  0014CE  EF6A  F00A         	goto	l6918
  7092  0014D2                     l6916:
  7093                           
  7094                           ; BSR set to: 0
  7095  0014D2  9FBB               	bcf	(___fladd@b+2)& (0+255),7,b
  7096  0014D4                     l6918:
  7097                           
  7098                           ; BSR set to: 0
  7099  0014D4  90D8               	bcf	status,0,c
  7100  0014D6  31C3               	rrcf	___fladd@bexp& (0+255),w,b
  7101  0014D8  6FBC               	movwf	(___fladd@b+3)& (0+255),b
  7102  0014DA                     
  7103                           ; BSR set to: 0
  7104  0014DA  AFC1               	btfss	___fladd@signs& (0+255),7,b
  7105  0014DC  EF72  F00A         	goto	u6421
  7106  0014E0  EF74  F00A         	goto	u6420
  7107  0014E4                     u6421:
  7108  0014E4  EF75  F00A         	goto	l6924
  7109  0014E8                     u6420:
  7110  0014E8                     
  7111                           ; BSR set to: 0
  7112  0014E8  8FBC               	bsf	(___fladd@b+3)& (0+255),7,b
  7113  0014EA                     l6924:
  7114                           
  7115                           ; BSR set to: 0
  7116  0014EA  C0B9  F0B9         	movff	___fladd@b,?___fladd
  7117  0014EE  C0BA  F0BA         	movff	___fladd@b+1,?___fladd+1
  7118  0014F2  C0BB  F0BB         	movff	___fladd@b+2,?___fladd+2
  7119  0014F6  C0BC  F0BC         	movff	___fladd@b+3,?___fladd+3
  7120  0014FA                     l1938:
  7121                           
  7122                           ; BSR set to: 0
  7123  0014FA  0012               	return		;funcret
  7124  0014FC                     __end_of___fladd:
  7125                           	callstack 0
  7126                           
  7127 ;; *************** function _calcMotorPow *****************
  7128 ;; Defined at:
  7129 ;;		line 331 in file "main.c"
  7130 ;; Parameters:    Size  Location     Type
  7131 ;;		None
  7132 ;; Auto vars:     Size  Location     Type
  7133 ;;  oldSpeedDelt    2   39[BANK0 ] short 
  7134 ;;  setSpeedDelt    2   37[BANK0 ] short 
  7135 ;;  addMPow         1   41[BANK0 ] char 
  7136 ;; Return value:  Size  Location     Type
  7137 ;;                  1    wreg      void 
  7138 ;; Registers used:
  7139 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7140 ;; Tracked objects:
  7141 ;;		On entry : 0/0
  7142 ;;		On exit  : 0/0
  7143 ;;		Unchanged: 0/0
  7144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7146 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7147 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7148 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7149 ;;Total ram usage:        7 bytes
  7150 ;; Hardware stack levels used: 1
  7151 ;; Hardware stack levels required when called: 10
  7152 ;; This function calls:
  7153 ;;		___awdiv
  7154 ;;		___flmul
  7155 ;;		___fltol
  7156 ;;		___xxtofl
  7157 ;;		_actSpeed
  7158 ;;		_setMotor
  7159 ;; This function is called by:
  7160 ;;		_loop
  7161 ;; This function uses a non-reentrant model
  7162 ;;
  7163                           
  7164                           	psect	text28
  7165  002E70                     __ptext28:
  7166                           	callstack 0
  7167  002E70                     _calcMotorPow:
  7168                           	callstack 19
  7169  002E70                     
  7170                           ;main.c: 332:     currentSpeed = actSpeed();
  7171  002E70  EC18  F01D         	call	_actSpeed	;wreg free
  7172  002E74  C022  F08C         	movff	?_actSpeed,_currentSpeed
  7173  002E78  C023  F08D         	movff	?_actSpeed+1,_currentSpeed+1
  7174  002E7C                     
  7175                           ;main.c: 334:     int16_t setSpeedDelta = setSpeed - currentSpeed;
  7176  002E7C  0100               	movlb	0	; () banked
  7177  002E7E  518C               	movf	_currentSpeed& (0+255),w,b
  7178  002E80  5D8E               	subwf	_setSpeed& (0+255),w,b
  7179  002E82  6FD1               	movwf	calcMotorPow@setSpeedDelta& (0+255),b
  7180  002E84  518D               	movf	(_currentSpeed+1)& (0+255),w,b
  7181  002E86  598F               	subwfb	(_setSpeed+1)& (0+255),w,b
  7182  002E88  6FD2               	movwf	(calcMotorPow@setSpeedDelta+1)& (0+255),b
  7183  002E8A                     
  7184                           ; BSR set to: 0
  7185                           ;main.c: 335:     int16_t oldSpeedDelta = currentSpeed - oldSpeed;
  7186  002E8A  518A               	movf	_oldSpeed& (0+255),w,b
  7187  002E8C  5D8C               	subwf	_currentSpeed& (0+255),w,b
  7188  002E8E  6FD3               	movwf	calcMotorPow@oldSpeedDelta& (0+255),b
  7189  002E90  518B               	movf	(_oldSpeed+1)& (0+255),w,b
  7190  002E92  598D               	subwfb	(_currentSpeed+1)& (0+255),w,b
  7191  002E94  6FD4               	movwf	(calcMotorPow@oldSpeedDelta+1)& (0+255),b
  7192  002E96                     
  7193                           ; BSR set to: 0
  7194                           ;main.c: 341:     addMPow = (int8_t) ((0.020) * (setSpeedDelta - (oldSpeedDelta / (2))))
      +                          ;
  7195  002E96  0E0A               	movlw	10
  7196  002E98  6E2E               	movwf	___flmul@a^0,c
  7197  002E9A  0ED7               	movlw	215
  7198  002E9C  6E2F               	movwf	(___flmul@a+1)^0,c
  7199  002E9E  0EA3               	movlw	163
  7200  002EA0  6E30               	movwf	(___flmul@a+2)^0,c
  7201  002EA2  0E3C               	movlw	60
  7202  002EA4  6E31               	movwf	(___flmul@a+3)^0,c
  7203  002EA6  0E00               	movlw	0
  7204  002EA8  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7205  002EAA  0E02               	movlw	2
  7206  002EAC  6E16               	movwf	___awdiv@divisor^0,c
  7207  002EAE  C0D3  F014         	movff	calcMotorPow@oldSpeedDelta,___awdiv@dividend
  7208  002EB2  C0D4  F015         	movff	calcMotorPow@oldSpeedDelta+1,___awdiv@dividend+1
  7209  002EB6  EC58  F01B         	call	___awdiv	;wreg free
  7210  002EBA  C0D1  F0CF         	movff	calcMotorPow@setSpeedDelta,??_calcMotorPow
  7211  002EBE  C0D2  F0D0         	movff	calcMotorPow@setSpeedDelta+1,??_calcMotorPow+1
  7212  002EC2  5014               	movf	?___awdiv^0,w,c
  7213  002EC4  0100               	movlb	0	; () banked
  7214  002EC6  5FCF               	subwf	??_calcMotorPow& (0+255),f,b
  7215  002EC8  5015               	movf	(?___awdiv+1)^0,w,c
  7216  002ECA  5BD0               	subwfb	(??_calcMotorPow+1)& (0+255),f,b
  7217  002ECC  C0CF  F01C         	movff	??_calcMotorPow,___xxtofl@val
  7218  002ED0  C0D0  F01D         	movff	??_calcMotorPow+1,___xxtofl@val+1
  7219  002ED4  0E00               	movlw	0
  7220  002ED6  BE1D               	btfsc	(___xxtofl@val+1)^0,7,c
  7221  002ED8  0EFF               	movlw	-1
  7222  002EDA  6E1E               	movwf	(___xxtofl@val+2)^0,c
  7223  002EDC  6E1F               	movwf	(___xxtofl@val+3)^0,c
  7224  002EDE  0E01               	movlw	1
  7225  002EE0  EC1E  F014         	call	___xxtofl
  7226  002EE4  C01C  F02A         	movff	?___xxtofl,___flmul@b
  7227  002EE8  C01D  F02B         	movff	?___xxtofl+1,___flmul@b+1
  7228  002EEC  C01E  F02C         	movff	?___xxtofl+2,___flmul@b+2
  7229  002EF0  C01F  F02D         	movff	?___xxtofl+3,___flmul@b+3
  7230  002EF4  EC7E  F00A         	call	___flmul	;wreg free
  7231  002EF8  C02A  F0C5         	movff	?___flmul,___fltol@f1
  7232  002EFC  C02B  F0C6         	movff	?___flmul+1,___fltol@f1+1
  7233  002F00  C02C  F0C7         	movff	?___flmul+2,___fltol@f1+2
  7234  002F04  C02D  F0C8         	movff	?___flmul+3,___fltol@f1+3
  7235  002F08  EC7C  F019         	call	___fltol	;wreg free
  7236  002F0C  0100               	movlb	0	; () banked
  7237  002F0E  51C5               	movf	?___fltol& (0+255),w,b
  7238  002F10  6FD5               	movwf	calcMotorPow@addMPow& (0+255),b
  7239  002F12                     
  7240                           ; BSR set to: 0
  7241                           ;main.c: 343:     if (addMPow > (3)) {
  7242  002F12  51D5               	movf	calcMotorPow@addMPow& (0+255),w,b
  7243  002F14  0A80               	xorlw	128
  7244  002F16  0F7C               	addlw	-132
  7245  002F18  A0D8               	btfss	status,0,c
  7246  002F1A  EF91  F017         	goto	u7001
  7247  002F1E  EF93  F017         	goto	u7000
  7248  002F22                     u7001:
  7249  002F22  EF97  F017         	goto	l7310
  7250  002F26                     u7000:
  7251  002F26                     
  7252                           ; BSR set to: 0
  7253                           ;main.c: 344:         addMPow = (3);
  7254  002F26  0E03               	movlw	3
  7255  002F28  6FD5               	movwf	calcMotorPow@addMPow& (0+255),b
  7256                           
  7257                           ;main.c: 345:     } else if (addMPow < -(3)) {
  7258  002F2A  EFA3  F017         	goto	l7314
  7259  002F2E                     l7310:
  7260                           
  7261                           ; BSR set to: 0
  7262  002F2E  51D5               	movf	calcMotorPow@addMPow& (0+255),w,b
  7263  002F30  0A80               	xorlw	128
  7264  002F32  0F83               	addlw	131
  7265  002F34  B0D8               	btfsc	status,0,c
  7266  002F36  EF9F  F017         	goto	u7011
  7267  002F3A  EFA1  F017         	goto	u7010
  7268  002F3E                     u7011:
  7269  002F3E  EFA3  F017         	goto	l7314
  7270  002F42                     u7010:
  7271  002F42                     
  7272                           ; BSR set to: 0
  7273                           ;main.c: 346:         addMPow = -(3);
  7274  002F42  0EFD               	movlw	253
  7275  002F44  6FD5               	movwf	calcMotorPow@addMPow& (0+255),b
  7276  002F46                     l7314:
  7277                           
  7278                           ; BSR set to: 0
  7279                           ;main.c: 349:     actMotorPow += addMPow;
  7280  002F46  51D5               	movf	calcMotorPow@addMPow& (0+255),w,b
  7281  002F48  2788               	addwf	_actMotorPow& (0+255),f,b
  7282  002F4A  0E00               	movlw	0
  7283  002F4C  BFD5               	btfsc	calcMotorPow@addMPow& (0+255),7,b
  7284  002F4E  0EFF               	movlw	255
  7285  002F50  2389               	addwfc	(_actMotorPow+1)& (0+255),f,b
  7286  002F52                     
  7287                           ; BSR set to: 0
  7288                           ;main.c: 351:     if (actMotorPow > (700)) {
  7289  002F52  BF89               	btfsc	(_actMotorPow+1)& (0+255),7,b
  7290  002F54  EFB5  F017         	goto	u7021
  7291  002F58  0EBD               	movlw	189
  7292  002F5A  5D88               	subwf	_actMotorPow& (0+255),w,b
  7293  002F5C  0E02               	movlw	2
  7294  002F5E  5989               	subwfb	(_actMotorPow+1)& (0+255),w,b
  7295  002F60  A0D8               	btfss	status,0,c
  7296  002F62  EFB5  F017         	goto	u7021
  7297  002F66  EFB7  F017         	goto	u7020
  7298  002F6A                     u7021:
  7299  002F6A  EFBD  F017         	goto	l7320
  7300  002F6E                     u7020:
  7301  002F6E                     
  7302                           ; BSR set to: 0
  7303                           ;main.c: 352:         actMotorPow = (700);
  7304  002F6E  0E02               	movlw	2
  7305  002F70  6F89               	movwf	(_actMotorPow+1)& (0+255),b
  7306  002F72  0EBC               	movlw	188
  7307  002F74  6F88               	movwf	_actMotorPow& (0+255),b
  7308                           
  7309                           ;main.c: 353:     } else if (actMotorPow < (-400)) {
  7310  002F76  EFCF  F017         	goto	l7324
  7311  002F7A                     l7320:
  7312                           
  7313                           ; BSR set to: 0
  7314  002F7A  AF89               	btfss	(_actMotorPow+1)& (0+255),7,b
  7315  002F7C  EFC9  F017         	goto	u7031
  7316  002F80  0E70               	movlw	112
  7317  002F82  5D88               	subwf	_actMotorPow& (0+255),w,b
  7318  002F84  0EFE               	movlw	254
  7319  002F86  5989               	subwfb	(_actMotorPow+1)& (0+255),w,b
  7320  002F88  B0D8               	btfsc	status,0,c
  7321  002F8A  EFC9  F017         	goto	u7031
  7322  002F8E  EFCB  F017         	goto	u7030
  7323  002F92                     u7031:
  7324  002F92  EFCF  F017         	goto	l7324
  7325  002F96                     u7030:
  7326  002F96                     
  7327                           ; BSR set to: 0
  7328                           ;main.c: 354:         actMotorPow = (-400);
  7329  002F96  0EFE               	movlw	254
  7330  002F98  6F89               	movwf	(_actMotorPow+1)& (0+255),b
  7331  002F9A  0E70               	movlw	112
  7332  002F9C  6F88               	movwf	_actMotorPow& (0+255),b
  7333  002F9E                     l7324:
  7334                           
  7335                           ; BSR set to: 0
  7336                           ;main.c: 357:     setMotor(actMotorPow);
  7337  002F9E  C088  F018         	movff	_actMotorPow,setMotor@motorPower
  7338  002FA2  C089  F019         	movff	_actMotorPow+1,setMotor@motorPower+1
  7339  002FA6  EC82  F01A         	call	_setMotor	;wreg free
  7340  002FAA                     
  7341                           ;main.c: 359:     oldSpeed = currentSpeed;
  7342  002FAA  C08C  F08A         	movff	_currentSpeed,_oldSpeed
  7343  002FAE  C08D  F08B         	movff	_currentSpeed+1,_oldSpeed+1
  7344  002FB2  0012               	return		;funcret
  7345  002FB4                     __end_of_calcMotorPow:
  7346                           	callstack 0
  7347                           
  7348 ;; *************** function _setMotor *****************
  7349 ;; Defined at:
  7350 ;;		line 362 in file "main.c"
  7351 ;; Parameters:    Size  Location     Type
  7352 ;;  motorPower      2   23[COMRAM] short 
  7353 ;; Auto vars:     Size  Location     Type
  7354 ;;		None
  7355 ;; Return value:  Size  Location     Type
  7356 ;;                  1    wreg      void 
  7357 ;; Registers used:
  7358 ;;		wreg, status,2, status,0, cstack
  7359 ;; Tracked objects:
  7360 ;;		On entry : 0/0
  7361 ;;		On exit  : 0/0
  7362 ;;		Unchanged: 0/0
  7363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7364 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7366 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7367 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7368 ;;Total ram usage:        4 bytes
  7369 ;; Hardware stack levels used: 1
  7370 ;; Hardware stack levels required when called: 9
  7371 ;; This function calls:
  7372 ;;		_PWM7_LoadDutyValue
  7373 ;;		_PWM8_LoadDutyValue
  7374 ;; This function is called by:
  7375 ;;		_loop
  7376 ;;		_calcMotorPow
  7377 ;;		_startAccell
  7378 ;; This function uses a non-reentrant model
  7379 ;;
  7380                           
  7381                           	psect	text29
  7382  003504                     __ptext29:
  7383                           	callstack 0
  7384  003504                     _setMotor:
  7385                           	callstack 20
  7386  003504                     
  7387                           ;main.c: 363:     if (motorPower >= (40)) {
  7388  003504  BE19               	btfsc	(setMotor@motorPower+1)^0,7,c
  7389  003506  EF8E  F01A         	goto	u3621
  7390  00350A  5019               	movf	(setMotor@motorPower+1)^0,w,c
  7391  00350C  E109               	bnz	u3620
  7392  00350E  0E28               	movlw	40
  7393  003510  5C18               	subwf	setMotor@motorPower^0,w,c
  7394  003512  A0D8               	btfss	status,0,c
  7395  003514  EF8E  F01A         	goto	u3621
  7396  003518  EF90  F01A         	goto	u3620
  7397  00351C                     u3621:
  7398  00351C  EFB0  F01A         	goto	l4960
  7399  003520                     u3620:
  7400  003520                     
  7401                           ;main.c: 364:         if (motorPower > (700)) {
  7402  003520  BE19               	btfsc	(setMotor@motorPower+1)^0,7,c
  7403  003522  EF9C  F01A         	goto	u3631
  7404  003526  0EBD               	movlw	189
  7405  003528  5C18               	subwf	setMotor@motorPower^0,w,c
  7406  00352A  0E02               	movlw	2
  7407  00352C  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
  7408  00352E  A0D8               	btfss	status,0,c
  7409  003530  EF9C  F01A         	goto	u3631
  7410  003534  EF9E  F01A         	goto	u3630
  7411  003538                     u3631:
  7412  003538  EFA2  F01A         	goto	l4956
  7413  00353C                     u3630:
  7414  00353C                     
  7415                           ;main.c: 365:             motorPower = (700);
  7416  00353C  0E02               	movlw	2
  7417  00353E  6E19               	movwf	(setMotor@motorPower+1)^0,c
  7418  003540  0EBC               	movlw	188
  7419  003542  6E18               	movwf	setMotor@motorPower^0,c
  7420  003544                     l4956:
  7421                           
  7422                           ;main.c: 367:         PWM7_LoadDutyValue((uint16_t) (motorPower));
  7423  003544  C018  F014         	movff	setMotor@motorPower,PWM7_LoadDutyValue@dutyValue
  7424  003548  C019  F015         	movff	setMotor@motorPower+1,PWM7_LoadDutyValue@dutyValue+1
  7425  00354C  EC57  F020         	call	_PWM7_LoadDutyValue	;wreg free
  7426  003550                     
  7427                           ;main.c: 368:         PWM8_LoadDutyValue(0);
  7428  003550  0E00               	movlw	0
  7429  003552  6E15               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
  7430  003554  0E00               	movlw	0
  7431  003556  6E14               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
  7432  003558  EC3D  F020         	call	_PWM8_LoadDutyValue	;wreg free
  7433                           
  7434                           ;main.c: 369:     } else if (motorPower <= -(40)) {
  7435  00355C  EFF2  F01A         	goto	l1381
  7436  003560                     l4960:
  7437  003560  AE19               	btfss	(setMotor@motorPower+1)^0,7,c
  7438  003562  EFBC  F01A         	goto	u3641
  7439  003566  0ED9               	movlw	217
  7440  003568  5C18               	subwf	setMotor@motorPower^0,w,c
  7441  00356A  0EFF               	movlw	255
  7442  00356C  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
  7443  00356E  B0D8               	btfsc	status,0,c
  7444  003570  EFBC  F01A         	goto	u3641
  7445  003574  EFBE  F01A         	goto	u3640
  7446  003578                     u3641:
  7447  003578  EFE6  F01A         	goto	l4970
  7448  00357C                     u3640:
  7449  00357C                     
  7450                           ;main.c: 370:         if (motorPower < (-400)) {
  7451  00357C  AE19               	btfss	(setMotor@motorPower+1)^0,7,c
  7452  00357E  EFCA  F01A         	goto	u3651
  7453  003582  0E70               	movlw	112
  7454  003584  5C18               	subwf	setMotor@motorPower^0,w,c
  7455  003586  0EFE               	movlw	254
  7456  003588  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
  7457  00358A  B0D8               	btfsc	status,0,c
  7458  00358C  EFCA  F01A         	goto	u3651
  7459  003590  EFCC  F01A         	goto	u3650
  7460  003594                     u3651:
  7461  003594  EFD0  F01A         	goto	l4966
  7462  003598                     u3650:
  7463  003598                     
  7464                           ;main.c: 371:             motorPower = (-400);
  7465  003598  0EFE               	movlw	254
  7466  00359A  6E19               	movwf	(setMotor@motorPower+1)^0,c
  7467  00359C  0E70               	movlw	112
  7468  00359E  6E18               	movwf	setMotor@motorPower^0,c
  7469  0035A0                     l4966:
  7470                           
  7471                           ;main.c: 373:         PWM7_LoadDutyValue(0);
  7472  0035A0  0E00               	movlw	0
  7473  0035A2  6E15               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
  7474  0035A4  0E00               	movlw	0
  7475  0035A6  6E14               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
  7476  0035A8  EC57  F020         	call	_PWM7_LoadDutyValue	;wreg free
  7477  0035AC                     
  7478                           ;main.c: 374:         PWM8_LoadDutyValue((uint16_t) (-motorPower));
  7479  0035AC  C018  F01A         	movff	setMotor@motorPower,??_setMotor
  7480  0035B0  C019  F01B         	movff	setMotor@motorPower+1,??_setMotor+1
  7481  0035B4  1E1A               	comf	??_setMotor^0,f,c
  7482  0035B6  1E1B               	comf	(??_setMotor+1)^0,f,c
  7483  0035B8  4A1A               	infsnz	??_setMotor^0,f,c
  7484  0035BA  2A1B               	incf	(??_setMotor+1)^0,f,c
  7485  0035BC  C01A  F014         	movff	??_setMotor,PWM8_LoadDutyValue@dutyValue
  7486  0035C0  C01B  F015         	movff	??_setMotor+1,PWM8_LoadDutyValue@dutyValue+1
  7487  0035C4  EC3D  F020         	call	_PWM8_LoadDutyValue	;wreg free
  7488                           
  7489                           ;main.c: 375:     } else {
  7490  0035C8  EFF2  F01A         	goto	l1381
  7491  0035CC                     l4970:
  7492                           
  7493                           ;main.c: 377:         PWM7_LoadDutyValue(0);
  7494  0035CC  0E00               	movlw	0
  7495  0035CE  6E15               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
  7496  0035D0  0E00               	movlw	0
  7497  0035D2  6E14               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
  7498  0035D4  EC57  F020         	call	_PWM7_LoadDutyValue	;wreg free
  7499                           
  7500                           ;main.c: 378:         PWM8_LoadDutyValue(0);
  7501  0035D8  0E00               	movlw	0
  7502  0035DA  6E15               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
  7503  0035DC  0E00               	movlw	0
  7504  0035DE  6E14               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
  7505  0035E0  EC3D  F020         	call	_PWM8_LoadDutyValue	;wreg free
  7506  0035E4                     l1381:
  7507  0035E4  0012               	return		;funcret
  7508  0035E6                     __end_of_setMotor:
  7509                           	callstack 0
  7510                           
  7511 ;; *************** function _PWM8_LoadDutyValue *****************
  7512 ;; Defined at:
  7513 ;;		line 74 in file "mcc_generated_files/pwm8.c"
  7514 ;; Parameters:    Size  Location     Type
  7515 ;;  dutyValue       2   19[COMRAM] unsigned short 
  7516 ;; Auto vars:     Size  Location     Type
  7517 ;;		None
  7518 ;; Return value:  Size  Location     Type
  7519 ;;                  1    wreg      void 
  7520 ;; Registers used:
  7521 ;;		wreg, status,2, status,0
  7522 ;; Tracked objects:
  7523 ;;		On entry : 0/0
  7524 ;;		On exit  : 0/0
  7525 ;;		Unchanged: 0/0
  7526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7527 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7529 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7530 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7531 ;;Total ram usage:        4 bytes
  7532 ;; Hardware stack levels used: 1
  7533 ;; Hardware stack levels required when called: 8
  7534 ;; This function calls:
  7535 ;;		Nothing
  7536 ;; This function is called by:
  7537 ;;		_setMotor
  7538 ;; This function uses a non-reentrant model
  7539 ;;
  7540                           
  7541                           	psect	text30
  7542  00407A                     __ptext30:
  7543                           	callstack 0
  7544  00407A                     _PWM8_LoadDutyValue:
  7545                           	callstack 20
  7546  00407A                     
  7547                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  7548  00407A  C014  F016         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
  7549  00407E  C015  F017         	movff	PWM8_LoadDutyValue@dutyValue+1,??_PWM8_LoadDutyValue+1
  7550  004082  90D8               	bcf	status,0,c
  7551  004084  3217               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
  7552  004086  3216               	rrcf	??_PWM8_LoadDutyValue^0,f,c
  7553  004088  90D8               	bcf	status,0,c
  7554  00408A  3217               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
  7555  00408C  3216               	rrcf	??_PWM8_LoadDutyValue^0,f,c
  7556  00408E  5016               	movf	??_PWM8_LoadDutyValue^0,w,c
  7557  004090  6E61               	movwf	97,c	;volatile
  7558                           
  7559                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
  7560  004092  C014  F016         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
  7561  004096  0E03               	movlw	3
  7562  004098  1616               	andwf	??_PWM8_LoadDutyValue^0,f,c
  7563  00409A  0E06               	movlw	6
  7564  00409C  6E17               	movwf	(??_PWM8_LoadDutyValue+1)^0,c
  7565  00409E                     u3095:
  7566  00409E  90D8               	bcf	status,0,c
  7567  0040A0  3616               	rlcf	??_PWM8_LoadDutyValue^0,f,c
  7568  0040A2  2E17               	decfsz	(??_PWM8_LoadDutyValue+1)^0,f,c
  7569  0040A4  EF4F  F020         	goto	u3095
  7570  0040A8  5016               	movf	??_PWM8_LoadDutyValue^0,w,c
  7571  0040AA  6E60               	movwf	96,c	;volatile
  7572  0040AC  0012               	return		;funcret
  7573  0040AE                     __end_of_PWM8_LoadDutyValue:
  7574                           	callstack 0
  7575                           
  7576 ;; *************** function _PWM7_LoadDutyValue *****************
  7577 ;; Defined at:
  7578 ;;		line 74 in file "mcc_generated_files/pwm7.c"
  7579 ;; Parameters:    Size  Location     Type
  7580 ;;  dutyValue       2   19[COMRAM] unsigned short 
  7581 ;; Auto vars:     Size  Location     Type
  7582 ;;		None
  7583 ;; Return value:  Size  Location     Type
  7584 ;;                  1    wreg      void 
  7585 ;; Registers used:
  7586 ;;		wreg, status,2, status,0
  7587 ;; Tracked objects:
  7588 ;;		On entry : 0/0
  7589 ;;		On exit  : 0/0
  7590 ;;		Unchanged: 0/0
  7591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7592 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7594 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7595 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7596 ;;Total ram usage:        4 bytes
  7597 ;; Hardware stack levels used: 1
  7598 ;; Hardware stack levels required when called: 8
  7599 ;; This function calls:
  7600 ;;		Nothing
  7601 ;; This function is called by:
  7602 ;;		_setMotor
  7603 ;; This function uses a non-reentrant model
  7604 ;;
  7605                           
  7606                           	psect	text31
  7607  0040AE                     __ptext31:
  7608                           	callstack 0
  7609  0040AE                     _PWM7_LoadDutyValue:
  7610                           	callstack 20
  7611  0040AE                     
  7612                           ;mcc_generated_files/pwm7.c: 74:  void PWM7_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm7.c: 75:  {;mcc_generated_files/pwm7.c: 77:      PWM7DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  7613  0040AE  C014  F016         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
  7614  0040B2  C015  F017         	movff	PWM7_LoadDutyValue@dutyValue+1,??_PWM7_LoadDutyValue+1
  7615  0040B6  90D8               	bcf	status,0,c
  7616  0040B8  3217               	rrcf	(??_PWM7_LoadDutyValue+1)^0,f,c
  7617  0040BA  3216               	rrcf	??_PWM7_LoadDutyValue^0,f,c
  7618  0040BC  90D8               	bcf	status,0,c
  7619  0040BE  3217               	rrcf	(??_PWM7_LoadDutyValue+1)^0,f,c
  7620  0040C0  3216               	rrcf	??_PWM7_LoadDutyValue^0,f,c
  7621  0040C2  5016               	movf	??_PWM7_LoadDutyValue^0,w,c
  7622  0040C4  6E65               	movwf	101,c	;volatile
  7623                           
  7624                           ;mcc_generated_files/pwm7.c: 80:      PWM7DCL = (dutyValue & 0x0003)<<6;
  7625  0040C6  C014  F016         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
  7626  0040CA  0E03               	movlw	3
  7627  0040CC  1616               	andwf	??_PWM7_LoadDutyValue^0,f,c
  7628  0040CE  0E06               	movlw	6
  7629  0040D0  6E17               	movwf	(??_PWM7_LoadDutyValue+1)^0,c
  7630  0040D2                     u3085:
  7631  0040D2  90D8               	bcf	status,0,c
  7632  0040D4  3616               	rlcf	??_PWM7_LoadDutyValue^0,f,c
  7633  0040D6  2E17               	decfsz	(??_PWM7_LoadDutyValue+1)^0,f,c
  7634  0040D8  EF69  F020         	goto	u3085
  7635  0040DC  5016               	movf	??_PWM7_LoadDutyValue^0,w,c
  7636  0040DE  6E64               	movwf	100,c	;volatile
  7637  0040E0  0012               	return		;funcret
  7638  0040E2                     __end_of_PWM7_LoadDutyValue:
  7639                           	callstack 0
  7640                           
  7641 ;; *************** function _actSpeed *****************
  7642 ;; Defined at:
  7643 ;;		line 67 in file "main.c"
  7644 ;; Parameters:    Size  Location     Type
  7645 ;;		None
  7646 ;; Auto vars:     Size  Location     Type
  7647 ;;  speed           2   35[COMRAM] short 
  7648 ;; Return value:  Size  Location     Type
  7649 ;;                  2   33[COMRAM] short 
  7650 ;; Registers used:
  7651 ;;		wreg, status,2, status,0, cstack
  7652 ;; Tracked objects:
  7653 ;;		On entry : 0/0
  7654 ;;		On exit  : 0/0
  7655 ;;		Unchanged: 0/0
  7656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7657 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7658 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7660 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7661 ;;Total ram usage:        4 bytes
  7662 ;; Hardware stack levels used: 1
  7663 ;; Hardware stack levels required when called: 9
  7664 ;; This function calls:
  7665 ;;		___aldiv
  7666 ;; This function is called by:
  7667 ;;		_calcMotorPow
  7668 ;; This function uses a non-reentrant model
  7669 ;;
  7670                           
  7671                           	psect	text32
  7672  003A30                     __ptext32:
  7673                           	callstack 0
  7674  003A30                     _actSpeed:
  7675                           	callstack 19
  7676  003A30                     
  7677                           ;main.c: 68:     int16_t speed = 0;
  7678  003A30  0E00               	movlw	0
  7679  003A32  6E25               	movwf	(actSpeed@speed+1)^0,c
  7680  003A34  0E00               	movlw	0
  7681  003A36  6E24               	movwf	actSpeed@speed^0,c
  7682  003A38                     
  7683                           ;main.c: 69:     if (smtPeriod) {
  7684  003A38  5048               	movf	_smtPeriod^0,w,c	;volatile
  7685  003A3A  1049               	iorwf	(_smtPeriod+1)^0,w,c	;volatile
  7686  003A3C  104A               	iorwf	(_smtPeriod+2)^0,w,c	;volatile
  7687  003A3E  104B               	iorwf	(_smtPeriod+3)^0,w,c	;volatile
  7688  003A40  B4D8               	btfsc	status,2,c
  7689  003A42  EF25  F01D         	goto	u3701
  7690  003A46  EF27  F01D         	goto	u3700
  7691  003A4A                     u3701:
  7692  003A4A  EF5D  F01D         	goto	l5026
  7693  003A4E                     u3700:
  7694  003A4E                     
  7695                           ;main.c: 70:         if (CLC3CONbits.LC3OUT) {
  7696  003A4E  013C               	movlb	60	; () banked
  7697  003A50  AB60               	btfss	96,5,b	;volatile
  7698  003A52  EF2D  F01D         	goto	u3711
  7699  003A56  EF2F  F01D         	goto	u3710
  7700  003A5A                     u3711:
  7701  003A5A  EF47  F01D         	goto	l5024
  7702  003A5E                     u3710:
  7703  003A5E                     
  7704                           ; BSR set to: 60
  7705                           ;main.c: 71:             speed = (int16_t) ((int32_t) (500000 / (int32_t) smtPeriod));
  7706  003A5E  0E20               	movlw	32
  7707  003A60  6E14               	movwf	___aldiv@dividend^0,c
  7708  003A62  0EA1               	movlw	161
  7709  003A64  6E15               	movwf	(___aldiv@dividend+1)^0,c
  7710  003A66  0E07               	movlw	7
  7711  003A68  6E16               	movwf	(___aldiv@dividend+2)^0,c
  7712  003A6A  0E00               	movlw	0
  7713  003A6C  6E17               	movwf	(___aldiv@dividend+3)^0,c
  7714  003A6E  C048  F018         	movff	_smtPeriod,___aldiv@divisor	;volatile
  7715  003A72  C049  F019         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
  7716  003A76  C04A  F01A         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
  7717  003A7A  C04B  F01B         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
  7718  003A7E  ECF6  F018         	call	___aldiv	;wreg free
  7719  003A82  C014  F024         	movff	?___aldiv,actSpeed@speed
  7720  003A86  C015  F025         	movff	?___aldiv+1,actSpeed@speed+1
  7721                           
  7722                           ;main.c: 72:         } else {
  7723  003A8A  EF5D  F01D         	goto	l5026
  7724  003A8E                     l5024:
  7725                           
  7726                           ; BSR set to: 60
  7727                           ;main.c: 73:             speed = (int16_t) ((int32_t) (-500000 / (int32_t) smtPeriod));
  7728  003A8E  0EE0               	movlw	224
  7729  003A90  6E14               	movwf	___aldiv@dividend^0,c
  7730  003A92  0E5E               	movlw	94
  7731  003A94  6E15               	movwf	(___aldiv@dividend+1)^0,c
  7732  003A96  0EF8               	movlw	248
  7733  003A98  6E16               	movwf	(___aldiv@dividend+2)^0,c
  7734  003A9A  0EFF               	movlw	255
  7735  003A9C  6E17               	movwf	(___aldiv@dividend+3)^0,c
  7736  003A9E  C048  F018         	movff	_smtPeriod,___aldiv@divisor	;volatile
  7737  003AA2  C049  F019         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
  7738  003AA6  C04A  F01A         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
  7739  003AAA  C04B  F01B         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
  7740  003AAE  ECF6  F018         	call	___aldiv	;wreg free
  7741  003AB2  C014  F024         	movff	?___aldiv,actSpeed@speed
  7742  003AB6  C015  F025         	movff	?___aldiv+1,actSpeed@speed+1
  7743  003ABA                     l5026:
  7744                           
  7745                           ;main.c: 76:     return speed;
  7746  003ABA  C024  F022         	movff	actSpeed@speed,?_actSpeed
  7747  003ABE  C025  F023         	movff	actSpeed@speed+1,?_actSpeed+1
  7748  003AC2  0012               	return		;funcret
  7749  003AC4                     __end_of_actSpeed:
  7750                           	callstack 0
  7751                           
  7752 ;; *************** function ___aldiv *****************
  7753 ;; Defined at:
  7754 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aldiv.c"
  7755 ;; Parameters:    Size  Location     Type
  7756 ;;  dividend        4   19[COMRAM] long 
  7757 ;;  divisor         4   23[COMRAM] long 
  7758 ;; Auto vars:     Size  Location     Type
  7759 ;;  quotient        4   29[COMRAM] long 
  7760 ;;  sign            1   28[COMRAM] unsigned char 
  7761 ;;  counter         1   27[COMRAM] unsigned char 
  7762 ;; Return value:  Size  Location     Type
  7763 ;;                  4   19[COMRAM] long 
  7764 ;; Registers used:
  7765 ;;		wreg, status,2, status,0
  7766 ;; Tracked objects:
  7767 ;;		On entry : 0/0
  7768 ;;		On exit  : 0/0
  7769 ;;		Unchanged: 0/0
  7770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7771 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7772 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7774 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7775 ;;Total ram usage:       14 bytes
  7776 ;; Hardware stack levels used: 1
  7777 ;; Hardware stack levels required when called: 8
  7778 ;; This function calls:
  7779 ;;		Nothing
  7780 ;; This function is called by:
  7781 ;;		_actSpeed
  7782 ;; This function uses a non-reentrant model
  7783 ;;
  7784                           
  7785                           	psect	text33
  7786  0031EC                     __ptext33:
  7787                           	callstack 0
  7788  0031EC                     ___aldiv:
  7789                           	callstack 19
  7790  0031EC  0E00               	movlw	0
  7791  0031EE  6E1D               	movwf	___aldiv@sign^0,c
  7792  0031F0  BE1B               	btfsc	(___aldiv@divisor+3)^0,7,c
  7793  0031F2  EFFF  F018         	goto	u3130
  7794  0031F6  EFFD  F018         	goto	u3131
  7795  0031FA                     u3131:
  7796  0031FA  EF09  F019         	goto	l4636
  7797  0031FE                     u3130:
  7798  0031FE  1E1B               	comf	(___aldiv@divisor+3)^0,f,c
  7799  003200  1E1A               	comf	(___aldiv@divisor+2)^0,f,c
  7800  003202  1E19               	comf	(___aldiv@divisor+1)^0,f,c
  7801  003204  6C18               	negf	___aldiv@divisor^0,c
  7802  003206  0E00               	movlw	0
  7803  003208  2219               	addwfc	(___aldiv@divisor+1)^0,f,c
  7804  00320A  221A               	addwfc	(___aldiv@divisor+2)^0,f,c
  7805  00320C  221B               	addwfc	(___aldiv@divisor+3)^0,f,c
  7806  00320E  0E01               	movlw	1
  7807  003210  6E1D               	movwf	___aldiv@sign^0,c
  7808  003212                     l4636:
  7809  003212  BE17               	btfsc	(___aldiv@dividend+3)^0,7,c
  7810  003214  EF10  F019         	goto	u3140
  7811  003218  EF0E  F019         	goto	u3141
  7812  00321C                     u3141:
  7813  00321C  EF1A  F019         	goto	l4642
  7814  003220                     u3140:
  7815  003220  1E17               	comf	(___aldiv@dividend+3)^0,f,c
  7816  003222  1E16               	comf	(___aldiv@dividend+2)^0,f,c
  7817  003224  1E15               	comf	(___aldiv@dividend+1)^0,f,c
  7818  003226  6C14               	negf	___aldiv@dividend^0,c
  7819  003228  0E00               	movlw	0
  7820  00322A  2215               	addwfc	(___aldiv@dividend+1)^0,f,c
  7821  00322C  2216               	addwfc	(___aldiv@dividend+2)^0,f,c
  7822  00322E  2217               	addwfc	(___aldiv@dividend+3)^0,f,c
  7823  003230  0E01               	movlw	1
  7824  003232  1A1D               	xorwf	___aldiv@sign^0,f,c
  7825  003234                     l4642:
  7826  003234  0E00               	movlw	0
  7827  003236  6E1E               	movwf	___aldiv@quotient^0,c
  7828  003238  0E00               	movlw	0
  7829  00323A  6E1F               	movwf	(___aldiv@quotient+1)^0,c
  7830  00323C  0E00               	movlw	0
  7831  00323E  6E20               	movwf	(___aldiv@quotient+2)^0,c
  7832  003240  0E00               	movlw	0
  7833  003242  6E21               	movwf	(___aldiv@quotient+3)^0,c
  7834  003244  5018               	movf	___aldiv@divisor^0,w,c
  7835  003246  1019               	iorwf	(___aldiv@divisor+1)^0,w,c
  7836  003248  101A               	iorwf	(___aldiv@divisor+2)^0,w,c
  7837  00324A  101B               	iorwf	(___aldiv@divisor+3)^0,w,c
  7838  00324C  B4D8               	btfsc	status,2,c
  7839  00324E  EF2B  F019         	goto	u3151
  7840  003252  EF2D  F019         	goto	u3150
  7841  003256                     u3151:
  7842  003256  EF63  F019         	goto	l4664
  7843  00325A                     u3150:
  7844  00325A  0E01               	movlw	1
  7845  00325C  6E1C               	movwf	___aldiv@counter^0,c
  7846  00325E  EF37  F019         	goto	l4650
  7847  003262                     l4648:
  7848  003262  90D8               	bcf	status,0,c
  7849  003264  3618               	rlcf	___aldiv@divisor^0,f,c
  7850  003266  3619               	rlcf	(___aldiv@divisor+1)^0,f,c
  7851  003268  361A               	rlcf	(___aldiv@divisor+2)^0,f,c
  7852  00326A  361B               	rlcf	(___aldiv@divisor+3)^0,f,c
  7853  00326C  2A1C               	incf	___aldiv@counter^0,f,c
  7854  00326E                     l4650:
  7855  00326E  AE1B               	btfss	(___aldiv@divisor+3)^0,7,c
  7856  003270  EF3C  F019         	goto	u3161
  7857  003274  EF3E  F019         	goto	u3160
  7858  003278                     u3161:
  7859  003278  EF31  F019         	goto	l4648
  7860  00327C                     u3160:
  7861  00327C                     l4652:
  7862  00327C  90D8               	bcf	status,0,c
  7863  00327E  361E               	rlcf	___aldiv@quotient^0,f,c
  7864  003280  361F               	rlcf	(___aldiv@quotient+1)^0,f,c
  7865  003282  3620               	rlcf	(___aldiv@quotient+2)^0,f,c
  7866  003284  3621               	rlcf	(___aldiv@quotient+3)^0,f,c
  7867  003286  5018               	movf	___aldiv@divisor^0,w,c
  7868  003288  5C14               	subwf	___aldiv@dividend^0,w,c
  7869  00328A  5019               	movf	(___aldiv@divisor+1)^0,w,c
  7870  00328C  5815               	subwfb	(___aldiv@dividend+1)^0,w,c
  7871  00328E  501A               	movf	(___aldiv@divisor+2)^0,w,c
  7872  003290  5816               	subwfb	(___aldiv@dividend+2)^0,w,c
  7873  003292  501B               	movf	(___aldiv@divisor+3)^0,w,c
  7874  003294  5817               	subwfb	(___aldiv@dividend+3)^0,w,c
  7875  003296  A0D8               	btfss	status,0,c
  7876  003298  EF50  F019         	goto	u3171
  7877  00329C  EF52  F019         	goto	u3170
  7878  0032A0                     u3171:
  7879  0032A0  EF5B  F019         	goto	l4660
  7880  0032A4                     u3170:
  7881  0032A4  5018               	movf	___aldiv@divisor^0,w,c
  7882  0032A6  5E14               	subwf	___aldiv@dividend^0,f,c
  7883  0032A8  5019               	movf	(___aldiv@divisor+1)^0,w,c
  7884  0032AA  5A15               	subwfb	(___aldiv@dividend+1)^0,f,c
  7885  0032AC  501A               	movf	(___aldiv@divisor+2)^0,w,c
  7886  0032AE  5A16               	subwfb	(___aldiv@dividend+2)^0,f,c
  7887  0032B0  501B               	movf	(___aldiv@divisor+3)^0,w,c
  7888  0032B2  5A17               	subwfb	(___aldiv@dividend+3)^0,f,c
  7889  0032B4  801E               	bsf	___aldiv@quotient^0,0,c
  7890  0032B6                     l4660:
  7891  0032B6  90D8               	bcf	status,0,c
  7892  0032B8  321B               	rrcf	(___aldiv@divisor+3)^0,f,c
  7893  0032BA  321A               	rrcf	(___aldiv@divisor+2)^0,f,c
  7894  0032BC  3219               	rrcf	(___aldiv@divisor+1)^0,f,c
  7895  0032BE  3218               	rrcf	___aldiv@divisor^0,f,c
  7896  0032C0  2E1C               	decfsz	___aldiv@counter^0,f,c
  7897  0032C2  EF3E  F019         	goto	l4652
  7898  0032C6                     l4664:
  7899  0032C6  501D               	movf	___aldiv@sign^0,w,c
  7900  0032C8  B4D8               	btfsc	status,2,c
  7901  0032CA  EF69  F019         	goto	u3181
  7902  0032CE  EF6B  F019         	goto	u3180
  7903  0032D2                     u3181:
  7904  0032D2  EF73  F019         	goto	l4668
  7905  0032D6                     u3180:
  7906  0032D6  1E21               	comf	(___aldiv@quotient+3)^0,f,c
  7907  0032D8  1E20               	comf	(___aldiv@quotient+2)^0,f,c
  7908  0032DA  1E1F               	comf	(___aldiv@quotient+1)^0,f,c
  7909  0032DC  6C1E               	negf	___aldiv@quotient^0,c
  7910  0032DE  0E00               	movlw	0
  7911  0032E0  221F               	addwfc	(___aldiv@quotient+1)^0,f,c
  7912  0032E2  2220               	addwfc	(___aldiv@quotient+2)^0,f,c
  7913  0032E4  2221               	addwfc	(___aldiv@quotient+3)^0,f,c
  7914  0032E6                     l4668:
  7915  0032E6  C01E  F014         	movff	___aldiv@quotient,?___aldiv
  7916  0032EA  C01F  F015         	movff	___aldiv@quotient+1,?___aldiv+1
  7917  0032EE  C020  F016         	movff	___aldiv@quotient+2,?___aldiv+2
  7918  0032F2  C021  F017         	movff	___aldiv@quotient+3,?___aldiv+3
  7919  0032F6  0012               	return		;funcret
  7920  0032F8                     __end_of___aldiv:
  7921                           	callstack 0
  7922                           
  7923 ;; *************** function ___xxtofl *****************
  7924 ;; Defined at:
  7925 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  7926 ;; Parameters:    Size  Location     Type
  7927 ;;  sign            1    wreg     unsigned char 
  7928 ;;  val             4   27[COMRAM] long 
  7929 ;; Auto vars:     Size  Location     Type
  7930 ;;  sign            1   35[COMRAM] unsigned char 
  7931 ;;  arg             4   37[COMRAM] unsigned long 
  7932 ;;  exp             1   36[COMRAM] unsigned char 
  7933 ;; Return value:  Size  Location     Type
  7934 ;;                  4   27[COMRAM] unsigned char 
  7935 ;; Registers used:
  7936 ;;		wreg, status,2, status,0
  7937 ;; Tracked objects:
  7938 ;;		On entry : 0/0
  7939 ;;		On exit  : 0/0
  7940 ;;		Unchanged: 0/0
  7941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7942 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7943 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7944 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7945 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7946 ;;Total ram usage:       14 bytes
  7947 ;; Hardware stack levels used: 1
  7948 ;; Hardware stack levels required when called: 8
  7949 ;; This function calls:
  7950 ;;		Nothing
  7951 ;; This function is called by:
  7952 ;;		_loop
  7953 ;;		_checkBatt
  7954 ;;		_calcSpeed
  7955 ;;		_calcMotorPow
  7956 ;;		_setSteering
  7957 ;;		_checkCurveCount
  7958 ;; This function uses a non-reentrant model
  7959 ;;
  7960                           
  7961                           	psect	text34
  7962  00283C                     __ptext34:
  7963                           	callstack 0
  7964  00283C                     ___xxtofl:
  7965                           	callstack 20
  7966                           
  7967                           ;incstack = 0
  7968                           ;___xxtofl@sign stored from wreg
  7969  00283C  6E24               	movwf	___xxtofl@sign^0,c
  7970  00283E  5024               	movf	___xxtofl@sign^0,w,c
  7971  002840  B4D8               	btfsc	status,2,c
  7972  002842  EF25  F014         	goto	u3491
  7973  002846  EF27  F014         	goto	u3490
  7974  00284A                     u3491:
  7975  00284A  EF49  F014         	goto	l2056
  7976  00284E                     u3490:
  7977  00284E  BE1F               	btfsc	(___xxtofl@val+3)^0,7,c
  7978  002850  EF2E  F014         	goto	u3500
  7979  002854  EF2C  F014         	goto	u3501
  7980  002858                     u3501:
  7981  002858  EF49  F014         	goto	l2056
  7982  00285C                     u3500:
  7983  00285C  C01C  F020         	movff	___xxtofl@val,??___xxtofl
  7984  002860  C01D  F021         	movff	___xxtofl@val+1,??___xxtofl+1
  7985  002864  C01E  F022         	movff	___xxtofl@val+2,??___xxtofl+2
  7986  002868  C01F  F023         	movff	___xxtofl@val+3,??___xxtofl+3
  7987  00286C  1E20               	comf	??___xxtofl^0,f,c
  7988  00286E  1E21               	comf	(??___xxtofl+1)^0,f,c
  7989  002870  1E22               	comf	(??___xxtofl+2)^0,f,c
  7990  002872  1E23               	comf	(??___xxtofl+3)^0,f,c
  7991  002874  2A20               	incf	??___xxtofl^0,f,c
  7992  002876  0E00               	movlw	0
  7993  002878  2221               	addwfc	(??___xxtofl+1)^0,f,c
  7994  00287A  2222               	addwfc	(??___xxtofl+2)^0,f,c
  7995  00287C  2223               	addwfc	(??___xxtofl+3)^0,f,c
  7996  00287E  C020  F026         	movff	??___xxtofl,___xxtofl@arg
  7997  002882  C021  F027         	movff	??___xxtofl+1,___xxtofl@arg+1
  7998  002886  C022  F028         	movff	??___xxtofl+2,___xxtofl@arg+2
  7999  00288A  C023  F029         	movff	??___xxtofl+3,___xxtofl@arg+3
  8000  00288E  EF51  F014         	goto	l4860
  8001  002892                     l2056:
  8002  002892  C01C  F026         	movff	___xxtofl@val,___xxtofl@arg
  8003  002896  C01D  F027         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8004  00289A  C01E  F028         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8005  00289E  C01F  F029         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8006  0028A2                     l4860:
  8007  0028A2  501C               	movf	___xxtofl@val^0,w,c
  8008  0028A4  101D               	iorwf	(___xxtofl@val+1)^0,w,c
  8009  0028A6  101E               	iorwf	(___xxtofl@val+2)^0,w,c
  8010  0028A8  101F               	iorwf	(___xxtofl@val+3)^0,w,c
  8011  0028AA  A4D8               	btfss	status,2,c
  8012  0028AC  EF5A  F014         	goto	u3511
  8013  0028B0  EF5C  F014         	goto	u3510
  8014  0028B4                     u3511:
  8015  0028B4  EF66  F014         	goto	l4866
  8016  0028B8                     u3510:
  8017  0028B8  0E00               	movlw	0
  8018  0028BA  6E1C               	movwf	?___xxtofl^0,c
  8019  0028BC  0E00               	movlw	0
  8020  0028BE  6E1D               	movwf	(?___xxtofl+1)^0,c
  8021  0028C0  0E00               	movlw	0
  8022  0028C2  6E1E               	movwf	(?___xxtofl+2)^0,c
  8023  0028C4  0E00               	movlw	0
  8024  0028C6  6E1F               	movwf	(?___xxtofl+3)^0,c
  8025  0028C8  EFF7  F014         	goto	l2059
  8026  0028CC                     l4866:
  8027  0028CC  0E96               	movlw	150
  8028  0028CE  6E25               	movwf	___xxtofl@exp^0,c
  8029  0028D0  EF70  F014         	goto	l4870
  8030  0028D4                     l4868:
  8031  0028D4  2A25               	incf	___xxtofl@exp^0,f,c
  8032  0028D6  90D8               	bcf	status,0,c
  8033  0028D8  3229               	rrcf	(___xxtofl@arg+3)^0,f,c
  8034  0028DA  3228               	rrcf	(___xxtofl@arg+2)^0,f,c
  8035  0028DC  3227               	rrcf	(___xxtofl@arg+1)^0,f,c
  8036  0028DE  3226               	rrcf	___xxtofl@arg^0,f,c
  8037  0028E0                     l4870:
  8038  0028E0  0E00               	movlw	0
  8039  0028E2  1426               	andwf	___xxtofl@arg^0,w,c
  8040  0028E4  6E20               	movwf	??___xxtofl^0,c
  8041  0028E6  0E00               	movlw	0
  8042  0028E8  1427               	andwf	(___xxtofl@arg+1)^0,w,c
  8043  0028EA  6E21               	movwf	(??___xxtofl+1)^0,c
  8044  0028EC  0E00               	movlw	0
  8045  0028EE  1428               	andwf	(___xxtofl@arg+2)^0,w,c
  8046  0028F0  6E22               	movwf	(??___xxtofl+2)^0,c
  8047  0028F2  0EFE               	movlw	254
  8048  0028F4  1429               	andwf	(___xxtofl@arg+3)^0,w,c
  8049  0028F6  6E23               	movwf	(??___xxtofl+3)^0,c
  8050  0028F8  5020               	movf	??___xxtofl^0,w,c
  8051  0028FA  1021               	iorwf	(??___xxtofl+1)^0,w,c
  8052  0028FC  1022               	iorwf	(??___xxtofl+2)^0,w,c
  8053  0028FE  1023               	iorwf	(??___xxtofl+3)^0,w,c
  8054  002900  A4D8               	btfss	status,2,c
  8055  002902  EF85  F014         	goto	u3521
  8056  002906  EF87  F014         	goto	u3520
  8057  00290A                     u3521:
  8058  00290A  EF6A  F014         	goto	l4868
  8059  00290E                     u3520:
  8060  00290E  EF95  F014         	goto	l2063
  8061  002912                     l4872:
  8062  002912  2A25               	incf	___xxtofl@exp^0,f,c
  8063  002914  0E01               	movlw	1
  8064  002916  2626               	addwf	___xxtofl@arg^0,f,c
  8065  002918  0E00               	movlw	0
  8066  00291A  2227               	addwfc	(___xxtofl@arg+1)^0,f,c
  8067  00291C  2228               	addwfc	(___xxtofl@arg+2)^0,f,c
  8068  00291E  2229               	addwfc	(___xxtofl@arg+3)^0,f,c
  8069  002920  90D8               	bcf	status,0,c
  8070  002922  3229               	rrcf	(___xxtofl@arg+3)^0,f,c
  8071  002924  3228               	rrcf	(___xxtofl@arg+2)^0,f,c
  8072  002926  3227               	rrcf	(___xxtofl@arg+1)^0,f,c
  8073  002928  3226               	rrcf	___xxtofl@arg^0,f,c
  8074  00292A                     l2063:
  8075  00292A  0E00               	movlw	0
  8076  00292C  1426               	andwf	___xxtofl@arg^0,w,c
  8077  00292E  6E20               	movwf	??___xxtofl^0,c
  8078  002930  0E00               	movlw	0
  8079  002932  1427               	andwf	(___xxtofl@arg+1)^0,w,c
  8080  002934  6E21               	movwf	(??___xxtofl+1)^0,c
  8081  002936  0E00               	movlw	0
  8082  002938  1428               	andwf	(___xxtofl@arg+2)^0,w,c
  8083  00293A  6E22               	movwf	(??___xxtofl+2)^0,c
  8084  00293C  0EFF               	movlw	255
  8085  00293E  1429               	andwf	(___xxtofl@arg+3)^0,w,c
  8086  002940  6E23               	movwf	(??___xxtofl+3)^0,c
  8087  002942  5020               	movf	??___xxtofl^0,w,c
  8088  002944  1021               	iorwf	(??___xxtofl+1)^0,w,c
  8089  002946  1022               	iorwf	(??___xxtofl+2)^0,w,c
  8090  002948  1023               	iorwf	(??___xxtofl+3)^0,w,c
  8091  00294A  A4D8               	btfss	status,2,c
  8092  00294C  EFAA  F014         	goto	u3531
  8093  002950  EFAC  F014         	goto	u3530
  8094  002954                     u3531:
  8095  002954  EF89  F014         	goto	l4872
  8096  002958                     u3530:
  8097  002958  EFB4  F014         	goto	l4880
  8098  00295C                     l4878:
  8099  00295C  0625               	decf	___xxtofl@exp^0,f,c
  8100  00295E  90D8               	bcf	status,0,c
  8101  002960  3626               	rlcf	___xxtofl@arg^0,f,c
  8102  002962  3627               	rlcf	(___xxtofl@arg+1)^0,f,c
  8103  002964  3628               	rlcf	(___xxtofl@arg+2)^0,f,c
  8104  002966  3629               	rlcf	(___xxtofl@arg+3)^0,f,c
  8105  002968                     l4880:
  8106  002968  BE28               	btfsc	(___xxtofl@arg+2)^0,7,c
  8107  00296A  EFB9  F014         	goto	u3541
  8108  00296E  EFBB  F014         	goto	u3540
  8109  002972                     u3541:
  8110  002972  EFC3  F014         	goto	l2070
  8111  002976                     u3540:
  8112  002976  0E02               	movlw	2
  8113  002978  6025               	cpfslt	___xxtofl@exp^0,c
  8114  00297A  EFC1  F014         	goto	u3551
  8115  00297E  EFC3  F014         	goto	u3550
  8116  002982                     u3551:
  8117  002982  EFAE  F014         	goto	l4878
  8118  002986                     u3550:
  8119  002986                     l2070:
  8120  002986  B025               	btfsc	___xxtofl@exp^0,0,c
  8121  002988  EFC8  F014         	goto	u3561
  8122  00298C  EFCA  F014         	goto	u3560
  8123  002990                     u3561:
  8124  002990  EFCB  F014         	goto	l4886
  8125  002994                     u3560:
  8126  002994  9E28               	bcf	(___xxtofl@arg+2)^0,7,c
  8127  002996                     l4886:
  8128  002996  90D8               	bcf	status,0,c
  8129  002998  3225               	rrcf	___xxtofl@exp^0,f,c
  8130  00299A  C025  F020         	movff	___xxtofl@exp,??___xxtofl
  8131  00299E  6A21               	clrf	(??___xxtofl+1)^0,c
  8132  0029A0  6A22               	clrf	(??___xxtofl+2)^0,c
  8133  0029A2  6A23               	clrf	(??___xxtofl+3)^0,c
  8134  0029A4  C020  F023         	movff	??___xxtofl,??___xxtofl+3
  8135  0029A8  6A22               	clrf	(??___xxtofl+2)^0,c
  8136  0029AA  6A21               	clrf	(??___xxtofl+1)^0,c
  8137  0029AC  6A20               	clrf	??___xxtofl^0,c
  8138  0029AE  5020               	movf	??___xxtofl^0,w,c
  8139  0029B0  1226               	iorwf	___xxtofl@arg^0,f,c
  8140  0029B2  5021               	movf	(??___xxtofl+1)^0,w,c
  8141  0029B4  1227               	iorwf	(___xxtofl@arg+1)^0,f,c
  8142  0029B6  5022               	movf	(??___xxtofl+2)^0,w,c
  8143  0029B8  1228               	iorwf	(___xxtofl@arg+2)^0,f,c
  8144  0029BA  5023               	movf	(??___xxtofl+3)^0,w,c
  8145  0029BC  1229               	iorwf	(___xxtofl@arg+3)^0,f,c
  8146  0029BE  5024               	movf	___xxtofl@sign^0,w,c
  8147  0029C0  B4D8               	btfsc	status,2,c
  8148  0029C2  EFE5  F014         	goto	u3571
  8149  0029C6  EFE7  F014         	goto	u3570
  8150  0029CA                     u3571:
  8151  0029CA  EFEF  F014         	goto	l4896
  8152  0029CE                     u3570:
  8153  0029CE  BE1F               	btfsc	(___xxtofl@val+3)^0,7,c
  8154  0029D0  EFEE  F014         	goto	u3580
  8155  0029D4  EFEC  F014         	goto	u3581
  8156  0029D8                     u3581:
  8157  0029D8  EFEF  F014         	goto	l4896
  8158  0029DC                     u3580:
  8159  0029DC  8E29               	bsf	(___xxtofl@arg+3)^0,7,c
  8160  0029DE                     l4896:
  8161  0029DE  C026  F01C         	movff	___xxtofl@arg,?___xxtofl
  8162  0029E2  C027  F01D         	movff	___xxtofl@arg+1,?___xxtofl+1
  8163  0029E6  C028  F01E         	movff	___xxtofl@arg+2,?___xxtofl+2
  8164  0029EA  C029  F01F         	movff	___xxtofl@arg+3,?___xxtofl+3
  8165  0029EE                     l2059:
  8166  0029EE  0012               	return		;funcret
  8167  0029F0                     __end_of___xxtofl:
  8168                           	callstack 0
  8169                           
  8170 ;; *************** function ___fltol *****************
  8171 ;; Defined at:
  8172 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  8173 ;; Parameters:    Size  Location     Type
  8174 ;;  f1              4   25[BANK0 ] unsigned char 
  8175 ;; Auto vars:     Size  Location     Type
  8176 ;;  exp1            1   34[BANK0 ] unsigned char 
  8177 ;;  sign1           1   33[BANK0 ] unsigned char 
  8178 ;; Return value:  Size  Location     Type
  8179 ;;                  4   25[BANK0 ] long 
  8180 ;; Registers used:
  8181 ;;		wreg, status,2, status,0
  8182 ;; Tracked objects:
  8183 ;;		On entry : 0/0
  8184 ;;		On exit  : 0/0
  8185 ;;		Unchanged: 0/0
  8186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8187 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8188 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8189 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8190 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8191 ;;Total ram usage:       10 bytes
  8192 ;; Hardware stack levels used: 1
  8193 ;; Hardware stack levels required when called: 8
  8194 ;; This function calls:
  8195 ;;		Nothing
  8196 ;; This function is called by:
  8197 ;;		_calcSpeed
  8198 ;;		_calcMotorPow
  8199 ;;		_setSteering
  8200 ;; This function uses a non-reentrant model
  8201 ;;
  8202                           
  8203                           	psect	text35
  8204  0032F8                     __ptext35:
  8205                           	callstack 0
  8206  0032F8                     ___fltol:
  8207                           	callstack 20
  8208  0032F8  0100               	movlb	0	; () banked
  8209  0032FA  35C7               	rlcf	(___fltol@f1+2)& (0+255),w,b
  8210  0032FC  35C8               	rlcf	(___fltol@f1+3)& (0+255),w,b
  8211  0032FE  6FCE               	movwf	___fltol@exp1& (0+255),b
  8212  003300  51CE               	movf	___fltol@exp1& (0+255),w,b
  8213  003302  A4D8               	btfss	status,2,c
  8214  003304  EF86  F019         	goto	u5921
  8215  003308  EF88  F019         	goto	u5920
  8216  00330C                     u5921:
  8217  00330C  EF92  F019         	goto	l6632
  8218  003310                     u5920:
  8219  003310                     l6628:
  8220                           
  8221                           ; BSR set to: 0
  8222  003310  0E00               	movlw	0
  8223  003312  6FC5               	movwf	?___fltol& (0+255),b
  8224  003314  0E00               	movlw	0
  8225  003316  6FC6               	movwf	(?___fltol+1)& (0+255),b
  8226  003318  0E00               	movlw	0
  8227  00331A  6FC7               	movwf	(?___fltol+2)& (0+255),b
  8228  00331C  0E00               	movlw	0
  8229  00331E  6FC8               	movwf	(?___fltol+3)& (0+255),b
  8230  003320  EFFF  F019         	goto	l1698
  8231  003324                     l6632:
  8232                           
  8233                           ; BSR set to: 0
  8234  003324  C0C5  F0C9         	movff	___fltol@f1,??___fltol
  8235  003328  C0C6  F0CA         	movff	___fltol@f1+1,??___fltol+1
  8236  00332C  C0C7  F0CB         	movff	___fltol@f1+2,??___fltol+2
  8237  003330  C0C8  F0CC         	movff	___fltol@f1+3,??___fltol+3
  8238  003334  0E20               	movlw	32
  8239  003336  EFA2  F019         	goto	u5930
  8240  00333A                     u5935:
  8241  00333A  90D8               	bcf	status,0,c
  8242  00333C  33CC               	rrcf	(??___fltol+3)& (0+255),f,b
  8243  00333E  33CB               	rrcf	(??___fltol+2)& (0+255),f,b
  8244  003340  33CA               	rrcf	(??___fltol+1)& (0+255),f,b
  8245  003342  33C9               	rrcf	??___fltol& (0+255),f,b
  8246  003344                     u5930:
  8247  003344  2EE8               	decfsz	wreg,f,c
  8248  003346  EF9D  F019         	goto	u5935
  8249  00334A  51C9               	movf	??___fltol& (0+255),w,b
  8250  00334C  6FCD               	movwf	___fltol@sign1& (0+255),b
  8251  00334E                     
  8252                           ; BSR set to: 0
  8253  00334E  8FC7               	bsf	(___fltol@f1+2)& (0+255),7,b
  8254  003350                     
  8255                           ; BSR set to: 0
  8256  003350  0EFF               	movlw	255
  8257  003352  17C5               	andwf	___fltol@f1& (0+255),f,b
  8258  003354  0EFF               	movlw	255
  8259  003356  17C6               	andwf	(___fltol@f1+1)& (0+255),f,b
  8260  003358  0EFF               	movlw	255
  8261  00335A  17C7               	andwf	(___fltol@f1+2)& (0+255),f,b
  8262  00335C  0E00               	movlw	0
  8263  00335E  17C8               	andwf	(___fltol@f1+3)& (0+255),f,b
  8264  003360                     
  8265                           ; BSR set to: 0
  8266  003360  0E96               	movlw	150
  8267  003362  5FCE               	subwf	___fltol@exp1& (0+255),f,b
  8268  003364                     
  8269                           ; BSR set to: 0
  8270  003364  BFCE               	btfsc	___fltol@exp1& (0+255),7,b
  8271  003366  EFB9  F019         	goto	u5940
  8272  00336A  EFB7  F019         	goto	u5941
  8273  00336E                     u5941:
  8274  00336E  EFCF  F019         	goto	l6652
  8275  003372                     u5940:
  8276  003372                     
  8277                           ; BSR set to: 0
  8278  003372  51CE               	movf	___fltol@exp1& (0+255),w,b
  8279  003374  0A80               	xorlw	128
  8280  003376  0F97               	addlw	151
  8281  003378  B0D8               	btfsc	status,0,c
  8282  00337A  EFC1  F019         	goto	u5951
  8283  00337E  EFC3  F019         	goto	u5950
  8284  003382                     u5951:
  8285  003382  EFC5  F019         	goto	l6648
  8286  003386                     u5950:
  8287  003386  EF88  F019         	goto	l6628
  8288  00338A                     l6648:
  8289                           
  8290                           ; BSR set to: 0
  8291  00338A  90D8               	bcf	status,0,c
  8292  00338C  33C8               	rrcf	(___fltol@f1+3)& (0+255),f,b
  8293  00338E  33C7               	rrcf	(___fltol@f1+2)& (0+255),f,b
  8294  003390  33C6               	rrcf	(___fltol@f1+1)& (0+255),f,b
  8295  003392  33C5               	rrcf	___fltol@f1& (0+255),f,b
  8296  003394                     
  8297                           ; BSR set to: 0
  8298  003394  3FCE               	incfsz	___fltol@exp1& (0+255),f,b
  8299  003396  EFC5  F019         	goto	l6648
  8300  00339A  EFE7  F019         	goto	l6662
  8301  00339E                     l6652:
  8302                           
  8303                           ; BSR set to: 0
  8304  00339E  0E1F               	movlw	31
  8305  0033A0  65CE               	cpfsgt	___fltol@exp1& (0+255),b
  8306  0033A2  EFD5  F019         	goto	u5961
  8307  0033A6  EFD7  F019         	goto	u5960
  8308  0033AA                     u5961:
  8309  0033AA  EFDF  F019         	goto	l6660
  8310  0033AE                     u5960:
  8311  0033AE  EF88  F019         	goto	l6628
  8312  0033B2                     l6658:
  8313                           
  8314                           ; BSR set to: 0
  8315  0033B2  90D8               	bcf	status,0,c
  8316  0033B4  37C5               	rlcf	___fltol@f1& (0+255),f,b
  8317  0033B6  37C6               	rlcf	(___fltol@f1+1)& (0+255),f,b
  8318  0033B8  37C7               	rlcf	(___fltol@f1+2)& (0+255),f,b
  8319  0033BA  37C8               	rlcf	(___fltol@f1+3)& (0+255),f,b
  8320  0033BC  07CE               	decf	___fltol@exp1& (0+255),f,b
  8321  0033BE                     l6660:
  8322                           
  8323                           ; BSR set to: 0
  8324  0033BE  51CE               	movf	___fltol@exp1& (0+255),w,b
  8325  0033C0  A4D8               	btfss	status,2,c
  8326  0033C2  EFE5  F019         	goto	u5971
  8327  0033C6  EFE7  F019         	goto	u5970
  8328  0033CA                     u5971:
  8329  0033CA  EFD9  F019         	goto	l6658
  8330  0033CE                     u5970:
  8331  0033CE                     l6662:
  8332                           
  8333                           ; BSR set to: 0
  8334  0033CE  51CD               	movf	___fltol@sign1& (0+255),w,b
  8335  0033D0  B4D8               	btfsc	status,2,c
  8336  0033D2  EFED  F019         	goto	u5981
  8337  0033D6  EFEF  F019         	goto	u5980
  8338  0033DA                     u5981:
  8339  0033DA  EFF7  F019         	goto	l6666
  8340  0033DE                     u5980:
  8341  0033DE                     
  8342                           ; BSR set to: 0
  8343  0033DE  1FC8               	comf	(___fltol@f1+3)& (0+255),f,b
  8344  0033E0  1FC7               	comf	(___fltol@f1+2)& (0+255),f,b
  8345  0033E2  1FC6               	comf	(___fltol@f1+1)& (0+255),f,b
  8346  0033E4  6DC5               	negf	___fltol@f1& (0+255),b
  8347  0033E6  0E00               	movlw	0
  8348  0033E8  23C6               	addwfc	(___fltol@f1+1)& (0+255),f,b
  8349  0033EA  23C7               	addwfc	(___fltol@f1+2)& (0+255),f,b
  8350  0033EC  23C8               	addwfc	(___fltol@f1+3)& (0+255),f,b
  8351  0033EE                     l6666:
  8352                           
  8353                           ; BSR set to: 0
  8354  0033EE  C0C5  F0C5         	movff	___fltol@f1,?___fltol
  8355  0033F2  C0C6  F0C6         	movff	___fltol@f1+1,?___fltol+1
  8356  0033F6  C0C7  F0C7         	movff	___fltol@f1+2,?___fltol+2
  8357  0033FA  C0C8  F0C8         	movff	___fltol@f1+3,?___fltol+3
  8358  0033FE                     l1698:
  8359                           
  8360                           ; BSR set to: 0
  8361  0033FE  0012               	return		;funcret
  8362  003400                     __end_of___fltol:
  8363                           	callstack 0
  8364                           
  8365 ;; *************** function ___flmul *****************
  8366 ;; Defined at:
  8367 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  8368 ;; Parameters:    Size  Location     Type
  8369 ;;  b               4   41[COMRAM] long 
  8370 ;;  a               4   45[COMRAM] long 
  8371 ;; Auto vars:     Size  Location     Type
  8372 ;;  prod            4    7[BANK0 ] struct .
  8373 ;;  grs             4    2[BANK0 ] unsigned long 
  8374 ;;  temp            2   11[BANK0 ] struct .
  8375 ;;  bexp            1    6[BANK0 ] unsigned char 
  8376 ;;  aexp            1    1[BANK0 ] unsigned char 
  8377 ;;  sign            1    0[BANK0 ] unsigned char 
  8378 ;; Return value:  Size  Location     Type
  8379 ;;                  4   41[COMRAM] unsigned char 
  8380 ;; Registers used:
  8381 ;;		wreg, status,2, status,0, prodl, prodh
  8382 ;; Tracked objects:
  8383 ;;		On entry : 0/0
  8384 ;;		On exit  : 0/0
  8385 ;;		Unchanged: 0/0
  8386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8387 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8388 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8389 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8390 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8391 ;;Total ram usage:       25 bytes
  8392 ;; Hardware stack levels used: 1
  8393 ;; Hardware stack levels required when called: 8
  8394 ;; This function calls:
  8395 ;;		Nothing
  8396 ;; This function is called by:
  8397 ;;		_calcSpeed
  8398 ;;		_calcMotorPow
  8399 ;; This function uses a non-reentrant model
  8400 ;;
  8401                           
  8402                           	psect	text36
  8403  0014FC                     __ptext36:
  8404                           	callstack 0
  8405  0014FC                     ___flmul:
  8406                           	callstack 20
  8407  0014FC  502D               	movf	(___flmul@b+3)^0,w,c
  8408  0014FE  0B80               	andlw	128
  8409  001500  0100               	movlb	0	; () banked
  8410  001502  6FAC               	movwf	___flmul@sign& (0+255),b
  8411  001504  502D               	movf	(___flmul@b+3)^0,w,c
  8412  001506  242D               	addwf	(___flmul@b+3)^0,w,c
  8413  001508  6FB2               	movwf	___flmul@bexp& (0+255),b
  8414  00150A                     
  8415                           ; BSR set to: 0
  8416  00150A  AE2C               	btfss	(___flmul@b+2)^0,7,c
  8417  00150C  EF8A  F00A         	goto	u6431
  8418  001510  EF8C  F00A         	goto	u6430
  8419  001514                     u6431:
  8420  001514  EF8D  F00A         	goto	l6934
  8421  001518                     u6430:
  8422  001518                     
  8423                           ; BSR set to: 0
  8424  001518  81B2               	bsf	___flmul@bexp& (0+255),0,b
  8425  00151A                     l6934:
  8426                           
  8427                           ; BSR set to: 0
  8428  00151A  51B2               	movf	___flmul@bexp& (0+255),w,b
  8429  00151C  B4D8               	btfsc	status,2,c
  8430  00151E  EF93  F00A         	goto	u6441
  8431  001522  EF95  F00A         	goto	u6440
  8432  001526                     u6441:
  8433  001526  EFA8  F00A         	goto	l6942
  8434  00152A                     u6440:
  8435  00152A                     
  8436                           ; BSR set to: 0
  8437  00152A  29B2               	incf	___flmul@bexp& (0+255),w,b
  8438  00152C  A4D8               	btfss	status,2,c
  8439  00152E  EF9B  F00A         	goto	u6451
  8440  001532  EF9D  F00A         	goto	u6450
  8441  001536                     u6451:
  8442  001536  EFA5  F00A         	goto	l6940
  8443  00153A                     u6450:
  8444  00153A                     
  8445                           ; BSR set to: 0
  8446  00153A  0E00               	movlw	0
  8447  00153C  6E2A               	movwf	___flmul@b^0,c
  8448  00153E  0E00               	movlw	0
  8449  001540  6E2B               	movwf	(___flmul@b+1)^0,c
  8450  001542  0E00               	movlw	0
  8451  001544  6E2C               	movwf	(___flmul@b+2)^0,c
  8452  001546  0E00               	movlw	0
  8453  001548  6E2D               	movwf	(___flmul@b+3)^0,c
  8454  00154A                     l6940:
  8455                           
  8456                           ; BSR set to: 0
  8457  00154A  8E2C               	bsf	(___flmul@b+2)^0,7,c
  8458  00154C  EFB0  F00A         	goto	l6944
  8459  001550                     l6942:
  8460                           
  8461                           ; BSR set to: 0
  8462  001550  0E00               	movlw	0
  8463  001552  6E2A               	movwf	___flmul@b^0,c
  8464  001554  0E00               	movlw	0
  8465  001556  6E2B               	movwf	(___flmul@b+1)^0,c
  8466  001558  0E00               	movlw	0
  8467  00155A  6E2C               	movwf	(___flmul@b+2)^0,c
  8468  00155C  0E00               	movlw	0
  8469  00155E  6E2D               	movwf	(___flmul@b+3)^0,c
  8470  001560                     l6944:
  8471                           
  8472                           ; BSR set to: 0
  8473  001560  5031               	movf	(___flmul@a+3)^0,w,c
  8474  001562  0B80               	andlw	128
  8475  001564  1BAC               	xorwf	___flmul@sign& (0+255),f,b
  8476  001566                     
  8477                           ; BSR set to: 0
  8478  001566  5031               	movf	(___flmul@a+3)^0,w,c
  8479  001568  2431               	addwf	(___flmul@a+3)^0,w,c
  8480  00156A  6FAD               	movwf	___flmul@aexp& (0+255),b
  8481  00156C                     
  8482                           ; BSR set to: 0
  8483  00156C  AE30               	btfss	(___flmul@a+2)^0,7,c
  8484  00156E  EFBB  F00A         	goto	u6461
  8485  001572  EFBD  F00A         	goto	u6460
  8486  001576                     u6461:
  8487  001576  EFBE  F00A         	goto	l6952
  8488  00157A                     u6460:
  8489  00157A                     
  8490                           ; BSR set to: 0
  8491  00157A  81AD               	bsf	___flmul@aexp& (0+255),0,b
  8492  00157C                     l6952:
  8493                           
  8494                           ; BSR set to: 0
  8495  00157C  51AD               	movf	___flmul@aexp& (0+255),w,b
  8496  00157E  B4D8               	btfsc	status,2,c
  8497  001580  EFC4  F00A         	goto	u6471
  8498  001584  EFC6  F00A         	goto	u6470
  8499  001588                     u6471:
  8500  001588  EFD9  F00A         	goto	l6960
  8501  00158C                     u6470:
  8502  00158C                     
  8503                           ; BSR set to: 0
  8504  00158C  29AD               	incf	___flmul@aexp& (0+255),w,b
  8505  00158E  A4D8               	btfss	status,2,c
  8506  001590  EFCC  F00A         	goto	u6481
  8507  001594  EFCE  F00A         	goto	u6480
  8508  001598                     u6481:
  8509  001598  EFD6  F00A         	goto	l6958
  8510  00159C                     u6480:
  8511  00159C                     
  8512                           ; BSR set to: 0
  8513  00159C  0E00               	movlw	0
  8514  00159E  6E2E               	movwf	___flmul@a^0,c
  8515  0015A0  0E00               	movlw	0
  8516  0015A2  6E2F               	movwf	(___flmul@a+1)^0,c
  8517  0015A4  0E00               	movlw	0
  8518  0015A6  6E30               	movwf	(___flmul@a+2)^0,c
  8519  0015A8  0E00               	movlw	0
  8520  0015AA  6E31               	movwf	(___flmul@a+3)^0,c
  8521  0015AC                     l6958:
  8522                           
  8523                           ; BSR set to: 0
  8524  0015AC  8E30               	bsf	(___flmul@a+2)^0,7,c
  8525  0015AE  EFE1  F00A         	goto	l2015
  8526  0015B2                     l6960:
  8527                           
  8528                           ; BSR set to: 0
  8529  0015B2  0E00               	movlw	0
  8530  0015B4  6E2E               	movwf	___flmul@a^0,c
  8531  0015B6  0E00               	movlw	0
  8532  0015B8  6E2F               	movwf	(___flmul@a+1)^0,c
  8533  0015BA  0E00               	movlw	0
  8534  0015BC  6E30               	movwf	(___flmul@a+2)^0,c
  8535  0015BE  0E00               	movlw	0
  8536  0015C0  6E31               	movwf	(___flmul@a+3)^0,c
  8537  0015C2                     l2015:
  8538                           
  8539                           ; BSR set to: 0
  8540  0015C2  51AD               	movf	___flmul@aexp& (0+255),w,b
  8541  0015C4  B4D8               	btfsc	status,2,c
  8542  0015C6  EFE7  F00A         	goto	u6491
  8543  0015CA  EFE9  F00A         	goto	u6490
  8544  0015CE                     u6491:
  8545  0015CE  EFF1  F00A         	goto	l6964
  8546  0015D2                     u6490:
  8547  0015D2                     
  8548                           ; BSR set to: 0
  8549  0015D2  51B2               	movf	___flmul@bexp& (0+255),w,b
  8550  0015D4  A4D8               	btfss	status,2,c
  8551  0015D6  EFEF  F00A         	goto	u6501
  8552  0015DA  EFF1  F00A         	goto	u6500
  8553  0015DE                     u6501:
  8554  0015DE  EFFB  F00A         	goto	l6968
  8555  0015E2                     u6500:
  8556  0015E2                     l6964:
  8557                           
  8558                           ; BSR set to: 0
  8559  0015E2  0E00               	movlw	0
  8560  0015E4  6E2A               	movwf	?___flmul^0,c
  8561  0015E6  0E00               	movlw	0
  8562  0015E8  6E2B               	movwf	(?___flmul+1)^0,c
  8563  0015EA  0E00               	movlw	0
  8564  0015EC  6E2C               	movwf	(?___flmul+2)^0,c
  8565  0015EE  0E00               	movlw	0
  8566  0015F0  6E2D               	movwf	(?___flmul+3)^0,c
  8567  0015F2  EFA5  F00C         	goto	l2019
  8568  0015F6                     l6968:
  8569                           
  8570                           ; BSR set to: 0
  8571  0015F6  5030               	movf	(___flmul@a+2)^0,w,c
  8572  0015F8  022A               	mulwf	___flmul@b^0,c
  8573  0015FA  006F FFCC  F0B7    	movff	prodl,___flmul@temp
  8574  001600  006F FFD0  F0B8    	movff	prodh,___flmul@temp+1
  8575  001606                     
  8576                           ; BSR set to: 0
  8577  001606  51B7               	movf	___flmul@temp& (0+255),w,b
  8578  001608  6FAE               	movwf	___flmul@grs& (0+255),b
  8579  00160A  6BAF               	clrf	(___flmul@grs+1)& (0+255),b
  8580  00160C  6BB0               	clrf	(___flmul@grs+2)& (0+255),b
  8581  00160E  6BB1               	clrf	(___flmul@grs+3)& (0+255),b
  8582  001610                     
  8583                           ; BSR set to: 0
  8584  001610  51B8               	movf	(___flmul@temp+1)& (0+255),w,b
  8585  001612  6FB3               	movwf	___flmul@prod& (0+255),b
  8586  001614  6BB4               	clrf	(___flmul@prod+1)& (0+255),b
  8587  001616  6BB5               	clrf	(___flmul@prod+2)& (0+255),b
  8588  001618  6BB6               	clrf	(___flmul@prod+3)& (0+255),b
  8589  00161A  502F               	movf	(___flmul@a+1)^0,w,c
  8590  00161C  022B               	mulwf	(___flmul@b+1)^0,c
  8591  00161E  006F FFCC  F0B7    	movff	prodl,___flmul@temp
  8592  001624  006F FFD0  F0B8    	movff	prodh,___flmul@temp+1
  8593  00162A                     
  8594                           ; BSR set to: 0
  8595  00162A  51B7               	movf	___flmul@temp& (0+255),w,b
  8596  00162C  27AE               	addwf	___flmul@grs& (0+255),f,b
  8597  00162E  0E00               	movlw	0
  8598  001630  23AF               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8599  001632  23B0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8600  001634  23B1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8601  001636                     
  8602                           ; BSR set to: 0
  8603  001636  51B8               	movf	(___flmul@temp+1)& (0+255),w,b
  8604  001638  27B3               	addwf	___flmul@prod& (0+255),f,b
  8605  00163A  0E00               	movlw	0
  8606  00163C  23B4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8607  00163E  23B5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8608  001640  23B6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8609  001642  502E               	movf	___flmul@a^0,w,c
  8610  001644  022C               	mulwf	(___flmul@b+2)^0,c
  8611  001646  006F FFCC  F0B7    	movff	prodl,___flmul@temp
  8612  00164C  006F FFD0  F0B8    	movff	prodh,___flmul@temp+1
  8613  001652                     
  8614                           ; BSR set to: 0
  8615  001652  51B7               	movf	___flmul@temp& (0+255),w,b
  8616  001654  27AE               	addwf	___flmul@grs& (0+255),f,b
  8617  001656  0E00               	movlw	0
  8618  001658  23AF               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8619  00165A  23B0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8620  00165C  23B1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8621  00165E                     
  8622                           ; BSR set to: 0
  8623  00165E  51B8               	movf	(___flmul@temp+1)& (0+255),w,b
  8624  001660  27B3               	addwf	___flmul@prod& (0+255),f,b
  8625  001662  0E00               	movlw	0
  8626  001664  23B4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8627  001666  23B5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8628  001668  23B6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8629  00166A                     
  8630                           ; BSR set to: 0
  8631  00166A  C0B0  F0B1         	movff	___flmul@grs+2,___flmul@grs+3
  8632  00166E  C0AF  F0B0         	movff	___flmul@grs+1,___flmul@grs+2
  8633  001672  C0AE  F0AF         	movff	___flmul@grs,___flmul@grs+1
  8634  001676  6BAE               	clrf	___flmul@grs& (0+255),b
  8635  001678                     
  8636                           ; BSR set to: 0
  8637  001678  502E               	movf	___flmul@a^0,w,c
  8638  00167A  022B               	mulwf	(___flmul@b+1)^0,c
  8639  00167C  006F FFCC  F0B7    	movff	prodl,___flmul@temp
  8640  001682  006F FFD0  F0B8    	movff	prodh,___flmul@temp+1
  8641  001688                     
  8642                           ; BSR set to: 0
  8643  001688  51B7               	movf	___flmul@temp& (0+255),w,b
  8644  00168A  27AE               	addwf	___flmul@grs& (0+255),f,b
  8645  00168C  51B8               	movf	(___flmul@temp+1)& (0+255),w,b
  8646  00168E  23AF               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8647  001690  0E00               	movlw	0
  8648  001692  23B0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8649  001694  0E00               	movlw	0
  8650  001696  23B1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8651  001698                     
  8652                           ; BSR set to: 0
  8653  001698  502F               	movf	(___flmul@a+1)^0,w,c
  8654  00169A  022A               	mulwf	___flmul@b^0,c
  8655  00169C  006F FFCC  F0B7    	movff	prodl,___flmul@temp
  8656  0016A2  006F FFD0  F0B8    	movff	prodh,___flmul@temp+1
  8657  0016A8                     
  8658                           ; BSR set to: 0
  8659  0016A8  51B7               	movf	___flmul@temp& (0+255),w,b
  8660  0016AA  27AE               	addwf	___flmul@grs& (0+255),f,b
  8661  0016AC  51B8               	movf	(___flmul@temp+1)& (0+255),w,b
  8662  0016AE  23AF               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8663  0016B0  0E00               	movlw	0
  8664  0016B2  23B0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8665  0016B4  0E00               	movlw	0
  8666  0016B6  23B1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8667  0016B8                     
  8668                           ; BSR set to: 0
  8669  0016B8  C0B0  F0B1         	movff	___flmul@grs+2,___flmul@grs+3
  8670  0016BC  C0AF  F0B0         	movff	___flmul@grs+1,___flmul@grs+2
  8671  0016C0  C0AE  F0AF         	movff	___flmul@grs,___flmul@grs+1
  8672  0016C4  6BAE               	clrf	___flmul@grs& (0+255),b
  8673  0016C6  502E               	movf	___flmul@a^0,w,c
  8674  0016C8  022A               	mulwf	___flmul@b^0,c
  8675  0016CA  006F FFCC  F0B7    	movff	prodl,___flmul@temp
  8676  0016D0  006F FFD0  F0B8    	movff	prodh,___flmul@temp+1
  8677  0016D6                     
  8678                           ; BSR set to: 0
  8679  0016D6  51B7               	movf	___flmul@temp& (0+255),w,b
  8680  0016D8  27AE               	addwf	___flmul@grs& (0+255),f,b
  8681  0016DA  51B8               	movf	(___flmul@temp+1)& (0+255),w,b
  8682  0016DC  23AF               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8683  0016DE  0E00               	movlw	0
  8684  0016E0  23B0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8685  0016E2  0E00               	movlw	0
  8686  0016E4  23B1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8687  0016E6                     
  8688                           ; BSR set to: 0
  8689  0016E6  5030               	movf	(___flmul@a+2)^0,w,c
  8690  0016E8  022B               	mulwf	(___flmul@b+1)^0,c
  8691  0016EA  006F FFCC  F0B7    	movff	prodl,___flmul@temp
  8692  0016F0  006F FFD0  F0B8    	movff	prodh,___flmul@temp+1
  8693  0016F6  51B7               	movf	___flmul@temp& (0+255),w,b
  8694  0016F8  27B3               	addwf	___flmul@prod& (0+255),f,b
  8695  0016FA  51B8               	movf	(___flmul@temp+1)& (0+255),w,b
  8696  0016FC  23B4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8697  0016FE  0E00               	movlw	0
  8698  001700  23B5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8699  001702  0E00               	movlw	0
  8700  001704  23B6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8701  001706                     
  8702                           ; BSR set to: 0
  8703  001706  502F               	movf	(___flmul@a+1)^0,w,c
  8704  001708  022C               	mulwf	(___flmul@b+2)^0,c
  8705  00170A  006F FFCC  F0B7    	movff	prodl,___flmul@temp
  8706  001710  006F FFD0  F0B8    	movff	prodh,___flmul@temp+1
  8707  001716                     
  8708                           ; BSR set to: 0
  8709  001716  51B7               	movf	___flmul@temp& (0+255),w,b
  8710  001718  27B3               	addwf	___flmul@prod& (0+255),f,b
  8711  00171A  51B8               	movf	(___flmul@temp+1)& (0+255),w,b
  8712  00171C  23B4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8713  00171E  0E00               	movlw	0
  8714  001720  23B5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8715  001722  0E00               	movlw	0
  8716  001724  23B6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8717  001726  5030               	movf	(___flmul@a+2)^0,w,c
  8718  001728  022C               	mulwf	(___flmul@b+2)^0,c
  8719  00172A  006F FFCC  F0B7    	movff	prodl,___flmul@temp
  8720  001730  006F FFD0  F0B8    	movff	prodh,___flmul@temp+1
  8721  001736                     
  8722                           ; BSR set to: 0
  8723  001736  51B7               	movf	___flmul@temp& (0+255),w,b
  8724  001738  6E32               	movwf	??___flmul^0,c
  8725  00173A  51B8               	movf	(___flmul@temp+1)& (0+255),w,b
  8726  00173C  6E33               	movwf	(??___flmul+1)^0,c
  8727  00173E  6A34               	clrf	(??___flmul+2)^0,c
  8728  001740  6A35               	clrf	(??___flmul+3)^0,c
  8729  001742  C034  F035         	movff	??___flmul+2,??___flmul+3
  8730  001746  C033  F034         	movff	??___flmul+1,??___flmul+2
  8731  00174A  C032  F033         	movff	??___flmul,??___flmul+1
  8732  00174E  6A32               	clrf	??___flmul^0,c
  8733  001750  5032               	movf	??___flmul^0,w,c
  8734  001752  27B3               	addwf	___flmul@prod& (0+255),f,b
  8735  001754  5033               	movf	(??___flmul+1)^0,w,c
  8736  001756  23B4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8737  001758  5034               	movf	(??___flmul+2)^0,w,c
  8738  00175A  23B5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8739  00175C  5035               	movf	(??___flmul+3)^0,w,c
  8740  00175E  23B6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8741  001760                     
  8742                           ; BSR set to: 0
  8743  001760  C0AE  F032         	movff	___flmul@grs,??___flmul
  8744  001764  C0AF  F033         	movff	___flmul@grs+1,??___flmul+1
  8745  001768  C0B0  F034         	movff	___flmul@grs+2,??___flmul+2
  8746  00176C  C0B1  F035         	movff	___flmul@grs+3,??___flmul+3
  8747  001770  0E19               	movlw	25
  8748  001772  EFC0  F00B         	goto	u6510
  8749  001776                     u6515:
  8750  001776  90D8               	bcf	status,0,c
  8751  001778  3235               	rrcf	(??___flmul+3)^0,f,c
  8752  00177A  3234               	rrcf	(??___flmul+2)^0,f,c
  8753  00177C  3233               	rrcf	(??___flmul+1)^0,f,c
  8754  00177E  3232               	rrcf	??___flmul^0,f,c
  8755  001780                     u6510:
  8756  001780  2EE8               	decfsz	wreg,f,c
  8757  001782  EFBB  F00B         	goto	u6515
  8758  001786  5032               	movf	??___flmul^0,w,c
  8759  001788  27B3               	addwf	___flmul@prod& (0+255),f,b
  8760  00178A  5033               	movf	(??___flmul+1)^0,w,c
  8761  00178C  23B4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8762  00178E  5034               	movf	(??___flmul+2)^0,w,c
  8763  001790  23B5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8764  001792  5035               	movf	(??___flmul+3)^0,w,c
  8765  001794  23B6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8766  001796                     
  8767                           ; BSR set to: 0
  8768  001796  C0B0  F0B1         	movff	___flmul@grs+2,___flmul@grs+3
  8769  00179A  C0AF  F0B0         	movff	___flmul@grs+1,___flmul@grs+2
  8770  00179E  C0AE  F0AF         	movff	___flmul@grs,___flmul@grs+1
  8771  0017A2  6BAE               	clrf	___flmul@grs& (0+255),b
  8772  0017A4                     
  8773                           ; BSR set to: 0
  8774  0017A4  51AD               	movf	___flmul@aexp& (0+255),w,b
  8775  0017A6  C0B2  F032         	movff	___flmul@bexp,??___flmul
  8776  0017AA  6A33               	clrf	(??___flmul+1)^0,c
  8777  0017AC  2632               	addwf	??___flmul^0,f,c
  8778  0017AE  0E00               	movlw	0
  8779  0017B0  2233               	addwfc	(??___flmul+1)^0,f,c
  8780  0017B2  0E82               	movlw	130
  8781  0017B4  2432               	addwf	??___flmul^0,w,c
  8782  0017B6  6FB7               	movwf	___flmul@temp& (0+255),b
  8783  0017B8  0EFF               	movlw	255
  8784  0017BA  2033               	addwfc	(??___flmul+1)^0,w,c
  8785  0017BC  6FB8               	movwf	(___flmul@temp+1)& (0+255),b
  8786  0017BE  EFF6  F00B         	goto	l7016
  8787  0017C2                     l7010:
  8788                           
  8789                           ; BSR set to: 0
  8790  0017C2  90D8               	bcf	status,0,c
  8791  0017C4  37B3               	rlcf	___flmul@prod& (0+255),f,b
  8792  0017C6  37B4               	rlcf	(___flmul@prod+1)& (0+255),f,b
  8793  0017C8  37B5               	rlcf	(___flmul@prod+2)& (0+255),f,b
  8794  0017CA  37B6               	rlcf	(___flmul@prod+3)& (0+255),f,b
  8795  0017CC                     
  8796                           ; BSR set to: 0
  8797  0017CC  AFB1               	btfss	(___flmul@grs+3)& (0+255),7,b
  8798  0017CE  EFEB  F00B         	goto	u6521
  8799  0017D2  EFED  F00B         	goto	u6520
  8800  0017D6                     u6521:
  8801  0017D6  EFEE  F00B         	goto	l2022
  8802  0017DA                     u6520:
  8803  0017DA                     
  8804                           ; BSR set to: 0
  8805  0017DA  81B3               	bsf	___flmul@prod& (0+255),0,b
  8806  0017DC                     l2022:
  8807                           
  8808                           ; BSR set to: 0
  8809  0017DC  90D8               	bcf	status,0,c
  8810  0017DE  37AE               	rlcf	___flmul@grs& (0+255),f,b
  8811  0017E0  37AF               	rlcf	(___flmul@grs+1)& (0+255),f,b
  8812  0017E2  37B0               	rlcf	(___flmul@grs+2)& (0+255),f,b
  8813  0017E4  37B1               	rlcf	(___flmul@grs+3)& (0+255),f,b
  8814  0017E6  07B7               	decf	___flmul@temp& (0+255),f,b
  8815  0017E8  A0D8               	btfss	status,0,c
  8816  0017EA  07B8               	decf	(___flmul@temp+1)& (0+255),f,b
  8817  0017EC                     l7016:
  8818                           
  8819                           ; BSR set to: 0
  8820  0017EC  AFB5               	btfss	(___flmul@prod+2)& (0+255),7,b
  8821  0017EE  EFFB  F00B         	goto	u6531
  8822  0017F2  EFFD  F00B         	goto	u6530
  8823  0017F6                     u6531:
  8824  0017F6  EFE1  F00B         	goto	l7010
  8825  0017FA                     u6530:
  8826  0017FA                     
  8827                           ; BSR set to: 0
  8828  0017FA  0E00               	movlw	0
  8829  0017FC  6FAD               	movwf	___flmul@aexp& (0+255),b
  8830  0017FE                     
  8831                           ; BSR set to: 0
  8832  0017FE  AFB1               	btfss	(___flmul@grs+3)& (0+255),7,b
  8833  001800  EF04  F00C         	goto	u6541
  8834  001804  EF06  F00C         	goto	u6540
  8835  001808                     u6541:
  8836  001808  EF2A  F00C         	goto	l2024
  8837  00180C                     u6540:
  8838  00180C                     
  8839                           ; BSR set to: 0
  8840  00180C  0EFF               	movlw	255
  8841  00180E  15AE               	andwf	___flmul@grs& (0+255),w,b
  8842  001810  6E32               	movwf	??___flmul^0,c
  8843  001812  0EFF               	movlw	255
  8844  001814  15AF               	andwf	(___flmul@grs+1)& (0+255),w,b
  8845  001816  6E33               	movwf	(??___flmul+1)^0,c
  8846  001818  0EFF               	movlw	255
  8847  00181A  15B0               	andwf	(___flmul@grs+2)& (0+255),w,b
  8848  00181C  6E34               	movwf	(??___flmul+2)^0,c
  8849  00181E  0E7F               	movlw	127
  8850  001820  15B1               	andwf	(___flmul@grs+3)& (0+255),w,b
  8851  001822  6E35               	movwf	(??___flmul+3)^0,c
  8852  001824  5032               	movf	??___flmul^0,w,c
  8853  001826  1033               	iorwf	(??___flmul+1)^0,w,c
  8854  001828  1034               	iorwf	(??___flmul+2)^0,w,c
  8855  00182A  1035               	iorwf	(??___flmul+3)^0,w,c
  8856  00182C  B4D8               	btfsc	status,2,c
  8857  00182E  EF1B  F00C         	goto	u6551
  8858  001832  EF1D  F00C         	goto	u6550
  8859  001836                     u6551:
  8860  001836  EF21  F00C         	goto	l2025
  8861  00183A                     u6550:
  8862  00183A                     l7024:
  8863                           
  8864                           ; BSR set to: 0
  8865  00183A  0E01               	movlw	1
  8866  00183C  6FAD               	movwf	___flmul@aexp& (0+255),b
  8867  00183E  EF2A  F00C         	goto	l2024
  8868  001842                     l2025:
  8869                           
  8870                           ; BSR set to: 0
  8871  001842  A1B3               	btfss	___flmul@prod& (0+255),0,b
  8872  001844  EF26  F00C         	goto	u6561
  8873  001848  EF28  F00C         	goto	u6560
  8874  00184C                     u6561:
  8875  00184C  EF2A  F00C         	goto	l2024
  8876  001850                     u6560:
  8877  001850  EF1D  F00C         	goto	l7024
  8878  001854                     l2024:
  8879                           
  8880                           ; BSR set to: 0
  8881  001854  51AD               	movf	___flmul@aexp& (0+255),w,b
  8882  001856  B4D8               	btfsc	status,2,c
  8883  001858  EF30  F00C         	goto	u6571
  8884  00185C  EF32  F00C         	goto	u6570
  8885  001860                     u6571:
  8886  001860  EF56  F00C         	goto	l7036
  8887  001864                     u6570:
  8888  001864                     
  8889                           ; BSR set to: 0
  8890  001864  0E01               	movlw	1
  8891  001866  27B3               	addwf	___flmul@prod& (0+255),f,b
  8892  001868  0E00               	movlw	0
  8893  00186A  23B4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8894  00186C  23B5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8895  00186E  23B6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8896  001870                     
  8897                           ; BSR set to: 0
  8898  001870  A1B6               	btfss	(___flmul@prod+3)& (0+255),0,b
  8899  001872  EF3D  F00C         	goto	u6581
  8900  001876  EF3F  F00C         	goto	u6580
  8901  00187A                     u6581:
  8902  00187A  EF56  F00C         	goto	l7036
  8903  00187E                     u6580:
  8904  00187E                     
  8905                           ; BSR set to: 0
  8906  00187E  C0B3  F032         	movff	___flmul@prod,??___flmul
  8907  001882  C0B4  F033         	movff	___flmul@prod+1,??___flmul+1
  8908  001886  C0B5  F034         	movff	___flmul@prod+2,??___flmul+2
  8909  00188A  C0B6  F035         	movff	___flmul@prod+3,??___flmul+3
  8910  00188E  3435               	rlcf	(??___flmul+3)^0,w,c
  8911  001890  3235               	rrcf	(??___flmul+3)^0,f,c
  8912  001892  3234               	rrcf	(??___flmul+2)^0,f,c
  8913  001894  3233               	rrcf	(??___flmul+1)^0,f,c
  8914  001896  3232               	rrcf	??___flmul^0,f,c
  8915  001898  C032  F0B3         	movff	??___flmul,___flmul@prod
  8916  00189C  C033  F0B4         	movff	??___flmul+1,___flmul@prod+1
  8917  0018A0  C034  F0B5         	movff	??___flmul+2,___flmul@prod+2
  8918  0018A4  C035  F0B6         	movff	??___flmul+3,___flmul@prod+3
  8919  0018A8                     
  8920                           ; BSR set to: 0
  8921  0018A8  4BB7               	infsnz	___flmul@temp& (0+255),f,b
  8922  0018AA  2BB8               	incf	(___flmul@temp+1)& (0+255),f,b
  8923  0018AC                     l7036:
  8924                           
  8925                           ; BSR set to: 0
  8926  0018AC  BFB8               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8927  0018AE  EF61  F00C         	goto	u6591
  8928  0018B2  51B8               	movf	(___flmul@temp+1)& (0+255),w,b
  8929  0018B4  E108               	bnz	u6590
  8930  0018B6  29B7               	incf	___flmul@temp& (0+255),w,b
  8931  0018B8  A0D8               	btfss	status,0,c
  8932  0018BA  EF61  F00C         	goto	u6591
  8933  0018BE  EF63  F00C         	goto	u6590
  8934  0018C2                     u6591:
  8935  0018C2  EF6D  F00C         	goto	l7040
  8936  0018C6                     u6590:
  8937  0018C6                     
  8938                           ; BSR set to: 0
  8939  0018C6  0E00               	movlw	0
  8940  0018C8  6FB3               	movwf	___flmul@prod& (0+255),b
  8941  0018CA  0E00               	movlw	0
  8942  0018CC  6FB4               	movwf	(___flmul@prod+1)& (0+255),b
  8943  0018CE  0E80               	movlw	128
  8944  0018D0  6FB5               	movwf	(___flmul@prod+2)& (0+255),b
  8945  0018D2  0E7F               	movlw	127
  8946  0018D4  6FB6               	movwf	(___flmul@prod+3)& (0+255),b
  8947  0018D6  EF9B  F00C         	goto	l7052
  8948  0018DA                     l7040:
  8949                           
  8950                           ; BSR set to: 0
  8951  0018DA  BFB8               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8952  0018DC  EF7A  F00C         	goto	u6600
  8953  0018E0  51B8               	movf	(___flmul@temp+1)& (0+255),w,b
  8954  0018E2  E106               	bnz	u6601
  8955  0018E4  05B7               	decf	___flmul@temp& (0+255),w,b
  8956  0018E6  B0D8               	btfsc	status,0,c
  8957  0018E8  EF78  F00C         	goto	u6601
  8958  0018EC  EF7A  F00C         	goto	u6600
  8959  0018F0                     u6601:
  8960  0018F0  EF86  F00C         	goto	l2032
  8961  0018F4                     u6600:
  8962  0018F4                     
  8963                           ; BSR set to: 0
  8964  0018F4  0E00               	movlw	0
  8965  0018F6  6FB3               	movwf	___flmul@prod& (0+255),b
  8966  0018F8  0E00               	movlw	0
  8967  0018FA  6FB4               	movwf	(___flmul@prod+1)& (0+255),b
  8968  0018FC  0E00               	movlw	0
  8969  0018FE  6FB5               	movwf	(___flmul@prod+2)& (0+255),b
  8970  001900  0E00               	movlw	0
  8971  001902  6FB6               	movwf	(___flmul@prod+3)& (0+255),b
  8972  001904  0E00               	movlw	0
  8973  001906  6FAC               	movwf	___flmul@sign& (0+255),b
  8974  001908  EF9B  F00C         	goto	l7052
  8975  00190C                     l2032:
  8976                           
  8977                           ; BSR set to: 0
  8978  00190C  C0B7  F0B2         	movff	___flmul@temp,___flmul@bexp
  8979  001910                     
  8980                           ; BSR set to: 0
  8981  001910  0EFF               	movlw	255
  8982  001912  17B3               	andwf	___flmul@prod& (0+255),f,b
  8983  001914  0EFF               	movlw	255
  8984  001916  17B4               	andwf	(___flmul@prod+1)& (0+255),f,b
  8985  001918  0E7F               	movlw	127
  8986  00191A  17B5               	andwf	(___flmul@prod+2)& (0+255),f,b
  8987  00191C  0E00               	movlw	0
  8988  00191E  17B6               	andwf	(___flmul@prod+3)& (0+255),f,b
  8989  001920                     
  8990                           ; BSR set to: 0
  8991  001920  A1B2               	btfss	___flmul@bexp& (0+255),0,b
  8992  001922  EF95  F00C         	goto	u6611
  8993  001926  EF97  F00C         	goto	u6610
  8994  00192A                     u6611:
  8995  00192A  EF98  F00C         	goto	l7050
  8996  00192E                     u6610:
  8997  00192E                     
  8998                           ; BSR set to: 0
  8999  00192E  8FB5               	bsf	(___flmul@prod+2)& (0+255),7,b
  9000  001930                     l7050:
  9001                           
  9002                           ; BSR set to: 0
  9003  001930  90D8               	bcf	status,0,c
  9004  001932  31B2               	rrcf	___flmul@bexp& (0+255),w,b
  9005  001934  6FB6               	movwf	(___flmul@prod+3)& (0+255),b
  9006  001936                     l7052:
  9007                           
  9008                           ; BSR set to: 0
  9009  001936  51AC               	movf	___flmul@sign& (0+255),w,b
  9010  001938  13B6               	iorwf	(___flmul@prod+3)& (0+255),f,b
  9011  00193A                     
  9012                           ; BSR set to: 0
  9013  00193A  C0B3  F02A         	movff	___flmul@prod,?___flmul
  9014  00193E  C0B4  F02B         	movff	___flmul@prod+1,?___flmul+1
  9015  001942  C0B5  F02C         	movff	___flmul@prod+2,?___flmul+2
  9016  001946  C0B6  F02D         	movff	___flmul@prod+3,?___flmul+3
  9017  00194A                     l2019:
  9018                           
  9019                           ; BSR set to: 0
  9020  00194A  0012               	return		;funcret
  9021  00194C                     __end_of___flmul:
  9022                           	callstack 0
  9023                           
  9024 ;; *************** function ___awdiv *****************
  9025 ;; Defined at:
  9026 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  9027 ;; Parameters:    Size  Location     Type
  9028 ;;  dividend        2   19[COMRAM] int 
  9029 ;;  divisor         2   21[COMRAM] int 
  9030 ;; Auto vars:     Size  Location     Type
  9031 ;;  quotient        2   25[COMRAM] int 
  9032 ;;  sign            1   24[COMRAM] unsigned char 
  9033 ;;  counter         1   23[COMRAM] unsigned char 
  9034 ;; Return value:  Size  Location     Type
  9035 ;;                  2   19[COMRAM] int 
  9036 ;; Registers used:
  9037 ;;		wreg, status,2, status,0
  9038 ;; Tracked objects:
  9039 ;;		On entry : 0/0
  9040 ;;		On exit  : 0/0
  9041 ;;		Unchanged: 0/0
  9042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9043 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9044 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9046 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9047 ;;Total ram usage:        8 bytes
  9048 ;; Hardware stack levels used: 1
  9049 ;; Hardware stack levels required when called: 8
  9050 ;; This function calls:
  9051 ;;		Nothing
  9052 ;; This function is called by:
  9053 ;;		_calcMotorPow
  9054 ;; This function uses a non-reentrant model
  9055 ;;
  9056                           
  9057                           	psect	text37
  9058  0036B0                     __ptext37:
  9059                           	callstack 0
  9060  0036B0                     ___awdiv:
  9061                           	callstack 20
  9062  0036B0  0E00               	movlw	0
  9063  0036B2  6E19               	movwf	___awdiv@sign^0,c
  9064  0036B4  BE17               	btfsc	(___awdiv@divisor+1)^0,7,c
  9065  0036B6  EF61  F01B         	goto	u4300
  9066  0036BA  EF5F  F01B         	goto	u4301
  9067  0036BE                     u4301:
  9068  0036BE  EF67  F01B         	goto	l5376
  9069  0036C2                     u4300:
  9070  0036C2  6C16               	negf	___awdiv@divisor^0,c
  9071  0036C4  1E17               	comf	(___awdiv@divisor+1)^0,f,c
  9072  0036C6  B0D8               	btfsc	status,0,c
  9073  0036C8  2A17               	incf	(___awdiv@divisor+1)^0,f,c
  9074  0036CA  0E01               	movlw	1
  9075  0036CC  6E19               	movwf	___awdiv@sign^0,c
  9076  0036CE                     l5376:
  9077  0036CE  BE15               	btfsc	(___awdiv@dividend+1)^0,7,c
  9078  0036D0  EF6E  F01B         	goto	u4310
  9079  0036D4  EF6C  F01B         	goto	u4311
  9080  0036D8                     u4311:
  9081  0036D8  EF74  F01B         	goto	l5382
  9082  0036DC                     u4310:
  9083  0036DC  6C14               	negf	___awdiv@dividend^0,c
  9084  0036DE  1E15               	comf	(___awdiv@dividend+1)^0,f,c
  9085  0036E0  B0D8               	btfsc	status,0,c
  9086  0036E2  2A15               	incf	(___awdiv@dividend+1)^0,f,c
  9087  0036E4  0E01               	movlw	1
  9088  0036E6  1A19               	xorwf	___awdiv@sign^0,f,c
  9089  0036E8                     l5382:
  9090  0036E8  0E00               	movlw	0
  9091  0036EA  6E1B               	movwf	(___awdiv@quotient+1)^0,c
  9092  0036EC  0E00               	movlw	0
  9093  0036EE  6E1A               	movwf	___awdiv@quotient^0,c
  9094  0036F0  5016               	movf	___awdiv@divisor^0,w,c
  9095  0036F2  1017               	iorwf	(___awdiv@divisor+1)^0,w,c
  9096  0036F4  B4D8               	btfsc	status,2,c
  9097  0036F6  EF7F  F01B         	goto	u4321
  9098  0036FA  EF81  F01B         	goto	u4320
  9099  0036FE                     u4321:
  9100  0036FE  EFA9  F01B         	goto	l5404
  9101  003702                     u4320:
  9102  003702  0E01               	movlw	1
  9103  003704  6E18               	movwf	___awdiv@counter^0,c
  9104  003706  EF89  F01B         	goto	l5390
  9105  00370A                     l5388:
  9106  00370A  90D8               	bcf	status,0,c
  9107  00370C  3616               	rlcf	___awdiv@divisor^0,f,c
  9108  00370E  3617               	rlcf	(___awdiv@divisor+1)^0,f,c
  9109  003710  2A18               	incf	___awdiv@counter^0,f,c
  9110  003712                     l5390:
  9111  003712  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
  9112  003714  EF8E  F01B         	goto	u4331
  9113  003718  EF90  F01B         	goto	u4330
  9114  00371C                     u4331:
  9115  00371C  EF85  F01B         	goto	l5388
  9116  003720                     u4330:
  9117  003720                     l5392:
  9118  003720  90D8               	bcf	status,0,c
  9119  003722  361A               	rlcf	___awdiv@quotient^0,f,c
  9120  003724  361B               	rlcf	(___awdiv@quotient+1)^0,f,c
  9121  003726  5016               	movf	___awdiv@divisor^0,w,c
  9122  003728  5C14               	subwf	___awdiv@dividend^0,w,c
  9123  00372A  5017               	movf	(___awdiv@divisor+1)^0,w,c
  9124  00372C  5815               	subwfb	(___awdiv@dividend+1)^0,w,c
  9125  00372E  A0D8               	btfss	status,0,c
  9126  003730  EF9C  F01B         	goto	u4341
  9127  003734  EF9E  F01B         	goto	u4340
  9128  003738                     u4341:
  9129  003738  EFA3  F01B         	goto	l5400
  9130  00373C                     u4340:
  9131  00373C  5016               	movf	___awdiv@divisor^0,w,c
  9132  00373E  5E14               	subwf	___awdiv@dividend^0,f,c
  9133  003740  5017               	movf	(___awdiv@divisor+1)^0,w,c
  9134  003742  5A15               	subwfb	(___awdiv@dividend+1)^0,f,c
  9135  003744  801A               	bsf	___awdiv@quotient^0,0,c
  9136  003746                     l5400:
  9137  003746  90D8               	bcf	status,0,c
  9138  003748  3217               	rrcf	(___awdiv@divisor+1)^0,f,c
  9139  00374A  3216               	rrcf	___awdiv@divisor^0,f,c
  9140  00374C  2E18               	decfsz	___awdiv@counter^0,f,c
  9141  00374E  EF90  F01B         	goto	l5392
  9142  003752                     l5404:
  9143  003752  5019               	movf	___awdiv@sign^0,w,c
  9144  003754  B4D8               	btfsc	status,2,c
  9145  003756  EFAF  F01B         	goto	u4351
  9146  00375A  EFB1  F01B         	goto	u4350
  9147  00375E                     u4351:
  9148  00375E  EFB5  F01B         	goto	l5408
  9149  003762                     u4350:
  9150  003762  6C1A               	negf	___awdiv@quotient^0,c
  9151  003764  1E1B               	comf	(___awdiv@quotient+1)^0,f,c
  9152  003766  B0D8               	btfsc	status,0,c
  9153  003768  2A1B               	incf	(___awdiv@quotient+1)^0,f,c
  9154  00376A                     l5408:
  9155  00376A  C01A  F014         	movff	___awdiv@quotient,?___awdiv
  9156  00376E  C01B  F015         	movff	___awdiv@quotient+1,?___awdiv+1
  9157  003772  0012               	return		;funcret
  9158  003774                     __end_of___awdiv:
  9159                           	callstack 0
  9160                           
  9161 ;; *************** function _SYSTEM_Initialize *****************
  9162 ;; Defined at:
  9163 ;;		line 50 in file "mcc_generated_files/mcc.c"
  9164 ;; Parameters:    Size  Location     Type
  9165 ;;		None
  9166 ;; Auto vars:     Size  Location     Type
  9167 ;;		None
  9168 ;; Return value:  Size  Location     Type
  9169 ;;                  1    wreg      void 
  9170 ;; Registers used:
  9171 ;;		wreg, status,2, status,0, cstack
  9172 ;; Tracked objects:
  9173 ;;		On entry : 0/0
  9174 ;;		On exit  : 0/0
  9175 ;;		Unchanged: 0/0
  9176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9181 ;;Total ram usage:        0 bytes
  9182 ;; Hardware stack levels used: 1
  9183 ;; Hardware stack levels required when called: 10
  9184 ;; This function calls:
  9185 ;;		_ADCC_Initialize
  9186 ;;		_CCP3_Initialize
  9187 ;;		_CCP4_Initialize
  9188 ;;		_CLC3_Initialize
  9189 ;;		_INTERRUPT_Initialize
  9190 ;;		_OSCILLATOR_Initialize
  9191 ;;		_PIN_MANAGER_Initialize
  9192 ;;		_PMD_Initialize
  9193 ;;		_PWM5_Initialize
  9194 ;;		_PWM6_Initialize
  9195 ;;		_PWM7_Initialize
  9196 ;;		_PWM8_Initialize
  9197 ;;		_SMT1_Initialize
  9198 ;;		_TMR2_Initialize
  9199 ;;		_TMR3_Initialize
  9200 ;;		_TMR4_Initialize
  9201 ;;		_TMR5_Initialize
  9202 ;;		_UART1_Initialize
  9203 ;; This function is called by:
  9204 ;;		_main
  9205 ;; This function uses a non-reentrant model
  9206 ;;
  9207                           
  9208                           	psect	text38
  9209  003D14                     __ptext38:
  9210                           	callstack 0
  9211  003D14                     _SYSTEM_Initialize:
  9212                           	callstack 20
  9213  003D14                     
  9214                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  9215  003D14  EC64  F01E         	call	_INTERRUPT_Initialize	;wreg free
  9216                           
  9217                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  9218  003D18  ECE6  F021         	call	_PMD_Initialize	;wreg free
  9219                           
  9220                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  9221  003D1C  ECF3  F01A         	call	_PIN_MANAGER_Initialize	;wreg free
  9222                           
  9223                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  9224  003D20  EC67  F022         	call	_OSCILLATOR_Initialize	;wreg free
  9225  003D24                     
  9226                           ;mcc_generated_files/mcc.c: 56:     CCP3_Initialize();
  9227  003D24  EC38  F021         	call	_CCP3_Initialize	;wreg free
  9228  003D28                     
  9229                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
  9230  003D28  EC0C  F01E         	call	_ADCC_Initialize	;wreg free
  9231                           
  9232                           ;mcc_generated_files/mcc.c: 58:     TMR4_Initialize();
  9233  003D2C  EC66  F021         	call	_TMR4_Initialize	;wreg free
  9234  003D30                     
  9235                           ;mcc_generated_files/mcc.c: 59:     SMT1_Initialize();
  9236  003D30  ECD9  F020         	call	_SMT1_Initialize	;wreg free
  9237  003D34                     
  9238                           ;mcc_generated_files/mcc.c: 60:     PWM8_Initialize();
  9239  003D34  EC37  F022         	call	_PWM8_Initialize	;wreg free
  9240  003D38                     
  9241                           ;mcc_generated_files/mcc.c: 61:     TMR2_Initialize();
  9242  003D38  EC29  F022         	call	_TMR2_Initialize	;wreg free
  9243  003D3C                     
  9244                           ;mcc_generated_files/mcc.c: 62:     PWM6_Initialize();
  9245  003D3C  EC4F  F022         	call	_PWM6_Initialize	;wreg free
  9246                           
  9247                           ;mcc_generated_files/mcc.c: 63:     CCP4_Initialize();
  9248  003D40  EC21  F021         	call	_CCP4_Initialize	;wreg free
  9249  003D44                     
  9250                           ;mcc_generated_files/mcc.c: 64:     CLC3_Initialize();
  9251  003D44  EC7C  F021         	call	_CLC3_Initialize	;wreg free
  9252  003D48                     
  9253                           ;mcc_generated_files/mcc.c: 65:     TMR3_Initialize();
  9254  003D48  ECB5  F01F         	call	_TMR3_Initialize	;wreg free
  9255                           
  9256                           ;mcc_generated_files/mcc.c: 66:     PWM5_Initialize();
  9257  003D4C  EC5B  F022         	call	_PWM5_Initialize	;wreg free
  9258  003D50                     
  9259                           ;mcc_generated_files/mcc.c: 67:     TMR5_Initialize();
  9260  003D50  ECAF  F01E         	call	_TMR5_Initialize	;wreg free
  9261  003D54                     
  9262                           ;mcc_generated_files/mcc.c: 68:     PWM7_Initialize();
  9263  003D54  EC43  F022         	call	_PWM7_Initialize	;wreg free
  9264                           
  9265                           ;mcc_generated_files/mcc.c: 69:     UART1_Initialize();
  9266  003D58  EC7B  F01C         	call	_UART1_Initialize	;wreg free
  9267  003D5C  0012               	return		;funcret
  9268  003D5E                     __end_of_SYSTEM_Initialize:
  9269                           	callstack 0
  9270                           
  9271 ;; *************** function _UART1_Initialize *****************
  9272 ;; Defined at:
  9273 ;;		line 87 in file "mcc_generated_files/uart1.c"
  9274 ;; Parameters:    Size  Location     Type
  9275 ;;		None
  9276 ;; Auto vars:     Size  Location     Type
  9277 ;;		None
  9278 ;; Return value:  Size  Location     Type
  9279 ;;                  1    wreg      void 
  9280 ;; Registers used:
  9281 ;;		wreg, status,2, status,0, cstack
  9282 ;; Tracked objects:
  9283 ;;		On entry : 0/0
  9284 ;;		On exit  : 0/0
  9285 ;;		Unchanged: 0/0
  9286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9291 ;;Total ram usage:        0 bytes
  9292 ;; Hardware stack levels used: 1
  9293 ;; Hardware stack levels required when called: 9
  9294 ;; This function calls:
  9295 ;;		_UART1_SetErrorHandler
  9296 ;;		_UART1_SetFramingErrorHandler
  9297 ;;		_UART1_SetOverrunErrorHandler
  9298 ;;		_UART1_SetRxInterruptHandler
  9299 ;;		_UART1_SetTxInterruptHandler
  9300 ;; This function is called by:
  9301 ;;		_SYSTEM_Initialize
  9302 ;; This function uses a non-reentrant model
  9303 ;;
  9304                           
  9305                           	psect	text39
  9306  0038F6                     __ptext39:
  9307                           	callstack 0
  9308  0038F6                     _UART1_Initialize:
  9309                           	callstack 20
  9310  0038F6                     
  9311                           ;mcc_generated_files/uart1.c: 90:     PIE3bits.U1RXIE = 0;
  9312  0038F6  0139               	movlb	57	; () banked
  9313  0038F8  9793               	bcf	147,3,b	;volatile
  9314  0038FA                     
  9315                           ; BSR set to: 57
  9316                           ;mcc_generated_files/uart1.c: 91:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
  9317  0038FA  0E36               	movlw	low _UART1_Receive_ISR
  9318  0038FC  6E14               	movwf	UART1_SetRxInterruptHandler@InterruptHandler^0,c
  9319  0038FE  0E38               	movlw	high _UART1_Receive_ISR
  9320  003900  6E15               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)^0,c
  9321  003902  EC8C  F022         	call	_UART1_SetRxInterruptHandler	;wreg free
  9322  003906                     
  9323                           ;mcc_generated_files/uart1.c: 92:     PIE3bits.U1TXIE = 0;
  9324  003906  0139               	movlb	57	; () banked
  9325  003908  9993               	bcf	147,4,b	;volatile
  9326                           
  9327                           ;mcc_generated_files/uart1.c: 93:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
  9328  00390A  0E36               	movlw	low _UART1_Transmit_ISR
  9329  00390C  6E14               	movwf	UART1_SetTxInterruptHandler@InterruptHandler^0,c
  9330  00390E  0E3E               	movlw	high _UART1_Transmit_ISR
  9331  003910  6E15               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)^0,c
  9332  003912  EC87  F022         	call	_UART1_SetTxInterruptHandler	;wreg free
  9333  003916                     
  9334                           ;mcc_generated_files/uart1.c: 98:     U1P1L = 0x00;
  9335  003916  0E00               	movlw	0
  9336  003918  013D               	movlb	61	; () banked
  9337  00391A  6FEC               	movwf	236,b	;volatile
  9338  00391C                     
  9339                           ; BSR set to: 61
  9340                           ;mcc_generated_files/uart1.c: 101:     U1P1H = 0x00;
  9341  00391C  0E00               	movlw	0
  9342  00391E  6FED               	movwf	237,b	;volatile
  9343  003920                     
  9344                           ; BSR set to: 61
  9345                           ;mcc_generated_files/uart1.c: 104:     U1P2L = 0x00;
  9346  003920  0E00               	movlw	0
  9347  003922  6FEE               	movwf	238,b	;volatile
  9348  003924                     
  9349                           ; BSR set to: 61
  9350                           ;mcc_generated_files/uart1.c: 107:     U1P2H = 0x00;
  9351  003924  0E00               	movlw	0
  9352  003926  6FEF               	movwf	239,b	;volatile
  9353  003928                     
  9354                           ; BSR set to: 61
  9355                           ;mcc_generated_files/uart1.c: 110:     U1P3L = 0x00;
  9356  003928  0E00               	movlw	0
  9357  00392A  6FF0               	movwf	240,b	;volatile
  9358  00392C                     
  9359                           ; BSR set to: 61
  9360                           ;mcc_generated_files/uart1.c: 113:     U1P3H = 0x00;
  9361  00392C  0E00               	movlw	0
  9362  00392E  6FF1               	movwf	241,b	;volatile
  9363  003930                     
  9364                           ; BSR set to: 61
  9365                           ;mcc_generated_files/uart1.c: 116:     U1CON0 = 0xB0;
  9366  003930  0EB0               	movlw	176
  9367  003932  6FF2               	movwf	242,b	;volatile
  9368  003934                     
  9369                           ; BSR set to: 61
  9370                           ;mcc_generated_files/uart1.c: 119:     U1CON1 = 0x80;
  9371  003934  0E80               	movlw	128
  9372  003936  6FF3               	movwf	243,b	;volatile
  9373  003938                     
  9374                           ; BSR set to: 61
  9375                           ;mcc_generated_files/uart1.c: 122:     U1CON2 = 0x00;
  9376  003938  0E00               	movlw	0
  9377  00393A  6FF4               	movwf	244,b	;volatile
  9378  00393C                     
  9379                           ; BSR set to: 61
  9380                           ;mcc_generated_files/uart1.c: 125:     U1BRGL = 0x8A;
  9381  00393C  0E8A               	movlw	138
  9382  00393E  6FF5               	movwf	245,b	;volatile
  9383  003940                     
  9384                           ; BSR set to: 61
  9385                           ;mcc_generated_files/uart1.c: 128:     U1BRGH = 0x00;
  9386  003940  0E00               	movlw	0
  9387  003942  6FF6               	movwf	246,b	;volatile
  9388  003944                     
  9389                           ; BSR set to: 61
  9390                           ;mcc_generated_files/uart1.c: 131:     U1FIFO = 0x00;
  9391  003944  0E00               	movlw	0
  9392  003946  6FF7               	movwf	247,b	;volatile
  9393  003948                     
  9394                           ; BSR set to: 61
  9395                           ;mcc_generated_files/uart1.c: 134:     U1UIR = 0x00;
  9396  003948  0E00               	movlw	0
  9397  00394A  6FF8               	movwf	248,b	;volatile
  9398  00394C                     
  9399                           ; BSR set to: 61
  9400                           ;mcc_generated_files/uart1.c: 137:     U1ERRIR = 0x00;
  9401  00394C  0E00               	movlw	0
  9402  00394E  6FF9               	movwf	249,b	;volatile
  9403  003950                     
  9404                           ; BSR set to: 61
  9405                           ;mcc_generated_files/uart1.c: 140:     U1ERRIE = 0x00;
  9406  003950  0E00               	movlw	0
  9407  003952  6FFA               	movwf	250,b	;volatile
  9408  003954                     
  9409                           ; BSR set to: 61
  9410                           ;mcc_generated_files/uart1.c: 143:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
  9411  003954  0E7A               	movlw	low _UART1_DefaultFramingErrorHandler
  9412  003956  6E14               	movwf	UART1_SetFramingErrorHandler@interruptHandler^0,c
  9413  003958  0E45               	movlw	high _UART1_DefaultFramingErrorHandler
  9414  00395A  6E15               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  9415  00395C  EC96  F022         	call	_UART1_SetFramingErrorHandler	;wreg free
  9416  003960                     
  9417                           ;mcc_generated_files/uart1.c: 144:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
  9418  003960  0E78               	movlw	low _UART1_DefaultOverrunErrorHandler
  9419  003962  6E14               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^0,c
  9420  003964  0E45               	movlw	high _UART1_DefaultOverrunErrorHandler
  9421  003966  6E15               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  9422  003968  EC91  F022         	call	_UART1_SetOverrunErrorHandler	;wreg free
  9423  00396C                     
  9424                           ;mcc_generated_files/uart1.c: 145:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
  9425  00396C  0E72               	movlw	low _UART1_DefaultErrorHandler
  9426  00396E  6E14               	movwf	UART1_SetErrorHandler@interruptHandler^0,c
  9427  003970  0E45               	movlw	high _UART1_DefaultErrorHandler
  9428  003972  6E15               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^0,c
  9429  003974  EC9B  F022         	call	_UART1_SetErrorHandler	;wreg free
  9430                           
  9431                           ;mcc_generated_files/uart1.c: 147:     uart1RxLastError.status = 0;
  9432  003978  0E00               	movlw	0
  9433  00397A  6E42               	movwf	_uart1RxLastError^0,c	;volatile
  9434                           
  9435                           ;mcc_generated_files/uart1.c: 150:     uart1TxHead = 0;
  9436  00397C  0E00               	movlw	0
  9437  00397E  6E47               	movwf	_uart1TxHead^0,c	;volatile
  9438                           
  9439                           ;mcc_generated_files/uart1.c: 151:     uart1TxTail = 0;
  9440  003980  0E00               	movlw	0
  9441  003982  6E46               	movwf	_uart1TxTail^0,c	;volatile
  9442                           
  9443                           ;mcc_generated_files/uart1.c: 152:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
  9444  003984  0E08               	movlw	8
  9445  003986  6E4C               	movwf	_uart1TxBufferRemaining^0,c	;volatile
  9446                           
  9447                           ;mcc_generated_files/uart1.c: 153:     uart1RxHead = 0;
  9448  003988  0E00               	movlw	0
  9449  00398A  6E45               	movwf	_uart1RxHead^0,c	;volatile
  9450                           
  9451                           ;mcc_generated_files/uart1.c: 154:     uart1RxTail = 0;
  9452  00398C  0E00               	movlw	0
  9453  00398E  6E44               	movwf	_uart1RxTail^0,c	;volatile
  9454                           
  9455                           ;mcc_generated_files/uart1.c: 155:     uart1RxCount = 0;
  9456  003990  0E00               	movlw	0
  9457  003992  6E43               	movwf	_uart1RxCount^0,c	;volatile
  9458  003994                     
  9459                           ;mcc_generated_files/uart1.c: 158:     PIE3bits.U1RXIE = 1;
  9460  003994  0139               	movlb	57	; () banked
  9461  003996  8793               	bsf	147,3,b	;volatile
  9462  003998                     
  9463                           ; BSR set to: 57
  9464  003998  0012               	return		;funcret
  9465  00399A                     __end_of_UART1_Initialize:
  9466                           	callstack 0
  9467                           
  9468 ;; *************** function _UART1_SetTxInterruptHandler *****************
  9469 ;; Defined at:
  9470 ;;		line 333 in file "mcc_generated_files/uart1.c"
  9471 ;; Parameters:    Size  Location     Type
  9472 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
  9473 ;;		 -> UART1_Transmit_ISR(1), 
  9474 ;; Auto vars:     Size  Location     Type
  9475 ;;		None
  9476 ;; Return value:  Size  Location     Type
  9477 ;;                  1    wreg      void 
  9478 ;; Registers used:
  9479 ;;		wreg, status,2, status,0
  9480 ;; Tracked objects:
  9481 ;;		On entry : 0/0
  9482 ;;		On exit  : 0/0
  9483 ;;		Unchanged: 0/0
  9484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9485 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9488 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9489 ;;Total ram usage:        2 bytes
  9490 ;; Hardware stack levels used: 1
  9491 ;; Hardware stack levels required when called: 8
  9492 ;; This function calls:
  9493 ;;		Nothing
  9494 ;; This function is called by:
  9495 ;;		_UART1_Initialize
  9496 ;; This function uses a non-reentrant model
  9497 ;;
  9498                           
  9499                           	psect	text40
  9500  00450E                     __ptext40:
  9501                           	callstack 0
  9502  00450E                     _UART1_SetTxInterruptHandler:
  9503                           	callstack 20
  9504  00450E                     
  9505                           ;mcc_generated_files/uart1.c: 334:     UART1_TxInterruptHandler = InterruptHandler;
  9506  00450E  C014  F0FA         	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
  9507  004512  C015  F0FB         	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
  9508  004516  0012               	return		;funcret
  9509  004518                     __end_of_UART1_SetTxInterruptHandler:
  9510                           	callstack 0
  9511                           
  9512 ;; *************** function _UART1_SetRxInterruptHandler *****************
  9513 ;; Defined at:
  9514 ;;		line 329 in file "mcc_generated_files/uart1.c"
  9515 ;; Parameters:    Size  Location     Type
  9516 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
  9517 ;;		 -> UART1_Receive_ISR(1), 
  9518 ;; Auto vars:     Size  Location     Type
  9519 ;;		None
  9520 ;; Return value:  Size  Location     Type
  9521 ;;                  1    wreg      void 
  9522 ;; Registers used:
  9523 ;;		wreg, status,2, status,0
  9524 ;; Tracked objects:
  9525 ;;		On entry : 0/0
  9526 ;;		On exit  : 0/0
  9527 ;;		Unchanged: 0/0
  9528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9529 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9532 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9533 ;;Total ram usage:        2 bytes
  9534 ;; Hardware stack levels used: 1
  9535 ;; Hardware stack levels required when called: 8
  9536 ;; This function calls:
  9537 ;;		Nothing
  9538 ;; This function is called by:
  9539 ;;		_UART1_Initialize
  9540 ;; This function uses a non-reentrant model
  9541 ;;
  9542                           
  9543                           	psect	text41
  9544  004518                     __ptext41:
  9545                           	callstack 0
  9546  004518                     _UART1_SetRxInterruptHandler:
  9547                           	callstack 20
  9548  004518                     
  9549                           ;mcc_generated_files/uart1.c: 330:     UART1_RxInterruptHandler = InterruptHandler;
  9550  004518  C014  F0FC         	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
  9551  00451C  C015  F0FD         	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
  9552  004520  0012               	return		;funcret
  9553  004522                     __end_of_UART1_SetRxInterruptHandler:
  9554                           	callstack 0
  9555                           
  9556 ;; *************** function _UART1_SetOverrunErrorHandler *****************
  9557 ;; Defined at:
  9558 ;;		line 319 in file "mcc_generated_files/uart1.c"
  9559 ;; Parameters:    Size  Location     Type
  9560 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
  9561 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
  9562 ;; Auto vars:     Size  Location     Type
  9563 ;;		None
  9564 ;; Return value:  Size  Location     Type
  9565 ;;                  1    wreg      void 
  9566 ;; Registers used:
  9567 ;;		wreg, status,2, status,0
  9568 ;; Tracked objects:
  9569 ;;		On entry : 0/0
  9570 ;;		On exit  : 0/0
  9571 ;;		Unchanged: 0/0
  9572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9573 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9576 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9577 ;;Total ram usage:        2 bytes
  9578 ;; Hardware stack levels used: 1
  9579 ;; Hardware stack levels required when called: 8
  9580 ;; This function calls:
  9581 ;;		Nothing
  9582 ;; This function is called by:
  9583 ;;		_UART1_Initialize
  9584 ;; This function uses a non-reentrant model
  9585 ;;
  9586                           
  9587                           	psect	text42
  9588  004522                     __ptext42:
  9589                           	callstack 0
  9590  004522                     _UART1_SetOverrunErrorHandler:
  9591                           	callstack 20
  9592  004522                     
  9593                           ;mcc_generated_files/uart1.c: 320:     UART1_OverrunErrorHandler = interruptHandler;
  9594  004522  C014  F0F6         	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
  9595  004526  C015  F0F7         	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
  9596  00452A  0012               	return		;funcret
  9597  00452C                     __end_of_UART1_SetOverrunErrorHandler:
  9598                           	callstack 0
  9599                           
  9600 ;; *************** function _UART1_SetFramingErrorHandler *****************
  9601 ;; Defined at:
  9602 ;;		line 315 in file "mcc_generated_files/uart1.c"
  9603 ;; Parameters:    Size  Location     Type
  9604 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
  9605 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
  9606 ;; Auto vars:     Size  Location     Type
  9607 ;;		None
  9608 ;; Return value:  Size  Location     Type
  9609 ;;                  1    wreg      void 
  9610 ;; Registers used:
  9611 ;;		wreg, status,2, status,0
  9612 ;; Tracked objects:
  9613 ;;		On entry : 0/0
  9614 ;;		On exit  : 0/0
  9615 ;;		Unchanged: 0/0
  9616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9617 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9620 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9621 ;;Total ram usage:        2 bytes
  9622 ;; Hardware stack levels used: 1
  9623 ;; Hardware stack levels required when called: 8
  9624 ;; This function calls:
  9625 ;;		Nothing
  9626 ;; This function is called by:
  9627 ;;		_UART1_Initialize
  9628 ;; This function uses a non-reentrant model
  9629 ;;
  9630                           
  9631                           	psect	text43
  9632  00452C                     __ptext43:
  9633                           	callstack 0
  9634  00452C                     _UART1_SetFramingErrorHandler:
  9635                           	callstack 20
  9636  00452C                     
  9637                           ;mcc_generated_files/uart1.c: 316:     UART1_FramingErrorHandler = interruptHandler;
  9638  00452C  C014  F0F8         	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
  9639  004530  C015  F0F9         	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
  9640  004534  0012               	return		;funcret
  9641  004536                     __end_of_UART1_SetFramingErrorHandler:
  9642                           	callstack 0
  9643                           
  9644 ;; *************** function _UART1_SetErrorHandler *****************
  9645 ;; Defined at:
  9646 ;;		line 323 in file "mcc_generated_files/uart1.c"
  9647 ;; Parameters:    Size  Location     Type
  9648 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
  9649 ;;		 -> UART1_DefaultErrorHandler(1), 
  9650 ;; Auto vars:     Size  Location     Type
  9651 ;;		None
  9652 ;; Return value:  Size  Location     Type
  9653 ;;                  1    wreg      void 
  9654 ;; Registers used:
  9655 ;;		wreg, status,2, status,0
  9656 ;; Tracked objects:
  9657 ;;		On entry : 0/0
  9658 ;;		On exit  : 0/0
  9659 ;;		Unchanged: 0/0
  9660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9661 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9664 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9665 ;;Total ram usage:        2 bytes
  9666 ;; Hardware stack levels used: 1
  9667 ;; Hardware stack levels required when called: 8
  9668 ;; This function calls:
  9669 ;;		Nothing
  9670 ;; This function is called by:
  9671 ;;		_UART1_Initialize
  9672 ;; This function uses a non-reentrant model
  9673 ;;
  9674                           
  9675                           	psect	text44
  9676  004536                     __ptext44:
  9677                           	callstack 0
  9678  004536                     _UART1_SetErrorHandler:
  9679                           	callstack 20
  9680  004536                     
  9681                           ;mcc_generated_files/uart1.c: 324:     UART1_ErrorHandler = interruptHandler;
  9682  004536  C014  F0F4         	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
  9683  00453A  C015  F0F5         	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
  9684  00453E  0012               	return		;funcret
  9685  004540                     __end_of_UART1_SetErrorHandler:
  9686                           	callstack 0
  9687                           
  9688 ;; *************** function _TMR5_Initialize *****************
  9689 ;; Defined at:
  9690 ;;		line 67 in file "mcc_generated_files/tmr5.c"
  9691 ;; Parameters:    Size  Location     Type
  9692 ;;		None
  9693 ;; Auto vars:     Size  Location     Type
  9694 ;;		None
  9695 ;; Return value:  Size  Location     Type
  9696 ;;                  1    wreg      void 
  9697 ;; Registers used:
  9698 ;;		wreg, status,2, status,0, cstack
  9699 ;; Tracked objects:
  9700 ;;		On entry : 0/0
  9701 ;;		On exit  : 0/0
  9702 ;;		Unchanged: 0/0
  9703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9706 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9707 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9708 ;;Total ram usage:        2 bytes
  9709 ;; Hardware stack levels used: 1
  9710 ;; Hardware stack levels required when called: 9
  9711 ;; This function calls:
  9712 ;;		_TMR5_SetGateInterruptHandler
  9713 ;; This function is called by:
  9714 ;;		_SYSTEM_Initialize
  9715 ;; This function uses a non-reentrant model
  9716 ;;
  9717                           
  9718                           	psect	text45
  9719  003D5E                     __ptext45:
  9720                           	callstack 0
  9721  003D5E                     _TMR5_Initialize:
  9722                           	callstack 20
  9723  003D5E                     
  9724                           ;mcc_generated_files/tmr5.c: 72:     T5GCON = 0xC0;
  9725  003D5E  0EC0               	movlw	192
  9726  003D60  6E9B               	movwf	155,c	;volatile
  9727                           
  9728                           ;mcc_generated_files/tmr5.c: 75:     T5GATE = 0x00;
  9729  003D62  0E00               	movlw	0
  9730  003D64  6E9C               	movwf	156,c	;volatile
  9731                           
  9732                           ;mcc_generated_files/tmr5.c: 78:     T5CLK = 0x05;
  9733  003D66  0E05               	movlw	5
  9734  003D68  6E9D               	movwf	157,c	;volatile
  9735                           
  9736                           ;mcc_generated_files/tmr5.c: 81:     TMR5H = 0x00;
  9737  003D6A  0E00               	movlw	0
  9738  003D6C  6E99               	movwf	153,c	;volatile
  9739                           
  9740                           ;mcc_generated_files/tmr5.c: 84:     TMR5L = 0x00;
  9741  003D6E  0E00               	movlw	0
  9742  003D70  6E98               	movwf	152,c	;volatile
  9743  003D72                     
  9744                           ;mcc_generated_files/tmr5.c: 87:     PIR8bits.TMR5IF = 0;
  9745  003D72  0139               	movlb	57	; () banked
  9746  003D74  9DA8               	bcf	168,6,b	;volatile
  9747  003D76                     
  9748                           ; BSR set to: 57
  9749                           ;mcc_generated_files/tmr5.c: 90:     timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
  9750  003D76  5098               	movf	152,w,c	;volatile
  9751  003D78  006F FE64  F016    	movff	16281,??_TMR5_Initialize	;volatile
  9752  003D7E  6A17               	clrf	(??_TMR5_Initialize+1)^0,c
  9753  003D80  C016  F017         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
  9754  003D84  6A16               	clrf	??_TMR5_Initialize^0,c
  9755  003D86  1016               	iorwf	??_TMR5_Initialize^0,w,c
  9756  003D88  0100               	movlb	0	; () banked
  9757  003D8A  6FEE               	movwf	_timer5ReloadVal& (0+255),b	;volatile
  9758  003D8C  5017               	movf	(??_TMR5_Initialize+1)^0,w,c
  9759  003D8E  6FEF               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
  9760  003D90                     
  9761                           ; BSR set to: 0
  9762                           ;mcc_generated_files/tmr5.c: 93:     PIR8bits.TMR5GIF = 0;
  9763  003D90  0139               	movlb	57	; () banked
  9764  003D92  9FA8               	bcf	168,7,b	;volatile
  9765  003D94                     
  9766                           ; BSR set to: 57
  9767                           ;mcc_generated_files/tmr5.c: 96:     PIE8bits.TMR5GIE = 1;
  9768  003D94  8F98               	bsf	152,7,b	;volatile
  9769  003D96                     
  9770                           ; BSR set to: 57
  9771                           ;mcc_generated_files/tmr5.c: 99:     TMR5_SetGateInterruptHandler(TMR5_DefaultGateInterr
      +                          uptHandler);
  9772  003D96  0E34               	movlw	low _TMR5_DefaultGateInterruptHandler
  9773  003D98  6E14               	movwf	TMR5_SetGateInterruptHandler@InterruptHandler^0,c
  9774  003D9A  0E44               	movlw	high _TMR5_DefaultGateInterruptHandler
  9775  003D9C  6E15               	movwf	(TMR5_SetGateInterruptHandler@InterruptHandler+1)^0,c
  9776  003D9E  ECA0  F022         	call	_TMR5_SetGateInterruptHandler	;wreg free
  9777  003DA2                     
  9778                           ;mcc_generated_files/tmr5.c: 102:     T5CON = 0x03;
  9779  003DA2  0E03               	movlw	3
  9780  003DA4  6E9A               	movwf	154,c	;volatile
  9781  003DA6  0012               	return		;funcret
  9782  003DA8                     __end_of_TMR5_Initialize:
  9783                           	callstack 0
  9784                           
  9785 ;; *************** function _TMR5_SetGateInterruptHandler *****************
  9786 ;; Defined at:
  9787 ;;		line 186 in file "mcc_generated_files/tmr5.c"
  9788 ;; Parameters:    Size  Location     Type
  9789 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
  9790 ;;		 -> TMR5_DefaultGateInterruptHandler(1), 
  9791 ;; Auto vars:     Size  Location     Type
  9792 ;;		None
  9793 ;; Return value:  Size  Location     Type
  9794 ;;                  1    wreg      void 
  9795 ;; Registers used:
  9796 ;;		wreg, status,2, status,0
  9797 ;; Tracked objects:
  9798 ;;		On entry : 0/0
  9799 ;;		On exit  : 0/0
  9800 ;;		Unchanged: 0/0
  9801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9802 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9805 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9806 ;;Total ram usage:        2 bytes
  9807 ;; Hardware stack levels used: 1
  9808 ;; Hardware stack levels required when called: 8
  9809 ;; This function calls:
  9810 ;;		Nothing
  9811 ;; This function is called by:
  9812 ;;		_TMR5_Initialize
  9813 ;; This function uses a non-reentrant model
  9814 ;;
  9815                           
  9816                           	psect	text46
  9817  004540                     __ptext46:
  9818                           	callstack 0
  9819  004540                     _TMR5_SetGateInterruptHandler:
  9820                           	callstack 20
  9821  004540                     
  9822                           ;mcc_generated_files/tmr5.c: 187:     TMR5_GateInterruptHandler = InterruptHandler;
  9823  004540  C014  F0EC         	movff	TMR5_SetGateInterruptHandler@InterruptHandler,_TMR5_GateInterruptHandler
  9824  004544  C015  F0ED         	movff	TMR5_SetGateInterruptHandler@InterruptHandler+1,_TMR5_GateInterruptHandler+1
  9825  004548  0012               	return		;funcret
  9826  00454A                     __end_of_TMR5_SetGateInterruptHandler:
  9827                           	callstack 0
  9828                           
  9829 ;; *************** function _TMR4_Initialize *****************
  9830 ;; Defined at:
  9831 ;;		line 65 in file "mcc_generated_files/tmr4.c"
  9832 ;; Parameters:    Size  Location     Type
  9833 ;;		None
  9834 ;; Auto vars:     Size  Location     Type
  9835 ;;		None
  9836 ;; Return value:  Size  Location     Type
  9837 ;;                  1    wreg      void 
  9838 ;; Registers used:
  9839 ;;		wreg, status,2, status,0, cstack
  9840 ;; Tracked objects:
  9841 ;;		On entry : 0/0
  9842 ;;		On exit  : 0/0
  9843 ;;		Unchanged: 0/0
  9844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9849 ;;Total ram usage:        0 bytes
  9850 ;; Hardware stack levels used: 1
  9851 ;; Hardware stack levels required when called: 9
  9852 ;; This function calls:
  9853 ;;		_TMR4_SetInterruptHandler
  9854 ;; This function is called by:
  9855 ;;		_SYSTEM_Initialize
  9856 ;; This function uses a non-reentrant model
  9857 ;;
  9858                           
  9859                           	psect	text47
  9860  0042CC                     __ptext47:
  9861                           	callstack 0
  9862  0042CC                     _TMR4_Initialize:
  9863                           	callstack 20
  9864  0042CC                     
  9865                           ;mcc_generated_files/tmr4.c: 70:     T4CLKCON = 0x01;
  9866  0042CC  0E01               	movlw	1
  9867  0042CE  6EA2               	movwf	162,c	;volatile
  9868                           
  9869                           ;mcc_generated_files/tmr4.c: 73:     T4HLT = 0x00;
  9870  0042D0  0E00               	movlw	0
  9871  0042D2  6EA1               	movwf	161,c	;volatile
  9872                           
  9873                           ;mcc_generated_files/tmr4.c: 76:     T4RST = 0x00;
  9874  0042D4  0E00               	movlw	0
  9875  0042D6  6EA3               	movwf	163,c	;volatile
  9876                           
  9877                           ;mcc_generated_files/tmr4.c: 79:     T4PR = 0xF9;
  9878  0042D8  0EF9               	movlw	249
  9879  0042DA  6E9F               	movwf	159,c	;volatile
  9880                           
  9881                           ;mcc_generated_files/tmr4.c: 82:     T4TMR = 0x00;
  9882  0042DC  0E00               	movlw	0
  9883  0042DE  6E9E               	movwf	158,c	;volatile
  9884  0042E0                     
  9885                           ;mcc_generated_files/tmr4.c: 85:     PIR7bits.TMR4IF = 0;
  9886  0042E0  0139               	movlb	57	; () banked
  9887  0042E2  91A7               	bcf	167,0,b	;volatile
  9888  0042E4                     
  9889                           ; BSR set to: 57
  9890                           ;mcc_generated_files/tmr4.c: 88:     PIE7bits.TMR4IE = 1;
  9891  0042E4  8197               	bsf	151,0,b	;volatile
  9892  0042E6                     
  9893                           ; BSR set to: 57
  9894                           ;mcc_generated_files/tmr4.c: 91:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
  9895  0042E6  0E7C               	movlw	low _TMR4_DefaultInterruptHandler
  9896  0042E8  6E14               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
  9897  0042EA  0E45               	movlw	high _TMR4_DefaultInterruptHandler
  9898  0042EC  6E15               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
  9899  0042EE  ECA5  F022         	call	_TMR4_SetInterruptHandler	;wreg free
  9900  0042F2                     
  9901                           ;mcc_generated_files/tmr4.c: 94:     T4CON = 0xE0;
  9902  0042F2  0EE0               	movlw	224
  9903  0042F4  6EA0               	movwf	160,c	;volatile
  9904  0042F6  0012               	return		;funcret
  9905  0042F8                     __end_of_TMR4_Initialize:
  9906                           	callstack 0
  9907                           
  9908 ;; *************** function _TMR4_SetInterruptHandler *****************
  9909 ;; Defined at:
  9910 ;;		line 194 in file "mcc_generated_files/tmr4.c"
  9911 ;; Parameters:    Size  Location     Type
  9912 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
  9913 ;;		 -> TMR4_10msISR(1), TMR4_DefaultInterruptHandler(1), 
  9914 ;; Auto vars:     Size  Location     Type
  9915 ;;		None
  9916 ;; Return value:  Size  Location     Type
  9917 ;;                  1    wreg      void 
  9918 ;; Registers used:
  9919 ;;		wreg, status,2, status,0
  9920 ;; Tracked objects:
  9921 ;;		On entry : 0/0
  9922 ;;		On exit  : 0/0
  9923 ;;		Unchanged: 0/0
  9924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9925 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9928 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9929 ;;Total ram usage:        2 bytes
  9930 ;; Hardware stack levels used: 1
  9931 ;; Hardware stack levels required when called: 8
  9932 ;; This function calls:
  9933 ;;		Nothing
  9934 ;; This function is called by:
  9935 ;;		_TMR4_Initialize
  9936 ;;		_main
  9937 ;; This function uses a non-reentrant model
  9938 ;;
  9939                           
  9940                           	psect	text48
  9941  00454A                     __ptext48:
  9942                           	callstack 0
  9943  00454A                     _TMR4_SetInterruptHandler:
  9944                           	callstack 22
  9945  00454A                     
  9946                           ;mcc_generated_files/tmr4.c: 195:     TMR4_InterruptHandler = InterruptHandler;
  9947  00454A  C014  F0E8         	movff	TMR4_SetInterruptHandler@InterruptHandler,_TMR4_InterruptHandler
  9948  00454E  C015  F0E9         	movff	TMR4_SetInterruptHandler@InterruptHandler+1,_TMR4_InterruptHandler+1
  9949  004552  0012               	return		;funcret
  9950  004554                     __end_of_TMR4_SetInterruptHandler:
  9951                           	callstack 0
  9952                           
  9953 ;; *************** function _TMR3_Initialize *****************
  9954 ;; Defined at:
  9955 ;;		line 63 in file "mcc_generated_files/tmr3.c"
  9956 ;; Parameters:    Size  Location     Type
  9957 ;;		None
  9958 ;; Auto vars:     Size  Location     Type
  9959 ;;		None
  9960 ;; Return value:  Size  Location     Type
  9961 ;;                  1    wreg      void 
  9962 ;; Registers used:
  9963 ;;		wreg, status,2, status,0
  9964 ;; Tracked objects:
  9965 ;;		On entry : 0/0
  9966 ;;		On exit  : 0/0
  9967 ;;		Unchanged: 0/0
  9968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9971 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9972 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9973 ;;Total ram usage:        2 bytes
  9974 ;; Hardware stack levels used: 1
  9975 ;; Hardware stack levels required when called: 8
  9976 ;; This function calls:
  9977 ;;		Nothing
  9978 ;; This function is called by:
  9979 ;;		_SYSTEM_Initialize
  9980 ;; This function uses a non-reentrant model
  9981 ;;
  9982                           
  9983                           	psect	text49
  9984  003F6A                     __ptext49:
  9985                           	callstack 0
  9986  003F6A                     _TMR3_Initialize:
  9987                           	callstack 21
  9988  003F6A                     
  9989                           ;mcc_generated_files/tmr3.c: 68:     T3GCON = 0x00;
  9990  003F6A  0E00               	movlw	0
  9991  003F6C  6EA7               	movwf	167,c	;volatile
  9992                           
  9993                           ;mcc_generated_files/tmr3.c: 71:     T3GATE = 0x00;
  9994  003F6E  0E00               	movlw	0
  9995  003F70  6EA8               	movwf	168,c	;volatile
  9996                           
  9997                           ;mcc_generated_files/tmr3.c: 74:     T3CLK = 0x05;
  9998  003F72  0E05               	movlw	5
  9999  003F74  6EA9               	movwf	169,c	;volatile
 10000                           
 10001                           ;mcc_generated_files/tmr3.c: 77:     TMR3H = 0x00;
 10002  003F76  0E00               	movlw	0
 10003  003F78  6EA5               	movwf	165,c	;volatile
 10004                           
 10005                           ;mcc_generated_files/tmr3.c: 80:     TMR3L = 0x00;
 10006  003F7A  0E00               	movlw	0
 10007  003F7C  6EA4               	movwf	164,c	;volatile
 10008  003F7E                     
 10009                           ;mcc_generated_files/tmr3.c: 83:     PIR6bits.TMR3IF = 0;
 10010  003F7E  0139               	movlb	57	; () banked
 10011  003F80  9DA6               	bcf	166,6,b	;volatile
 10012  003F82                     
 10013                           ; BSR set to: 57
 10014                           ;mcc_generated_files/tmr3.c: 86:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 10015  003F82  50A4               	movf	164,w,c	;volatile
 10016  003F84  006F FE94  F014    	movff	16293,??_TMR3_Initialize	;volatile
 10017  003F8A  6A15               	clrf	(??_TMR3_Initialize+1)^0,c
 10018  003F8C  C014  F015         	movff	??_TMR3_Initialize,??_TMR3_Initialize+1
 10019  003F90  6A14               	clrf	??_TMR3_Initialize^0,c
 10020  003F92  1014               	iorwf	??_TMR3_Initialize^0,w,c
 10021  003F94  0100               	movlb	0	; () banked
 10022  003F96  6FEA               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 10023  003F98  5015               	movf	(??_TMR3_Initialize+1)^0,w,c
 10024  003F9A  6FEB               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 10025  003F9C                     
 10026                           ; BSR set to: 0
 10027                           ;mcc_generated_files/tmr3.c: 89:     T3CON = 0x01;
 10028  003F9C  0E01               	movlw	1
 10029  003F9E  6EA6               	movwf	166,c	;volatile
 10030  003FA0                     
 10031                           ; BSR set to: 0
 10032  003FA0  0012               	return		;funcret
 10033  003FA2                     __end_of_TMR3_Initialize:
 10034                           	callstack 0
 10035                           
 10036 ;; *************** function _TMR2_Initialize *****************
 10037 ;; Defined at:
 10038 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 10039 ;; Parameters:    Size  Location     Type
 10040 ;;		None
 10041 ;; Auto vars:     Size  Location     Type
 10042 ;;		None
 10043 ;; Return value:  Size  Location     Type
 10044 ;;                  1    wreg      void 
 10045 ;; Registers used:
 10046 ;;		wreg, status,2
 10047 ;; Tracked objects:
 10048 ;;		On entry : 0/0
 10049 ;;		On exit  : 0/0
 10050 ;;		Unchanged: 0/0
 10051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10055 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10056 ;;Total ram usage:        0 bytes
 10057 ;; Hardware stack levels used: 1
 10058 ;; Hardware stack levels required when called: 8
 10059 ;; This function calls:
 10060 ;;		Nothing
 10061 ;; This function is called by:
 10062 ;;		_SYSTEM_Initialize
 10063 ;; This function uses a non-reentrant model
 10064 ;;
 10065                           
 10066                           	psect	text50
 10067  004452                     __ptext50:
 10068                           	callstack 0
 10069  004452                     _TMR2_Initialize:
 10070                           	callstack 21
 10071  004452                     
 10072                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x05;
 10073  004452  0E05               	movlw	5
 10074  004454  6EAE               	movwf	174,c	;volatile
 10075                           
 10076                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 10077  004456  0E00               	movlw	0
 10078  004458  6EAD               	movwf	173,c	;volatile
 10079                           
 10080                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 10081  00445A  0E00               	movlw	0
 10082  00445C  6EAF               	movwf	175,c	;volatile
 10083  00445E                     
 10084                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
 10085  00445E  68AB               	setf	171,c	;volatile
 10086                           
 10087                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 10088  004460  0E00               	movlw	0
 10089  004462  6EAA               	movwf	170,c	;volatile
 10090  004464                     
 10091                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 10092  004464  0139               	movlb	57	; () banked
 10093  004466  95A4               	bcf	164,2,b	;volatile
 10094                           
 10095                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xB0;
 10096  004468  0EB0               	movlw	176
 10097  00446A  6EAC               	movwf	172,c	;volatile
 10098  00446C                     
 10099                           ; BSR set to: 57
 10100  00446C  0012               	return		;funcret
 10101  00446E                     __end_of_TMR2_Initialize:
 10102                           	callstack 0
 10103                           
 10104 ;; *************** function _SMT1_Initialize *****************
 10105 ;; Defined at:
 10106 ;;		line 60 in file "mcc_generated_files/smt1.c"
 10107 ;; Parameters:    Size  Location     Type
 10108 ;;		None
 10109 ;; Auto vars:     Size  Location     Type
 10110 ;;		None
 10111 ;; Return value:  Size  Location     Type
 10112 ;;                  1    wreg      void 
 10113 ;; Registers used:
 10114 ;;		wreg, status,2
 10115 ;; Tracked objects:
 10116 ;;		On entry : 0/0
 10117 ;;		On exit  : 0/0
 10118 ;;		Unchanged: 0/0
 10119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10124 ;;Total ram usage:        0 bytes
 10125 ;; Hardware stack levels used: 1
 10126 ;; Hardware stack levels required when called: 8
 10127 ;; This function calls:
 10128 ;;		Nothing
 10129 ;; This function is called by:
 10130 ;;		_SYSTEM_Initialize
 10131 ;; This function uses a non-reentrant model
 10132 ;;
 10133                           
 10134                           	psect	text51
 10135  0041B2                     __ptext51:
 10136                           	callstack 0
 10137  0041B2                     _SMT1_Initialize:
 10138                           	callstack 21
 10139  0041B2                     
 10140                           ;mcc_generated_files/smt1.c: 63:     SMT1CON0 = 0x80;
 10141  0041B2  0E80               	movlw	128
 10142  0041B4  013F               	movlb	63	; () banked
 10143  0041B6  6F1E               	movwf	30,b	;volatile
 10144                           
 10145                           ;mcc_generated_files/smt1.c: 66:     SMT1CON1 = 0x42;
 10146  0041B8  0E42               	movlw	66
 10147  0041BA  6F1F               	movwf	31,b	;volatile
 10148                           
 10149                           ;mcc_generated_files/smt1.c: 69:     SMT1STAT = 0x00;
 10150  0041BC  0E00               	movlw	0
 10151  0041BE  6F20               	movwf	32,b	;volatile
 10152                           
 10153                           ;mcc_generated_files/smt1.c: 72:     SMT1CLK = 0x04;
 10154  0041C0  0E04               	movlw	4
 10155  0041C2  6F21               	movwf	33,b	;volatile
 10156                           
 10157                           ;mcc_generated_files/smt1.c: 75:     SMT1WIN = 0x00;
 10158  0041C4  0E00               	movlw	0
 10159  0041C6  6F23               	movwf	35,b	;volatile
 10160                           
 10161                           ;mcc_generated_files/smt1.c: 78:     SMT1SIG = 0x00;
 10162  0041C8  0E00               	movlw	0
 10163  0041CA  6F22               	movwf	34,b	;volatile
 10164                           
 10165                           ;mcc_generated_files/smt1.c: 81:     SMT1PRU = 0x01;
 10166  0041CC  0E01               	movlw	1
 10167  0041CE  6F1D               	movwf	29,b	;volatile
 10168  0041D0                     
 10169                           ; BSR set to: 63
 10170                           ;mcc_generated_files/smt1.c: 84:     SMT1PRH = 0xFF;
 10171  0041D0  691C               	setf	28,b	;volatile
 10172  0041D2                     
 10173                           ; BSR set to: 63
 10174                           ;mcc_generated_files/smt1.c: 87:     SMT1PRL = 0xFF;
 10175  0041D2  691B               	setf	27,b	;volatile
 10176  0041D4                     
 10177                           ; BSR set to: 63
 10178                           ;mcc_generated_files/smt1.c: 90:     PIE1bits.SMT1IE = 1;
 10179  0041D4  0139               	movlb	57	; () banked
 10180  0041D6  8B91               	bsf	145,5,b	;volatile
 10181  0041D8                     
 10182                           ; BSR set to: 57
 10183                           ;mcc_generated_files/smt1.c: 93:     PIE1bits.SMT1PWAIE = 1;
 10184  0041D8  8F91               	bsf	145,7,b	;volatile
 10185  0041DA                     
 10186                           ; BSR set to: 57
 10187                           ;mcc_generated_files/smt1.c: 96:     PIE1bits.SMT1PRAIE = 1;
 10188  0041DA  8D91               	bsf	145,6,b	;volatile
 10189  0041DC                     
 10190                           ; BSR set to: 57
 10191                           ;mcc_generated_files/smt1.c: 99:     SMT1CON1bits.SMT1GO = 1;
 10192  0041DC  013F               	movlb	63	; () banked
 10193  0041DE  8F1F               	bsf	31,7,b	;volatile
 10194  0041E0                     
 10195                           ; BSR set to: 63
 10196  0041E0  0012               	return		;funcret
 10197  0041E2                     __end_of_SMT1_Initialize:
 10198                           	callstack 0
 10199                           
 10200 ;; *************** function _PWM8_Initialize *****************
 10201 ;; Defined at:
 10202 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 10203 ;; Parameters:    Size  Location     Type
 10204 ;;		None
 10205 ;; Auto vars:     Size  Location     Type
 10206 ;;		None
 10207 ;; Return value:  Size  Location     Type
 10208 ;;                  1    wreg      void 
 10209 ;; Registers used:
 10210 ;;		wreg, status,2
 10211 ;; Tracked objects:
 10212 ;;		On entry : 0/0
 10213 ;;		On exit  : 0/0
 10214 ;;		Unchanged: 0/0
 10215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10220 ;;Total ram usage:        0 bytes
 10221 ;; Hardware stack levels used: 1
 10222 ;; Hardware stack levels required when called: 8
 10223 ;; This function calls:
 10224 ;;		Nothing
 10225 ;; This function is called by:
 10226 ;;		_SYSTEM_Initialize
 10227 ;; This function uses a non-reentrant model
 10228 ;;
 10229                           
 10230                           	psect	text52
 10231  00446E                     __ptext52:
 10232                           	callstack 0
 10233  00446E                     _PWM8_Initialize:
 10234                           	callstack 21
 10235  00446E                     
 10236                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 10237  00446E  0E80               	movlw	128
 10238  004470  6E62               	movwf	98,c	;volatile
 10239                           
 10240                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 10241  004472  0E00               	movlw	0
 10242  004474  6E61               	movwf	97,c	;volatile
 10243                           
 10244                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x00;
 10245  004476  0E00               	movlw	0
 10246  004478  6E60               	movwf	96,c	;volatile
 10247                           
 10248                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 2;
 10249  00447A  013F               	movlb	63	; () banked
 10250  00447C  515F               	movf	95,w,b	;volatile
 10251  00447E  0B3F               	andlw	-193
 10252  004480  0980               	iorlw	128
 10253  004482  6F5F               	movwf	95,b	;volatile
 10254  004484                     
 10255                           ; BSR set to: 63
 10256  004484  0012               	return		;funcret
 10257  004486                     __end_of_PWM8_Initialize:
 10258                           	callstack 0
 10259                           
 10260 ;; *************** function _PWM7_Initialize *****************
 10261 ;; Defined at:
 10262 ;;		line 58 in file "mcc_generated_files/pwm7.c"
 10263 ;; Parameters:    Size  Location     Type
 10264 ;;		None
 10265 ;; Auto vars:     Size  Location     Type
 10266 ;;		None
 10267 ;; Return value:  Size  Location     Type
 10268 ;;                  1    wreg      void 
 10269 ;; Registers used:
 10270 ;;		wreg, status,2
 10271 ;; Tracked objects:
 10272 ;;		On entry : 0/0
 10273 ;;		On exit  : 0/0
 10274 ;;		Unchanged: 0/0
 10275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10280 ;;Total ram usage:        0 bytes
 10281 ;; Hardware stack levels used: 1
 10282 ;; Hardware stack levels required when called: 8
 10283 ;; This function calls:
 10284 ;;		Nothing
 10285 ;; This function is called by:
 10286 ;;		_SYSTEM_Initialize
 10287 ;; This function uses a non-reentrant model
 10288 ;;
 10289                           
 10290                           	psect	text53
 10291  004486                     __ptext53:
 10292                           	callstack 0
 10293  004486                     _PWM7_Initialize:
 10294                           	callstack 21
 10295  004486                     
 10296                           ;mcc_generated_files/pwm7.c: 62:     PWM7CON = 0x80;
 10297  004486  0E80               	movlw	128
 10298  004488  6E66               	movwf	102,c	;volatile
 10299                           
 10300                           ;mcc_generated_files/pwm7.c: 65:     PWM7DCH = 0x00;
 10301  00448A  0E00               	movlw	0
 10302  00448C  6E65               	movwf	101,c	;volatile
 10303                           
 10304                           ;mcc_generated_files/pwm7.c: 68:     PWM7DCL = 0x00;
 10305  00448E  0E00               	movlw	0
 10306  004490  6E64               	movwf	100,c	;volatile
 10307                           
 10308                           ;mcc_generated_files/pwm7.c: 71:     CCPTMRS1bits.P7TSEL = 2;
 10309  004492  013F               	movlb	63	; () banked
 10310  004494  515F               	movf	95,w,b	;volatile
 10311  004496  0BCF               	andlw	-49
 10312  004498  0920               	iorlw	32
 10313  00449A  6F5F               	movwf	95,b	;volatile
 10314  00449C                     
 10315                           ; BSR set to: 63
 10316  00449C  0012               	return		;funcret
 10317  00449E                     __end_of_PWM7_Initialize:
 10318                           	callstack 0
 10319                           
 10320 ;; *************** function _PWM6_Initialize *****************
 10321 ;; Defined at:
 10322 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 10323 ;; Parameters:    Size  Location     Type
 10324 ;;		None
 10325 ;; Auto vars:     Size  Location     Type
 10326 ;;		None
 10327 ;; Return value:  Size  Location     Type
 10328 ;;                  1    wreg      void 
 10329 ;; Registers used:
 10330 ;;		wreg, status,2
 10331 ;; Tracked objects:
 10332 ;;		On entry : 0/0
 10333 ;;		On exit  : 0/0
 10334 ;;		Unchanged: 0/0
 10335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10340 ;;Total ram usage:        0 bytes
 10341 ;; Hardware stack levels used: 1
 10342 ;; Hardware stack levels required when called: 8
 10343 ;; This function calls:
 10344 ;;		Nothing
 10345 ;; This function is called by:
 10346 ;;		_SYSTEM_Initialize
 10347 ;; This function uses a non-reentrant model
 10348 ;;
 10349                           
 10350                           	psect	text54
 10351  00449E                     __ptext54:
 10352                           	callstack 0
 10353  00449E                     _PWM6_Initialize:
 10354                           	callstack 21
 10355  00449E                     
 10356                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
 10357  00449E  0E80               	movlw	128
 10358  0044A0  6E6A               	movwf	106,c	;volatile
 10359                           
 10360                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x59;
 10361  0044A2  0E59               	movlw	89
 10362  0044A4  6E69               	movwf	105,c	;volatile
 10363                           
 10364                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0x40;
 10365  0044A6  0E40               	movlw	64
 10366  0044A8  6E68               	movwf	104,c	;volatile
 10367                           
 10368                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
 10369  0044AA  013F               	movlb	63	; () banked
 10370  0044AC  515F               	movf	95,w,b	;volatile
 10371  0044AE  0BF3               	andlw	-13
 10372  0044B0  0904               	iorlw	4
 10373  0044B2  6F5F               	movwf	95,b	;volatile
 10374  0044B4                     
 10375                           ; BSR set to: 63
 10376  0044B4  0012               	return		;funcret
 10377  0044B6                     __end_of_PWM6_Initialize:
 10378                           	callstack 0
 10379                           
 10380 ;; *************** function _PWM5_Initialize *****************
 10381 ;; Defined at:
 10382 ;;		line 58 in file "mcc_generated_files/pwm5.c"
 10383 ;; Parameters:    Size  Location     Type
 10384 ;;		None
 10385 ;; Auto vars:     Size  Location     Type
 10386 ;;		None
 10387 ;; Return value:  Size  Location     Type
 10388 ;;                  1    wreg      void 
 10389 ;; Registers used:
 10390 ;;		wreg, status,2
 10391 ;; Tracked objects:
 10392 ;;		On entry : 0/0
 10393 ;;		On exit  : 0/0
 10394 ;;		Unchanged: 0/0
 10395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10400 ;;Total ram usage:        0 bytes
 10401 ;; Hardware stack levels used: 1
 10402 ;; Hardware stack levels required when called: 8
 10403 ;; This function calls:
 10404 ;;		Nothing
 10405 ;; This function is called by:
 10406 ;;		_SYSTEM_Initialize
 10407 ;; This function uses a non-reentrant model
 10408 ;;
 10409                           
 10410                           	psect	text55
 10411  0044B6                     __ptext55:
 10412                           	callstack 0
 10413  0044B6                     _PWM5_Initialize:
 10414                           	callstack 21
 10415  0044B6                     
 10416                           ;mcc_generated_files/pwm5.c: 62:     PWM5CON = 0x80;
 10417  0044B6  0E80               	movlw	128
 10418  0044B8  6E6E               	movwf	110,c	;volatile
 10419                           
 10420                           ;mcc_generated_files/pwm5.c: 65:     PWM5DCH = 0x59;
 10421  0044BA  0E59               	movlw	89
 10422  0044BC  6E6D               	movwf	109,c	;volatile
 10423                           
 10424                           ;mcc_generated_files/pwm5.c: 68:     PWM5DCL = 0x40;
 10425  0044BE  0E40               	movlw	64
 10426  0044C0  6E6C               	movwf	108,c	;volatile
 10427                           
 10428                           ;mcc_generated_files/pwm5.c: 71:     CCPTMRS1bits.P5TSEL = 1;
 10429  0044C2  013F               	movlb	63	; () banked
 10430  0044C4  515F               	movf	95,w,b	;volatile
 10431  0044C6  0BFC               	andlw	-4
 10432  0044C8  0901               	iorlw	1
 10433  0044CA  6F5F               	movwf	95,b	;volatile
 10434  0044CC                     
 10435                           ; BSR set to: 63
 10436  0044CC  0012               	return		;funcret
 10437  0044CE                     __end_of_PWM5_Initialize:
 10438                           	callstack 0
 10439                           
 10440 ;; *************** function _PMD_Initialize *****************
 10441 ;; Defined at:
 10442 ;;		line 86 in file "mcc_generated_files/mcc.c"
 10443 ;; Parameters:    Size  Location     Type
 10444 ;;		None
 10445 ;; Auto vars:     Size  Location     Type
 10446 ;;		None
 10447 ;; Return value:  Size  Location     Type
 10448 ;;                  1    wreg      void 
 10449 ;; Registers used:
 10450 ;;		wreg, status,2
 10451 ;; Tracked objects:
 10452 ;;		On entry : 0/0
 10453 ;;		On exit  : 0/0
 10454 ;;		Unchanged: 0/0
 10455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10460 ;;Total ram usage:        0 bytes
 10461 ;; Hardware stack levels used: 1
 10462 ;; Hardware stack levels required when called: 8
 10463 ;; This function calls:
 10464 ;;		Nothing
 10465 ;; This function is called by:
 10466 ;;		_SYSTEM_Initialize
 10467 ;; This function uses a non-reentrant model
 10468 ;;
 10469                           
 10470                           	psect	text56
 10471  0043CC                     __ptext56:
 10472                           	callstack 0
 10473  0043CC                     _PMD_Initialize:
 10474                           	callstack 21
 10475  0043CC                     
 10476                           ;mcc_generated_files/mcc.c: 89:     PMD0 = 0x00;
 10477  0043CC  0E00               	movlw	0
 10478  0043CE  0139               	movlb	57	; () banked
 10479  0043D0  6FC0               	movwf	192,b	;volatile
 10480                           
 10481                           ;mcc_generated_files/mcc.c: 91:     PMD1 = 0x00;
 10482  0043D2  0E00               	movlw	0
 10483  0043D4  6FC1               	movwf	193,b	;volatile
 10484                           
 10485                           ;mcc_generated_files/mcc.c: 93:     PMD2 = 0x00;
 10486  0043D6  0E00               	movlw	0
 10487  0043D8  6FC2               	movwf	194,b	;volatile
 10488                           
 10489                           ;mcc_generated_files/mcc.c: 95:     PMD3 = 0x00;
 10490  0043DA  0E00               	movlw	0
 10491  0043DC  6FC3               	movwf	195,b	;volatile
 10492                           
 10493                           ;mcc_generated_files/mcc.c: 97:     PMD4 = 0x00;
 10494  0043DE  0E00               	movlw	0
 10495  0043E0  6FC4               	movwf	196,b	;volatile
 10496                           
 10497                           ;mcc_generated_files/mcc.c: 99:     PMD5 = 0x00;
 10498  0043E2  0E00               	movlw	0
 10499  0043E4  6FC5               	movwf	197,b	;volatile
 10500                           
 10501                           ;mcc_generated_files/mcc.c: 101:     PMD6 = 0x00;
 10502  0043E6  0E00               	movlw	0
 10503  0043E8  6FC6               	movwf	198,b	;volatile
 10504                           
 10505                           ;mcc_generated_files/mcc.c: 103:     PMD7 = 0x00;
 10506  0043EA  0E00               	movlw	0
 10507  0043EC  6FC7               	movwf	199,b	;volatile
 10508  0043EE                     
 10509                           ; BSR set to: 57
 10510  0043EE  0012               	return		;funcret
 10511  0043F0                     __end_of_PMD_Initialize:
 10512                           	callstack 0
 10513                           
 10514 ;; *************** function _PIN_MANAGER_Initialize *****************
 10515 ;; Defined at:
 10516 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 10517 ;; Parameters:    Size  Location     Type
 10518 ;;		None
 10519 ;; Auto vars:     Size  Location     Type
 10520 ;;		None
 10521 ;; Return value:  Size  Location     Type
 10522 ;;                  1    wreg      void 
 10523 ;; Registers used:
 10524 ;;		wreg, status,2
 10525 ;; Tracked objects:
 10526 ;;		On entry : 0/0
 10527 ;;		On exit  : 0/0
 10528 ;;		Unchanged: 0/0
 10529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10534 ;;Total ram usage:        0 bytes
 10535 ;; Hardware stack levels used: 1
 10536 ;; Hardware stack levels required when called: 8
 10537 ;; This function calls:
 10538 ;;		Nothing
 10539 ;; This function is called by:
 10540 ;;		_SYSTEM_Initialize
 10541 ;; This function uses a non-reentrant model
 10542 ;;
 10543                           
 10544                           	psect	text57
 10545  0035E6                     __ptext57:
 10546                           	callstack 0
 10547  0035E6                     _PIN_MANAGER_Initialize:
 10548                           	callstack 21
 10549  0035E6                     
 10550                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 10551  0035E6  0E00               	movlw	0
 10552  0035E8  6EBE               	movwf	190,c	;volatile
 10553                           
 10554                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 10555  0035EA  0E00               	movlw	0
 10556  0035EC  6EBD               	movwf	189,c	;volatile
 10557                           
 10558                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x24;
 10559  0035EE  0E24               	movlw	36
 10560  0035F0  6EBA               	movwf	186,c	;volatile
 10561                           
 10562                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 10563  0035F2  0E00               	movlw	0
 10564  0035F4  6EBB               	movwf	187,c	;volatile
 10565                           
 10566                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 10567  0035F6  0E00               	movlw	0
 10568  0035F8  6EBC               	movwf	188,c	;volatile
 10569                           
 10570                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
 10571  0035FA  0E07               	movlw	7
 10572  0035FC  6EC6               	movwf	198,c	;volatile
 10573                           
 10574                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xC0;
 10575  0035FE  0EC0               	movlw	192
 10576  003600  6EC2               	movwf	194,c	;volatile
 10577                           
 10578                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xF7;
 10579  003602  0EF7               	movlw	247
 10580  003604  6EC3               	movwf	195,c	;volatile
 10581  003606                     
 10582                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
 10583  003606  68C4               	setf	196,c	;volatile
 10584  003608                     
 10585                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
 10586  003608  68C5               	setf	197,c	;volatile
 10587                           
 10588                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x1F;
 10589  00360A  0E1F               	movlw	31
 10590  00360C  013A               	movlb	58	; () banked
 10591  00360E  6F70               	movwf	112,b	;volatile
 10592  003610                     
 10593                           ; BSR set to: 58
 10594                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xFF;
 10595  003610  6960               	setf	96,b	;volatile
 10596                           
 10597                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xC0;
 10598  003612  0EC0               	movlw	192
 10599  003614  6F50               	movwf	80,b	;volatile
 10600                           
 10601                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
 10602  003616  0E07               	movlw	7
 10603  003618  6F80               	movwf	128,b	;volatile
 10604                           
 10605                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x7F;
 10606  00361A  0E7F               	movlw	127
 10607  00361C  6F40               	movwf	64,b	;volatile
 10608                           
 10609                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 10610  00361E  0E00               	movlw	0
 10611  003620  6F71               	movwf	113,b	;volatile
 10612                           
 10613                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 10614  003622  0E00               	movlw	0
 10615  003624  6F81               	movwf	129,b	;volatile
 10616                           
 10617                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
 10618  003626  0E00               	movlw	0
 10619  003628  6F51               	movwf	81,b	;volatile
 10620                           
 10621                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 10622  00362A  0E00               	movlw	0
 10623  00362C  6F41               	movwf	65,b	;volatile
 10624                           
 10625                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 10626  00362E  0E00               	movlw	0
 10627  003630  6F61               	movwf	97,b	;volatile
 10628                           
 10629                           ;mcc_generated_files/pin_manager.c: 96:     RB1I2C = 0x00;
 10630  003632  0E00               	movlw	0
 10631  003634  6F5A               	movwf	90,b	;volatile
 10632                           
 10633                           ;mcc_generated_files/pin_manager.c: 97:     RB2I2C = 0x00;
 10634  003636  0E00               	movlw	0
 10635  003638  6F5B               	movwf	91,b	;volatile
 10636                           
 10637                           ;mcc_generated_files/pin_manager.c: 98:     RC3I2C = 0x00;
 10638  00363A  0E00               	movlw	0
 10639  00363C  6F6A               	movwf	106,b	;volatile
 10640                           
 10641                           ;mcc_generated_files/pin_manager.c: 99:     RC4I2C = 0x00;
 10642  00363E  0E00               	movlw	0
 10643  003640  6F6B               	movwf	107,b	;volatile
 10644                           
 10645                           ;mcc_generated_files/pin_manager.c: 100:     RD0I2C = 0x00;
 10646  003642  0E00               	movlw	0
 10647  003644  6F7A               	movwf	122,b	;volatile
 10648                           
 10649                           ;mcc_generated_files/pin_manager.c: 101:     RD1I2C = 0x00;
 10650  003646  0E00               	movlw	0
 10651  003648  6F7B               	movwf	123,b	;volatile
 10652                           
 10653                           ;mcc_generated_files/pin_manager.c: 106:     ODCONE = 0x00;
 10654  00364A  0E00               	movlw	0
 10655  00364C  6F82               	movwf	130,b	;volatile
 10656                           
 10657                           ;mcc_generated_files/pin_manager.c: 107:     ODCONA = 0x00;
 10658  00364E  0E00               	movlw	0
 10659  003650  6F42               	movwf	66,b	;volatile
 10660                           
 10661                           ;mcc_generated_files/pin_manager.c: 108:     ODCONB = 0x00;
 10662  003652  0E00               	movlw	0
 10663  003654  6F52               	movwf	82,b	;volatile
 10664                           
 10665                           ;mcc_generated_files/pin_manager.c: 109:     ODCONC = 0x00;
 10666  003656  0E00               	movlw	0
 10667  003658  6F62               	movwf	98,b	;volatile
 10668                           
 10669                           ;mcc_generated_files/pin_manager.c: 110:     ODCOND = 0x00;
 10670  00365A  0E00               	movlw	0
 10671  00365C  6F72               	movwf	114,b	;volatile
 10672  00365E                     
 10673                           ; BSR set to: 58
 10674                           ;mcc_generated_files/pin_manager.c: 115:     SLRCONA = 0xFF;
 10675  00365E  6943               	setf	67,b	;volatile
 10676  003660                     
 10677                           ; BSR set to: 58
 10678                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONB = 0xFF;
 10679  003660  6953               	setf	83,b	;volatile
 10680  003662                     
 10681                           ; BSR set to: 58
 10682                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONC = 0xFF;
 10683  003662  6963               	setf	99,b	;volatile
 10684  003664                     
 10685                           ; BSR set to: 58
 10686                           ;mcc_generated_files/pin_manager.c: 118:     SLRCOND = 0xFF;
 10687  003664  6973               	setf	115,b	;volatile
 10688                           
 10689                           ;mcc_generated_files/pin_manager.c: 119:     SLRCONE = 0x07;
 10690  003666  0E07               	movlw	7
 10691  003668  6F83               	movwf	131,b	;volatile
 10692  00366A                     
 10693                           ; BSR set to: 58
 10694                           ;mcc_generated_files/pin_manager.c: 124:     INLVLA = 0xFF;
 10695  00366A  6944               	setf	68,b	;volatile
 10696  00366C                     
 10697                           ; BSR set to: 58
 10698                           ;mcc_generated_files/pin_manager.c: 125:     INLVLB = 0xFF;
 10699  00366C  6954               	setf	84,b	;volatile
 10700  00366E                     
 10701                           ; BSR set to: 58
 10702                           ;mcc_generated_files/pin_manager.c: 126:     INLVLC = 0xFF;
 10703  00366E  6964               	setf	100,b	;volatile
 10704  003670                     
 10705                           ; BSR set to: 58
 10706                           ;mcc_generated_files/pin_manager.c: 127:     INLVLD = 0xFF;
 10707  003670  6974               	setf	116,b	;volatile
 10708                           
 10709                           ;mcc_generated_files/pin_manager.c: 128:     INLVLE = 0x0F;
 10710  003672  0E0F               	movlw	15
 10711  003674  6F84               	movwf	132,b	;volatile
 10712                           
 10713                           ;mcc_generated_files/pin_manager.c: 137:     CCP3PPS = 0x1F;
 10714  003676  0E1F               	movlw	31
 10715  003678  6FCF               	movwf	207,b	;volatile
 10716                           
 10717                           ;mcc_generated_files/pin_manager.c: 138:     CLCIN3PPS = 0x09;
 10718  00367A  0E09               	movlw	9
 10719  00367C  6FDC               	movwf	220,b	;volatile
 10720                           
 10721                           ;mcc_generated_files/pin_manager.c: 139:     RA1PPS = 0x0E;
 10722  00367E  0E0E               	movlw	14
 10723  003680  6F01               	movwf	1,b	;volatile
 10724                           
 10725                           ;mcc_generated_files/pin_manager.c: 140:     U1RXPPS = 0x0A;
 10726  003682  0E0A               	movlw	10
 10727  003684  6FE5               	movwf	229,b	;volatile
 10728                           
 10729                           ;mcc_generated_files/pin_manager.c: 141:     RA0PPS = 0x0D;
 10730  003686  0E0D               	movlw	13
 10731  003688  6F00               	movwf	0,b	;volatile
 10732                           
 10733                           ;mcc_generated_files/pin_manager.c: 142:     T5GPPS = 0x1D;
 10734  00368A  0E1D               	movlw	29
 10735  00368C  6FC9               	movwf	201,b	;volatile
 10736                           
 10737                           ;mcc_generated_files/pin_manager.c: 143:     RA4PPS = 0x10;
 10738  00368E  0E10               	movlw	16
 10739  003690  6F04               	movwf	4,b	;volatile
 10740                           
 10741                           ;mcc_generated_files/pin_manager.c: 144:     CLCIN0PPS = 0x07;
 10742  003692  0E07               	movlw	7
 10743  003694  6FD9               	movwf	217,b	;volatile
 10744                           
 10745                           ;mcc_generated_files/pin_manager.c: 145:     SMT1WINPPS = 0x09;
 10746  003696  0E09               	movlw	9
 10747  003698  6FD1               	movwf	209,b	;volatile
 10748                           
 10749                           ;mcc_generated_files/pin_manager.c: 146:     RA3PPS = 0x0F;
 10750  00369A  0E0F               	movlw	15
 10751  00369C  6F03               	movwf	3,b	;volatile
 10752                           
 10753                           ;mcc_generated_files/pin_manager.c: 147:     RB3PPS = 0x13;
 10754  00369E  0E13               	movlw	19
 10755  0036A0  6F0B               	movwf	11,b	;volatile
 10756                           
 10757                           ;mcc_generated_files/pin_manager.c: 148:     CLCIN2PPS = 0x08;
 10758  0036A2  0E08               	movlw	8
 10759  0036A4  6FDB               	movwf	219,b	;volatile
 10760                           
 10761                           ;mcc_generated_files/pin_manager.c: 149:     SMT1SIGPPS = 0x08;
 10762  0036A6  0E08               	movlw	8
 10763  0036A8  6FD2               	movwf	210,b	;volatile
 10764                           
 10765                           ;mcc_generated_files/pin_manager.c: 150:     CCP4PPS = 0x1E;
 10766  0036AA  0E1E               	movlw	30
 10767  0036AC  6FD0               	movwf	208,b	;volatile
 10768  0036AE                     
 10769                           ; BSR set to: 58
 10770  0036AE  0012               	return		;funcret
 10771  0036B0                     __end_of_PIN_MANAGER_Initialize:
 10772                           	callstack 0
 10773                           
 10774 ;; *************** function _OSCILLATOR_Initialize *****************
 10775 ;; Defined at:
 10776 ;;		line 72 in file "mcc_generated_files/mcc.c"
 10777 ;; Parameters:    Size  Location     Type
 10778 ;;		None
 10779 ;; Auto vars:     Size  Location     Type
 10780 ;;		None
 10781 ;; Return value:  Size  Location     Type
 10782 ;;                  1    wreg      void 
 10783 ;; Registers used:
 10784 ;;		wreg, status,2
 10785 ;; Tracked objects:
 10786 ;;		On entry : 0/0
 10787 ;;		On exit  : 0/0
 10788 ;;		Unchanged: 0/0
 10789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10794 ;;Total ram usage:        0 bytes
 10795 ;; Hardware stack levels used: 1
 10796 ;; Hardware stack levels required when called: 8
 10797 ;; This function calls:
 10798 ;;		Nothing
 10799 ;; This function is called by:
 10800 ;;		_SYSTEM_Initialize
 10801 ;; This function uses a non-reentrant model
 10802 ;;
 10803                           
 10804                           	psect	text58
 10805  0044CE                     __ptext58:
 10806                           	callstack 0
 10807  0044CE                     _OSCILLATOR_Initialize:
 10808                           	callstack 21
 10809  0044CE                     
 10810                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x60;
 10811  0044CE  0E60               	movlw	96
 10812  0044D0  0139               	movlb	57	; () banked
 10813  0044D2  6FD9               	movwf	217,b	;volatile
 10814                           
 10815                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 10816  0044D4  0E00               	movlw	0
 10817  0044D6  6FDB               	movwf	219,b	;volatile
 10818                           
 10819                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 10820  0044D8  0E00               	movlw	0
 10821  0044DA  6FDD               	movwf	221,b	;volatile
 10822                           
 10823                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x08;
 10824  0044DC  0E08               	movlw	8
 10825  0044DE  6FDF               	movwf	223,b	;volatile
 10826                           
 10827                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 10828  0044E0  0E00               	movlw	0
 10829  0044E2  6FDE               	movwf	222,b	;volatile
 10830  0044E4                     
 10831                           ; BSR set to: 57
 10832  0044E4  0012               	return		;funcret
 10833  0044E6                     __end_of_OSCILLATOR_Initialize:
 10834                           	callstack 0
 10835                           
 10836 ;; *************** function _INTERRUPT_Initialize *****************
 10837 ;; Defined at:
 10838 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 10839 ;; Parameters:    Size  Location     Type
 10840 ;;		None
 10841 ;; Auto vars:     Size  Location     Type
 10842 ;;  state           1   19[COMRAM] _Bool 
 10843 ;; Return value:  Size  Location     Type
 10844 ;;                  1    wreg      void 
 10845 ;; Registers used:
 10846 ;;		wreg, status,2
 10847 ;; Tracked objects:
 10848 ;;		On entry : 0/0
 10849 ;;		On exit  : 0/0
 10850 ;;		Unchanged: 0/0
 10851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10853 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10855 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10856 ;;Total ram usage:        1 bytes
 10857 ;; Hardware stack levels used: 1
 10858 ;; Hardware stack levels required when called: 8
 10859 ;; This function calls:
 10860 ;;		Nothing
 10861 ;; This function is called by:
 10862 ;;		_SYSTEM_Initialize
 10863 ;; This function uses a non-reentrant model
 10864 ;;
 10865                           
 10866                           	psect	text59
 10867  003CC8                     __ptext59:
 10868                           	callstack 0
 10869  003CC8                     _INTERRUPT_Initialize:
 10870                           	callstack 21
 10871  003CC8                     
 10872                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 10873  003CC8  8AD2               	bsf	210,5,c	;volatile
 10874  003CCA                     
 10875                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 10876  003CCA  0E00               	movlw	0
 10877  003CCC  BED2               	btfsc	16338,7,c	;volatile
 10878  003CCE  0E01               	movlw	1
 10879  003CD0  6E14               	movwf	INTERRUPT_Initialize@state^0,c
 10880  003CD2                     
 10881                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 10882  003CD2  9ED2               	bcf	16338,7,c	;volatile
 10883                           
 10884                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 10885  003CD4  0E55               	movlw	85
 10886  003CD6  6ED4               	movwf	212,c	;volatile
 10887                           
 10888                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 10889  003CD8  0EAA               	movlw	170
 10890  003CDA  6ED4               	movwf	212,c	;volatile
 10891  003CDC                     
 10892                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 10893  003CDC  90D4               	bcf	212,0,c	;volatile
 10894                           
 10895                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTBASEU = 0;
 10896  003CDE  0E00               	movlw	0
 10897  003CE0  6ED7               	movwf	215,c	;volatile
 10898                           
 10899                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTBASEH = 0;
 10900  003CE2  0E00               	movlw	0
 10901  003CE4  6ED6               	movwf	214,c	;volatile
 10902                           
 10903                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTBASEL = 8;
 10904  003CE6  0E08               	movlw	8
 10905  003CE8  6ED5               	movwf	213,c	;volatile
 10906                           
 10907                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 10908  003CEA  0E55               	movlw	85
 10909  003CEC  6ED4               	movwf	212,c	;volatile
 10910                           
 10911                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 10912  003CEE  0EAA               	movlw	170
 10913  003CF0  6ED4               	movwf	212,c	;volatile
 10914  003CF2                     
 10915                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 10916  003CF2  80D4               	bsf	212,0,c	;volatile
 10917  003CF4                     
 10918                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 10919  003CF4  B014               	btfsc	INTERRUPT_Initialize@state^0,0,c
 10920  003CF6  D002               	bra	u1805
 10921  003CF8  9ED2               	bcf	16338,7,c	;volatile
 10922  003CFA  D001               	bra	u1806
 10923  003CFC                     u1805:
 10924  003CFC  8ED2               	bsf	16338,7,c	;volatile
 10925  003CFE                     u1806:
 10926  003CFE                     
 10927                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR3bits.U1TXIP = 0;
 10928  003CFE  0139               	movlb	57	; () banked
 10929  003D00  9983               	bcf	131,4,b	;volatile
 10930  003D02                     
 10931                           ; BSR set to: 57
 10932                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR3bits.U1RXIP = 0;
 10933  003D02  9783               	bcf	131,3,b	;volatile
 10934  003D04                     
 10935                           ; BSR set to: 57
 10936                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR1bits.SMT1PWAIP = 1;
 10937  003D04  8F81               	bsf	129,7,b	;volatile
 10938  003D06                     
 10939                           ; BSR set to: 57
 10940                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR1bits.SMT1IP = 1;
 10941  003D06  8B81               	bsf	129,5,b	;volatile
 10942  003D08                     
 10943                           ; BSR set to: 57
 10944                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR1bits.SMT1PRAIP = 1;
 10945  003D08  8D81               	bsf	129,6,b	;volatile
 10946  003D0A                     
 10947                           ; BSR set to: 57
 10948                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR10bits.CCP4IP = 1;
 10949  003D0A  818A               	bsf	138,0,b	;volatile
 10950  003D0C                     
 10951                           ; BSR set to: 57
 10952                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR8bits.TMR5GIP = 1;
 10953  003D0C  8F88               	bsf	136,7,b	;volatile
 10954  003D0E                     
 10955                           ; BSR set to: 57
 10956                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR7bits.TMR4IP = 0;
 10957  003D0E  9187               	bcf	135,0,b	;volatile
 10958  003D10                     
 10959                           ; BSR set to: 57
 10960                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR9bits.CCP3IP = 1;
 10961  003D10  8389               	bsf	137,1,b	;volatile
 10962  003D12                     
 10963                           ; BSR set to: 57
 10964  003D12  0012               	return		;funcret
 10965  003D14                     __end_of_INTERRUPT_Initialize:
 10966                           	callstack 0
 10967                           
 10968 ;; *************** function _CLC3_Initialize *****************
 10969 ;; Defined at:
 10970 ;;		line 58 in file "mcc_generated_files/clc3.c"
 10971 ;; Parameters:    Size  Location     Type
 10972 ;;		None
 10973 ;; Auto vars:     Size  Location     Type
 10974 ;;		None
 10975 ;; Return value:  Size  Location     Type
 10976 ;;                  1    wreg      void 
 10977 ;; Registers used:
 10978 ;;		wreg, status,2
 10979 ;; Tracked objects:
 10980 ;;		On entry : 0/0
 10981 ;;		On exit  : 0/0
 10982 ;;		Unchanged: 0/0
 10983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10988 ;;Total ram usage:        0 bytes
 10989 ;; Hardware stack levels used: 1
 10990 ;; Hardware stack levels required when called: 8
 10991 ;; This function calls:
 10992 ;;		Nothing
 10993 ;; This function is called by:
 10994 ;;		_SYSTEM_Initialize
 10995 ;; This function uses a non-reentrant model
 10996 ;;
 10997                           
 10998                           	psect	text60
 10999  0042F8                     __ptext60:
 11000                           	callstack 0
 11001  0042F8                     _CLC3_Initialize:
 11002                           	callstack 21
 11003  0042F8                     
 11004                           ;mcc_generated_files/clc3.c: 63:     CLC3POL = 0x00;
 11005  0042F8  0E00               	movlw	0
 11006  0042FA  013C               	movlb	60	; () banked
 11007  0042FC  6F61               	movwf	97,b	;volatile
 11008                           
 11009                           ;mcc_generated_files/clc3.c: 65:     CLC3SEL0 = 0x03;
 11010  0042FE  0E03               	movlw	3
 11011  004300  6F62               	movwf	98,b	;volatile
 11012                           
 11013                           ;mcc_generated_files/clc3.c: 67:     CLC3SEL1 = 0x02;
 11014  004302  0E02               	movlw	2
 11015  004304  6F63               	movwf	99,b	;volatile
 11016                           
 11017                           ;mcc_generated_files/clc3.c: 69:     CLC3SEL2 = 0x00;
 11018  004306  0E00               	movlw	0
 11019  004308  6F64               	movwf	100,b	;volatile
 11020                           
 11021                           ;mcc_generated_files/clc3.c: 71:     CLC3SEL3 = 0x00;
 11022  00430A  0E00               	movlw	0
 11023  00430C  6F65               	movwf	101,b	;volatile
 11024                           
 11025                           ;mcc_generated_files/clc3.c: 73:     CLC3GLS0 = 0x02;
 11026  00430E  0E02               	movlw	2
 11027  004310  6F66               	movwf	102,b	;volatile
 11028                           
 11029                           ;mcc_generated_files/clc3.c: 75:     CLC3GLS1 = 0x08;
 11030  004312  0E08               	movlw	8
 11031  004314  6F67               	movwf	103,b	;volatile
 11032                           
 11033                           ;mcc_generated_files/clc3.c: 77:     CLC3GLS2 = 0x00;
 11034  004316  0E00               	movlw	0
 11035  004318  6F68               	movwf	104,b	;volatile
 11036                           
 11037                           ;mcc_generated_files/clc3.c: 79:     CLC3GLS3 = 0x00;
 11038  00431A  0E00               	movlw	0
 11039  00431C  6F69               	movwf	105,b	;volatile
 11040                           
 11041                           ;mcc_generated_files/clc3.c: 81:     CLC3CON = 0x85;
 11042  00431E  0E85               	movlw	133
 11043  004320  6F60               	movwf	96,b	;volatile
 11044  004322                     
 11045                           ; BSR set to: 60
 11046  004322  0012               	return		;funcret
 11047  004324                     __end_of_CLC3_Initialize:
 11048                           	callstack 0
 11049                           
 11050 ;; *************** function _CCP4_Initialize *****************
 11051 ;; Defined at:
 11052 ;;		line 78 in file "mcc_generated_files/ccp4.c"
 11053 ;; Parameters:    Size  Location     Type
 11054 ;;		None
 11055 ;; Auto vars:     Size  Location     Type
 11056 ;;		None
 11057 ;; Return value:  Size  Location     Type
 11058 ;;                  1    wreg      void 
 11059 ;; Registers used:
 11060 ;;		wreg, status,2, status,0, cstack
 11061 ;; Tracked objects:
 11062 ;;		On entry : 0/0
 11063 ;;		On exit  : 0/0
 11064 ;;		Unchanged: 0/0
 11065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11070 ;;Total ram usage:        0 bytes
 11071 ;; Hardware stack levels used: 1
 11072 ;; Hardware stack levels required when called: 9
 11073 ;; This function calls:
 11074 ;;		_CCP4_SetCallBack
 11075 ;; This function is called by:
 11076 ;;		_SYSTEM_Initialize
 11077 ;; This function uses a non-reentrant model
 11078 ;;
 11079                           
 11080                           	psect	text61
 11081  004242                     __ptext61:
 11082                           	callstack 0
 11083  004242                     _CCP4_Initialize:
 11084                           	callstack 20
 11085  004242                     
 11086                           ;mcc_generated_files/ccp4.c: 83:  CCP4CON = 0x83;
 11087  004242  0E83               	movlw	131
 11088  004244  6E72               	movwf	114,c	;volatile
 11089                           
 11090                           ;mcc_generated_files/ccp4.c: 86:  CCP4CAP = 0x00;
 11091  004246  0E00               	movlw	0
 11092  004248  6E73               	movwf	115,c	;volatile
 11093                           
 11094                           ;mcc_generated_files/ccp4.c: 89:  CCPR4H = 0x00;
 11095  00424A  0E00               	movlw	0
 11096  00424C  6E71               	movwf	113,c	;volatile
 11097                           
 11098                           ;mcc_generated_files/ccp4.c: 92:  CCPR4L = 0x00;
 11099  00424E  0E00               	movlw	0
 11100  004250  6E70               	movwf	112,c	;volatile
 11101  004252                     
 11102                           ;mcc_generated_files/ccp4.c: 95:     CCP4_SetCallBack(CCP4_DefaultCallBack);
 11103  004252  0E12               	movlw	low _CCP4_DefaultCallBack
 11104  004254  6E14               	movwf	CCP4_SetCallBack@customCallBack^0,c
 11105  004256  0E42               	movlw	high _CCP4_DefaultCallBack
 11106  004258  6E15               	movwf	(CCP4_SetCallBack@customCallBack+1)^0,c
 11107  00425A  ECAA  F022         	call	_CCP4_SetCallBack	;wreg free
 11108  00425E                     
 11109                           ;mcc_generated_files/ccp4.c: 98:  CCPTMRS0bits.C4TSEL = 0x2;
 11110  00425E  013F               	movlb	63	; () banked
 11111  004260  515E               	movf	94,w,b	;volatile
 11112  004262  0B3F               	andlw	-193
 11113  004264  0980               	iorlw	128
 11114  004266  6F5E               	movwf	94,b	;volatile
 11115  004268                     
 11116                           ; BSR set to: 63
 11117                           ;mcc_generated_files/ccp4.c: 101:     PIR10bits.CCP4IF = 0;
 11118  004268  0139               	movlb	57	; () banked
 11119  00426A  91AA               	bcf	170,0,b	;volatile
 11120  00426C                     
 11121                           ; BSR set to: 57
 11122                           ;mcc_generated_files/ccp4.c: 104:     PIE10bits.CCP4IE = 1;
 11123  00426C  819A               	bsf	154,0,b	;volatile
 11124  00426E                     
 11125                           ; BSR set to: 57
 11126  00426E  0012               	return		;funcret
 11127  004270                     __end_of_CCP4_Initialize:
 11128                           	callstack 0
 11129                           
 11130 ;; *************** function _CCP4_SetCallBack *****************
 11131 ;; Defined at:
 11132 ;;		line 75 in file "mcc_generated_files/ccp4.c"
 11133 ;; Parameters:    Size  Location     Type
 11134 ;;  customCallBa    2   19[COMRAM] PTR FTN(unsigned short ,
 11135 ;;		 -> CCP4_DefaultCallBack(1), 
 11136 ;; Auto vars:     Size  Location     Type
 11137 ;;		None
 11138 ;; Return value:  Size  Location     Type
 11139 ;;                  1    wreg      void 
 11140 ;; Registers used:
 11141 ;;		wreg, status,2, status,0
 11142 ;; Tracked objects:
 11143 ;;		On entry : 0/0
 11144 ;;		On exit  : 0/0
 11145 ;;		Unchanged: 0/0
 11146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11147 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11150 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11151 ;;Total ram usage:        2 bytes
 11152 ;; Hardware stack levels used: 1
 11153 ;; Hardware stack levels required when called: 8
 11154 ;; This function calls:
 11155 ;;		Nothing
 11156 ;; This function is called by:
 11157 ;;		_CCP4_Initialize
 11158 ;; This function uses a non-reentrant model
 11159 ;;
 11160                           
 11161                           	psect	text62
 11162  004554                     __ptext62:
 11163                           	callstack 0
 11164  004554                     _CCP4_SetCallBack:
 11165                           	callstack 20
 11166  004554                     
 11167                           ;mcc_generated_files/ccp4.c: 76:     CCP4_CallBack = customCallBack;
 11168  004554  C014  F0F0         	movff	CCP4_SetCallBack@customCallBack,_CCP4_CallBack
 11169  004558  C015  F0F1         	movff	CCP4_SetCallBack@customCallBack+1,_CCP4_CallBack+1
 11170  00455C  0012               	return		;funcret
 11171  00455E                     __end_of_CCP4_SetCallBack:
 11172                           	callstack 0
 11173                           
 11174 ;; *************** function _CCP3_Initialize *****************
 11175 ;; Defined at:
 11176 ;;		line 75 in file "mcc_generated_files/ccp3.c"
 11177 ;; Parameters:    Size  Location     Type
 11178 ;;		None
 11179 ;; Auto vars:     Size  Location     Type
 11180 ;;		None
 11181 ;; Return value:  Size  Location     Type
 11182 ;;                  1    wreg      void 
 11183 ;; Registers used:
 11184 ;;		wreg, status,2, status,0, cstack
 11185 ;; Tracked objects:
 11186 ;;		On entry : 0/0
 11187 ;;		On exit  : 0/0
 11188 ;;		Unchanged: 0/0
 11189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11194 ;;Total ram usage:        0 bytes
 11195 ;; Hardware stack levels used: 1
 11196 ;; Hardware stack levels required when called: 9
 11197 ;; This function calls:
 11198 ;;		_CCP3_SetCallBack
 11199 ;; This function is called by:
 11200 ;;		_SYSTEM_Initialize
 11201 ;; This function uses a non-reentrant model
 11202 ;;
 11203                           
 11204                           	psect	text63
 11205  004270                     __ptext63:
 11206                           	callstack 0
 11207  004270                     _CCP3_Initialize:
 11208                           	callstack 20
 11209  004270                     
 11210                           ;mcc_generated_files/ccp3.c: 80:  CCP3CON = 0x83;
 11211  004270  0E83               	movlw	131
 11212  004272  6E76               	movwf	118,c	;volatile
 11213                           
 11214                           ;mcc_generated_files/ccp3.c: 83:  CCP3CAP = 0x00;
 11215  004274  0E00               	movlw	0
 11216  004276  6E77               	movwf	119,c	;volatile
 11217                           
 11218                           ;mcc_generated_files/ccp3.c: 86:  CCPR3H = 0x00;
 11219  004278  0E00               	movlw	0
 11220  00427A  6E75               	movwf	117,c	;volatile
 11221                           
 11222                           ;mcc_generated_files/ccp3.c: 89:  CCPR3L = 0x00;
 11223  00427C  0E00               	movlw	0
 11224  00427E  6E74               	movwf	116,c	;volatile
 11225  004280                     
 11226                           ;mcc_generated_files/ccp3.c: 92:     CCP3_SetCallBack(CCP3_DefaultCallBack);
 11227  004280  0EE2               	movlw	low _CCP3_DefaultCallBack
 11228  004282  6E14               	movwf	CCP3_SetCallBack@customCallBack^0,c
 11229  004284  0E41               	movlw	high _CCP3_DefaultCallBack
 11230  004286  6E15               	movwf	(CCP3_SetCallBack@customCallBack+1)^0,c
 11231  004288  ECAF  F022         	call	_CCP3_SetCallBack	;wreg free
 11232  00428C                     
 11233                           ;mcc_generated_files/ccp3.c: 95:  CCPTMRS0bits.C3TSEL = 0x2;
 11234  00428C  013F               	movlb	63	; () banked
 11235  00428E  515E               	movf	94,w,b	;volatile
 11236  004290  0BCF               	andlw	-49
 11237  004292  0920               	iorlw	32
 11238  004294  6F5E               	movwf	94,b	;volatile
 11239  004296                     
 11240                           ; BSR set to: 63
 11241                           ;mcc_generated_files/ccp3.c: 98:     PIR9bits.CCP3IF = 0;
 11242  004296  0139               	movlb	57	; () banked
 11243  004298  93A9               	bcf	169,1,b	;volatile
 11244  00429A                     
 11245                           ; BSR set to: 57
 11246                           ;mcc_generated_files/ccp3.c: 101:     PIE9bits.CCP3IE = 1;
 11247  00429A  8399               	bsf	153,1,b	;volatile
 11248  00429C                     
 11249                           ; BSR set to: 57
 11250  00429C  0012               	return		;funcret
 11251  00429E                     __end_of_CCP3_Initialize:
 11252                           	callstack 0
 11253                           
 11254 ;; *************** function _CCP3_SetCallBack *****************
 11255 ;; Defined at:
 11256 ;;		line 119 in file "mcc_generated_files/ccp3.c"
 11257 ;; Parameters:    Size  Location     Type
 11258 ;;  customCallBa    2   19[COMRAM] PTR FTN(unsigned short ,
 11259 ;;		 -> CCP3_DefaultCallBack(1), 
 11260 ;; Auto vars:     Size  Location     Type
 11261 ;;		None
 11262 ;; Return value:  Size  Location     Type
 11263 ;;                  1    wreg      void 
 11264 ;; Registers used:
 11265 ;;		wreg, status,2, status,0
 11266 ;; Tracked objects:
 11267 ;;		On entry : 0/0
 11268 ;;		On exit  : 0/0
 11269 ;;		Unchanged: 0/0
 11270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11271 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11274 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11275 ;;Total ram usage:        2 bytes
 11276 ;; Hardware stack levels used: 1
 11277 ;; Hardware stack levels required when called: 8
 11278 ;; This function calls:
 11279 ;;		Nothing
 11280 ;; This function is called by:
 11281 ;;		_CCP3_Initialize
 11282 ;; This function uses a non-reentrant model
 11283 ;;
 11284                           
 11285                           	psect	text64
 11286  00455E                     __ptext64:
 11287                           	callstack 0
 11288  00455E                     _CCP3_SetCallBack:
 11289                           	callstack 20
 11290  00455E                     
 11291                           ;mcc_generated_files/ccp3.c: 120:     CCP3_CallBack = customCallBack;
 11292  00455E  C014  F0F2         	movff	CCP3_SetCallBack@customCallBack,_CCP3_CallBack
 11293  004562  C015  F0F3         	movff	CCP3_SetCallBack@customCallBack+1,_CCP3_CallBack+1
 11294  004566  0012               	return		;funcret
 11295  004568                     __end_of_CCP3_SetCallBack:
 11296                           	callstack 0
 11297                           
 11298 ;; *************** function _ADCC_Initialize *****************
 11299 ;; Defined at:
 11300 ;;		line 62 in file "mcc_generated_files/adcc.c"
 11301 ;; Parameters:    Size  Location     Type
 11302 ;;		None
 11303 ;; Auto vars:     Size  Location     Type
 11304 ;;		None
 11305 ;; Return value:  Size  Location     Type
 11306 ;;                  1    wreg      void 
 11307 ;; Registers used:
 11308 ;;		wreg, status,2
 11309 ;; Tracked objects:
 11310 ;;		On entry : 0/0
 11311 ;;		On exit  : 0/0
 11312 ;;		Unchanged: 0/0
 11313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11318 ;;Total ram usage:        0 bytes
 11319 ;; Hardware stack levels used: 1
 11320 ;; Hardware stack levels required when called: 8
 11321 ;; This function calls:
 11322 ;;		Nothing
 11323 ;; This function is called by:
 11324 ;;		_SYSTEM_Initialize
 11325 ;; This function uses a non-reentrant model
 11326 ;;
 11327                           
 11328                           	psect	text65
 11329  003C18                     __ptext65:
 11330                           	callstack 0
 11331  003C18                     _ADCC_Initialize:
 11332                           	callstack 21
 11333  003C18                     
 11334                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
 11335  003C18  0E00               	movlw	0
 11336  003C1A  013E               	movlb	62	; () banked
 11337  003C1C  6FDE               	movwf	222,b	;volatile
 11338                           
 11339                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
 11340  003C1E  0E00               	movlw	0
 11341  003C20  6FDF               	movwf	223,b	;volatile
 11342                           
 11343                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
 11344  003C22  0E00               	movlw	0
 11345  003C24  6FE0               	movwf	224,b	;volatile
 11346                           
 11347                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
 11348  003C26  0E00               	movlw	0
 11349  003C28  6FE1               	movwf	225,b	;volatile
 11350                           
 11351                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
 11352  003C2A  0E00               	movlw	0
 11353  003C2C  6FE4               	movwf	228,b	;volatile
 11354                           
 11355                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
 11356  003C2E  0E00               	movlw	0
 11357  003C30  6FE5               	movwf	229,b	;volatile
 11358                           
 11359                           ;mcc_generated_files/adcc.c: 78:     ADACCU = 0x00;
 11360  003C32  0E00               	movlw	0
 11361  003C34  6FEA               	movwf	234,b	;volatile
 11362                           
 11363                           ;mcc_generated_files/adcc.c: 80:     ADRPT = 0x00;
 11364  003C36  0E00               	movlw	0
 11365  003C38  6FEC               	movwf	236,b	;volatile
 11366                           
 11367                           ;mcc_generated_files/adcc.c: 82:     ADPCH = 0x00;
 11368  003C3A  0E00               	movlw	0
 11369  003C3C  6FF1               	movwf	241,b	;volatile
 11370                           
 11371                           ;mcc_generated_files/adcc.c: 84:     ADACQL = 0x58;
 11372  003C3E  0E58               	movlw	88
 11373  003C40  6FF3               	movwf	243,b	;volatile
 11374                           
 11375                           ;mcc_generated_files/adcc.c: 86:     ADACQH = 0x02;
 11376  003C42  0E02               	movlw	2
 11377  003C44  6FF4               	movwf	244,b	;volatile
 11378                           
 11379                           ;mcc_generated_files/adcc.c: 88:     ADCAP = 0x00;
 11380  003C46  0E00               	movlw	0
 11381  003C48  6FF5               	movwf	245,b	;volatile
 11382                           
 11383                           ;mcc_generated_files/adcc.c: 90:     ADPREL = 0x00;
 11384  003C4A  0E00               	movlw	0
 11385  003C4C  6FF6               	movwf	246,b	;volatile
 11386                           
 11387                           ;mcc_generated_files/adcc.c: 92:     ADPREH = 0x00;
 11388  003C4E  0E00               	movlw	0
 11389  003C50  6FF7               	movwf	247,b	;volatile
 11390                           
 11391                           ;mcc_generated_files/adcc.c: 94:     ADCON1 = 0x00;
 11392  003C52  0E00               	movlw	0
 11393  003C54  6FF9               	movwf	249,b	;volatile
 11394                           
 11395                           ;mcc_generated_files/adcc.c: 96:     ADCON2 = 0x00;
 11396  003C56  0E00               	movlw	0
 11397  003C58  6FFA               	movwf	250,b	;volatile
 11398                           
 11399                           ;mcc_generated_files/adcc.c: 98:     ADCON3 = 0x00;
 11400  003C5A  0E00               	movlw	0
 11401  003C5C  6FFB               	movwf	251,b	;volatile
 11402                           
 11403                           ;mcc_generated_files/adcc.c: 100:     ADSTAT = 0x00;
 11404  003C5E  0E00               	movlw	0
 11405  003C60  6FFC               	movwf	252,b	;volatile
 11406                           
 11407                           ;mcc_generated_files/adcc.c: 102:     ADREF = 0x00;
 11408  003C62  0E00               	movlw	0
 11409  003C64  6FFD               	movwf	253,b	;volatile
 11410                           
 11411                           ;mcc_generated_files/adcc.c: 104:     ADACT = 0x00;
 11412  003C66  0E00               	movlw	0
 11413  003C68  6FFE               	movwf	254,b	;volatile
 11414                           
 11415                           ;mcc_generated_files/adcc.c: 106:     ADCLK = 0x1F;
 11416  003C6A  0E1F               	movlw	31
 11417  003C6C  6FFF               	movwf	255,b	;volatile
 11418                           
 11419                           ;mcc_generated_files/adcc.c: 108:     ADCON0 = 0x84;
 11420  003C6E  0E84               	movlw	132
 11421  003C70  6FF8               	movwf	248,b	;volatile
 11422  003C72                     
 11423                           ; BSR set to: 62
 11424  003C72  0012               	return		;funcret
 11425  003C74                     __end_of_ADCC_Initialize:
 11426                           	callstack 0
 11427                           
 11428 ;; *************** function _UART1_tx_vect_isr *****************
 11429 ;; Defined at:
 11430 ;;		line 235 in file "mcc_generated_files/uart1.c"
 11431 ;; Parameters:    Size  Location     Type
 11432 ;;		None
 11433 ;; Auto vars:     Size  Location     Type
 11434 ;;		None
 11435 ;; Return value:  Size  Location     Type
 11436 ;;                  1    wreg      void 
 11437 ;; Registers used:
 11438 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 11439 ;; Tracked objects:
 11440 ;;		On entry : 0/0
 11441 ;;		On exit  : 0/0
 11442 ;;		Unchanged: 0/0
 11443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11446 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11447 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11448 ;;Total ram usage:        1 bytes
 11449 ;; Hardware stack levels used: 1
 11450 ;; Hardware stack levels required when called: 5
 11451 ;; This function calls:
 11452 ;;		Absolute function
 11453 ;;		_UART1_Transmit_ISR
 11454 ;; This function is called by:
 11455 ;;		Interrupt level 1
 11456 ;; This function uses a non-reentrant model
 11457 ;;
 11458                           
 11459                           	psect	text66
 11460  003EF4                     __ptext66:
 11461                           	callstack 0
 11462  003EF4                     _UART1_tx_vect_isr:
 11463                           	callstack 14
 11464                           
 11465                           ; BSR set to: 62
 11466                           ;incstack = 0
 11467  003EF4  006F FF60  F011    	movff	status,??_UART1_tx_vect_isr
 11468  003EFA                     
 11469                           ;mcc_generated_files/uart1.c: 237:     if(UART1_TxInterruptHandler)
 11470  003EFA  0100               	movlb	0	; () banked
 11471  003EFC  51FA               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 11472  003EFE  11FB               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 11473  003F00  B4D8               	btfsc	status,2,c
 11474  003F02  EF85  F01F         	goto	i1u504_21
 11475  003F06  EF87  F01F         	goto	i1u504_20
 11476  003F0A                     i1u504_21:
 11477  003F0A  EF93  F01F         	goto	i1l324
 11478  003F0E                     i1u504_20:
 11479  003F0E                     
 11480                           ; BSR set to: 0
 11481                           ;mcc_generated_files/uart1.c: 238:     {;mcc_generated_files/uart1.c: 239:         UART1
      +                          _TxInterruptHandler();
 11482  003F0E  D802               	call	i1u505_28
 11483  003F10  EF93  F01F         	goto	i1u505_29
 11484  003F14                     i1u505_28:
 11485  003F14  0005               	push	
 11486  003F16  6EFA               	movwf	pclath,c
 11487  003F18  51FA               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 11488  003F1A  6EFD               	movwf	tosl,c
 11489  003F1C  51FB               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 11490  003F1E  6EFE               	movwf	tosh,c
 11491  003F20  6AFF               	clrf	tosu,c
 11492  003F22  50FA               	movf	pclath,w,c
 11493  003F24  0012               	return		;indir
 11494  003F26                     i1u505_29:
 11495  003F26                     i1l324:
 11496  003F26  0060  F047  FFD8   	movff	??_UART1_tx_vect_isr,status
 11497  003F2C  0011               	retfie		f
 11498  003F2E                     __end_of_UART1_tx_vect_isr:
 11499                           	callstack 0
 11500                           
 11501 ;; *************** function _UART1_Transmit_ISR *****************
 11502 ;; Defined at:
 11503 ;;		line 253 in file "mcc_generated_files/uart1.c"
 11504 ;; Parameters:    Size  Location     Type
 11505 ;;		None
 11506 ;; Auto vars:     Size  Location     Type
 11507 ;;		None
 11508 ;; Return value:  Size  Location     Type
 11509 ;;                  1    wreg      void 
 11510 ;; Registers used:
 11511 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11512 ;; Tracked objects:
 11513 ;;		On entry : 0/0
 11514 ;;		On exit  : 0/0
 11515 ;;		Unchanged: 0/0
 11516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11521 ;;Total ram usage:        0 bytes
 11522 ;; Hardware stack levels used: 1
 11523 ;; Hardware stack levels required when called: 4
 11524 ;; This function calls:
 11525 ;;		Nothing
 11526 ;; This function is called by:
 11527 ;;		_UART1_Initialize
 11528 ;;		_UART1_tx_vect_isr
 11529 ;; This function uses a non-reentrant model
 11530 ;;
 11531                           
 11532                           	psect	text67
 11533  003E36                     __ptext67:
 11534                           	callstack 0
 11535  003E36                     _UART1_Transmit_ISR:
 11536                           	callstack 14
 11537  003E36                     
 11538                           ;mcc_generated_files/uart1.c: 256:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
 11539  003E36  0E08               	movlw	8
 11540  003E38  604C               	cpfslt	_uart1TxBufferRemaining^0,c	;volatile
 11541  003E3A  EF21  F01F         	goto	i1u485_21
 11542  003E3E  EF23  F01F         	goto	i1u485_20
 11543  003E42                     i1u485_21:
 11544  003E42  EF3A  F01F         	goto	i1l333
 11545  003E46                     i1u485_20:
 11546  003E46                     
 11547                           ;mcc_generated_files/uart1.c: 257:     {;mcc_generated_files/uart1.c: 258:         U1TXB
      +                           = uart1TxBuffer[uart1TxTail++];
 11548  003E46  0E70               	movlw	low _uart1TxBuffer
 11549  003E48  2446               	addwf	_uart1TxTail^0,w,c	;volatile
 11550  003E4A  6ED9               	movwf	fsr2l,c
 11551  003E4C  6ADA               	clrf	fsr2h,c
 11552  003E4E  0E00               	movlw	high _uart1TxBuffer
 11553  003E50  22DA               	addwfc	fsr2h,f,c
 11554  003E52  50DF               	movf	indf2,w,c
 11555  003E54  013D               	movlb	61	; () banked
 11556  003E56  6FEA               	movwf	234,b	;volatile
 11557  003E58                     
 11558                           ; BSR set to: 61
 11559  003E58  2A46               	incf	_uart1TxTail^0,f,c	;volatile
 11560  003E5A                     
 11561                           ; BSR set to: 61
 11562                           ;mcc_generated_files/uart1.c: 259:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
 11563  003E5A  0E07               	movlw	7
 11564  003E5C  6446               	cpfsgt	_uart1TxTail^0,c	;volatile
 11565  003E5E  EF33  F01F         	goto	i1u486_21
 11566  003E62  EF35  F01F         	goto	i1u486_20
 11567  003E66                     i1u486_21:
 11568  003E66  EF37  F01F         	goto	i1l5868
 11569  003E6A                     i1u486_20:
 11570  003E6A                     
 11571                           ; BSR set to: 61
 11572                           ;mcc_generated_files/uart1.c: 260:         {;mcc_generated_files/uart1.c: 261:          
      +                             uart1TxTail = 0;
 11573  003E6A  0E00               	movlw	0
 11574  003E6C  6E46               	movwf	_uart1TxTail^0,c	;volatile
 11575  003E6E                     i1l5868:
 11576                           
 11577                           ; BSR set to: 61
 11578                           ;mcc_generated_files/uart1.c: 263:         uart1TxBufferRemaining++;
 11579  003E6E  2A4C               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 11580                           
 11581                           ;mcc_generated_files/uart1.c: 264:     }
 11582  003E70  EF3C  F01F         	goto	i1l336
 11583  003E74                     i1l333:
 11584                           
 11585                           ;mcc_generated_files/uart1.c: 266:     {;mcc_generated_files/uart1.c: 267:         PIE3b
      +                          its.U1TXIE = 0;
 11586  003E74  0139               	movlb	57	; () banked
 11587  003E76  9993               	bcf	147,4,b	;volatile
 11588  003E78                     i1l336:
 11589  003E78  0012               	return		;funcret
 11590  003E7A                     __end_of_UART1_Transmit_ISR:
 11591                           	callstack 0
 11592                           
 11593 ;; *************** function _UART1_rx_vect_isr *****************
 11594 ;; Defined at:
 11595 ;;		line 243 in file "mcc_generated_files/uart1.c"
 11596 ;; Parameters:    Size  Location     Type
 11597 ;;		None
 11598 ;; Auto vars:     Size  Location     Type
 11599 ;;		None
 11600 ;; Return value:  Size  Location     Type
 11601 ;;                  1    wreg      void 
 11602 ;; Registers used:
 11603 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 11604 ;; Tracked objects:
 11605 ;;		On entry : 0/0
 11606 ;;		On exit  : 0/0
 11607 ;;		Unchanged: 0/0
 11608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11611 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11612 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11613 ;;Total ram usage:        1 bytes
 11614 ;; Hardware stack levels used: 1
 11615 ;; Hardware stack levels required when called: 7
 11616 ;; This function calls:
 11617 ;;		Absolute function
 11618 ;;		_UART1_Receive_ISR
 11619 ;; This function is called by:
 11620 ;;		Interrupt level 1
 11621 ;; This function uses a non-reentrant model
 11622 ;;
 11623                           
 11624                           	psect	text68
 11625  003F30                     __ptext68:
 11626                           	callstack 0
 11627  003F30                     _UART1_rx_vect_isr:
 11628                           	callstack 12
 11629                           
 11630                           ;incstack = 0
 11631  003F30  006F FF60  F012    	movff	status,??_UART1_rx_vect_isr
 11632  003F36                     
 11633                           ;mcc_generated_files/uart1.c: 245:     if(UART1_RxInterruptHandler)
 11634  003F36  0100               	movlb	0	; () banked
 11635  003F38  51FC               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 11636  003F3A  11FD               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 11637  003F3C  B4D8               	btfsc	status,2,c
 11638  003F3E  EFA3  F01F         	goto	i1u506_21
 11639  003F42  EFA5  F01F         	goto	i1u506_20
 11640  003F46                     i1u506_21:
 11641  003F46  EFB1  F01F         	goto	i1l330
 11642  003F4A                     i1u506_20:
 11643  003F4A                     
 11644                           ; BSR set to: 0
 11645                           ;mcc_generated_files/uart1.c: 246:     {;mcc_generated_files/uart1.c: 247:         UART1
      +                          _RxInterruptHandler();
 11646  003F4A  D802               	call	i1u507_28
 11647  003F4C  EFB1  F01F         	goto	i1u507_29
 11648  003F50                     i1u507_28:
 11649  003F50  0005               	push	
 11650  003F52  6EFA               	movwf	pclath,c
 11651  003F54  51FC               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 11652  003F56  6EFD               	movwf	tosl,c
 11653  003F58  51FD               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 11654  003F5A  6EFE               	movwf	tosh,c
 11655  003F5C  6AFF               	clrf	tosu,c
 11656  003F5E  50FA               	movf	pclath,w,c
 11657  003F60  0012               	return		;indir
 11658  003F62                     i1u507_29:
 11659  003F62                     i1l330:
 11660  003F62  0060  F04B  FFD8   	movff	??_UART1_rx_vect_isr,status
 11661  003F68  0011               	retfie		f
 11662  003F6A                     __end_of_UART1_rx_vect_isr:
 11663                           	callstack 0
 11664                           
 11665 ;; *************** function _UART1_Receive_ISR *****************
 11666 ;; Defined at:
 11667 ;;		line 273 in file "mcc_generated_files/uart1.c"
 11668 ;; Parameters:    Size  Location     Type
 11669 ;;		None
 11670 ;; Auto vars:     Size  Location     Type
 11671 ;;		None
 11672 ;; Return value:  Size  Location     Type
 11673 ;;                  1    wreg      void 
 11674 ;; Registers used:
 11675 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 11676 ;; Tracked objects:
 11677 ;;		On entry : 0/0
 11678 ;;		On exit  : 0/0
 11679 ;;		Unchanged: 0/0
 11680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11685 ;;Total ram usage:        0 bytes
 11686 ;; Hardware stack levels used: 1
 11687 ;; Hardware stack levels required when called: 6
 11688 ;; This function calls:
 11689 ;;		Absolute function
 11690 ;;		_UART1_DefaultErrorHandler
 11691 ;;		_UART1_DefaultFramingErrorHandler
 11692 ;;		_UART1_DefaultOverrunErrorHandler
 11693 ;;		_UART1_RxDataHandler
 11694 ;; This function is called by:
 11695 ;;		_UART1_Initialize
 11696 ;;		_UART1_rx_vect_isr
 11697 ;; This function uses a non-reentrant model
 11698 ;;
 11699                           
 11700                           	psect	text69
 11701  003836                     __ptext69:
 11702                           	callstack 0
 11703  003836                     _UART1_Receive_ISR:
 11704                           	callstack 12
 11705  003836                     
 11706                           ;mcc_generated_files/uart1.c: 276:     uart1RxStatusBuffer[uart1RxHead].status = 0;
 11707  003836  0E60               	movlw	low _uart1RxStatusBuffer
 11708  003838  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 11709  00383A  6ED9               	movwf	fsr2l,c
 11710  00383C  6ADA               	clrf	fsr2h,c
 11711  00383E  0E00               	movlw	high _uart1RxStatusBuffer
 11712  003840  22DA               	addwfc	fsr2h,f,c
 11713  003842  0E00               	movlw	0
 11714  003844  6EDF               	movwf	indf2,c
 11715  003846                     
 11716                           ;mcc_generated_files/uart1.c: 278:     if(U1ERRIRbits.FERIF){
 11717  003846  013D               	movlb	61	; () banked
 11718  003848  A7F9               	btfss	249,3,b	;volatile
 11719  00384A  EF29  F01C         	goto	i1u487_21
 11720  00384E  EF2B  F01C         	goto	i1u487_20
 11721  003852                     i1u487_21:
 11722  003852  EF3F  F01C         	goto	i1l5878
 11723  003856                     i1u487_20:
 11724  003856                     
 11725                           ; BSR set to: 61
 11726                           ;mcc_generated_files/uart1.c: 279:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
 11727  003856  0E60               	movlw	low _uart1RxStatusBuffer
 11728  003858  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 11729  00385A  6ED9               	movwf	fsr2l,c
 11730  00385C  6ADA               	clrf	fsr2h,c
 11731  00385E  0E00               	movlw	high _uart1RxStatusBuffer
 11732  003860  22DA               	addwfc	fsr2h,f,c
 11733  003862  0100               	movlb	0	; () banked
 11734  003864  82DF               	bsf	indf2,1,c
 11735  003866                     
 11736                           ; BSR set to: 0
 11737                           ;mcc_generated_files/uart1.c: 280:         UART1_FramingErrorHandler();
 11738  003866  D802               	call	i1u488_28
 11739  003868  EF3F  F01C         	goto	i1u488_29
 11740  00386C                     i1u488_28:
 11741  00386C  0005               	push	
 11742  00386E  6EFA               	movwf	pclath,c
 11743  003870  51F8               	movf	_UART1_FramingErrorHandler& (0+255),w,b
 11744  003872  6EFD               	movwf	tosl,c
 11745  003874  51F9               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
 11746  003876  6EFE               	movwf	tosh,c
 11747  003878  6AFF               	clrf	tosu,c
 11748  00387A  50FA               	movf	pclath,w,c
 11749  00387C  0012               	return		;indir
 11750  00387E                     i1u488_29:
 11751  00387E                     i1l5878:
 11752                           
 11753                           ;mcc_generated_files/uart1.c: 283:     if(U1ERRIRbits.RXFOIF){
 11754  00387E  013D               	movlb	61	; () banked
 11755  003880  A3F9               	btfss	249,1,b	;volatile
 11756  003882  EF45  F01C         	goto	i1u489_21
 11757  003886  EF47  F01C         	goto	i1u489_20
 11758  00388A                     i1u489_21:
 11759  00388A  EF5B  F01C         	goto	i1l5884
 11760  00388E                     i1u489_20:
 11761  00388E                     
 11762                           ; BSR set to: 61
 11763                           ;mcc_generated_files/uart1.c: 284:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
 11764  00388E  0E60               	movlw	low _uart1RxStatusBuffer
 11765  003890  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 11766  003892  6ED9               	movwf	fsr2l,c
 11767  003894  6ADA               	clrf	fsr2h,c
 11768  003896  0E00               	movlw	high _uart1RxStatusBuffer
 11769  003898  22DA               	addwfc	fsr2h,f,c
 11770  00389A  0100               	movlb	0	; () banked
 11771  00389C  84DF               	bsf	indf2,2,c
 11772  00389E                     
 11773                           ; BSR set to: 0
 11774                           ;mcc_generated_files/uart1.c: 285:         UART1_OverrunErrorHandler();
 11775  00389E  D802               	call	i1u490_28
 11776  0038A0  EF5B  F01C         	goto	i1u490_29
 11777  0038A4                     i1u490_28:
 11778  0038A4  0005               	push	
 11779  0038A6  6EFA               	movwf	pclath,c
 11780  0038A8  51F6               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
 11781  0038AA  6EFD               	movwf	tosl,c
 11782  0038AC  51F7               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
 11783  0038AE  6EFE               	movwf	tosh,c
 11784  0038B0  6AFF               	clrf	tosu,c
 11785  0038B2  50FA               	movf	pclath,w,c
 11786  0038B4  0012               	return		;indir
 11787  0038B6                     i1u490_29:
 11788  0038B6                     i1l5884:
 11789                           
 11790                           ;mcc_generated_files/uart1.c: 288:     if(uart1RxStatusBuffer[uart1RxHead].status){
 11791  0038B6  0E60               	movlw	low _uart1RxStatusBuffer
 11792  0038B8  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 11793  0038BA  6ED9               	movwf	fsr2l,c
 11794  0038BC  6ADA               	clrf	fsr2h,c
 11795  0038BE  0E00               	movlw	high _uart1RxStatusBuffer
 11796  0038C0  22DA               	addwfc	fsr2h,f,c
 11797  0038C2  50DF               	movf	indf2,w,c
 11798  0038C4  B4D8               	btfsc	status,2,c
 11799  0038C6  EF67  F01C         	goto	i1u491_21
 11800  0038CA  EF69  F01C         	goto	i1u491_20
 11801  0038CE                     i1u491_21:
 11802  0038CE  EF78  F01C         	goto	i1l5888
 11803  0038D2                     i1u491_20:
 11804  0038D2                     
 11805                           ;mcc_generated_files/uart1.c: 289:         UART1_ErrorHandler();
 11806  0038D2  D802               	call	i1u492_28
 11807  0038D4  EF76  F01C         	goto	i1u492_29
 11808  0038D8                     i1u492_28:
 11809  0038D8  0005               	push	
 11810  0038DA  6EFA               	movwf	pclath,c
 11811  0038DC  0100               	movlb	0	; () banked
 11812  0038DE  51F4               	movf	_UART1_ErrorHandler& (0+255),w,b
 11813  0038E0  6EFD               	movwf	tosl,c
 11814  0038E2  51F5               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
 11815  0038E4  6EFE               	movwf	tosh,c
 11816  0038E6  6AFF               	clrf	tosu,c
 11817  0038E8  50FA               	movf	pclath,w,c
 11818  0038EA  0012               	return		;indir
 11819  0038EC                     i1u492_29:
 11820                           
 11821                           ;mcc_generated_files/uart1.c: 290:     } else {
 11822  0038EC  EF7A  F01C         	goto	i1l343
 11823  0038F0                     i1l5888:
 11824                           
 11825                           ;mcc_generated_files/uart1.c: 291:         UART1_RxDataHandler();
 11826  0038F0  EC92  F021         	call	_UART1_RxDataHandler	;wreg free
 11827  0038F4                     i1l343:
 11828  0038F4  0012               	return		;funcret
 11829  0038F6                     __end_of_UART1_Receive_ISR:
 11830                           	callstack 0
 11831                           
 11832 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
 11833 ;; Defined at:
 11834 ;;		line 309 in file "mcc_generated_files/uart1.c"
 11835 ;; Parameters:    Size  Location     Type
 11836 ;;		None
 11837 ;; Auto vars:     Size  Location     Type
 11838 ;;		None
 11839 ;; Return value:  Size  Location     Type
 11840 ;;                  1    wreg      void 
 11841 ;; Registers used:
 11842 ;;		None
 11843 ;; Tracked objects:
 11844 ;;		On entry : 0/0
 11845 ;;		On exit  : 0/0
 11846 ;;		Unchanged: 0/0
 11847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11851 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11852 ;;Total ram usage:        0 bytes
 11853 ;; Hardware stack levels used: 1
 11854 ;; Hardware stack levels required when called: 4
 11855 ;; This function calls:
 11856 ;;		Nothing
 11857 ;; This function is called by:
 11858 ;;		_UART1_Initialize
 11859 ;;		_UART1_Receive_ISR
 11860 ;; This function uses a non-reentrant model
 11861 ;;
 11862                           
 11863                           	psect	text70
 11864  004578                     __ptext70:
 11865                           	callstack 0
 11866  004578                     _UART1_DefaultOverrunErrorHandler:
 11867                           	callstack 13
 11868  004578  0012               	return		;funcret
 11869  00457A                     __end_of_UART1_DefaultOverrunErrorHandler:
 11870                           	callstack 0
 11871                           
 11872 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
 11873 ;; Defined at:
 11874 ;;		line 307 in file "mcc_generated_files/uart1.c"
 11875 ;; Parameters:    Size  Location     Type
 11876 ;;		None
 11877 ;; Auto vars:     Size  Location     Type
 11878 ;;		None
 11879 ;; Return value:  Size  Location     Type
 11880 ;;                  1    wreg      void 
 11881 ;; Registers used:
 11882 ;;		None
 11883 ;; Tracked objects:
 11884 ;;		On entry : 0/0
 11885 ;;		On exit  : 0/0
 11886 ;;		Unchanged: 0/0
 11887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11892 ;;Total ram usage:        0 bytes
 11893 ;; Hardware stack levels used: 1
 11894 ;; Hardware stack levels required when called: 4
 11895 ;; This function calls:
 11896 ;;		Nothing
 11897 ;; This function is called by:
 11898 ;;		_UART1_Initialize
 11899 ;;		_UART1_Receive_ISR
 11900 ;; This function uses a non-reentrant model
 11901 ;;
 11902                           
 11903                           	psect	text71
 11904  00457A                     __ptext71:
 11905                           	callstack 0
 11906  00457A                     _UART1_DefaultFramingErrorHandler:
 11907                           	callstack 13
 11908  00457A  0012               	return		;funcret
 11909  00457C                     __end_of_UART1_DefaultFramingErrorHandler:
 11910                           	callstack 0
 11911                           
 11912 ;; *************** function _UART1_DefaultErrorHandler *****************
 11913 ;; Defined at:
 11914 ;;		line 311 in file "mcc_generated_files/uart1.c"
 11915 ;; Parameters:    Size  Location     Type
 11916 ;;		None
 11917 ;; Auto vars:     Size  Location     Type
 11918 ;;		None
 11919 ;; Return value:  Size  Location     Type
 11920 ;;                  1    wreg      void 
 11921 ;; Registers used:
 11922 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11923 ;; Tracked objects:
 11924 ;;		On entry : 0/0
 11925 ;;		On exit  : 0/0
 11926 ;;		Unchanged: 0/0
 11927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11932 ;;Total ram usage:        0 bytes
 11933 ;; Hardware stack levels used: 1
 11934 ;; Hardware stack levels required when called: 5
 11935 ;; This function calls:
 11936 ;;		_UART1_RxDataHandler
 11937 ;; This function is called by:
 11938 ;;		_UART1_Initialize
 11939 ;;		_UART1_Receive_ISR
 11940 ;; This function uses a non-reentrant model
 11941 ;;
 11942                           
 11943                           	psect	text72
 11944  004572                     __ptext72:
 11945                           	callstack 0
 11946  004572                     _UART1_DefaultErrorHandler:
 11947                           	callstack 12
 11948  004572                     
 11949                           ;mcc_generated_files/uart1.c: 312:     UART1_RxDataHandler();
 11950  004572  EC92  F021         	call	_UART1_RxDataHandler	;wreg free
 11951  004576  0012               	return		;funcret
 11952  004578                     __end_of_UART1_DefaultErrorHandler:
 11953                           	callstack 0
 11954                           
 11955 ;; *************** function _UART1_RxDataHandler *****************
 11956 ;; Defined at:
 11957 ;;		line 297 in file "mcc_generated_files/uart1.c"
 11958 ;; Parameters:    Size  Location     Type
 11959 ;;		None
 11960 ;; Auto vars:     Size  Location     Type
 11961 ;;		None
 11962 ;; Return value:  Size  Location     Type
 11963 ;;                  1    wreg      void 
 11964 ;; Registers used:
 11965 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11966 ;; Tracked objects:
 11967 ;;		On entry : 0/0
 11968 ;;		On exit  : 0/0
 11969 ;;		Unchanged: 0/0
 11970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11975 ;;Total ram usage:        0 bytes
 11976 ;; Hardware stack levels used: 1
 11977 ;; Hardware stack levels required when called: 4
 11978 ;; This function calls:
 11979 ;;		Nothing
 11980 ;; This function is called by:
 11981 ;;		_UART1_Receive_ISR
 11982 ;;		_UART1_DefaultErrorHandler
 11983 ;; This function uses a non-reentrant model
 11984 ;;
 11985                           
 11986                           	psect	text73
 11987  004324                     __ptext73:
 11988                           	callstack 0
 11989  004324                     _UART1_RxDataHandler:
 11990                           	callstack 13
 11991  004324                     
 11992                           ;mcc_generated_files/uart1.c: 299:     uart1RxBuffer[uart1RxHead++] = U1RXB;
 11993  004324  0E68               	movlw	low _uart1RxBuffer
 11994  004326  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 11995  004328  6ED9               	movwf	fsr2l,c
 11996  00432A  6ADA               	clrf	fsr2h,c
 11997  00432C  0E00               	movlw	high _uart1RxBuffer
 11998  00432E  22DA               	addwfc	fsr2h,f,c
 11999  004330  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 12000  004336  2A45               	incf	_uart1RxHead^0,f,c	;volatile
 12001  004338                     
 12002                           ;mcc_generated_files/uart1.c: 300:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 12003  004338  0E07               	movlw	7
 12004  00433A  6445               	cpfsgt	_uart1RxHead^0,c	;volatile
 12005  00433C  EFA2  F021         	goto	i1u360_21
 12006  004340  EFA4  F021         	goto	i1u360_20
 12007  004344                     i1u360_21:
 12008  004344  EFA6  F021         	goto	i1l4926
 12009  004348                     i1u360_20:
 12010  004348                     
 12011                           ;mcc_generated_files/uart1.c: 301:     {;mcc_generated_files/uart1.c: 302:         uart1
      +                          RxHead = 0;
 12012  004348  0E00               	movlw	0
 12013  00434A  6E45               	movwf	_uart1RxHead^0,c	;volatile
 12014  00434C                     i1l4926:
 12015                           
 12016                           ;mcc_generated_files/uart1.c: 304:     uart1RxCount++;
 12017  00434C  2A43               	incf	_uart1RxCount^0,f,c	;volatile
 12018  00434E  0012               	return		;funcret
 12019  004350                     __end_of_UART1_RxDataHandler:
 12020                           	callstack 0
 12021                           
 12022 ;; *************** function _TMR4_ISR *****************
 12023 ;; Defined at:
 12024 ;;		line 166 in file "mcc_generated_files/tmr4.c"
 12025 ;; Parameters:    Size  Location     Type
 12026 ;;		None
 12027 ;; Auto vars:     Size  Location     Type
 12028 ;;		None
 12029 ;; Return value:  Size  Location     Type
 12030 ;;                  1    wreg      void 
 12031 ;; Registers used:
 12032 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 12033 ;; Tracked objects:
 12034 ;;		On entry : 0/0
 12035 ;;		On exit  : 0/0
 12036 ;;		Unchanged: 0/0
 12037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12040 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12041 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12042 ;;Total ram usage:        1 bytes
 12043 ;; Hardware stack levels used: 1
 12044 ;; Hardware stack levels required when called: 6
 12045 ;; This function calls:
 12046 ;;		_TMR4_CallBack
 12047 ;; This function is called by:
 12048 ;;		Interrupt level 1
 12049 ;; This function uses a non-reentrant model
 12050 ;;
 12051                           
 12052                           	psect	text74
 12053  003FA4                     __ptext74:
 12054                           	callstack 0
 12055  003FA4                     _TMR4_ISR:
 12056                           	callstack 13
 12057                           
 12058                           ;incstack = 0
 12059  003FA4  006F FF60  F013    	movff	status,??_TMR4_ISR
 12060  003FAA                     
 12061                           ;mcc_generated_files/tmr4.c: 168:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr4.c: 171:     PIR7bits.TMR4IF = 0;
 12062  003FAA  0139               	movlb	57	; () banked
 12063  003FAC  91A7               	bcf	167,0,b	;volatile
 12064  003FAE                     
 12065                           ; BSR set to: 57
 12066                           ;mcc_generated_files/tmr4.c: 174:     if (++CountCallBack >= 10)
 12067  003FAE  4A40               	infsnz	TMR4_ISR@CountCallBack^0,f,c	;volatile
 12068  003FB0  2A41               	incf	(TMR4_ISR@CountCallBack+1)^0,f,c	;volatile
 12069  003FB2  5041               	movf	(TMR4_ISR@CountCallBack+1)^0,w,c	;volatile
 12070  003FB4  E109               	bnz	i1u512_20
 12071  003FB6  0E0A               	movlw	10
 12072  003FB8  5C40               	subwf	TMR4_ISR@CountCallBack^0,w,c	;volatile
 12073  003FBA  A0D8               	btfss	status,0,c
 12074  003FBC  EFE2  F01F         	goto	i1u512_21
 12075  003FC0  EFE4  F01F         	goto	i1u512_20
 12076  003FC4                     i1u512_21:
 12077  003FC4  EFEA  F01F         	goto	i1l688
 12078  003FC8                     i1u512_20:
 12079  003FC8                     
 12080                           ; BSR set to: 57
 12081                           ;mcc_generated_files/tmr4.c: 175:     {;mcc_generated_files/tmr4.c: 177:         TMR4_Ca
      +                          llBack();
 12082  003FC8  EC4F  F021         	call	_TMR4_CallBack	;wreg free
 12083  003FCC                     
 12084                           ;mcc_generated_files/tmr4.c: 180:         CountCallBack = 0;
 12085  003FCC  0E00               	movlw	0
 12086  003FCE  6E41               	movwf	(TMR4_ISR@CountCallBack+1)^0,c	;volatile
 12087  003FD0  0E00               	movlw	0
 12088  003FD2  6E40               	movwf	TMR4_ISR@CountCallBack^0,c	;volatile
 12089  003FD4                     i1l688:
 12090  003FD4  0060  F04F  FFD8   	movff	??_TMR4_ISR,status
 12091  003FDA  0011               	retfie		f
 12092  003FDC                     __end_of_TMR4_ISR:
 12093                           	callstack 0
 12094                           
 12095 ;; *************** function _TMR4_CallBack *****************
 12096 ;; Defined at:
 12097 ;;		line 184 in file "mcc_generated_files/tmr4.c"
 12098 ;; Parameters:    Size  Location     Type
 12099 ;;		None
 12100 ;; Auto vars:     Size  Location     Type
 12101 ;;		None
 12102 ;; Return value:  Size  Location     Type
 12103 ;;                  1    wreg      void 
 12104 ;; Registers used:
 12105 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 12106 ;; Tracked objects:
 12107 ;;		On entry : 0/0
 12108 ;;		On exit  : 0/0
 12109 ;;		Unchanged: 0/0
 12110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12115 ;;Total ram usage:        0 bytes
 12116 ;; Hardware stack levels used: 1
 12117 ;; Hardware stack levels required when called: 5
 12118 ;; This function calls:
 12119 ;;		Absolute function
 12120 ;;		_TMR4_10msISR
 12121 ;;		_TMR4_DefaultInterruptHandler
 12122 ;; This function is called by:
 12123 ;;		_TMR4_ISR
 12124 ;; This function uses a non-reentrant model
 12125 ;;
 12126                           
 12127                           	psect	text75
 12128  00429E                     __ptext75:
 12129                           	callstack 0
 12130  00429E                     _TMR4_CallBack:
 12131                           	callstack 13
 12132  00429E                     
 12133                           ;mcc_generated_files/tmr4.c: 188:     if(TMR4_InterruptHandler)
 12134  00429E  0100               	movlb	0	; () banked
 12135  0042A0  51E8               	movf	_TMR4_InterruptHandler& (0+255),w,b
 12136  0042A2  11E9               	iorwf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 12137  0042A4  B4D8               	btfsc	status,2,c
 12138  0042A6  EF57  F021         	goto	i1u496_21
 12139  0042AA  EF59  F021         	goto	i1u496_20
 12140  0042AE                     i1u496_21:
 12141  0042AE  EF65  F021         	goto	i1l692
 12142  0042B2                     i1u496_20:
 12143  0042B2                     
 12144                           ; BSR set to: 0
 12145                           ;mcc_generated_files/tmr4.c: 189:     {;mcc_generated_files/tmr4.c: 190:         TMR4_In
      +                          terruptHandler();
 12146  0042B2  D802               	call	i1u497_28
 12147  0042B4  EF65  F021         	goto	i1u497_29
 12148  0042B8                     i1u497_28:
 12149  0042B8  0005               	push	
 12150  0042BA  6EFA               	movwf	pclath,c
 12151  0042BC  51E8               	movf	_TMR4_InterruptHandler& (0+255),w,b
 12152  0042BE  6EFD               	movwf	tosl,c
 12153  0042C0  51E9               	movf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 12154  0042C2  6EFE               	movwf	tosh,c
 12155  0042C4  6AFF               	clrf	tosu,c
 12156  0042C6  50FA               	movf	pclath,w,c
 12157  0042C8  0012               	return		;indir
 12158  0042CA                     i1u497_29:
 12159  0042CA                     i1l692:
 12160  0042CA  0012               	return		;funcret
 12161  0042CC                     __end_of_TMR4_CallBack:
 12162                           	callstack 0
 12163                           
 12164 ;; *************** function _TMR4_10msISR *****************
 12165 ;; Defined at:
 12166 ;;		line 62 in file "main.c"
 12167 ;; Parameters:    Size  Location     Type
 12168 ;;		None
 12169 ;; Auto vars:     Size  Location     Type
 12170 ;;		None
 12171 ;; Return value:  Size  Location     Type
 12172 ;;                  1    wreg      void 
 12173 ;; Registers used:
 12174 ;;		status,2, status,0
 12175 ;; Tracked objects:
 12176 ;;		On entry : 0/0
 12177 ;;		On exit  : 0/0
 12178 ;;		Unchanged: 0/0
 12179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12184 ;;Total ram usage:        0 bytes
 12185 ;; Hardware stack levels used: 1
 12186 ;; Hardware stack levels required when called: 4
 12187 ;; This function calls:
 12188 ;;		Nothing
 12189 ;; This function is called by:
 12190 ;;		_main
 12191 ;;		_TMR4_CallBack
 12192 ;; This function uses a non-reentrant model
 12193 ;;
 12194                           
 12195                           	psect	text76
 12196  004568                     __ptext76:
 12197                           	callstack 0
 12198  004568                     _TMR4_10msISR:
 12199                           	callstack 13
 12200  004568                     
 12201                           ;main.c: 63:     ++cycle10ms;
 12202  004568  0100               	movlb	0	; () banked
 12203  00456A  2BA7               	incf	_cycle10ms& (0+255),f,b	;volatile
 12204                           
 12205                           ;main.c: 64:     ++roundTimeCount;
 12206  00456C  4A3E               	infsnz	_roundTimeCount^0,f,c	;volatile
 12207  00456E  2A3F               	incf	(_roundTimeCount+1)^0,f,c	;volatile
 12208  004570                     
 12209                           ; BSR set to: 0
 12210  004570  0012               	return		;funcret
 12211  004572                     __end_of_TMR4_10msISR:
 12212                           	callstack 0
 12213                           
 12214 ;; *************** function _TMR4_DefaultInterruptHandler *****************
 12215 ;; Defined at:
 12216 ;;		line 198 in file "mcc_generated_files/tmr4.c"
 12217 ;; Parameters:    Size  Location     Type
 12218 ;;		None
 12219 ;; Auto vars:     Size  Location     Type
 12220 ;;		None
 12221 ;; Return value:  Size  Location     Type
 12222 ;;                  1    wreg      void 
 12223 ;; Registers used:
 12224 ;;		None
 12225 ;; Tracked objects:
 12226 ;;		On entry : 0/0
 12227 ;;		On exit  : 0/0
 12228 ;;		Unchanged: 0/0
 12229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12234 ;;Total ram usage:        0 bytes
 12235 ;; Hardware stack levels used: 1
 12236 ;; Hardware stack levels required when called: 4
 12237 ;; This function calls:
 12238 ;;		Nothing
 12239 ;; This function is called by:
 12240 ;;		_TMR4_Initialize
 12241 ;;		_TMR4_CallBack
 12242 ;; This function uses a non-reentrant model
 12243 ;;
 12244                           
 12245                           	psect	text77
 12246  00457C                     __ptext77:
 12247                           	callstack 0
 12248  00457C                     _TMR4_DefaultInterruptHandler:
 12249                           	callstack 13
 12250  00457C  0012               	return		;funcret
 12251  00457E                     __end_of_TMR4_DefaultInterruptHandler:
 12252                           	callstack 0
 12253                           
 12254 ;; *************** function _Default_ISR *****************
 12255 ;; Defined at:
 12256 ;;		line 83 in file "mcc_generated_files/interrupt_manager.c"
 12257 ;; Parameters:    Size  Location     Type
 12258 ;;		None
 12259 ;; Auto vars:     Size  Location     Type
 12260 ;;		None
 12261 ;; Return value:  Size  Location     Type
 12262 ;;                  1    wreg      void 
 12263 ;; Registers used:
 12264 ;;		None
 12265 ;; Tracked objects:
 12266 ;;		On entry : 0/0
 12267 ;;		On exit  : 0/0
 12268 ;;		Unchanged: 0/0
 12269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12274 ;;Total ram usage:        0 bytes
 12275 ;; Hardware stack levels used: 1
 12276 ;; This function calls:
 12277 ;;		Nothing
 12278 ;; This function is called by:
 12279 ;;		Interrupt level 2
 12280 ;; This function uses a non-reentrant model
 12281 ;;
 12282                           
 12283                           	psect	text78
 12284  004580                     __ptext78:
 12285                           	callstack 0
 12286  004580                     _Default_ISR:
 12287                           	callstack 15
 12288  004580  0011               	retfie		f
 12289  004582                     __end_of_Default_ISR:
 12290                           	callstack 0
 12291                           
 12292 ;; *************** function _CCP3_CaptureISR *****************
 12293 ;; Defined at:
 12294 ;;		line 104 in file "mcc_generated_files/ccp3.c"
 12295 ;; Parameters:    Size  Location     Type
 12296 ;;		None
 12297 ;; Auto vars:     Size  Location     Type
 12298 ;;  module          2    2[COMRAM] struct CCPR3Reg_tag
 12299 ;; Return value:  Size  Location     Type
 12300 ;;                  1    wreg      void 
 12301 ;; Registers used:
 12302 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 12303 ;; Tracked objects:
 12304 ;;		On entry : 0/0
 12305 ;;		On exit  : 0/0
 12306 ;;		Unchanged: 0/0
 12307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12309 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12311 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12312 ;;Total ram usage:        2 bytes
 12313 ;; Hardware stack levels used: 1
 12314 ;; Hardware stack levels required when called: 1
 12315 ;; This function calls:
 12316 ;;		Absolute function
 12317 ;;		_CCP3_DefaultCallBack
 12318 ;; This function is called by:
 12319 ;;		Interrupt level 2
 12320 ;; This function uses a non-reentrant model
 12321 ;;
 12322                           
 12323                           	psect	text79
 12324  0040E4                     __ptext79:
 12325                           	callstack 0
 12326  0040E4                     _CCP3_CaptureISR:
 12327                           	callstack 14
 12328  0040E4                     
 12329                           ;mcc_generated_files/ccp3.c: 106:     CCP3_PERIOD_REG_T module;;mcc_generated_files/ccp3
      +                          .c: 109:     PIR9bits.CCP3IF = 0;
 12330  0040E4  0139               	movlb	57	; () banked
 12331  0040E6  93A9               	bcf	169,1,b	;volatile
 12332                           
 12333                           ;mcc_generated_files/ccp3.c: 112:     module.ccpr3l = CCPR3L;
 12334  0040E8  006F FDD0  F003    	movff	16244,CCP3_CaptureISR@module	;volatile
 12335                           
 12336                           ;mcc_generated_files/ccp3.c: 113:     module.ccpr3h = CCPR3H;
 12337  0040EE  006F FDD4  F004    	movff	16245,CCP3_CaptureISR@module+1	;volatile
 12338  0040F4                     
 12339                           ; BSR set to: 57
 12340                           ;mcc_generated_files/ccp3.c: 116:     CCP3_CallBack(module.ccpr3_16Bit);
 12341  0040F4  C003  F001         	movff	CCP3_CaptureISR@module,CCP3_DefaultCallBack@capturedValue
 12342  0040F8  C004  F002         	movff	CCP3_CaptureISR@module+1,CCP3_DefaultCallBack@capturedValue+1
 12343  0040FC  D802               	call	i2u508_48
 12344  0040FE  EF8B  F020         	goto	i2u508_49
 12345  004102                     i2u508_48:
 12346  004102  0005               	push	
 12347  004104  6EFA               	movwf	pclath,c
 12348  004106  0100               	movlb	0	; () banked
 12349  004108  51F2               	movf	_CCP3_CallBack& (0+255),w,b
 12350  00410A  6EFD               	movwf	tosl,c
 12351  00410C  51F3               	movf	(_CCP3_CallBack+1)& (0+255),w,b
 12352  00410E  6EFE               	movwf	tosh,c
 12353  004110  6AFF               	clrf	tosu,c
 12354  004112  50FA               	movf	pclath,w,c
 12355  004114  0012               	return		;indir
 12356  004116                     i2u508_49:
 12357  004116  0011               	retfie		f
 12358  004118                     __end_of_CCP3_CaptureISR:
 12359                           	callstack 0
 12360                           
 12361 ;; *************** function _CCP3_DefaultCallBack *****************
 12362 ;; Defined at:
 12363 ;;		line 64 in file "mcc_generated_files/ccp3.c"
 12364 ;; Parameters:    Size  Location     Type
 12365 ;;  capturedValu    2    0[COMRAM] unsigned short 
 12366 ;; Auto vars:     Size  Location     Type
 12367 ;;		None
 12368 ;; Return value:  Size  Location     Type
 12369 ;;                  1    wreg      void 
 12370 ;; Registers used:
 12371 ;;		wreg, status,2, status,0
 12372 ;; Tracked objects:
 12373 ;;		On entry : 0/0
 12374 ;;		On exit  : 0/0
 12375 ;;		Unchanged: 0/0
 12376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12377 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12380 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12381 ;;Total ram usage:        2 bytes
 12382 ;; Hardware stack levels used: 1
 12383 ;; This function calls:
 12384 ;;		Nothing
 12385 ;; This function is called by:
 12386 ;;		_CCP3_Initialize
 12387 ;;		_CCP3_CaptureISR
 12388 ;; This function uses a non-reentrant model
 12389 ;;
 12390                           
 12391                           	psect	text80
 12392  0041E2                     __ptext80:
 12393                           	callstack 0
 12394  0041E2                     _CCP3_DefaultCallBack:
 12395                           	callstack 14
 12396  0041E2                     
 12397                           ;mcc_generated_files/ccp3.c: 64: static void CCP3_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp3.c: 65: {;mcc_generated_files/ccp3.c: 67:     if(PORTDbits.RD7
      +                          ) {
 12398  0041E2  AECD               	btfss	205,7,c	;volatile
 12399  0041E4  EFF6  F020         	goto	i2u493_41
 12400  0041E8  EFF8  F020         	goto	i2u493_40
 12401  0041EC                     i2u493_41:
 12402  0041EC  EFFE  F020         	goto	i2l5894
 12403  0041F0                     i2u493_40:
 12404  0041F0                     
 12405                           ;mcc_generated_files/ccp3.c: 68:         distLeftM = capturedValue;
 12406  0041F0  C001  F0A0         	movff	CCP3_DefaultCallBack@capturedValue,_distLeftM
 12407  0041F4  C002  F0A1         	movff	CCP3_DefaultCallBack@capturedValue+1,_distLeftM+1
 12408                           
 12409                           ;mcc_generated_files/ccp3.c: 69:     } else {
 12410  0041F8  EF08  F021         	goto	i2l438
 12411  0041FC                     i2l5894:
 12412                           
 12413                           ;mcc_generated_files/ccp3.c: 70:         distLeft = capturedValue - distLeftM;
 12414  0041FC  0100               	movlb	0	; () banked
 12415  0041FE  51A0               	movf	_distLeftM& (0+255),w,b
 12416  004200  5C01               	subwf	CCP3_DefaultCallBack@capturedValue^0,w,c
 12417  004202  6FA2               	movwf	_distLeft& (0+255),b	;volatile
 12418  004204  51A1               	movf	(_distLeftM+1)& (0+255),w,b
 12419  004206  5802               	subwfb	(CCP3_DefaultCallBack@capturedValue+1)^0,w,c
 12420  004208  6FA3               	movwf	(_distLeft+1)& (0+255),b	;volatile
 12421  00420A                     
 12422                           ; BSR set to: 0
 12423                           ;mcc_generated_files/ccp3.c: 71:         distLeft >>= 1;
 12424  00420A  90D8               	bcf	status,0,c
 12425  00420C  33A3               	rrcf	(_distLeft+1)& (0+255),f,b	;volatile
 12426  00420E  33A2               	rrcf	_distLeft& (0+255),f,b	;volatile
 12427  004210                     i2l438:
 12428  004210  0012               	return		;funcret
 12429  004212                     __end_of_CCP3_DefaultCallBack:
 12430                           	callstack 0
 12431                           
 12432 ;; *************** function _CCP4_CaptureISR *****************
 12433 ;; Defined at:
 12434 ;;		line 107 in file "mcc_generated_files/ccp4.c"
 12435 ;; Parameters:    Size  Location     Type
 12436 ;;		None
 12437 ;; Auto vars:     Size  Location     Type
 12438 ;;  module          2    6[COMRAM] struct CCPR4Reg_tag
 12439 ;; Return value:  Size  Location     Type
 12440 ;;                  1    wreg      void 
 12441 ;; Registers used:
 12442 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 12443 ;; Tracked objects:
 12444 ;;		On entry : 0/0
 12445 ;;		On exit  : 0/0
 12446 ;;		Unchanged: 0/0
 12447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12449 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12451 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12452 ;;Total ram usage:        2 bytes
 12453 ;; Hardware stack levels used: 1
 12454 ;; Hardware stack levels required when called: 1
 12455 ;; This function calls:
 12456 ;;		Absolute function
 12457 ;;		_CCP4_DefaultCallBack
 12458 ;; This function is called by:
 12459 ;;		Interrupt level 2
 12460 ;; This function uses a non-reentrant model
 12461 ;;
 12462                           
 12463                           	psect	text81
 12464  004118                     __ptext81:
 12465                           	callstack 0
 12466  004118                     _CCP4_CaptureISR:
 12467                           	callstack 14
 12468  004118                     
 12469                           ;mcc_generated_files/ccp4.c: 109:     CCP4_PERIOD_REG_T module;;mcc_generated_files/ccp4
      +                          .c: 112:     PIR10bits.CCP4IF = 0;
 12470  004118  0139               	movlb	57	; () banked
 12471  00411A  91AA               	bcf	170,0,b	;volatile
 12472                           
 12473                           ;mcc_generated_files/ccp4.c: 115:     module.ccpr4l = CCPR4L;
 12474  00411C  006F FDC0  F007    	movff	16240,CCP4_CaptureISR@module	;volatile
 12475                           
 12476                           ;mcc_generated_files/ccp4.c: 116:     module.ccpr4h = CCPR4H;
 12477  004122  006F FDC4  F008    	movff	16241,CCP4_CaptureISR@module+1	;volatile
 12478  004128                     
 12479                           ; BSR set to: 57
 12480                           ;mcc_generated_files/ccp4.c: 119:     CCP4_CallBack(module.ccpr4_16Bit);
 12481  004128  C007  F005         	movff	CCP4_CaptureISR@module,CCP4_DefaultCallBack@capturedValue
 12482  00412C  C008  F006         	movff	CCP4_CaptureISR@module+1,CCP4_DefaultCallBack@capturedValue+1
 12483  004130  D802               	call	i2u509_48
 12484  004132  EFA5  F020         	goto	i2u509_49
 12485  004136                     i2u509_48:
 12486  004136  0005               	push	
 12487  004138  6EFA               	movwf	pclath,c
 12488  00413A  0100               	movlb	0	; () banked
 12489  00413C  51F0               	movf	_CCP4_CallBack& (0+255),w,b
 12490  00413E  6EFD               	movwf	tosl,c
 12491  004140  51F1               	movf	(_CCP4_CallBack+1)& (0+255),w,b
 12492  004142  6EFE               	movwf	tosh,c
 12493  004144  6AFF               	clrf	tosu,c
 12494  004146  50FA               	movf	pclath,w,c
 12495  004148  0012               	return		;indir
 12496  00414A                     i2u509_49:
 12497  00414A  0011               	retfie		f
 12498  00414C                     __end_of_CCP4_CaptureISR:
 12499                           	callstack 0
 12500                           
 12501 ;; *************** function _CCP4_DefaultCallBack *****************
 12502 ;; Defined at:
 12503 ;;		line 64 in file "mcc_generated_files/ccp4.c"
 12504 ;; Parameters:    Size  Location     Type
 12505 ;;  capturedValu    2    4[COMRAM] unsigned short 
 12506 ;; Auto vars:     Size  Location     Type
 12507 ;;		None
 12508 ;; Return value:  Size  Location     Type
 12509 ;;                  1    wreg      void 
 12510 ;; Registers used:
 12511 ;;		wreg, status,2, status,0
 12512 ;; Tracked objects:
 12513 ;;		On entry : 0/0
 12514 ;;		On exit  : 0/0
 12515 ;;		Unchanged: 0/0
 12516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12517 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12520 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12521 ;;Total ram usage:        2 bytes
 12522 ;; Hardware stack levels used: 1
 12523 ;; This function calls:
 12524 ;;		Nothing
 12525 ;; This function is called by:
 12526 ;;		_CCP4_Initialize
 12527 ;;		_CCP4_CaptureISR
 12528 ;; This function uses a non-reentrant model
 12529 ;;
 12530                           
 12531                           	psect	text82
 12532  004212                     __ptext82:
 12533                           	callstack 0
 12534  004212                     _CCP4_DefaultCallBack:
 12535                           	callstack 14
 12536  004212                     
 12537                           ;mcc_generated_files/ccp4.c: 64: static void CCP4_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp4.c: 65: {;mcc_generated_files/ccp4.c: 67:     if(PORTDbits.RD6
      +                          ) {
 12538  004212  ACCD               	btfss	205,6,c	;volatile
 12539  004214  EF0E  F021         	goto	i2u494_41
 12540  004218  EF10  F021         	goto	i2u494_40
 12541  00421C                     i2u494_41:
 12542  00421C  EF16  F021         	goto	i2l5902
 12543  004220                     i2u494_40:
 12544  004220                     
 12545                           ;mcc_generated_files/ccp4.c: 68:         distRightM = capturedValue;
 12546  004220  C005  F09C         	movff	CCP4_DefaultCallBack@capturedValue,_distRightM
 12547  004224  C006  F09D         	movff	CCP4_DefaultCallBack@capturedValue+1,_distRightM+1
 12548                           
 12549                           ;mcc_generated_files/ccp4.c: 70:     } else {
 12550  004228  EF20  F021         	goto	i2l476
 12551  00422C                     i2l5902:
 12552                           
 12553                           ;mcc_generated_files/ccp4.c: 71:         distRight = capturedValue - distRightM;
 12554  00422C  0100               	movlb	0	; () banked
 12555  00422E  519C               	movf	_distRightM& (0+255),w,b
 12556  004230  5C05               	subwf	CCP4_DefaultCallBack@capturedValue^0,w,c
 12557  004232  6F9E               	movwf	_distRight& (0+255),b	;volatile
 12558  004234  519D               	movf	(_distRightM+1)& (0+255),w,b
 12559  004236  5806               	subwfb	(CCP4_DefaultCallBack@capturedValue+1)^0,w,c
 12560  004238  6F9F               	movwf	(_distRight+1)& (0+255),b	;volatile
 12561  00423A                     
 12562                           ; BSR set to: 0
 12563                           ;mcc_generated_files/ccp4.c: 72:         distRight >>= 1;
 12564  00423A  90D8               	bcf	status,0,c
 12565  00423C  339F               	rrcf	(_distRight+1)& (0+255),f,b	;volatile
 12566  00423E  339E               	rrcf	_distRight& (0+255),f,b	;volatile
 12567  004240                     i2l476:
 12568  004240  0012               	return		;funcret
 12569  004242                     __end_of_CCP4_DefaultCallBack:
 12570                           	callstack 0
 12571                           
 12572 ;; *************** function _TMR5_GATE_ISR *****************
 12573 ;; Defined at:
 12574 ;;		line 175 in file "mcc_generated_files/tmr5.c"
 12575 ;; Parameters:    Size  Location     Type
 12576 ;;		None
 12577 ;; Auto vars:     Size  Location     Type
 12578 ;;		None
 12579 ;; Return value:  Size  Location     Type
 12580 ;;                  1    wreg      void 
 12581 ;; Registers used:
 12582 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 12583 ;; Tracked objects:
 12584 ;;		On entry : 0/0
 12585 ;;		On exit  : 0/0
 12586 ;;		Unchanged: 0/0
 12587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12592 ;;Total ram usage:        0 bytes
 12593 ;; Hardware stack levels used: 1
 12594 ;; Hardware stack levels required when called: 3
 12595 ;; This function calls:
 12596 ;;		Absolute function
 12597 ;;		_TMR5_DefaultGateInterruptHandler
 12598 ;; This function is called by:
 12599 ;;		Interrupt level 2
 12600 ;; This function uses a non-reentrant model
 12601 ;;
 12602                           
 12603                           	psect	text83
 12604  004180                     __ptext83:
 12605                           	callstack 0
 12606  004180                     _TMR5_GATE_ISR:
 12607                           	callstack 12
 12608  004180                     
 12609                           ;mcc_generated_files/tmr5.c: 178:     PIR8bits.TMR5GIF = 0;
 12610  004180  0139               	movlb	57	; () banked
 12611  004182  9FA8               	bcf	168,7,b	;volatile
 12612  004184                     
 12613                           ; BSR set to: 57
 12614                           ;mcc_generated_files/tmr5.c: 180:     if(TMR5_GateInterruptHandler)
 12615  004184  0100               	movlb	0	; () banked
 12616  004186  51EC               	movf	_TMR5_GateInterruptHandler& (0+255),w,b
 12617  004188  11ED               	iorwf	(_TMR5_GateInterruptHandler+1)& (0+255),w,b
 12618  00418A  B4D8               	btfsc	status,2,c
 12619  00418C  EFCA  F020         	goto	i2u510_41
 12620  004190  EFCC  F020         	goto	i2u510_40
 12621  004194                     i2u510_41:
 12622  004194  EFD8  F020         	goto	i2l552
 12623  004198                     i2u510_40:
 12624  004198                     
 12625                           ; BSR set to: 0
 12626                           ;mcc_generated_files/tmr5.c: 181:     {;mcc_generated_files/tmr5.c: 182:         TMR5_Ga
      +                          teInterruptHandler();
 12627  004198  D802               	call	i2u511_48
 12628  00419A  EFD8  F020         	goto	i2u511_49
 12629  00419E                     i2u511_48:
 12630  00419E  0005               	push	
 12631  0041A0  6EFA               	movwf	pclath,c
 12632  0041A2  51EC               	movf	_TMR5_GateInterruptHandler& (0+255),w,b
 12633  0041A4  6EFD               	movwf	tosl,c
 12634  0041A6  51ED               	movf	(_TMR5_GateInterruptHandler+1)& (0+255),w,b
 12635  0041A8  6EFE               	movwf	tosh,c
 12636  0041AA  6AFF               	clrf	tosu,c
 12637  0041AC  50FA               	movf	pclath,w,c
 12638  0041AE  0012               	return		;indir
 12639  0041B0                     i2u511_49:
 12640  0041B0                     i2l552:
 12641  0041B0  0011               	retfie		f
 12642  0041B2                     __end_of_TMR5_GATE_ISR:
 12643                           	callstack 0
 12644                           
 12645 ;; *************** function _TMR5_DefaultGateInterruptHandler *****************
 12646 ;; Defined at:
 12647 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 12648 ;; Parameters:    Size  Location     Type
 12649 ;;		None
 12650 ;; Auto vars:     Size  Location     Type
 12651 ;;		None
 12652 ;; Return value:  Size  Location     Type
 12653 ;;                  1    wreg      void 
 12654 ;; Registers used:
 12655 ;;		wreg, status,2, status,0, cstack
 12656 ;; Tracked objects:
 12657 ;;		On entry : 0/0
 12658 ;;		On exit  : 0/0
 12659 ;;		Unchanged: 0/0
 12660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12665 ;;Total ram usage:        0 bytes
 12666 ;; Hardware stack levels used: 1
 12667 ;; Hardware stack levels required when called: 2
 12668 ;; This function calls:
 12669 ;;		_TMR5_ReadTimer
 12670 ;;		_TMR5_Reload
 12671 ;; This function is called by:
 12672 ;;		_TMR5_Initialize
 12673 ;;		_TMR5_GATE_ISR
 12674 ;; This function uses a non-reentrant model
 12675 ;;
 12676                           
 12677                           	psect	text84
 12678  004434                     __ptext84:
 12679                           	callstack 0
 12680  004434                     _TMR5_DefaultGateInterruptHandler:
 12681                           	callstack 12
 12682  004434                     
 12683                           ;mcc_generated_files/tmr5.c: 194:     distFront = TMR5_ReadTimer();
 12684  004434  ECF8  F021         	call	_TMR5_ReadTimer	;wreg free
 12685  004438  C009  F0AA         	movff	?_TMR5_ReadTimer,_distFront	;volatile
 12686  00443C  C00A  F0AB         	movff	?_TMR5_ReadTimer+1,_distFront+1	;volatile
 12687  004440                     
 12688                           ;mcc_generated_files/tmr5.c: 195:     distFront >>= 1;
 12689  004440  0100               	movlb	0	; () banked
 12690  004442  90D8               	bcf	status,0,c
 12691  004444  33AB               	rrcf	(_distFront+1)& (0+255),f,b	;volatile
 12692  004446  33AA               	rrcf	_distFront& (0+255),f,b	;volatile
 12693  004448                     
 12694                           ; BSR set to: 0
 12695                           ;mcc_generated_files/tmr5.c: 196:     TMR5_Reload();
 12696  004448  EC7B  F022         	call	_TMR5_Reload	;wreg free
 12697  00444C                     
 12698                           ;mcc_generated_files/tmr5.c: 197:     PIR8bits.TMR5GIF = 0;
 12699  00444C  0139               	movlb	57	; () banked
 12700  00444E  9FA8               	bcf	168,7,b	;volatile
 12701  004450                     
 12702                           ; BSR set to: 57
 12703  004450  0012               	return		;funcret
 12704  004452                     __end_of_TMR5_DefaultGateInterruptHandler:
 12705                           	callstack 0
 12706                           
 12707 ;; *************** function _TMR5_Reload *****************
 12708 ;; Defined at:
 12709 ;;		line 155 in file "mcc_generated_files/tmr5.c"
 12710 ;; Parameters:    Size  Location     Type
 12711 ;;		None
 12712 ;; Auto vars:     Size  Location     Type
 12713 ;;		None
 12714 ;; Return value:  Size  Location     Type
 12715 ;;                  1    wreg      void 
 12716 ;; Registers used:
 12717 ;;		wreg, status,2, cstack
 12718 ;; Tracked objects:
 12719 ;;		On entry : 0/0
 12720 ;;		On exit  : 0/0
 12721 ;;		Unchanged: 0/0
 12722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12727 ;;Total ram usage:        0 bytes
 12728 ;; Hardware stack levels used: 1
 12729 ;; Hardware stack levels required when called: 1
 12730 ;; This function calls:
 12731 ;;		_TMR5_WriteTimer
 12732 ;; This function is called by:
 12733 ;;		_TMR5_DefaultGateInterruptHandler
 12734 ;; This function uses a non-reentrant model
 12735 ;;
 12736                           
 12737                           	psect	text85
 12738  0044F6                     __ptext85:
 12739                           	callstack 0
 12740  0044F6                     _TMR5_Reload:
 12741                           	callstack 12
 12742  0044F6                     
 12743                           ;mcc_generated_files/tmr5.c: 157:     TMR5_WriteTimer(timer5ReloadVal);
 12744  0044F6  C0EE  F009         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 12745  0044FA  C0EF  F00A         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 12746  0044FE  ECA8  F021         	call	_TMR5_WriteTimer	;wreg free
 12747  004502  0012               	return		;funcret
 12748  004504                     __end_of_TMR5_Reload:
 12749                           	callstack 0
 12750                           
 12751 ;; *************** function _TMR5_WriteTimer *****************
 12752 ;; Defined at:
 12753 ;;		line 133 in file "mcc_generated_files/tmr5.c"
 12754 ;; Parameters:    Size  Location     Type
 12755 ;;  timerVal        2    8[COMRAM] unsigned short 
 12756 ;; Auto vars:     Size  Location     Type
 12757 ;;		None
 12758 ;; Return value:  Size  Location     Type
 12759 ;;                  1    wreg      void 
 12760 ;; Registers used:
 12761 ;;		wreg, status,2
 12762 ;; Tracked objects:
 12763 ;;		On entry : 0/0
 12764 ;;		On exit  : 0/0
 12765 ;;		Unchanged: 0/0
 12766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12767 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12770 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12771 ;;Total ram usage:        2 bytes
 12772 ;; Hardware stack levels used: 1
 12773 ;; This function calls:
 12774 ;;		Nothing
 12775 ;; This function is called by:
 12776 ;;		_TMR5_Reload
 12777 ;; This function uses a non-reentrant model
 12778 ;;
 12779                           
 12780                           	psect	text86
 12781  004350                     __ptext86:
 12782                           	callstack 0
 12783  004350                     _TMR5_WriteTimer:
 12784                           	callstack 12
 12785  004350                     
 12786                           ;mcc_generated_files/tmr5.c: 133: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 134: {;mcc_generated_files/tmr5.c: 135:     if (T5CONbits.NOT_SYNC == 1)
 12787  004350  A49A               	btfss	154,2,c	;volatile
 12788  004352  EFAD  F021         	goto	i2u361_41
 12789  004356  EFAF  F021         	goto	i2u361_40
 12790  00435A                     i2u361_41:
 12791  00435A  EFB8  F021         	goto	i2l4944
 12792  00435E                     i2u361_40:
 12793  00435E                     
 12794                           ;mcc_generated_files/tmr5.c: 136:     {;mcc_generated_files/tmr5.c: 138:         T5CONbi
      +                          ts.TMR5ON = 0;
 12795  00435E  909A               	bcf	154,0,c	;volatile
 12796  004360                     
 12797                           ;mcc_generated_files/tmr5.c: 141:         TMR5H = (uint8_t)(timerVal >> 8);
 12798  004360  500A               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
 12799  004362  6E99               	movwf	153,c	;volatile
 12800  004364                     
 12801                           ;mcc_generated_files/tmr5.c: 142:         TMR5L = (uint8_t)timerVal;
 12802  004364  0060  F027  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 12803  00436A                     
 12804                           ;mcc_generated_files/tmr5.c: 145:         T5CONbits.TMR5ON =1;
 12805  00436A  809A               	bsf	154,0,c	;volatile
 12806                           
 12807                           ;mcc_generated_files/tmr5.c: 146:     }
 12808  00436C  EFBD  F021         	goto	i2l534
 12809  004370                     i2l4944:
 12810                           
 12811                           ;mcc_generated_files/tmr5.c: 148:     {;mcc_generated_files/tmr5.c: 150:         TMR5H =
      +                           (uint8_t)(timerVal >> 8);
 12812  004370  500A               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
 12813  004372  6E99               	movwf	153,c	;volatile
 12814  004374                     
 12815                           ;mcc_generated_files/tmr5.c: 151:         TMR5L = (uint8_t)timerVal;
 12816  004374  0060  F027  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 12817  00437A                     i2l534:
 12818  00437A  0012               	return		;funcret
 12819  00437C                     __end_of_TMR5_WriteTimer:
 12820                           	callstack 0
 12821                           
 12822 ;; *************** function _TMR5_ReadTimer *****************
 12823 ;; Defined at:
 12824 ;;		line 117 in file "mcc_generated_files/tmr5.c"
 12825 ;; Parameters:    Size  Location     Type
 12826 ;;		None
 12827 ;; Auto vars:     Size  Location     Type
 12828 ;;  readVal         2   12[COMRAM] unsigned short 
 12829 ;;  readValLow      1   15[COMRAM] unsigned char 
 12830 ;;  readValHigh     1   14[COMRAM] unsigned char 
 12831 ;; Return value:  Size  Location     Type
 12832 ;;                  2    8[COMRAM] unsigned short 
 12833 ;; Registers used:
 12834 ;;		wreg, status,2
 12835 ;; Tracked objects:
 12836 ;;		On entry : 0/0
 12837 ;;		On exit  : 0/0
 12838 ;;		Unchanged: 0/0
 12839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12840 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12841 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12842 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12843 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12844 ;;Total ram usage:        8 bytes
 12845 ;; Hardware stack levels used: 1
 12846 ;; This function calls:
 12847 ;;		Nothing
 12848 ;; This function is called by:
 12849 ;;		_TMR5_DefaultGateInterruptHandler
 12850 ;; This function uses a non-reentrant model
 12851 ;;
 12852                           
 12853                           	psect	text87
 12854  0043F0                     __ptext87:
 12855                           	callstack 0
 12856  0043F0                     _TMR5_ReadTimer:
 12857                           	callstack 13
 12858  0043F0                     
 12859                           ;mcc_generated_files/tmr5.c: 119:     uint16_t readVal;;mcc_generated_files/tmr5.c: 120:
      +                               uint8_t readValHigh;;mcc_generated_files/tmr5.c: 121:     uint8_t readValLow;;mcc_g
      +                          enerated_files/tmr5.c: 123:     T5CONbits.T5RD16 = 1;
 12860  0043F0  829A               	bsf	154,1,c	;volatile
 12861                           
 12862                           ;mcc_generated_files/tmr5.c: 125:     readValLow = TMR5L;
 12863  0043F2  006F FE60  F010    	movff	16280,TMR5_ReadTimer@readValLow	;volatile
 12864                           
 12865                           ;mcc_generated_files/tmr5.c: 126:     readValHigh = TMR5H;
 12866  0043F8  006F FE64  F00F    	movff	16281,TMR5_ReadTimer@readValHigh	;volatile
 12867  0043FE                     
 12868                           ;mcc_generated_files/tmr5.c: 128:     readVal = ((uint16_t)readValHigh << 8) | readValLo
      +                          w;
 12869  0043FE  500F               	movf	TMR5_ReadTimer@readValHigh^0,w,c
 12870  004400  6E0B               	movwf	??_TMR5_ReadTimer^0,c
 12871  004402  5010               	movf	TMR5_ReadTimer@readValLow^0,w,c
 12872  004404  6E0D               	movwf	TMR5_ReadTimer@readVal^0,c
 12873  004406  C00B  F00E         	movff	??_TMR5_ReadTimer,TMR5_ReadTimer@readVal+1
 12874  00440A                     
 12875                           ;mcc_generated_files/tmr5.c: 130:     return readVal;
 12876  00440A  C00D  F009         	movff	TMR5_ReadTimer@readVal,?_TMR5_ReadTimer
 12877  00440E  C00E  F00A         	movff	TMR5_ReadTimer@readVal+1,?_TMR5_ReadTimer+1
 12878  004412  0012               	return		;funcret
 12879  004414                     __end_of_TMR5_ReadTimer:
 12880                           	callstack 0
 12881                           
 12882 ;; *************** function _SMT1_PR_ACQ_ISR *****************
 12883 ;; Defined at:
 12884 ;;		line 192 in file "mcc_generated_files/smt1.c"
 12885 ;; Parameters:    Size  Location     Type
 12886 ;;		None
 12887 ;; Auto vars:     Size  Location     Type
 12888 ;;		None
 12889 ;; Return value:  Size  Location     Type
 12890 ;;                  1    wreg      void 
 12891 ;; Registers used:
 12892 ;;		wreg, status,2, status,0
 12893 ;; Tracked objects:
 12894 ;;		On entry : 0/0
 12895 ;;		On exit  : 0/0
 12896 ;;		Unchanged: 0/0
 12897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12902 ;;Total ram usage:        0 bytes
 12903 ;; Hardware stack levels used: 1
 12904 ;; This function calls:
 12905 ;;		Nothing
 12906 ;; This function is called by:
 12907 ;;		Interrupt level 2
 12908 ;; This function uses a non-reentrant model
 12909 ;;
 12910                           
 12911                           	psect	text88
 12912  003DA8                     __ptext88:
 12913                           	callstack 0
 12914  003DA8                     _SMT1_PR_ACQ_ISR:
 12915                           	callstack 15
 12916  003DA8                     
 12917                           ;mcc_generated_files/smt1.c: 196:     PIR1bits.SMT1PRAIF = 0;
 12918  003DA8  0139               	movlb	57	; () banked
 12919  003DAA  9DA1               	bcf	161,6,b	;volatile
 12920  003DAC                     
 12921                           ; BSR set to: 57
 12922                           ;mcc_generated_files/smt1.c: 197:     smtPeriod = SMT1CPR;
 12923  003DAC  013F               	movlb	63	; () banked
 12924  003DAE  5115               	movf	21,w,b	;volatile
 12925  003DB0  6E48               	movwf	_smtPeriod^0,c	;volatile
 12926  003DB2  5116               	movf	22,w,b	;volatile
 12927  003DB4  6E49               	movwf	(_smtPeriod+1)^0,c	;volatile
 12928  003DB6  5117               	movf	23,w,b	;volatile
 12929  003DB8  6E4A               	movwf	(_smtPeriod+2)^0,c	;volatile
 12930  003DBA  6A4B               	clrf	(_smtPeriod+3)^0,c	;volatile
 12931  003DBC                     
 12932                           ; BSR set to: 63
 12933                           ;mcc_generated_files/smt1.c: 198:     if(CLC3CONbits.LC3OUT) smtWay++;
 12934  003DBC  013C               	movlb	60	; () banked
 12935  003DBE  AB60               	btfss	96,5,b	;volatile
 12936  003DC0  EFE4  F01E         	goto	i2u513_41
 12937  003DC4  EFE6  F01E         	goto	i2u513_40
 12938  003DC8                     i2u513_41:
 12939  003DC8  EFEF  F01E         	goto	i2l6010
 12940  003DCC                     i2u513_40:
 12941  003DCC                     
 12942                           ; BSR set to: 60
 12943  003DCC  0E01               	movlw	1
 12944  003DCE  0100               	movlb	0	; () banked
 12945  003DD0  2778               	addwf	_smtWay& (0+255),f,b	;volatile
 12946  003DD2  0E00               	movlw	0
 12947  003DD4  2379               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 12948  003DD6  237A               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 12949  003DD8  237B               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 12950  003DDA  EFF8  F01E         	goto	i2l856
 12951  003DDE                     i2l6010:
 12952                           
 12953                           ; BSR set to: 60
 12954  003DDE  0EFF               	movlw	255
 12955  003DE0  0100               	movlb	0	; () banked
 12956  003DE2  2778               	addwf	_smtWay& (0+255),f,b	;volatile
 12957  003DE4  0EFF               	movlw	255
 12958  003DE6  2379               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 12959  003DE8  0EFF               	movlw	255
 12960  003DEA  237A               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 12961  003DEC  0EFF               	movlw	255
 12962  003DEE  237B               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 12963  003DF0                     i2l856:
 12964                           
 12965                           ; BSR set to: 0
 12966  003DF0  0011               	retfie		f
 12967  003DF2                     __end_of_SMT1_PR_ACQ_ISR:
 12968                           	callstack 0
 12969                           
 12970 ;; *************** function _SMT1_PW_ACQ_ISR *****************
 12971 ;; Defined at:
 12972 ;;		line 203 in file "mcc_generated_files/smt1.c"
 12973 ;; Parameters:    Size  Location     Type
 12974 ;;		None
 12975 ;; Auto vars:     Size  Location     Type
 12976 ;;		None
 12977 ;; Return value:  Size  Location     Type
 12978 ;;                  1    wreg      void 
 12979 ;; Registers used:
 12980 ;;		wreg, status,2, status,0
 12981 ;; Tracked objects:
 12982 ;;		On entry : 0/0
 12983 ;;		On exit  : 0/0
 12984 ;;		Unchanged: 0/0
 12985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12990 ;;Total ram usage:        0 bytes
 12991 ;; Hardware stack levels used: 1
 12992 ;; This function calls:
 12993 ;;		Nothing
 12994 ;; This function is called by:
 12995 ;;		Interrupt level 2
 12996 ;; This function uses a non-reentrant model
 12997 ;;
 12998                           
 12999                           	psect	text89
 13000  003C74                     __ptext89:
 13001                           	callstack 0
 13002  003C74                     _SMT1_PW_ACQ_ISR:
 13003                           	callstack 15
 13004  003C74                     
 13005                           ;mcc_generated_files/smt1.c: 207:     PIR1bits.SMT1PWAIF = 0;
 13006  003C74  0139               	movlb	57	; () banked
 13007  003C76  9FA1               	bcf	161,7,b	;volatile
 13008  003C78                     
 13009                           ; BSR set to: 57
 13010                           ;mcc_generated_files/smt1.c: 208:     smtDuty = SMT1CPW;
 13011  003C78  013F               	movlb	63	; () banked
 13012  003C7A  5118               	movf	24,w,b	;volatile
 13013  003C7C  0100               	movlb	0	; () banked
 13014  003C7E  6F7C               	movwf	_smtDuty& (0+255),b	;volatile
 13015  003C80  013F               	movlb	63	; () banked
 13016  003C82  5119               	movf	25,w,b	;volatile
 13017  003C84  0100               	movlb	0	; () banked
 13018  003C86  6F7D               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 13019  003C88  013F               	movlb	63	; () banked
 13020  003C8A  511A               	movf	26,w,b	;volatile
 13021  003C8C  0100               	movlb	0	; () banked
 13022  003C8E  6F7E               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 13023  003C90  6B7F               	clrf	(_smtDuty+3)& (0+255),b	;volatile
 13024  003C92                     
 13025                           ; BSR set to: 0
 13026                           ;mcc_generated_files/smt1.c: 209:     if(CLC3CONbits.LC3OUT) smtWay++;
 13027  003C92  013C               	movlb	60	; () banked
 13028  003C94  AB60               	btfss	96,5,b	;volatile
 13029  003C96  EF4F  F01E         	goto	i2u514_41
 13030  003C9A  EF51  F01E         	goto	i2u514_40
 13031  003C9E                     i2u514_41:
 13032  003C9E  EF5A  F01E         	goto	i2l6020
 13033  003CA2                     i2u514_40:
 13034  003CA2                     
 13035                           ; BSR set to: 60
 13036  003CA2  0E01               	movlw	1
 13037  003CA4  0100               	movlb	0	; () banked
 13038  003CA6  2778               	addwf	_smtWay& (0+255),f,b	;volatile
 13039  003CA8  0E00               	movlw	0
 13040  003CAA  2379               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 13041  003CAC  237A               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 13042  003CAE  237B               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 13043  003CB0  EF63  F01E         	goto	i2l863
 13044  003CB4                     i2l6020:
 13045                           
 13046                           ; BSR set to: 60
 13047  003CB4  0EFF               	movlw	255
 13048  003CB6  0100               	movlb	0	; () banked
 13049  003CB8  2778               	addwf	_smtWay& (0+255),f,b	;volatile
 13050  003CBA  0EFF               	movlw	255
 13051  003CBC  2379               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 13052  003CBE  0EFF               	movlw	255
 13053  003CC0  237A               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 13054  003CC2  0EFF               	movlw	255
 13055  003CC4  237B               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 13056  003CC6                     i2l863:
 13057                           
 13058                           ; BSR set to: 0
 13059  003CC6  0011               	retfie		f
 13060  003CC8                     __end_of_SMT1_PW_ACQ_ISR:
 13061                           	callstack 0
 13062                           
 13063 ;; *************** function _SMT1_Overflow_ISR *****************
 13064 ;; Defined at:
 13065 ;;		line 213 in file "mcc_generated_files/smt1.c"
 13066 ;; Parameters:    Size  Location     Type
 13067 ;;		None
 13068 ;; Auto vars:     Size  Location     Type
 13069 ;;		None
 13070 ;; Return value:  Size  Location     Type
 13071 ;;                  1    wreg      void 
 13072 ;; Registers used:
 13073 ;;		wreg, status,2
 13074 ;; Tracked objects:
 13075 ;;		On entry : 0/0
 13076 ;;		On exit  : 0/0
 13077 ;;		Unchanged: 0/0
 13078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13083 ;;Total ram usage:        0 bytes
 13084 ;; Hardware stack levels used: 1
 13085 ;; This function calls:
 13086 ;;		Nothing
 13087 ;; This function is called by:
 13088 ;;		Interrupt level 2
 13089 ;; This function uses a non-reentrant model
 13090 ;;
 13091                           
 13092                           	psect	text90
 13093  0043A4                     __ptext90:
 13094                           	callstack 0
 13095  0043A4                     _SMT1_Overflow_ISR:
 13096                           	callstack 15
 13097  0043A4                     
 13098                           ;mcc_generated_files/smt1.c: 217:     PIR1bits.SMT1IF = 0;
 13099  0043A4  0139               	movlb	57	; () banked
 13100  0043A6  9BA1               	bcf	161,5,b	;volatile
 13101  0043A8                     
 13102                           ; BSR set to: 57
 13103                           ;mcc_generated_files/smt1.c: 218:     smtPeriod = 0;
 13104  0043A8  0E00               	movlw	0
 13105  0043AA  6E48               	movwf	_smtPeriod^0,c	;volatile
 13106  0043AC  0E00               	movlw	0
 13107  0043AE  6E49               	movwf	(_smtPeriod+1)^0,c	;volatile
 13108  0043B0  0E00               	movlw	0
 13109  0043B2  6E4A               	movwf	(_smtPeriod+2)^0,c	;volatile
 13110  0043B4  0E00               	movlw	0
 13111  0043B6  6E4B               	movwf	(_smtPeriod+3)^0,c	;volatile
 13112                           
 13113                           ;mcc_generated_files/smt1.c: 219:     smtDuty = 0;
 13114  0043B8  0E00               	movlw	0
 13115  0043BA  0100               	movlb	0	; () banked
 13116  0043BC  6F7C               	movwf	_smtDuty& (0+255),b	;volatile
 13117  0043BE  0E00               	movlw	0
 13118  0043C0  6F7D               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 13119  0043C2  0E00               	movlw	0
 13120  0043C4  6F7E               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 13121  0043C6  0E00               	movlw	0
 13122  0043C8  6F7F               	movwf	(_smtDuty+3)& (0+255),b	;volatile
 13123  0043CA                     
 13124                           ; BSR set to: 0
 13125  0043CA  0011               	retfie		f
 13126  0043CC                     __end_of_SMT1_Overflow_ISR:
 13127                           	callstack 0
 13128                           
 13129                           ;
 13130                           ; Interrupt Vector Table @ 0x8
 13131                           ;
 13132                           
 13133                           	psect	ivt0x8
 13134  000008                     __pivt0x8:
 13135                           	callstack 0
 13136  000008                     ivt0x8_base:
 13137                           	callstack 0
 13138                           
 13139                           ; Vector 0 : SWINT
 13140  000008  1160               	dw	_Default_ISR shr (0+2)
 13141                           
 13142                           ; Vector 1 : HLVD
 13143  00000A  1160               	dw	_Default_ISR shr (0+2)
 13144                           
 13145                           ; Vector 2 : OSF
 13146  00000C  1160               	dw	_Default_ISR shr (0+2)
 13147                           
 13148                           ; Vector 3 : CSW
 13149  00000E  1160               	dw	_Default_ISR shr (0+2)
 13150                           
 13151                           ; Vector 4 : NVM
 13152  000010  1160               	dw	_Default_ISR shr (0+2)
 13153                           
 13154                           ; Vector 5 : SCAN
 13155  000012  1160               	dw	_Default_ISR shr (0+2)
 13156                           
 13157                           ; Vector 6 : CRC
 13158  000014  1160               	dw	_Default_ISR shr (0+2)
 13159                           
 13160                           ; Vector 7 : IOC
 13161  000016  1160               	dw	_Default_ISR shr (0+2)
 13162                           
 13163                           ; Vector 8 : INT0
 13164  000018  1160               	dw	_Default_ISR shr (0+2)
 13165                           
 13166                           ; Vector 9 : ZCD
 13167  00001A  1160               	dw	_Default_ISR shr (0+2)
 13168                           
 13169                           ; Vector 10 : AD
 13170  00001C  1160               	dw	_Default_ISR shr (0+2)
 13171                           
 13172                           ; Vector 11 : ADT
 13173  00001E  1160               	dw	_Default_ISR shr (0+2)
 13174                           
 13175                           ; Vector 12 : CMP1
 13176  000020  1160               	dw	_Default_ISR shr (0+2)
 13177                           
 13178                           ; Vector 13 : SMT1
 13179  000022  10E9               	dw	_SMT1_Overflow_ISR shr (0+2)
 13180                           
 13181                           ; Vector 14 : SMT1PRA
 13182  000024  0F6A               	dw	_SMT1_PR_ACQ_ISR shr (0+2)
 13183                           
 13184                           ; Vector 15 : SMT1PRW
 13185  000026  0F1D               	dw	_SMT1_PW_ACQ_ISR shr (0+2)
 13186                           
 13187                           ; Vector 16 : DMA1SCNT
 13188  000028  1160               	dw	_Default_ISR shr (0+2)
 13189                           
 13190                           ; Vector 17 : DMA1DCNT
 13191  00002A  1160               	dw	_Default_ISR shr (0+2)
 13192                           
 13193                           ; Vector 18 : DMA1OR
 13194  00002C  1160               	dw	_Default_ISR shr (0+2)
 13195                           
 13196                           ; Vector 19 : DMA1A
 13197  00002E  1160               	dw	_Default_ISR shr (0+2)
 13198                           
 13199                           ; Vector 20 : SPI1RX
 13200  000030  1160               	dw	_Default_ISR shr (0+2)
 13201                           
 13202                           ; Vector 21 : SPI1TX
 13203  000032  1160               	dw	_Default_ISR shr (0+2)
 13204                           
 13205                           ; Vector 22 : SPI1
 13206  000034  1160               	dw	_Default_ISR shr (0+2)
 13207                           
 13208                           ; Vector 23 : I2C1RX
 13209  000036  1160               	dw	_Default_ISR shr (0+2)
 13210                           
 13211                           ; Vector 24 : I2C1TX
 13212  000038  1160               	dw	_Default_ISR shr (0+2)
 13213                           
 13214                           ; Vector 25 : I2C1
 13215  00003A  1160               	dw	_Default_ISR shr (0+2)
 13216                           
 13217                           ; Vector 26 : I2C1E
 13218  00003C  1160               	dw	_Default_ISR shr (0+2)
 13219                           
 13220                           ; Vector 27 : U1RX
 13221  00003E  0FCC               	dw	_UART1_rx_vect_isr shr (0+2)
 13222                           
 13223                           ; Vector 28 : U1TX
 13224  000040  0FBD               	dw	_UART1_tx_vect_isr shr (0+2)
 13225                           
 13226                           ; Vector 29 : U1E
 13227  000042  1160               	dw	_Default_ISR shr (0+2)
 13228                           
 13229                           ; Vector 30 : U1
 13230  000044  1160               	dw	_Default_ISR shr (0+2)
 13231                           
 13232                           ; Vector 31 : TMR0
 13233  000046  1160               	dw	_Default_ISR shr (0+2)
 13234                           
 13235                           ; Vector 32 : TMR1
 13236  000048  1160               	dw	_Default_ISR shr (0+2)
 13237                           
 13238                           ; Vector 33 : TMR1G
 13239  00004A  1160               	dw	_Default_ISR shr (0+2)
 13240                           
 13241                           ; Vector 34 : TMR2
 13242  00004C  1160               	dw	_Default_ISR shr (0+2)
 13243                           
 13244                           ; Vector 35 : CCP1
 13245  00004E  1160               	dw	_Default_ISR shr (0+2)
 13246                           
 13247                           ; Vector 36 : Undefined
 13248  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 13249                           
 13250                           ; Vector 37 : NCO1
 13251  000052  1160               	dw	_Default_ISR shr (0+2)
 13252                           
 13253                           ; Vector 38 : CWG1
 13254  000054  1160               	dw	_Default_ISR shr (0+2)
 13255                           
 13256                           ; Vector 39 : CLC1
 13257  000056  1160               	dw	_Default_ISR shr (0+2)
 13258                           
 13259                           ; Vector 40 : INT1
 13260  000058  1160               	dw	_Default_ISR shr (0+2)
 13261                           
 13262                           ; Vector 41 : CMP2
 13263  00005A  1160               	dw	_Default_ISR shr (0+2)
 13264                           
 13265                           ; Vector 42 : DMA2SCNT
 13266  00005C  1160               	dw	_Default_ISR shr (0+2)
 13267                           
 13268                           ; Vector 43 : DMA2DCNT
 13269  00005E  1160               	dw	_Default_ISR shr (0+2)
 13270                           
 13271                           ; Vector 44 : DMA2OR
 13272  000060  1160               	dw	_Default_ISR shr (0+2)
 13273                           
 13274                           ; Vector 45 : DMA2A
 13275  000062  1160               	dw	_Default_ISR shr (0+2)
 13276                           
 13277                           ; Vector 46 : I2C2RX
 13278  000064  1160               	dw	_Default_ISR shr (0+2)
 13279                           
 13280                           ; Vector 47 : I2C2TX
 13281  000066  1160               	dw	_Default_ISR shr (0+2)
 13282                           
 13283                           ; Vector 48 : I2C2
 13284  000068  1160               	dw	_Default_ISR shr (0+2)
 13285                           
 13286                           ; Vector 49 : I2C2E
 13287  00006A  1160               	dw	_Default_ISR shr (0+2)
 13288                           
 13289                           ; Vector 50 : U2RX
 13290  00006C  1160               	dw	_Default_ISR shr (0+2)
 13291                           
 13292                           ; Vector 51 : U2TX
 13293  00006E  1160               	dw	_Default_ISR shr (0+2)
 13294                           
 13295                           ; Vector 52 : U2E
 13296  000070  1160               	dw	_Default_ISR shr (0+2)
 13297                           
 13298                           ; Vector 53 : U2
 13299  000072  1160               	dw	_Default_ISR shr (0+2)
 13300                           
 13301                           ; Vector 54 : TMR3
 13302  000074  1160               	dw	_Default_ISR shr (0+2)
 13303                           
 13304                           ; Vector 55 : TMR3G
 13305  000076  1160               	dw	_Default_ISR shr (0+2)
 13306                           
 13307                           ; Vector 56 : TMR4
 13308  000078  0FE9               	dw	_TMR4_ISR shr (0+2)
 13309                           
 13310                           ; Vector 57 : CCP2
 13311  00007A  1160               	dw	_Default_ISR shr (0+2)
 13312                           
 13313                           ; Vector 58 : Undefined
 13314  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 13315                           
 13316                           ; Vector 59 : CWG2
 13317  00007E  1160               	dw	_Default_ISR shr (0+2)
 13318                           
 13319                           ; Vector 60 : CLC2
 13320  000080  1160               	dw	_Default_ISR shr (0+2)
 13321                           
 13322                           ; Vector 61 : INT2
 13323  000082  1160               	dw	_Default_ISR shr (0+2)
 13324                           
 13325                           ; Vector 62 : Undefined
 13326  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 13327                           
 13328                           ; Vector 63 : Undefined
 13329  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 13330                           
 13331                           ; Vector 64 : Undefined
 13332  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 13333                           
 13334                           ; Vector 65 : Undefined
 13335  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 13336                           
 13337                           ; Vector 66 : Undefined
 13338  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 13339                           
 13340                           ; Vector 67 : Undefined
 13341  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 13342                           
 13343                           ; Vector 68 : Undefined
 13344  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 13345                           
 13346                           ; Vector 69 : Undefined
 13347  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 13348                           
 13349                           ; Vector 70 : TMR5
 13350  000094  1160               	dw	_Default_ISR shr (0+2)
 13351                           
 13352                           ; Vector 71 : TMR5G
 13353  000096  1060               	dw	_TMR5_GATE_ISR shr (0+2)
 13354                           
 13355                           ; Vector 72 : TMR6
 13356  000098  1160               	dw	_Default_ISR shr (0+2)
 13357                           
 13358                           ; Vector 73 : CCP3
 13359  00009A  1039               	dw	_CCP3_CaptureISR shr (0+2)
 13360                           
 13361                           ; Vector 74 : CWG3
 13362  00009C  1160               	dw	_Default_ISR shr (0+2)
 13363                           
 13364                           ; Vector 75 : CLC3
 13365  00009E  1160               	dw	_Default_ISR shr (0+2)
 13366                           
 13367                           ; Vector 76 : Undefined
 13368  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 13369                           
 13370                           ; Vector 77 : Undefined
 13371  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 13372                           
 13373                           ; Vector 78 : Undefined
 13374  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 13375                           
 13376                           ; Vector 79 : Undefined
 13377  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 13378                           
 13379                           ; Vector 80 : CCP4
 13380  0000A8  1046               	dw	_CCP4_CaptureISR shr (0+2)
 13381                           
 13382                           ; Vector 81 : CLC4
 13383  0000AA  1160               	dw	_Default_ISR shr (0+2)
 13384  0000AC                     ivt0x8_undefint:
 13385                           	callstack 0
 13386  0000AC  00FF               	reset	
 13387                           
 13388                           	psect	text91
 13389  000000                     __ptext91:
 13390                           	callstack 0
 13391  000000                     
 13392                           	psect	rparam
 13393  0000                     
 13394                           	psect	idloc
 13395                           
 13396                           ;Config register IDLOC0 @ 0x200000
 13397                           ;	unspecified, using default values
 13398  200000                     	org	2097152
 13399  200000  0FFF               	dw	4095
 13400                           
 13401                           ;Config register IDLOC1 @ 0x200002
 13402                           ;	unspecified, using default values
 13403  200002                     	org	2097154
 13404  200002  0FFF               	dw	4095
 13405                           
 13406                           ;Config register IDLOC2 @ 0x200004
 13407                           ;	unspecified, using default values
 13408  200004                     	org	2097156
 13409  200004  0FFF               	dw	4095
 13410                           
 13411                           ;Config register IDLOC3 @ 0x200006
 13412                           ;	unspecified, using default values
 13413  200006                     	org	2097158
 13414  200006  0FFF               	dw	4095
 13415                           
 13416                           ;Config register IDLOC4 @ 0x200008
 13417                           ;	unspecified, using default values
 13418  200008                     	org	2097160
 13419  200008  0FFF               	dw	4095
 13420                           
 13421                           ;Config register IDLOC5 @ 0x20000A
 13422                           ;	unspecified, using default values
 13423  20000A                     	org	2097162
 13424  20000A  0FFF               	dw	4095
 13425                           
 13426                           ;Config register IDLOC6 @ 0x20000C
 13427                           ;	unspecified, using default values
 13428  20000C                     	org	2097164
 13429  20000C  0FFF               	dw	4095
 13430                           
 13431                           ;Config register IDLOC7 @ 0x20000E
 13432                           ;	unspecified, using default values
 13433  20000E                     	org	2097166
 13434  20000E  0FFF               	dw	4095
 13435                           
 13436                           	psect	config
 13437                           
 13438                           ;Config register CONFIG1L @ 0x300000
 13439                           ;	External Oscillator Selection
 13440                           ;	FEXTOSC = OFF, Oscillator not enabled
 13441                           ;	Reset Oscillator Selection
 13442                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 13443  300000                     	org	3145728
 13444  300000  8C                 	db	140
 13445                           
 13446                           ;Config register CONFIG1H @ 0x300001
 13447                           ;	Clock out Enable bit
 13448                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 13449                           ;	PRLOCKED One-Way Set Enable bit
 13450                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
 13451                           ;	Clock Switch Enable bit
 13452                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 13453                           ;	Fail-Safe Clock Monitor Enable bit
 13454                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 13455  300001                     	org	3145729
 13456  300001  FF                 	db	255
 13457                           
 13458                           ;Config register CONFIG2L @ 0x300002
 13459                           ;	MCLR Enable bit
 13460                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 13461                           ;	Power-up timer selection bits
 13462                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 13463                           ;	Multi-vector enable bit
 13464                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 13465                           ;	IVTLOCK bit One-way set enable bit
 13466                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
 13467                           ;	Low Power BOR Enable bit
 13468                           ;	LPBOREN = OFF, ULPBOR disabled
 13469                           ;	Brown-out Reset Enable bits
 13470                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 13471  300002                     	org	3145730
 13472  300002  FF                 	db	255
 13473                           
 13474                           ;Config register CONFIG2H @ 0x300003
 13475                           ;	Brown-out Reset Voltage Selection bits
 13476                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 13477                           ;	ZCD Disable bit
 13478                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 13479                           ;	PPSLOCK bit One-Way Set Enable bit
 13480                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 13481                           ;	Stack Full/Underflow Reset Enable bit
 13482                           ;	STVREN = ON, Stack full/underflow will cause Reset
 13483                           ;	Debugger Enable bit
 13484                           ;	DEBUG = OFF, Background debugger disabled
 13485                           ;	Extended Instruction Set Enable bit
 13486                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 13487  300003                     	org	3145731
 13488  300003  FF                 	db	255
 13489                           
 13490                           ;Config register CONFIG3L @ 0x300004
 13491                           ;	WDT Period selection bits
 13492                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 13493                           ;	WDT operating mode
 13494                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 13495  300004                     	org	3145732
 13496  300004  9F                 	db	159
 13497                           
 13498                           ;Config register CONFIG3H @ 0x300005
 13499                           ;	WDT Window Select bits
 13500                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 13501                           ;	WDT input clock selector
 13502                           ;	WDTCCS = SC, Software Control
 13503  300005                     	org	3145733
 13504  300005  FF                 	db	255
 13505                           
 13506                           ;Config register CONFIG4L @ 0x300006
 13507                           ;	Boot Block Size selection bits
 13508                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 13509                           ;	Boot Block enable bit
 13510                           ;	BBEN = OFF, Boot block disabled
 13511                           ;	Storage Area Flash enable bit
 13512                           ;	SAFEN = OFF, SAF disabled
 13513                           ;	Application Block write protection bit
 13514                           ;	WRTAPP = OFF, Application Block not write protected
 13515  300006                     	org	3145734
 13516  300006  FF                 	db	255
 13517                           
 13518                           ;Config register CONFIG4H @ 0x300007
 13519                           ;	Configuration Register Write Protection bit
 13520                           ;	WRTB = OFF, Configuration registers (300000-30000Bh) not write-protected
 13521                           ;	Boot Block Write Protection bit
 13522                           ;	WRTC = OFF, Boot Block (000000-0007FFh) not write-protected
 13523                           ;	Data EEPROM Write Protection bit
 13524                           ;	WRTD = OFF, Data EEPROM not write-protected
 13525                           ;	SAF Write protection bit
 13526                           ;	WRTSAF = OFF, SAF not Write Protected
 13527                           ;	Low Voltage Programming Enable bit
 13528                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 13529  300007                     	org	3145735
 13530  300007  FF                 	db	255
 13531                           
 13532                           ;Config register CONFIG5L @ 0x300008
 13533                           ;	PFM and Data EEPROM Code Protection bit
 13534                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 13535  300008                     	org	3145736
 13536  300008  FF                 	db	255
 13537                           
 13538                           ;Config register CONFIG5H @ 0x300009
 13539                           ;	unspecified, using default values
 13540  300009                     	org	3145737
 13541  300009  FF                 	db	255
 13542                           tosu	equ	0x3FFF
 13543                           tosh	equ	0x3FFE
 13544                           tosl	equ	0x3FFD
 13545                           stkptr	equ	0x3FFC
 13546                           pclatu	equ	0x3FFB
 13547                           pclath	equ	0x3FFA
 13548                           pcl	equ	0x3FF9
 13549                           tblptru	equ	0x3FF8
 13550                           tblptrh	equ	0x3FF7
 13551                           tblptrl	equ	0x3FF6
 13552                           tablat	equ	0x3FF5
 13553                           prodh	equ	0x3FF4
 13554                           prodl	equ	0x3FF3
 13555                           indf0	equ	0x3FEF
 13556                           postinc0	equ	0x3FEE
 13557                           postdec0	equ	0x3FED
 13558                           preinc0	equ	0x3FEC
 13559                           plusw0	equ	0x3FEB
 13560                           fsr0h	equ	0x3FEA
 13561                           fsr0l	equ	0x3FE9
 13562                           wreg	equ	0x3FE8
 13563                           indf1	equ	0x3FE7
 13564                           postinc1	equ	0x3FE6
 13565                           postdec1	equ	0x3FE5
 13566                           preinc1	equ	0x3FE4
 13567                           plusw1	equ	0x3FE3
 13568                           fsr1h	equ	0x3FE2
 13569                           fsr1l	equ	0x3FE1
 13570                           bsr	equ	0x3FE0
 13571                           indf2	equ	0x3FDF
 13572                           postinc2	equ	0x3FDE
 13573                           postdec2	equ	0x3FDD
 13574                           preinc2	equ	0x3FDC
 13575                           plusw2	equ	0x3FDB
 13576                           fsr2h	equ	0x3FDA
 13577                           fsr2l	equ	0x3FD9
 13578                           status	equ	0x3FD8

Data Sizes:
    Strings     55
    Constant    0
    Data        0
    BSS         126
    Persistent  23
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     57      76
    BANK0           160     60     158
    BANK1           256      4      36
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S3430_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_4(CODE[14]), STR_3(CODE[13]), STR_2(CODE[14]), STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_4(CODE[14]), STR_3(CODE[13]), STR_2(CODE[14]), STR_1(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_4(CODE[14]), STR_3(CODE[13]), STR_2(CODE[14]), STR_1(CODE[14]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), Absolute function(), 

    TMR5_SetGateInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), 

    TMR5_GateInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), Absolute function(), 

    CCP4_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), 

    CCP4_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), Absolute function(), 

    CCP3_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), 

    CCP3_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), Absolute function(), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultErrorHandler(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultOverrunErrorHandler(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultFramingErrorHandler(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Receive_ISR(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_UART1_Write
    _abs->___aomod
    _getBatteryVoltage->_ADCC_GetSingleConversion
    ___flge->___xxtofl
    ___fldiv->___xxtofl
    _calcSpeed->___fladd
    ___fladd->___flmul
    _setMotor->_PWM7_LoadDutyValue
    _setMotor->_PWM8_LoadDutyValue
    _actSpeed->___aldiv
    ___xxtofl->___awdiv
    ___fltol->___fladd
    ___flmul->___xxtofl
    _SYSTEM_Initialize->_TMR5_Initialize
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR5_Initialize->_TMR5_SetGateInterruptHandler
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _CCP4_Initialize->_CCP4_SetCallBack
    _CCP3_Initialize->_CCP3_SetCallBack

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR4_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _CCP3_CaptureISR in COMRAM

    _CCP3_CaptureISR->_CCP3_DefaultCallBack

Critical Paths under _CCP4_CaptureISR in COMRAM

    _CCP4_CaptureISR->_CCP4_DefaultCallBack

Critical Paths under _TMR5_GATE_ISR in COMRAM

    _TMR5_DefaultGateInterruptHandler->_TMR5_ReadTimer
    _TMR5_Reload->_TMR5_WriteTimer

Critical Paths under _SMT1_PR_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_Overflow_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _loop->_getCurve
    _getReverse->_printf
    _getCurve->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _checkBatt->_setSteering
    _calcSteering->_setSteering
    _setSteering->___fltol
    _calcSpeed->___fltol
    ___fladd->___flmul
    _calcMotorPow->___fltol
    ___fltol->___fladd

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR4_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _CCP3_CaptureISR in BANK0

    None.

Critical Paths under _CCP4_CaptureISR in BANK0

    None.

Critical Paths under _TMR5_GATE_ISR in BANK0

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _loop->_getCurve

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR4_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _CCP3_CaptureISR in BANK1

    None.

Critical Paths under _CCP4_CaptureISR in BANK1

    None.

Critical Paths under _TMR5_GATE_ISR in BANK1

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR4_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _CCP3_CaptureISR in BANK2

    None.

Critical Paths under _CCP4_CaptureISR in BANK2

    None.

Critical Paths under _TMR5_GATE_ISR in BANK2

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR4_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _CCP3_CaptureISR in BANK3

    None.

Critical Paths under _CCP4_CaptureISR in BANK3

    None.

Critical Paths under _TMR5_GATE_ISR in BANK3

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR4_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _CCP3_CaptureISR in BANK4

    None.

Critical Paths under _CCP4_CaptureISR in BANK4

    None.

Critical Paths under _TMR5_GATE_ISR in BANK4

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR4_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _CCP3_CaptureISR in BANK5

    None.

Critical Paths under _CCP4_CaptureISR in BANK5

    None.

Critical Paths under _TMR5_GATE_ISR in BANK5

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR4_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _CCP3_CaptureISR in BANK6

    None.

Critical Paths under _CCP4_CaptureISR in BANK6

    None.

Critical Paths under _TMR5_GATE_ISR in BANK6

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR4_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _CCP3_CaptureISR in BANK7

    None.

Critical Paths under _CCP4_CaptureISR in BANK7

    None.

Critical Paths under _TMR5_GATE_ISR in BANK7

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR4_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _CCP3_CaptureISR in BANK8

    None.

Critical Paths under _CCP4_CaptureISR in BANK8

    None.

Critical Paths under _TMR5_GATE_ISR in BANK8

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR4_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _CCP3_CaptureISR in BANK9

    None.

Critical Paths under _CCP4_CaptureISR in BANK9

    None.

Critical Paths under _TMR5_GATE_ISR in BANK9

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR4_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _CCP3_CaptureISR in BANK10

    None.

Critical Paths under _CCP4_CaptureISR in BANK10

    None.

Critical Paths under _TMR5_GATE_ISR in BANK10

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR4_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _CCP3_CaptureISR in BANK11

    None.

Critical Paths under _CCP4_CaptureISR in BANK11

    None.

Critical Paths under _TMR5_GATE_ISR in BANK11

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR4_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _CCP3_CaptureISR in BANK12

    None.

Critical Paths under _CCP4_CaptureISR in BANK12

    None.

Critical Paths under _TMR5_GATE_ISR in BANK12

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR4_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _CCP3_CaptureISR in BANK13

    None.

Critical Paths under _CCP4_CaptureISR in BANK13

    None.

Critical Paths under _TMR5_GATE_ISR in BANK13

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR4_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _CCP3_CaptureISR in BANK14

    None.

Critical Paths under _CCP4_CaptureISR in BANK14

    None.

Critical Paths under _TMR5_GATE_ISR in BANK14

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR4_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _CCP3_CaptureISR in BANK15

    None.

Critical Paths under _CCP4_CaptureISR in BANK15

    None.

Critical Paths under _TMR5_GATE_ISR in BANK15

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   54527
                  _SYSTEM_Initialize
           _TMR4_SetInterruptHandler
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0   53380
                             ___flge
                           ___xxtofl
                       _calcMotorPow
                          _calcSpeed
                       _calcSteering
                          _checkBatt
                  _getBatteryVoltage
                           _getCurve
                         _getReverse
                           _setMotor
                        _setSteering
 ---------------------------------------------------------------------------------
 (2) _getReverse                                           0     0      0    8372
                             _printf
 ---------------------------------------------------------------------------------
 (2) _getCurve                                             6     6      0    8564
                                             58 BANK0      2     2      0
                                              0 BANK1      4     4      0
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                               8     4      4    8372
                                             52 BANK0      6     2      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6    7931
                                             44 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           42    36      6    7458
                                             28 BANK0     16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    5683
                                             48 COMRAM     8     8      0
                                              0 BANK0     28    18     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    3417
                                             37 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     220
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1537
                                             30 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4    1037
                                             21 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0      93
                                             20 COMRAM     1     1      0
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (8) _UART1_Write                                          1     1      0      62
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     183
                                             37 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     613
                                             19 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     625
                                             19 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _checkBatt                                            0     0      0    7593
                             ___flge
                           ___xxtofl
                  _getBatteryVoltage
                        _setSteering
 ---------------------------------------------------------------------------------
 (2) _getBatteryVoltage                                    0     0      0      22
           _ADCC_GetSingleConversion
 ---------------------------------------------------------------------------------
 (3) _ADCC_GetSingleConversion                             5     3      2      22
                                             19 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     486
                                             41 COMRAM    12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _calcSteering                                         4     4      0    6502
                                             44 BANK0      4     4      0
                        _setSteering
 ---------------------------------------------------------------------------------
 (2) _setSteering                                          9     6      3    6307
                                             35 BANK0      9     6      3
                 _PWM5_LoadDutyValue
                 _PWM6_LoadDutyValue
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2003
                                             41 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _PWM6_LoadDutyValue                                   4     2      2     120
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _PWM5_LoadDutyValue                                   4     2      2     120
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _calcSpeed                                            6     6      0    7612
                                             35 BANK0      6     6      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    3402
                                             53 COMRAM     4     4      0
                                             13 BANK0     12     4      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _calcMotorPow                                         7     7      0    6238
                                             35 BANK0      7     7      0
                            ___awdiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                           _actSpeed
                           _setMotor
 ---------------------------------------------------------------------------------
 (2) _setMotor                                             4     2      2     906
                                             23 COMRAM     4     2      2
                 _PWM7_LoadDutyValue
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _PWM8_LoadDutyValue                                   4     2      2     272
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _PWM7_LoadDutyValue                                   4     2      2     272
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _actSpeed                                             4     2      2     629
                                             33 COMRAM     4     2      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     604
                                             19 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     778
                                             27 COMRAM    14    10      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     607
                                             25 BANK0     10     6      4
                            ___awdiv (ARG)
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2693
                                             41 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___awdiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     452
                                             19 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     973
                    _ADCC_Initialize
                    _CCP3_Initialize
                    _CCP4_Initialize
                    _CLC3_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM5_Initialize
                    _PWM6_Initialize
                    _PWM7_Initialize
                    _PWM8_Initialize
                    _SMT1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR4_Initialize
                    _TMR5_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     490
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0      98
                                             21 COMRAM     2     2      0
       _TMR5_SetGateInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetGateInterruptHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     174
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             2     0      2     174
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      2     2      0       0
                                             19 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMT1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM7_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      15
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CLC3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP4_Initialize                                      0     0      0      98
                   _CCP4_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP4_SetCallBack                                     2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CCP3_Initialize                                      0     0      0      98
                   _CCP3_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP3_SetCallBack                                     2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_tx_vect_isr                                   1     1      0       0
                                             16 COMRAM     1     1      0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_rx_vect_isr                                   1     1      0       0
                                             17 COMRAM     1     1      0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultErrorHandler                           0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _UART1_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR4_ISR                                            1     1      0       0
                                             18 COMRAM     1     1      0
                      _TMR4_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR4_CallBack                                       0     0      0       0
                   Absolute function *
                       _TMR4_10msISR *
       _TMR4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR4_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _TMR4_10msISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _CCP3_CaptureISR                                     2     2      0     144
                                              2 COMRAM     2     2      0
                   Absolute function *
               _CCP3_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (17) _CCP3_DefaultCallBack                                2     0      2      97
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _CCP4_CaptureISR                                     2     2      0     144
                                              6 COMRAM     2     2      0
                   Absolute function *
               _CCP4_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (17) _CCP4_DefaultCallBack                                2     0      2      97
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _TMR5_GATE_ISR                                       0     0      0     233
                   Absolute function *
   _TMR5_DefaultGateInterruptHandler *
 ---------------------------------------------------------------------------------
 (17) _TMR5_DefaultGateInterruptHandler                    0     0      0     233
                     _TMR5_ReadTimer
                        _TMR5_Reload
 ---------------------------------------------------------------------------------
 (18) _TMR5_Reload                                         0     0      0     164
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (19) _TMR5_WriteTimer                                     2     0      2     164
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) _TMR5_ReadTimer                                      8     6      2      69
                                              8 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _SMT1_PR_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _SMT1_PW_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _SMT1_Overflow_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
     _CCP3_Initialize
       _CCP3_SetCallBack
     _CCP4_Initialize
       _CCP4_SetCallBack
     _CLC3_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM5_Initialize
     _PWM6_Initialize
     _PWM7_Initialize
     _PWM8_Initialize
     _SMT1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetGateInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
   _TMR4_SetInterruptHandler
   _loop
     ___flge
       ___xxtofl (ARG)
         ___awdiv (ARG)
     ___xxtofl
     _calcMotorPow
       ___awdiv
       ___flmul
         ___awdiv (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___awdiv (ARG)
         ___fladd (ARG)
           ___flmul (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _actSpeed
         ___aldiv
       _setMotor
         _PWM7_LoadDutyValue
         _PWM8_LoadDutyValue
     _calcSpeed
       ___fladd
       ___flmul
       ___fltol
       ___xxtofl
     _calcSteering
       _setSteering
         _PWM5_LoadDutyValue
         _PWM6_LoadDutyValue
         ___fldiv
         ___fltol
         ___xxtofl
     _checkBatt
       ___flge
       ___xxtofl
       _getBatteryVoltage
         _ADCC_GetSingleConversion
       _setSteering
     _getBatteryVoltage
     _getCurve
       _printf
         _vfprintf
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                 _strlen
             _fputc
     _getReverse
       _printf
     _setMotor
     _setSteering

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *

 _TMR4_ISR (ROOT)
   _TMR4_CallBack
     Absolute function(Fake) *
     _TMR4_10msISR *
     _TMR4_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _CCP3_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP3_DefaultCallBack *

 _CCP4_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP4_DefaultCallBack *

 _TMR5_GATE_ISR (ROOT)
   Absolute function(Fake) *
   _TMR5_DefaultGateInterruptHandler *
     _TMR5_ReadTimer
     _TMR5_Reload
       _TMR5_WriteTimer

 _SMT1_PR_ACQ_ISR (ROOT)

 _SMT1_PW_ACQ_ISR (ROOT)

 _SMT1_Overflow_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK15          100      0       0      30        0.0%
BANK15             100      0       0      31        0.0%
BITBANK14          100      0       0      28        0.0%
BANK14             100      0       0      29        0.0%
BITBANK13          100      0       0      36        0.0%
BANK13             100      0       0      27        0.0%
BITBANK12          100      0       0      35        0.0%
BANK12             100      0       0      26        0.0%
BITBANK11          100      0       0      34        0.0%
BANK11             100      0       0      25        0.0%
BITBANK10          100      0       0      33        0.0%
BANK10             100      0       0      24        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      4      24       7       14.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     3C      9E       5       98.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     39      4C       1       80.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     10E      32        0.0%
DATA                 0      0     10E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Jan 31 09:13:00 2024

                             _CCP4_Initialize 4242                        ??_CCP3_DefaultCallBack 0003  
                                ___fldiv@aexp 00B8                                  ___fldiv@bexp 00B7  
                                ___fldiv@sign 00B0                                            l72 44E4  
                                          l75 43EE                                            l69 3D5C  
                                ___awdiv@sign 0019                             ??_TMR5_WriteTimer 000B  
                 __size_of_PWM6_LoadDutyValue 0034                                           l312 3C16  
                                         l404 3D12                                           l308 3BCE  
                                         l309 3BE8                                           l318 450C  
                                         l520 3DA6                                           l441 429C  
                                         l362 452A                                           l371 4516  
                                         l188 36AE                                           l284 3998  
                                         l365 453E                                           l359 4534  
                                         l368 4520                                           l712 40E0  
                                         l449 4566                                           l482 426E  
                                         l723 4484                                           l555 4548  
                                         l644 42F6                                           l740 4078  
                                         l709 449C                                           l581 3FA0  
                                         l726 40AC                                           l479 455C  
                                         l751 44B4                                           l737 44CC  
                                         l754 4044                                           l923 446C  
                                         l695 4552                                           l795 41E0  
                                         l893 4322                                           _GIE 01FE97  
                                         _PR2 003FAB                                           _PR4 003F9F  
                                         _abs 3E7A                                           _pad 3774  
                     __size_of_PMD_Initialize 0024                               _TMR2_Initialize 4452  
              CCP4_SetCallBack@customCallBack 0014                                           tosl 003FFD  
                                         wreg 003FE8                              _CCP4_SetCallBack 4554  
                                ___flmul@aexp 00AD                                  ___flmul@bexp 00B2  
                          _UART1_Transmit_ISR 3E36                                  ___flmul@sign 00AC  
                                ___flmul@temp 00B7                                  ___flmul@prod 00B3  
                     __end_of_CCP4_CaptureISR 414C                                  ___fltol@exp1 00CE  
                                        l1042 3C72                                          ?_abs 0026  
                                        l2022 17DC                                          l1054 415C  
                                        l1302 222E                                          l2015 15C2  
                                        l2111 3834                                          l2032 190C  
                                        l2024 1854                                          l2025 1842  
                                        l1057 417C                                          l2106 37B8  
                                        l2019 194A                                          l1323 2A0E  
                                        l1235 315C                                          l1316 30C0  
                                        l1244 31EA                                          l1228 30F0  
                                        l1253 3AC2                                          l1261 3B52  
                                        l2109 37FA                                          l2117 1D88  
                                        l1317 30D0                                          l2070 2986  
                                        l1342 2B82                                          l2150 3BB2  
                                        l2063 292A                                          l2119 1D90  
                                        l2151 3BBA                                          l2056 2892  
                                        l1328 2A98                                          l1256 44F4  
                                        l2144 243A                                          l2137 1FCC  
                                        l2170 3A2E                                          l2059 29EE  
                                        l1363 2644                                          l1515 2D0A  
                                        l2155 3EB0                               _timer3ReloadVal 00EA  
                                        l3300 3D10                                          l1372 2FB2  
                                        l1284 221E                                          l1381 35E4  
                                        l3310 3610                                          l3302 43CC  
                                        l2158 3EB8                                          l2079 43A2  
                                        l3320 366A                                          l3312 365E  
                                        l3304 35E6                                          l1632 3772  
                                        l1480 32F6                                          l1528 2E6E  
                                        l2184 3EF2                                          l1385 2654  
                                        l3322 366C                                          l3314 3660  
                                        l3306 3606                                          l2178 3E34  
                                        l1387 2678                                          l3340 3C18  
                                        l3324 366E                                          l3316 3662  
                                        l3308 3608                                          l3412 4486  
                                        l5020 3A4E                                          l1388 268C  
                                        l1389 2700                                          l3326 3670  
                                        l3318 3664                                          l5022 3A5E  
                                        l1398 283A                                          l5014 44E6  
                                        l1671 3502                                          l3280 3CF2  
                                        l3272 3CC8                                          l3328 44CE  
                                        l3360 41D8                                          l3352 41B2  
                                        l5024 3A8E                                          l5016 3A30  
                                        l3290 3D06                                          l3282 3CF4  
                                        l3274 3CCA                                          l3362 41DA  
                                        l3354 41D0                                          l3370 445E  
                                        l5026 3ABA                                          l5018 3A38  
                                        l1930 1218                                          l1666 34BC  
                                        l1931 11DE                                          l3292 3D08  
                                        l3284 3CFE                                          l3276 3CD2  
                                        l3364 41DC                                          l3356 41D2  
                                        l3372 4464                                          l3294 3D0A  
                                        l3286 3D02                                          l3278 3CDC  
                                        l3374 449E                                          l3366 446E  
                                        l3358 41D4                                          l3296 3D0C  
                                        l3288 3D04                                          l3368 4452  
                                        l5400 3746                                          l7000 1716  
                                        l1929 122A                                          l3386 42F8  
                                        l3298 3D0E                                          l5402 374C  
                                        l7010 17C2                                          l7002 1736  
                                        l1698 33FE                                          l4610 407A  
                                        l1946 1344                                          l1938 14FA  
                                        l1955 1414                                          l3396 44B6  
                                        l5500 3928                                          l5404 3752  
                                        l7020 17FE                                          l7012 17CC  
                                        l7004 1760                                          l1956 1402  
                                        l4612 4046                                          l5420 347C  
                                        l5412 3400                                          l4620 4158  
                                        l6300 2C32                                          l7100 20BC  
                                        l5510 393C                                          l5502 392C  
                                        l5406 3762                                          l7030 1870  
                                        l7022 180C                                          l7014 17DA  
                                        l7006 1796                                          l4630 31F0  
                                        l4614 4012                                          l5430 3500  
                                        l5422 348A                                          l5414 342E  
                                        l4622 415A                                          l6310 2CA2  
                                        l6302 2C40                                          l6230 3BDE  
                                        l7110 20F6                                          l7102 20C2  
                                        ?_pad 0026                                          l1983 1CE6  
                                        l5440 4296                                          l5520 3950  
                                        l5512 3940                                          l5504 3930  
                                        l5408 376A                                          l7040 18DA  
                                        l7032 187E                                          l7024 183A  
                                        l7016 17EC                                          l7008 17A4  
                                        l4640 3230                                          l4632 31FE  
                                        l4608 40AE                                          l7200 2A52  
                                        l5424 349C                                          l5416 343E  
                                        l4624 416A                                          l4616 414E  
                                        l6312 2CB4                                          l6304 2C52  
                                        l6240 3C12                                          l6232 3BEA  
                                        l6400 1DAA                                          l7120 215C  
                                        l7112 2108                                          l7104 20D2  
                                        l1985 1B46                                          l5442 429A  
                                        l5434 4270                                          l5450 42E6  
                                        l5522 3954                                          l5514 3944  
                                        l5506 3934                                          l5370 36B4  
                                        l7050 1930                                          l7042 18F4  
                                        l7034 18A8                                          l7018 17FA  
                                        l4650 326E                                          l4642 3234  
                                        l4634 320E                                          l1994 1B8C  
                                        l7210 2AC4                                          l5426 34AA  
                                        l5418 346C                                          l4618 4154  
                                        l6306 2C80                                          l6314 2CBA  
                                        l6330 2D42                                          l6322 2D0C  
                                        l6234 3BFC                                          l6242 3C14  
                                        l6226 3BBE                                          l6250 39BE  
                                        l6410 1DD6                                          l6402 1DB8  
                                        l7130 21B8                                          l7122 216C  
                                        l7114 211E                                          l7106 20DE  
                                        l5436 4280                                          l5460 4268  
                                        l5452 42F2                                          l5444 42CC  
                                        l5524 3960                                          l5516 3948  
                                        l5508 3938                                          l5380 36E4  
                                        l5372 36C2                                          l7044 1910  
                                        l7052 1936                                          l7028 1864  
                                        l7036 18AC                                          l4660 32B6  
                                        l4652 327C                                          l4644 3244  
                                        l4636 3212                                          l4628 31EC  
                                        l7300 2E8A                                          l1996 1C04  
                                        l1988 1B0A                                          l6500 199A  
                                        l7220 2B12                                          l7212 2AD8  
                                        l7204 2A5E                                          l5428 34FA  
                                        l7060 3ACA                                          l6316 2CCA  
                                        l6308 2CA0                                          l6340 2DAA  
                                        l6332 2D50                                          l6324 2D10  
                                        l6236 3BFE                                          l6228 3BBE  
                                        l6244 4506                                          l6252 39C8  
                                        l6260 3DF2                                          l6420 1EE6  
                                        l6412 1E58                                          l6404 1DBE  
                                        l7140 21D6                                          l7132 21BC  
                                        l7124 217E                                          l7116 2130  
                                        l7108 20E6                                          l1997 1BF2  
                                        l5438 428C                                          l5462 426C  
                                        l5454 4242                                          l5470 3F9C  
                                        l5446 42E0                                          l4910 450E  
                                        l5526 396C                                          l5518 394C  
                                        l5390 3712                                          l5382 36E8  
                                        l5374 36CA                                          l7054 193A  
                                        l7046 1920                                          l7038 18C6  
                                        l4662 32C0                                          l4654 3286  
                                        l4646 325A                                          l4638 3220  
                                        l7310 2F2E                                          l7302 2E96  
                                        l6510 19C0                                          l6502 199C  
                                        l7222 2B24                                          l7214 2AEC  
                                        l7206 2A9C                                          l7070 3B3A  
                                        l7062 3AE0                                          l6318 2CEA  
                                        l6342 2DB8                                          l6350 2E1E  
                                        l6334 2D70                                          l6326 2D1E  
                                        l6238 3C0E                                          l6254 39E6  
                                        l6246 399A                                          l6262 3DFE  
                                        l6270 3EC6                                          l6430 1F58  
                                        l6422 1F04                                          l6414 1E60  
                                        l6406 1DC6                                          l7134 21C0  
                                        l7126 219C                                          l7118 2146  
                                        l5456 4252                                          l5464 3F6A  
                                        l5448 42E4                                          l5480 3D94  
                                        l5472 3D5E                                          l4912 452C  
                                        l5528 3994                                          l5392 3720  
                                        l5384 36F0                                          l5376 36CE  
                                        l5368 36B0                                          l7048 192E  
                                        l4656 32A4                                          l4648 3262  
                                        l4664 32C6                                          l7320 2F7A  
                                        l7312 2F42                                          l7304 2E96  
                                        l6600 1C58                                          l6520 1A00  
                                        l6512 19CE                                          l6504 19A4  
                                        l7216 2AFE                                          l7208 2AB0  
                                        l7072 3B4A                                          l7064 3AE8  
                                        l6280 2B88                                          l6352 2E2E  
                                        l6344 2DE6                                          l6336 2D8E  
                                        l6328 2D3E                                          l6256 3A1C  
                                        l6248 39AC                                          l6264 3E10  
                                        l6272 3ECA                                          l6360 3782  
                                        l6440 1F92                                          l6432 1F66  
                                        l6424 1F1E                                          l6416 1E66  
                                        l6408 1DD0                                          l7128 21B2  
                                        l7080 1FCE                                          l7160 2FF8  
                                        l7152 2FB4                                          l4930 4554  
                                        l5458 425E                                          l5466 3F7E  
                                        l5482 3D96                                          l5474 3D72  
                                        l4914 4522                                          l5490 3906  
                                        l5394 3726                                          l5386 3702  
                                        l5378 36DC                                          l4666 32D6  
                                        l4658 32B4                                          l7322 2F96  
                                        l7314 2F46                                          l7306 2F12  
                                        l7250 2480                                          l7242 243C  
                                        l6610 1CC2                                          l6602 1C5C  
                                        l6530 1A40                                          l6522 1A02  
                                        l6514 19D0                                          l6506 19B4  
                                        l7066 3AEC                                          l7058 3AC4  
                                        l6290 2BE8                                          l6282 2B96  
                                        l6354 2E4E                                          l6346 2E06  
                                        l6338 2D96                                          l6266 3E14  
                                        l6274 3EE6                                          l6370 37D8  
                                        l6362 3796                                          l6434 1F6C  
                                        l6442 1FA4                                          l6426 1F38  
                                        l6418 1ECA                                          l6450 2270  
                                        l7138 21C6                                          l7090 2058  
                                        l7082 1FFA                                          l7146 21E2  
                                        l7170 303E                                          l7162 3000  
                                        l7154 2FCC                                          l7330 30FE  
                                        l5468 3F82                                          l4932 4540  
                                        l5484 3DA2                                          l5476 3D76  
                                        l4916 4536                                          l4908 4518  
                                        l5492 3916                                          l5820 3D30  
                                        l5396 373C                                          l5388 370A  
                                        l4860 28A2                                          l4668 32E6  
                                        l7324 2F9E                                          l7316 2F52  
                                        l7308 2F26                                          l7260 24C2  
                                        l7252 2488                                          l7244 244A  
                                        l6612 1CC6                                          l6604 1C76  
                                        l6540 1A70                                          l6532 1A48  
                                        l6516 19E0                                          l6524 1A0A  
                                        l6508 19BA                                          l6700 27C4  
                                        l7228 2B38                                          l7068 3B30  
                                        l7076 3B50                                          l6292 2BEC  
                                        l6284 2BB6                                          l6348 2E18  
                                        l6380 3E7A                                          l6268 3EBA  
                                        l6372 37DC                                          l6364 37A4  
                                        l6436 1F7E                                          l6428 1F46  
                                        l6460 233E                                          l6452 2282  
                                        l7084 2018                                          l7092 205E  
                                        l7172 3054                                          l7180 307C  
                                        l7164 3016                                          l7156 2FD4  
                                        l7340 3172                                          l7332 3110  
                                        l5478 3D90                                          l5494 391C  
                                        l5486 38F6                                          l5830 3D48  
                                        l5822 3D34                                          l5814 3D14  
                                        l5398 3744                                          l4870 28E0  
                                        l4862 28B8                                          l4854 283E  
                                        l4950 3504                                          l7326 2FAA  
                                        l7318 2F6E                                          l7270 2590  
                                        l7262 24D8                                          l7254 249E  
                                        l7246 2460                                          l6614 1CD4  
                                        l6606 1C8C                                          l6550 1AAE  
                                        l6542 1A70                                          l6534 1A4C  
                                        l6526 1A1A                                          l6518 19F0  
                                        l6710 2818                                          l6702 27CC  
                                        l6294 2BF8                                          l6286 2BBA  
                                        l6278 2B84                                          l6382 3E94  
                                        l6374 3808                                          l6366 37B0  
                                        l6358 3774                                          l6438 1F8A  
                                        l6390 1D52                                          l6470 23CA  
                                        l6454 2286                                          l6446 2230  
                                        l7094 207C                                          l7086 2034  
                                        l7182 3092                                          l7174 3060  
                                        l7166 301A                                          l7158 2FE6  
                                        l7350 31BA                                          l7342 3184  
                                        l7334 3114                                          l4928 455E  
                                        l5496 3920                                          l5488 38FA  
                                        l5832 3D50                                          l5824 3D38  
                                        l5816 3D24                                          l6640 3364  
                                        l6632 3324                                          l4880 2968  
                                        l4872 2912                                          l4856 284E  
                                        l4952 3520                                          l4960 3560  
                                        l6800 1174                                          l7264 24DC  
                                        l7256 24AA                                          l7248 2464  
                                        l7280 25A8                                          l6616 1CDA  
                                        l6608 1CA6                                          l6560 1AFA  
                                        l6552 1ABE                                          l6528 1A30  
                                        l6712 2828                                          l6704 27E8  
                                        l7192 29F0                                          l6296 2C16  
                                        l6288 2BC8                                          l6376 381C  
                                        l6368 37C4                                          l6392 1D60  
                                        l6384 1CE8                                          l6464 2376  
                                        l6456 22B4                                          l6448 225E  
                                        l6480 23F6                                          l6720 437C  
                                        l7096 2098                                          l7088 204C  
                                        l7184 30AE                                          l7176 306A  
                                        l7168 302C                                          l7360 31E2  
                                        l7344 3188                                          l7336 3118  
                                        l7328 30D2                                          l5498 3924  
                                        l5834 3D54                                          l5826 3D3C  
                                        l5818 3D28                                          l6650 3394  
                                        l6642 3372                                          l6634 334E  
                                        l6626 32F8                                          l4890 29BE  
                                        l4882 2976                                          l4874 2914  
                                        l4866 28CC                                          l4858 285C  
                                        l4962 357C                                          l4970 35CC  
                                        l4954 353C                                          l6810 11C6  
                                        l6802 1178                                          l6730 1056  
                                        l7290 263C                                          l7274 259C  
                                        l7266 24F2                                          l7282 25F2  
                                        l7258 24B6                                          l6618 1CDC  
                                        l6570 1B44                                          l6562 1B08  
                                        l6554 1ACE                                          l6546 1A84  
                                        l6538 1A60                                          l6490 195A  
                                        l6706 27F4                                          l7530 2A72  
                                        l7194 2A0E                                          l6298 2C1E  
                                        l6394 1D62                                          l6386 1D08  
                                        l6482 2424                                          l6466 23A4  
                                        l6474 23D8                                          l6458 22E2  
                                        l6722 4386                                          l7098 20B0  
                                        l7178 3076                                          l7354 31D2  
                                        l7346 3196                                          l7338 316C  
                                        l7362 4414                                          l4948 454A  
                                        l5828 3D44                                          l6660 33BE  
                                        l6652 339E                                          l6636 3350  
                                        l6628 3310                                          l4892 29CE  
                                        l4884 2994                                          l4876 2920  
                                        l4868 28D4                                          l4964 3598  
                                        l4956 3544                                          l6900 143E  
                                        l6820 120A                                          l6812 11D6  
                                        l6804 117C                                          l6740 108A  
                                        l6732 1058                                          l7284 2610  
                                        l7268 2584                                          l6580 1B8A  
                                        l6572 1B56                                          l6564 1B14  
                                        l6556 1AD6                                          l6548 1A9E  
                                        l6492 1968                                          l6708 2810  
                                        l7532 2B4C                                          l7196 2A2A  
                                        l6396 1D7C                                          l6388 1D32  
                                        l6476 23EA                                          l6468 23B6  
                                        l7188 30BA                                          l7356 31DA  
                                        l7348 31A6                                          l7364 4418  
                                        l6662 33CE                                          l6638 3360  
                                        l4894 29DC                                          l4886 2996  
                                        l4878 295C                                          l4966 35A0  
                                        l4958 3550                                          l6910 14BA  
                                        l6902 1478                                          l6822 120C  
                                        l6814 11EC                                          l6806 1180  
                                        l6750 10BC                                          l6734 1068  
                                        l6742 1092                                          l6726 103A  
                                        l7286 2618                                          l6590 1BEA  
                                        l6574 1B6C                                          l6582 1B9C  
                                        l6566 1B32                                          l6558 1AE6  
                                        l6494 196A                                          l7534 2750  
                                        l7198 2A36                                          l6398 1D98  
                                        l6670 3B54                                          l7358 31DE  
                                        l7366 441A                                          l6664 33DE  
                                        l6648 338A                                          l4896 29DE  
                                        l4888 299A                                          l4968 35AC  
                                        l7296 2E70                                          l6920 14DA  
                                        l6912 14BE                                          l6904 147A  
                                        l6840 1294                                          l6832 125C  
                                        l6824 1216                                          l6816 11F8  
                                        l6808 11AA                                          l6760 10F2  
                                        l6752 10C2                                          l6744 10A2  
                                        l6736 1078                                          l6728 1048  
                                        l7288 2634                                          l7536 25BC  
                                        l6584 1BAA                                          l6576 1B72  
                                        l6568 1B34                                          l6496 197A  
                                        l6488 194C                                          l6680 2694  
                                        l6672 3B5C                                          l7528 21F8  
                                        l7368 4428                                          l6930 150A  
                                        l6666 33EE                                          l6658 33B2  
                                        l7298 2E7C                                          l6922 14E8  
                                        l6914 14CC                                          l6906 148A  
                                        l6842 1298                                          l6834 126C  
                                        l6826 1238                                          l6850 12B8  
                                        l6818 11FC                                          l6770 112E  
                                        l6762 1102                                          l6754 10D0  
                                        l6746 10A8                                          l6738 1088  
                                        l6594 1C14                                          l6586 1BAE  
                                        l6578 1B7C                                          l6498 198A  
                                        l6682 2708                                          l6674 3B6A  
                                        l6940 154A                                          l6932 1518  
                                        l6924 14EA                                          l6916 14D2  
                                        l6908 149A                                          l6852 12DE  
                                        l6860 1334                                          l6844 12A6  
                                        l6836 127A                                          l6828 1248  
                                        l6780 114C                                          l6772 113C  
                                        l6764 1104                                          l6756 10D2  
                                        l6748 10BA                                          l6596 1C20  
                                        l6588 1BBC                                          l6684 2714  
                                        l6692 273C                                          l6676 3B90  
                                        l6950 157A                                          l6942 1550  
                                        l6934 151A                                          l6918 14D4  
                                        l6870 1388                                          l6862 135A  
                                        l6854 1312                                          l6846 12A8  
                                        l6838 1288                                          l6790 1160  
                                        l6782 1150                                          l6774 1140  
                                        l6758 10E2                                          l6766 110C  
                                        l6598 1C2E                                          l6686 271C  
                                        l6694 277E                                          l6678 2646  
                                        l6960 15B2                                          l6952 157C  
                                        l6944 1560                                          l6936 152A  
                                        l6928 14FC                                          l6880 13B2  
                                        l6872 1396                                          l6864 136A  
                                        l6856 1314                                          l6848 12B2  
                                        l6792 1164                                          l6784 1154  
                                        l6776 1144                                          l6768 111C  
                                        l6696 279C                                          l6688 2728  
                                        l6970 1606                                          l6962 15D2  
                                        l6954 158C                                          l6946 1566  
                                        l6938 153A                                          l6890 13E4  
                                        l6882 13C2                                          l6874 1398  
                                        l6858 1324                                          l6794 1168  
                                        l6786 1158                                          l6778 1148  
                                        l6698 27A8                                          l6980 165E  
                                        l6972 1610                                          l6964 15E2  
                                        l6956 159C                                          l6948 156C  
                                        l6892 13FA                                          l6876 13A6  
                                        l6868 137E                                          l6884 13C4  
                                        l6796 116C                                          l6788 115C  
                                        l6990 16A8                                          l6982 166A  
                                        l6974 162A                                          l6958 15AC  
                                        l6878 13AE                                          l6886 13D2  
                                        l6798 1170                                          l6992 16B8  
                                        l6984 1678                                          l6976 1636  
                                        l6968 15F6                                          l6896 1424  
                                        l6888 13D6                                          l6994 16D6  
                                        l6986 1688                                          l6978 1652  
                                        l6898 1430                                          l6996 16E6  
                                        l6988 1698                                          l6998 1706  
                                        STR_1 1001                                          STR_2 101D  
                                        STR_3 102B                                          STR_4 100F  
                                        _LATA 003FBA                                          _LATB 003FBB  
                                        _LATC 003FBC                                          u3120 416A  
                                        _LATD 003FBD                                          u3105 406A  
                                        u3121 4166                                          _LATE 003FBE  
                                        u3130 31FE                                          u3131 31FA  
                                        u3115 4036                                          u3140 3220  
                                        u3141 321C                                          u3150 325A  
                                        u3151 3256                                          u3160 327C  
                                        u3161 3278                                          u3170 32A4  
                                        _T2PR 003FAB                                          u3171 32A0  
                                        u4300 36C2                                          u3500 285C  
                                        u3180 32D6                                          u1805 3CFC  
                                        u4301 36BE                                          u3501 2858  
                                        u3181 32D2                                          u3085 40D2  
                                        u1806 3CFE                                          u4310 36DC  
                                        u3510 28B8                                          u4311 36D8  
                                        u3511 28B4                                          u3095 409E  
                                        u4320 3702                                          u3520 290E  
                                        u6000 279C                                          u4400 34FA  
                                        u4321 36FE                                          u3521 290A  
                                        u6001 2798                                          u4401 34F6  
                                        u4330 3720                                          u3530 2958  
                                        u6010 27C4                                          _T4PR 003F9F  
                                        u4331 371C                                          u3531 2954  
                                        u6011 27C0                                          u4340 373C  
                                        u3540 2976                                          u3700 3A4E  
                                        u3620 3520                                          u6100 10F2  
                                        u6020 27E8                                          u5300 3E34  
                                        u4341 3738                                          u3541 2972  
                                        u3701 3A4A                                          u3621 351C  
                                        u6101 10EE                                          u6021 27E4  
                                        u5301 3E30                                          u4350 3762  
                                        u3550 2986                                          u3710 3A5E  
                                        u3630 353C                                          u6110 112E  
                                        u6030 2810                                          u5230 3BCE  
                                        u5310 3EE6                                          u4351 375E  
                                        u3551 2982                                          u3711 3A5A  
                                        u3631 3538                                          u6111 112A  
                                        u6031 280C                                          u5231 3BCA  
                                        u5311 3EE2                                          u3560 2994  
                                        u3640 357C                                          u7000 2F26  
                                        u6200 1248                                          u6120 113C  
                                        u6040 1056                                          u4360 342E  
                                        u5320 2B96                                          u5400 2D50  
                                        u5240 3BDE                                          u3561 2990  
                                        u3641 3578                                          u7001 2F22  
                                        u6201 1244                                          u6121 1138  
                                        u6041 1052                                          u4361 342A  
                                        u5321 2B92                                          u5401 2D4C  
                                        u5241 3BDA                                          u3570 29CE  
                                        u3490 284E                                          u3650 3598  
                                        u7010 2F42                                          u6210 127A  
                                        u6130 11AA                                          u6050 1068  
                                        u4370 346C                                          u5330 2BC8  
                                        u5410 2D8E                                          u5250 3C0E  
                                        u3571 29CA                                          u3491 284A  
                                        u3651 3594                                          u7011 2F3E  
                                        u6211 1276                                          u6131 11A6  
                                        u6051 1064                                          u4371 3468  
                                        u5331 2BC4                                          u5411 2D8A  
                                        u5251 3C0A                                          u3580 29DC  
                                        u7020 2F6E                                          u6300 13C2  
                                        u6220 1288                                          u6140 11C2  
                                        u6060 1078                                          u4380 348A  
                                        u5420 2DB8                                          u5260 39AC  
                                        u5500 1D1A                                          _PMD0 0039C0  
                                        u3581 29D8                                          u7021 2F6A  
                                        u6301 13BE                                          u6221 1284  
                                        u6141 11BC                                          u6061 1074  
                                        u4381 3486                                          u5341 2BF2  
                                        u5421 2DB4                                          u5261 39A8  
                                        u5501 1D14                                          _PMD1 0039C1  
                                        u7030 2F96                                          u6310 13D2  
                                        u6230 12A6                                          u6150 11C4  
                                        u6070 10BA                                          u4390 34AA  
                                        u5350 2C16                                          u5430 2DE6  
                                        u5270 39BE                                          u5510 1D1C  
                                        _PMD2 0039C2                                          u7031 2F92  
                                        u6311 13CE                                          u6231 12A2  
                                        u6071 10B6                                          u4391 34A6  
                                        u5351 2C12                                          u5431 2DE2  
                                        u5271 39BA                                          _PMD3 0039C3  
                                        u6400 14BA                                          u6320 13E4  
                                        u6240 12DE                                          u6160 11EC  
                                        u6080 10D0                                          u5360 2C40  
                                        u5440 2E2E                                          u5280 39E6  
                                        u5600 1F38                                          u5520 1D32  
                                        u7040 30FE                                          _PMD4 0039C4  
                                        u6401 14B6                                          u6321 13E0  
                                        u6241 12DA                                          u6161 11E8  
                                        u6081 10CC                                          u5361 2C3C  
                                        u5441 2E2A                                          u5281 39E2  
                                        u5601 1F34                                          u5521 1D2E  
                                        u7041 30FA                                          _PMD5 0039C5  
                                        u6410 14CC                                          u6330 13FA  
                                        u6250 1324                                          u6170 120A  
                                        u6090 10E2                                          u5370 2C80  
                                        u5290 3A1C                                          u5450 3782  
                                        u5610 1F46                                          u5530 1D60  
                                        u7050 3110                                          _PMD6 0039C6  
                                        u6411 14C8                                          u6331 13F6  
                                        u6251 1320                                          u6171 1206  
                                        u6091 10DE                                          u5371 2C7C  
                                        u5291 3A18                                          u5451 377E  
                                        u5611 1F42                                          u5531 1D5C  
                                        u7051 310C                                          _PMD7 0039C7  
                                        u6500 15E2                                          u6420 14E8  
                                        u6340 1410                                          u6260 135A  
                                        u6180 122A                                          u5700 197A  
                                        u5380 2CCA                                          u5460 37A4  
                                        u5620 1F58                                          u5540 1D7C  
                                        u7060 315C                                          u6501 15DE  
                                        u6421 14E4                                          u6341 140C  
                                        u6261 1356                                          u6181 1226  
                                        u5701 1976                                          u5381 2CC6  
                                        u5461 37A0                                          u5621 1F54  
                                        u5541 1D78                                          u7061 3158  
                                        u6510 1780                                          u6430 1518  
                                        u6350 1424                                          u6270 136A  
                                        u6190 1238                                          u5710 198A  
                                        u5390 2D1E                                          u5470 37FA  
                                        u5630 1F66                                          u5550 1DAA  
                                        u7070 3184                                          u6431 1514  
                                        u6351 1420                                          u6271 1366  
                                        u6191 1234                                          u5711 1986  
                                        u5391 2D1A                                          u5471 37F6  
                                        u5631 1F62                                          u5551 1DA6  
                                        u7071 3180                                          u6600 18F4  
                                        u6520 17DA                                          u6440 152A  
                                        u6360 143E                                          u6280 1396  
                                        u5800 1B56                                          u5720 19CE  
                                        u5480 3808                                          u5640 1F7E  
                                        u5560 1DB8                                          u7080 3196  
                                        u6601 18F0                                          u6521 17D6  
                                        u6441 1526                                          u6361 143A  
                                        u6281 1392                                          u5801 1B52  
                                        u5721 19CA                                          u5481 3804  
                                        u5641 1F7A                                          u5561 1DB4  
                                        u7081 3192                                          u6610 192E  
                                        u6530 17FA                                          u6450 153A  
                                        u6370 1478                                          u6290 13A6  
                                        u5810 1B6C                                          u5730 19E0  
                                        u5490 3E94                                          u5570 1EE6  
                                        u5650 225E                                          u7090 31CE  
                                        u6611 192A                                          u6531 17F6  
                                        u6515 1776                                          u6451 1536  
                                        u6371 1474                                          u6291 13A2  
                                        u5811 1B68                                          u5731 19DC  
                                        u5491 3E90                                          u5571 1EE2  
                                        u5651 225A                                          u7091 31CA  
                                        u6540 180C                                          u6460 157A  
                                        u6380 148A                                          u5900 1CA6  
                                        u5820 1B8A                                          u5740 19F0  
                                        u6620 3AE0                                          u5580 1F04  
                                        u5660 22B4                                          u6700 20D2  
                                        u6541 1808                                          u6461 1576  
                                        u6381 1486                                          u5901 1CA2  
                                        u5821 1B86                                          u5741 19EC  
                                        u6621 3ADC                                          u5581 1F00  
                                        u5661 22B0                                          u6701 20CE  
                                        u6550 183A                                          u6470 158C  
                                        u6390 149A                                          u5910 1CD4  
                                        u5830 1BAA                                          u5750 1A30  
                                        u6630 3B30                                          u5590 1F1E  
                                        u5670 22E2                                          u6710 20F6  
                                        u6551 1836                                          u6471 1588  
                                        u6391 1496                                          u5911 1CD0  
                                        u5831 1BA6                                          u5751 1A2C  
                                        u6631 3B2C                                          u5591 1F1A  
                                        u5671 22DE                                          u6711 20F2  
                                        u6560 1850                                          u6480 159C  
                                        u5920 3310                                          u5840 1BBC  
                                        u5760 1A70                                          u5680 23A4  
                                        u6720 2108                                          u6640 2018  
                                        u6800 2FCC                                          u6561 184C  
                                        u6481 1598                                          u5921 330C  
                                        u5841 1BB8                                          u5761 1A6C  
                                        u5681 23A0                                          u6721 2104  
                                        u6641 2014                                          u6801 2FC8  
                                        u6570 1864                                          u6490 15D2  
                                        u5930 3344                                          u5850 1BEA  
                                        u5770 1AE6                                          u5690 1968  
                                        u6730 211E                                          u6650 2034  
                                        u6810 2FE6                                          u6571 1860  
                                        u6491 15CE                                          u5851 1BE6  
                                        u5771 1AE2                                          u5691 1964  
                                        u6731 211A                                          u6651 2030  
                                        u6811 2FE2                                          u6580 187E  
                                        u5940 3372                                          u5860 1C00  
                                        u5780 1B08                                          u6900 2A52  
                                        u6740 2130                                          u6660 204C  
                                        u6820 2FF8                                          u6581 187A  
                                        u5941 336E                                          u5861 1BFC  
                                        u5781 1B04                                          u6901 2A4E  
                                        u6741 212C                                          u6661 2048  
                                        u6821 2FF4                                          u6590 18C6  
                                        u5950 3386                                          u5870 1C14  
                                        u5790 1B32                                          u6910 2AFE  
                                        u6750 2146                                          u6670 207C  
                                        u6830 3016                                          u6591 18C2  
                                        u5951 3382                                          u5935 333A  
                                        u5871 1C10                                          u5791 1B2E  
                                        u6911 2AFA                                          u6751 2142  
                                        u6671 2078                                          u6831 3012  
                                        u5960 33AE                                          u5880 1C2E  
                                        u6920 2B24                                          u6760 215C  
                                        u6680 2098                                          u6840 302C  
                                        u5961 33AA                                          u5881 1C2A  
                                        u6921 2B20                                          u6761 2158  
                                        u6681 2094                                          u6841 3028  
                                        u5970 33CE                                          u6930 2460  
                                        u5890 1C76                                          u6770 217E  
                                        u6690 20B0                                          u6850 303E  
                                        u5971 33CA                                          u6931 245C  
                                        u5891 1C72                                          u6771 217A  
                                        u6691 20AC                                          u6851 303A  
                                        u5980 33DE                                          u6940 2480  
                                        u6780 219C                                          u6860 3054  
                                        u5981 33DA                                          u6941 247C  
                                        u6781 2198                                          u6861 3050  
                                        u6950 249E                                          u5990 3BB2  
                                        u6790 21D6                                          u6870 3092  
                                        u6951 249A                                          u5991 3BAE  
                                        u6791 21D2                                          u6871 308E  
                                        u6960 24D8                                          u6880 30AE  
                                        u6961 24D4                                          u6881 30AA  
                                        u6970 24F2                                          u6890 2A2A  
                                        u6971 24EE                                          u6891 2A26  
                                        u6980 2610                                          u6981 260C  
                                        u6990 2634                                          u6991 2630  
                                        _TMR2 003FAA                                          _TMR4 003F9E  
                                        _WPUA 003A41                                          _WPUB 003A51  
                                        _WPUC 003A61                                          _WPUD 003A71  
                                        _WPUE 003A81                           ?_UART1_Transmit_ISR 0001  
                                        abs@a 0026                                          _dbuf 0100  
                                        _main 4414                                          _dtoa 1CE8  
                                        _loop 30D2                                          _prec 003A  
                                        _nout 0080                                          pad@i 002D  
                                        pad@p 002A                                          fsr1h 003FE2  
                                        fsr2h 003FDA                                          indf2 003FDF  
                                        fsr1l 003FE1                                          pad@w 002F  
                                        fsr2l 003FD9                                          prodh 003FF4  
                                        prodl 003FF3                                          start 00AE  
                             _timer5ReloadVal 00EE                               ___fldiv@new_exp 00B1  
                             _TMR3_Initialize 3F6A                               _PWM5_Initialize 44B6  
                           ??_CLC3_Initialize 0014                 ??_UART1_SetTxInterruptHandler 0016  
                  ??_TMR4_SetInterruptHandler 0016                             _UART1_rx_vect_isr 3F30  
                                ___param_bank 000000                    __end_of_PWM5_LoadDutyValue 407A  
                          ?_UART1_rx_vect_isr 0001                                         ??_abs 0028  
                                       ??_pad 002C                __size_of_OSCILLATOR_Initialize 0018  
                        ??_UART1_Transmit_ISR 0011                 __end_of_OSCILLATOR_Initialize 44E6  
                               ___fltol@sign1 00CD                               __end_of___aldiv 32F8  
                             __end_of___aodiv 2D0C                                         _ADCAP 003EF5  
                                       _ADACT 003EFE                       __end_of_CCP3_Initialize 429E  
                             __end_of___fladd 14FC                                         ?_main 0001  
                                       ?_dtoa 00AC                                         _ADCLK 003EFF  
                             __end_of___aomod 2E70                                         _ADCNT 003EEB  
                                       _ADPCH 003EF1                               __end_of___fldiv 1CE8  
                                       _ADREF 003EFD                               __end_of___awdiv 3774  
                                       ?_loop 0001                                         _ADRPT 003EEC  
                      ??_CCP4_DefaultCallBack 0007                               __end_of___flmul 194C  
                    TMR5_ReadTimer@readValLow 0010                               __end_of___fltol 3400  
                             ___awdiv@divisor 0016                                         _U1P1H 003DED  
                                       _U1P2H 003DEF                                         _U1P1L 003DEC  
                                       _U1P3H 003DF1                                         _T3CLK 003FA9  
                                       _T2CON 003FAC                                         _U1P2L 003DEE  
                                       _U1P3L 003DF0                                         _T3CON 003FA6  
                                       _T5CLK 003F9D                                         _T4CON 003FA0  
                                       _T2HLT 003FAD                                         _T5CON 003F9A  
                                       _T4HLT 003FA1                                         _T2TMR 003FAA  
                                       _U1UIR 003DF8                                         i1l330 3F62  
                                       _T2RST 003FAF                                         _U1RXB 003DE8  
                                       i1l324 3F26                                         i1l333 3E74  
                                       i1l350 457A                                         i1l343 38F4  
                                       i1l336 3E78                                         i1l353 4578  
                                       _U1TXB 003DEA                                         i1l347 434E  
                                       i1l356 4576                                         _T4TMR 003F9E  
                                       _T4RST 003FA3                                         i2l409 4580  
                                       i1l692 42CA                                         i2l534 437A  
                                       i2l438 4210                                         i2l446 4116  
                                       i2l552 41B0                                         i1l688 3FD4  
                                       i2l529 4412                                         i2l537 4502  
                                       i1l698 457C                                         i2l476 4240  
                                       i2l558 4450                                         i2l487 414A  
                         ??_UART1_rx_vect_isr 0012                                         i2l863 3CC6  
                                       i2l856 3DF0                                         i2l868 43CA  
                             ___awdiv@counter 0018                                         _OSCEN 0039DD  
                                vfpfcnvrt@fmt 00CA                                         _TMR3H 003FA5  
                                       _TMR5H 003F99                                         _TMR3L 003FA4  
                                       _TMR5L 003F98                                         _TRISA 003FC2  
                                       _TRISB 003FC3                                         _TRISC 003FC4  
                                       _TRISD 003FC5                                         _TRISE 003FC6  
                                 _Default_ISR 4580                               _TMR4_Initialize 42CC  
                             _PWM6_Initialize 449E                             _UART1_tx_vect_isr 3EF4  
                            __end_of_TMR4_ISR 3FDC                       setSteering@steeringMode 00D1  
                                       _delay 00A4                                         _flags 003C  
                                       _fputc 399A                                         _fputs 3DF2  
                       __size_of_calcMotorPow 0144                            ?_UART1_tx_vect_isr 0001  
                                       pad@fp 0026                                         _width 0082  
                                       _putch 4504                                         dtoa@d 00AE  
                                       dtoa@i 00C6                                         dtoa@n 00BE  
                                       dtoa@p 00B8                                         dtoa@s 00BC  
                                       dtoa@w 00BA                              ?_SMT1_Initialize 0001  
                                       pclath 003FFA                                         tablat 003FF5  
                                 _BatteryVolt 0084                               _curveRightCount 00A5  
                       __size_of_calcSteering 0194                                         status 003FD8  
         __end_of_UART1_SetRxInterruptHandler 4522                   _UART1_SetRxInterruptHandler 4518  
                     __end_of_CCP4_Initialize 4270           fp__UART1_DefaultFramingErrorHandler 0000  
    __end_of_UART1_DefaultFramingErrorHandler 457C     __size_of_UART1_DefaultFramingErrorHandler 0002  
          ??_UART1_DefaultFramingErrorHandler 0012             ?_UART1_DefaultFramingErrorHandler 0001  
            _UART1_DefaultFramingErrorHandler 457A                           ??_UART1_tx_vect_isr 0011  
                   __end_of_UART1_rx_vect_isr 3F6A                               _TMR5_Initialize 3D5E  
                             _PWM7_Initialize 4486                               __initialization 3FDC  
                       TMR5_ReadTimer@readVal 000D                              ?_CCP3_CaptureISR 0001  
                                __end_of_main 4434                                  __end_of_dtoa 1FCE  
                                __end_of_loop 31EC                   ??_UART1_DefaultErrorHandler 0012  
                     __end_of_TMR2_Initialize 446E                                _roundTimeCount 003E  
                                ?_UART1_Write 0001                                        ??_main 003A  
                                      ??_dtoa 0031                                        ??_loop 003A  
                               __activetblptr 000003                                  _calcMotorPow 2E70  
        __size_of_UART1_SetTxInterruptHandler 000A                     __end_of_UART1_tx_vect_isr 3F2E  
                             _PWM8_Initialize 446E                              _UART1_Initialize 38F6  
                                _calcSteering 29F0                              ?_CCP4_CaptureISR 0001  
                                      _ADACCH 003EE9                                        _ADACCL 003EE8  
                                      _ADACCU 003EEA                                        _ADACQH 003EF4  
                                      _ADACQL 003EF3                                        _ADCON0 003EF8  
                                      _ADCON1 003EF9                                        _ADCON2 003EFA  
                                      _ADCON3 003EFB                                        _ADERRH 003EE3  
                                      _ADERRL 003EE2                                        ?_fputc 0016  
                                      _ADLTHH 003EDF                                        _ADLTHL 003EDE  
                                      ?_fputs 001F                                        _ADRESH 003EF0  
                                      _ADRESL 003EEF                                        _ADPREH 003EF7  
                                      _ADPREL 003EF6                                        _CCPR3H 003F75  
                                      _CCPR4H 003F71                                        _CCPR3L 003F74  
                                      _CCPR4L 003F70                                        _ADSTAT 003EFC  
                                      _ADUTHH 003EE1                              ___awdiv@dividend 0014  
                                      _ADUTHL 003EE0                            _PWM8_LoadDutyValue 407A  
                                      _ANSELA 003A40                                        ?_putch 0001  
                                      _ANSELB 003A50                                        _ANSELC 003A60  
                                      _ANSELD 003A70                                        _ANSELE 003A80  
                                      _RB1I2C 003A5A                                        _RB2I2C 003A5B  
                                      _RD0I2C 003A7A                                        _U1CON0 003DF2  
                                      _U1CON1 003DF3                                        _U1CON2 003DF4  
                                      _RC3I2C 003A6A                                        _RD1I2C 003A7B  
                                      _T3GATE 003FA8                                        _RC4I2C 003A6B  
                                      _U1BRGH 003DF6                                        _U1FIFO 003DF7  
                                      _T3GCON 003FA7                                        _U1BRGL 003DF5  
                                      _T5GATE 003F9C                                        _T5GCON 003F9B  
                                      _RA0PPS 003A00                                        _RA1PPS 003A01  
                                      _RA3PPS 003A03                                        _RA4PPS 003A04  
                                      _RB3PPS 003A0B                                        _T5GPPS 003AC9  
                                      i1l1247 4570                                        _ODCONA 003A42  
                                      _ODCONB 003A52                                        _ODCONC 003A62  
                                      _ODCOND 003A72                                        _ODCONE 003A82  
                                      i1l6000 3FCC                       __end_of_PWM5_Initialize 44CE  
                     __end_of_TMR3_Initialize 3FA2                                        i1l5530 4572  
                                      i1l4920 4336                                        i1l4922 4338  
                                      i1l5812 4568                                        i1l4924 4348  
                                      i1l4926 434C                                        i1l4918 4324  
                                      i2l6010 3DDE                                        i2l6002 3DA8  
                                      i1l5930 42B2                                        i2l6020 3CB4  
                                      i2l6012 3C74                                        i2l6004 3DAC  
                                      i1l5860 3E46                                        i2l6022 43A4  
                                      i2l6014 3C78                                        i2l6006 3DBC  
                                      i1l5870 3836                                        i1l5862 3E58  
                                      i2l6024 43A8                                        i2l6016 3C92  
                                      i2l6008 3DCC                                        i1l5928 429E  
                                      i1l5880 388E                                        i1l5872 3846  
                                      i1l5864 3E5A                                        i2l6018 3CA2  
                                      i1l5882 389E                                        i1l5874 3856  
                                      i1l5866 3E6A                                        i1l5858 3E36  
                                      i1l5970 3EFA                                        i1l5884 38B6  
                                      i1l5876 3866                                        i1l5868 3E6E  
                                      i1l5972 3F0E                                        i1l5886 38D2  
                                      i1l5878 387E                                        i1l5974 3F36  
                                      i1l5888 38F0                                        i1l5976 3F4A  
                                      _INLVLA 003A44                                        i1l5994 3FAA  
                                      _INLVLB 003A54                                        _INLVLC 003A64  
                                      i2l5532 43F0                                        i2l5540 44F6  
                                      i1l5996 3FAE                                        _INLVLD 003A74  
                                      _INLVLE 003A84                                        i2l5534 43FE  
                                      i1l5998 3FC8                                        i2l5536 440A  
                                      i2l4940 4364                                        i2l5900 4220  
                                      i2l4942 436A                                        i2l4934 4350  
                                      i2l5910 4448                                        i2l5902 422C  
                                      i2l4936 435E                                        i2l4944 4370  
                                      i2l5912 444C                                        i2l5904 423A  
                                      i2l4946 4374                                        i2l4938 4360  
                                      i2l5906 4434                                        i2l5908 4440  
                                      i2l5890 41E2                                        i2l5892 41F0  
                                      i2l5980 40F4                                        i2l5990 4198  
                                      i2l5982 4118                                        i2l5894 41FC  
                                      i2l5984 4128                                        i2l5896 420A  
                                      i2l5986 4180                                        i2l5898 4212  
                                      i2l5978 40E4                                        i2l5988 4184  
                                ?_setSteering 00CF                                        _OSCFRQ 0039DF  
                            __end_of_actSpeed 3AC4                                        _SMT1PR 003F1B  
                       _UART1_SetErrorHandler 4536                              __end_of___xxtofl 29F0  
                         ?_PWM8_LoadDutyValue 0014                              __end_of_getCurve 2230  
                    __end_of_CCP3_SetCallBack 4568                                  _CCPTMRS0bits 003F5E  
                                _CCPTMRS1bits 003F5F                                  vfprintf@cfmt 00DE  
                                      ___flge 3400                                     ??___aldiv 001C  
                                   ??___aodiv 0024                                     ??___fladd 0036  
                                   ??___aomod 0024                                     ??___fldiv 0032  
                                   ??___awdiv 0018                                     ??___flmul 0032  
                                   ??___fltol 00C9                                 _CCP3_CallBack 00F2  
                                ?_TMR5_Reload 0001                       __end_of_PWM6_Initialize 44B6  
                     __end_of_TMR4_Initialize 42F8                                        clear_0 3FE2  
                                      clear_1 3FEE                                        clear_2 3FFA  
                            ___awdiv@quotient 001A                                        _motPow 0090  
                     fp__CCP3_DefaultCallBack 0000                                        isa$std 000001  
                               _CCP4_CallBack 00F0                                        _smtWay 0078  
                                      _printf 437C                                        pad@buf 0028  
                                      dtoa@fp 00AC                              ?_CCP3_Initialize 0001  
                                      _strlen 3EBA                          ??_PWM8_LoadDutyValue 0016  
                            __end_of_setMotor 35E6                               _ADCC_Initialize 3C18  
        __end_of_TMR4_DefaultInterruptHandler 457E         __size_of_TMR4_DefaultInterruptHandler 0002  
                _TMR4_DefaultInterruptHandler 457C                                        fputc@c 0016  
                              _PMD_Initialize 43CC                                        fputs@c 0023  
                                      fputs@i 0024                                        fputs@s 001F  
                                __mediumconst 0000                         __end_of_TMR5_GATE_ISR 41B2  
                                      tblptrh 003FF7                                        tblptrl 003FF6  
                                      tblptru 003FF8             __size_of_ADCC_GetSingleConversion 0032  
                            __end_of_vfprintf 3BBC                     ?_ADCC_GetSingleConversion 0014  
    TMR4_SetInterruptHandler@InterruptHandler 0014  TMR5_SetGateInterruptHandler@InterruptHandler 0014  
 UART1_SetTxInterruptHandler@InterruptHandler 0014   UART1_SetRxInterruptHandler@InterruptHandler 0014  
        __end_of_UART1_SetOverrunErrorHandler 452C         __size_of_UART1_SetOverrunErrorHandler 000A  
                _UART1_SetOverrunErrorHandler 4522                     _UART1_DefaultErrorHandler 4572  
               __size_of_INTERRUPT_Initialize 004C                  __size_of_UART1_RxDataHandler 002C  
                           getCurve@deltaLeft 0122                                    ___flge@ff1 002A  
                                  ___flge@ff2 002E                       __end_of_PWM7_Initialize 449E  
                     __end_of_TMR5_Initialize 3DA8                                  ___xxtofl@arg 0026  
                                ___xxtofl@exp 0025                             _SYSTEM_Initialize 3D14  
                                ___xxtofl@val 001C                                    __accesstop 0060  
                     __end_of__initialization 400C                              ?_CCP4_Initialize 0001  
                         setSteering@steering 00CF                            ?_SYSTEM_Initialize 0001  
                               ___rparam_used 000001                    __size_of_UART1_rx_vect_isr 003A  
                                  ___fltol@f1 00C5                               _TMR5_WriteTimer 4350  
                          __size_of_calcSpeed 020A                     calcMotorPow@setSpeedDelta 00D1  
                    __end_of_CCP4_SetCallBack 455E                                __pcstackCOMRAM 0001  
                       __end_of_TMR4_CallBack 42CC                            __size_of_checkBatt 0090  
                         ??_SYSTEM_Initialize 0018                                     ?_TMR4_ISR 0001  
                              ivt0x8_undefint 00AC                                 __end_of_fputc 3A30  
                               __end_of_fputs 3E36                               fp__TMR4_10msISR 0000  
                               __end_of_putch 450E                              ?_TMR2_Initialize 0001  
                     __end_of_PWM8_Initialize 4486                        __end_of_PMD_Initialize 43F0  
                 __size_of_PWM7_LoadDutyValue 0034                         CCP3_CaptureISR@module 0003  
                  __size_of_UART1_tx_vect_isr 003A                CCP3_SetCallBack@customCallBack 0014  
                   _UART1_FramingErrorHandler 00F8               fp__TMR4_DefaultInterruptHandler 0000  
               ?_TMR4_DefaultInterruptHandler 0001                       fp__CCP4_DefaultCallBack 0000  
                    __size_of_SMT1_PR_ACQ_ISR 004A                                       ??_fputc 001A  
                   __end_of_SYSTEM_Initialize 3D5E                                       ??_fputs 0023  
                             _CLC3_Initialize 42F8                                       ??_putch 0015  
                 PWM7_LoadDutyValue@dutyValue 0014                                    __pbssBANK0 0060  
                                  __pbssBANK1 0100                 ?_UART1_SetOverrunErrorHandler 0014  
                      ?_UART1_SetErrorHandler 0014                              ?_PWM5_Initialize 0001  
                            ?_TMR3_Initialize 0001                                    __pnvCOMRAM 004C  
                    __size_of_SMT1_PW_ACQ_ISR 0054                         _TMR4_InterruptHandler 00E8  
                                     IVTBASEH 003FD6                                       IVTBASEL 003FD5  
                                     IVTBASEU 003FD7                                       ?___flge 002A  
                                  ??_TMR4_ISR 0013                       __end_of_ADCC_Initialize 3C74  
                  __end_of_PWM6_LoadDutyValue 4046          __end_of_TMR5_SetGateInterruptHandler 454A  
       __size_of_TMR5_SetGateInterruptHandler 000A                  _TMR5_SetGateInterruptHandler 4540  
                                     _CCP3CAP 003F77                                       _CCP4CAP 003F73  
                                     _CCP3CON 003F76                                       _CCP4CON 003F72  
                                     _ADFLTRH 003EE7                                       _ADFLTRL 003EE6  
               __size_of_CCP3_DefaultCallBack 0030                                       _CCP3PPS 003ACF  
                                     _CCP4PPS 003AD0                                       _CLC3CON 003C60  
                                     _CLC3POL 003C61                                       _ADPREVH 003EEE  
                                     _ADPREVL 003EED                              ?_PWM6_Initialize 0001  
                            ?_TMR4_Initialize 0001                                       _ADSTPTH 003EE5  
                                     _ADSTPTL 003EE4                                       ?_printf 00E0  
                             ?_PMD_Initialize 0001                             _UART1_Receive_ISR 3836  
                                  _getReverse 2FB4                                       ?_strlen 0014  
                                     _U1ERRIE 003DFA                                     ?_actSpeed 0022  
                                     _U1ERRIR 003DF9                                 ?_TMR4_10msISR 0001  
                                ?_Default_ISR 0001                          __size_of_UART1_Write 005C  
                          ?_UART1_Receive_ISR 0001                                       _U1RXPPS 003AE5  
                                   ?___xxtofl 001C                            _PWM5_LoadDutyValue 4046  
                                  _distRightM 009C                       __size_of_TMR5_ReadTimer 0024  
                                     _OSCCON1 0039D9                                       _OSCCON3 0039DB  
                           __end_of_calcSpeed 2646                                       _IVTLOCK 003FD4  
                          __size_of_vfpfcnvrt 020C                                       _SMT1CLK 003F21  
                                     _OSCTUNE 0039DE                                       _SMT1CPR 003F15  
                                     _SMT1CPW 003F18                                       _PWM5DCH 003F6D  
                                     _PWM5DCL 003F6C                                       _PWM6DCH 003F69  
                                     _PWM6DCL 003F68                                       _PWM7DCH 003F65  
                                     _PWM7DCL 003F64                                       _SMT1SIG 003F22  
                                     _PWM8DCH 003F61                                       _PWM5CON 003F6E  
                                     _PWM8DCL 003F60                                       _SMT1PRH 003F1C  
                                     _PWM6CON 003F6A                                       _SMT1PRL 003F1B  
                                     _PWM7CON 003F66                                       _SMT1PRU 003F1D  
                                   ?_getCurve 0001                                       _SMT1WIN 003F23  
                                     _SMT1TMR 003F12                                       _PWM8CON 003F62  
                                     _SLRCONA 003A43                                       _SLRCONB 003A53  
                                     _SLRCONC 003A63                                       _SLRCOND 003A73  
                                     _SLRCONE 003A83                             __end_of_checkBatt 3B54  
                         ??_UART1_Receive_ISR 0012                       __end_of_TMR5_WriteTimer 437C  
                         ?_PWM5_LoadDutyValue 0014                              ?_PWM7_Initialize 0001  
                            ?_TMR5_Initialize 0001                     INTERRUPT_Initialize@state 0014  
                        __size_of_setSteering 01F6                                     _CLCIN0PPS 003AD9  
                                   _CLCIN2PPS 003ADB                                     _CLCIN3PPS 003ADC  
                                     __Hparam 0000                                     ?_setMotor 0018  
                                     __Lparam 0000                      __end_of_UART1_Initialize 399A  
                                     ___aldiv 31EC                               __size_of___flge 0104  
                                     ___aodiv 2B84                                       ___fladd 103A  
                                     ___aomod 2D0C                                       ___fldiv 194C  
                                     ___awdiv 36B0                                       ___flmul 14FC  
                                     ___fltol 32F8                     __end_of_UART1_Receive_ISR 38F6  
                                   ?_vfprintf 00D8                          ??_PWM5_LoadDutyValue 0016  
                                __psmallconst 1000                                       __pcinit 3FDC  
                   _TMR5_GateInterruptHandler 00EC                              ?_PWM8_Initialize 0001  
                                     __ramtop 1000                   __size_of_UART1_Transmit_ISR 0044  
               ?_TMR5_SetGateInterruptHandler 0014                                       __ptext0 4414  
                                     __ptext1 30D2                                       __ptext2 2FB4  
                                     __ptext3 1FCE                                       __ptext4 437C  
                                     __ptext5 3B54                                       __ptext6 2230  
                                     __ptext7 1CE8                                       __ptext8 3774  
                                     __ptext9 3EBA                               __size_of_printf 0028  
                              ??_TMR4_10msISR 0013                          __size_of_TMR5_Reload 000E  
                                  ??_actSpeed 0024                               __size_of_strlen 003A  
                     __end_of_CLC3_Initialize 4324                         _OSCILLATOR_Initialize 44CE  
                                   _T2CONbits 003FAC                                  __size_of_abs 0040  
                                __size_of_pad 00C2                                    ??___xxtofl 0020  
                                   _T3CONbits 003FA6                 __size_of_CCP4_DefaultCallBack 0030  
                            ___aldiv@dividend 0014                                     _T4CONbits 003FA0  
                    ??_PIN_MANAGER_Initialize 0014             __size_of_TMR4_SetInterruptHandler 000A  
                                   _T2HLTbits 003FAD                                     _T5CONbits 003F9A  
                   ?_TMR4_SetInterruptHandler 0014                                     _IPR10bits 00398A  
                                     _smtDuty 007C                                     _T4HLTbits 003FA1  
                                  ??_getCurve 00E6                                     _PIE10bits 00399A  
                  __size_of_SYSTEM_Initialize 004A                          end_of_initialization 400C  
                                   _T2RSTbits 003FAF                ??_TMR4_DefaultInterruptHandler 0013  
                                   _T4RSTbits 003FA3                                     _PIR10bits 0039AA  
                                     fputc@fp 0018                             ??_SMT1_PR_ACQ_ISR 0011  
         __end_of_UART1_SetTxInterruptHandler 4518                   _UART1_SetTxInterruptHandler 450E  
                                     fputs@fp 0021                ??_UART1_SetOverrunErrorHandler 0016  
                                  ??_setMotor 001A                      __size_of_SMT1_Initialize 0030  
                           __end_of_vfpfcnvrt 243C                             ?_CCP3_SetCallBack 0014  
                            ___aldiv@quotient 001E                                       postdec2 003FDD  
                           ??_SMT1_PW_ACQ_ISR 0011                                       postinc0 003FEE  
                                     postinc1 003FE6                                       postinc2 003FDE  
                            ?_ADCC_Initialize 0001                            ??_CCP3_SetCallBack 0016  
                                  ??_vfprintf 0039              __end_of_ADCC_GetSingleConversion 417E  
                           UART1_Write@txData 0014                           _UART1_RxDataHandler 4324  
                                     strlen@a 0016                                       strlen@s 0014  
                                 ?_getReverse 0001                                     _PORTBbits 003FCB  
                                   _PORTDbits 003FCD                      __size_of_CCP3_CaptureISR 0034  
                                 ___fladd@grs 00C4                            getCurve@deltaRight 0120  
                               ___xxtofl@sign 0024                                   ___fldiv@grs 00B3  
                                 ___fldiv@rem 00AC                          ?_UART1_RxDataHandler 0001  
                            ?_TMR5_WriteTimer 0009                          setSteering@steeringB 00D6  
                        setSteering@steeringF 00D4                       TMR5_WriteTimer@timerVal 0009  
                                 ___flmul@grs 00AE                                _curveLeftCount 00A6  
                    __size_of_CCP4_CaptureISR 0034             CCP4_DefaultCallBack@capturedValue 0005  
                           ?_CCP4_SetCallBack 0014                  __end_of_INTERRUPT_Initialize 3D14  
                              __end_of___flge 3504                    __size_of_UART1_Receive_ISR 00C0  
                          ??_CCP4_SetCallBack 0016                                   _CLC3CONbits 003C60  
                                 vfpfcnvrt@ap 00CC                                   vfpfcnvrt@fp 00C8  
                                 vfpfcnvrt@ll 00D0                             __size_of_TMR4_ISR 0038  
                      ?_OSCILLATOR_Initialize 0001                                __end_of_printf 43A4  
                 __size_of_PWM8_LoadDutyValue 0034                              ?_CLC3_Initialize 0001  
                              __end_of_strlen 3EF4                                _TMR5_ReadTimer 43F0  
                         start_initialization 3FDC                ??_TMR5_SetGateInterruptHandler 0016  
             __size_of_PIN_MANAGER_Initialize 00CA                                   __end_of_abs 3EBA  
                                 __end_of_pad 3836                          __size_of_Default_ISR 0002  
                     ??_UART1_SetErrorHandler 0016                      __size_of_CCP3_Initialize 002E  
                       ??_UART1_RxDataHandler 0012                                   putch@txData 0015  
                                  ivt0x8_base 0008                                 _uart1RxBuffer 0068  
                                 _actMotorPow 0088                                 _uart1TxBuffer 0070  
                         __size_of_getReverse 011E                          __end_of_TMR4_10msISR 4572  
                                 vfprintf@fmt 00DA                                      ??___flge 0032  
                            ??_PMD_Initialize 0014                        __size_of_TMR5_GATE_ISR 0032  
                                _oldDistRight 0096                      __size_of_CCP4_Initialize 002E  
                  __end_of_PWM7_LoadDutyValue 40E2                             ??_SMT1_Initialize 0014  
                                    ??_printf 0039                                      ??_strlen 0016  
                      __end_of_TMR5_ReadTimer 4414                         CCP4_CaptureISR@module 0007  
                                   ___fladd@a 00BD                                     ___fladd@b 00B9  
                         calcMotorPow@addMPow 00D5                      _ADCC_GetSingleConversion 414C  
                                   ___fldiv@a 002E                                     ___fldiv@b 002A  
                 PWM5_LoadDutyValue@dutyValue 0014                         TMR4_ISR@CountCallBack 0040  
                                   ___flmul@a 002E                                     ___flmul@b 002A  
                                 __pbssCOMRAM 003A                            _UART1_ErrorHandler 00F4  
                               __pcstackBANK0 00AC                                 __pcstackBANK1 0120  
                           __size_of_actSpeed 0094                              ___aodiv@dividend 0014  
                          _PWM6_LoadDutyValue 4012                      __size_of_TMR2_Initialize 001C  
                           __size_of___xxtofl 01B4                      _UART1_RxInterruptHandler 00FC  
                           ??_CCP3_CaptureISR 0003                  __end_of_CCP3_DefaultCallBack 4212  
                      __size_of_TMR4_CallBack 002E                                     _calcSpeed 243C  
                           __size_of_getCurve 0262                           ?_PWM6_LoadDutyValue 0014  
                 PWM8_LoadDutyValue@dutyValue 0014                  fp__UART1_DefaultErrorHandler 0000  
                                   _checkBatt 3AC4                                  _currentSpeed 008C  
                ?_UART1_SetRxInterruptHandler 0014                                     __pnvBANK0 00E8  
                          setMotor@motorPower 0018                        _PIN_MANAGER_Initialize 35E6  
                                   _dtoa$3494 00B6                      __size_of_PWM5_Initialize 0018  
                    __size_of_TMR3_Initialize 0038                             ?_UART1_Initialize 0001  
        __end_of_UART1_SetFramingErrorHandler 4536         __size_of_UART1_SetFramingErrorHandler 000A  
                _UART1_SetFramingErrorHandler 452C                                      ?___aldiv 0014  
             ADCC_GetSingleConversion@channel 0018                                      ?___aodiv 0014  
                                    ?___fladd 00B9                                      ?___aomod 0014  
                           __size_of_setMotor 00E2              __end_of_TMR4_SetInterruptHandler 4554  
                                    ?___fldiv 002A                                      ?___awdiv 0014  
                            ___aodiv@quotient 0026             CCP3_DefaultCallBack@capturedValue 0001  
                           ??_CCP4_CaptureISR 0007                                      ?___flmul 002A  
                                    ?___fltol 00C5                            ??_UART1_Initialize 0016  
                                   _distLeftM 00A0                                     _distFront 00AA  
                            _uart1RxLastError 0042                                 ??_UART1_Write 0014  
                                   _distRight 009E                          ??_PWM6_LoadDutyValue 0016  
                                   _cycle10ms 00A7                             __size_of_vfprintf 0068  
                             ?_TMR5_ReadTimer 0009                                 ?_calcMotorPow 0001  
                                 __smallconst 1000                                      _CLC3GLS0 003C66  
                                    _CLC3GLS1 003C67                                      _CLC3GLS2 003C68  
                                    _CLC3GLS3 003C69                                     _driveMode 00A9  
         fp__UART1_DefaultOverrunErrorHandler 0000      __end_of_UART1_DefaultOverrunErrorHandler 457A  
   __size_of_UART1_DefaultOverrunErrorHandler 0002            ??_UART1_DefaultOverrunErrorHandler 0012  
           ?_UART1_DefaultOverrunErrorHandler 0001              _UART1_DefaultOverrunErrorHandler 4578  
                                    _CLC3SEL0 003C62                                      _CLC3SEL1 003C63  
                                    _CLC3SEL2 003C64                                      _CLC3SEL3 003C65  
                             _SMT1_PR_ACQ_ISR 3DA8                                 ?_calcSteering 0001  
                    __size_of_PWM6_Initialize 0018                      __size_of_TMR4_Initialize 002C  
                               _TMR5_GATE_ISR 4180                                     _curveMode 00A8  
                              __size_of_fputc 0096                                      _T2CLKCON 003FAE  
                              __size_of_fputs 0044                                   _U1ERRIRbits 003DF9  
                                    _T4CLKCON 003FA2                                __size_of_putch 000A  
                                  ?_calcSpeed 0001                          _INTERRUPT_Initialize 3CC8  
                               ??_setSteering 00D2                               ___aldiv@divisor 0018  
                             _SMT1_PW_ACQ_ISR 3C74                               ___aldiv@counter 001C  
                                  ?_checkBatt 0001         UART1_SetErrorHandler@interruptHandler 0014  
                                    _IPR1bits 003981                  __end_of_CCP4_DefaultCallBack 4242  
                           ??_CCP3_Initialize 0016                                      _IPR3bits 003983  
                                    _PIE1bits 003991                                      _PIE3bits 003993  
                                    _IPR7bits 003987                                      _IPR8bits 003988  
                                    _IPR9bits 003989                                      _PIE7bits 003997  
                                    _PIE8bits 003998                                      _PIE9bits 003999  
                                    _IVTBASEH 003FD6                                      _IVTBASEL 003FD5  
                                    _IVTBASEU 003FD7                                      i1u512_20 3FC8  
                                    i1u360_20 4348                                      i1u504_20 3F0E  
                                    i1u512_21 3FC4                                      i1u360_21 4344  
                                    i1u504_21 3F0A                                      i1u506_20 3F4A  
                                    i1u505_28 3F14                                      i1u506_21 3F46  
                                    i1u505_29 3F26                 ??_UART1_SetRxInterruptHandler 0016  
                                    i1u507_28 3F50                                      i1u507_29 3F62  
                                    i1u491_20 38D2                                      i1u490_28 38A4  
                                    i1u491_21 38CE                                      i1u490_29 38B6  
                                    i1u492_28 38D8                                      i1u485_20 3E46  
                                    i1u492_29 38EC                                      i1u485_21 3E42  
                                    i1u486_20 3E6A                                      i1u486_21 3E66  
                                    i2u510_40 4198                                      i2u510_41 4194  
                                    i1u487_20 3856                                      i1u487_21 3852  
                                    i1u496_20 42B2                                      i1u496_21 42AE  
                                    i2u511_48 419E                                      i2u511_49 41B0  
                                    i1u489_20 388E                                      i1u488_28 386C  
                                    i1u489_21 388A                                      i1u488_29 387E  
                                    i2u513_40 3DCC                                      i2u361_40 435E  
                                    i2u513_41 3DC8                                      i2u361_41 435A  
                                    _PIR1bits 0039A1                                      i1u497_28 42B8  
                                    i1u497_29 42CA                                      i2u514_40 3CA2  
                                    i2u514_41 3C9E                                      i2u508_48 4102  
                                    i2u508_49 4116                                      i2u509_48 4136  
                                    i2u509_49 414A                                      _PIR4bits 0039A4  
                                    _PIR6bits 0039A6                                      i2u493_40 41F0  
                                    i2u493_41 41EC                                      _PIR7bits 0039A7  
                                    i2u494_40 4220                                      i2u494_41 421C  
                                    _PIR8bits 0039A8                                      _PIR9bits 0039A9  
                                    _SMT1CON0 003F1E                                      _SMT1CON1 003F1F  
                    __size_of_PWM7_Initialize 0018                      __size_of_TMR5_Initialize 004A  
                                    _SMT1STAT 003F20                             _SMT1_Overflow_ISR 43A4  
                                    _TMR4_ISR 3FA4                    __end_of_UART1_Transmit_ISR 3E7A  
                               _TMR4_CallBack 429E                                     _smtPeriod 0048  
               ?_UART1_SetFramingErrorHandler 0014                                 ??_TMR5_Reload 000B  
                 __size_of_PWM5_LoadDutyValue 0034                                     _vfpfcnvrt 2230  
                          ?_SMT1_Overflow_ISR 0001                             _getBatteryVoltage 44E6  
                                ??_getReverse 0039                                ??_calcMotorPow 00CF  
                                  _ADCON0bits 003EF8                                    _ADCON1bits 003EF9  
                                  _ADCON2bits 003EFA                                    _ADCON3bits 003EFB  
                          ?_getBatteryVoltage 0001                             ??_CCP4_Initialize 0016  
                              ??_calcSteering 00D8                           ??_SMT1_Overflow_ISR 0011  
                   TMR5_ReadTimer@readValHigh 000F                     __size_of_CCP3_SetCallBack 000A  
                              ?_TMR5_GATE_ISR 0001                           __end_of_UART1_Write 3C18  
                    __size_of_PWM8_Initialize 0018                                  _SMT1CON0bits 003F1E  
                                _SMT1CON1bits 003F1F                           ??_getBatteryVoltage 0019  
                                 _INTCON0bits 003FD2                         ?_INTERRUPT_Initialize 0001  
                       __size_of_TMR4_10msISR 000A                          fp__UART1_Receive_ISR 0000  
                      _uart1TxBufferRemaining 004C                             ??_TMR2_Initialize 0014  
                                _uart1RxCount 0043                            __end_of_getReverse 30D2  
                                  _ADSTATbits 003EFC                                   _followCount 0092  
                                    __Hrparam 0000                     __end_of_SMT1_Overflow_ISR 43CC  
                         __end_of_setSteering 283C                                    vfprintf@ap 00DC  
                                    __Lrparam 0000                                    vfprintf@fp 00D8  
                                 _oldDistLeft 0098                                ?_TMR4_CallBack 0001  
                              calcSpeed@speed 00D3                     __end_of_getBatteryVoltage 44F6  
                     ??_OSCILLATOR_Initialize 0014                              __size_of___aldiv 010C  
                            __size_of___aodiv 0188                              __size_of___fladd 04C2  
                            __size_of___aomod 0164                              __size_of___fldiv 039C  
                            __size_of___awdiv 00C4                              __size_of___flmul 0450  
                            __size_of___fltol 0108                                  _SMT1STATbits 003F20  
                        _CCP3_DefaultCallBack 41E2                       __end_of_SMT1_PR_ACQ_ISR 3DF2  
                                  ?_vfpfcnvrt 00C8                               ___aodiv@divisor 001C  
                           ??_PWM5_Initialize 0014                             ??_TMR3_Initialize 0014  
                             ___aodiv@counter 0024                      _TMR4_SetInterruptHandler 454A  
                                    _actSpeed 3A30          __size_of_UART1_SetRxInterruptHandler 000A  
                                _TMR4_10msISR 4568                                      ___xxtofl 283C  
                    __size_of_ADCC_Initialize 005C                           __end_of_TMR5_Reload 4504  
                   __size_of_CCP4_SetCallBack 000A                                      __pivt0x8 0008  
                     __end_of_SMT1_PW_ACQ_ISR 3CC8                                      _getCurve 1FCE  
                                    __ptext10 3DF2                                      __ptext11 399A  
                                    __ptext20 3400                                      __ptext12 4504  
                                    __ptext21 29F0                                      __ptext13 3BBC  
                                    __ptext30 407A                                      __ptext22 2646  
                                    __ptext14 3E7A                                      __ptext31 40AE  
                                    __ptext23 194C                                      __ptext15 2D0C  
                                    __ptext40 450E                                      __ptext32 3A30  
                                    __ptext24 4012                                      __ptext16 2B84  
                                    __ptext41 4518                                      __ptext33 31EC  
                                    __ptext25 4046                                      __ptext17 3AC4  
                                    __ptext50 4452                                      __ptext42 4522  
                                    __ptext34 283C                                      __ptext26 243C  
                                    __ptext18 44E6                                      __ptext51 41B2  
                                    __ptext43 452C                                      __ptext35 32F8  
                                    __ptext27 103A                                      __ptext19 414C  
                                    __ptext60 42F8                                      __ptext52 446E  
                                    __ptext44 4536                                      __ptext36 14FC  
                                    __ptext28 2E70                                      __ptext61 4242  
                                    __ptext53 4486                                      __ptext45 3D5E  
                                    __ptext37 36B0                                      __ptext29 3504  
                                    __ptext70 4578                                      __ptext62 4554  
                                    __ptext54 449E                                      __ptext46 4540  
                                    __ptext38 3D14                                      __ptext71 457A  
                                    __ptext63 4270                                      __ptext55 44B6  
                                    __ptext47 42CC                                      __ptext39 38F6  
                                    __ptext80 41E2                                      __ptext72 4572  
                                    __ptext64 455E                                      __ptext56 43CC  
                                    __ptext48 454A                                      __ptext81 4118  
                                    __ptext73 4324                                      __ptext65 3C18  
                                    __ptext57 35E6                                      __ptext49 3F6A  
                                    __ptext90 43A4                                      __ptext82 4212  
                                    __ptext74 3FA4                                      __ptext66 3EF4  
                                    __ptext58 44CE                                      __ptext91 0000  
                                    __ptext83 4180                                      __ptext75 429E  
                                    __ptext67 3E36                                      __ptext59 3CC8  
                                    __ptext84 4434                                      __ptext76 4568  
                                    __ptext68 3F30                                      __ptext85 44F6  
                                    __ptext77 457C                                      __ptext69 3836  
                                    __ptext86 4350                                      __ptext78 4580  
                                    __ptext87 43F0                                      __ptext79 40E4  
                                    __ptext88 3DA8                                      __ptext89 3C74  
                                    _distLeft 00A2                __size_of_UART1_SetErrorHandler 000A  
                                 ??_calcSpeed 00CF                 __end_of_UART1_SetErrorHandler 4540  
                                  _T3GCONbits 003FA7                                   ??_checkBatt 003A  
                           ??_TMR4_Initialize 0016                             ??_PWM6_Initialize 0014  
                               __size_of_main 0020                                 __size_of_dtoa 02E6  
                                    _oldSpeed 008A                                    _T5GCONbits 003F9B  
                               __size_of_loop 011A                               _SMT1_Initialize 41B2  
                                 _IVTLOCKbits 003FD4                                      _setMotor 3504  
                                    _setSpeed 008E                      __size_of_TMR5_WriteTimer 002C  
                   _UART1_OverrunErrorHandler 00F6  UART1_SetOverrunErrorHandler@interruptHandler 0014  
                                    isa$xinst 000000            __size_of_UART1_DefaultErrorHandler 0006  
                  ??_ADCC_GetSingleConversion 0016                    ?_UART1_DefaultErrorHandler 0001  
                       ?_CCP3_DefaultCallBack 0001                                      _vfprintf 3B54  
                                   printf@fmt 00E0                    __end_of_PWM8_LoadDutyValue 40AE  
                             _CCP3_CaptureISR 40E4                                   _UART1_Write 3BBC  
                       fp__UART1_Transmit_ISR 0000                             ??_TMR5_Initialize 0016  
                           ??_PWM7_Initialize 0014           fp__TMR5_DefaultGateInterruptHandler 0000  
    __end_of_TMR5_DefaultGateInterruptHandler 4452     __size_of_TMR5_DefaultGateInterruptHandler 001E  
          ??_TMR5_DefaultGateInterruptHandler 0011             ?_TMR5_DefaultGateInterruptHandler 0001  
            _TMR5_DefaultGateInterruptHandler 4434                              ___aomod@dividend 0014  
                              _battCheckCount 0094                                 ??_Default_ISR 0001  
              ??_UART1_SetFramingErrorHandler 0016                                  _reverseCount 009A  
                             ??_TMR5_GATE_ISR 0011                   __end_of_UART1_RxDataHandler 4350  
                                 _uart1RxHead 0045                          _CCP4_DefaultCallBack 4212  
                                 _uart1TxHead 0047                                   _uart1RxTail 0044  
                                 _uart1TxTail 0046                        ??_INTERRUPT_Initialize 0014  
                          _PWM7_LoadDutyValue 40AE                                      intlevel1 0000  
                                    intlevel2 0000                      __size_of_CLC3_Initialize 002C  
                                 _setSteering 2646                               _CCP4_CaptureISR 4118  
                     ?_PIN_MANAGER_Initialize 0001                             ??_PWM8_Initialize 0014  
                         ?_PWM7_LoadDutyValue 0014                          __end_of_calcMotorPow 2FB4  
                             ??_TMR4_CallBack 0013                    __size_of_SMT1_Overflow_ISR 0028  
                        __end_of_calcSteering 2B84                           _uart1RxStatusBuffer 0060  
                                    printf@ap 00E4                              ??_TMR5_ReadTimer 000B  
                  __size_of_getBatteryVoltage 0010  UART1_SetFramingErrorHandler@interruptHandler 0014  
           __end_of_UART1_DefaultErrorHandler 4578                               ___aomod@divisor 001C  
                                 ??_vfpfcnvrt 00CE                                   _reverseTime 0086  
                             ___aomod@counter 0024                              ?_SMT1_PR_ACQ_ISR 0001  
                                 _TMR5_Reload 44F6                                    _SMT1SIGPPS 003AD2  
                                  _SMT1WINPPS 003AD1                          ??_PWM7_LoadDutyValue 0016  
                               actSpeed@speed 0024                         ?_CCP4_DefaultCallBack 0005  
                   calcMotorPow@oldSpeedDelta 00D3                              _CCP3_SetCallBack 455E  
                   __size_of_UART1_Initialize 00A4                                  ___aldiv@sign 001D  
                            ?_SMT1_PW_ACQ_ISR 0001                               _CCP3_Initialize 4270  
                 PWM6_LoadDutyValue@dutyValue 0014                             calcSteering@delta 00DA  
                    _UART1_TxInterruptHandler 00FA                                 ___fladd@signs 00C1  
                         __end_of_Default_ISR 4582                       __end_of_SMT1_Initialize 41E2  
                                ___aodiv@sign 0025                __end_of_PIN_MANAGER_Initialize 36B0  
                           ??_ADCC_Initialize 0014                                  ___fladd@aexp 00C2  
                                ___fladd@bexp 00C3                  ?_UART1_SetTxInterruptHandler 0014  
                                ___aomod@sign 0025                       __end_of_CCP3_CaptureISR 4118  
