

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Jan 31 16:29:18 2024

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F46K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=4,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=4,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1
    70                           	psect	text57,global,reloc=2,class=CODE,delta=1
    71                           	psect	text58,global,reloc=4,class=CODE,delta=1
    72                           	psect	text59,global,reloc=2,class=CODE,delta=1
    73                           	psect	text60,global,reloc=2,class=CODE,delta=1
    74                           	psect	text61,global,reloc=2,class=CODE,delta=1
    75                           	psect	text62,global,reloc=4,class=CODE,delta=1
    76                           	psect	text63,global,reloc=4,class=CODE,delta=1
    77                           	psect	text64,global,reloc=2,class=CODE,delta=1
    78                           	psect	text65,global,reloc=4,class=CODE,delta=1
    79                           	psect	text66,global,reloc=2,class=CODE,delta=1
    80                           	psect	text67,global,reloc=4,class=CODE,delta=1
    81                           	psect	text68,global,reloc=2,class=CODE,delta=1
    82                           	psect	text69,global,reloc=2,class=CODE,delta=1
    83                           	psect	text70,global,reloc=2,class=CODE,delta=1
    84                           	psect	text71,global,reloc=2,class=CODE,delta=1
    85                           	psect	text72,global,reloc=4,class=CODE,delta=1
    86                           	psect	text73,global,reloc=4,class=CODE,delta=1
    87                           	psect	text74,global,reloc=4,class=CODE,delta=1
    88                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    89                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    90                           	psect	text75,global,reloc=4,class=CODE,delta=1
    91                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    92                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    93                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    94  0000                     
    95                           ; Version 2.20
    96                           ; Generated 05/05/2020 GMT
    97                           ; 
    98                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    99                           ; All rights reserved.
   100                           ; 
   101                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   102                           ; 
   103                           ; Redistribution and use in source and binary forms, with or without modification, are
   104                           ; permitted provided that the following conditions are met:
   105                           ; 
   106                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   107                           ;        conditions and the following disclaimer.
   108                           ; 
   109                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   110                           ;        of conditions and the following disclaimer in the documentation and/or other
   111                           ;        materials provided with the distribution.
   112                           ; 
   113                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   114                           ;        software without specific prior written permission.
   115                           ; 
   116                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   117                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   118                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   119                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   120                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   121                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   122                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   123                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   124                           ; 
   125                           ; 
   126                           ; Code-generator required, PIC18F46K42 Definitions
   127                           ; 
   128                           ; SFR Addresses
   129  0000                     
   130                           	psect	idataCOMRAM
   131  00279E                     __pidataCOMRAM:
   132                           	callstack 0
   133                           
   134                           ;initializer for _driveMode
   135  00279E  01                 	db	1
   136                           
   137                           	psect	nvBANK0
   138  0000CC                     __pnvBANK0:
   139                           	callstack 0
   140  0000CC                     _TMR4_InterruptHandler:
   141                           	callstack 0
   142  0000CC                     	ds	2
   143  0000CE                     _timer3ReloadVal:
   144                           	callstack 0
   145  0000CE                     	ds	2
   146  0000D0                     _TMR5_GateInterruptHandler:
   147                           	callstack 0
   148  0000D0                     	ds	2
   149  0000D2                     _timer5ReloadVal:
   150                           	callstack 0
   151  0000D2                     	ds	2
   152  0000D4                     _CCP4_CallBack:
   153                           	callstack 0
   154  0000D4                     	ds	2
   155  0000D6                     _CCP3_CallBack:
   156                           	callstack 0
   157  0000D6                     	ds	2
   158  0000D8                     _UART1_ErrorHandler:
   159                           	callstack 0
   160  0000D8                     	ds	2
   161  0000DA                     _UART1_OverrunErrorHandler:
   162                           	callstack 0
   163  0000DA                     	ds	2
   164  0000DC                     _UART1_FramingErrorHandler:
   165                           	callstack 0
   166  0000DC                     	ds	2
   167  0000DE                     _UART1_TxInterruptHandler:
   168                           	callstack 0
   169  0000DE                     	ds	2
   170  0000E0                     _UART1_RxInterruptHandler:
   171                           	callstack 0
   172  0000E0                     	ds	2
   173  0000E2                     _uart1TxBufferRemaining:
   174                           	callstack 0
   175  0000E2                     	ds	1
   176  0000                     _PIR4bits	set	14756
   177  0000                     _PIR1bits	set	14753
   178  0000                     _PIE1bits	set	14737
   179  0000                     _PIE7bits	set	14743
   180  0000                     _PIR7bits	set	14759
   181  0000                     _PIR6bits	set	14758
   182  0000                     _PIE8bits	set	14744
   183  0000                     _PIR8bits	set	14760
   184  0000                     _PIE10bits	set	14746
   185  0000                     _PIR10bits	set	14762
   186  0000                     _PIE9bits	set	14745
   187  0000                     _PIR9bits	set	14761
   188  0000                     _IPR9bits	set	14729
   189  0000                     _IPR7bits	set	14727
   190  0000                     _IPR8bits	set	14728
   191  0000                     _IPR10bits	set	14730
   192  0000                     _IPR1bits	set	14721
   193  0000                     _IPR3bits	set	14723
   194  0000                     _PIE3bits	set	14739
   195  0000                     _PMD7	set	14791
   196  0000                     _PMD6	set	14790
   197  0000                     _PMD5	set	14789
   198  0000                     _PMD4	set	14788
   199  0000                     _PMD3	set	14787
   200  0000                     _PMD2	set	14786
   201  0000                     _PMD1	set	14785
   202  0000                     _PMD0	set	14784
   203  0000                     _OSCTUNE	set	14814
   204  0000                     _OSCFRQ	set	14815
   205  0000                     _OSCEN	set	14813
   206  0000                     _OSCCON3	set	14811
   207  0000                     _OSCCON1	set	14809
   208  0000                     _CCP4PPS	set	15056
   209  0000                     _SMT1SIGPPS	set	15058
   210  0000                     _CLCIN2PPS	set	15067
   211  0000                     _RB3PPS	set	14859
   212  0000                     _RA3PPS	set	14851
   213  0000                     _SMT1WINPPS	set	15057
   214  0000                     _CLCIN0PPS	set	15065
   215  0000                     _RA4PPS	set	14852
   216  0000                     _T5GPPS	set	15049
   217  0000                     _RA0PPS	set	14848
   218  0000                     _U1RXPPS	set	15077
   219  0000                     _RA1PPS	set	14849
   220  0000                     _CLCIN3PPS	set	15068
   221  0000                     _CCP3PPS	set	15055
   222  0000                     _INLVLE	set	14980
   223  0000                     _INLVLD	set	14964
   224  0000                     _INLVLC	set	14948
   225  0000                     _INLVLB	set	14932
   226  0000                     _INLVLA	set	14916
   227  0000                     _SLRCONE	set	14979
   228  0000                     _SLRCOND	set	14963
   229  0000                     _SLRCONC	set	14947
   230  0000                     _SLRCONB	set	14931
   231  0000                     _SLRCONA	set	14915
   232  0000                     _ODCOND	set	14962
   233  0000                     _ODCONC	set	14946
   234  0000                     _ODCONB	set	14930
   235  0000                     _ODCONA	set	14914
   236  0000                     _ODCONE	set	14978
   237  0000                     _RD1I2C	set	14971
   238  0000                     _RD0I2C	set	14970
   239  0000                     _RC4I2C	set	14955
   240  0000                     _RC3I2C	set	14954
   241  0000                     _RB2I2C	set	14939
   242  0000                     _RB1I2C	set	14938
   243  0000                     _WPUC	set	14945
   244  0000                     _WPUA	set	14913
   245  0000                     _WPUB	set	14929
   246  0000                     _WPUE	set	14977
   247  0000                     _WPUD	set	14961
   248  0000                     _ANSELA	set	14912
   249  0000                     _ANSELE	set	14976
   250  0000                     _ANSELB	set	14928
   251  0000                     _ANSELC	set	14944
   252  0000                     _ANSELD	set	14960
   253  0000                     _CLC3CON	set	15456
   254  0000                     _CLC3GLS3	set	15465
   255  0000                     _CLC3GLS2	set	15464
   256  0000                     _CLC3GLS1	set	15463
   257  0000                     _CLC3GLS0	set	15462
   258  0000                     _CLC3SEL3	set	15461
   259  0000                     _CLC3SEL2	set	15460
   260  0000                     _CLC3SEL1	set	15459
   261  0000                     _CLC3SEL0	set	15458
   262  0000                     _CLC3POL	set	15457
   263  0000                     _CLC3CONbits	set	15456
   264  0000                     _U1RXB	set	15848
   265  0000                     _U1TXB	set	15850
   266  0000                     _U1ERRIRbits	set	15865
   267  0000                     _U1ERRIE	set	15866
   268  0000                     _U1ERRIR	set	15865
   269  0000                     _U1UIR	set	15864
   270  0000                     _U1FIFO	set	15863
   271  0000                     _U1BRGH	set	15862
   272  0000                     _U1BRGL	set	15861
   273  0000                     _U1CON2	set	15860
   274  0000                     _U1CON1	set	15859
   275  0000                     _U1CON0	set	15858
   276  0000                     _U1P3H	set	15857
   277  0000                     _U1P3L	set	15856
   278  0000                     _U1P2H	set	15855
   279  0000                     _U1P2L	set	15854
   280  0000                     _U1P1H	set	15853
   281  0000                     _U1P1L	set	15852
   282  0000                     _ADCON1bits	set	16121
   283  0000                     _ADERRL	set	16098
   284  0000                     _ADERRH	set	16099
   285  0000                     _ADPREVL	set	16109
   286  0000                     _ADPREVH	set	16110
   287  0000                     _ADFLTRL	set	16102
   288  0000                     _ADFLTRH	set	16103
   289  0000                     _ADSTATbits	set	16124
   290  0000                     _ADACCL	set	16104
   291  0000                     _ADACCH	set	16105
   292  0000                     _ADCON2bits	set	16122
   293  0000                     _ADCNT	set	16107
   294  0000                     _ADCON3bits	set	16123
   295  0000                     _ADRESL	set	16111
   296  0000                     _ADRESH	set	16112
   297  0000                     _ADCON0bits	set	16120
   298  0000                     _ADCON0	set	16120
   299  0000                     _ADCLK	set	16127
   300  0000                     _ADACT	set	16126
   301  0000                     _ADREF	set	16125
   302  0000                     _ADSTAT	set	16124
   303  0000                     _ADCON3	set	16123
   304  0000                     _ADCON2	set	16122
   305  0000                     _ADCON1	set	16121
   306  0000                     _ADPREH	set	16119
   307  0000                     _ADPREL	set	16118
   308  0000                     _ADCAP	set	16117
   309  0000                     _ADACQH	set	16116
   310  0000                     _ADACQL	set	16115
   311  0000                     _ADPCH	set	16113
   312  0000                     _ADRPT	set	16108
   313  0000                     _ADACCU	set	16106
   314  0000                     _ADSTPTH	set	16101
   315  0000                     _ADSTPTL	set	16100
   316  0000                     _ADUTHH	set	16097
   317  0000                     _ADUTHL	set	16096
   318  0000                     _ADLTHH	set	16095
   319  0000                     _ADLTHL	set	16094
   320  0000                     _SMT1TMR	set	16146
   321  0000                     _SMT1CPR	set	16149
   322  0000                     _SMT1CPW	set	16152
   323  0000                     _SMT1PR	set	16155
   324  0000                     _SMT1STATbits	set	16160
   325  0000                     _SMT1CON0bits	set	16158
   326  0000                     _SMT1CON1bits	set	16159
   327  0000                     _SMT1PRL	set	16155
   328  0000                     _SMT1PRH	set	16156
   329  0000                     _SMT1PRU	set	16157
   330  0000                     _SMT1SIG	set	16162
   331  0000                     _SMT1WIN	set	16163
   332  0000                     _SMT1CLK	set	16161
   333  0000                     _SMT1STAT	set	16160
   334  0000                     _SMT1CON1	set	16159
   335  0000                     _SMT1CON0	set	16158
   336  0000                     _CCPTMRS1bits	set	16223
   337  0000                     _CCPTMRS0bits	set	16222
   338  0000                     _PORTBbits	set	16331
   339  0000                     _PR2	set	16299
   340  0000                     _TMR2	set	16298
   341  0000                     _T2CONbits	set	16300
   342  0000                     _T2RSTbits	set	16303
   343  0000                     _T2HLTbits	set	16301
   344  0000                     _T2CON	set	16300
   345  0000                     _T2TMR	set	16298
   346  0000                     _T2PR	set	16299
   347  0000                     _T2RST	set	16303
   348  0000                     _T2HLT	set	16301
   349  0000                     _T2CLKCON	set	16302
   350  0000                     _PWM6DCL	set	16232
   351  0000                     _PWM6DCH	set	16233
   352  0000                     _PWM6CON	set	16234
   353  0000                     _PWM5DCL	set	16236
   354  0000                     _PWM5DCH	set	16237
   355  0000                     _PWM5CON	set	16238
   356  0000                     _PWM8DCL	set	16224
   357  0000                     _PWM8DCH	set	16225
   358  0000                     _PWM8CON	set	16226
   359  0000                     _PWM7DCL	set	16228
   360  0000                     _PWM7DCH	set	16229
   361  0000                     _PWM7CON	set	16230
   362  0000                     _PR4	set	16287
   363  0000                     _TMR4	set	16286
   364  0000                     _T4CONbits	set	16288
   365  0000                     _T4RSTbits	set	16291
   366  0000                     _T4HLTbits	set	16289
   367  0000                     _T4CON	set	16288
   368  0000                     _T4TMR	set	16286
   369  0000                     _T4PR	set	16287
   370  0000                     _T4RST	set	16291
   371  0000                     _T4HLT	set	16289
   372  0000                     _T4CLKCON	set	16290
   373  0000                     _T3GCONbits	set	16295
   374  0000                     _T3CONbits	set	16294
   375  0000                     _T3CON	set	16294
   376  0000                     _TMR3L	set	16292
   377  0000                     _TMR3H	set	16293
   378  0000                     _T3CLK	set	16297
   379  0000                     _T3GATE	set	16296
   380  0000                     _T3GCON	set	16295
   381  0000                     _T5GCONbits	set	16283
   382  0000                     _T5CONbits	set	16282
   383  0000                     _T5CON	set	16282
   384  0000                     _TMR5L	set	16280
   385  0000                     _TMR5H	set	16281
   386  0000                     _T5CLK	set	16285
   387  0000                     _T5GATE	set	16284
   388  0000                     _T5GCON	set	16283
   389  0000                     _CCPR4L	set	16240
   390  0000                     _CCPR4H	set	16241
   391  0000                     _CCP4CAP	set	16243
   392  0000                     _CCP4CON	set	16242
   393  0000                     _CCPR3L	set	16244
   394  0000                     _CCPR3H	set	16245
   395  0000                     _CCP3CAP	set	16247
   396  0000                     _CCP3CON	set	16246
   397  0000                     _PORTDbits	set	16333
   398  0000                     _IVTBASEL	set	16341
   399  0000                     _IVTBASEH	set	16342
   400  0000                     _IVTBASEU	set	16343
   401  0000                     _IVTLOCKbits	set	16340
   402  0000                     _IVTLOCK	set	16340
   403  0000                     _INTCON0bits	set	16338
   404  0000                     _TRISD	set	16325
   405  0000                     _TRISC	set	16324
   406  0000                     _TRISB	set	16323
   407  0000                     _TRISA	set	16322
   408  0000                     _TRISE	set	16326
   409  0000                     _LATC	set	16316
   410  0000                     _LATB	set	16315
   411  0000                     _LATA	set	16314
   412  0000                     _LATD	set	16317
   413  0000                     _LATE	set	16318
   414  0000                     _GIE	set	130711
   415                           
   416                           ; #config settings
   417                           
   418                           	psect	cinit
   419  002176                     __pcinit:
   420                           	callstack 0
   421  002176                     start_initialization:
   422                           	callstack 0
   423  002176                     __initialization:
   424                           	callstack 0
   425                           
   426                           ; Initialize objects allocated to COMRAM (1 bytes)
   427                           ; load TBLPTR registers with __pidataCOMRAM
   428  002176  0E9E               	movlw	low __pidataCOMRAM
   429  002178  6EF6               	movwf	tblptrl,c
   430  00217A  0E27               	movlw	high __pidataCOMRAM
   431  00217C  6EF7               	movwf	tblptrh,c
   432  00217E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   433  002180  6EF8               	movwf	tblptru,c
   434  002182  0009               	tblrd		*+	;fetch initializer
   435  002184  006F FFD4  F04C    	movff	tablat,__pdataCOMRAM
   436                           
   437                           ; Clear objects allocated to BANK0 (63 bytes)
   438  00218A  EE00  F060         	lfsr	0,__pbssBANK0
   439  00218E  0E3F               	movlw	63
   440  002190                     clear_0:
   441  002190  6AEE               	clrf	postinc0,c
   442  002192  06E8               	decf	wreg,f,c
   443  002194  E1FD               	bnz	clear_0
   444                           
   445                           ; Clear objects allocated to COMRAM (18 bytes)
   446  002196  EE00  F03A         	lfsr	0,__pbssCOMRAM
   447  00219A  0E12               	movlw	18
   448  00219C                     clear_1:
   449  00219C  6AEE               	clrf	postinc0,c
   450  00219E  06E8               	decf	wreg,f,c
   451  0021A0  E1FD               	bnz	clear_1
   452                           
   453                           ;
   454                           ; Setup IVTBASE
   455                           ;
   456  0021A2  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   457  0021A4  6ED5               	movwf	213,c
   458  0021A6  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   459  0021A8  6ED6               	movwf	214,c
   460  0021AA  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   461  0021AC  6ED7               	movwf	215,c
   462  0021AE                     end_of_initialization:
   463                           	callstack 0
   464  0021AE                     __end_of__initialization:
   465                           	callstack 0
   466  0021AE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   467  0021B0  6EF8               	movwf	tblptru,c
   468  0021B2  0100               	movlb	0
   469  0021B4  EF28  F013         	goto	_main	;jump to C main() function
   470                           
   471                           	psect	bssCOMRAM
   472  00003A                     __pbssCOMRAM:
   473                           	callstack 0
   474  00003A                     _oldDistLeft:
   475                           	callstack 0
   476  00003A                     	ds	2
   477  00003C                     TMR4_ISR@CountCallBack:
   478                           	callstack 0
   479  00003C                     	ds	2
   480  00003E                     _delay:
   481                           	callstack 0
   482  00003E                     	ds	1
   483  00003F                     _curveMode:
   484                           	callstack 0
   485  00003F                     	ds	1
   486  000040                     _uart1RxLastError:
   487                           	callstack 0
   488  000040                     	ds	1
   489  000041                     _uart1RxCount:
   490                           	callstack 0
   491  000041                     	ds	1
   492  000042                     _uart1RxTail:
   493                           	callstack 0
   494  000042                     	ds	1
   495  000043                     _uart1RxHead:
   496                           	callstack 0
   497  000043                     	ds	1
   498  000044                     _uart1TxTail:
   499                           	callstack 0
   500  000044                     	ds	1
   501  000045                     _uart1TxHead:
   502                           	callstack 0
   503  000045                     	ds	1
   504  000046                     _smtPeriod:
   505                           	callstack 0
   506  000046                     	ds	4
   507  00004A                     _distFront:
   508                           	callstack 0
   509  00004A                     	ds	2
   510                           
   511                           	psect	dataCOMRAM
   512  00004C                     __pdataCOMRAM:
   513                           	callstack 0
   514  00004C                     _driveMode:
   515                           	callstack 0
   516  00004C                     	ds	1
   517                           
   518                           	psect	bssBANK0
   519  000060                     __pbssBANK0:
   520                           	callstack 0
   521  000060                     _uart1RxStatusBuffer:
   522                           	callstack 0
   523  000060                     	ds	8
   524  000068                     _uart1RxBuffer:
   525                           	callstack 0
   526  000068                     	ds	8
   527  000070                     _uart1TxBuffer:
   528                           	callstack 0
   529  000070                     	ds	8
   530  000078                     _smtWay:
   531                           	callstack 0
   532  000078                     	ds	4
   533  00007C                     _smtDuty:
   534                           	callstack 0
   535  00007C                     	ds	4
   536  000080                     _BatteryVolt:
   537                           	callstack 0
   538  000080                     	ds	2
   539  000082                     _reverseTime:
   540                           	callstack 0
   541  000082                     	ds	2
   542  000084                     _actMotorPow:
   543                           	callstack 0
   544  000084                     	ds	2
   545  000086                     _oldSpeed:
   546                           	callstack 0
   547  000086                     	ds	2
   548  000088                     _currentSpeed:
   549                           	callstack 0
   550  000088                     	ds	2
   551  00008A                     _setSpeed:
   552                           	callstack 0
   553  00008A                     	ds	2
   554  00008C                     _motPow:
   555                           	callstack 0
   556  00008C                     	ds	2
   557  00008E                     _middleOffSet:
   558                           	callstack 0
   559  00008E                     	ds	2
   560  000090                     _battCheckCount:
   561                           	callstack 0
   562  000090                     	ds	2
   563  000092                     _oldDistRight:
   564                           	callstack 0
   565  000092                     	ds	2
   566  000094                     _reverseCount:
   567                           	callstack 0
   568  000094                     	ds	2
   569  000096                     _distRightM:
   570                           	callstack 0
   571  000096                     	ds	2
   572  000098                     _distRight:
   573                           	callstack 0
   574  000098                     	ds	2
   575  00009A                     _distLeftM:
   576                           	callstack 0
   577  00009A                     	ds	2
   578  00009C                     _distLeft:
   579                           	callstack 0
   580  00009C                     	ds	2
   581  00009E                     _cycle10ms:
   582                           	callstack 0
   583  00009E                     	ds	1
   584                           
   585                           	psect	cstackBANK0
   586  00009F                     __pcstackBANK0:
   587                           	callstack 0
   588  00009F                     ___flmul@sign:
   589                           	callstack 0
   590                           
   591                           ; 1 bytes @ 0x0
   592  00009F                     	ds	1
   593  0000A0                     ___flmul@aexp:
   594                           	callstack 0
   595                           
   596                           ; 1 bytes @ 0x1
   597  0000A0                     	ds	1
   598  0000A1                     ___flmul@grs:
   599                           	callstack 0
   600                           
   601                           ; 4 bytes @ 0x2
   602  0000A1                     	ds	4
   603  0000A5                     ___flmul@bexp:
   604                           	callstack 0
   605                           
   606                           ; 1 bytes @ 0x6
   607  0000A5                     	ds	1
   608  0000A6                     ___flmul@prod:
   609                           	callstack 0
   610                           
   611                           ; 4 bytes @ 0x7
   612  0000A6                     	ds	4
   613  0000AA                     ___flmul@temp:
   614                           	callstack 0
   615                           
   616                           ; 2 bytes @ 0xB
   617  0000AA                     	ds	2
   618  0000AC                     ?___fladd:
   619                           	callstack 0
   620  0000AC                     ___fladd@b:
   621                           	callstack 0
   622                           
   623                           ; 4 bytes @ 0xD
   624  0000AC                     	ds	4
   625  0000B0                     ___fladd@a:
   626                           	callstack 0
   627                           
   628                           ; 4 bytes @ 0x11
   629  0000B0                     	ds	4
   630  0000B4                     ___fladd@signs:
   631                           	callstack 0
   632                           
   633                           ; 1 bytes @ 0x15
   634  0000B4                     	ds	1
   635  0000B5                     ___fladd@aexp:
   636                           	callstack 0
   637                           
   638                           ; 1 bytes @ 0x16
   639  0000B5                     	ds	1
   640  0000B6                     ___fladd@bexp:
   641                           	callstack 0
   642                           
   643                           ; 1 bytes @ 0x17
   644  0000B6                     	ds	1
   645  0000B7                     ___fladd@grs:
   646                           	callstack 0
   647                           
   648                           ; 1 bytes @ 0x18
   649  0000B7                     	ds	1
   650  0000B8                     ?___fltol:
   651                           	callstack 0
   652  0000B8                     ___fltol@f1:
   653                           	callstack 0
   654                           
   655                           ; 4 bytes @ 0x19
   656  0000B8                     	ds	4
   657  0000BC                     ??___fltol:
   658                           
   659                           ; 1 bytes @ 0x1D
   660  0000BC                     	ds	4
   661  0000C0                     ___fltol@sign1:
   662                           	callstack 0
   663                           
   664                           ; 1 bytes @ 0x21
   665  0000C0                     	ds	1
   666  0000C1                     ___fltol@exp1:
   667                           	callstack 0
   668                           
   669                           ; 1 bytes @ 0x22
   670  0000C1                     	ds	1
   671  0000C2                     ??_calcSteering:
   672  0000C2                     ??_calcSpeed:
   673  0000C2                     ??_calcMotorPow:
   674                           
   675                           ; 1 bytes @ 0x23
   676  0000C2                     	ds	2
   677  0000C4                     calcMotorPow@setSpeedDelta:
   678                           	callstack 0
   679  0000C4                     _calcSteering$3880:
   680                           	callstack 0
   681                           
   682                           ; 2 bytes @ 0x25
   683  0000C4                     	ds	2
   684  0000C6                     calcSteering@delta:
   685                           	callstack 0
   686  0000C6                     calcSpeed@speed:
   687                           	callstack 0
   688  0000C6                     calcMotorPow@oldSpeedDelta:
   689                           	callstack 0
   690                           
   691                           ; 2 bytes @ 0x27
   692  0000C6                     	ds	2
   693  0000C8                     calcMotorPow@addMPow:
   694                           	callstack 0
   695  0000C8                     startAccell@MPow:
   696                           	callstack 0
   697                           
   698                           ; 4 bytes @ 0x29
   699  0000C8                     	ds	4
   700                           
   701                           	psect	cstackCOMRAM
   702  000001                     __pcstackCOMRAM:
   703                           	callstack 0
   704  000001                     CCP3_DefaultCallBack@capturedValue:
   705                           	callstack 0
   706                           
   707                           ; 2 bytes @ 0x0
   708  000001                     	ds	2
   709  000003                     CCP3_CaptureISR@module:
   710                           	callstack 0
   711                           
   712                           ; 2 bytes @ 0x2
   713  000003                     	ds	2
   714  000005                     CCP4_DefaultCallBack@capturedValue:
   715                           	callstack 0
   716                           
   717                           ; 2 bytes @ 0x4
   718  000005                     	ds	2
   719  000007                     CCP4_CaptureISR@module:
   720                           	callstack 0
   721                           
   722                           ; 2 bytes @ 0x6
   723  000007                     	ds	2
   724  000009                     ?_TMR5_ReadTimer:
   725                           	callstack 0
   726  000009                     TMR5_WriteTimer@timerVal:
   727                           	callstack 0
   728                           
   729                           ; 2 bytes @ 0x8
   730  000009                     	ds	2
   731  00000B                     ??_TMR5_ReadTimer:
   732  00000B                     
   733                           ; 1 bytes @ 0xA
   734  00000B                     	ds	2
   735  00000D                     TMR5_ReadTimer@readVal:
   736                           	callstack 0
   737                           
   738                           ; 2 bytes @ 0xC
   739  00000D                     	ds	2
   740  00000F                     TMR5_ReadTimer@readValHigh:
   741                           	callstack 0
   742                           
   743                           ; 1 bytes @ 0xE
   744  00000F                     	ds	1
   745  000010                     TMR5_ReadTimer@readValLow:
   746                           	callstack 0
   747                           
   748                           ; 1 bytes @ 0xF
   749  000010                     	ds	1
   750  000011                     ??_UART1_tx_vect_isr:
   751  000011                     
   752                           ; 1 bytes @ 0x10
   753  000011                     	ds	1
   754  000012                     ??_UART1_rx_vect_isr:
   755                           
   756                           ; 1 bytes @ 0x11
   757  000012                     	ds	1
   758  000013                     ??_TMR4_ISR:
   759                           
   760                           ; 1 bytes @ 0x12
   761  000013                     	ds	1
   762  000014                     ??_TMR3_Initialize:
   763  000014                     ??_getCurve:
   764  000014                     ?___awdiv:
   765                           	callstack 0
   766  000014                     ?___aldiv:
   767                           	callstack 0
   768  000014                     INTERRUPT_Initialize@state:
   769                           	callstack 0
   770  000014                     UART1_SetFramingErrorHandler@interruptHandler:
   771                           	callstack 0
   772  000014                     UART1_SetOverrunErrorHandler@interruptHandler:
   773                           	callstack 0
   774  000014                     UART1_SetErrorHandler@interruptHandler:
   775                           	callstack 0
   776  000014                     UART1_SetRxInterruptHandler@InterruptHandler:
   777                           	callstack 0
   778  000014                     UART1_SetTxInterruptHandler@InterruptHandler:
   779                           	callstack 0
   780  000014                     CCP3_SetCallBack@customCallBack:
   781                           	callstack 0
   782  000014                     CCP4_SetCallBack@customCallBack:
   783                           	callstack 0
   784  000014                     TMR5_SetGateInterruptHandler@InterruptHandler:
   785                           	callstack 0
   786  000014                     TMR4_SetInterruptHandler@InterruptHandler:
   787                           	callstack 0
   788  000014                     PWM7_LoadDutyValue@dutyValue:
   789                           	callstack 0
   790  000014                     PWM8_LoadDutyValue@dutyValue:
   791                           	callstack 0
   792  000014                     PWM5_LoadDutyValue@dutyValue:
   793                           	callstack 0
   794  000014                     PWM6_LoadDutyValue@dutyValue:
   795                           	callstack 0
   796  000014                     ___awdiv@dividend:
   797                           	callstack 0
   798  000014                     ___aldiv@dividend:
   799                           	callstack 0
   800  000014                     ___flge@ff1:
   801                           	callstack 0
   802                           
   803                           ; 4 bytes @ 0x13
   804  000014                     	ds	2
   805  000016                     ??_TMR5_Initialize:
   806  000016                     ??_PWM7_LoadDutyValue:
   807  000016                     ??_PWM8_LoadDutyValue:
   808  000016                     ??_PWM5_LoadDutyValue:
   809  000016                     ??_PWM6_LoadDutyValue:
   810  000016                     getCurve@deltaRight:
   811                           	callstack 0
   812  000016                     ___awdiv@divisor:
   813                           	callstack 0
   814                           
   815                           ; 2 bytes @ 0x15
   816  000016                     	ds	2
   817  000018                     ___awdiv@counter:
   818                           	callstack 0
   819  000018                     getCurve@deltaLeft:
   820                           	callstack 0
   821  000018                     setMotor@motorPower:
   822                           	callstack 0
   823  000018                     ___aldiv@divisor:
   824                           	callstack 0
   825  000018                     ___flge@ff2:
   826                           	callstack 0
   827                           
   828                           ; 4 bytes @ 0x17
   829  000018                     	ds	1
   830  000019                     ___awdiv@sign:
   831                           	callstack 0
   832                           
   833                           ; 1 bytes @ 0x18
   834  000019                     	ds	1
   835  00001A                     ??_setMotor:
   836  00001A                     ___awdiv@quotient:
   837                           	callstack 0
   838                           
   839                           ; 2 bytes @ 0x19
   840  00001A                     	ds	2
   841  00001C                     ??___flge:
   842  00001C                     ?___xxtofl:
   843                           	callstack 0
   844  00001C                     ___aldiv@counter:
   845                           	callstack 0
   846  00001C                     setSteering@steering:
   847                           	callstack 0
   848  00001C                     ___xxtofl@val:
   849                           	callstack 0
   850                           
   851                           ; 4 bytes @ 0x1B
   852  00001C                     	ds	1
   853  00001D                     ___aldiv@sign:
   854                           	callstack 0
   855                           
   856                           ; 1 bytes @ 0x1C
   857  00001D                     	ds	1
   858  00001E                     setSteering@steeringMode:
   859                           	callstack 0
   860  00001E                     ___aldiv@quotient:
   861                           	callstack 0
   862                           
   863                           ; 4 bytes @ 0x1D
   864  00001E                     	ds	1
   865  00001F                     ??_setSteering:
   866                           
   867                           ; 1 bytes @ 0x1E
   868  00001F                     	ds	1
   869  000020                     ??___xxtofl:
   870                           
   871                           ; 1 bytes @ 0x1F
   872  000020                     	ds	1
   873  000021                     setSteering@steeringF:
   874                           	callstack 0
   875                           
   876                           ; 2 bytes @ 0x20
   877  000021                     	ds	1
   878  000022                     ?_actSpeed:
   879                           	callstack 0
   880                           
   881                           ; 2 bytes @ 0x21
   882  000022                     	ds	1
   883  000023                     setSteering@steeringB:
   884                           	callstack 0
   885                           
   886                           ; 2 bytes @ 0x22
   887  000023                     	ds	1
   888  000024                     ___xxtofl@sign:
   889                           	callstack 0
   890  000024                     actSpeed@speed:
   891                           	callstack 0
   892                           
   893                           ; 2 bytes @ 0x23
   894  000024                     	ds	1
   895  000025                     ___xxtofl@exp:
   896                           	callstack 0
   897                           
   898                           ; 1 bytes @ 0x24
   899  000025                     	ds	1
   900  000026                     ___xxtofl@arg:
   901                           	callstack 0
   902                           
   903                           ; 4 bytes @ 0x25
   904  000026                     	ds	4
   905  00002A                     ?___flmul:
   906                           	callstack 0
   907  00002A                     ___flmul@b:
   908                           	callstack 0
   909                           
   910                           ; 4 bytes @ 0x29
   911  00002A                     	ds	4
   912  00002E                     ___flmul@a:
   913                           	callstack 0
   914                           
   915                           ; 4 bytes @ 0x2D
   916  00002E                     	ds	4
   917  000032                     ??___flmul:
   918                           
   919                           ; 1 bytes @ 0x31
   920  000032                     	ds	4
   921  000036                     ??___fladd:
   922                           
   923                           ; 1 bytes @ 0x35
   924  000036                     	ds	4
   925  00003A                     
   926                           ; 1 bytes @ 0x39
   927 ;;
   928 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   929 ;;
   930 ;; *************** function _main *****************
   931 ;; Defined at:
   932 ;;		line 12 in file "main.c"
   933 ;; Parameters:    Size  Location     Type
   934 ;;		None
   935 ;; Auto vars:     Size  Location     Type
   936 ;;		None
   937 ;; Return value:  Size  Location     Type
   938 ;;                  1    wreg      void 
   939 ;; Registers used:
   940 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   941 ;; Tracked objects:
   942 ;;		On entry : 0/0
   943 ;;		On exit  : 0/0
   944 ;;		Unchanged: 0/0
   945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   950 ;;Total ram usage:        0 bytes
   951 ;; Hardware stack levels required when called: 13
   952 ;; This function calls:
   953 ;;		_SYSTEM_Initialize
   954 ;;		_TMR4_SetInterruptHandler
   955 ;;		_loop
   956 ;; This function is called by:
   957 ;;		Startup code after reset
   958 ;; This function uses a non-reentrant model
   959 ;;
   960                           
   961                           	psect	text0
   962  002650                     __ptext0:
   963                           	callstack 0
   964  002650                     _main:
   965                           	callstack 18
   966  002650                     
   967                           ;main.c: 13:     SYSTEM_Initialize();
   968  002650  EC28  F010         	call	_SYSTEM_Initialize	;wreg free
   969  002654                     
   970                           ;main.c: 14:     (INTCON0bits.GIEH = 1);
   971  002654  8ED2               	bsf	210,7,c	;volatile
   972  002656                     
   973                           ;main.c: 15:     (INTCON0bits.GIEL = 1);
   974  002656  8CD2               	bsf	210,6,c	;volatile
   975                           
   976                           ;main.c: 16:     TMR4_SetInterruptHandler(TMR4_10msISR);
   977  002658  0E8E               	movlw	low _TMR4_10msISR
   978  00265A  6E14               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
   979  00265C  0E27               	movlw	high _TMR4_10msISR
   980  00265E  6E15               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
   981  002660  ECB5  F013         	call	_TMR4_SetInterruptHandler	;wreg free
   982  002664                     l5770:
   983                           
   984                           ;main.c: 19:         loop();
   985  002664  ECB5  F00E         	call	_loop	;wreg free
   986  002668  EF32  F013         	goto	l5770
   987  00266C  EF57  F000         	goto	start
   988  002670                     __end_of_main:
   989                           	callstack 0
   990                           
   991 ;; *************** function _loop *****************
   992 ;; Defined at:
   993 ;;		line 23 in file "main.c"
   994 ;; Parameters:    Size  Location     Type
   995 ;;		None
   996 ;; Auto vars:     Size  Location     Type
   997 ;;		None
   998 ;; Return value:  Size  Location     Type
   999 ;;                  1    wreg      void 
  1000 ;; Registers used:
  1001 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1002 ;; Tracked objects:
  1003 ;;		On entry : 0/0
  1004 ;;		On exit  : 0/0
  1005 ;;		Unchanged: 0/0
  1006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1011 ;;Total ram usage:        0 bytes
  1012 ;; Hardware stack levels used: 1
  1013 ;; Hardware stack levels required when called: 12
  1014 ;; This function calls:
  1015 ;;		_calcMotorPow
  1016 ;;		_calcSpeed
  1017 ;;		_calcSteering
  1018 ;;		_getCurve
  1019 ;;		_getReverse
  1020 ;;		_setMotor
  1021 ;;		_setSteering
  1022 ;;		_startAccell
  1023 ;; This function is called by:
  1024 ;;		_main
  1025 ;; This function uses a non-reentrant model
  1026 ;;
  1027                           
  1028                           	psect	text1
  1029  001D6A                     __ptext1:
  1030                           	callstack 0
  1031  001D6A                     _loop:
  1032                           	callstack 18
  1033  001D6A                     
  1034                           ;main.c: 24:     setMotor(0);
  1035  001D6A  0E00               	movlw	0
  1036  001D6C  6E19               	movwf	(setMotor@motorPower+1)^0,c
  1037  001D6E  0E00               	movlw	0
  1038  001D70  6E18               	movwf	setMotor@motorPower^0,c
  1039  001D72  EC1A  F00D         	call	_setMotor	;wreg free
  1040                           
  1041                           ;main.c: 25:     setSteering(0, Front);
  1042  001D76  0E00               	movlw	0
  1043  001D78  6E1D               	movwf	(setSteering@steering+1)^0,c
  1044  001D7A  0E00               	movlw	0
  1045  001D7C  6E1C               	movwf	setSteering@steering^0,c
  1046  001D7E  0E03               	movlw	3
  1047  001D80  6E1E               	movwf	setSteering@steeringMode^0,c
  1048  001D82  EC03  F009         	call	_setSteering	;wreg free
  1049  001D86                     l1216:
  1050  001D86  B8CB               	btfsc	203,4,c	;volatile
  1051  001D88  EFC8  F00E         	goto	u4561
  1052  001D8C  EFCA  F00E         	goto	u4560
  1053  001D90                     u4561:
  1054  001D90  EFC3  F00E         	goto	l1216
  1055  001D94                     u4560:
  1056  001D94                     
  1057                           ;main.c: 29:     startAccell();
  1058  001D94  EC77  F00A         	call	_startAccell	;wreg free
  1059  001D98                     
  1060                           ;main.c: 30:     driveMode = Straight;
  1061  001D98  0E01               	movlw	1
  1062  001D9A  6E4C               	movwf	_driveMode^0,c
  1063  001D9C                     
  1064                           ;main.c: 31:     curveMode = OutCurve;
  1065  001D9C  0E00               	movlw	0
  1066  001D9E  6E3F               	movwf	_curveMode^0,c
  1067  001DA0                     
  1068                           ;main.c: 32:     oldDistLeft = distLeft;
  1069  001DA0  C09C  F03A         	movff	_distLeft,_oldDistLeft	;volatile
  1070  001DA4  C09D  F03B         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  1071  001DA8                     
  1072                           ;main.c: 33:     oldDistRight = distRight;
  1073  001DA8  C098  F092         	movff	_distRight,_oldDistRight	;volatile
  1074  001DAC  C099  F093         	movff	_distRight+1,_oldDistRight+1	;volatile
  1075  001DB0                     
  1076                           ;main.c: 34:     cycle10ms = 0;
  1077  001DB0  0E00               	movlw	0
  1078  001DB2  0100               	movlb	0	; () banked
  1079  001DB4  6F9E               	movwf	_cycle10ms& (0+255),b	;volatile
  1080  001DB6                     l5746:
  1081  001DB6  0100               	movlb	0	; () banked
  1082  001DB8  519E               	movf	_cycle10ms& (0+255),w,b	;volatile
  1083  001DBA  B4D8               	btfsc	status,2,c
  1084  001DBC  EFE2  F00E         	goto	u4571
  1085  001DC0  EFE4  F00E         	goto	u4570
  1086  001DC4                     u4571:
  1087  001DC4  EFDB  F00E         	goto	l5746
  1088  001DC8                     u4570:
  1089  001DC8                     
  1090                           ; BSR set to: 0
  1091                           ;main.c: 37:         cycle10ms = 0;
  1092  001DC8  0E00               	movlw	0
  1093  001DCA  6F9E               	movwf	_cycle10ms& (0+255),b	;volatile
  1094  001DCC                     
  1095                           ; BSR set to: 0
  1096                           ;main.c: 39:         if (!PORTBbits.RB5) {
  1097  001DCC  BACB               	btfsc	203,5,c	;volatile
  1098  001DCE  EFEB  F00E         	goto	u4581
  1099  001DD2  EFED  F00E         	goto	u4580
  1100  001DD6                     u4581:
  1101  001DD6  EFFF  F00E         	goto	l5756
  1102  001DDA                     u4580:
  1103  001DDA                     
  1104                           ; BSR set to: 0
  1105                           ;main.c: 40:             setSpeed = 0;
  1106  001DDA  0E00               	movlw	0
  1107  001DDC  6F8B               	movwf	(_setSpeed+1)& (0+255),b
  1108  001DDE  0E00               	movlw	0
  1109  001DE0  6F8A               	movwf	_setSpeed& (0+255),b
  1110                           
  1111                           ;main.c: 41:             actMotorPow = 0;
  1112  001DE2  0E00               	movlw	0
  1113  001DE4  6F85               	movwf	(_actMotorPow+1)& (0+255),b
  1114  001DE6  0E00               	movlw	0
  1115  001DE8  6F84               	movwf	_actMotorPow& (0+255),b
  1116  001DEA                     
  1117                           ; BSR set to: 0
  1118                           ;main.c: 42:             setSteering(0, Front);
  1119  001DEA  0E00               	movlw	0
  1120  001DEC  6E1D               	movwf	(setSteering@steering+1)^0,c
  1121  001DEE  0E00               	movlw	0
  1122  001DF0  6E1C               	movwf	setSteering@steering^0,c
  1123  001DF2  0E03               	movlw	3
  1124  001DF4  6E1E               	movwf	setSteering@steeringMode^0,c
  1125  001DF6  EC03  F009         	call	_setSteering	;wreg free
  1126                           
  1127                           ;main.c: 43:             break;
  1128  001DFA  EF0B  F00F         	goto	l1226
  1129  001DFE                     l5756:
  1130                           
  1131                           ; BSR set to: 0
  1132                           ;main.c: 46:         getCurve();
  1133  001DFE  ECE2  F004         	call	_getCurve	;wreg free
  1134                           
  1135                           ;main.c: 47:         getReverse();
  1136  001E02  EC9C  F00C         	call	_getReverse	;wreg free
  1137  001E06                     
  1138                           ;main.c: 49:         calcSteering();
  1139  001E06  EC08  F006         	call	_calcSteering	;wreg free
  1140  001E0A                     
  1141                           ;main.c: 50:         calcSpeed();
  1142  001E0A  EC20  F007         	call	_calcSpeed	;wreg free
  1143  001E0E                     
  1144                           ;main.c: 51:         calcMotorPow();
  1145  001E0E  ECD5  F009         	call	_calcMotorPow	;wreg free
  1146  001E12  EFDB  F00E         	goto	l5746
  1147  001E16                     l1226:
  1148  001E16  0012               	return		;funcret
  1149  001E18                     __end_of_loop:
  1150                           	callstack 0
  1151                           
  1152 ;; *************** function _startAccell *****************
  1153 ;; Defined at:
  1154 ;;		line 71 in file "main.c"
  1155 ;; Parameters:    Size  Location     Type
  1156 ;;		None
  1157 ;; Auto vars:     Size  Location     Type
  1158 ;;  MPow            4   41[BANK0 ] float 
  1159 ;; Return value:  Size  Location     Type
  1160 ;;                  1    wreg      void 
  1161 ;; Registers used:
  1162 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1163 ;; Tracked objects:
  1164 ;;		On entry : 0/0
  1165 ;;		On exit  : 0/0
  1166 ;;		Unchanged: 0/0
  1167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1169 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1171 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1172 ;;Total ram usage:        4 bytes
  1173 ;; Hardware stack levels used: 1
  1174 ;; Hardware stack levels required when called: 11
  1175 ;; This function calls:
  1176 ;;		___flge
  1177 ;;		___flmul
  1178 ;;		___fltol
  1179 ;;		___xxtofl
  1180 ;;		_calcSteering
  1181 ;;		_setMotor
  1182 ;;		_setSteering
  1183 ;; This function is called by:
  1184 ;;		_loop
  1185 ;; This function uses a non-reentrant model
  1186 ;;
  1187                           
  1188                           	psect	text2
  1189  0014EE                     __ptext2:
  1190                           	callstack 0
  1191  0014EE                     _startAccell:
  1192                           	callstack 18
  1193  0014EE                     
  1194                           ;main.c: 72:     setSteering(0, Front);
  1195  0014EE  0E00               	movlw	0
  1196  0014F0  6E1D               	movwf	(setSteering@steering+1)^0,c
  1197  0014F2  0E00               	movlw	0
  1198  0014F4  6E1C               	movwf	setSteering@steering^0,c
  1199  0014F6  0E03               	movlw	3
  1200  0014F8  6E1E               	movwf	setSteering@steeringMode^0,c
  1201  0014FA  EC03  F009         	call	_setSteering	;wreg free
  1202  0014FE                     
  1203                           ;main.c: 73:     driveMode = Accel;
  1204  0014FE  0E00               	movlw	0
  1205  001500  6E4C               	movwf	_driveMode^0,c
  1206  001502                     
  1207                           ;main.c: 75:     actMotorPow = (40);
  1208  001502  0E00               	movlw	0
  1209  001504  0100               	movlb	0	; () banked
  1210  001506  6F85               	movwf	(_actMotorPow+1)& (0+255),b
  1211  001508  0E28               	movlw	40
  1212  00150A  6F84               	movwf	_actMotorPow& (0+255),b
  1213                           
  1214                           ;main.c: 76:     float MPow = actMotorPow;
  1215  00150C  C084  F01C         	movff	_actMotorPow,___xxtofl@val
  1216  001510  C085  F01D         	movff	_actMotorPow+1,___xxtofl@val+1
  1217  001514  0E00               	movlw	0
  1218  001516  BE1D               	btfsc	(___xxtofl@val+1)^0,7,c
  1219  001518  0EFF               	movlw	-1
  1220  00151A  6E1E               	movwf	(___xxtofl@val+2)^0,c
  1221  00151C  6E1F               	movwf	(___xxtofl@val+3)^0,c
  1222  00151E  0E01               	movlw	1
  1223  001520  EC29  F008         	call	___xxtofl
  1224  001524  C01C  F0C8         	movff	?___xxtofl,startAccell@MPow
  1225  001528  C01D  F0C9         	movff	?___xxtofl+1,startAccell@MPow+1
  1226  00152C  C01E  F0CA         	movff	?___xxtofl+2,startAccell@MPow+2
  1227  001530  C01F  F0CB         	movff	?___xxtofl+3,startAccell@MPow+3
  1228                           
  1229                           ;main.c: 77:     while (MPow < (250)) {
  1230  001534  EFD7  F00A         	goto	l5628
  1231  001538                     l5618:
  1232                           
  1233                           ;main.c: 78:         MPow *= (1.1);
  1234  001538  C0C8  F02A         	movff	startAccell@MPow,___flmul@b
  1235  00153C  C0C9  F02B         	movff	startAccell@MPow+1,___flmul@b+1
  1236  001540  C0CA  F02C         	movff	startAccell@MPow+2,___flmul@b+2
  1237  001544  C0CB  F02D         	movff	startAccell@MPow+3,___flmul@b+3
  1238  001548  0ECD               	movlw	205
  1239  00154A  6E2E               	movwf	___flmul@a^0,c
  1240  00154C  0ECC               	movlw	204
  1241  00154E  6E2F               	movwf	(___flmul@a+1)^0,c
  1242  001550  0E8C               	movlw	140
  1243  001552  6E30               	movwf	(___flmul@a+2)^0,c
  1244  001554  0E3F               	movlw	63
  1245  001556  6E31               	movwf	(___flmul@a+3)^0,c
  1246  001558  ECBA  F002         	call	___flmul	;wreg free
  1247  00155C  C02A  F0C8         	movff	?___flmul,startAccell@MPow
  1248  001560  C02B  F0C9         	movff	?___flmul+1,startAccell@MPow+1
  1249  001564  C02C  F0CA         	movff	?___flmul+2,startAccell@MPow+2
  1250  001568  C02D  F0CB         	movff	?___flmul+3,startAccell@MPow+3
  1251  00156C                     
  1252                           ;main.c: 79:         actMotorPow = (int16_t) MPow;
  1253  00156C  C0C8  F0B8         	movff	startAccell@MPow,___fltol@f1
  1254  001570  C0C9  F0B9         	movff	startAccell@MPow+1,___fltol@f1+1
  1255  001574  C0CA  F0BA         	movff	startAccell@MPow+2,___fltol@f1+2
  1256  001578  C0CB  F0BB         	movff	startAccell@MPow+3,___fltol@f1+3
  1257  00157C  EC96  F00B         	call	___fltol	;wreg free
  1258  001580  C0B8  F084         	movff	?___fltol,_actMotorPow
  1259  001584  C0B9  F085         	movff	?___fltol+1,_actMotorPow+1
  1260  001588                     
  1261                           ;main.c: 80:         setMotor(actMotorPow);
  1262  001588  C084  F018         	movff	_actMotorPow,setMotor@motorPower
  1263  00158C  C085  F019         	movff	_actMotorPow+1,setMotor@motorPower+1
  1264  001590  EC1A  F00D         	call	_setMotor	;wreg free
  1265                           
  1266                           ;main.c: 82:         calcSteering();
  1267  001594  EC08  F006         	call	_calcSteering	;wreg free
  1268  001598                     
  1269                           ;main.c: 84:         cycle10ms = 0;
  1270  001598  0E00               	movlw	0
  1271  00159A  0100               	movlb	0	; () banked
  1272  00159C  6F9E               	movwf	_cycle10ms& (0+255),b	;volatile
  1273  00159E                     l5626:
  1274                           
  1275                           ; BSR set to: 0
  1276  00159E  519E               	movf	_cycle10ms& (0+255),w,b	;volatile
  1277  0015A0  B4D8               	btfsc	status,2,c
  1278  0015A2  EFD5  F00A         	goto	u4421
  1279  0015A6  EFD7  F00A         	goto	u4420
  1280  0015AA                     u4421:
  1281  0015AA  EFCF  F00A         	goto	l5626
  1282  0015AE                     u4420:
  1283  0015AE                     l5628:
  1284                           
  1285                           ;main.c: 77:     while (MPow < (250)) {
  1286  0015AE  C0C8  F014         	movff	startAccell@MPow,___flge@ff1
  1287  0015B2  C0C9  F015         	movff	startAccell@MPow+1,___flge@ff1+1
  1288  0015B6  C0CA  F016         	movff	startAccell@MPow+2,___flge@ff1+2
  1289  0015BA  C0CB  F017         	movff	startAccell@MPow+3,___flge@ff1+3
  1290  0015BE  0E00               	movlw	0
  1291  0015C0  6E18               	movwf	___flge@ff2^0,c
  1292  0015C2  0E00               	movlw	0
  1293  0015C4  6E19               	movwf	(___flge@ff2+1)^0,c
  1294  0015C6  0E7A               	movlw	122
  1295  0015C8  6E1A               	movwf	(___flge@ff2+2)^0,c
  1296  0015CA  0E43               	movlw	67
  1297  0015CC  6E1B               	movwf	(___flge@ff2+3)^0,c
  1298  0015CE  EC1A  F00C         	call	___flge	;wreg free
  1299  0015D2  A0D8               	btfss	status,0,c
  1300  0015D4  EFEE  F00A         	goto	u4431
  1301  0015D8  EFF0  F00A         	goto	u4430
  1302  0015DC                     u4431:
  1303  0015DC  EF9C  F00A         	goto	l5618
  1304  0015E0                     u4430:
  1305  0015E0                     
  1306                           ;main.c: 87:     actMotorPow = (250);
  1307  0015E0  0E00               	movlw	0
  1308  0015E2  0100               	movlb	0	; () banked
  1309  0015E4  6F85               	movwf	(_actMotorPow+1)& (0+255),b
  1310  0015E6  0EFA               	movlw	250
  1311  0015E8  6F84               	movwf	_actMotorPow& (0+255),b
  1312  0015EA                     
  1313                           ; BSR set to: 0
  1314                           ;main.c: 88:     setMotor(actMotorPow);
  1315  0015EA  C084  F018         	movff	_actMotorPow,setMotor@motorPower
  1316  0015EE  C085  F019         	movff	_actMotorPow+1,setMotor@motorPower+1
  1317  0015F2  EC1A  F00D         	call	_setMotor	;wreg free
  1318  0015F6                     
  1319                           ;main.c: 90:     cycle10ms = 0;
  1320  0015F6  0E00               	movlw	0
  1321  0015F8  0100               	movlb	0	; () banked
  1322  0015FA  6F9E               	movwf	_cycle10ms& (0+255),b	;volatile
  1323                           
  1324                           ;main.c: 91:     while (cycle10ms < ((50) - (20))){
  1325  0015FC  EF02  F00B         	goto	l5638
  1326  001600                     l5636:
  1327                           
  1328                           ; BSR set to: 0
  1329                           ;main.c: 92:         calcSteering();
  1330  001600  EC08  F006         	call	_calcSteering	;wreg free
  1331  001604                     l5638:
  1332                           
  1333                           ;main.c: 91:     while (cycle10ms < ((50) - (20))){
  1334  001604  0E1D               	movlw	29
  1335  001606  0100               	movlb	0	; () banked
  1336  001608  659E               	cpfsgt	_cycle10ms& (0+255),b	;volatile
  1337  00160A  EF09  F00B         	goto	u4441
  1338  00160E  EF0B  F00B         	goto	u4440
  1339  001612                     u4441:
  1340  001612  EF00  F00B         	goto	l5636
  1341  001616                     u4440:
  1342  001616                     
  1343                           ; BSR set to: 0
  1344                           ;main.c: 95:     driveMode = Straight;
  1345  001616  0E01               	movlw	1
  1346  001618  6E4C               	movwf	_driveMode^0,c
  1347  00161A                     
  1348                           ; BSR set to: 0
  1349                           ;main.c: 96:     calcSteering();
  1350  00161A  EC08  F006         	call	_calcSteering	;wreg free
  1351  00161E  0012               	return		;funcret
  1352  001620                     __end_of_startAccell:
  1353                           	callstack 0
  1354                           
  1355 ;; *************** function _calcSteering *****************
  1356 ;; Defined at:
  1357 ;;		line 187 in file "main.c"
  1358 ;; Parameters:    Size  Location     Type
  1359 ;;		None
  1360 ;; Auto vars:     Size  Location     Type
  1361 ;;  delta           2   39[BANK0 ] short 
  1362 ;; Return value:  Size  Location     Type
  1363 ;;                  1    wreg      void 
  1364 ;; Registers used:
  1365 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1366 ;; Tracked objects:
  1367 ;;		On entry : 0/0
  1368 ;;		On exit  : 0/0
  1369 ;;		Unchanged: 0/0
  1370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1372 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1373 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1374 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1375 ;;Total ram usage:        6 bytes
  1376 ;; Hardware stack levels used: 1
  1377 ;; Hardware stack levels required when called: 10
  1378 ;; This function calls:
  1379 ;;		___awdiv
  1380 ;;		___flmul
  1381 ;;		___fltol
  1382 ;;		___xxtofl
  1383 ;;		_setSteering
  1384 ;; This function is called by:
  1385 ;;		_loop
  1386 ;;		_startAccell
  1387 ;; This function uses a non-reentrant model
  1388 ;;
  1389                           
  1390                           	psect	text3
  1391  000C10                     __ptext3:
  1392                           	callstack 0
  1393  000C10                     _calcSteering:
  1394                           	callstack 18
  1395  000C10                     
  1396                           ;main.c: 188:     int16_t delta = (int16_t) (distLeft - distRight) - (int16_t) (middleOf
      +                          fSet * 1.4142135);
  1397  000C10  0EF3               	movlw	243
  1398  000C12  6E2E               	movwf	___flmul@a^0,c
  1399  000C14  0E04               	movlw	4
  1400  000C16  6E2F               	movwf	(___flmul@a+1)^0,c
  1401  000C18  0EB5               	movlw	181
  1402  000C1A  6E30               	movwf	(___flmul@a+2)^0,c
  1403  000C1C  0E3F               	movlw	63
  1404  000C1E  6E31               	movwf	(___flmul@a+3)^0,c
  1405  000C20  C08E  F01C         	movff	_middleOffSet,___xxtofl@val
  1406  000C24  C08F  F01D         	movff	_middleOffSet+1,___xxtofl@val+1
  1407  000C28  0E00               	movlw	0
  1408  000C2A  BE1D               	btfsc	(___xxtofl@val+1)^0,7,c
  1409  000C2C  0EFF               	movlw	-1
  1410  000C2E  6E1E               	movwf	(___xxtofl@val+2)^0,c
  1411  000C30  6E1F               	movwf	(___xxtofl@val+3)^0,c
  1412  000C32  0E01               	movlw	1
  1413  000C34  EC29  F008         	call	___xxtofl
  1414  000C38  C01C  F02A         	movff	?___xxtofl,___flmul@b
  1415  000C3C  C01D  F02B         	movff	?___xxtofl+1,___flmul@b+1
  1416  000C40  C01E  F02C         	movff	?___xxtofl+2,___flmul@b+2
  1417  000C44  C01F  F02D         	movff	?___xxtofl+3,___flmul@b+3
  1418  000C48  ECBA  F002         	call	___flmul	;wreg free
  1419  000C4C  C02A  F0B8         	movff	?___flmul,___fltol@f1
  1420  000C50  C02B  F0B9         	movff	?___flmul+1,___fltol@f1+1
  1421  000C54  C02C  F0BA         	movff	?___flmul+2,___fltol@f1+2
  1422  000C58  C02D  F0BB         	movff	?___flmul+3,___fltol@f1+3
  1423  000C5C  EC96  F00B         	call	___fltol	;wreg free
  1424  000C60  C098  F0C2         	movff	_distRight,??_calcSteering	;volatile
  1425  000C64  C099  F0C3         	movff	_distRight+1,??_calcSteering+1	;volatile
  1426  000C68  0100               	movlb	0	; () banked
  1427  000C6A  1FC2               	comf	??_calcSteering& (0+255),f,b
  1428  000C6C  1FC3               	comf	(??_calcSteering+1)& (0+255),f,b
  1429  000C6E  4BC2               	infsnz	??_calcSteering& (0+255),f,b
  1430  000C70  2BC3               	incf	(??_calcSteering+1)& (0+255),f,b
  1431  000C72  51B8               	movf	?___fltol& (0+255),w,b
  1432  000C74  5FC2               	subwf	??_calcSteering& (0+255),f,b
  1433  000C76  51B9               	movf	(?___fltol+1)& (0+255),w,b
  1434  000C78  5BC3               	subwfb	(??_calcSteering+1)& (0+255),f,b
  1435  000C7A  519C               	movf	_distLeft& (0+255),w,b	;volatile
  1436  000C7C  25C2               	addwf	??_calcSteering& (0+255),w,b
  1437  000C7E  6FC6               	movwf	calcSteering@delta& (0+255),b
  1438  000C80  519D               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  1439  000C82  21C3               	addwfc	(??_calcSteering+1)& (0+255),w,b
  1440  000C84  6FC7               	movwf	(calcSteering@delta+1)& (0+255),b
  1441                           
  1442                           ;main.c: 191:     switch (driveMode) {
  1443  000C86  EF6D  F006         	goto	l5370
  1444  000C8A                     l1297:
  1445  000C8A                     l5360:
  1446                           
  1447                           ; BSR set to: 0
  1448                           ;main.c: 197:             if (delta > (25)) {
  1449  000C8A  BFC7               	btfsc	(calcSteering@delta+1)& (0+255),7,b
  1450  000C8C  EF51  F006         	goto	u3991
  1451  000C90  51C7               	movf	(calcSteering@delta+1)& (0+255),w,b
  1452  000C92  E109               	bnz	u3990
  1453  000C94  0E1A               	movlw	26
  1454  000C96  5DC6               	subwf	calcSteering@delta& (0+255),w,b
  1455  000C98  A0D8               	btfss	status,0,c
  1456  000C9A  EF51  F006         	goto	u3991
  1457  000C9E  EF53  F006         	goto	u3990
  1458  000CA2                     u3991:
  1459  000CA2  EF59  F006         	goto	l5364
  1460  000CA6                     u3990:
  1461  000CA6                     
  1462                           ; BSR set to: 0
  1463                           ;main.c: 198:                 delta = (25);
  1464  000CA6  0E00               	movlw	0
  1465  000CA8  6FC7               	movwf	(calcSteering@delta+1)& (0+255),b
  1466  000CAA  0E19               	movlw	25
  1467  000CAC  6FC6               	movwf	calcSteering@delta& (0+255),b
  1468                           
  1469                           ;main.c: 199:             } else if (delta < -(25)) {
  1470  000CAE  EFF6  F006         	goto	l5396
  1471  000CB2                     l5364:
  1472                           
  1473                           ; BSR set to: 0
  1474  000CB2  AFC7               	btfss	(calcSteering@delta+1)& (0+255),7,b
  1475  000CB4  EF65  F006         	goto	u4001
  1476  000CB8  0EE7               	movlw	231
  1477  000CBA  5DC6               	subwf	calcSteering@delta& (0+255),w,b
  1478  000CBC  0EFF               	movlw	255
  1479  000CBE  59C7               	subwfb	(calcSteering@delta+1)& (0+255),w,b
  1480  000CC0  B0D8               	btfsc	status,0,c
  1481  000CC2  EF65  F006         	goto	u4001
  1482  000CC6  EF67  F006         	goto	u4000
  1483  000CCA                     u4001:
  1484  000CCA  EF8E  F006         	goto	l1302
  1485  000CCE                     u4000:
  1486  000CCE                     
  1487                           ; BSR set to: 0
  1488                           ;main.c: 200:                 delta = -(25);
  1489  000CCE  0EFF               	movlw	255
  1490  000CD0  6FC7               	movwf	(calcSteering@delta+1)& (0+255),b
  1491  000CD2  0EE7               	movlw	231
  1492  000CD4  6FC6               	movwf	calcSteering@delta& (0+255),b
  1493  000CD6  EFF6  F006         	goto	l5396
  1494  000CDA                     l5370:
  1495                           
  1496                           ; BSR set to: 0
  1497  000CDA  504C               	movf	_driveMode^0,w,c
  1498  000CDC  6FC2               	movwf	??_calcSteering& (0+255),b
  1499  000CDE  6BC3               	clrf	(??_calcSteering+1)& (0+255),b
  1500                           
  1501                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1502                           ; Switch size 1, requested type "simple"
  1503                           ; Number of cases is 1, Range of values is 0 to 0
  1504                           ; switch strategies available:
  1505                           ; Name         Instructions Cycles
  1506                           ; simple_byte            4     3 (average)
  1507                           ;	Chosen strategy is simple_byte
  1508  000CE0  51C3               	movf	(??_calcSteering+1)& (0+255),w,b
  1509  000CE2  0A00               	xorlw	0	; case 0
  1510  000CE4  B4D8               	btfsc	status,2,c
  1511  000CE6  EF77  F006         	goto	l5922
  1512  000CEA  EFF6  F006         	goto	l5396
  1513  000CEE                     l5922:
  1514                           
  1515                           ; BSR set to: 0
  1516                           ; Switch size 1, requested type "simple"
  1517                           ; Number of cases is 5, Range of values is 0 to 6
  1518                           ; switch strategies available:
  1519                           ; Name         Instructions Cycles
  1520                           ; simple_byte           16     9 (average)
  1521                           ;	Chosen strategy is simple_byte
  1522  000CEE  51C2               	movf	??_calcSteering& (0+255),w,b
  1523  000CF0  0A00               	xorlw	0	; case 0
  1524  000CF2  B4D8               	btfsc	status,2,c
  1525  000CF4  EF45  F006         	goto	l1297
  1526  000CF8  0A01               	xorlw	1	; case 1
  1527  000CFA  B4D8               	btfsc	status,2,c
  1528  000CFC  EF45  F006         	goto	l5360
  1529  000D00  0A03               	xorlw	3	; case 2
  1530  000D02  B4D8               	btfsc	status,2,c
  1531  000D04  EF45  F006         	goto	l5360
  1532  000D08  0A07               	xorlw	7	; case 5
  1533  000D0A  B4D8               	btfsc	status,2,c
  1534  000D0C  EF45  F006         	goto	l5360
  1535  000D10  0A03               	xorlw	3	; case 6
  1536  000D12  B4D8               	btfsc	status,2,c
  1537  000D14  EF45  F006         	goto	l5360
  1538  000D18  EFF6  F006         	goto	l5396
  1539  000D1C                     l1302:
  1540                           
  1541                           ; BSR set to: 0
  1542                           ;main.c: 207:     switch (driveMode) {
  1543  000D1C  EFF6  F006         	goto	l5396
  1544  000D20                     l5372:
  1545                           
  1546                           ; BSR set to: 0
  1547                           ;main.c: 209:             setSteering(delta, Ratio);
  1548  000D20  C0C6  F01C         	movff	calcSteering@delta,setSteering@steering
  1549  000D24  C0C7  F01D         	movff	calcSteering@delta+1,setSteering@steering+1
  1550  000D28  0E02               	movlw	2
  1551  000D2A  6E1E               	movwf	setSteering@steeringMode^0,c
  1552  000D2C  EC03  F009         	call	_setSteering	;wreg free
  1553                           
  1554                           ;main.c: 210:             break;
  1555  000D30  EF1F  F007         	goto	l1317
  1556  000D34                     l5374:
  1557                           
  1558                           ; BSR set to: 0
  1559                           ;main.c: 212:             setSteering(delta, Front);
  1560  000D34  C0C6  F01C         	movff	calcSteering@delta,setSteering@steering
  1561  000D38  C0C7  F01D         	movff	calcSteering@delta+1,setSteering@steering+1
  1562  000D3C  0E03               	movlw	3
  1563  000D3E  6E1E               	movwf	setSteering@steeringMode^0,c
  1564  000D40  EC03  F009         	call	_setSteering	;wreg free
  1565                           
  1566                           ;main.c: 213:             break;
  1567  000D44  EF1F  F007         	goto	l1317
  1568  000D48                     l5376:
  1569                           
  1570                           ; BSR set to: 0
  1571                           ;main.c: 215:             setSteering(delta / (2), Front);
  1572  000D48  C0C6  F014         	movff	calcSteering@delta,___awdiv@dividend
  1573  000D4C  C0C7  F015         	movff	calcSteering@delta+1,___awdiv@dividend+1
  1574  000D50  0E00               	movlw	0
  1575  000D52  6E17               	movwf	(___awdiv@divisor+1)^0,c
  1576  000D54  0E02               	movlw	2
  1577  000D56  6E16               	movwf	___awdiv@divisor^0,c
  1578  000D58  EC53  F00E         	call	___awdiv	;wreg free
  1579  000D5C  C014  F0C4         	movff	?___awdiv,_calcSteering$3880
  1580  000D60  C015  F0C5         	movff	?___awdiv+1,_calcSteering$3880+1
  1581                           
  1582                           ;main.c: 215:             setSteering(delta / (2), Front);
  1583  000D64  C0C4  F01C         	movff	_calcSteering$3880,setSteering@steering
  1584  000D68  C0C5  F01D         	movff	_calcSteering$3880+1,setSteering@steering+1
  1585  000D6C  0E03               	movlw	3
  1586  000D6E  6E1E               	movwf	setSteering@steeringMode^0,c
  1587  000D70  EC03  F009         	call	_setSteering	;wreg free
  1588                           
  1589                           ;main.c: 216:             break;
  1590  000D74  EF1F  F007         	goto	l1317
  1591  000D78                     l5378:
  1592                           
  1593                           ; BSR set to: 0
  1594                           ;main.c: 218:             setSteering(-(60), Inverted);
  1595  000D78  0EFF               	movlw	255
  1596  000D7A  6E1D               	movwf	(setSteering@steering+1)^0,c
  1597  000D7C  0EC4               	movlw	196
  1598  000D7E  6E1C               	movwf	setSteering@steering^0,c
  1599  000D80  0E00               	movlw	0
  1600  000D82  6E1E               	movwf	setSteering@steeringMode^0,c
  1601  000D84  EC03  F009         	call	_setSteering	;wreg free
  1602                           
  1603                           ;main.c: 219:             break;
  1604  000D88  EF1F  F007         	goto	l1317
  1605  000D8C                     l5380:
  1606                           
  1607                           ; BSR set to: 0
  1608                           ;main.c: 221:             setSteering((60), Inverted);
  1609  000D8C  0E00               	movlw	0
  1610  000D8E  6E1D               	movwf	(setSteering@steering+1)^0,c
  1611  000D90  0E3C               	movlw	60
  1612  000D92  6E1C               	movwf	setSteering@steering^0,c
  1613  000D94  0E00               	movlw	0
  1614  000D96  6E1E               	movwf	setSteering@steeringMode^0,c
  1615  000D98  EC03  F009         	call	_setSteering	;wreg free
  1616                           
  1617                           ;main.c: 222:             break;
  1618  000D9C  EF1F  F007         	goto	l1317
  1619  000DA0                     l5382:
  1620                           
  1621                           ; BSR set to: 0
  1622                           ;main.c: 224:             if (curveMode == InCurve) {
  1623  000DA0  0E02               	movlw	2
  1624  000DA2  183F               	xorwf	_curveMode^0,w,c
  1625  000DA4  A4D8               	btfss	status,2,c
  1626  000DA6  EFD7  F006         	goto	u4011
  1627  000DAA  EFD9  F006         	goto	u4010
  1628  000DAE                     u4011:
  1629  000DAE  EF90  F006         	goto	l5372
  1630  000DB2                     u4010:
  1631  000DB2                     
  1632                           ; BSR set to: 0
  1633                           ;main.c: 225:                 setSteering((60), Ratio);
  1634  000DB2  0E00               	movlw	0
  1635  000DB4  6E1D               	movwf	(setSteering@steering+1)^0,c
  1636  000DB6  0E3C               	movlw	60
  1637  000DB8  6E1C               	movwf	setSteering@steering^0,c
  1638  000DBA  0E02               	movlw	2
  1639  000DBC  6E1E               	movwf	setSteering@steeringMode^0,c
  1640  000DBE  EC03  F009         	call	_setSteering	;wreg free
  1641                           
  1642                           ;main.c: 226:             } else {
  1643  000DC2  EF1F  F007         	goto	l1317
  1644  000DC6                     l5388:
  1645                           
  1646                           ; BSR set to: 0
  1647                           ;main.c: 231:             if (curveMode == InCurve) {
  1648  000DC6  0E02               	movlw	2
  1649  000DC8  183F               	xorwf	_curveMode^0,w,c
  1650  000DCA  A4D8               	btfss	status,2,c
  1651  000DCC  EFEA  F006         	goto	u4021
  1652  000DD0  EFEC  F006         	goto	u4020
  1653  000DD4                     u4021:
  1654  000DD4  EF90  F006         	goto	l5372
  1655  000DD8                     u4020:
  1656  000DD8                     
  1657                           ; BSR set to: 0
  1658                           ;main.c: 232:                 setSteering(-(60), Ratio);
  1659  000DD8  0EFF               	movlw	255
  1660  000DDA  6E1D               	movwf	(setSteering@steering+1)^0,c
  1661  000DDC  0EC4               	movlw	196
  1662  000DDE  6E1C               	movwf	setSteering@steering^0,c
  1663  000DE0  0E02               	movlw	2
  1664  000DE2  6E1E               	movwf	setSteering@steeringMode^0,c
  1665  000DE4  EC03  F009         	call	_setSteering	;wreg free
  1666                           
  1667                           ;main.c: 233:             } else {
  1668  000DE8  EF1F  F007         	goto	l1317
  1669  000DEC                     l5396:
  1670                           
  1671                           ; BSR set to: 0
  1672  000DEC  504C               	movf	_driveMode^0,w,c
  1673  000DEE  6FC2               	movwf	??_calcSteering& (0+255),b
  1674  000DF0  6BC3               	clrf	(??_calcSteering+1)& (0+255),b
  1675                           
  1676                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1677                           ; Switch size 1, requested type "simple"
  1678                           ; Number of cases is 1, Range of values is 0 to 0
  1679                           ; switch strategies available:
  1680                           ; Name         Instructions Cycles
  1681                           ; simple_byte            4     3 (average)
  1682                           ;	Chosen strategy is simple_byte
  1683  000DF2  51C3               	movf	(??_calcSteering+1)& (0+255),w,b
  1684  000DF4  0A00               	xorlw	0	; case 0
  1685  000DF6  B4D8               	btfsc	status,2,c
  1686  000DF8  EF00  F007         	goto	l5924
  1687  000DFC  EF1F  F007         	goto	l1317
  1688  000E00                     l5924:
  1689                           
  1690                           ; BSR set to: 0
  1691                           ; Switch size 1, requested type "simple"
  1692                           ; Number of cases is 7, Range of values is 0 to 6
  1693                           ; switch strategies available:
  1694                           ; Name         Instructions Cycles
  1695                           ; simple_byte           22    12 (average)
  1696                           ;	Chosen strategy is simple_byte
  1697  000E00  51C2               	movf	??_calcSteering& (0+255),w,b
  1698  000E02  0A00               	xorlw	0	; case 0
  1699  000E04  B4D8               	btfsc	status,2,c
  1700  000E06  EFA4  F006         	goto	l5376
  1701  000E0A  0A01               	xorlw	1	; case 1
  1702  000E0C  B4D8               	btfsc	status,2,c
  1703  000E0E  EF9A  F006         	goto	l5374
  1704  000E12  0A03               	xorlw	3	; case 2
  1705  000E14  B4D8               	btfsc	status,2,c
  1706  000E16  EF90  F006         	goto	l5372
  1707  000E1A  0A01               	xorlw	1	; case 3
  1708  000E1C  B4D8               	btfsc	status,2,c
  1709  000E1E  EFBC  F006         	goto	l5378
  1710  000E22  0A07               	xorlw	7	; case 4
  1711  000E24  B4D8               	btfsc	status,2,c
  1712  000E26  EFC6  F006         	goto	l5380
  1713  000E2A  0A01               	xorlw	1	; case 5
  1714  000E2C  B4D8               	btfsc	status,2,c
  1715  000E2E  EFD0  F006         	goto	l5382
  1716  000E32  0A03               	xorlw	3	; case 6
  1717  000E34  B4D8               	btfsc	status,2,c
  1718  000E36  EFE3  F006         	goto	l5388
  1719  000E3A  EF1F  F007         	goto	l1317
  1720  000E3E                     l1317:
  1721  000E3E  0012               	return		;funcret
  1722  000E40                     __end_of_calcSteering:
  1723                           	callstack 0
  1724                           
  1725 ;; *************** function _setSteering *****************
  1726 ;; Defined at:
  1727 ;;		line 345 in file "main.c"
  1728 ;; Parameters:    Size  Location     Type
  1729 ;;  steering        2   27[COMRAM] short 
  1730 ;;  steeringMode    1   29[COMRAM] enum E17304
  1731 ;; Auto vars:     Size  Location     Type
  1732 ;;  steeringB       2   34[COMRAM] short 
  1733 ;;  steeringF       2   32[COMRAM] short 
  1734 ;; Return value:  Size  Location     Type
  1735 ;;                  1    wreg      void 
  1736 ;; Registers used:
  1737 ;;		wreg, status,2, status,0, cstack
  1738 ;; Tracked objects:
  1739 ;;		On entry : 0/0
  1740 ;;		On exit  : 0/0
  1741 ;;		Unchanged: 0/0
  1742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1743 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1744 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1745 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1746 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1747 ;;Total ram usage:        9 bytes
  1748 ;; Hardware stack levels used: 1
  1749 ;; Hardware stack levels required when called: 9
  1750 ;; This function calls:
  1751 ;;		_PWM5_LoadDutyValue
  1752 ;;		_PWM6_LoadDutyValue
  1753 ;;		___awdiv
  1754 ;; This function is called by:
  1755 ;;		_loop
  1756 ;;		_startAccell
  1757 ;;		_calcSteering
  1758 ;; This function uses a non-reentrant model
  1759 ;;
  1760                           
  1761                           	psect	text4
  1762  001206                     __ptext4:
  1763                           	callstack 0
  1764  001206                     _setSteering:
  1765                           	callstack 19
  1766  001206  0E00               	movlw	0
  1767  001208  6E24               	movwf	(setSteering@steeringB+1)^0,c
  1768  00120A  0E00               	movlw	0
  1769  00120C  6E23               	movwf	setSteering@steeringB^0,c
  1770                           
  1771                           ;main.c: 347:     switch (steeringMode) {
  1772  00120E  EF57  F009         	goto	l3820
  1773  001212                     l1361:
  1774                           
  1775                           ;main.c: 349:             steeringF = (+steering);
  1776  001212  C01C  F021         	movff	setSteering@steering,setSteering@steeringF
  1777  001216  C01D  F022         	movff	setSteering@steering+1,setSteering@steeringF+1
  1778                           
  1779                           ;main.c: 350:             steeringB = -steering;
  1780  00121A  C01C  F01F         	movff	setSteering@steering,??_setSteering
  1781  00121E  C01D  F020         	movff	setSteering@steering+1,??_setSteering+1
  1782  001222  1E1F               	comf	??_setSteering^0,f,c
  1783  001224  1E20               	comf	(??_setSteering+1)^0,f,c
  1784  001226  4A1F               	infsnz	??_setSteering^0,f,c
  1785  001228  2A20               	incf	(??_setSteering+1)^0,f,c
  1786  00122A  C01F  F023         	movff	??_setSteering,setSteering@steeringB
  1787  00122E  C020  F024         	movff	??_setSteering+1,setSteering@steeringB+1
  1788                           
  1789                           ;main.c: 351:             break;
  1790  001232  EF78  F009         	goto	l3822
  1791  001236                     l1363:
  1792                           
  1793                           ;main.c: 353:             steeringF = (+steering);
  1794  001236  C01C  F021         	movff	setSteering@steering,setSteering@steeringF
  1795  00123A  C01D  F022         	movff	setSteering@steering+1,setSteering@steeringF+1
  1796                           
  1797                           ;main.c: 354:             steeringB = (+steering);
  1798  00123E  C01C  F023         	movff	setSteering@steering,setSteering@steeringB
  1799  001242  C01D  F024         	movff	setSteering@steering+1,setSteering@steeringB+1
  1800                           
  1801                           ;main.c: 355:             break;
  1802  001246  EF78  F009         	goto	l3822
  1803  00124A                     l1364:
  1804                           
  1805                           ;main.c: 357:             steeringF = (+steering);
  1806  00124A  C01C  F021         	movff	setSteering@steering,setSteering@steeringF
  1807  00124E  C01D  F022         	movff	setSteering@steering+1,setSteering@steeringF+1
  1808  001252                     
  1809                           ;main.c: 358:             steeringB = (-steering / (2));
  1810  001252  C01C  F014         	movff	setSteering@steering,___awdiv@dividend
  1811  001256  C01D  F015         	movff	setSteering@steering+1,___awdiv@dividend+1
  1812  00125A  0EFF               	movlw	255
  1813  00125C  6E17               	movwf	(___awdiv@divisor+1)^0,c
  1814  00125E  0EFE               	movlw	254
  1815  001260  6E16               	movwf	___awdiv@divisor^0,c
  1816  001262  EC53  F00E         	call	___awdiv	;wreg free
  1817  001266  C014  F023         	movff	?___awdiv,setSteering@steeringB
  1818  00126A  C015  F024         	movff	?___awdiv+1,setSteering@steeringB+1
  1819                           
  1820                           ;main.c: 359:             break;
  1821  00126E  EF78  F009         	goto	l3822
  1822  001272                     l1365:
  1823                           
  1824                           ;main.c: 361:             steeringF = (+steering);
  1825  001272  C01C  F021         	movff	setSteering@steering,setSteering@steeringF
  1826  001276  C01D  F022         	movff	setSteering@steering+1,setSteering@steeringF+1
  1827  00127A                     
  1828                           ;main.c: 362:             steeringB = 0;
  1829  00127A  0E00               	movlw	0
  1830  00127C  6E24               	movwf	(setSteering@steeringB+1)^0,c
  1831  00127E  0E00               	movlw	0
  1832  001280  6E23               	movwf	setSteering@steeringB^0,c
  1833                           
  1834                           ;main.c: 363:             break;
  1835  001282  EF78  F009         	goto	l3822
  1836  001286                     l3812:
  1837                           
  1838                           ;main.c: 365:             steeringF = 0;
  1839  001286  0E00               	movlw	0
  1840  001288  6E22               	movwf	(setSteering@steeringF+1)^0,c
  1841  00128A  0E00               	movlw	0
  1842  00128C  6E21               	movwf	setSteering@steeringF^0,c
  1843  00128E                     
  1844                           ;main.c: 366:             steeringB = (+steering);
  1845  00128E  C01C  F023         	movff	setSteering@steering,setSteering@steeringB
  1846  001292  C01D  F024         	movff	setSteering@steering+1,setSteering@steeringB+1
  1847                           
  1848                           ;main.c: 367:             break;
  1849  001296  EF78  F009         	goto	l3822
  1850  00129A                     l3816:
  1851                           
  1852                           ;main.c: 369:             steeringF = 0;
  1853  00129A  0E00               	movlw	0
  1854  00129C  6E22               	movwf	(setSteering@steeringF+1)^0,c
  1855  00129E  0E00               	movlw	0
  1856  0012A0  6E21               	movwf	setSteering@steeringF^0,c
  1857                           
  1858                           ;main.c: 370:             steeringB = 0;
  1859  0012A2  0E00               	movlw	0
  1860  0012A4  6E24               	movwf	(setSteering@steeringB+1)^0,c
  1861  0012A6  0E00               	movlw	0
  1862  0012A8  6E23               	movwf	setSteering@steeringB^0,c
  1863                           
  1864                           ;main.c: 371:             break;
  1865  0012AA  EF78  F009         	goto	l3822
  1866  0012AE                     l3820:
  1867  0012AE  501E               	movf	setSteering@steeringMode^0,w,c
  1868  0012B0  6E1F               	movwf	??_setSteering^0,c
  1869  0012B2  6A20               	clrf	(??_setSteering+1)^0,c
  1870                           
  1871                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1872                           ; Switch size 1, requested type "simple"
  1873                           ; Number of cases is 1, Range of values is 0 to 0
  1874                           ; switch strategies available:
  1875                           ; Name         Instructions Cycles
  1876                           ; simple_byte            4     3 (average)
  1877                           ;	Chosen strategy is simple_byte
  1878  0012B4  5020               	movf	(??_setSteering+1)^0,w,c
  1879  0012B6  0A00               	xorlw	0	; case 0
  1880  0012B8  B4D8               	btfsc	status,2,c
  1881  0012BA  EF61  F009         	goto	l5926
  1882  0012BE  EF4D  F009         	goto	l3816
  1883  0012C2                     l5926:
  1884                           
  1885                           ; Switch size 1, requested type "simple"
  1886                           ; Number of cases is 5, Range of values is 0 to 4
  1887                           ; switch strategies available:
  1888                           ; Name         Instructions Cycles
  1889                           ; simple_byte           16     9 (average)
  1890                           ;	Chosen strategy is simple_byte
  1891  0012C2  501F               	movf	??_setSteering^0,w,c
  1892  0012C4  0A00               	xorlw	0	; case 0
  1893  0012C6  B4D8               	btfsc	status,2,c
  1894  0012C8  EF09  F009         	goto	l1361
  1895  0012CC  0A01               	xorlw	1	; case 1
  1896  0012CE  B4D8               	btfsc	status,2,c
  1897  0012D0  EF1B  F009         	goto	l1363
  1898  0012D4  0A03               	xorlw	3	; case 2
  1899  0012D6  B4D8               	btfsc	status,2,c
  1900  0012D8  EF25  F009         	goto	l1364
  1901  0012DC  0A01               	xorlw	1	; case 3
  1902  0012DE  B4D8               	btfsc	status,2,c
  1903  0012E0  EF39  F009         	goto	l1365
  1904  0012E4  0A07               	xorlw	7	; case 4
  1905  0012E6  B4D8               	btfsc	status,2,c
  1906  0012E8  EF43  F009         	goto	l3812
  1907  0012EC  EF4D  F009         	goto	l3816
  1908  0012F0                     l3822:
  1909                           
  1910                           ;main.c: 374:     if (steeringF > ((65))) {
  1911  0012F0  BE22               	btfsc	(setSteering@steeringF+1)^0,7,c
  1912  0012F2  EF84  F009         	goto	u1991
  1913  0012F6  5022               	movf	(setSteering@steeringF+1)^0,w,c
  1914  0012F8  E109               	bnz	u1990
  1915  0012FA  0E42               	movlw	66
  1916  0012FC  5C21               	subwf	setSteering@steeringF^0,w,c
  1917  0012FE  A0D8               	btfss	status,0,c
  1918  001300  EF84  F009         	goto	u1991
  1919  001304  EF86  F009         	goto	u1990
  1920  001308                     u1991:
  1921  001308  EF8C  F009         	goto	l3826
  1922  00130C                     u1990:
  1923  00130C                     
  1924                           ;main.c: 375:         steeringF = ((65));
  1925  00130C  0E00               	movlw	0
  1926  00130E  6E22               	movwf	(setSteering@steeringF+1)^0,c
  1927  001310  0E41               	movlw	65
  1928  001312  6E21               	movwf	setSteering@steeringF^0,c
  1929                           
  1930                           ;main.c: 376:     } else if (steeringF < (-(65))) {
  1931  001314  EF9E  F009         	goto	l3830
  1932  001318                     l3826:
  1933  001318  AE22               	btfss	(setSteering@steeringF+1)^0,7,c
  1934  00131A  EF98  F009         	goto	u2001
  1935  00131E  0EBF               	movlw	191
  1936  001320  5C21               	subwf	setSteering@steeringF^0,w,c
  1937  001322  0EFF               	movlw	255
  1938  001324  5822               	subwfb	(setSteering@steeringF+1)^0,w,c
  1939  001326  B0D8               	btfsc	status,0,c
  1940  001328  EF98  F009         	goto	u2001
  1941  00132C  EF9A  F009         	goto	u2000
  1942  001330                     u2001:
  1943  001330  EF9E  F009         	goto	l3830
  1944  001334                     u2000:
  1945  001334                     
  1946                           ;main.c: 377:         steeringF = (-(65));
  1947  001334  0EFF               	movlw	255
  1948  001336  6E22               	movwf	(setSteering@steeringF+1)^0,c
  1949  001338  0EBF               	movlw	191
  1950  00133A  6E21               	movwf	setSteering@steeringF^0,c
  1951  00133C                     l3830:
  1952                           
  1953                           ;main.c: 380:     if (steeringB > ((40))) {
  1954  00133C  BE24               	btfsc	(setSteering@steeringB+1)^0,7,c
  1955  00133E  EFAA  F009         	goto	u2011
  1956  001342  5024               	movf	(setSteering@steeringB+1)^0,w,c
  1957  001344  E109               	bnz	u2010
  1958  001346  0E29               	movlw	41
  1959  001348  5C23               	subwf	setSteering@steeringB^0,w,c
  1960  00134A  A0D8               	btfss	status,0,c
  1961  00134C  EFAA  F009         	goto	u2011
  1962  001350  EFAC  F009         	goto	u2010
  1963  001354                     u2011:
  1964  001354  EFB2  F009         	goto	l3834
  1965  001358                     u2010:
  1966  001358                     
  1967                           ;main.c: 381:         steeringB = ((40));
  1968  001358  0E00               	movlw	0
  1969  00135A  6E24               	movwf	(setSteering@steeringB+1)^0,c
  1970  00135C  0E28               	movlw	40
  1971  00135E  6E23               	movwf	setSteering@steeringB^0,c
  1972                           
  1973                           ;main.c: 382:     } else if (steeringB < (-(40))) {
  1974  001360  EFC4  F009         	goto	l3838
  1975  001364                     l3834:
  1976  001364  AE24               	btfss	(setSteering@steeringB+1)^0,7,c
  1977  001366  EFBE  F009         	goto	u2021
  1978  00136A  0ED8               	movlw	216
  1979  00136C  5C23               	subwf	setSteering@steeringB^0,w,c
  1980  00136E  0EFF               	movlw	255
  1981  001370  5824               	subwfb	(setSteering@steeringB+1)^0,w,c
  1982  001372  B0D8               	btfsc	status,0,c
  1983  001374  EFBE  F009         	goto	u2021
  1984  001378  EFC0  F009         	goto	u2020
  1985  00137C                     u2021:
  1986  00137C  EFC4  F009         	goto	l3838
  1987  001380                     u2020:
  1988  001380                     
  1989                           ;main.c: 383:         steeringB = (-(40));
  1990  001380  0EFF               	movlw	255
  1991  001382  6E24               	movwf	(setSteering@steeringB+1)^0,c
  1992  001384  0ED8               	movlw	216
  1993  001386  6E23               	movwf	setSteering@steeringB^0,c
  1994  001388                     l3838:
  1995                           
  1996                           ;main.c: 386:     PWM6_LoadDutyValue((uint16_t) ((352) + steeringF));
  1997  001388  0E60               	movlw	96
  1998  00138A  2421               	addwf	setSteering@steeringF^0,w,c
  1999  00138C  6E14               	movwf	PWM6_LoadDutyValue@dutyValue^0,c
  2000  00138E  0E01               	movlw	1
  2001  001390  2022               	addwfc	(setSteering@steeringF+1)^0,w,c
  2002  001392  6E15               	movwf	(PWM6_LoadDutyValue@dutyValue+1)^0,c
  2003  001394  EC87  F011         	call	_PWM6_LoadDutyValue	;wreg free
  2004  001398                     
  2005                           ;main.c: 387:     PWM5_LoadDutyValue((uint16_t) ((357) + steeringB));
  2006  001398  0E65               	movlw	101
  2007  00139A  2423               	addwf	setSteering@steeringB^0,w,c
  2008  00139C  6E14               	movwf	PWM5_LoadDutyValue@dutyValue^0,c
  2009  00139E  0E01               	movlw	1
  2010  0013A0  2024               	addwfc	(setSteering@steeringB+1)^0,w,c
  2011  0013A2  6E15               	movwf	(PWM5_LoadDutyValue@dutyValue+1)^0,c
  2012  0013A4  ECA1  F011         	call	_PWM5_LoadDutyValue	;wreg free
  2013  0013A8  0012               	return		;funcret
  2014  0013AA                     __end_of_setSteering:
  2015                           	callstack 0
  2016                           
  2017 ;; *************** function _PWM6_LoadDutyValue *****************
  2018 ;; Defined at:
  2019 ;;		line 74 in file "mcc_generated_files/pwm6.c"
  2020 ;; Parameters:    Size  Location     Type
  2021 ;;  dutyValue       2   19[COMRAM] unsigned short 
  2022 ;; Auto vars:     Size  Location     Type
  2023 ;;		None
  2024 ;; Return value:  Size  Location     Type
  2025 ;;                  1    wreg      void 
  2026 ;; Registers used:
  2027 ;;		wreg, status,2, status,0
  2028 ;; Tracked objects:
  2029 ;;		On entry : 0/0
  2030 ;;		On exit  : 0/0
  2031 ;;		Unchanged: 0/0
  2032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2033 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2035 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2036 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2037 ;;Total ram usage:        4 bytes
  2038 ;; Hardware stack levels used: 1
  2039 ;; Hardware stack levels required when called: 8
  2040 ;; This function calls:
  2041 ;;		Nothing
  2042 ;; This function is called by:
  2043 ;;		_setSteering
  2044 ;; This function uses a non-reentrant model
  2045 ;;
  2046                           
  2047                           	psect	text5
  2048  00230E                     __ptext5:
  2049                           	callstack 0
  2050  00230E                     _PWM6_LoadDutyValue:
  2051                           	callstack 19
  2052  00230E                     
  2053                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  2054  00230E  C014  F016         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
  2055  002312  C015  F017         	movff	PWM6_LoadDutyValue@dutyValue+1,??_PWM6_LoadDutyValue+1
  2056  002316  90D8               	bcf	status,0,c
  2057  002318  3217               	rrcf	(??_PWM6_LoadDutyValue+1)^0,f,c
  2058  00231A  3216               	rrcf	??_PWM6_LoadDutyValue^0,f,c
  2059  00231C  90D8               	bcf	status,0,c
  2060  00231E  3217               	rrcf	(??_PWM6_LoadDutyValue+1)^0,f,c
  2061  002320  3216               	rrcf	??_PWM6_LoadDutyValue^0,f,c
  2062  002322  5016               	movf	??_PWM6_LoadDutyValue^0,w,c
  2063  002324  6E69               	movwf	105,c	;volatile
  2064                           
  2065                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
  2066  002326  C014  F016         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
  2067  00232A  0E03               	movlw	3
  2068  00232C  1616               	andwf	??_PWM6_LoadDutyValue^0,f,c
  2069  00232E  0E06               	movlw	6
  2070  002330  6E17               	movwf	(??_PWM6_LoadDutyValue+1)^0,c
  2071  002332                     u1905:
  2072  002332  90D8               	bcf	status,0,c
  2073  002334  3616               	rlcf	??_PWM6_LoadDutyValue^0,f,c
  2074  002336  2E17               	decfsz	(??_PWM6_LoadDutyValue+1)^0,f,c
  2075  002338  EF99  F011         	goto	u1905
  2076  00233C  5016               	movf	??_PWM6_LoadDutyValue^0,w,c
  2077  00233E  6E68               	movwf	104,c	;volatile
  2078  002340  0012               	return		;funcret
  2079  002342                     __end_of_PWM6_LoadDutyValue:
  2080                           	callstack 0
  2081                           
  2082 ;; *************** function _PWM5_LoadDutyValue *****************
  2083 ;; Defined at:
  2084 ;;		line 74 in file "mcc_generated_files/pwm5.c"
  2085 ;; Parameters:    Size  Location     Type
  2086 ;;  dutyValue       2   19[COMRAM] unsigned short 
  2087 ;; Auto vars:     Size  Location     Type
  2088 ;;		None
  2089 ;; Return value:  Size  Location     Type
  2090 ;;                  1    wreg      void 
  2091 ;; Registers used:
  2092 ;;		wreg, status,2, status,0
  2093 ;; Tracked objects:
  2094 ;;		On entry : 0/0
  2095 ;;		On exit  : 0/0
  2096 ;;		Unchanged: 0/0
  2097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2098 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2100 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2101 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2102 ;;Total ram usage:        4 bytes
  2103 ;; Hardware stack levels used: 1
  2104 ;; Hardware stack levels required when called: 8
  2105 ;; This function calls:
  2106 ;;		Nothing
  2107 ;; This function is called by:
  2108 ;;		_setSteering
  2109 ;; This function uses a non-reentrant model
  2110 ;;
  2111                           
  2112                           	psect	text6
  2113  002342                     __ptext6:
  2114                           	callstack 0
  2115  002342                     _PWM5_LoadDutyValue:
  2116                           	callstack 19
  2117  002342                     
  2118                           ;mcc_generated_files/pwm5.c: 74:  void PWM5_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm5.c: 75:  {;mcc_generated_files/pwm5.c: 77:      PWM5DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  2119  002342  C014  F016         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
  2120  002346  C015  F017         	movff	PWM5_LoadDutyValue@dutyValue+1,??_PWM5_LoadDutyValue+1
  2121  00234A  90D8               	bcf	status,0,c
  2122  00234C  3217               	rrcf	(??_PWM5_LoadDutyValue+1)^0,f,c
  2123  00234E  3216               	rrcf	??_PWM5_LoadDutyValue^0,f,c
  2124  002350  90D8               	bcf	status,0,c
  2125  002352  3217               	rrcf	(??_PWM5_LoadDutyValue+1)^0,f,c
  2126  002354  3216               	rrcf	??_PWM5_LoadDutyValue^0,f,c
  2127  002356  5016               	movf	??_PWM5_LoadDutyValue^0,w,c
  2128  002358  6E6D               	movwf	109,c	;volatile
  2129                           
  2130                           ;mcc_generated_files/pwm5.c: 80:      PWM5DCL = (dutyValue & 0x0003)<<6;
  2131  00235A  C014  F016         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
  2132  00235E  0E03               	movlw	3
  2133  002360  1616               	andwf	??_PWM5_LoadDutyValue^0,f,c
  2134  002362  0E06               	movlw	6
  2135  002364  6E17               	movwf	(??_PWM5_LoadDutyValue+1)^0,c
  2136  002366                     u1895:
  2137  002366  90D8               	bcf	status,0,c
  2138  002368  3616               	rlcf	??_PWM5_LoadDutyValue^0,f,c
  2139  00236A  2E17               	decfsz	(??_PWM5_LoadDutyValue+1)^0,f,c
  2140  00236C  EFB3  F011         	goto	u1895
  2141  002370  5016               	movf	??_PWM5_LoadDutyValue^0,w,c
  2142  002372  6E6C               	movwf	108,c	;volatile
  2143  002374  0012               	return		;funcret
  2144  002376                     __end_of_PWM5_LoadDutyValue:
  2145                           	callstack 0
  2146                           
  2147 ;; *************** function ___flge *****************
  2148 ;; Defined at:
  2149 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  2150 ;; Parameters:    Size  Location     Type
  2151 ;;  ff1             4   19[COMRAM] void 
  2152 ;;  ff2             4   23[COMRAM] void 
  2153 ;; Auto vars:     Size  Location     Type
  2154 ;;		None
  2155 ;; Return value:  Size  Location     Type
  2156 ;;		None               void
  2157 ;; Registers used:
  2158 ;;		wreg, status,2, status,0
  2159 ;; Tracked objects:
  2160 ;;		On entry : 0/0
  2161 ;;		On exit  : 0/0
  2162 ;;		Unchanged: 0/0
  2163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2164 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2166 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2167 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2168 ;;Total ram usage:       12 bytes
  2169 ;; Hardware stack levels used: 1
  2170 ;; Hardware stack levels required when called: 8
  2171 ;; This function calls:
  2172 ;;		Nothing
  2173 ;; This function is called by:
  2174 ;;		_startAccell
  2175 ;; This function uses a non-reentrant model
  2176 ;;
  2177                           
  2178                           	psect	text7
  2179  001834                     __ptext7:
  2180                           	callstack 0
  2181  001834                     ___flge:
  2182                           	callstack 20
  2183  001834  0E00               	movlw	0
  2184  001836  1414               	andwf	___flge@ff1^0,w,c
  2185  001838  6E1C               	movwf	??___flge^0,c
  2186  00183A  0E00               	movlw	0
  2187  00183C  1415               	andwf	(___flge@ff1+1)^0,w,c
  2188  00183E  6E1D               	movwf	(??___flge+1)^0,c
  2189  001840  0E80               	movlw	128
  2190  001842  1416               	andwf	(___flge@ff1+2)^0,w,c
  2191  001844  6E1E               	movwf	(??___flge+2)^0,c
  2192  001846  0E7F               	movlw	127
  2193  001848  1417               	andwf	(___flge@ff1+3)^0,w,c
  2194  00184A  6E1F               	movwf	(??___flge+3)^0,c
  2195  00184C  501C               	movf	??___flge^0,w,c
  2196  00184E  101D               	iorwf	(??___flge+1)^0,w,c
  2197  001850  101E               	iorwf	(??___flge+2)^0,w,c
  2198  001852  101F               	iorwf	(??___flge+3)^0,w,c
  2199  001854  A4D8               	btfss	status,2,c
  2200  001856  EF2F  F00C         	goto	u2961
  2201  00185A  EF31  F00C         	goto	u2960
  2202  00185E                     u2961:
  2203  00185E  EF39  F00C         	goto	l4446
  2204  001862                     u2960:
  2205  001862  0E00               	movlw	0
  2206  001864  6E14               	movwf	___flge@ff1^0,c
  2207  001866  0E00               	movlw	0
  2208  001868  6E15               	movwf	(___flge@ff1+1)^0,c
  2209  00186A  0E00               	movlw	0
  2210  00186C  6E16               	movwf	(___flge@ff1+2)^0,c
  2211  00186E  0E00               	movlw	0
  2212  001870  6E17               	movwf	(___flge@ff1+3)^0,c
  2213  001872                     l4446:
  2214  001872  0E00               	movlw	0
  2215  001874  1418               	andwf	___flge@ff2^0,w,c
  2216  001876  6E1C               	movwf	??___flge^0,c
  2217  001878  0E00               	movlw	0
  2218  00187A  1419               	andwf	(___flge@ff2+1)^0,w,c
  2219  00187C  6E1D               	movwf	(??___flge+1)^0,c
  2220  00187E  0E80               	movlw	128
  2221  001880  141A               	andwf	(___flge@ff2+2)^0,w,c
  2222  001882  6E1E               	movwf	(??___flge+2)^0,c
  2223  001884  0E7F               	movlw	127
  2224  001886  141B               	andwf	(___flge@ff2+3)^0,w,c
  2225  001888  6E1F               	movwf	(??___flge+3)^0,c
  2226  00188A  501C               	movf	??___flge^0,w,c
  2227  00188C  101D               	iorwf	(??___flge+1)^0,w,c
  2228  00188E  101E               	iorwf	(??___flge+2)^0,w,c
  2229  001890  101F               	iorwf	(??___flge+3)^0,w,c
  2230  001892  A4D8               	btfss	status,2,c
  2231  001894  EF4E  F00C         	goto	u2971
  2232  001898  EF50  F00C         	goto	u2970
  2233  00189C                     u2971:
  2234  00189C  EF58  F00C         	goto	l4450
  2235  0018A0                     u2970:
  2236  0018A0  0E00               	movlw	0
  2237  0018A2  6E18               	movwf	___flge@ff2^0,c
  2238  0018A4  0E00               	movlw	0
  2239  0018A6  6E19               	movwf	(___flge@ff2+1)^0,c
  2240  0018A8  0E00               	movlw	0
  2241  0018AA  6E1A               	movwf	(___flge@ff2+2)^0,c
  2242  0018AC  0E00               	movlw	0
  2243  0018AE  6E1B               	movwf	(___flge@ff2+3)^0,c
  2244  0018B0                     l4450:
  2245  0018B0  AE17               	btfss	(___flge@ff1+3)^0,7,c
  2246  0018B2  EF5D  F00C         	goto	u2981
  2247  0018B6  EF5F  F00C         	goto	u2980
  2248  0018BA                     u2981:
  2249  0018BA  EF68  F00C         	goto	l4454
  2250  0018BE                     u2980:
  2251  0018BE  6C14               	negf	___flge@ff1^0,c
  2252  0018C0  1E15               	comf	(___flge@ff1+1)^0,f,c
  2253  0018C2  B0D8               	btfsc	status,0,c
  2254  0018C4  2A15               	incf	(___flge@ff1+1)^0,f,c
  2255  0018C6  1E16               	comf	(___flge@ff1+2)^0,f,c
  2256  0018C8  B0D8               	btfsc	status,0,c
  2257  0018CA  2A16               	incf	(___flge@ff1+2)^0,f,c
  2258  0018CC  0E80               	movlw	128
  2259  0018CE  5617               	subfwb	(___flge@ff1+3)^0,f,c
  2260  0018D0                     l4454:
  2261  0018D0  AE1B               	btfss	(___flge@ff2+3)^0,7,c
  2262  0018D2  EF6D  F00C         	goto	u2991
  2263  0018D6  EF6F  F00C         	goto	u2990
  2264  0018DA                     u2991:
  2265  0018DA  EF78  F00C         	goto	l1642
  2266  0018DE                     u2990:
  2267  0018DE  6C18               	negf	___flge@ff2^0,c
  2268  0018E0  1E19               	comf	(___flge@ff2+1)^0,f,c
  2269  0018E2  B0D8               	btfsc	status,0,c
  2270  0018E4  2A19               	incf	(___flge@ff2+1)^0,f,c
  2271  0018E6  1E1A               	comf	(___flge@ff2+2)^0,f,c
  2272  0018E8  B0D8               	btfsc	status,0,c
  2273  0018EA  2A1A               	incf	(___flge@ff2+2)^0,f,c
  2274  0018EC  0E80               	movlw	128
  2275  0018EE  561B               	subfwb	(___flge@ff2+3)^0,f,c
  2276  0018F0                     l1642:
  2277  0018F0  0E00               	movlw	0
  2278  0018F2  1A14               	xorwf	___flge@ff1^0,f,c
  2279  0018F4  0E00               	movlw	0
  2280  0018F6  1A15               	xorwf	(___flge@ff1+1)^0,f,c
  2281  0018F8  0E00               	movlw	0
  2282  0018FA  1A16               	xorwf	(___flge@ff1+2)^0,f,c
  2283  0018FC  0E80               	movlw	128
  2284  0018FE  1A17               	xorwf	(___flge@ff1+3)^0,f,c
  2285  001900  0E00               	movlw	0
  2286  001902  1A18               	xorwf	___flge@ff2^0,f,c
  2287  001904  0E00               	movlw	0
  2288  001906  1A19               	xorwf	(___flge@ff2+1)^0,f,c
  2289  001908  0E00               	movlw	0
  2290  00190A  1A1A               	xorwf	(___flge@ff2+2)^0,f,c
  2291  00190C  0E80               	movlw	128
  2292  00190E  1A1B               	xorwf	(___flge@ff2+3)^0,f,c
  2293  001910  5018               	movf	___flge@ff2^0,w,c
  2294  001912  5C14               	subwf	___flge@ff1^0,w,c
  2295  001914  5019               	movf	(___flge@ff2+1)^0,w,c
  2296  001916  5815               	subwfb	(___flge@ff1+1)^0,w,c
  2297  001918  501A               	movf	(___flge@ff2+2)^0,w,c
  2298  00191A  5816               	subwfb	(___flge@ff1+2)^0,w,c
  2299  00191C  501B               	movf	(___flge@ff2+3)^0,w,c
  2300  00191E  5817               	subwfb	(___flge@ff1+3)^0,w,c
  2301  001920  B0D8               	btfsc	status,0,c
  2302  001922  EF95  F00C         	goto	u3001
  2303  001926  EF97  F00C         	goto	u3000
  2304  00192A                     u3001:
  2305  00192A  EF9A  F00C         	goto	l4460
  2306  00192E                     u3000:
  2307  00192E  90D8               	bcf	status,0,c
  2308  001930  EF9B  F00C         	goto	l1647
  2309  001934                     l4460:
  2310  001934  80D8               	bsf	status,0,c
  2311  001936                     l1647:
  2312  001936  0012               	return		;funcret
  2313  001938                     __end_of___flge:
  2314                           	callstack 0
  2315                           
  2316 ;; *************** function _getReverse *****************
  2317 ;; Defined at:
  2318 ;;		line 156 in file "main.c"
  2319 ;; Parameters:    Size  Location     Type
  2320 ;;		None
  2321 ;; Auto vars:     Size  Location     Type
  2322 ;;		None
  2323 ;; Return value:  Size  Location     Type
  2324 ;;                  1    wreg      void 
  2325 ;; Registers used:
  2326 ;;		wreg, status,2, status,0
  2327 ;; Tracked objects:
  2328 ;;		On entry : 0/0
  2329 ;;		On exit  : 0/0
  2330 ;;		Unchanged: 0/0
  2331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2336 ;;Total ram usage:        0 bytes
  2337 ;; Hardware stack levels used: 1
  2338 ;; Hardware stack levels required when called: 8
  2339 ;; This function calls:
  2340 ;;		Nothing
  2341 ;; This function is called by:
  2342 ;;		_loop
  2343 ;; This function uses a non-reentrant model
  2344 ;;
  2345                           
  2346                           	psect	text8
  2347  001938                     __ptext8:
  2348                           	callstack 0
  2349  001938                     _getReverse:
  2350                           	callstack 21
  2351  001938                     
  2352                           ;main.c: 157:     if (distFront < (15)) {
  2353  001938  504B               	movf	(_distFront+1)^0,w,c	;volatile
  2354  00193A  E107               	bnz	u3211
  2355  00193C  0E0F               	movlw	15
  2356  00193E  5C4A               	subwf	_distFront^0,w,c	;volatile
  2357  001940  B0D8               	btfsc	status,0,c
  2358  001942  EFA5  F00C         	goto	u3211
  2359  001946  EFA7  F00C         	goto	u3210
  2360  00194A                     u3211:
  2361  00194A  EFAC  F00C         	goto	l4676
  2362  00194E                     u3210:
  2363  00194E                     
  2364                           ;main.c: 158:         ++reverseCount;
  2365  00194E  0100               	movlb	0	; () banked
  2366  001950  4B94               	infsnz	_reverseCount& (0+255),f,b
  2367  001952  2B95               	incf	(_reverseCount+1)& (0+255),f,b
  2368                           
  2369                           ;main.c: 159:     } else if(driveMode != ReverseRight && driveMode != ReverseLeft) {
  2370  001954  EFC3  F00C         	goto	l4682
  2371  001958                     l4676:
  2372  001958  0E03               	movlw	3
  2373  00195A  184C               	xorwf	_driveMode^0,w,c
  2374  00195C  B4D8               	btfsc	status,2,c
  2375  00195E  EFB3  F00C         	goto	u3221
  2376  001962  EFB5  F00C         	goto	u3220
  2377  001966                     u3221:
  2378  001966  EFC3  F00C         	goto	l4682
  2379  00196A                     u3220:
  2380  00196A  0E04               	movlw	4
  2381  00196C  184C               	xorwf	_driveMode^0,w,c
  2382  00196E  B4D8               	btfsc	status,2,c
  2383  001970  EFBC  F00C         	goto	u3231
  2384  001974  EFBE  F00C         	goto	u3230
  2385  001978                     u3231:
  2386  001978  EFC3  F00C         	goto	l4682
  2387  00197C                     u3230:
  2388  00197C                     
  2389                           ;main.c: 160:         reverseCount = 0;
  2390  00197C  0E00               	movlw	0
  2391  00197E  0100               	movlb	0	; () banked
  2392  001980  6F95               	movwf	(_reverseCount+1)& (0+255),b
  2393  001982  0E00               	movlw	0
  2394  001984  6F94               	movwf	_reverseCount& (0+255),b
  2395  001986                     l4682:
  2396                           
  2397                           ;main.c: 163:     if (reverseCount > (50)) {
  2398  001986  0100               	movlb	0	; () banked
  2399  001988  5195               	movf	(_reverseCount+1)& (0+255),w,b
  2400  00198A  E109               	bnz	u3240
  2401  00198C  0E33               	movlw	51
  2402  00198E  5D94               	subwf	_reverseCount& (0+255),w,b
  2403  001990  A0D8               	btfss	status,0,c
  2404  001992  EFCD  F00C         	goto	u3241
  2405  001996  EFCF  F00C         	goto	u3240
  2406  00199A                     u3241:
  2407  00199A  EF19  F00D         	goto	l1290
  2408  00199E                     u3240:
  2409  00199E                     
  2410                           ; BSR set to: 0
  2411                           ;main.c: 164:         ++reverseTime;
  2412  00199E  4B82               	infsnz	_reverseTime& (0+255),f,b
  2413  0019A0  2B83               	incf	(_reverseTime+1)& (0+255),f,b
  2414  0019A2                     
  2415                           ; BSR set to: 0
  2416                           ;main.c: 166:         if (driveMode != ReverseRight && driveMode != ReverseLeft) {
  2417  0019A2  0E03               	movlw	3
  2418  0019A4  184C               	xorwf	_driveMode^0,w,c
  2419  0019A6  B4D8               	btfsc	status,2,c
  2420  0019A8  EFD8  F00C         	goto	u3251
  2421  0019AC  EFDA  F00C         	goto	u3250
  2422  0019B0                     u3251:
  2423  0019B0  EFF4  F00C         	goto	l4696
  2424  0019B4                     u3250:
  2425  0019B4                     
  2426                           ; BSR set to: 0
  2427  0019B4  0E04               	movlw	4
  2428  0019B6  184C               	xorwf	_driveMode^0,w,c
  2429  0019B8  B4D8               	btfsc	status,2,c
  2430  0019BA  EFE1  F00C         	goto	u3261
  2431  0019BE  EFE3  F00C         	goto	u3260
  2432  0019C2                     u3261:
  2433  0019C2  EFF4  F00C         	goto	l4696
  2434  0019C6                     u3260:
  2435  0019C6                     
  2436                           ; BSR set to: 0
  2437                           ;main.c: 167:             if (distLeft > distRight) {
  2438  0019C6  519C               	movf	_distLeft& (0+255),w,b	;volatile
  2439  0019C8  5D98               	subwf	_distRight& (0+255),w,b	;volatile
  2440  0019CA  519D               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  2441  0019CC  5999               	subwfb	(_distRight+1)& (0+255),w,b	;volatile
  2442  0019CE  B0D8               	btfsc	status,0,c
  2443  0019D0  EFEC  F00C         	goto	u3271
  2444  0019D4  EFEE  F00C         	goto	u3270
  2445  0019D8                     u3271:
  2446  0019D8  EFF2  F00C         	goto	l4694
  2447  0019DC                     u3270:
  2448  0019DC                     
  2449                           ; BSR set to: 0
  2450                           ;main.c: 168:                 driveMode = ReverseRight;
  2451  0019DC  0E03               	movlw	3
  2452  0019DE  6E4C               	movwf	_driveMode^0,c
  2453                           
  2454                           ;main.c: 169:             } else {
  2455  0019E0  EFF4  F00C         	goto	l4696
  2456  0019E4                     l4694:
  2457                           
  2458                           ; BSR set to: 0
  2459                           ;main.c: 170:                 driveMode = ReverseLeft;
  2460  0019E4  0E04               	movlw	4
  2461  0019E6  6E4C               	movwf	_driveMode^0,c
  2462  0019E8                     l4696:
  2463                           
  2464                           ; BSR set to: 0
  2465                           ;main.c: 174:         if (distFront > (35) || reverseTime > (300)) {
  2466  0019E8  504B               	movf	(_distFront+1)^0,w,c	;volatile
  2467  0019EA  E107               	bnz	u3281
  2468  0019EC  0E24               	movlw	36
  2469  0019EE  5C4A               	subwf	_distFront^0,w,c	;volatile
  2470  0019F0  B0D8               	btfsc	status,0,c
  2471  0019F2  EFFD  F00C         	goto	u3281
  2472  0019F6  EFFF  F00C         	goto	u3280
  2473  0019FA                     u3281:
  2474  0019FA  EF0F  F00D         	goto	l4700
  2475  0019FE                     u3280:
  2476  0019FE                     
  2477                           ; BSR set to: 0
  2478  0019FE  BF83               	btfsc	(_reverseTime+1)& (0+255),7,b
  2479  001A00  EF0B  F00D         	goto	u3291
  2480  001A04  0E2D               	movlw	45
  2481  001A06  5D82               	subwf	_reverseTime& (0+255),w,b
  2482  001A08  0E01               	movlw	1
  2483  001A0A  5983               	subwfb	(_reverseTime+1)& (0+255),w,b
  2484  001A0C  A0D8               	btfss	status,0,c
  2485  001A0E  EF0B  F00D         	goto	u3291
  2486  001A12  EF0D  F00D         	goto	u3290
  2487  001A16                     u3291:
  2488  001A16  EF19  F00D         	goto	l1290
  2489  001A1A                     u3290:
  2490  001A1A  EF0F  F00D         	goto	l4702
  2491  001A1E                     l4700:
  2492  001A1E                     l4702:
  2493                           
  2494                           ; BSR set to: 0
  2495                           ;main.c: 176:                 driveMode = Straight;
  2496  001A1E  0E01               	movlw	1
  2497  001A20  6E4C               	movwf	_driveMode^0,c
  2498  001A22                     
  2499                           ; BSR set to: 0
  2500                           ;main.c: 181:             reverseCount = 0;
  2501  001A22  0E00               	movlw	0
  2502  001A24  6F95               	movwf	(_reverseCount+1)& (0+255),b
  2503  001A26  0E00               	movlw	0
  2504  001A28  6F94               	movwf	_reverseCount& (0+255),b
  2505                           
  2506                           ;main.c: 182:             reverseTime = 0;
  2507  001A2A  0E00               	movlw	0
  2508  001A2C  6F83               	movwf	(_reverseTime+1)& (0+255),b
  2509  001A2E  0E00               	movlw	0
  2510  001A30  6F82               	movwf	_reverseTime& (0+255),b
  2511  001A32                     l1290:
  2512                           
  2513                           ; BSR set to: 0
  2514  001A32  0012               	return		;funcret
  2515  001A34                     __end_of_getReverse:
  2516                           	callstack 0
  2517                           
  2518 ;; *************** function _getCurve *****************
  2519 ;; Defined at:
  2520 ;;		line 99 in file "main.c"
  2521 ;; Parameters:    Size  Location     Type
  2522 ;;		None
  2523 ;; Auto vars:     Size  Location     Type
  2524 ;;  deltaLeft       2   23[COMRAM] short 
  2525 ;;  deltaRight      2   21[COMRAM] short 
  2526 ;; Return value:  Size  Location     Type
  2527 ;;                  1    wreg      void 
  2528 ;; Registers used:
  2529 ;;		wreg, status,2, status,0
  2530 ;; Tracked objects:
  2531 ;;		On entry : 0/0
  2532 ;;		On exit  : 0/0
  2533 ;;		Unchanged: 0/0
  2534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2536 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2537 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2538 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2539 ;;Total ram usage:        6 bytes
  2540 ;; Hardware stack levels used: 1
  2541 ;; Hardware stack levels required when called: 8
  2542 ;; This function calls:
  2543 ;;		Nothing
  2544 ;; This function is called by:
  2545 ;;		_loop
  2546 ;; This function uses a non-reentrant model
  2547 ;;
  2548                           
  2549                           	psect	text9
  2550  0009C4                     __ptext9:
  2551                           	callstack 0
  2552  0009C4                     _getCurve:
  2553                           	callstack 21
  2554  0009C4                     
  2555                           ;main.c: 100:     int16_t deltaLeft = (int16_t) (distLeft - oldDistLeft);
  2556  0009C4  503A               	movf	_oldDistLeft^0,w,c
  2557  0009C6  0100               	movlb	0	; () banked
  2558  0009C8  5D9C               	subwf	_distLeft& (0+255),w,b	;volatile
  2559  0009CA  6E18               	movwf	getCurve@deltaLeft^0,c
  2560  0009CC  503B               	movf	(_oldDistLeft+1)^0,w,c
  2561  0009CE  599D               	subwfb	(_distLeft+1)& (0+255),w,b	;volatile
  2562  0009D0  6E19               	movwf	(getCurve@deltaLeft+1)^0,c
  2563                           
  2564                           ;main.c: 101:     int16_t deltaRight = (int16_t) (distRight - oldDistRight);
  2565  0009D2  5192               	movf	_oldDistRight& (0+255),w,b
  2566  0009D4  5D98               	subwf	_distRight& (0+255),w,b	;volatile
  2567  0009D6  6E16               	movwf	getCurve@deltaRight^0,c
  2568  0009D8  5193               	movf	(_oldDistRight+1)& (0+255),w,b
  2569  0009DA  5999               	subwfb	(_distRight+1)& (0+255),w,b	;volatile
  2570  0009DC  6E17               	movwf	(getCurve@deltaRight+1)^0,c
  2571                           
  2572                           ;main.c: 103:     switch (curveMode) {
  2573  0009DE  EFE2  F005         	goto	l4662
  2574  0009E2                     l4606:
  2575                           
  2576                           ; BSR set to: 0
  2577                           ;main.c: 105:             if (deltaLeft > (30) && deltaLeft < (300) && oldDistLeft < (12
      +                          5)) {
  2578  0009E2  BE19               	btfsc	(getCurve@deltaLeft+1)^0,7,c
  2579  0009E4  EFFD  F004         	goto	u3041
  2580  0009E8  5019               	movf	(getCurve@deltaLeft+1)^0,w,c
  2581  0009EA  E109               	bnz	u3040
  2582  0009EC  0E1F               	movlw	31
  2583  0009EE  5C18               	subwf	getCurve@deltaLeft^0,w,c
  2584  0009F0  A0D8               	btfss	status,0,c
  2585  0009F2  EFFD  F004         	goto	u3041
  2586  0009F6  EFFF  F004         	goto	u3040
  2587  0009FA                     u3041:
  2588  0009FA  EF20  F005         	goto	l4614
  2589  0009FE                     u3040:
  2590  0009FE                     
  2591                           ; BSR set to: 0
  2592  0009FE  BE19               	btfsc	(getCurve@deltaLeft+1)^0,7,c
  2593  000A00  EF0D  F005         	goto	u3050
  2594  000A04  0E2C               	movlw	44
  2595  000A06  5C18               	subwf	getCurve@deltaLeft^0,w,c
  2596  000A08  0E01               	movlw	1
  2597  000A0A  5819               	subwfb	(getCurve@deltaLeft+1)^0,w,c
  2598  000A0C  B0D8               	btfsc	status,0,c
  2599  000A0E  EF0B  F005         	goto	u3051
  2600  000A12  EF0D  F005         	goto	u3050
  2601  000A16                     u3051:
  2602  000A16  EF20  F005         	goto	l4614
  2603  000A1A                     u3050:
  2604  000A1A                     
  2605                           ; BSR set to: 0
  2606  000A1A  503B               	movf	(_oldDistLeft+1)^0,w,c
  2607  000A1C  E107               	bnz	u3061
  2608  000A1E  0E7D               	movlw	125
  2609  000A20  5C3A               	subwf	_oldDistLeft^0,w,c
  2610  000A22  B0D8               	btfsc	status,0,c
  2611  000A24  EF16  F005         	goto	u3061
  2612  000A28  EF18  F005         	goto	u3060
  2613  000A2C                     u3061:
  2614  000A2C  EF20  F005         	goto	l4614
  2615  000A30                     u3060:
  2616  000A30                     
  2617                           ; BSR set to: 0
  2618                           ;main.c: 106:                 delay = 0;
  2619  000A30  0E00               	movlw	0
  2620  000A32  6E3E               	movwf	_delay^0,c
  2621                           
  2622                           ;main.c: 107:                 curveMode = BeforeCurve;
  2623  000A34  0E01               	movlw	1
  2624  000A36  6E3F               	movwf	_curveMode^0,c
  2625                           
  2626                           ;main.c: 108:                 driveMode = CurveLeft;
  2627  000A38  0E05               	movlw	5
  2628  000A3A  6E4C               	movwf	_driveMode^0,c
  2629                           
  2630                           ;main.c: 109:             } else if (deltaRight > (30) && deltaRight < (300) && oldDistR
      +                          ight < (125)) {
  2631  000A3C  EFFF  F005         	goto	l1255
  2632  000A40                     l4614:
  2633                           
  2634                           ; BSR set to: 0
  2635  000A40  BE17               	btfsc	(getCurve@deltaRight+1)^0,7,c
  2636  000A42  EF2C  F005         	goto	u3071
  2637  000A46  5017               	movf	(getCurve@deltaRight+1)^0,w,c
  2638  000A48  E109               	bnz	u3070
  2639  000A4A  0E1F               	movlw	31
  2640  000A4C  5C16               	subwf	getCurve@deltaRight^0,w,c
  2641  000A4E  A0D8               	btfss	status,0,c
  2642  000A50  EF2C  F005         	goto	u3071
  2643  000A54  EF2E  F005         	goto	u3070
  2644  000A58                     u3071:
  2645  000A58  EFFF  F005         	goto	l1255
  2646  000A5C                     u3070:
  2647  000A5C                     
  2648                           ; BSR set to: 0
  2649  000A5C  BE17               	btfsc	(getCurve@deltaRight+1)^0,7,c
  2650  000A5E  EF3C  F005         	goto	u3080
  2651  000A62  0E2C               	movlw	44
  2652  000A64  5C16               	subwf	getCurve@deltaRight^0,w,c
  2653  000A66  0E01               	movlw	1
  2654  000A68  5817               	subwfb	(getCurve@deltaRight+1)^0,w,c
  2655  000A6A  B0D8               	btfsc	status,0,c
  2656  000A6C  EF3A  F005         	goto	u3081
  2657  000A70  EF3C  F005         	goto	u3080
  2658  000A74                     u3081:
  2659  000A74  EFFF  F005         	goto	l1255
  2660  000A78                     u3080:
  2661  000A78                     
  2662                           ; BSR set to: 0
  2663  000A78  5193               	movf	(_oldDistRight+1)& (0+255),w,b
  2664  000A7A  E107               	bnz	u3091
  2665  000A7C  0E7D               	movlw	125
  2666  000A7E  5D92               	subwf	_oldDistRight& (0+255),w,b
  2667  000A80  B0D8               	btfsc	status,0,c
  2668  000A82  EF45  F005         	goto	u3091
  2669  000A86  EF47  F005         	goto	u3090
  2670  000A8A                     u3091:
  2671  000A8A  EFFF  F005         	goto	l1255
  2672  000A8E                     u3090:
  2673  000A8E                     
  2674                           ; BSR set to: 0
  2675                           ;main.c: 110:                 delay = 0;
  2676  000A8E  0E00               	movlw	0
  2677  000A90  6E3E               	movwf	_delay^0,c
  2678                           
  2679                           ;main.c: 111:                 curveMode = BeforeCurve;
  2680  000A92  0E01               	movlw	1
  2681  000A94  6E3F               	movwf	_curveMode^0,c
  2682                           
  2683                           ;main.c: 112:                 driveMode = CurveRight;
  2684  000A96  0E06               	movlw	6
  2685  000A98  6E4C               	movwf	_driveMode^0,c
  2686  000A9A  EFFF  F005         	goto	l1255
  2687  000A9E                     l4622:
  2688                           
  2689                           ; BSR set to: 0
  2690                           ;main.c: 117:             if (delay >= (20)) {
  2691  000A9E  0E13               	movlw	19
  2692  000AA0  643E               	cpfsgt	_delay^0,c
  2693  000AA2  EF55  F005         	goto	u3101
  2694  000AA6  EF57  F005         	goto	u3100
  2695  000AAA                     u3101:
  2696  000AAA  EF5D  F005         	goto	l4626
  2697  000AAE                     u3100:
  2698  000AAE                     
  2699                           ; BSR set to: 0
  2700                           ;main.c: 118:                 delay = 0;
  2701  000AAE  0E00               	movlw	0
  2702  000AB0  6E3E               	movwf	_delay^0,c
  2703                           
  2704                           ;main.c: 119:                 curveMode = InCurve;
  2705  000AB2  0E02               	movlw	2
  2706  000AB4  6E3F               	movwf	_curveMode^0,c
  2707                           
  2708                           ;main.c: 120:             } else {
  2709  000AB6  EFFF  F005         	goto	l1255
  2710  000ABA                     l4626:
  2711                           
  2712                           ; BSR set to: 0
  2713                           ;main.c: 121:                 ++delay;
  2714  000ABA  2A3E               	incf	_delay^0,f,c
  2715  000ABC  EFFF  F005         	goto	l1255
  2716  000AC0                     l4628:
  2717                           
  2718                           ; BSR set to: 0
  2719                           ;main.c: 125:             if (delay >= (25)) {
  2720  000AC0  0E18               	movlw	24
  2721  000AC2  643E               	cpfsgt	_delay^0,c
  2722  000AC4  EF66  F005         	goto	u3111
  2723  000AC8  EF68  F005         	goto	u3110
  2724  000ACC                     u3111:
  2725  000ACC  EF5D  F005         	goto	l4626
  2726  000AD0                     u3110:
  2727  000AD0                     
  2728                           ; BSR set to: 0
  2729                           ;main.c: 126:                 if ((driveMode == CurveLeft && distLeft < (45)) || (driveM
      +                          ode == CurveRight && distRight < (45)) || distFront > (150)) {
  2730  000AD0  0E05               	movlw	5
  2731  000AD2  184C               	xorwf	_driveMode^0,w,c
  2732  000AD4  A4D8               	btfss	status,2,c
  2733  000AD6  EF6F  F005         	goto	u3121
  2734  000ADA  EF71  F005         	goto	u3120
  2735  000ADE                     u3121:
  2736  000ADE  EF7C  F005         	goto	l4634
  2737  000AE2                     u3120:
  2738  000AE2                     
  2739                           ; BSR set to: 0
  2740  000AE2  519D               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  2741  000AE4  E109               	bnz	u3130
  2742  000AE6  0E2D               	movlw	45
  2743  000AE8  5D9C               	subwf	_distLeft& (0+255),w,b	;volatile
  2744  000AEA  A0D8               	btfss	status,0,c
  2745  000AEC  EF7A  F005         	goto	u3131
  2746  000AF0  EF7C  F005         	goto	u3130
  2747  000AF4                     u3131:
  2748  000AF4  EF9B  F005         	goto	l4640
  2749  000AF8                     u3130:
  2750  000AF8                     l4634:
  2751                           
  2752                           ; BSR set to: 0
  2753  000AF8  0E06               	movlw	6
  2754  000AFA  184C               	xorwf	_driveMode^0,w,c
  2755  000AFC  A4D8               	btfss	status,2,c
  2756  000AFE  EF83  F005         	goto	u3141
  2757  000B02  EF85  F005         	goto	u3140
  2758  000B06                     u3141:
  2759  000B06  EF90  F005         	goto	l4638
  2760  000B0A                     u3140:
  2761  000B0A                     
  2762                           ; BSR set to: 0
  2763  000B0A  5199               	movf	(_distRight+1)& (0+255),w,b	;volatile
  2764  000B0C  E109               	bnz	u3150
  2765  000B0E  0E2D               	movlw	45
  2766  000B10  5D98               	subwf	_distRight& (0+255),w,b	;volatile
  2767  000B12  A0D8               	btfss	status,0,c
  2768  000B14  EF8E  F005         	goto	u3151
  2769  000B18  EF90  F005         	goto	u3150
  2770  000B1C                     u3151:
  2771  000B1C  EF9B  F005         	goto	l4640
  2772  000B20                     u3150:
  2773  000B20                     l4638:
  2774                           
  2775                           ; BSR set to: 0
  2776  000B20  504B               	movf	(_distFront+1)^0,w,c	;volatile
  2777  000B22  E109               	bnz	u3160
  2778  000B24  0E97               	movlw	151
  2779  000B26  5C4A               	subwf	_distFront^0,w,c	;volatile
  2780  000B28  A0D8               	btfss	status,0,c
  2781  000B2A  EF99  F005         	goto	u3161
  2782  000B2E  EF9B  F005         	goto	u3160
  2783  000B32                     u3161:
  2784  000B32  EFB5  F005         	goto	l4646
  2785  000B36                     u3160:
  2786  000B36                     l4640:
  2787                           
  2788                           ; BSR set to: 0
  2789                           ;main.c: 127:                     if (delay >= 70) {
  2790  000B36  0E45               	movlw	69
  2791  000B38  643E               	cpfsgt	_delay^0,c
  2792  000B3A  EFA1  F005         	goto	u3171
  2793  000B3E  EFA3  F005         	goto	u3170
  2794  000B42                     u3171:
  2795  000B42  EFA9  F005         	goto	l4644
  2796  000B46                     u3170:
  2797  000B46                     
  2798                           ; BSR set to: 0
  2799                           ;main.c: 128:                         middleOffSet = -15;
  2800  000B46  0EFF               	movlw	255
  2801  000B48  6F8F               	movwf	(_middleOffSet+1)& (0+255),b
  2802  000B4A  0EF1               	movlw	241
  2803  000B4C  6F8E               	movwf	_middleOffSet& (0+255),b
  2804                           
  2805                           ;main.c: 129:                     } else {
  2806  000B4E  EFAD  F005         	goto	l1269
  2807  000B52                     l4644:
  2808                           
  2809                           ; BSR set to: 0
  2810                           ;main.c: 130:                         middleOffSet = 15;
  2811  000B52  0E00               	movlw	0
  2812  000B54  6F8F               	movwf	(_middleOffSet+1)& (0+255),b
  2813  000B56  0E0F               	movlw	15
  2814  000B58  6F8E               	movwf	_middleOffSet& (0+255),b
  2815  000B5A                     l1269:
  2816                           
  2817                           ; BSR set to: 0
  2818                           ;main.c: 132:                     delay = 0;
  2819  000B5A  0E00               	movlw	0
  2820  000B5C  6E3E               	movwf	_delay^0,c
  2821                           
  2822                           ;main.c: 133:                     curveMode = AfterCurve;
  2823  000B5E  0E03               	movlw	3
  2824  000B60  6E3F               	movwf	_curveMode^0,c
  2825                           
  2826                           ;main.c: 134:                     driveMode = Straight;
  2827  000B62  0E01               	movlw	1
  2828  000B64  6E4C               	movwf	_driveMode^0,c
  2829                           
  2830                           ;main.c: 135:                 } else if(driveMode == CurveRight && deltaLeft > (30)){
  2831  000B66  EF5D  F005         	goto	l4626
  2832  000B6A                     l4646:
  2833                           
  2834                           ; BSR set to: 0
  2835  000B6A  0E06               	movlw	6
  2836  000B6C  184C               	xorwf	_driveMode^0,w,c
  2837  000B6E  A4D8               	btfss	status,2,c
  2838  000B70  EFBC  F005         	goto	u3181
  2839  000B74  EFBE  F005         	goto	u3180
  2840  000B78                     u3181:
  2841  000B78  EF5D  F005         	goto	l4626
  2842  000B7C                     u3180:
  2843  000B7C                     
  2844                           ; BSR set to: 0
  2845  000B7C  BE19               	btfsc	(getCurve@deltaLeft+1)^0,7,c
  2846  000B7E  EFCA  F005         	goto	u3191
  2847  000B82  5019               	movf	(getCurve@deltaLeft+1)^0,w,c
  2848  000B84  E109               	bnz	u3190
  2849  000B86  0E1F               	movlw	31
  2850  000B88  5C18               	subwf	getCurve@deltaLeft^0,w,c
  2851  000B8A  A0D8               	btfss	status,0,c
  2852  000B8C  EFCA  F005         	goto	u3191
  2853  000B90  EFCC  F005         	goto	u3190
  2854  000B94                     u3191:
  2855  000B94  EF5D  F005         	goto	l4626
  2856  000B98                     u3190:
  2857  000B98                     
  2858                           ; BSR set to: 0
  2859                           ;main.c: 136:                     delay = 0;
  2860  000B98  0E00               	movlw	0
  2861  000B9A  6E3E               	movwf	_delay^0,c
  2862                           
  2863                           ;main.c: 137:                     curveMode = BeforeCurve;
  2864  000B9C  0E01               	movlw	1
  2865  000B9E  6E3F               	movwf	_curveMode^0,c
  2866                           
  2867                           ;main.c: 138:                     driveMode = CurveLeft;
  2868  000BA0  0E05               	movlw	5
  2869  000BA2  6E4C               	movwf	_driveMode^0,c
  2870  000BA4  EF5D  F005         	goto	l4626
  2871  000BA8                     l4654:
  2872                           
  2873                           ; BSR set to: 0
  2874                           ;main.c: 144:             if (delay >= (1)) {
  2875  000BA8  503E               	movf	_delay^0,w,c
  2876  000BAA  B4D8               	btfsc	status,2,c
  2877  000BAC  EFDA  F005         	goto	u3201
  2878  000BB0  EFDC  F005         	goto	u3200
  2879  000BB4                     u3201:
  2880  000BB4  EF5D  F005         	goto	l4626
  2881  000BB8                     u3200:
  2882  000BB8                     
  2883                           ; BSR set to: 0
  2884                           ;main.c: 145:                 delay = 0;
  2885  000BB8  0E00               	movlw	0
  2886  000BBA  6E3E               	movwf	_delay^0,c
  2887                           
  2888                           ;main.c: 146:                 curveMode = OutCurve;
  2889  000BBC  0E00               	movlw	0
  2890  000BBE  6E3F               	movwf	_curveMode^0,c
  2891                           
  2892                           ;main.c: 147:             } else {
  2893  000BC0  EFFF  F005         	goto	l1255
  2894  000BC4                     l4662:
  2895                           
  2896                           ; BSR set to: 0
  2897  000BC4  503F               	movf	_curveMode^0,w,c
  2898  000BC6  6E14               	movwf	??_getCurve^0,c
  2899  000BC8  6A15               	clrf	(??_getCurve+1)^0,c
  2900                           
  2901                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2902                           ; Switch size 1, requested type "simple"
  2903                           ; Number of cases is 1, Range of values is 0 to 0
  2904                           ; switch strategies available:
  2905                           ; Name         Instructions Cycles
  2906                           ; simple_byte            4     3 (average)
  2907                           ;	Chosen strategy is simple_byte
  2908  000BCA  5015               	movf	(??_getCurve+1)^0,w,c
  2909  000BCC  0A00               	xorlw	0	; case 0
  2910  000BCE  B4D8               	btfsc	status,2,c
  2911  000BD0  EFEC  F005         	goto	l5928
  2912  000BD4  EFFF  F005         	goto	l1255
  2913  000BD8                     l5928:
  2914                           
  2915                           ; BSR set to: 0
  2916                           ; Switch size 1, requested type "simple"
  2917                           ; Number of cases is 4, Range of values is 0 to 3
  2918                           ; switch strategies available:
  2919                           ; Name         Instructions Cycles
  2920                           ; simple_byte           13     7 (average)
  2921                           ;	Chosen strategy is simple_byte
  2922  000BD8  5014               	movf	??_getCurve^0,w,c
  2923  000BDA  0A00               	xorlw	0	; case 0
  2924  000BDC  B4D8               	btfsc	status,2,c
  2925  000BDE  EFF1  F004         	goto	l4606
  2926  000BE2  0A01               	xorlw	1	; case 1
  2927  000BE4  B4D8               	btfsc	status,2,c
  2928  000BE6  EF4F  F005         	goto	l4622
  2929  000BEA  0A03               	xorlw	3	; case 2
  2930  000BEC  B4D8               	btfsc	status,2,c
  2931  000BEE  EF60  F005         	goto	l4628
  2932  000BF2  0A01               	xorlw	1	; case 3
  2933  000BF4  B4D8               	btfsc	status,2,c
  2934  000BF6  EFD4  F005         	goto	l4654
  2935  000BFA  EFFF  F005         	goto	l1255
  2936  000BFE                     l1255:
  2937                           
  2938                           ; BSR set to: 0
  2939                           ;main.c: 152:     oldDistLeft = distLeft;
  2940  000BFE  C09C  F03A         	movff	_distLeft,_oldDistLeft	;volatile
  2941  000C02  C09D  F03B         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  2942                           
  2943                           ;main.c: 153:     oldDistRight = distRight;
  2944  000C06  C098  F092         	movff	_distRight,_oldDistRight	;volatile
  2945  000C0A  C099  F093         	movff	_distRight+1,_oldDistRight+1	;volatile
  2946  000C0E                     
  2947                           ; BSR set to: 0
  2948  000C0E  0012               	return		;funcret
  2949  000C10                     __end_of_getCurve:
  2950                           	callstack 0
  2951                           
  2952 ;; *************** function _calcSpeed *****************
  2953 ;; Defined at:
  2954 ;;		line 240 in file "main.c"
  2955 ;; Parameters:    Size  Location     Type
  2956 ;;		None
  2957 ;; Auto vars:     Size  Location     Type
  2958 ;;  speed           2   39[BANK0 ] short 
  2959 ;; Return value:  Size  Location     Type
  2960 ;;                  1    wreg      void 
  2961 ;; Registers used:
  2962 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2963 ;; Tracked objects:
  2964 ;;		On entry : 0/0
  2965 ;;		On exit  : 0/0
  2966 ;;		Unchanged: 0/0
  2967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2969 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2970 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2971 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2972 ;;Total ram usage:        6 bytes
  2973 ;; Hardware stack levels used: 1
  2974 ;; Hardware stack levels required when called: 9
  2975 ;; This function calls:
  2976 ;;		___fladd
  2977 ;;		___flmul
  2978 ;;		___fltol
  2979 ;;		___xxtofl
  2980 ;; This function is called by:
  2981 ;;		_loop
  2982 ;; This function uses a non-reentrant model
  2983 ;;
  2984                           
  2985                           	psect	text10
  2986  000E40                     __ptext10:
  2987                           	callstack 0
  2988  000E40                     _calcSpeed:
  2989                           	callstack 20
  2990  000E40                     
  2991                           ;main.c: 241:     int16_t speed = 0;
  2992  000E40  0E00               	movlw	0
  2993  000E42  0100               	movlb	0	; () banked
  2994  000E44  6FC7               	movwf	(calcSpeed@speed+1)& (0+255),b
  2995  000E46  0E00               	movlw	0
  2996  000E48  6FC6               	movwf	calcSpeed@speed& (0+255),b
  2997                           
  2998                           ;main.c: 243:     switch (driveMode) {
  2999  000E4A  EFD6  F007         	goto	l5682
  3000  000E4E                     l5646:
  3001                           
  3002                           ; BSR set to: 0
  3003                           ;main.c: 245:             if (distFront > (30)) {
  3004  000E4E  504B               	movf	(_distFront+1)^0,w,c	;volatile
  3005  000E50  E109               	bnz	u4450
  3006  000E52  0E1F               	movlw	31
  3007  000E54  5C4A               	subwf	_distFront^0,w,c	;volatile
  3008  000E56  A0D8               	btfss	status,0,c
  3009  000E58  EF30  F007         	goto	u4451
  3010  000E5C  EF32  F007         	goto	u4450
  3011  000E60                     u4451:
  3012  000E60  EF34  F007         	goto	l5650
  3013  000E64                     u4450:
  3014  000E64                     
  3015                           ; BSR set to: 0
  3016                           ;main.c: 246:                 driveMode = Straight;
  3017  000E64  0E01               	movlw	1
  3018  000E66  6E4C               	movwf	_driveMode^0,c
  3019  000E68                     l5650:
  3020                           
  3021                           ; BSR set to: 0
  3022                           ;main.c: 248:             if (setSpeed > (100)) {
  3023  000E68  BF8B               	btfsc	(_setSpeed+1)& (0+255),7,b
  3024  000E6A  EF40  F007         	goto	u4461
  3025  000E6E  518B               	movf	(_setSpeed+1)& (0+255),w,b
  3026  000E70  E109               	bnz	u4460
  3027  000E72  0E65               	movlw	101
  3028  000E74  5D8A               	subwf	_setSpeed& (0+255),w,b
  3029  000E76  A0D8               	btfss	status,0,c
  3030  000E78  EF40  F007         	goto	u4461
  3031  000E7C  EF42  F007         	goto	u4460
  3032  000E80                     u4461:
  3033  000E80  EF5D  F007         	goto	l5660
  3034  000E84                     u4460:
  3035  000E84                     
  3036                           ; BSR set to: 0
  3037                           ;main.c: 249:                     speed = setSpeed;
  3038  000E84  C08A  F0C6         	movff	_setSpeed,calcSpeed@speed
  3039  000E88  C08B  F0C7         	movff	_setSpeed+1,calcSpeed@speed+1
  3040  000E8C                     
  3041                           ; BSR set to: 0
  3042                           ;main.c: 250:                 if (distFront < (15)) {
  3043  000E8C  504B               	movf	(_distFront+1)^0,w,c	;volatile
  3044  000E8E  E107               	bnz	u4471
  3045  000E90  0E0F               	movlw	15
  3046  000E92  5C4A               	subwf	_distFront^0,w,c	;volatile
  3047  000E94  B0D8               	btfsc	status,0,c
  3048  000E96  EF4F  F007         	goto	u4471
  3049  000E9A  EF51  F007         	goto	u4470
  3050  000E9E                     u4471:
  3051  000E9E  EF57  F007         	goto	l5658
  3052  000EA2                     u4470:
  3053  000EA2                     
  3054                           ; BSR set to: 0
  3055                           ;main.c: 251:                     speed -= 4;
  3056  000EA2  0EFC               	movlw	252
  3057  000EA4  27C6               	addwf	calcSpeed@speed& (0+255),f,b
  3058  000EA6  0EFF               	movlw	255
  3059  000EA8  23C7               	addwfc	(calcSpeed@speed+1)& (0+255),f,b
  3060                           
  3061                           ;main.c: 252:                 } else {
  3062  000EAA  EFFF  F007         	goto	l5684
  3063  000EAE                     l5658:
  3064                           
  3065                           ; BSR set to: 0
  3066                           ;main.c: 253:                     speed -= 2;
  3067  000EAE  0EFE               	movlw	254
  3068  000EB0  27C6               	addwf	calcSpeed@speed& (0+255),f,b
  3069  000EB2  0EFF               	movlw	255
  3070  000EB4  23C7               	addwfc	(calcSpeed@speed+1)& (0+255),f,b
  3071  000EB6  EFFF  F007         	goto	l5684
  3072  000EBA                     l5660:
  3073                           
  3074                           ; BSR set to: 0
  3075                           ;main.c: 256:                 speed = (100);
  3076  000EBA  0E00               	movlw	0
  3077  000EBC  6FC7               	movwf	(calcSpeed@speed+1)& (0+255),b
  3078  000EBE  0E64               	movlw	100
  3079  000EC0  6FC6               	movwf	calcSpeed@speed& (0+255),b
  3080  000EC2  EFFF  F007         	goto	l5684
  3081  000EC6                     l5662:
  3082                           
  3083                           ; BSR set to: 0
  3084                           ;main.c: 261:             if (distFront < (30)) {
  3085  000EC6  504B               	movf	(_distFront+1)^0,w,c	;volatile
  3086  000EC8  E107               	bnz	u4481
  3087  000ECA  0E1E               	movlw	30
  3088  000ECC  5C4A               	subwf	_distFront^0,w,c	;volatile
  3089  000ECE  B0D8               	btfsc	status,0,c
  3090  000ED0  EF6C  F007         	goto	u4481
  3091  000ED4  EF6E  F007         	goto	u4480
  3092  000ED8                     u4481:
  3093  000ED8  EF70  F007         	goto	l5666
  3094  000EDC                     u4480:
  3095  000EDC                     
  3096                           ; BSR set to: 0
  3097                           ;main.c: 262:                 driveMode = Brake;
  3098  000EDC  0E02               	movlw	2
  3099  000EDE  6E4C               	movwf	_driveMode^0,c
  3100  000EE0                     l5666:
  3101                           
  3102                           ; BSR set to: 0
  3103                           ;main.c: 265:             if (distFront >= (150)) {
  3104  000EE0  504B               	movf	(_distFront+1)^0,w,c	;volatile
  3105  000EE2  E109               	bnz	u4490
  3106  000EE4  0E96               	movlw	150
  3107  000EE6  5C4A               	subwf	_distFront^0,w,c	;volatile
  3108  000EE8  A0D8               	btfss	status,0,c
  3109  000EEA  EF79  F007         	goto	u4491
  3110  000EEE  EF7B  F007         	goto	u4490
  3111  000EF2                     u4491:
  3112  000EF2  EFC4  F007         	goto	l5670
  3113  000EF6                     u4490:
  3114  000EF6                     
  3115                           ; BSR set to: 0
  3116                           ;main.c: 266:                 speed = (int16_t) ((0.5) * (distFront - (150)) + (275));
  3117  000EF6  0E00               	movlw	0
  3118  000EF8  6FB0               	movwf	___fladd@a& (0+255),b
  3119  000EFA  0E80               	movlw	128
  3120  000EFC  6FB1               	movwf	(___fladd@a+1)& (0+255),b
  3121  000EFE  0E89               	movlw	137
  3122  000F00  6FB2               	movwf	(___fladd@a+2)& (0+255),b
  3123  000F02  0E43               	movlw	67
  3124  000F04  6FB3               	movwf	(___fladd@a+3)& (0+255),b
  3125  000F06  0E00               	movlw	0
  3126  000F08  6E2E               	movwf	___flmul@a^0,c
  3127  000F0A  0E00               	movlw	0
  3128  000F0C  6E2F               	movwf	(___flmul@a+1)^0,c
  3129  000F0E  0E00               	movlw	0
  3130  000F10  6E30               	movwf	(___flmul@a+2)^0,c
  3131  000F12  0E3F               	movlw	63
  3132  000F14  6E31               	movwf	(___flmul@a+3)^0,c
  3133  000F16  0E6A               	movlw	106
  3134  000F18  6FC2               	movwf	??_calcSpeed& (0+255),b
  3135  000F1A  0EFF               	movlw	255
  3136  000F1C  6FC3               	movwf	(??_calcSpeed+1)& (0+255),b
  3137  000F1E  C04A  F0C4         	movff	_distFront,??_calcSpeed+2	;volatile
  3138  000F22  C04B  F0C5         	movff	_distFront+1,??_calcSpeed+3	;volatile
  3139  000F26  51C2               	movf	??_calcSpeed& (0+255),w,b
  3140  000F28  27C4               	addwf	(??_calcSpeed+2)& (0+255),f,b
  3141  000F2A  51C3               	movf	(??_calcSpeed+1)& (0+255),w,b
  3142  000F2C  23C5               	addwfc	(??_calcSpeed+3)& (0+255),f,b
  3143  000F2E  C0C4  F01C         	movff	??_calcSpeed+2,___xxtofl@val
  3144  000F32  C0C5  F01D         	movff	??_calcSpeed+3,___xxtofl@val+1
  3145  000F36  6A1E               	clrf	(___xxtofl@val+2)^0,c
  3146  000F38  6A1F               	clrf	(___xxtofl@val+3)^0,c
  3147  000F3A  0E00               	movlw	0
  3148  000F3C  EC29  F008         	call	___xxtofl
  3149  000F40  C01C  F02A         	movff	?___xxtofl,___flmul@b
  3150  000F44  C01D  F02B         	movff	?___xxtofl+1,___flmul@b+1
  3151  000F48  C01E  F02C         	movff	?___xxtofl+2,___flmul@b+2
  3152  000F4C  C01F  F02D         	movff	?___xxtofl+3,___flmul@b+3
  3153  000F50  ECBA  F002         	call	___flmul	;wreg free
  3154  000F54  C02A  F0AC         	movff	?___flmul,___fladd@b
  3155  000F58  C02B  F0AD         	movff	?___flmul+1,___fladd@b+1
  3156  000F5C  C02C  F0AE         	movff	?___flmul+2,___fladd@b+2
  3157  000F60  C02D  F0AF         	movff	?___flmul+3,___fladd@b+3
  3158  000F64  EC59  F000         	call	___fladd	;wreg free
  3159  000F68  C0AC  F0B8         	movff	?___fladd,___fltol@f1
  3160  000F6C  C0AD  F0B9         	movff	?___fladd+1,___fltol@f1+1
  3161  000F70  C0AE  F0BA         	movff	?___fladd+2,___fltol@f1+2
  3162  000F74  C0AF  F0BB         	movff	?___fladd+3,___fltol@f1+3
  3163  000F78  EC96  F00B         	call	___fltol	;wreg free
  3164  000F7C  C0B8  F0C6         	movff	?___fltol,calcSpeed@speed
  3165  000F80  C0B9  F0C7         	movff	?___fltol+1,calcSpeed@speed+1
  3166                           
  3167                           ;main.c: 267:             } else {
  3168  000F84  EFFF  F007         	goto	l5684
  3169  000F88                     l5670:
  3170                           
  3171                           ; BSR set to: 0
  3172                           ;main.c: 268:                 speed = (275);
  3173  000F88  0E01               	movlw	1
  3174  000F8A  6FC7               	movwf	(calcSpeed@speed+1)& (0+255),b
  3175  000F8C  0E13               	movlw	19
  3176  000F8E  6FC6               	movwf	calcSpeed@speed& (0+255),b
  3177  000F90  EFFF  F007         	goto	l5684
  3178  000F94                     l5672:
  3179                           
  3180                           ; BSR set to: 0
  3181                           ;main.c: 273:             speed = (-125);
  3182  000F94  0EFF               	movlw	255
  3183  000F96  6FC7               	movwf	(calcSpeed@speed+1)& (0+255),b
  3184  000F98  0E83               	movlw	131
  3185  000F9A  6FC6               	movwf	calcSpeed@speed& (0+255),b
  3186                           
  3187                           ;main.c: 274:             break;
  3188  000F9C  EFFF  F007         	goto	l5684
  3189  000FA0                     l5676:
  3190                           
  3191                           ; BSR set to: 0
  3192                           ;main.c: 279:             speed = (200);
  3193  000FA0  0E00               	movlw	0
  3194  000FA2  6FC7               	movwf	(calcSpeed@speed+1)& (0+255),b
  3195  000FA4  0EC8               	movlw	200
  3196  000FA6  6FC6               	movwf	calcSpeed@speed& (0+255),b
  3197                           
  3198                           ;main.c: 280:             break;
  3199  000FA8  EFFF  F007         	goto	l5684
  3200  000FAC                     l5682:
  3201                           
  3202                           ; BSR set to: 0
  3203  000FAC  504C               	movf	_driveMode^0,w,c
  3204  000FAE  6FC2               	movwf	??_calcSpeed& (0+255),b
  3205  000FB0  6BC3               	clrf	(??_calcSpeed+1)& (0+255),b
  3206                           
  3207                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3208                           ; Switch size 1, requested type "simple"
  3209                           ; Number of cases is 1, Range of values is 0 to 0
  3210                           ; switch strategies available:
  3211                           ; Name         Instructions Cycles
  3212                           ; simple_byte            4     3 (average)
  3213                           ;	Chosen strategy is simple_byte
  3214  000FB2  51C3               	movf	(??_calcSpeed+1)& (0+255),w,b
  3215  000FB4  0A00               	xorlw	0	; case 0
  3216  000FB6  B4D8               	btfsc	status,2,c
  3217  000FB8  EFE0  F007         	goto	l5930
  3218  000FBC  EFFF  F007         	goto	l5684
  3219  000FC0                     l5930:
  3220                           
  3221                           ; BSR set to: 0
  3222                           ; Switch size 1, requested type "simple"
  3223                           ; Number of cases is 7, Range of values is 0 to 6
  3224                           ; switch strategies available:
  3225                           ; Name         Instructions Cycles
  3226                           ; simple_byte           22    12 (average)
  3227                           ;	Chosen strategy is simple_byte
  3228  000FC0  51C2               	movf	??_calcSpeed& (0+255),w,b
  3229  000FC2  0A00               	xorlw	0	; case 0
  3230  000FC4  B4D8               	btfsc	status,2,c
  3231  000FC6  EF63  F007         	goto	l5662
  3232  000FCA  0A01               	xorlw	1	; case 1
  3233  000FCC  B4D8               	btfsc	status,2,c
  3234  000FCE  EF63  F007         	goto	l5662
  3235  000FD2  0A03               	xorlw	3	; case 2
  3236  000FD4  B4D8               	btfsc	status,2,c
  3237  000FD6  EF27  F007         	goto	l5646
  3238  000FDA  0A01               	xorlw	1	; case 3
  3239  000FDC  B4D8               	btfsc	status,2,c
  3240  000FDE  EFCA  F007         	goto	l5672
  3241  000FE2  0A07               	xorlw	7	; case 4
  3242  000FE4  B4D8               	btfsc	status,2,c
  3243  000FE6  EFCA  F007         	goto	l5672
  3244  000FEA  0A01               	xorlw	1	; case 5
  3245  000FEC  B4D8               	btfsc	status,2,c
  3246  000FEE  EFD0  F007         	goto	l5676
  3247  000FF2  0A03               	xorlw	3	; case 6
  3248  000FF4  B4D8               	btfsc	status,2,c
  3249  000FF6  EFD0  F007         	goto	l5676
  3250  000FFA  EFFF  F007         	goto	l5684
  3251  000FFE                     l5684:
  3252                           
  3253                           ;main.c: 286:     if (speed > (400)) {
  3254  000FFE  0100               	movlb	0	; () banked
  3255  001000  BFC7               	btfsc	(calcSpeed@speed+1)& (0+255),7,b
  3256  001002  EF0C  F008         	goto	u4501
  3257  001006  0E91               	movlw	145
  3258  001008  5DC6               	subwf	calcSpeed@speed& (0+255),w,b
  3259  00100A  0E01               	movlw	1
  3260  00100C  59C7               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
  3261  00100E  A0D8               	btfss	status,0,c
  3262  001010  EF0C  F008         	goto	u4501
  3263  001014  EF0E  F008         	goto	u4500
  3264  001018                     u4501:
  3265  001018  EF12  F008         	goto	l5688
  3266  00101C                     u4500:
  3267  00101C                     
  3268                           ; BSR set to: 0
  3269                           ;main.c: 287:         speed = (400);
  3270  00101C  0E01               	movlw	1
  3271  00101E  6FC7               	movwf	(calcSpeed@speed+1)& (0+255),b
  3272  001020  0E90               	movlw	144
  3273  001022  6FC6               	movwf	calcSpeed@speed& (0+255),b
  3274  001024                     l5688:
  3275                           
  3276                           ; BSR set to: 0
  3277                           ;main.c: 289:     if (speed < (-250)) {
  3278  001024  AFC7               	btfss	(calcSpeed@speed+1)& (0+255),7,b
  3279  001026  EF1E  F008         	goto	u4511
  3280  00102A  0E06               	movlw	6
  3281  00102C  5DC6               	subwf	calcSpeed@speed& (0+255),w,b
  3282  00102E  0EFF               	movlw	255
  3283  001030  59C7               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
  3284  001032  B0D8               	btfsc	status,0,c
  3285  001034  EF1E  F008         	goto	u4511
  3286  001038  EF20  F008         	goto	u4510
  3287  00103C                     u4511:
  3288  00103C  EF24  F008         	goto	l5692
  3289  001040                     u4510:
  3290  001040                     
  3291                           ; BSR set to: 0
  3292                           ;main.c: 290:         speed = (-250);
  3293  001040  0EFF               	movlw	255
  3294  001042  6FC7               	movwf	(calcSpeed@speed+1)& (0+255),b
  3295  001044  0E06               	movlw	6
  3296  001046  6FC6               	movwf	calcSpeed@speed& (0+255),b
  3297  001048                     l5692:
  3298                           
  3299                           ; BSR set to: 0
  3300                           ;main.c: 292:     setSpeed = speed;
  3301  001048  C0C6  F08A         	movff	calcSpeed@speed,_setSpeed
  3302  00104C  C0C7  F08B         	movff	calcSpeed@speed+1,_setSpeed+1
  3303  001050                     
  3304                           ; BSR set to: 0
  3305  001050  0012               	return		;funcret
  3306  001052                     __end_of_calcSpeed:
  3307                           	callstack 0
  3308                           
  3309 ;; *************** function ___fladd *****************
  3310 ;; Defined at:
  3311 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  3312 ;; Parameters:    Size  Location     Type
  3313 ;;  b               4   13[BANK0 ] void 
  3314 ;;  a               4   17[BANK0 ] void 
  3315 ;; Auto vars:     Size  Location     Type
  3316 ;;  grs             1   24[BANK0 ] unsigned char 
  3317 ;;  bexp            1   23[BANK0 ] unsigned char 
  3318 ;;  aexp            1   22[BANK0 ] unsigned char 
  3319 ;;  signs           1   21[BANK0 ] unsigned char 
  3320 ;; Return value:  Size  Location     Type
  3321 ;;                  4   13[BANK0 ] unsigned char 
  3322 ;; Registers used:
  3323 ;;		wreg, status,2, status,0
  3324 ;; Tracked objects:
  3325 ;;		On entry : 0/0
  3326 ;;		On exit  : 0/0
  3327 ;;		Unchanged: 0/0
  3328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3329 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3330 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3331 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3332 ;;      Totals:         4      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3333 ;;Total ram usage:       16 bytes
  3334 ;; Hardware stack levels used: 1
  3335 ;; Hardware stack levels required when called: 8
  3336 ;; This function calls:
  3337 ;;		Nothing
  3338 ;; This function is called by:
  3339 ;;		_calcSpeed
  3340 ;; This function uses a non-reentrant model
  3341 ;;
  3342                           
  3343                           	psect	text11
  3344  0000B2                     __ptext11:
  3345                           	callstack 0
  3346  0000B2                     ___fladd:
  3347                           	callstack 20
  3348  0000B2  0100               	movlb	0	; () banked
  3349  0000B4  51AF               	movf	(___fladd@b+3)& (0+255),w,b
  3350  0000B6  0B80               	andlw	128
  3351  0000B8  6FB4               	movwf	___fladd@signs& (0+255),b
  3352  0000BA  51AF               	movf	(___fladd@b+3)& (0+255),w,b
  3353  0000BC  25AF               	addwf	(___fladd@b+3)& (0+255),w,b
  3354  0000BE  6FB6               	movwf	___fladd@bexp& (0+255),b
  3355  0000C0                     
  3356                           ; BSR set to: 0
  3357  0000C0  AFAE               	btfss	(___fladd@b+2)& (0+255),7,b
  3358  0000C2  EF65  F000         	goto	u4031
  3359  0000C6  EF67  F000         	goto	u4030
  3360  0000CA                     u4031:
  3361  0000CA  EF68  F000         	goto	l5416
  3362  0000CE                     u4030:
  3363  0000CE                     
  3364                           ; BSR set to: 0
  3365  0000CE  81B6               	bsf	___fladd@bexp& (0+255),0,b
  3366  0000D0                     l5416:
  3367                           
  3368                           ; BSR set to: 0
  3369  0000D0  51B6               	movf	___fladd@bexp& (0+255),w,b
  3370  0000D2  B4D8               	btfsc	status,2,c
  3371  0000D4  EF6E  F000         	goto	u4041
  3372  0000D8  EF70  F000         	goto	u4040
  3373  0000DC                     u4041:
  3374  0000DC  EF85  F000         	goto	l5426
  3375  0000E0                     u4040:
  3376  0000E0                     
  3377                           ; BSR set to: 0
  3378  0000E0  29B6               	incf	___fladd@bexp& (0+255),w,b
  3379  0000E2  A4D8               	btfss	status,2,c
  3380  0000E4  EF76  F000         	goto	u4051
  3381  0000E8  EF78  F000         	goto	u4050
  3382  0000EC                     u4051:
  3383  0000EC  EF80  F000         	goto	l5422
  3384  0000F0                     u4050:
  3385  0000F0                     
  3386                           ; BSR set to: 0
  3387  0000F0  0E00               	movlw	0
  3388  0000F2  6FAC               	movwf	___fladd@b& (0+255),b
  3389  0000F4  0E00               	movlw	0
  3390  0000F6  6FAD               	movwf	(___fladd@b+1)& (0+255),b
  3391  0000F8  0E00               	movlw	0
  3392  0000FA  6FAE               	movwf	(___fladd@b+2)& (0+255),b
  3393  0000FC  0E00               	movlw	0
  3394  0000FE  6FAF               	movwf	(___fladd@b+3)& (0+255),b
  3395  000100                     l5422:
  3396                           
  3397                           ; BSR set to: 0
  3398  000100  8FAE               	bsf	(___fladd@b+2)& (0+255),7,b
  3399  000102                     
  3400                           ; BSR set to: 0
  3401  000102  0E00               	movlw	0
  3402  000104  6FAF               	movwf	(___fladd@b+3)& (0+255),b
  3403  000106  EF8D  F000         	goto	l5428
  3404  00010A                     l5426:
  3405                           
  3406                           ; BSR set to: 0
  3407  00010A  0E00               	movlw	0
  3408  00010C  6FAC               	movwf	___fladd@b& (0+255),b
  3409  00010E  0E00               	movlw	0
  3410  000110  6FAD               	movwf	(___fladd@b+1)& (0+255),b
  3411  000112  0E00               	movlw	0
  3412  000114  6FAE               	movwf	(___fladd@b+2)& (0+255),b
  3413  000116  0E00               	movlw	0
  3414  000118  6FAF               	movwf	(___fladd@b+3)& (0+255),b
  3415  00011A                     l5428:
  3416                           
  3417                           ; BSR set to: 0
  3418  00011A  51B3               	movf	(___fladd@a+3)& (0+255),w,b
  3419  00011C  0B80               	andlw	128
  3420  00011E  6FB5               	movwf	___fladd@aexp& (0+255),b
  3421  000120                     
  3422                           ; BSR set to: 0
  3423  000120  51B4               	movf	___fladd@signs& (0+255),w,b
  3424  000122  19B5               	xorwf	___fladd@aexp& (0+255),w,b
  3425  000124  B4D8               	btfsc	status,2,c
  3426  000126  EF97  F000         	goto	u4061
  3427  00012A  EF99  F000         	goto	u4060
  3428  00012E                     u4061:
  3429  00012E  EF9A  F000         	goto	l5434
  3430  000132                     u4060:
  3431  000132                     
  3432                           ; BSR set to: 0
  3433  000132  8DB4               	bsf	___fladd@signs& (0+255),6,b
  3434  000134                     l5434:
  3435                           
  3436                           ; BSR set to: 0
  3437  000134  51B3               	movf	(___fladd@a+3)& (0+255),w,b
  3438  000136  25B3               	addwf	(___fladd@a+3)& (0+255),w,b
  3439  000138  6FB5               	movwf	___fladd@aexp& (0+255),b
  3440  00013A                     
  3441                           ; BSR set to: 0
  3442  00013A  AFB2               	btfss	(___fladd@a+2)& (0+255),7,b
  3443  00013C  EFA2  F000         	goto	u4071
  3444  000140  EFA4  F000         	goto	u4070
  3445  000144                     u4071:
  3446  000144  EFA5  F000         	goto	l5440
  3447  000148                     u4070:
  3448  000148                     
  3449                           ; BSR set to: 0
  3450  000148  81B5               	bsf	___fladd@aexp& (0+255),0,b
  3451  00014A                     l5440:
  3452                           
  3453                           ; BSR set to: 0
  3454  00014A  51B5               	movf	___fladd@aexp& (0+255),w,b
  3455  00014C  B4D8               	btfsc	status,2,c
  3456  00014E  EFAB  F000         	goto	u4081
  3457  000152  EFAD  F000         	goto	u4080
  3458  000156                     u4081:
  3459  000156  EFC2  F000         	goto	l5450
  3460  00015A                     u4080:
  3461  00015A                     
  3462                           ; BSR set to: 0
  3463  00015A  29B5               	incf	___fladd@aexp& (0+255),w,b
  3464  00015C  A4D8               	btfss	status,2,c
  3465  00015E  EFB3  F000         	goto	u4091
  3466  000162  EFB5  F000         	goto	u4090
  3467  000166                     u4091:
  3468  000166  EFBD  F000         	goto	l5446
  3469  00016A                     u4090:
  3470  00016A                     
  3471                           ; BSR set to: 0
  3472  00016A  0E00               	movlw	0
  3473  00016C  6FB0               	movwf	___fladd@a& (0+255),b
  3474  00016E  0E00               	movlw	0
  3475  000170  6FB1               	movwf	(___fladd@a+1)& (0+255),b
  3476  000172  0E00               	movlw	0
  3477  000174  6FB2               	movwf	(___fladd@a+2)& (0+255),b
  3478  000176  0E00               	movlw	0
  3479  000178  6FB3               	movwf	(___fladd@a+3)& (0+255),b
  3480  00017A                     l5446:
  3481                           
  3482                           ; BSR set to: 0
  3483  00017A  8FB2               	bsf	(___fladd@a+2)& (0+255),7,b
  3484  00017C                     
  3485                           ; BSR set to: 0
  3486  00017C  0E00               	movlw	0
  3487  00017E  6FB3               	movwf	(___fladd@a+3)& (0+255),b
  3488  000180  EFCA  F000         	goto	l5452
  3489  000184                     l5450:
  3490                           
  3491                           ; BSR set to: 0
  3492  000184  0E00               	movlw	0
  3493  000186  6FB0               	movwf	___fladd@a& (0+255),b
  3494  000188  0E00               	movlw	0
  3495  00018A  6FB1               	movwf	(___fladd@a+1)& (0+255),b
  3496  00018C  0E00               	movlw	0
  3497  00018E  6FB2               	movwf	(___fladd@a+2)& (0+255),b
  3498  000190  0E00               	movlw	0
  3499  000192  6FB3               	movwf	(___fladd@a+3)& (0+255),b
  3500  000194                     l5452:
  3501                           
  3502                           ; BSR set to: 0
  3503  000194  51B6               	movf	___fladd@bexp& (0+255),w,b
  3504  000196  5DB5               	subwf	___fladd@aexp& (0+255),w,b
  3505  000198  B0D8               	btfsc	status,0,c
  3506  00019A  EFD1  F000         	goto	u4101
  3507  00019E  EFD3  F000         	goto	u4100
  3508  0001A2                     u4101:
  3509  0001A2  EFFA  F000         	goto	l5488
  3510  0001A6                     u4100:
  3511  0001A6                     
  3512                           ; BSR set to: 0
  3513  0001A6  ADB4               	btfss	___fladd@signs& (0+255),6,b
  3514  0001A8  EFD8  F000         	goto	u4111
  3515  0001AC  EFDA  F000         	goto	u4110
  3516  0001B0                     u4111:
  3517  0001B0  EFDC  F000         	goto	l5458
  3518  0001B4                     u4110:
  3519  0001B4                     
  3520                           ; BSR set to: 0
  3521  0001B4  0E80               	movlw	128
  3522  0001B6  1BB4               	xorwf	___fladd@signs& (0+255),f,b
  3523  0001B8                     l5458:
  3524                           
  3525                           ; BSR set to: 0
  3526  0001B8  C0B6  F0B7         	movff	___fladd@bexp,___fladd@grs
  3527  0001BC                     
  3528                           ; BSR set to: 0
  3529  0001BC  C0B5  F0B6         	movff	___fladd@aexp,___fladd@bexp
  3530  0001C0                     
  3531                           ; BSR set to: 0
  3532  0001C0  C0B7  F0B5         	movff	___fladd@grs,___fladd@aexp
  3533  0001C4                     
  3534                           ; BSR set to: 0
  3535  0001C4  C0AC  F0B7         	movff	___fladd@b,___fladd@grs
  3536  0001C8                     
  3537                           ; BSR set to: 0
  3538  0001C8  C0B0  F0AC         	movff	___fladd@a,___fladd@b
  3539  0001CC                     
  3540                           ; BSR set to: 0
  3541  0001CC  C0B7  F0B0         	movff	___fladd@grs,___fladd@a
  3542  0001D0                     
  3543                           ; BSR set to: 0
  3544  0001D0  C0AD  F0B7         	movff	___fladd@b+1,___fladd@grs
  3545  0001D4                     
  3546                           ; BSR set to: 0
  3547  0001D4  C0B1  F0AD         	movff	___fladd@a+1,___fladd@b+1
  3548  0001D8                     
  3549                           ; BSR set to: 0
  3550  0001D8  C0B7  F0B1         	movff	___fladd@grs,___fladd@a+1
  3551  0001DC                     
  3552                           ; BSR set to: 0
  3553  0001DC  C0AE  F0B7         	movff	___fladd@b+2,___fladd@grs
  3554  0001E0                     
  3555                           ; BSR set to: 0
  3556  0001E0  C0B2  F0AE         	movff	___fladd@a+2,___fladd@b+2
  3557  0001E4                     
  3558                           ; BSR set to: 0
  3559  0001E4  C0B7  F0B2         	movff	___fladd@grs,___fladd@a+2
  3560  0001E8                     
  3561                           ; BSR set to: 0
  3562  0001E8  C0AF  F0B7         	movff	___fladd@b+3,___fladd@grs
  3563  0001EC                     
  3564                           ; BSR set to: 0
  3565  0001EC  C0B3  F0AF         	movff	___fladd@a+3,___fladd@b+3
  3566  0001F0                     
  3567                           ; BSR set to: 0
  3568  0001F0  C0B7  F0B3         	movff	___fladd@grs,___fladd@a+3
  3569  0001F4                     l5488:
  3570                           
  3571                           ; BSR set to: 0
  3572  0001F4  0E00               	movlw	0
  3573  0001F6  6FB7               	movwf	___fladd@grs& (0+255),b
  3574  0001F8                     
  3575                           ; BSR set to: 0
  3576  0001F8  51B6               	movf	___fladd@bexp& (0+255),w,b
  3577  0001FA  C0B5  F036         	movff	___fladd@aexp,??___fladd
  3578  0001FE  6A37               	clrf	(??___fladd+1)^0,c
  3579  000200  5E36               	subwf	??___fladd^0,f,c
  3580  000202  0E00               	movlw	0
  3581  000204  5A37               	subwfb	(??___fladd+1)^0,f,c
  3582  000206  BE37               	btfsc	(??___fladd+1)^0,7,c
  3583  000208  EF0F  F001         	goto	u4121
  3584  00020C  5037               	movf	(??___fladd+1)^0,w,c
  3585  00020E  E109               	bnz	u4120
  3586  000210  0E1A               	movlw	26
  3587  000212  5C36               	subwf	??___fladd^0,w,c
  3588  000214  A0D8               	btfss	status,0,c
  3589  000216  EF0F  F001         	goto	u4121
  3590  00021A  EF11  F001         	goto	u4120
  3591  00021E                     u4121:
  3592  00021E  EF48  F001         	goto	l1906
  3593  000222                     u4120:
  3594  000222                     
  3595                           ; BSR set to: 0
  3596  000222  51AC               	movf	___fladd@b& (0+255),w,b
  3597  000224  11AD               	iorwf	(___fladd@b+1)& (0+255),w,b
  3598  000226  11AE               	iorwf	(___fladd@b+2)& (0+255),w,b
  3599  000228  11AF               	iorwf	(___fladd@b+3)& (0+255),w,b
  3600  00022A  A4D8               	btfss	status,2,c
  3601  00022C  EF1A  F001         	goto	u4131
  3602  000230  EF1D  F001         	goto	u4130
  3603  000234                     u4131:
  3604  000234  0E01               	movlw	1
  3605  000236  EF1E  F001         	goto	u4140
  3606  00023A                     u4130:
  3607  00023A  0E00               	movlw	0
  3608  00023C                     u4140:
  3609  00023C  6FB7               	movwf	___fladd@grs& (0+255),b
  3610  00023E                     
  3611                           ; BSR set to: 0
  3612  00023E  0E00               	movlw	0
  3613  000240  6FAC               	movwf	___fladd@b& (0+255),b
  3614  000242  0E00               	movlw	0
  3615  000244  6FAD               	movwf	(___fladd@b+1)& (0+255),b
  3616  000246  0E00               	movlw	0
  3617  000248  6FAE               	movwf	(___fladd@b+2)& (0+255),b
  3618  00024A  0E00               	movlw	0
  3619  00024C  6FAF               	movwf	(___fladd@b+3)& (0+255),b
  3620  00024E                     
  3621                           ; BSR set to: 0
  3622  00024E  C0B5  F0B6         	movff	___fladd@aexp,___fladd@bexp
  3623  000252  EF51  F001         	goto	l1905
  3624  000256                     l1907:
  3625                           
  3626                           ; BSR set to: 0
  3627  000256  A1B7               	btfss	___fladd@grs& (0+255),0,b
  3628  000258  EF30  F001         	goto	u4151
  3629  00025C  EF32  F001         	goto	u4150
  3630  000260                     u4151:
  3631  000260  EF38  F001         	goto	l5500
  3632  000264                     u4150:
  3633  000264                     
  3634                           ; BSR set to: 0
  3635  000264  90D8               	bcf	status,0,c
  3636  000266  31B7               	rrcf	___fladd@grs& (0+255),w,b
  3637  000268  0901               	iorlw	1
  3638  00026A  6FB7               	movwf	___fladd@grs& (0+255),b
  3639  00026C  EF3A  F001         	goto	l5502
  3640  000270                     l5500:
  3641                           
  3642                           ; BSR set to: 0
  3643  000270  90D8               	bcf	status,0,c
  3644  000272  33B7               	rrcf	___fladd@grs& (0+255),f,b
  3645  000274                     l5502:
  3646                           
  3647                           ; BSR set to: 0
  3648  000274  A1AC               	btfss	___fladd@b& (0+255),0,b
  3649  000276  EF3F  F001         	goto	u4161
  3650  00027A  EF41  F001         	goto	u4160
  3651  00027E                     u4161:
  3652  00027E  EF42  F001         	goto	l5506
  3653  000282                     u4160:
  3654  000282                     
  3655                           ; BSR set to: 0
  3656  000282  8FB7               	bsf	___fladd@grs& (0+255),7,b
  3657  000284                     l5506:
  3658                           
  3659                           ; BSR set to: 0
  3660  000284  35AF               	rlcf	(___fladd@b+3)& (0+255),w,b
  3661  000286  33AF               	rrcf	(___fladd@b+3)& (0+255),f,b
  3662  000288  33AE               	rrcf	(___fladd@b+2)& (0+255),f,b
  3663  00028A  33AD               	rrcf	(___fladd@b+1)& (0+255),f,b
  3664  00028C  33AC               	rrcf	___fladd@b& (0+255),f,b
  3665  00028E                     
  3666                           ; BSR set to: 0
  3667  00028E  2BB6               	incf	___fladd@bexp& (0+255),f,b
  3668  000290                     l1906:
  3669                           
  3670                           ; BSR set to: 0
  3671  000290  51B5               	movf	___fladd@aexp& (0+255),w,b
  3672  000292  5DB6               	subwf	___fladd@bexp& (0+255),w,b
  3673  000294  A0D8               	btfss	status,0,c
  3674  000296  EF4F  F001         	goto	u4171
  3675  00029A  EF51  F001         	goto	u4170
  3676  00029E                     u4171:
  3677  00029E  EF2B  F001         	goto	l1907
  3678  0002A2                     u4170:
  3679  0002A2                     l1905:
  3680                           
  3681                           ; BSR set to: 0
  3682  0002A2  BDB4               	btfsc	___fladd@signs& (0+255),6,b
  3683  0002A4  EF56  F001         	goto	u4181
  3684  0002A8  EF58  F001         	goto	u4180
  3685  0002AC                     u4181:
  3686  0002AC  EF98  F001         	goto	l5534
  3687  0002B0                     u4180:
  3688  0002B0                     
  3689                           ; BSR set to: 0
  3690  0002B0  51B6               	movf	___fladd@bexp& (0+255),w,b
  3691  0002B2  A4D8               	btfss	status,2,c
  3692  0002B4  EF5E  F001         	goto	u4191
  3693  0002B8  EF60  F001         	goto	u4190
  3694  0002BC                     u4191:
  3695  0002BC  EF6A  F001         	goto	l5516
  3696  0002C0                     u4190:
  3697  0002C0                     
  3698                           ; BSR set to: 0
  3699  0002C0  0E00               	movlw	0
  3700  0002C2  6FAC               	movwf	?___fladd& (0+255),b
  3701  0002C4  0E00               	movlw	0
  3702  0002C6  6FAD               	movwf	(?___fladd+1)& (0+255),b
  3703  0002C8  0E00               	movlw	0
  3704  0002CA  6FAE               	movwf	(?___fladd+2)& (0+255),b
  3705  0002CC  0E00               	movlw	0
  3706  0002CE  6FAF               	movwf	(?___fladd+3)& (0+255),b
  3707  0002D0  EFB9  F002         	goto	l1914
  3708  0002D4                     l5516:
  3709                           
  3710                           ; BSR set to: 0
  3711  0002D4  51B0               	movf	___fladd@a& (0+255),w,b
  3712  0002D6  27AC               	addwf	___fladd@b& (0+255),f,b
  3713  0002D8  51B1               	movf	(___fladd@a+1)& (0+255),w,b
  3714  0002DA  23AD               	addwfc	(___fladd@b+1)& (0+255),f,b
  3715  0002DC  51B2               	movf	(___fladd@a+2)& (0+255),w,b
  3716  0002DE  23AE               	addwfc	(___fladd@b+2)& (0+255),f,b
  3717  0002E0  51B3               	movf	(___fladd@a+3)& (0+255),w,b
  3718  0002E2  23AF               	addwfc	(___fladd@b+3)& (0+255),f,b
  3719  0002E4                     
  3720                           ; BSR set to: 0
  3721  0002E4  A1AF               	btfss	(___fladd@b+3)& (0+255),0,b
  3722  0002E6  EF77  F001         	goto	u4201
  3723  0002EA  EF79  F001         	goto	u4200
  3724  0002EE                     u4201:
  3725  0002EE  EF25  F002         	goto	l5570
  3726  0002F2                     u4200:
  3727  0002F2                     
  3728                           ; BSR set to: 0
  3729  0002F2  A1B7               	btfss	___fladd@grs& (0+255),0,b
  3730  0002F4  EF7E  F001         	goto	u4211
  3731  0002F8  EF80  F001         	goto	u4210
  3732  0002FC                     u4211:
  3733  0002FC  EF86  F001         	goto	l5524
  3734  000300                     u4210:
  3735  000300                     
  3736                           ; BSR set to: 0
  3737  000300  90D8               	bcf	status,0,c
  3738  000302  31B7               	rrcf	___fladd@grs& (0+255),w,b
  3739  000304  0901               	iorlw	1
  3740  000306  6FB7               	movwf	___fladd@grs& (0+255),b
  3741  000308  EF88  F001         	goto	l5526
  3742  00030C                     l5524:
  3743                           
  3744                           ; BSR set to: 0
  3745  00030C  90D8               	bcf	status,0,c
  3746  00030E  33B7               	rrcf	___fladd@grs& (0+255),f,b
  3747  000310                     l5526:
  3748                           
  3749                           ; BSR set to: 0
  3750  000310  A1AC               	btfss	___fladd@b& (0+255),0,b
  3751  000312  EF8D  F001         	goto	u4221
  3752  000316  EF8F  F001         	goto	u4220
  3753  00031A                     u4221:
  3754  00031A  EF90  F001         	goto	l5530
  3755  00031E                     u4220:
  3756  00031E                     
  3757                           ; BSR set to: 0
  3758  00031E  8FB7               	bsf	___fladd@grs& (0+255),7,b
  3759  000320                     l5530:
  3760                           
  3761                           ; BSR set to: 0
  3762  000320  35AF               	rlcf	(___fladd@b+3)& (0+255),w,b
  3763  000322  33AF               	rrcf	(___fladd@b+3)& (0+255),f,b
  3764  000324  33AE               	rrcf	(___fladd@b+2)& (0+255),f,b
  3765  000326  33AD               	rrcf	(___fladd@b+1)& (0+255),f,b
  3766  000328  33AC               	rrcf	___fladd@b& (0+255),f,b
  3767  00032A                     
  3768                           ; BSR set to: 0
  3769  00032A  2BB6               	incf	___fladd@bexp& (0+255),f,b
  3770  00032C  EF25  F002         	goto	l5570
  3771  000330                     l5534:
  3772                           
  3773                           ; BSR set to: 0
  3774  000330  51B0               	movf	___fladd@a& (0+255),w,b
  3775  000332  5DAC               	subwf	___fladd@b& (0+255),w,b
  3776  000334  51B1               	movf	(___fladd@a+1)& (0+255),w,b
  3777  000336  59AD               	subwfb	(___fladd@b+1)& (0+255),w,b
  3778  000338  51B2               	movf	(___fladd@a+2)& (0+255),w,b
  3779  00033A  59AE               	subwfb	(___fladd@b+2)& (0+255),w,b
  3780  00033C  51AF               	movf	(___fladd@b+3)& (0+255),w,b
  3781  00033E  0A80               	xorlw	128
  3782  000340  6E36               	movwf	??___fladd^0,c
  3783  000342  51B3               	movf	(___fladd@a+3)& (0+255),w,b
  3784  000344  0A80               	xorlw	128
  3785  000346  5836               	subwfb	??___fladd^0,w,c
  3786  000348  B0D8               	btfsc	status,0,c
  3787  00034A  EFA9  F001         	goto	u4231
  3788  00034E  EFAB  F001         	goto	u4230
  3789  000352                     u4231:
  3790  000352  EFD6  F001         	goto	l5544
  3791  000356                     u4230:
  3792  000356                     
  3793                           ; BSR set to: 0
  3794  000356  51AC               	movf	___fladd@b& (0+255),w,b
  3795  000358  5DB0               	subwf	___fladd@a& (0+255),w,b
  3796  00035A  6E36               	movwf	??___fladd^0,c
  3797  00035C  51AD               	movf	(___fladd@b+1)& (0+255),w,b
  3798  00035E  59B1               	subwfb	(___fladd@a+1)& (0+255),w,b
  3799  000360  6E37               	movwf	(??___fladd+1)^0,c
  3800  000362  51AE               	movf	(___fladd@b+2)& (0+255),w,b
  3801  000364  59B2               	subwfb	(___fladd@a+2)& (0+255),w,b
  3802  000366  6E38               	movwf	(??___fladd+2)^0,c
  3803  000368  51AF               	movf	(___fladd@b+3)& (0+255),w,b
  3804  00036A  59B3               	subwfb	(___fladd@a+3)& (0+255),w,b
  3805  00036C  6E39               	movwf	(??___fladd+3)^0,c
  3806  00036E  0EFF               	movlw	255
  3807  000370  2436               	addwf	??___fladd^0,w,c
  3808  000372  6FAC               	movwf	___fladd@b& (0+255),b
  3809  000374  0EFF               	movlw	255
  3810  000376  2037               	addwfc	(??___fladd+1)^0,w,c
  3811  000378  6FAD               	movwf	(___fladd@b+1)& (0+255),b
  3812  00037A  0EFF               	movlw	255
  3813  00037C  2038               	addwfc	(??___fladd+2)^0,w,c
  3814  00037E  6FAE               	movwf	(___fladd@b+2)& (0+255),b
  3815  000380  0EFF               	movlw	255
  3816  000382  2039               	addwfc	(??___fladd+3)^0,w,c
  3817  000384  6FAF               	movwf	(___fladd@b+3)& (0+255),b
  3818  000386  0E80               	movlw	128
  3819  000388  1BB4               	xorwf	___fladd@signs& (0+255),f,b
  3820  00038A                     
  3821                           ; BSR set to: 0
  3822  00038A  6DB7               	negf	___fladd@grs& (0+255),b
  3823  00038C                     
  3824                           ; BSR set to: 0
  3825  00038C  51B7               	movf	___fladd@grs& (0+255),w,b
  3826  00038E  A4D8               	btfss	status,2,c
  3827  000390  EFCC  F001         	goto	u4241
  3828  000394  EFCE  F001         	goto	u4240
  3829  000398                     u4241:
  3830  000398  EFDE  F001         	goto	l1922
  3831  00039C                     u4240:
  3832  00039C                     
  3833                           ; BSR set to: 0
  3834  00039C  0E01               	movlw	1
  3835  00039E  27AC               	addwf	___fladd@b& (0+255),f,b
  3836  0003A0  0E00               	movlw	0
  3837  0003A2  23AD               	addwfc	(___fladd@b+1)& (0+255),f,b
  3838  0003A4  23AE               	addwfc	(___fladd@b+2)& (0+255),f,b
  3839  0003A6  23AF               	addwfc	(___fladd@b+3)& (0+255),f,b
  3840  0003A8  EFDE  F001         	goto	l1922
  3841  0003AC                     l5544:
  3842                           
  3843                           ; BSR set to: 0
  3844  0003AC  51B0               	movf	___fladd@a& (0+255),w,b
  3845  0003AE  5FAC               	subwf	___fladd@b& (0+255),f,b
  3846  0003B0  51B1               	movf	(___fladd@a+1)& (0+255),w,b
  3847  0003B2  5BAD               	subwfb	(___fladd@b+1)& (0+255),f,b
  3848  0003B4  51B2               	movf	(___fladd@a+2)& (0+255),w,b
  3849  0003B6  5BAE               	subwfb	(___fladd@b+2)& (0+255),f,b
  3850  0003B8  51B3               	movf	(___fladd@a+3)& (0+255),w,b
  3851  0003BA  5BAF               	subwfb	(___fladd@b+3)& (0+255),f,b
  3852  0003BC                     l1922:
  3853                           
  3854                           ; BSR set to: 0
  3855  0003BC  51AC               	movf	___fladd@b& (0+255),w,b
  3856  0003BE  11AD               	iorwf	(___fladd@b+1)& (0+255),w,b
  3857  0003C0  11AE               	iorwf	(___fladd@b+2)& (0+255),w,b
  3858  0003C2  11AF               	iorwf	(___fladd@b+3)& (0+255),w,b
  3859  0003C4  A4D8               	btfss	status,2,c
  3860  0003C6  EFE7  F001         	goto	u4251
  3861  0003CA  EFE9  F001         	goto	u4250
  3862  0003CE                     u4251:
  3863  0003CE  EF1E  F002         	goto	l5568
  3864  0003D2                     u4250:
  3865  0003D2                     
  3866                           ; BSR set to: 0
  3867  0003D2  51B7               	movf	___fladd@grs& (0+255),w,b
  3868  0003D4  A4D8               	btfss	status,2,c
  3869  0003D6  EFEF  F001         	goto	u4261
  3870  0003DA  EFF1  F001         	goto	u4260
  3871  0003DE                     u4261:
  3872  0003DE  EF1E  F002         	goto	l5568
  3873  0003E2                     u4260:
  3874  0003E2                     
  3875                           ; BSR set to: 0
  3876  0003E2  0E00               	movlw	0
  3877  0003E4  6FAC               	movwf	?___fladd& (0+255),b
  3878  0003E6  0E00               	movlw	0
  3879  0003E8  6FAD               	movwf	(?___fladd+1)& (0+255),b
  3880  0003EA  0E00               	movlw	0
  3881  0003EC  6FAE               	movwf	(?___fladd+2)& (0+255),b
  3882  0003EE  0E00               	movlw	0
  3883  0003F0  6FAF               	movwf	(?___fladd+3)& (0+255),b
  3884  0003F2  EFB9  F002         	goto	l1914
  3885  0003F6                     l5552:
  3886                           
  3887                           ; BSR set to: 0
  3888  0003F6  90D8               	bcf	status,0,c
  3889  0003F8  37AC               	rlcf	___fladd@b& (0+255),f,b
  3890  0003FA  37AD               	rlcf	(___fladd@b+1)& (0+255),f,b
  3891  0003FC  37AE               	rlcf	(___fladd@b+2)& (0+255),f,b
  3892  0003FE  37AF               	rlcf	(___fladd@b+3)& (0+255),f,b
  3893  000400                     
  3894                           ; BSR set to: 0
  3895  000400  AFB7               	btfss	___fladd@grs& (0+255),7,b
  3896  000402  EF05  F002         	goto	u4271
  3897  000406  EF07  F002         	goto	u4270
  3898  00040A                     u4271:
  3899  00040A  EF08  F002         	goto	l5558
  3900  00040E                     u4270:
  3901  00040E                     
  3902                           ; BSR set to: 0
  3903  00040E  81AC               	bsf	___fladd@b& (0+255),0,b
  3904  000410                     l5558:
  3905                           
  3906                           ; BSR set to: 0
  3907  000410  A1B7               	btfss	___fladd@grs& (0+255),0,b
  3908  000412  EF0D  F002         	goto	u4281
  3909  000416  EF0F  F002         	goto	u4280
  3910  00041A                     u4281:
  3911  00041A  EF13  F002         	goto	l5562
  3912  00041E                     u4280:
  3913  00041E                     
  3914                           ; BSR set to: 0
  3915  00041E  80D8               	bsf	status,0,c
  3916  000420  37B7               	rlcf	___fladd@grs& (0+255),f,b
  3917  000422  EF15  F002         	goto	l5564
  3918  000426                     l5562:
  3919                           
  3920                           ; BSR set to: 0
  3921  000426  90D8               	bcf	status,0,c
  3922  000428  37B7               	rlcf	___fladd@grs& (0+255),f,b
  3923  00042A                     l5564:
  3924                           
  3925                           ; BSR set to: 0
  3926  00042A  51B6               	movf	___fladd@bexp& (0+255),w,b
  3927  00042C  B4D8               	btfsc	status,2,c
  3928  00042E  EF1B  F002         	goto	u4291
  3929  000432  EF1D  F002         	goto	u4290
  3930  000436                     u4291:
  3931  000436  EF1E  F002         	goto	l5568
  3932  00043A                     u4290:
  3933  00043A                     
  3934                           ; BSR set to: 0
  3935  00043A  07B6               	decf	___fladd@bexp& (0+255),f,b
  3936  00043C                     l5568:
  3937                           
  3938                           ; BSR set to: 0
  3939  00043C  AFAE               	btfss	(___fladd@b+2)& (0+255),7,b
  3940  00043E  EF23  F002         	goto	u4301
  3941  000442  EF25  F002         	goto	u4300
  3942  000446                     u4301:
  3943  000446  EFFB  F001         	goto	l5552
  3944  00044A                     u4300:
  3945  00044A                     l5570:
  3946                           
  3947                           ; BSR set to: 0
  3948  00044A  0E00               	movlw	0
  3949  00044C  6FB5               	movwf	___fladd@aexp& (0+255),b
  3950  00044E                     
  3951                           ; BSR set to: 0
  3952  00044E  AFB7               	btfss	___fladd@grs& (0+255),7,b
  3953  000450  EF2C  F002         	goto	u4311
  3954  000454  EF2E  F002         	goto	u4310
  3955  000458                     u4311:
  3956  000458  EF46  F002         	goto	l1931
  3957  00045C                     u4310:
  3958  00045C                     
  3959                           ; BSR set to: 0
  3960  00045C  C0B7  F036         	movff	___fladd@grs,??___fladd
  3961  000460  0E7F               	movlw	127
  3962  000462  1636               	andwf	??___fladd^0,f,c
  3963  000464  B4D8               	btfsc	status,2,c
  3964  000466  EF37  F002         	goto	u4321
  3965  00046A  EF39  F002         	goto	u4320
  3966  00046E                     u4321:
  3967  00046E  EF3D  F002         	goto	l1932
  3968  000472                     u4320:
  3969  000472                     l5576:
  3970                           
  3971                           ; BSR set to: 0
  3972  000472  0E01               	movlw	1
  3973  000474  6FB5               	movwf	___fladd@aexp& (0+255),b
  3974  000476  EF46  F002         	goto	l1931
  3975  00047A                     l1932:
  3976                           
  3977                           ; BSR set to: 0
  3978  00047A  A1AC               	btfss	___fladd@b& (0+255),0,b
  3979  00047C  EF42  F002         	goto	u4331
  3980  000480  EF44  F002         	goto	u4330
  3981  000484                     u4331:
  3982  000484  EF46  F002         	goto	l1931
  3983  000488                     u4330:
  3984  000488  EF39  F002         	goto	l5576
  3985  00048C                     l1931:
  3986                           
  3987                           ; BSR set to: 0
  3988  00048C  51B5               	movf	___fladd@aexp& (0+255),w,b
  3989  00048E  B4D8               	btfsc	status,2,c
  3990  000490  EF4C  F002         	goto	u4341
  3991  000494  EF4E  F002         	goto	u4340
  3992  000498                     u4341:
  3993  000498  EF79  F002         	goto	l5588
  3994  00049C                     u4340:
  3995  00049C                     
  3996                           ; BSR set to: 0
  3997  00049C  0E01               	movlw	1
  3998  00049E  27AC               	addwf	___fladd@b& (0+255),f,b
  3999  0004A0  0E00               	movlw	0
  4000  0004A2  23AD               	addwfc	(___fladd@b+1)& (0+255),f,b
  4001  0004A4  23AE               	addwfc	(___fladd@b+2)& (0+255),f,b
  4002  0004A6  23AF               	addwfc	(___fladd@b+3)& (0+255),f,b
  4003  0004A8                     
  4004                           ; BSR set to: 0
  4005  0004A8  A1AF               	btfss	(___fladd@b+3)& (0+255),0,b
  4006  0004AA  EF59  F002         	goto	u4351
  4007  0004AE  EF5B  F002         	goto	u4350
  4008  0004B2                     u4351:
  4009  0004B2  EF79  F002         	goto	l5588
  4010  0004B6                     u4350:
  4011  0004B6                     
  4012                           ; BSR set to: 0
  4013  0004B6  C0AC  F036         	movff	___fladd@b,??___fladd
  4014  0004BA  C0AD  F037         	movff	___fladd@b+1,??___fladd+1
  4015  0004BE  C0AE  F038         	movff	___fladd@b+2,??___fladd+2
  4016  0004C2  C0AF  F039         	movff	___fladd@b+3,??___fladd+3
  4017  0004C6  3439               	rlcf	(??___fladd+3)^0,w,c
  4018  0004C8  3239               	rrcf	(??___fladd+3)^0,f,c
  4019  0004CA  3238               	rrcf	(??___fladd+2)^0,f,c
  4020  0004CC  3237               	rrcf	(??___fladd+1)^0,f,c
  4021  0004CE  3236               	rrcf	??___fladd^0,f,c
  4022  0004D0  C036  F0AC         	movff	??___fladd,___fladd@b
  4023  0004D4  C037  F0AD         	movff	??___fladd+1,___fladd@b+1
  4024  0004D8  C038  F0AE         	movff	??___fladd+2,___fladd@b+2
  4025  0004DC  C039  F0AF         	movff	??___fladd+3,___fladd@b+3
  4026  0004E0  29B6               	incf	___fladd@bexp& (0+255),w,b
  4027  0004E2  B4D8               	btfsc	status,2,c
  4028  0004E4  EF76  F002         	goto	u4361
  4029  0004E8  EF78  F002         	goto	u4360
  4030  0004EC                     u4361:
  4031  0004EC  EF79  F002         	goto	l5588
  4032  0004F0                     u4360:
  4033  0004F0                     
  4034                           ; BSR set to: 0
  4035  0004F0  2BB6               	incf	___fladd@bexp& (0+255),f,b
  4036  0004F2                     l5588:
  4037                           
  4038                           ; BSR set to: 0
  4039  0004F2  29B6               	incf	___fladd@bexp& (0+255),w,b
  4040  0004F4  B4D8               	btfsc	status,2,c
  4041  0004F6  EF7F  F002         	goto	u4371
  4042  0004FA  EF81  F002         	goto	u4370
  4043  0004FE                     u4371:
  4044  0004FE  EF89  F002         	goto	l5592
  4045  000502                     u4370:
  4046  000502                     
  4047                           ; BSR set to: 0
  4048  000502  51B6               	movf	___fladd@bexp& (0+255),w,b
  4049  000504  A4D8               	btfss	status,2,c
  4050  000506  EF87  F002         	goto	u4381
  4051  00050A  EF89  F002         	goto	u4380
  4052  00050E                     u4381:
  4053  00050E  EF9B  F002         	goto	l5596
  4054  000512                     u4380:
  4055  000512                     l5592:
  4056                           
  4057                           ; BSR set to: 0
  4058  000512  0E00               	movlw	0
  4059  000514  6FAC               	movwf	___fladd@b& (0+255),b
  4060  000516  0E00               	movlw	0
  4061  000518  6FAD               	movwf	(___fladd@b+1)& (0+255),b
  4062  00051A  0E00               	movlw	0
  4063  00051C  6FAE               	movwf	(___fladd@b+2)& (0+255),b
  4064  00051E  0E00               	movlw	0
  4065  000520  6FAF               	movwf	(___fladd@b+3)& (0+255),b
  4066  000522  51B6               	movf	___fladd@bexp& (0+255),w,b
  4067  000524  A4D8               	btfss	status,2,c
  4068  000526  EF97  F002         	goto	u4391
  4069  00052A  EF99  F002         	goto	u4390
  4070  00052E                     u4391:
  4071  00052E  EF9B  F002         	goto	l5596
  4072  000532                     u4390:
  4073  000532                     
  4074                           ; BSR set to: 0
  4075  000532  0E00               	movlw	0
  4076  000534  6FB4               	movwf	___fladd@signs& (0+255),b
  4077  000536                     l5596:
  4078                           
  4079                           ; BSR set to: 0
  4080  000536  A1B6               	btfss	___fladd@bexp& (0+255),0,b
  4081  000538  EFA0  F002         	goto	u4401
  4082  00053C  EFA2  F002         	goto	u4400
  4083  000540                     u4401:
  4084  000540  EFA5  F002         	goto	l5600
  4085  000544                     u4400:
  4086  000544                     
  4087                           ; BSR set to: 0
  4088  000544  8FAE               	bsf	(___fladd@b+2)& (0+255),7,b
  4089  000546  EFA6  F002         	goto	l5602
  4090  00054A                     l5600:
  4091                           
  4092                           ; BSR set to: 0
  4093  00054A  9FAE               	bcf	(___fladd@b+2)& (0+255),7,b
  4094  00054C                     l5602:
  4095                           
  4096                           ; BSR set to: 0
  4097  00054C  90D8               	bcf	status,0,c
  4098  00054E  31B6               	rrcf	___fladd@bexp& (0+255),w,b
  4099  000550  6FAF               	movwf	(___fladd@b+3)& (0+255),b
  4100  000552                     
  4101                           ; BSR set to: 0
  4102  000552  AFB4               	btfss	___fladd@signs& (0+255),7,b
  4103  000554  EFAE  F002         	goto	u4411
  4104  000558  EFB0  F002         	goto	u4410
  4105  00055C                     u4411:
  4106  00055C  EFB1  F002         	goto	l5608
  4107  000560                     u4410:
  4108  000560                     
  4109                           ; BSR set to: 0
  4110  000560  8FAF               	bsf	(___fladd@b+3)& (0+255),7,b
  4111  000562                     l5608:
  4112                           
  4113                           ; BSR set to: 0
  4114  000562  C0AC  F0AC         	movff	___fladd@b,?___fladd
  4115  000566  C0AD  F0AD         	movff	___fladd@b+1,?___fladd+1
  4116  00056A  C0AE  F0AE         	movff	___fladd@b+2,?___fladd+2
  4117  00056E  C0AF  F0AF         	movff	___fladd@b+3,?___fladd+3
  4118  000572                     l1914:
  4119                           
  4120                           ; BSR set to: 0
  4121  000572  0012               	return		;funcret
  4122  000574                     __end_of___fladd:
  4123                           	callstack 0
  4124                           
  4125 ;; *************** function _calcMotorPow *****************
  4126 ;; Defined at:
  4127 ;;		line 295 in file "main.c"
  4128 ;; Parameters:    Size  Location     Type
  4129 ;;		None
  4130 ;; Auto vars:     Size  Location     Type
  4131 ;;  oldSpeedDelt    2   39[BANK0 ] short 
  4132 ;;  setSpeedDelt    2   37[BANK0 ] short 
  4133 ;;  addMPow         1   41[BANK0 ] char 
  4134 ;; Return value:  Size  Location     Type
  4135 ;;                  1    wreg      void 
  4136 ;; Registers used:
  4137 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4138 ;; Tracked objects:
  4139 ;;		On entry : 0/0
  4140 ;;		On exit  : 0/0
  4141 ;;		Unchanged: 0/0
  4142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4144 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4145 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4146 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4147 ;;Total ram usage:        7 bytes
  4148 ;; Hardware stack levels used: 1
  4149 ;; Hardware stack levels required when called: 10
  4150 ;; This function calls:
  4151 ;;		___awdiv
  4152 ;;		___flmul
  4153 ;;		___fltol
  4154 ;;		___xxtofl
  4155 ;;		_actSpeed
  4156 ;;		_setMotor
  4157 ;; This function is called by:
  4158 ;;		_loop
  4159 ;; This function uses a non-reentrant model
  4160 ;;
  4161                           
  4162                           	psect	text12
  4163  0013AA                     __ptext12:
  4164                           	callstack 0
  4165  0013AA                     _calcMotorPow:
  4166                           	callstack 19
  4167  0013AA                     
  4168                           ;main.c: 296:     currentSpeed = actSpeed();
  4169  0013AA  EC5F  F00F         	call	_actSpeed	;wreg free
  4170  0013AE  C022  F088         	movff	?_actSpeed,_currentSpeed
  4171  0013B2  C023  F089         	movff	?_actSpeed+1,_currentSpeed+1
  4172  0013B6                     
  4173                           ;main.c: 298:     int16_t setSpeedDelta = setSpeed - currentSpeed;
  4174  0013B6  0100               	movlb	0	; () banked
  4175  0013B8  5188               	movf	_currentSpeed& (0+255),w,b
  4176  0013BA  5D8A               	subwf	_setSpeed& (0+255),w,b
  4177  0013BC  6FC4               	movwf	calcMotorPow@setSpeedDelta& (0+255),b
  4178  0013BE  5189               	movf	(_currentSpeed+1)& (0+255),w,b
  4179  0013C0  598B               	subwfb	(_setSpeed+1)& (0+255),w,b
  4180  0013C2  6FC5               	movwf	(calcMotorPow@setSpeedDelta+1)& (0+255),b
  4181  0013C4                     
  4182                           ; BSR set to: 0
  4183                           ;main.c: 299:     int16_t oldSpeedDelta = currentSpeed - oldSpeed;
  4184  0013C4  5186               	movf	_oldSpeed& (0+255),w,b
  4185  0013C6  5D88               	subwf	_currentSpeed& (0+255),w,b
  4186  0013C8  6FC6               	movwf	calcMotorPow@oldSpeedDelta& (0+255),b
  4187  0013CA  5187               	movf	(_oldSpeed+1)& (0+255),w,b
  4188  0013CC  5989               	subwfb	(_currentSpeed+1)& (0+255),w,b
  4189  0013CE  6FC7               	movwf	(calcMotorPow@oldSpeedDelta+1)& (0+255),b
  4190  0013D0                     
  4191                           ; BSR set to: 0
  4192                           ;main.c: 302:     addMPow = (int8_t) ((0.020) * (setSpeedDelta - (oldSpeedDelta / (2))))
      +                          ;
  4193  0013D0  0E0A               	movlw	10
  4194  0013D2  6E2E               	movwf	___flmul@a^0,c
  4195  0013D4  0ED7               	movlw	215
  4196  0013D6  6E2F               	movwf	(___flmul@a+1)^0,c
  4197  0013D8  0EA3               	movlw	163
  4198  0013DA  6E30               	movwf	(___flmul@a+2)^0,c
  4199  0013DC  0E3C               	movlw	60
  4200  0013DE  6E31               	movwf	(___flmul@a+3)^0,c
  4201  0013E0  0E00               	movlw	0
  4202  0013E2  6E17               	movwf	(___awdiv@divisor+1)^0,c
  4203  0013E4  0E02               	movlw	2
  4204  0013E6  6E16               	movwf	___awdiv@divisor^0,c
  4205  0013E8  C0C6  F014         	movff	calcMotorPow@oldSpeedDelta,___awdiv@dividend
  4206  0013EC  C0C7  F015         	movff	calcMotorPow@oldSpeedDelta+1,___awdiv@dividend+1
  4207  0013F0  EC53  F00E         	call	___awdiv	;wreg free
  4208  0013F4  C0C4  F0C2         	movff	calcMotorPow@setSpeedDelta,??_calcMotorPow
  4209  0013F8  C0C5  F0C3         	movff	calcMotorPow@setSpeedDelta+1,??_calcMotorPow+1
  4210  0013FC  5014               	movf	?___awdiv^0,w,c
  4211  0013FE  0100               	movlb	0	; () banked
  4212  001400  5FC2               	subwf	??_calcMotorPow& (0+255),f,b
  4213  001402  5015               	movf	(?___awdiv+1)^0,w,c
  4214  001404  5BC3               	subwfb	(??_calcMotorPow+1)& (0+255),f,b
  4215  001406  C0C2  F01C         	movff	??_calcMotorPow,___xxtofl@val
  4216  00140A  C0C3  F01D         	movff	??_calcMotorPow+1,___xxtofl@val+1
  4217  00140E  0E00               	movlw	0
  4218  001410  BE1D               	btfsc	(___xxtofl@val+1)^0,7,c
  4219  001412  0EFF               	movlw	-1
  4220  001414  6E1E               	movwf	(___xxtofl@val+2)^0,c
  4221  001416  6E1F               	movwf	(___xxtofl@val+3)^0,c
  4222  001418  0E01               	movlw	1
  4223  00141A  EC29  F008         	call	___xxtofl
  4224  00141E  C01C  F02A         	movff	?___xxtofl,___flmul@b
  4225  001422  C01D  F02B         	movff	?___xxtofl+1,___flmul@b+1
  4226  001426  C01E  F02C         	movff	?___xxtofl+2,___flmul@b+2
  4227  00142A  C01F  F02D         	movff	?___xxtofl+3,___flmul@b+3
  4228  00142E  ECBA  F002         	call	___flmul	;wreg free
  4229  001432  C02A  F0B8         	movff	?___flmul,___fltol@f1
  4230  001436  C02B  F0B9         	movff	?___flmul+1,___fltol@f1+1
  4231  00143A  C02C  F0BA         	movff	?___flmul+2,___fltol@f1+2
  4232  00143E  C02D  F0BB         	movff	?___flmul+3,___fltol@f1+3
  4233  001442  EC96  F00B         	call	___fltol	;wreg free
  4234  001446  0100               	movlb	0	; () banked
  4235  001448  51B8               	movf	?___fltol& (0+255),w,b
  4236  00144A  6FC8               	movwf	calcMotorPow@addMPow& (0+255),b
  4237  00144C                     
  4238                           ; BSR set to: 0
  4239                           ;main.c: 304:     if (addMPow > (5)) {
  4240  00144C  51C8               	movf	calcMotorPow@addMPow& (0+255),w,b
  4241  00144E  0A80               	xorlw	128
  4242  001450  0F7A               	addlw	-134
  4243  001452  A0D8               	btfss	status,0,c
  4244  001454  EF2E  F00A         	goto	u4521
  4245  001458  EF30  F00A         	goto	u4520
  4246  00145C                     u4521:
  4247  00145C  EF34  F00A         	goto	l5714
  4248  001460                     u4520:
  4249  001460                     
  4250                           ; BSR set to: 0
  4251                           ;main.c: 305:         addMPow = (5);
  4252  001460  0E05               	movlw	5
  4253  001462  6FC8               	movwf	calcMotorPow@addMPow& (0+255),b
  4254                           
  4255                           ;main.c: 306:     } else if (addMPow < -(5)) {
  4256  001464  EF40  F00A         	goto	l5718
  4257  001468                     l5714:
  4258                           
  4259                           ; BSR set to: 0
  4260  001468  51C8               	movf	calcMotorPow@addMPow& (0+255),w,b
  4261  00146A  0A80               	xorlw	128
  4262  00146C  0F85               	addlw	133
  4263  00146E  B0D8               	btfsc	status,0,c
  4264  001470  EF3C  F00A         	goto	u4531
  4265  001474  EF3E  F00A         	goto	u4530
  4266  001478                     u4531:
  4267  001478  EF40  F00A         	goto	l5718
  4268  00147C                     u4530:
  4269  00147C                     
  4270                           ; BSR set to: 0
  4271                           ;main.c: 307:         addMPow = -(5);
  4272  00147C  0EFB               	movlw	251
  4273  00147E  6FC8               	movwf	calcMotorPow@addMPow& (0+255),b
  4274  001480                     l5718:
  4275                           
  4276                           ; BSR set to: 0
  4277                           ;main.c: 310:     actMotorPow += addMPow;
  4278  001480  51C8               	movf	calcMotorPow@addMPow& (0+255),w,b
  4279  001482  2784               	addwf	_actMotorPow& (0+255),f,b
  4280  001484  0E00               	movlw	0
  4281  001486  BFC8               	btfsc	calcMotorPow@addMPow& (0+255),7,b
  4282  001488  0EFF               	movlw	255
  4283  00148A  2385               	addwfc	(_actMotorPow+1)& (0+255),f,b
  4284  00148C                     
  4285                           ; BSR set to: 0
  4286                           ;main.c: 312:     if (actMotorPow > (700)) {
  4287  00148C  BF85               	btfsc	(_actMotorPow+1)& (0+255),7,b
  4288  00148E  EF52  F00A         	goto	u4541
  4289  001492  0EBD               	movlw	189
  4290  001494  5D84               	subwf	_actMotorPow& (0+255),w,b
  4291  001496  0E02               	movlw	2
  4292  001498  5985               	subwfb	(_actMotorPow+1)& (0+255),w,b
  4293  00149A  A0D8               	btfss	status,0,c
  4294  00149C  EF52  F00A         	goto	u4541
  4295  0014A0  EF54  F00A         	goto	u4540
  4296  0014A4                     u4541:
  4297  0014A4  EF5A  F00A         	goto	l5724
  4298  0014A8                     u4540:
  4299  0014A8                     
  4300                           ; BSR set to: 0
  4301                           ;main.c: 313:         actMotorPow = (700);
  4302  0014A8  0E02               	movlw	2
  4303  0014AA  6F85               	movwf	(_actMotorPow+1)& (0+255),b
  4304  0014AC  0EBC               	movlw	188
  4305  0014AE  6F84               	movwf	_actMotorPow& (0+255),b
  4306                           
  4307                           ;main.c: 314:     } else if (actMotorPow < (-400)) {
  4308  0014B0  EF6C  F00A         	goto	l5728
  4309  0014B4                     l5724:
  4310                           
  4311                           ; BSR set to: 0
  4312  0014B4  AF85               	btfss	(_actMotorPow+1)& (0+255),7,b
  4313  0014B6  EF66  F00A         	goto	u4551
  4314  0014BA  0E70               	movlw	112
  4315  0014BC  5D84               	subwf	_actMotorPow& (0+255),w,b
  4316  0014BE  0EFE               	movlw	254
  4317  0014C0  5985               	subwfb	(_actMotorPow+1)& (0+255),w,b
  4318  0014C2  B0D8               	btfsc	status,0,c
  4319  0014C4  EF66  F00A         	goto	u4551
  4320  0014C8  EF68  F00A         	goto	u4550
  4321  0014CC                     u4551:
  4322  0014CC  EF6C  F00A         	goto	l5728
  4323  0014D0                     u4550:
  4324  0014D0                     
  4325                           ; BSR set to: 0
  4326                           ;main.c: 315:         actMotorPow = (-400);
  4327  0014D0  0EFE               	movlw	254
  4328  0014D2  6F85               	movwf	(_actMotorPow+1)& (0+255),b
  4329  0014D4  0E70               	movlw	112
  4330  0014D6  6F84               	movwf	_actMotorPow& (0+255),b
  4331  0014D8                     l5728:
  4332                           
  4333                           ; BSR set to: 0
  4334                           ;main.c: 318:     setMotor(actMotorPow);
  4335  0014D8  C084  F018         	movff	_actMotorPow,setMotor@motorPower
  4336  0014DC  C085  F019         	movff	_actMotorPow+1,setMotor@motorPower+1
  4337  0014E0  EC1A  F00D         	call	_setMotor	;wreg free
  4338  0014E4                     
  4339                           ;main.c: 320:     oldSpeed = currentSpeed;
  4340  0014E4  C088  F086         	movff	_currentSpeed,_oldSpeed
  4341  0014E8  C089  F087         	movff	_currentSpeed+1,_oldSpeed+1
  4342  0014EC  0012               	return		;funcret
  4343  0014EE                     __end_of_calcMotorPow:
  4344                           	callstack 0
  4345                           
  4346 ;; *************** function _setMotor *****************
  4347 ;; Defined at:
  4348 ;;		line 323 in file "main.c"
  4349 ;; Parameters:    Size  Location     Type
  4350 ;;  motorPower      2   23[COMRAM] short 
  4351 ;; Auto vars:     Size  Location     Type
  4352 ;;		None
  4353 ;; Return value:  Size  Location     Type
  4354 ;;                  1    wreg      void 
  4355 ;; Registers used:
  4356 ;;		wreg, status,2, status,0, cstack
  4357 ;; Tracked objects:
  4358 ;;		On entry : 0/0
  4359 ;;		On exit  : 0/0
  4360 ;;		Unchanged: 0/0
  4361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4362 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4364 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4365 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4366 ;;Total ram usage:        4 bytes
  4367 ;; Hardware stack levels used: 1
  4368 ;; Hardware stack levels required when called: 9
  4369 ;; This function calls:
  4370 ;;		_PWM7_LoadDutyValue
  4371 ;;		_PWM8_LoadDutyValue
  4372 ;; This function is called by:
  4373 ;;		_loop
  4374 ;;		_startAccell
  4375 ;;		_calcMotorPow
  4376 ;; This function uses a non-reentrant model
  4377 ;;
  4378                           
  4379                           	psect	text13
  4380  001A34                     __ptext13:
  4381                           	callstack 0
  4382  001A34                     _setMotor:
  4383                           	callstack 19
  4384  001A34                     
  4385                           ;main.c: 324:     if (motorPower >= (40)) {
  4386  001A34  BE19               	btfsc	(setMotor@motorPower+1)^0,7,c
  4387  001A36  EF26  F00D         	goto	u2471
  4388  001A3A  5019               	movf	(setMotor@motorPower+1)^0,w,c
  4389  001A3C  E109               	bnz	u2470
  4390  001A3E  0E28               	movlw	40
  4391  001A40  5C18               	subwf	setMotor@motorPower^0,w,c
  4392  001A42  A0D8               	btfss	status,0,c
  4393  001A44  EF26  F00D         	goto	u2471
  4394  001A48  EF28  F00D         	goto	u2470
  4395  001A4C                     u2471:
  4396  001A4C  EF48  F00D         	goto	l4162
  4397  001A50                     u2470:
  4398  001A50                     
  4399                           ;main.c: 325:         if (motorPower > (700)) {
  4400  001A50  BE19               	btfsc	(setMotor@motorPower+1)^0,7,c
  4401  001A52  EF34  F00D         	goto	u2481
  4402  001A56  0EBD               	movlw	189
  4403  001A58  5C18               	subwf	setMotor@motorPower^0,w,c
  4404  001A5A  0E02               	movlw	2
  4405  001A5C  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
  4406  001A5E  A0D8               	btfss	status,0,c
  4407  001A60  EF34  F00D         	goto	u2481
  4408  001A64  EF36  F00D         	goto	u2480
  4409  001A68                     u2481:
  4410  001A68  EF3A  F00D         	goto	l4158
  4411  001A6C                     u2480:
  4412  001A6C                     
  4413                           ;main.c: 326:             motorPower = (700);
  4414  001A6C  0E02               	movlw	2
  4415  001A6E  6E19               	movwf	(setMotor@motorPower+1)^0,c
  4416  001A70  0EBC               	movlw	188
  4417  001A72  6E18               	movwf	setMotor@motorPower^0,c
  4418  001A74                     l4158:
  4419                           
  4420                           ;main.c: 328:         PWM7_LoadDutyValue((uint16_t) (motorPower));
  4421  001A74  C018  F014         	movff	setMotor@motorPower,PWM7_LoadDutyValue@dutyValue
  4422  001A78  C019  F015         	movff	setMotor@motorPower+1,PWM7_LoadDutyValue@dutyValue+1
  4423  001A7C  ECD5  F011         	call	_PWM7_LoadDutyValue	;wreg free
  4424  001A80                     
  4425                           ;main.c: 329:         PWM8_LoadDutyValue(0);
  4426  001A80  0E00               	movlw	0
  4427  001A82  6E15               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
  4428  001A84  0E00               	movlw	0
  4429  001A86  6E14               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
  4430  001A88  ECBB  F011         	call	_PWM8_LoadDutyValue	;wreg free
  4431                           
  4432                           ;main.c: 330:     } else if (motorPower <= -(40)) {
  4433  001A8C  EF8A  F00D         	goto	l1357
  4434  001A90                     l4162:
  4435  001A90  AE19               	btfss	(setMotor@motorPower+1)^0,7,c
  4436  001A92  EF54  F00D         	goto	u2491
  4437  001A96  0ED9               	movlw	217
  4438  001A98  5C18               	subwf	setMotor@motorPower^0,w,c
  4439  001A9A  0EFF               	movlw	255
  4440  001A9C  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
  4441  001A9E  B0D8               	btfsc	status,0,c
  4442  001AA0  EF54  F00D         	goto	u2491
  4443  001AA4  EF56  F00D         	goto	u2490
  4444  001AA8                     u2491:
  4445  001AA8  EF7E  F00D         	goto	l4172
  4446  001AAC                     u2490:
  4447  001AAC                     
  4448                           ;main.c: 331:         if (motorPower < (-400)) {
  4449  001AAC  AE19               	btfss	(setMotor@motorPower+1)^0,7,c
  4450  001AAE  EF62  F00D         	goto	u2501
  4451  001AB2  0E70               	movlw	112
  4452  001AB4  5C18               	subwf	setMotor@motorPower^0,w,c
  4453  001AB6  0EFE               	movlw	254
  4454  001AB8  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
  4455  001ABA  B0D8               	btfsc	status,0,c
  4456  001ABC  EF62  F00D         	goto	u2501
  4457  001AC0  EF64  F00D         	goto	u2500
  4458  001AC4                     u2501:
  4459  001AC4  EF68  F00D         	goto	l4168
  4460  001AC8                     u2500:
  4461  001AC8                     
  4462                           ;main.c: 332:             motorPower = (-400);
  4463  001AC8  0EFE               	movlw	254
  4464  001ACA  6E19               	movwf	(setMotor@motorPower+1)^0,c
  4465  001ACC  0E70               	movlw	112
  4466  001ACE  6E18               	movwf	setMotor@motorPower^0,c
  4467  001AD0                     l4168:
  4468                           
  4469                           ;main.c: 334:         PWM7_LoadDutyValue(0);
  4470  001AD0  0E00               	movlw	0
  4471  001AD2  6E15               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
  4472  001AD4  0E00               	movlw	0
  4473  001AD6  6E14               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
  4474  001AD8  ECD5  F011         	call	_PWM7_LoadDutyValue	;wreg free
  4475  001ADC                     
  4476                           ;main.c: 335:         PWM8_LoadDutyValue((uint16_t) (-motorPower));
  4477  001ADC  C018  F01A         	movff	setMotor@motorPower,??_setMotor
  4478  001AE0  C019  F01B         	movff	setMotor@motorPower+1,??_setMotor+1
  4479  001AE4  1E1A               	comf	??_setMotor^0,f,c
  4480  001AE6  1E1B               	comf	(??_setMotor+1)^0,f,c
  4481  001AE8  4A1A               	infsnz	??_setMotor^0,f,c
  4482  001AEA  2A1B               	incf	(??_setMotor+1)^0,f,c
  4483  001AEC  C01A  F014         	movff	??_setMotor,PWM8_LoadDutyValue@dutyValue
  4484  001AF0  C01B  F015         	movff	??_setMotor+1,PWM8_LoadDutyValue@dutyValue+1
  4485  001AF4  ECBB  F011         	call	_PWM8_LoadDutyValue	;wreg free
  4486                           
  4487                           ;main.c: 336:     } else {
  4488  001AF8  EF8A  F00D         	goto	l1357
  4489  001AFC                     l4172:
  4490                           
  4491                           ;main.c: 337:         PWM7_LoadDutyValue(0);
  4492  001AFC  0E00               	movlw	0
  4493  001AFE  6E15               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
  4494  001B00  0E00               	movlw	0
  4495  001B02  6E14               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
  4496  001B04  ECD5  F011         	call	_PWM7_LoadDutyValue	;wreg free
  4497                           
  4498                           ;main.c: 338:         PWM8_LoadDutyValue(0);
  4499  001B08  0E00               	movlw	0
  4500  001B0A  6E15               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
  4501  001B0C  0E00               	movlw	0
  4502  001B0E  6E14               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
  4503  001B10  ECBB  F011         	call	_PWM8_LoadDutyValue	;wreg free
  4504  001B14                     l1357:
  4505  001B14  0012               	return		;funcret
  4506  001B16                     __end_of_setMotor:
  4507                           	callstack 0
  4508                           
  4509 ;; *************** function _PWM8_LoadDutyValue *****************
  4510 ;; Defined at:
  4511 ;;		line 74 in file "mcc_generated_files/pwm8.c"
  4512 ;; Parameters:    Size  Location     Type
  4513 ;;  dutyValue       2   19[COMRAM] unsigned short 
  4514 ;; Auto vars:     Size  Location     Type
  4515 ;;		None
  4516 ;; Return value:  Size  Location     Type
  4517 ;;                  1    wreg      void 
  4518 ;; Registers used:
  4519 ;;		wreg, status,2, status,0
  4520 ;; Tracked objects:
  4521 ;;		On entry : 0/0
  4522 ;;		On exit  : 0/0
  4523 ;;		Unchanged: 0/0
  4524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4525 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4527 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4528 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4529 ;;Total ram usage:        4 bytes
  4530 ;; Hardware stack levels used: 1
  4531 ;; Hardware stack levels required when called: 8
  4532 ;; This function calls:
  4533 ;;		Nothing
  4534 ;; This function is called by:
  4535 ;;		_setMotor
  4536 ;; This function uses a non-reentrant model
  4537 ;;
  4538                           
  4539                           	psect	text14
  4540  002376                     __ptext14:
  4541                           	callstack 0
  4542  002376                     _PWM8_LoadDutyValue:
  4543                           	callstack 19
  4544  002376                     
  4545                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  4546  002376  C014  F016         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
  4547  00237A  C015  F017         	movff	PWM8_LoadDutyValue@dutyValue+1,??_PWM8_LoadDutyValue+1
  4548  00237E  90D8               	bcf	status,0,c
  4549  002380  3217               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
  4550  002382  3216               	rrcf	??_PWM8_LoadDutyValue^0,f,c
  4551  002384  90D8               	bcf	status,0,c
  4552  002386  3217               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
  4553  002388  3216               	rrcf	??_PWM8_LoadDutyValue^0,f,c
  4554  00238A  5016               	movf	??_PWM8_LoadDutyValue^0,w,c
  4555  00238C  6E61               	movwf	97,c	;volatile
  4556                           
  4557                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
  4558  00238E  C014  F016         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
  4559  002392  0E03               	movlw	3
  4560  002394  1616               	andwf	??_PWM8_LoadDutyValue^0,f,c
  4561  002396  0E06               	movlw	6
  4562  002398  6E17               	movwf	(??_PWM8_LoadDutyValue+1)^0,c
  4563  00239A                     u1985:
  4564  00239A  90D8               	bcf	status,0,c
  4565  00239C  3616               	rlcf	??_PWM8_LoadDutyValue^0,f,c
  4566  00239E  2E17               	decfsz	(??_PWM8_LoadDutyValue+1)^0,f,c
  4567  0023A0  EFCD  F011         	goto	u1985
  4568  0023A4  5016               	movf	??_PWM8_LoadDutyValue^0,w,c
  4569  0023A6  6E60               	movwf	96,c	;volatile
  4570  0023A8  0012               	return		;funcret
  4571  0023AA                     __end_of_PWM8_LoadDutyValue:
  4572                           	callstack 0
  4573                           
  4574 ;; *************** function _PWM7_LoadDutyValue *****************
  4575 ;; Defined at:
  4576 ;;		line 74 in file "mcc_generated_files/pwm7.c"
  4577 ;; Parameters:    Size  Location     Type
  4578 ;;  dutyValue       2   19[COMRAM] unsigned short 
  4579 ;; Auto vars:     Size  Location     Type
  4580 ;;		None
  4581 ;; Return value:  Size  Location     Type
  4582 ;;                  1    wreg      void 
  4583 ;; Registers used:
  4584 ;;		wreg, status,2, status,0
  4585 ;; Tracked objects:
  4586 ;;		On entry : 0/0
  4587 ;;		On exit  : 0/0
  4588 ;;		Unchanged: 0/0
  4589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4590 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4592 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4593 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4594 ;;Total ram usage:        4 bytes
  4595 ;; Hardware stack levels used: 1
  4596 ;; Hardware stack levels required when called: 8
  4597 ;; This function calls:
  4598 ;;		Nothing
  4599 ;; This function is called by:
  4600 ;;		_setMotor
  4601 ;; This function uses a non-reentrant model
  4602 ;;
  4603                           
  4604                           	psect	text15
  4605  0023AA                     __ptext15:
  4606                           	callstack 0
  4607  0023AA                     _PWM7_LoadDutyValue:
  4608                           	callstack 19
  4609  0023AA                     
  4610                           ;mcc_generated_files/pwm7.c: 74:  void PWM7_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm7.c: 75:  {;mcc_generated_files/pwm7.c: 77:      PWM7DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  4611  0023AA  C014  F016         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
  4612  0023AE  C015  F017         	movff	PWM7_LoadDutyValue@dutyValue+1,??_PWM7_LoadDutyValue+1
  4613  0023B2  90D8               	bcf	status,0,c
  4614  0023B4  3217               	rrcf	(??_PWM7_LoadDutyValue+1)^0,f,c
  4615  0023B6  3216               	rrcf	??_PWM7_LoadDutyValue^0,f,c
  4616  0023B8  90D8               	bcf	status,0,c
  4617  0023BA  3217               	rrcf	(??_PWM7_LoadDutyValue+1)^0,f,c
  4618  0023BC  3216               	rrcf	??_PWM7_LoadDutyValue^0,f,c
  4619  0023BE  5016               	movf	??_PWM7_LoadDutyValue^0,w,c
  4620  0023C0  6E65               	movwf	101,c	;volatile
  4621                           
  4622                           ;mcc_generated_files/pwm7.c: 80:      PWM7DCL = (dutyValue & 0x0003)<<6;
  4623  0023C2  C014  F016         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
  4624  0023C6  0E03               	movlw	3
  4625  0023C8  1616               	andwf	??_PWM7_LoadDutyValue^0,f,c
  4626  0023CA  0E06               	movlw	6
  4627  0023CC  6E17               	movwf	(??_PWM7_LoadDutyValue+1)^0,c
  4628  0023CE                     u1975:
  4629  0023CE  90D8               	bcf	status,0,c
  4630  0023D0  3616               	rlcf	??_PWM7_LoadDutyValue^0,f,c
  4631  0023D2  2E17               	decfsz	(??_PWM7_LoadDutyValue+1)^0,f,c
  4632  0023D4  EFE7  F011         	goto	u1975
  4633  0023D8  5016               	movf	??_PWM7_LoadDutyValue^0,w,c
  4634  0023DA  6E64               	movwf	100,c	;volatile
  4635  0023DC  0012               	return		;funcret
  4636  0023DE                     __end_of_PWM7_LoadDutyValue:
  4637                           	callstack 0
  4638                           
  4639 ;; *************** function _actSpeed *****************
  4640 ;; Defined at:
  4641 ;;		line 59 in file "main.c"
  4642 ;; Parameters:    Size  Location     Type
  4643 ;;		None
  4644 ;; Auto vars:     Size  Location     Type
  4645 ;;  speed           2   35[COMRAM] short 
  4646 ;; Return value:  Size  Location     Type
  4647 ;;                  2   33[COMRAM] short 
  4648 ;; Registers used:
  4649 ;;		wreg, status,2, status,0, cstack
  4650 ;; Tracked objects:
  4651 ;;		On entry : 0/0
  4652 ;;		On exit  : 0/0
  4653 ;;		Unchanged: 0/0
  4654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4655 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4656 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4658 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4659 ;;Total ram usage:        4 bytes
  4660 ;; Hardware stack levels used: 1
  4661 ;; Hardware stack levels required when called: 9
  4662 ;; This function calls:
  4663 ;;		___aldiv
  4664 ;; This function is called by:
  4665 ;;		_calcMotorPow
  4666 ;; This function uses a non-reentrant model
  4667 ;;
  4668                           
  4669                           	psect	text16
  4670  001EBE                     __ptext16:
  4671                           	callstack 0
  4672  001EBE                     _actSpeed:
  4673                           	callstack 19
  4674  001EBE                     
  4675                           ;main.c: 60:     int16_t speed = 0;
  4676  001EBE  0E00               	movlw	0
  4677  001EC0  6E25               	movwf	(actSpeed@speed+1)^0,c
  4678  001EC2  0E00               	movlw	0
  4679  001EC4  6E24               	movwf	actSpeed@speed^0,c
  4680  001EC6                     
  4681                           ;main.c: 61:     if (smtPeriod) {
  4682  001EC6  5046               	movf	_smtPeriod^0,w,c	;volatile
  4683  001EC8  1047               	iorwf	(_smtPeriod+1)^0,w,c	;volatile
  4684  001ECA  1048               	iorwf	(_smtPeriod+2)^0,w,c	;volatile
  4685  001ECC  1049               	iorwf	(_smtPeriod+3)^0,w,c	;volatile
  4686  001ECE  B4D8               	btfsc	status,2,c
  4687  001ED0  EF6C  F00F         	goto	u2551
  4688  001ED4  EF6E  F00F         	goto	u2550
  4689  001ED8                     u2551:
  4690  001ED8  EFA4  F00F         	goto	l4236
  4691  001EDC                     u2550:
  4692  001EDC                     
  4693                           ;main.c: 62:         if (CLC3CONbits.LC3OUT) {
  4694  001EDC  013C               	movlb	60	; () banked
  4695  001EDE  AB60               	btfss	96,5,b	;volatile
  4696  001EE0  EF74  F00F         	goto	u2561
  4697  001EE4  EF76  F00F         	goto	u2560
  4698  001EE8                     u2561:
  4699  001EE8  EF8E  F00F         	goto	l4234
  4700  001EEC                     u2560:
  4701  001EEC                     
  4702                           ; BSR set to: 60
  4703                           ;main.c: 63:             speed = (int16_t) ((int32_t) (500000 / (int32_t) smtPeriod));
  4704  001EEC  0E20               	movlw	32
  4705  001EEE  6E14               	movwf	___aldiv@dividend^0,c
  4706  001EF0  0EA1               	movlw	161
  4707  001EF2  6E15               	movwf	(___aldiv@dividend+1)^0,c
  4708  001EF4  0E07               	movlw	7
  4709  001EF6  6E16               	movwf	(___aldiv@dividend+2)^0,c
  4710  001EF8  0E00               	movlw	0
  4711  001EFA  6E17               	movwf	(___aldiv@dividend+3)^0,c
  4712  001EFC  C046  F018         	movff	_smtPeriod,___aldiv@divisor	;volatile
  4713  001F00  C047  F019         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
  4714  001F04  C048  F01A         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
  4715  001F08  C049  F01B         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
  4716  001F0C  EC10  F00B         	call	___aldiv	;wreg free
  4717  001F10  C014  F024         	movff	?___aldiv,actSpeed@speed
  4718  001F14  C015  F025         	movff	?___aldiv+1,actSpeed@speed+1
  4719                           
  4720                           ;main.c: 64:         } else {
  4721  001F18  EFA4  F00F         	goto	l4236
  4722  001F1C                     l4234:
  4723                           
  4724                           ; BSR set to: 60
  4725                           ;main.c: 65:             speed = (int16_t) ((int32_t) (-500000 / (int32_t) smtPeriod));
  4726  001F1C  0EE0               	movlw	224
  4727  001F1E  6E14               	movwf	___aldiv@dividend^0,c
  4728  001F20  0E5E               	movlw	94
  4729  001F22  6E15               	movwf	(___aldiv@dividend+1)^0,c
  4730  001F24  0EF8               	movlw	248
  4731  001F26  6E16               	movwf	(___aldiv@dividend+2)^0,c
  4732  001F28  0EFF               	movlw	255
  4733  001F2A  6E17               	movwf	(___aldiv@dividend+3)^0,c
  4734  001F2C  C046  F018         	movff	_smtPeriod,___aldiv@divisor	;volatile
  4735  001F30  C047  F019         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
  4736  001F34  C048  F01A         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
  4737  001F38  C049  F01B         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
  4738  001F3C  EC10  F00B         	call	___aldiv	;wreg free
  4739  001F40  C014  F024         	movff	?___aldiv,actSpeed@speed
  4740  001F44  C015  F025         	movff	?___aldiv+1,actSpeed@speed+1
  4741  001F48                     l4236:
  4742                           
  4743                           ;main.c: 68:     return speed;
  4744  001F48  C024  F022         	movff	actSpeed@speed,?_actSpeed
  4745  001F4C  C025  F023         	movff	actSpeed@speed+1,?_actSpeed+1
  4746  001F50  0012               	return		;funcret
  4747  001F52                     __end_of_actSpeed:
  4748                           	callstack 0
  4749                           
  4750 ;; *************** function ___aldiv *****************
  4751 ;; Defined at:
  4752 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aldiv.c"
  4753 ;; Parameters:    Size  Location     Type
  4754 ;;  dividend        4   19[COMRAM] long 
  4755 ;;  divisor         4   23[COMRAM] long 
  4756 ;; Auto vars:     Size  Location     Type
  4757 ;;  quotient        4   29[COMRAM] long 
  4758 ;;  sign            1   28[COMRAM] unsigned char 
  4759 ;;  counter         1   27[COMRAM] unsigned char 
  4760 ;; Return value:  Size  Location     Type
  4761 ;;                  4   19[COMRAM] long 
  4762 ;; Registers used:
  4763 ;;		wreg, status,2, status,0
  4764 ;; Tracked objects:
  4765 ;;		On entry : 0/0
  4766 ;;		On exit  : 0/0
  4767 ;;		Unchanged: 0/0
  4768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4769 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4770 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4772 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4773 ;;Total ram usage:       14 bytes
  4774 ;; Hardware stack levels used: 1
  4775 ;; Hardware stack levels required when called: 8
  4776 ;; This function calls:
  4777 ;;		Nothing
  4778 ;; This function is called by:
  4779 ;;		_actSpeed
  4780 ;; This function uses a non-reentrant model
  4781 ;;
  4782                           
  4783                           	psect	text17
  4784  001620                     __ptext17:
  4785                           	callstack 0
  4786  001620                     ___aldiv:
  4787                           	callstack 19
  4788  001620  0E00               	movlw	0
  4789  001622  6E1D               	movwf	___aldiv@sign^0,c
  4790  001624  BE1B               	btfsc	(___aldiv@divisor+3)^0,7,c
  4791  001626  EF19  F00B         	goto	u2030
  4792  00162A  EF17  F00B         	goto	u2031
  4793  00162E                     u2031:
  4794  00162E  EF23  F00B         	goto	l3854
  4795  001632                     u2030:
  4796  001632  1E1B               	comf	(___aldiv@divisor+3)^0,f,c
  4797  001634  1E1A               	comf	(___aldiv@divisor+2)^0,f,c
  4798  001636  1E19               	comf	(___aldiv@divisor+1)^0,f,c
  4799  001638  6C18               	negf	___aldiv@divisor^0,c
  4800  00163A  0E00               	movlw	0
  4801  00163C  2219               	addwfc	(___aldiv@divisor+1)^0,f,c
  4802  00163E  221A               	addwfc	(___aldiv@divisor+2)^0,f,c
  4803  001640  221B               	addwfc	(___aldiv@divisor+3)^0,f,c
  4804  001642  0E01               	movlw	1
  4805  001644  6E1D               	movwf	___aldiv@sign^0,c
  4806  001646                     l3854:
  4807  001646  BE17               	btfsc	(___aldiv@dividend+3)^0,7,c
  4808  001648  EF2A  F00B         	goto	u2040
  4809  00164C  EF28  F00B         	goto	u2041
  4810  001650                     u2041:
  4811  001650  EF34  F00B         	goto	l3860
  4812  001654                     u2040:
  4813  001654  1E17               	comf	(___aldiv@dividend+3)^0,f,c
  4814  001656  1E16               	comf	(___aldiv@dividend+2)^0,f,c
  4815  001658  1E15               	comf	(___aldiv@dividend+1)^0,f,c
  4816  00165A  6C14               	negf	___aldiv@dividend^0,c
  4817  00165C  0E00               	movlw	0
  4818  00165E  2215               	addwfc	(___aldiv@dividend+1)^0,f,c
  4819  001660  2216               	addwfc	(___aldiv@dividend+2)^0,f,c
  4820  001662  2217               	addwfc	(___aldiv@dividend+3)^0,f,c
  4821  001664  0E01               	movlw	1
  4822  001666  1A1D               	xorwf	___aldiv@sign^0,f,c
  4823  001668                     l3860:
  4824  001668  0E00               	movlw	0
  4825  00166A  6E1E               	movwf	___aldiv@quotient^0,c
  4826  00166C  0E00               	movlw	0
  4827  00166E  6E1F               	movwf	(___aldiv@quotient+1)^0,c
  4828  001670  0E00               	movlw	0
  4829  001672  6E20               	movwf	(___aldiv@quotient+2)^0,c
  4830  001674  0E00               	movlw	0
  4831  001676  6E21               	movwf	(___aldiv@quotient+3)^0,c
  4832  001678  5018               	movf	___aldiv@divisor^0,w,c
  4833  00167A  1019               	iorwf	(___aldiv@divisor+1)^0,w,c
  4834  00167C  101A               	iorwf	(___aldiv@divisor+2)^0,w,c
  4835  00167E  101B               	iorwf	(___aldiv@divisor+3)^0,w,c
  4836  001680  B4D8               	btfsc	status,2,c
  4837  001682  EF45  F00B         	goto	u2051
  4838  001686  EF47  F00B         	goto	u2050
  4839  00168A                     u2051:
  4840  00168A  EF7D  F00B         	goto	l3882
  4841  00168E                     u2050:
  4842  00168E  0E01               	movlw	1
  4843  001690  6E1C               	movwf	___aldiv@counter^0,c
  4844  001692  EF51  F00B         	goto	l3868
  4845  001696                     l3866:
  4846  001696  90D8               	bcf	status,0,c
  4847  001698  3618               	rlcf	___aldiv@divisor^0,f,c
  4848  00169A  3619               	rlcf	(___aldiv@divisor+1)^0,f,c
  4849  00169C  361A               	rlcf	(___aldiv@divisor+2)^0,f,c
  4850  00169E  361B               	rlcf	(___aldiv@divisor+3)^0,f,c
  4851  0016A0  2A1C               	incf	___aldiv@counter^0,f,c
  4852  0016A2                     l3868:
  4853  0016A2  AE1B               	btfss	(___aldiv@divisor+3)^0,7,c
  4854  0016A4  EF56  F00B         	goto	u2061
  4855  0016A8  EF58  F00B         	goto	u2060
  4856  0016AC                     u2061:
  4857  0016AC  EF4B  F00B         	goto	l3866
  4858  0016B0                     u2060:
  4859  0016B0                     l3870:
  4860  0016B0  90D8               	bcf	status,0,c
  4861  0016B2  361E               	rlcf	___aldiv@quotient^0,f,c
  4862  0016B4  361F               	rlcf	(___aldiv@quotient+1)^0,f,c
  4863  0016B6  3620               	rlcf	(___aldiv@quotient+2)^0,f,c
  4864  0016B8  3621               	rlcf	(___aldiv@quotient+3)^0,f,c
  4865  0016BA  5018               	movf	___aldiv@divisor^0,w,c
  4866  0016BC  5C14               	subwf	___aldiv@dividend^0,w,c
  4867  0016BE  5019               	movf	(___aldiv@divisor+1)^0,w,c
  4868  0016C0  5815               	subwfb	(___aldiv@dividend+1)^0,w,c
  4869  0016C2  501A               	movf	(___aldiv@divisor+2)^0,w,c
  4870  0016C4  5816               	subwfb	(___aldiv@dividend+2)^0,w,c
  4871  0016C6  501B               	movf	(___aldiv@divisor+3)^0,w,c
  4872  0016C8  5817               	subwfb	(___aldiv@dividend+3)^0,w,c
  4873  0016CA  A0D8               	btfss	status,0,c
  4874  0016CC  EF6A  F00B         	goto	u2071
  4875  0016D0  EF6C  F00B         	goto	u2070
  4876  0016D4                     u2071:
  4877  0016D4  EF75  F00B         	goto	l3878
  4878  0016D8                     u2070:
  4879  0016D8  5018               	movf	___aldiv@divisor^0,w,c
  4880  0016DA  5E14               	subwf	___aldiv@dividend^0,f,c
  4881  0016DC  5019               	movf	(___aldiv@divisor+1)^0,w,c
  4882  0016DE  5A15               	subwfb	(___aldiv@dividend+1)^0,f,c
  4883  0016E0  501A               	movf	(___aldiv@divisor+2)^0,w,c
  4884  0016E2  5A16               	subwfb	(___aldiv@dividend+2)^0,f,c
  4885  0016E4  501B               	movf	(___aldiv@divisor+3)^0,w,c
  4886  0016E6  5A17               	subwfb	(___aldiv@dividend+3)^0,f,c
  4887  0016E8  801E               	bsf	___aldiv@quotient^0,0,c
  4888  0016EA                     l3878:
  4889  0016EA  90D8               	bcf	status,0,c
  4890  0016EC  321B               	rrcf	(___aldiv@divisor+3)^0,f,c
  4891  0016EE  321A               	rrcf	(___aldiv@divisor+2)^0,f,c
  4892  0016F0  3219               	rrcf	(___aldiv@divisor+1)^0,f,c
  4893  0016F2  3218               	rrcf	___aldiv@divisor^0,f,c
  4894  0016F4  2E1C               	decfsz	___aldiv@counter^0,f,c
  4895  0016F6  EF58  F00B         	goto	l3870
  4896  0016FA                     l3882:
  4897  0016FA  501D               	movf	___aldiv@sign^0,w,c
  4898  0016FC  B4D8               	btfsc	status,2,c
  4899  0016FE  EF83  F00B         	goto	u2081
  4900  001702  EF85  F00B         	goto	u2080
  4901  001706                     u2081:
  4902  001706  EF8D  F00B         	goto	l3886
  4903  00170A                     u2080:
  4904  00170A  1E21               	comf	(___aldiv@quotient+3)^0,f,c
  4905  00170C  1E20               	comf	(___aldiv@quotient+2)^0,f,c
  4906  00170E  1E1F               	comf	(___aldiv@quotient+1)^0,f,c
  4907  001710  6C1E               	negf	___aldiv@quotient^0,c
  4908  001712  0E00               	movlw	0
  4909  001714  221F               	addwfc	(___aldiv@quotient+1)^0,f,c
  4910  001716  2220               	addwfc	(___aldiv@quotient+2)^0,f,c
  4911  001718  2221               	addwfc	(___aldiv@quotient+3)^0,f,c
  4912  00171A                     l3886:
  4913  00171A  C01E  F014         	movff	___aldiv@quotient,?___aldiv
  4914  00171E  C01F  F015         	movff	___aldiv@quotient+1,?___aldiv+1
  4915  001722  C020  F016         	movff	___aldiv@quotient+2,?___aldiv+2
  4916  001726  C021  F017         	movff	___aldiv@quotient+3,?___aldiv+3
  4917  00172A  0012               	return		;funcret
  4918  00172C                     __end_of___aldiv:
  4919                           	callstack 0
  4920                           
  4921 ;; *************** function ___xxtofl *****************
  4922 ;; Defined at:
  4923 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  4924 ;; Parameters:    Size  Location     Type
  4925 ;;  sign            1    wreg     unsigned char 
  4926 ;;  val             4   27[COMRAM] long 
  4927 ;; Auto vars:     Size  Location     Type
  4928 ;;  sign            1   35[COMRAM] unsigned char 
  4929 ;;  arg             4   37[COMRAM] unsigned long 
  4930 ;;  exp             1   36[COMRAM] unsigned char 
  4931 ;; Return value:  Size  Location     Type
  4932 ;;                  4   27[COMRAM] unsigned char 
  4933 ;; Registers used:
  4934 ;;		wreg, status,2, status,0
  4935 ;; Tracked objects:
  4936 ;;		On entry : 0/0
  4937 ;;		On exit  : 0/0
  4938 ;;		Unchanged: 0/0
  4939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4940 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4941 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4942 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4943 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4944 ;;Total ram usage:       14 bytes
  4945 ;; Hardware stack levels used: 1
  4946 ;; Hardware stack levels required when called: 8
  4947 ;; This function calls:
  4948 ;;		Nothing
  4949 ;; This function is called by:
  4950 ;;		_startAccell
  4951 ;;		_calcSteering
  4952 ;;		_calcSpeed
  4953 ;;		_calcMotorPow
  4954 ;; This function uses a non-reentrant model
  4955 ;;
  4956                           
  4957                           	psect	text18
  4958  001052                     __ptext18:
  4959                           	callstack 0
  4960  001052                     ___xxtofl:
  4961                           	callstack 19
  4962                           
  4963                           ;incstack = 0
  4964                           ;___xxtofl@sign stored from wreg
  4965  001052  6E24               	movwf	___xxtofl@sign^0,c
  4966  001054  5024               	movf	___xxtofl@sign^0,w,c
  4967  001056  B4D8               	btfsc	status,2,c
  4968  001058  EF30  F008         	goto	u2351
  4969  00105C  EF32  F008         	goto	u2350
  4970  001060                     u2351:
  4971  001060  EF54  F008         	goto	l2032
  4972  001064                     u2350:
  4973  001064  BE1F               	btfsc	(___xxtofl@val+3)^0,7,c
  4974  001066  EF39  F008         	goto	u2360
  4975  00106A  EF37  F008         	goto	u2361
  4976  00106E                     u2361:
  4977  00106E  EF54  F008         	goto	l2032
  4978  001072                     u2360:
  4979  001072  C01C  F020         	movff	___xxtofl@val,??___xxtofl
  4980  001076  C01D  F021         	movff	___xxtofl@val+1,??___xxtofl+1
  4981  00107A  C01E  F022         	movff	___xxtofl@val+2,??___xxtofl+2
  4982  00107E  C01F  F023         	movff	___xxtofl@val+3,??___xxtofl+3
  4983  001082  1E20               	comf	??___xxtofl^0,f,c
  4984  001084  1E21               	comf	(??___xxtofl+1)^0,f,c
  4985  001086  1E22               	comf	(??___xxtofl+2)^0,f,c
  4986  001088  1E23               	comf	(??___xxtofl+3)^0,f,c
  4987  00108A  2A20               	incf	??___xxtofl^0,f,c
  4988  00108C  0E00               	movlw	0
  4989  00108E  2221               	addwfc	(??___xxtofl+1)^0,f,c
  4990  001090  2222               	addwfc	(??___xxtofl+2)^0,f,c
  4991  001092  2223               	addwfc	(??___xxtofl+3)^0,f,c
  4992  001094  C020  F026         	movff	??___xxtofl,___xxtofl@arg
  4993  001098  C021  F027         	movff	??___xxtofl+1,___xxtofl@arg+1
  4994  00109C  C022  F028         	movff	??___xxtofl+2,___xxtofl@arg+2
  4995  0010A0  C023  F029         	movff	??___xxtofl+3,___xxtofl@arg+3
  4996  0010A4  EF5C  F008         	goto	l4070
  4997  0010A8                     l2032:
  4998  0010A8  C01C  F026         	movff	___xxtofl@val,___xxtofl@arg
  4999  0010AC  C01D  F027         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5000  0010B0  C01E  F028         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5001  0010B4  C01F  F029         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5002  0010B8                     l4070:
  5003  0010B8  501C               	movf	___xxtofl@val^0,w,c
  5004  0010BA  101D               	iorwf	(___xxtofl@val+1)^0,w,c
  5005  0010BC  101E               	iorwf	(___xxtofl@val+2)^0,w,c
  5006  0010BE  101F               	iorwf	(___xxtofl@val+3)^0,w,c
  5007  0010C0  A4D8               	btfss	status,2,c
  5008  0010C2  EF65  F008         	goto	u2371
  5009  0010C6  EF67  F008         	goto	u2370
  5010  0010CA                     u2371:
  5011  0010CA  EF71  F008         	goto	l4076
  5012  0010CE                     u2370:
  5013  0010CE  0E00               	movlw	0
  5014  0010D0  6E1C               	movwf	?___xxtofl^0,c
  5015  0010D2  0E00               	movlw	0
  5016  0010D4  6E1D               	movwf	(?___xxtofl+1)^0,c
  5017  0010D6  0E00               	movlw	0
  5018  0010D8  6E1E               	movwf	(?___xxtofl+2)^0,c
  5019  0010DA  0E00               	movlw	0
  5020  0010DC  6E1F               	movwf	(?___xxtofl+3)^0,c
  5021  0010DE  EF02  F009         	goto	l2035
  5022  0010E2                     l4076:
  5023  0010E2  0E96               	movlw	150
  5024  0010E4  6E25               	movwf	___xxtofl@exp^0,c
  5025  0010E6  EF7B  F008         	goto	l4080
  5026  0010EA                     l4078:
  5027  0010EA  2A25               	incf	___xxtofl@exp^0,f,c
  5028  0010EC  90D8               	bcf	status,0,c
  5029  0010EE  3229               	rrcf	(___xxtofl@arg+3)^0,f,c
  5030  0010F0  3228               	rrcf	(___xxtofl@arg+2)^0,f,c
  5031  0010F2  3227               	rrcf	(___xxtofl@arg+1)^0,f,c
  5032  0010F4  3226               	rrcf	___xxtofl@arg^0,f,c
  5033  0010F6                     l4080:
  5034  0010F6  0E00               	movlw	0
  5035  0010F8  1426               	andwf	___xxtofl@arg^0,w,c
  5036  0010FA  6E20               	movwf	??___xxtofl^0,c
  5037  0010FC  0E00               	movlw	0
  5038  0010FE  1427               	andwf	(___xxtofl@arg+1)^0,w,c
  5039  001100  6E21               	movwf	(??___xxtofl+1)^0,c
  5040  001102  0E00               	movlw	0
  5041  001104  1428               	andwf	(___xxtofl@arg+2)^0,w,c
  5042  001106  6E22               	movwf	(??___xxtofl+2)^0,c
  5043  001108  0EFE               	movlw	254
  5044  00110A  1429               	andwf	(___xxtofl@arg+3)^0,w,c
  5045  00110C  6E23               	movwf	(??___xxtofl+3)^0,c
  5046  00110E  5020               	movf	??___xxtofl^0,w,c
  5047  001110  1021               	iorwf	(??___xxtofl+1)^0,w,c
  5048  001112  1022               	iorwf	(??___xxtofl+2)^0,w,c
  5049  001114  1023               	iorwf	(??___xxtofl+3)^0,w,c
  5050  001116  A4D8               	btfss	status,2,c
  5051  001118  EF90  F008         	goto	u2381
  5052  00111C  EF92  F008         	goto	u2380
  5053  001120                     u2381:
  5054  001120  EF75  F008         	goto	l4078
  5055  001124                     u2380:
  5056  001124  EFA0  F008         	goto	l2039
  5057  001128                     l4082:
  5058  001128  2A25               	incf	___xxtofl@exp^0,f,c
  5059  00112A  0E01               	movlw	1
  5060  00112C  2626               	addwf	___xxtofl@arg^0,f,c
  5061  00112E  0E00               	movlw	0
  5062  001130  2227               	addwfc	(___xxtofl@arg+1)^0,f,c
  5063  001132  2228               	addwfc	(___xxtofl@arg+2)^0,f,c
  5064  001134  2229               	addwfc	(___xxtofl@arg+3)^0,f,c
  5065  001136  90D8               	bcf	status,0,c
  5066  001138  3229               	rrcf	(___xxtofl@arg+3)^0,f,c
  5067  00113A  3228               	rrcf	(___xxtofl@arg+2)^0,f,c
  5068  00113C  3227               	rrcf	(___xxtofl@arg+1)^0,f,c
  5069  00113E  3226               	rrcf	___xxtofl@arg^0,f,c
  5070  001140                     l2039:
  5071  001140  0E00               	movlw	0
  5072  001142  1426               	andwf	___xxtofl@arg^0,w,c
  5073  001144  6E20               	movwf	??___xxtofl^0,c
  5074  001146  0E00               	movlw	0
  5075  001148  1427               	andwf	(___xxtofl@arg+1)^0,w,c
  5076  00114A  6E21               	movwf	(??___xxtofl+1)^0,c
  5077  00114C  0E00               	movlw	0
  5078  00114E  1428               	andwf	(___xxtofl@arg+2)^0,w,c
  5079  001150  6E22               	movwf	(??___xxtofl+2)^0,c
  5080  001152  0EFF               	movlw	255
  5081  001154  1429               	andwf	(___xxtofl@arg+3)^0,w,c
  5082  001156  6E23               	movwf	(??___xxtofl+3)^0,c
  5083  001158  5020               	movf	??___xxtofl^0,w,c
  5084  00115A  1021               	iorwf	(??___xxtofl+1)^0,w,c
  5085  00115C  1022               	iorwf	(??___xxtofl+2)^0,w,c
  5086  00115E  1023               	iorwf	(??___xxtofl+3)^0,w,c
  5087  001160  A4D8               	btfss	status,2,c
  5088  001162  EFB5  F008         	goto	u2391
  5089  001166  EFB7  F008         	goto	u2390
  5090  00116A                     u2391:
  5091  00116A  EF94  F008         	goto	l4082
  5092  00116E                     u2390:
  5093  00116E  EFBF  F008         	goto	l4090
  5094  001172                     l4088:
  5095  001172  0625               	decf	___xxtofl@exp^0,f,c
  5096  001174  90D8               	bcf	status,0,c
  5097  001176  3626               	rlcf	___xxtofl@arg^0,f,c
  5098  001178  3627               	rlcf	(___xxtofl@arg+1)^0,f,c
  5099  00117A  3628               	rlcf	(___xxtofl@arg+2)^0,f,c
  5100  00117C  3629               	rlcf	(___xxtofl@arg+3)^0,f,c
  5101  00117E                     l4090:
  5102  00117E  BE28               	btfsc	(___xxtofl@arg+2)^0,7,c
  5103  001180  EFC4  F008         	goto	u2401
  5104  001184  EFC6  F008         	goto	u2400
  5105  001188                     u2401:
  5106  001188  EFCE  F008         	goto	l2046
  5107  00118C                     u2400:
  5108  00118C  0E02               	movlw	2
  5109  00118E  6025               	cpfslt	___xxtofl@exp^0,c
  5110  001190  EFCC  F008         	goto	u2411
  5111  001194  EFCE  F008         	goto	u2410
  5112  001198                     u2411:
  5113  001198  EFB9  F008         	goto	l4088
  5114  00119C                     u2410:
  5115  00119C                     l2046:
  5116  00119C  B025               	btfsc	___xxtofl@exp^0,0,c
  5117  00119E  EFD3  F008         	goto	u2421
  5118  0011A2  EFD5  F008         	goto	u2420
  5119  0011A6                     u2421:
  5120  0011A6  EFD6  F008         	goto	l4096
  5121  0011AA                     u2420:
  5122  0011AA  9E28               	bcf	(___xxtofl@arg+2)^0,7,c
  5123  0011AC                     l4096:
  5124  0011AC  90D8               	bcf	status,0,c
  5125  0011AE  3225               	rrcf	___xxtofl@exp^0,f,c
  5126  0011B0  C025  F020         	movff	___xxtofl@exp,??___xxtofl
  5127  0011B4  6A21               	clrf	(??___xxtofl+1)^0,c
  5128  0011B6  6A22               	clrf	(??___xxtofl+2)^0,c
  5129  0011B8  6A23               	clrf	(??___xxtofl+3)^0,c
  5130  0011BA  C020  F023         	movff	??___xxtofl,??___xxtofl+3
  5131  0011BE  6A22               	clrf	(??___xxtofl+2)^0,c
  5132  0011C0  6A21               	clrf	(??___xxtofl+1)^0,c
  5133  0011C2  6A20               	clrf	??___xxtofl^0,c
  5134  0011C4  5020               	movf	??___xxtofl^0,w,c
  5135  0011C6  1226               	iorwf	___xxtofl@arg^0,f,c
  5136  0011C8  5021               	movf	(??___xxtofl+1)^0,w,c
  5137  0011CA  1227               	iorwf	(___xxtofl@arg+1)^0,f,c
  5138  0011CC  5022               	movf	(??___xxtofl+2)^0,w,c
  5139  0011CE  1228               	iorwf	(___xxtofl@arg+2)^0,f,c
  5140  0011D0  5023               	movf	(??___xxtofl+3)^0,w,c
  5141  0011D2  1229               	iorwf	(___xxtofl@arg+3)^0,f,c
  5142  0011D4  5024               	movf	___xxtofl@sign^0,w,c
  5143  0011D6  B4D8               	btfsc	status,2,c
  5144  0011D8  EFF0  F008         	goto	u2431
  5145  0011DC  EFF2  F008         	goto	u2430
  5146  0011E0                     u2431:
  5147  0011E0  EFFA  F008         	goto	l4106
  5148  0011E4                     u2430:
  5149  0011E4  BE1F               	btfsc	(___xxtofl@val+3)^0,7,c
  5150  0011E6  EFF9  F008         	goto	u2440
  5151  0011EA  EFF7  F008         	goto	u2441
  5152  0011EE                     u2441:
  5153  0011EE  EFFA  F008         	goto	l4106
  5154  0011F2                     u2440:
  5155  0011F2  8E29               	bsf	(___xxtofl@arg+3)^0,7,c
  5156  0011F4                     l4106:
  5157  0011F4  C026  F01C         	movff	___xxtofl@arg,?___xxtofl
  5158  0011F8  C027  F01D         	movff	___xxtofl@arg+1,?___xxtofl+1
  5159  0011FC  C028  F01E         	movff	___xxtofl@arg+2,?___xxtofl+2
  5160  001200  C029  F01F         	movff	___xxtofl@arg+3,?___xxtofl+3
  5161  001204                     l2035:
  5162  001204  0012               	return		;funcret
  5163  001206                     __end_of___xxtofl:
  5164                           	callstack 0
  5165                           
  5166 ;; *************** function ___fltol *****************
  5167 ;; Defined at:
  5168 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  5169 ;; Parameters:    Size  Location     Type
  5170 ;;  f1              4   25[BANK0 ] unsigned char 
  5171 ;; Auto vars:     Size  Location     Type
  5172 ;;  exp1            1   34[BANK0 ] unsigned char 
  5173 ;;  sign1           1   33[BANK0 ] unsigned char 
  5174 ;; Return value:  Size  Location     Type
  5175 ;;                  4   25[BANK0 ] long 
  5176 ;; Registers used:
  5177 ;;		wreg, status,2, status,0
  5178 ;; Tracked objects:
  5179 ;;		On entry : 0/0
  5180 ;;		On exit  : 0/0
  5181 ;;		Unchanged: 0/0
  5182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5183 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5184 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5185 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5186 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5187 ;;Total ram usage:       10 bytes
  5188 ;; Hardware stack levels used: 1
  5189 ;; Hardware stack levels required when called: 8
  5190 ;; This function calls:
  5191 ;;		Nothing
  5192 ;; This function is called by:
  5193 ;;		_startAccell
  5194 ;;		_calcSteering
  5195 ;;		_calcSpeed
  5196 ;;		_calcMotorPow
  5197 ;; This function uses a non-reentrant model
  5198 ;;
  5199                           
  5200                           	psect	text19
  5201  00172C                     __ptext19:
  5202                           	callstack 0
  5203  00172C                     ___fltol:
  5204                           	callstack 19
  5205  00172C  0100               	movlb	0	; () banked
  5206  00172E  35BA               	rlcf	(___fltol@f1+2)& (0+255),w,b
  5207  001730  35BB               	rlcf	(___fltol@f1+3)& (0+255),w,b
  5208  001732  6FC1               	movwf	___fltol@exp1& (0+255),b
  5209  001734  51C1               	movf	___fltol@exp1& (0+255),w,b
  5210  001736  A4D8               	btfss	status,2,c
  5211  001738  EFA0  F00B         	goto	u3921
  5212  00173C  EFA2  F00B         	goto	u3920
  5213  001740                     u3921:
  5214  001740  EFAC  F00B         	goto	l5320
  5215  001744                     u3920:
  5216  001744                     l5316:
  5217                           
  5218                           ; BSR set to: 0
  5219  001744  0E00               	movlw	0
  5220  001746  6FB8               	movwf	?___fltol& (0+255),b
  5221  001748  0E00               	movlw	0
  5222  00174A  6FB9               	movwf	(?___fltol+1)& (0+255),b
  5223  00174C  0E00               	movlw	0
  5224  00174E  6FBA               	movwf	(?___fltol+2)& (0+255),b
  5225  001750  0E00               	movlw	0
  5226  001752  6FBB               	movwf	(?___fltol+3)& (0+255),b
  5227  001754  EF19  F00C         	goto	l1674
  5228  001758                     l5320:
  5229                           
  5230                           ; BSR set to: 0
  5231  001758  C0B8  F0BC         	movff	___fltol@f1,??___fltol
  5232  00175C  C0B9  F0BD         	movff	___fltol@f1+1,??___fltol+1
  5233  001760  C0BA  F0BE         	movff	___fltol@f1+2,??___fltol+2
  5234  001764  C0BB  F0BF         	movff	___fltol@f1+3,??___fltol+3
  5235  001768  0E20               	movlw	32
  5236  00176A  EFBC  F00B         	goto	u3930
  5237  00176E                     u3935:
  5238  00176E  90D8               	bcf	status,0,c
  5239  001770  33BF               	rrcf	(??___fltol+3)& (0+255),f,b
  5240  001772  33BE               	rrcf	(??___fltol+2)& (0+255),f,b
  5241  001774  33BD               	rrcf	(??___fltol+1)& (0+255),f,b
  5242  001776  33BC               	rrcf	??___fltol& (0+255),f,b
  5243  001778                     u3930:
  5244  001778  2EE8               	decfsz	wreg,f,c
  5245  00177A  EFB7  F00B         	goto	u3935
  5246  00177E  51BC               	movf	??___fltol& (0+255),w,b
  5247  001780  6FC0               	movwf	___fltol@sign1& (0+255),b
  5248  001782                     
  5249                           ; BSR set to: 0
  5250  001782  8FBA               	bsf	(___fltol@f1+2)& (0+255),7,b
  5251  001784                     
  5252                           ; BSR set to: 0
  5253  001784  0EFF               	movlw	255
  5254  001786  17B8               	andwf	___fltol@f1& (0+255),f,b
  5255  001788  0EFF               	movlw	255
  5256  00178A  17B9               	andwf	(___fltol@f1+1)& (0+255),f,b
  5257  00178C  0EFF               	movlw	255
  5258  00178E  17BA               	andwf	(___fltol@f1+2)& (0+255),f,b
  5259  001790  0E00               	movlw	0
  5260  001792  17BB               	andwf	(___fltol@f1+3)& (0+255),f,b
  5261  001794                     
  5262                           ; BSR set to: 0
  5263  001794  0E96               	movlw	150
  5264  001796  5FC1               	subwf	___fltol@exp1& (0+255),f,b
  5265  001798                     
  5266                           ; BSR set to: 0
  5267  001798  BFC1               	btfsc	___fltol@exp1& (0+255),7,b
  5268  00179A  EFD3  F00B         	goto	u3940
  5269  00179E  EFD1  F00B         	goto	u3941
  5270  0017A2                     u3941:
  5271  0017A2  EFE9  F00B         	goto	l5340
  5272  0017A6                     u3940:
  5273  0017A6                     
  5274                           ; BSR set to: 0
  5275  0017A6  51C1               	movf	___fltol@exp1& (0+255),w,b
  5276  0017A8  0A80               	xorlw	128
  5277  0017AA  0F97               	addlw	151
  5278  0017AC  B0D8               	btfsc	status,0,c
  5279  0017AE  EFDB  F00B         	goto	u3951
  5280  0017B2  EFDD  F00B         	goto	u3950
  5281  0017B6                     u3951:
  5282  0017B6  EFDF  F00B         	goto	l5336
  5283  0017BA                     u3950:
  5284  0017BA  EFA2  F00B         	goto	l5316
  5285  0017BE                     l5336:
  5286                           
  5287                           ; BSR set to: 0
  5288  0017BE  90D8               	bcf	status,0,c
  5289  0017C0  33BB               	rrcf	(___fltol@f1+3)& (0+255),f,b
  5290  0017C2  33BA               	rrcf	(___fltol@f1+2)& (0+255),f,b
  5291  0017C4  33B9               	rrcf	(___fltol@f1+1)& (0+255),f,b
  5292  0017C6  33B8               	rrcf	___fltol@f1& (0+255),f,b
  5293  0017C8                     
  5294                           ; BSR set to: 0
  5295  0017C8  3FC1               	incfsz	___fltol@exp1& (0+255),f,b
  5296  0017CA  EFDF  F00B         	goto	l5336
  5297  0017CE  EF01  F00C         	goto	l5350
  5298  0017D2                     l5340:
  5299                           
  5300                           ; BSR set to: 0
  5301  0017D2  0E1F               	movlw	31
  5302  0017D4  65C1               	cpfsgt	___fltol@exp1& (0+255),b
  5303  0017D6  EFEF  F00B         	goto	u3961
  5304  0017DA  EFF1  F00B         	goto	u3960
  5305  0017DE                     u3961:
  5306  0017DE  EFF9  F00B         	goto	l5348
  5307  0017E2                     u3960:
  5308  0017E2  EFA2  F00B         	goto	l5316
  5309  0017E6                     l5346:
  5310                           
  5311                           ; BSR set to: 0
  5312  0017E6  90D8               	bcf	status,0,c
  5313  0017E8  37B8               	rlcf	___fltol@f1& (0+255),f,b
  5314  0017EA  37B9               	rlcf	(___fltol@f1+1)& (0+255),f,b
  5315  0017EC  37BA               	rlcf	(___fltol@f1+2)& (0+255),f,b
  5316  0017EE  37BB               	rlcf	(___fltol@f1+3)& (0+255),f,b
  5317  0017F0  07C1               	decf	___fltol@exp1& (0+255),f,b
  5318  0017F2                     l5348:
  5319                           
  5320                           ; BSR set to: 0
  5321  0017F2  51C1               	movf	___fltol@exp1& (0+255),w,b
  5322  0017F4  A4D8               	btfss	status,2,c
  5323  0017F6  EFFF  F00B         	goto	u3971
  5324  0017FA  EF01  F00C         	goto	u3970
  5325  0017FE                     u3971:
  5326  0017FE  EFF3  F00B         	goto	l5346
  5327  001802                     u3970:
  5328  001802                     l5350:
  5329                           
  5330                           ; BSR set to: 0
  5331  001802  51C0               	movf	___fltol@sign1& (0+255),w,b
  5332  001804  B4D8               	btfsc	status,2,c
  5333  001806  EF07  F00C         	goto	u3981
  5334  00180A  EF09  F00C         	goto	u3980
  5335  00180E                     u3981:
  5336  00180E  EF11  F00C         	goto	l5354
  5337  001812                     u3980:
  5338  001812                     
  5339                           ; BSR set to: 0
  5340  001812  1FBB               	comf	(___fltol@f1+3)& (0+255),f,b
  5341  001814  1FBA               	comf	(___fltol@f1+2)& (0+255),f,b
  5342  001816  1FB9               	comf	(___fltol@f1+1)& (0+255),f,b
  5343  001818  6DB8               	negf	___fltol@f1& (0+255),b
  5344  00181A  0E00               	movlw	0
  5345  00181C  23B9               	addwfc	(___fltol@f1+1)& (0+255),f,b
  5346  00181E  23BA               	addwfc	(___fltol@f1+2)& (0+255),f,b
  5347  001820  23BB               	addwfc	(___fltol@f1+3)& (0+255),f,b
  5348  001822                     l5354:
  5349                           
  5350                           ; BSR set to: 0
  5351  001822  C0B8  F0B8         	movff	___fltol@f1,?___fltol
  5352  001826  C0B9  F0B9         	movff	___fltol@f1+1,?___fltol+1
  5353  00182A  C0BA  F0BA         	movff	___fltol@f1+2,?___fltol+2
  5354  00182E  C0BB  F0BB         	movff	___fltol@f1+3,?___fltol+3
  5355  001832                     l1674:
  5356                           
  5357                           ; BSR set to: 0
  5358  001832  0012               	return		;funcret
  5359  001834                     __end_of___fltol:
  5360                           	callstack 0
  5361                           
  5362 ;; *************** function ___flmul *****************
  5363 ;; Defined at:
  5364 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  5365 ;; Parameters:    Size  Location     Type
  5366 ;;  b               4   41[COMRAM] long 
  5367 ;;  a               4   45[COMRAM] long 
  5368 ;; Auto vars:     Size  Location     Type
  5369 ;;  prod            4    7[BANK0 ] struct .
  5370 ;;  grs             4    2[BANK0 ] unsigned long 
  5371 ;;  temp            2   11[BANK0 ] struct .
  5372 ;;  bexp            1    6[BANK0 ] unsigned char 
  5373 ;;  aexp            1    1[BANK0 ] unsigned char 
  5374 ;;  sign            1    0[BANK0 ] unsigned char 
  5375 ;; Return value:  Size  Location     Type
  5376 ;;                  4   41[COMRAM] unsigned char 
  5377 ;; Registers used:
  5378 ;;		wreg, status,2, status,0, prodl, prodh
  5379 ;; Tracked objects:
  5380 ;;		On entry : 0/0
  5381 ;;		On exit  : 0/0
  5382 ;;		Unchanged: 0/0
  5383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5384 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5385 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5386 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5387 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5388 ;;Total ram usage:       25 bytes
  5389 ;; Hardware stack levels used: 1
  5390 ;; Hardware stack levels required when called: 8
  5391 ;; This function calls:
  5392 ;;		Nothing
  5393 ;; This function is called by:
  5394 ;;		_startAccell
  5395 ;;		_calcSteering
  5396 ;;		_calcSpeed
  5397 ;;		_calcMotorPow
  5398 ;; This function uses a non-reentrant model
  5399 ;;
  5400                           
  5401                           	psect	text20
  5402  000574                     __ptext20:
  5403                           	callstack 0
  5404  000574                     ___flmul:
  5405                           	callstack 19
  5406  000574  502D               	movf	(___flmul@b+3)^0,w,c
  5407  000576  0B80               	andlw	128
  5408  000578  0100               	movlb	0	; () banked
  5409  00057A  6F9F               	movwf	___flmul@sign& (0+255),b
  5410  00057C  502D               	movf	(___flmul@b+3)^0,w,c
  5411  00057E  242D               	addwf	(___flmul@b+3)^0,w,c
  5412  000580  6FA5               	movwf	___flmul@bexp& (0+255),b
  5413  000582                     
  5414                           ; BSR set to: 0
  5415  000582  AE2C               	btfss	(___flmul@b+2)^0,7,c
  5416  000584  EFC6  F002         	goto	u3731
  5417  000588  EFC8  F002         	goto	u3730
  5418  00058C                     u3731:
  5419  00058C  EFC9  F002         	goto	l5190
  5420  000590                     u3730:
  5421  000590                     
  5422                           ; BSR set to: 0
  5423  000590  81A5               	bsf	___flmul@bexp& (0+255),0,b
  5424  000592                     l5190:
  5425                           
  5426                           ; BSR set to: 0
  5427  000592  51A5               	movf	___flmul@bexp& (0+255),w,b
  5428  000594  B4D8               	btfsc	status,2,c
  5429  000596  EFCF  F002         	goto	u3741
  5430  00059A  EFD1  F002         	goto	u3740
  5431  00059E                     u3741:
  5432  00059E  EFE4  F002         	goto	l5198
  5433  0005A2                     u3740:
  5434  0005A2                     
  5435                           ; BSR set to: 0
  5436  0005A2  29A5               	incf	___flmul@bexp& (0+255),w,b
  5437  0005A4  A4D8               	btfss	status,2,c
  5438  0005A6  EFD7  F002         	goto	u3751
  5439  0005AA  EFD9  F002         	goto	u3750
  5440  0005AE                     u3751:
  5441  0005AE  EFE1  F002         	goto	l5196
  5442  0005B2                     u3750:
  5443  0005B2                     
  5444                           ; BSR set to: 0
  5445  0005B2  0E00               	movlw	0
  5446  0005B4  6E2A               	movwf	___flmul@b^0,c
  5447  0005B6  0E00               	movlw	0
  5448  0005B8  6E2B               	movwf	(___flmul@b+1)^0,c
  5449  0005BA  0E00               	movlw	0
  5450  0005BC  6E2C               	movwf	(___flmul@b+2)^0,c
  5451  0005BE  0E00               	movlw	0
  5452  0005C0  6E2D               	movwf	(___flmul@b+3)^0,c
  5453  0005C2                     l5196:
  5454                           
  5455                           ; BSR set to: 0
  5456  0005C2  8E2C               	bsf	(___flmul@b+2)^0,7,c
  5457  0005C4  EFEC  F002         	goto	l5200
  5458  0005C8                     l5198:
  5459                           
  5460                           ; BSR set to: 0
  5461  0005C8  0E00               	movlw	0
  5462  0005CA  6E2A               	movwf	___flmul@b^0,c
  5463  0005CC  0E00               	movlw	0
  5464  0005CE  6E2B               	movwf	(___flmul@b+1)^0,c
  5465  0005D0  0E00               	movlw	0
  5466  0005D2  6E2C               	movwf	(___flmul@b+2)^0,c
  5467  0005D4  0E00               	movlw	0
  5468  0005D6  6E2D               	movwf	(___flmul@b+3)^0,c
  5469  0005D8                     l5200:
  5470                           
  5471                           ; BSR set to: 0
  5472  0005D8  5031               	movf	(___flmul@a+3)^0,w,c
  5473  0005DA  0B80               	andlw	128
  5474  0005DC  1B9F               	xorwf	___flmul@sign& (0+255),f,b
  5475  0005DE                     
  5476                           ; BSR set to: 0
  5477  0005DE  5031               	movf	(___flmul@a+3)^0,w,c
  5478  0005E0  2431               	addwf	(___flmul@a+3)^0,w,c
  5479  0005E2  6FA0               	movwf	___flmul@aexp& (0+255),b
  5480  0005E4                     
  5481                           ; BSR set to: 0
  5482  0005E4  AE30               	btfss	(___flmul@a+2)^0,7,c
  5483  0005E6  EFF7  F002         	goto	u3761
  5484  0005EA  EFF9  F002         	goto	u3760
  5485  0005EE                     u3761:
  5486  0005EE  EFFA  F002         	goto	l5208
  5487  0005F2                     u3760:
  5488  0005F2                     
  5489                           ; BSR set to: 0
  5490  0005F2  81A0               	bsf	___flmul@aexp& (0+255),0,b
  5491  0005F4                     l5208:
  5492                           
  5493                           ; BSR set to: 0
  5494  0005F4  51A0               	movf	___flmul@aexp& (0+255),w,b
  5495  0005F6  B4D8               	btfsc	status,2,c
  5496  0005F8  EF00  F003         	goto	u3771
  5497  0005FC  EF02  F003         	goto	u3770
  5498  000600                     u3771:
  5499  000600  EF15  F003         	goto	l5216
  5500  000604                     u3770:
  5501  000604                     
  5502                           ; BSR set to: 0
  5503  000604  29A0               	incf	___flmul@aexp& (0+255),w,b
  5504  000606  A4D8               	btfss	status,2,c
  5505  000608  EF08  F003         	goto	u3781
  5506  00060C  EF0A  F003         	goto	u3780
  5507  000610                     u3781:
  5508  000610  EF12  F003         	goto	l5214
  5509  000614                     u3780:
  5510  000614                     
  5511                           ; BSR set to: 0
  5512  000614  0E00               	movlw	0
  5513  000616  6E2E               	movwf	___flmul@a^0,c
  5514  000618  0E00               	movlw	0
  5515  00061A  6E2F               	movwf	(___flmul@a+1)^0,c
  5516  00061C  0E00               	movlw	0
  5517  00061E  6E30               	movwf	(___flmul@a+2)^0,c
  5518  000620  0E00               	movlw	0
  5519  000622  6E31               	movwf	(___flmul@a+3)^0,c
  5520  000624                     l5214:
  5521                           
  5522                           ; BSR set to: 0
  5523  000624  8E30               	bsf	(___flmul@a+2)^0,7,c
  5524  000626  EF1D  F003         	goto	l1991
  5525  00062A                     l5216:
  5526                           
  5527                           ; BSR set to: 0
  5528  00062A  0E00               	movlw	0
  5529  00062C  6E2E               	movwf	___flmul@a^0,c
  5530  00062E  0E00               	movlw	0
  5531  000630  6E2F               	movwf	(___flmul@a+1)^0,c
  5532  000632  0E00               	movlw	0
  5533  000634  6E30               	movwf	(___flmul@a+2)^0,c
  5534  000636  0E00               	movlw	0
  5535  000638  6E31               	movwf	(___flmul@a+3)^0,c
  5536  00063A                     l1991:
  5537                           
  5538                           ; BSR set to: 0
  5539  00063A  51A0               	movf	___flmul@aexp& (0+255),w,b
  5540  00063C  B4D8               	btfsc	status,2,c
  5541  00063E  EF23  F003         	goto	u3791
  5542  000642  EF25  F003         	goto	u3790
  5543  000646                     u3791:
  5544  000646  EF2D  F003         	goto	l5220
  5545  00064A                     u3790:
  5546  00064A                     
  5547                           ; BSR set to: 0
  5548  00064A  51A5               	movf	___flmul@bexp& (0+255),w,b
  5549  00064C  A4D8               	btfss	status,2,c
  5550  00064E  EF2B  F003         	goto	u3801
  5551  000652  EF2D  F003         	goto	u3800
  5552  000656                     u3801:
  5553  000656  EF37  F003         	goto	l5224
  5554  00065A                     u3800:
  5555  00065A                     l5220:
  5556                           
  5557                           ; BSR set to: 0
  5558  00065A  0E00               	movlw	0
  5559  00065C  6E2A               	movwf	?___flmul^0,c
  5560  00065E  0E00               	movlw	0
  5561  000660  6E2B               	movwf	(?___flmul+1)^0,c
  5562  000662  0E00               	movlw	0
  5563  000664  6E2C               	movwf	(?___flmul+2)^0,c
  5564  000666  0E00               	movlw	0
  5565  000668  6E2D               	movwf	(?___flmul+3)^0,c
  5566  00066A  EFE1  F004         	goto	l1995
  5567  00066E                     l5224:
  5568                           
  5569                           ; BSR set to: 0
  5570  00066E  5030               	movf	(___flmul@a+2)^0,w,c
  5571  000670  022A               	mulwf	___flmul@b^0,c
  5572  000672  006F FFCC  F0AA    	movff	prodl,___flmul@temp
  5573  000678  006F FFD0  F0AB    	movff	prodh,___flmul@temp+1
  5574  00067E                     
  5575                           ; BSR set to: 0
  5576  00067E  51AA               	movf	___flmul@temp& (0+255),w,b
  5577  000680  6FA1               	movwf	___flmul@grs& (0+255),b
  5578  000682  6BA2               	clrf	(___flmul@grs+1)& (0+255),b
  5579  000684  6BA3               	clrf	(___flmul@grs+2)& (0+255),b
  5580  000686  6BA4               	clrf	(___flmul@grs+3)& (0+255),b
  5581  000688                     
  5582                           ; BSR set to: 0
  5583  000688  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  5584  00068A  6FA6               	movwf	___flmul@prod& (0+255),b
  5585  00068C  6BA7               	clrf	(___flmul@prod+1)& (0+255),b
  5586  00068E  6BA8               	clrf	(___flmul@prod+2)& (0+255),b
  5587  000690  6BA9               	clrf	(___flmul@prod+3)& (0+255),b
  5588  000692  502F               	movf	(___flmul@a+1)^0,w,c
  5589  000694  022B               	mulwf	(___flmul@b+1)^0,c
  5590  000696  006F FFCC  F0AA    	movff	prodl,___flmul@temp
  5591  00069C  006F FFD0  F0AB    	movff	prodh,___flmul@temp+1
  5592  0006A2                     
  5593                           ; BSR set to: 0
  5594  0006A2  51AA               	movf	___flmul@temp& (0+255),w,b
  5595  0006A4  27A1               	addwf	___flmul@grs& (0+255),f,b
  5596  0006A6  0E00               	movlw	0
  5597  0006A8  23A2               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5598  0006AA  23A3               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5599  0006AC  23A4               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5600  0006AE                     
  5601                           ; BSR set to: 0
  5602  0006AE  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  5603  0006B0  27A6               	addwf	___flmul@prod& (0+255),f,b
  5604  0006B2  0E00               	movlw	0
  5605  0006B4  23A7               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5606  0006B6  23A8               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5607  0006B8  23A9               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5608  0006BA  502E               	movf	___flmul@a^0,w,c
  5609  0006BC  022C               	mulwf	(___flmul@b+2)^0,c
  5610  0006BE  006F FFCC  F0AA    	movff	prodl,___flmul@temp
  5611  0006C4  006F FFD0  F0AB    	movff	prodh,___flmul@temp+1
  5612  0006CA                     
  5613                           ; BSR set to: 0
  5614  0006CA  51AA               	movf	___flmul@temp& (0+255),w,b
  5615  0006CC  27A1               	addwf	___flmul@grs& (0+255),f,b
  5616  0006CE  0E00               	movlw	0
  5617  0006D0  23A2               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5618  0006D2  23A3               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5619  0006D4  23A4               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5620  0006D6                     
  5621                           ; BSR set to: 0
  5622  0006D6  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  5623  0006D8  27A6               	addwf	___flmul@prod& (0+255),f,b
  5624  0006DA  0E00               	movlw	0
  5625  0006DC  23A7               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5626  0006DE  23A8               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5627  0006E0  23A9               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5628  0006E2                     
  5629                           ; BSR set to: 0
  5630  0006E2  C0A3  F0A4         	movff	___flmul@grs+2,___flmul@grs+3
  5631  0006E6  C0A2  F0A3         	movff	___flmul@grs+1,___flmul@grs+2
  5632  0006EA  C0A1  F0A2         	movff	___flmul@grs,___flmul@grs+1
  5633  0006EE  6BA1               	clrf	___flmul@grs& (0+255),b
  5634  0006F0                     
  5635                           ; BSR set to: 0
  5636  0006F0  502E               	movf	___flmul@a^0,w,c
  5637  0006F2  022B               	mulwf	(___flmul@b+1)^0,c
  5638  0006F4  006F FFCC  F0AA    	movff	prodl,___flmul@temp
  5639  0006FA  006F FFD0  F0AB    	movff	prodh,___flmul@temp+1
  5640  000700                     
  5641                           ; BSR set to: 0
  5642  000700  51AA               	movf	___flmul@temp& (0+255),w,b
  5643  000702  27A1               	addwf	___flmul@grs& (0+255),f,b
  5644  000704  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  5645  000706  23A2               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5646  000708  0E00               	movlw	0
  5647  00070A  23A3               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5648  00070C  0E00               	movlw	0
  5649  00070E  23A4               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5650  000710                     
  5651                           ; BSR set to: 0
  5652  000710  502F               	movf	(___flmul@a+1)^0,w,c
  5653  000712  022A               	mulwf	___flmul@b^0,c
  5654  000714  006F FFCC  F0AA    	movff	prodl,___flmul@temp
  5655  00071A  006F FFD0  F0AB    	movff	prodh,___flmul@temp+1
  5656  000720                     
  5657                           ; BSR set to: 0
  5658  000720  51AA               	movf	___flmul@temp& (0+255),w,b
  5659  000722  27A1               	addwf	___flmul@grs& (0+255),f,b
  5660  000724  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  5661  000726  23A2               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5662  000728  0E00               	movlw	0
  5663  00072A  23A3               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5664  00072C  0E00               	movlw	0
  5665  00072E  23A4               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5666  000730                     
  5667                           ; BSR set to: 0
  5668  000730  C0A3  F0A4         	movff	___flmul@grs+2,___flmul@grs+3
  5669  000734  C0A2  F0A3         	movff	___flmul@grs+1,___flmul@grs+2
  5670  000738  C0A1  F0A2         	movff	___flmul@grs,___flmul@grs+1
  5671  00073C  6BA1               	clrf	___flmul@grs& (0+255),b
  5672  00073E  502E               	movf	___flmul@a^0,w,c
  5673  000740  022A               	mulwf	___flmul@b^0,c
  5674  000742  006F FFCC  F0AA    	movff	prodl,___flmul@temp
  5675  000748  006F FFD0  F0AB    	movff	prodh,___flmul@temp+1
  5676  00074E                     
  5677                           ; BSR set to: 0
  5678  00074E  51AA               	movf	___flmul@temp& (0+255),w,b
  5679  000750  27A1               	addwf	___flmul@grs& (0+255),f,b
  5680  000752  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  5681  000754  23A2               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5682  000756  0E00               	movlw	0
  5683  000758  23A3               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5684  00075A  0E00               	movlw	0
  5685  00075C  23A4               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5686  00075E                     
  5687                           ; BSR set to: 0
  5688  00075E  5030               	movf	(___flmul@a+2)^0,w,c
  5689  000760  022B               	mulwf	(___flmul@b+1)^0,c
  5690  000762  006F FFCC  F0AA    	movff	prodl,___flmul@temp
  5691  000768  006F FFD0  F0AB    	movff	prodh,___flmul@temp+1
  5692  00076E  51AA               	movf	___flmul@temp& (0+255),w,b
  5693  000770  27A6               	addwf	___flmul@prod& (0+255),f,b
  5694  000772  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  5695  000774  23A7               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5696  000776  0E00               	movlw	0
  5697  000778  23A8               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5698  00077A  0E00               	movlw	0
  5699  00077C  23A9               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5700  00077E                     
  5701                           ; BSR set to: 0
  5702  00077E  502F               	movf	(___flmul@a+1)^0,w,c
  5703  000780  022C               	mulwf	(___flmul@b+2)^0,c
  5704  000782  006F FFCC  F0AA    	movff	prodl,___flmul@temp
  5705  000788  006F FFD0  F0AB    	movff	prodh,___flmul@temp+1
  5706  00078E                     
  5707                           ; BSR set to: 0
  5708  00078E  51AA               	movf	___flmul@temp& (0+255),w,b
  5709  000790  27A6               	addwf	___flmul@prod& (0+255),f,b
  5710  000792  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  5711  000794  23A7               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5712  000796  0E00               	movlw	0
  5713  000798  23A8               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5714  00079A  0E00               	movlw	0
  5715  00079C  23A9               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5716  00079E  5030               	movf	(___flmul@a+2)^0,w,c
  5717  0007A0  022C               	mulwf	(___flmul@b+2)^0,c
  5718  0007A2  006F FFCC  F0AA    	movff	prodl,___flmul@temp
  5719  0007A8  006F FFD0  F0AB    	movff	prodh,___flmul@temp+1
  5720  0007AE                     
  5721                           ; BSR set to: 0
  5722  0007AE  51AA               	movf	___flmul@temp& (0+255),w,b
  5723  0007B0  6E32               	movwf	??___flmul^0,c
  5724  0007B2  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  5725  0007B4  6E33               	movwf	(??___flmul+1)^0,c
  5726  0007B6  6A34               	clrf	(??___flmul+2)^0,c
  5727  0007B8  6A35               	clrf	(??___flmul+3)^0,c
  5728  0007BA  C034  F035         	movff	??___flmul+2,??___flmul+3
  5729  0007BE  C033  F034         	movff	??___flmul+1,??___flmul+2
  5730  0007C2  C032  F033         	movff	??___flmul,??___flmul+1
  5731  0007C6  6A32               	clrf	??___flmul^0,c
  5732  0007C8  5032               	movf	??___flmul^0,w,c
  5733  0007CA  27A6               	addwf	___flmul@prod& (0+255),f,b
  5734  0007CC  5033               	movf	(??___flmul+1)^0,w,c
  5735  0007CE  23A7               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5736  0007D0  5034               	movf	(??___flmul+2)^0,w,c
  5737  0007D2  23A8               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5738  0007D4  5035               	movf	(??___flmul+3)^0,w,c
  5739  0007D6  23A9               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5740  0007D8                     
  5741                           ; BSR set to: 0
  5742  0007D8  C0A1  F032         	movff	___flmul@grs,??___flmul
  5743  0007DC  C0A2  F033         	movff	___flmul@grs+1,??___flmul+1
  5744  0007E0  C0A3  F034         	movff	___flmul@grs+2,??___flmul+2
  5745  0007E4  C0A4  F035         	movff	___flmul@grs+3,??___flmul+3
  5746  0007E8  0E19               	movlw	25
  5747  0007EA  EFFC  F003         	goto	u3810
  5748  0007EE                     u3815:
  5749  0007EE  90D8               	bcf	status,0,c
  5750  0007F0  3235               	rrcf	(??___flmul+3)^0,f,c
  5751  0007F2  3234               	rrcf	(??___flmul+2)^0,f,c
  5752  0007F4  3233               	rrcf	(??___flmul+1)^0,f,c
  5753  0007F6  3232               	rrcf	??___flmul^0,f,c
  5754  0007F8                     u3810:
  5755  0007F8  2EE8               	decfsz	wreg,f,c
  5756  0007FA  EFF7  F003         	goto	u3815
  5757  0007FE  5032               	movf	??___flmul^0,w,c
  5758  000800  27A6               	addwf	___flmul@prod& (0+255),f,b
  5759  000802  5033               	movf	(??___flmul+1)^0,w,c
  5760  000804  23A7               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5761  000806  5034               	movf	(??___flmul+2)^0,w,c
  5762  000808  23A8               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5763  00080A  5035               	movf	(??___flmul+3)^0,w,c
  5764  00080C  23A9               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5765  00080E                     
  5766                           ; BSR set to: 0
  5767  00080E  C0A3  F0A4         	movff	___flmul@grs+2,___flmul@grs+3
  5768  000812  C0A2  F0A3         	movff	___flmul@grs+1,___flmul@grs+2
  5769  000816  C0A1  F0A2         	movff	___flmul@grs,___flmul@grs+1
  5770  00081A  6BA1               	clrf	___flmul@grs& (0+255),b
  5771  00081C                     
  5772                           ; BSR set to: 0
  5773  00081C  51A0               	movf	___flmul@aexp& (0+255),w,b
  5774  00081E  C0A5  F032         	movff	___flmul@bexp,??___flmul
  5775  000822  6A33               	clrf	(??___flmul+1)^0,c
  5776  000824  2632               	addwf	??___flmul^0,f,c
  5777  000826  0E00               	movlw	0
  5778  000828  2233               	addwfc	(??___flmul+1)^0,f,c
  5779  00082A  0E82               	movlw	130
  5780  00082C  2432               	addwf	??___flmul^0,w,c
  5781  00082E  6FAA               	movwf	___flmul@temp& (0+255),b
  5782  000830  0EFF               	movlw	255
  5783  000832  2033               	addwfc	(??___flmul+1)^0,w,c
  5784  000834  6FAB               	movwf	(___flmul@temp+1)& (0+255),b
  5785  000836  EF32  F004         	goto	l5272
  5786  00083A                     l5266:
  5787                           
  5788                           ; BSR set to: 0
  5789  00083A  90D8               	bcf	status,0,c
  5790  00083C  37A6               	rlcf	___flmul@prod& (0+255),f,b
  5791  00083E  37A7               	rlcf	(___flmul@prod+1)& (0+255),f,b
  5792  000840  37A8               	rlcf	(___flmul@prod+2)& (0+255),f,b
  5793  000842  37A9               	rlcf	(___flmul@prod+3)& (0+255),f,b
  5794  000844                     
  5795                           ; BSR set to: 0
  5796  000844  AFA4               	btfss	(___flmul@grs+3)& (0+255),7,b
  5797  000846  EF27  F004         	goto	u3821
  5798  00084A  EF29  F004         	goto	u3820
  5799  00084E                     u3821:
  5800  00084E  EF2A  F004         	goto	l1998
  5801  000852                     u3820:
  5802  000852                     
  5803                           ; BSR set to: 0
  5804  000852  81A6               	bsf	___flmul@prod& (0+255),0,b
  5805  000854                     l1998:
  5806                           
  5807                           ; BSR set to: 0
  5808  000854  90D8               	bcf	status,0,c
  5809  000856  37A1               	rlcf	___flmul@grs& (0+255),f,b
  5810  000858  37A2               	rlcf	(___flmul@grs+1)& (0+255),f,b
  5811  00085A  37A3               	rlcf	(___flmul@grs+2)& (0+255),f,b
  5812  00085C  37A4               	rlcf	(___flmul@grs+3)& (0+255),f,b
  5813  00085E  07AA               	decf	___flmul@temp& (0+255),f,b
  5814  000860  A0D8               	btfss	status,0,c
  5815  000862  07AB               	decf	(___flmul@temp+1)& (0+255),f,b
  5816  000864                     l5272:
  5817                           
  5818                           ; BSR set to: 0
  5819  000864  AFA8               	btfss	(___flmul@prod+2)& (0+255),7,b
  5820  000866  EF37  F004         	goto	u3831
  5821  00086A  EF39  F004         	goto	u3830
  5822  00086E                     u3831:
  5823  00086E  EF1D  F004         	goto	l5266
  5824  000872                     u3830:
  5825  000872                     
  5826                           ; BSR set to: 0
  5827  000872  0E00               	movlw	0
  5828  000874  6FA0               	movwf	___flmul@aexp& (0+255),b
  5829  000876                     
  5830                           ; BSR set to: 0
  5831  000876  AFA4               	btfss	(___flmul@grs+3)& (0+255),7,b
  5832  000878  EF40  F004         	goto	u3841
  5833  00087C  EF42  F004         	goto	u3840
  5834  000880                     u3841:
  5835  000880  EF66  F004         	goto	l2000
  5836  000884                     u3840:
  5837  000884                     
  5838                           ; BSR set to: 0
  5839  000884  0EFF               	movlw	255
  5840  000886  15A1               	andwf	___flmul@grs& (0+255),w,b
  5841  000888  6E32               	movwf	??___flmul^0,c
  5842  00088A  0EFF               	movlw	255
  5843  00088C  15A2               	andwf	(___flmul@grs+1)& (0+255),w,b
  5844  00088E  6E33               	movwf	(??___flmul+1)^0,c
  5845  000890  0EFF               	movlw	255
  5846  000892  15A3               	andwf	(___flmul@grs+2)& (0+255),w,b
  5847  000894  6E34               	movwf	(??___flmul+2)^0,c
  5848  000896  0E7F               	movlw	127
  5849  000898  15A4               	andwf	(___flmul@grs+3)& (0+255),w,b
  5850  00089A  6E35               	movwf	(??___flmul+3)^0,c
  5851  00089C  5032               	movf	??___flmul^0,w,c
  5852  00089E  1033               	iorwf	(??___flmul+1)^0,w,c
  5853  0008A0  1034               	iorwf	(??___flmul+2)^0,w,c
  5854  0008A2  1035               	iorwf	(??___flmul+3)^0,w,c
  5855  0008A4  B4D8               	btfsc	status,2,c
  5856  0008A6  EF57  F004         	goto	u3851
  5857  0008AA  EF59  F004         	goto	u3850
  5858  0008AE                     u3851:
  5859  0008AE  EF5D  F004         	goto	l2001
  5860  0008B2                     u3850:
  5861  0008B2                     l5280:
  5862                           
  5863                           ; BSR set to: 0
  5864  0008B2  0E01               	movlw	1
  5865  0008B4  6FA0               	movwf	___flmul@aexp& (0+255),b
  5866  0008B6  EF66  F004         	goto	l2000
  5867  0008BA                     l2001:
  5868                           
  5869                           ; BSR set to: 0
  5870  0008BA  A1A6               	btfss	___flmul@prod& (0+255),0,b
  5871  0008BC  EF62  F004         	goto	u3861
  5872  0008C0  EF64  F004         	goto	u3860
  5873  0008C4                     u3861:
  5874  0008C4  EF66  F004         	goto	l2000
  5875  0008C8                     u3860:
  5876  0008C8  EF59  F004         	goto	l5280
  5877  0008CC                     l2000:
  5878                           
  5879                           ; BSR set to: 0
  5880  0008CC  51A0               	movf	___flmul@aexp& (0+255),w,b
  5881  0008CE  B4D8               	btfsc	status,2,c
  5882  0008D0  EF6C  F004         	goto	u3871
  5883  0008D4  EF6E  F004         	goto	u3870
  5884  0008D8                     u3871:
  5885  0008D8  EF92  F004         	goto	l5292
  5886  0008DC                     u3870:
  5887  0008DC                     
  5888                           ; BSR set to: 0
  5889  0008DC  0E01               	movlw	1
  5890  0008DE  27A6               	addwf	___flmul@prod& (0+255),f,b
  5891  0008E0  0E00               	movlw	0
  5892  0008E2  23A7               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5893  0008E4  23A8               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5894  0008E6  23A9               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5895  0008E8                     
  5896                           ; BSR set to: 0
  5897  0008E8  A1A9               	btfss	(___flmul@prod+3)& (0+255),0,b
  5898  0008EA  EF79  F004         	goto	u3881
  5899  0008EE  EF7B  F004         	goto	u3880
  5900  0008F2                     u3881:
  5901  0008F2  EF92  F004         	goto	l5292
  5902  0008F6                     u3880:
  5903  0008F6                     
  5904                           ; BSR set to: 0
  5905  0008F6  C0A6  F032         	movff	___flmul@prod,??___flmul
  5906  0008FA  C0A7  F033         	movff	___flmul@prod+1,??___flmul+1
  5907  0008FE  C0A8  F034         	movff	___flmul@prod+2,??___flmul+2
  5908  000902  C0A9  F035         	movff	___flmul@prod+3,??___flmul+3
  5909  000906  3435               	rlcf	(??___flmul+3)^0,w,c
  5910  000908  3235               	rrcf	(??___flmul+3)^0,f,c
  5911  00090A  3234               	rrcf	(??___flmul+2)^0,f,c
  5912  00090C  3233               	rrcf	(??___flmul+1)^0,f,c
  5913  00090E  3232               	rrcf	??___flmul^0,f,c
  5914  000910  C032  F0A6         	movff	??___flmul,___flmul@prod
  5915  000914  C033  F0A7         	movff	??___flmul+1,___flmul@prod+1
  5916  000918  C034  F0A8         	movff	??___flmul+2,___flmul@prod+2
  5917  00091C  C035  F0A9         	movff	??___flmul+3,___flmul@prod+3
  5918  000920                     
  5919                           ; BSR set to: 0
  5920  000920  4BAA               	infsnz	___flmul@temp& (0+255),f,b
  5921  000922  2BAB               	incf	(___flmul@temp+1)& (0+255),f,b
  5922  000924                     l5292:
  5923                           
  5924                           ; BSR set to: 0
  5925  000924  BFAB               	btfsc	(___flmul@temp+1)& (0+255),7,b
  5926  000926  EF9D  F004         	goto	u3891
  5927  00092A  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  5928  00092C  E108               	bnz	u3890
  5929  00092E  29AA               	incf	___flmul@temp& (0+255),w,b
  5930  000930  A0D8               	btfss	status,0,c
  5931  000932  EF9D  F004         	goto	u3891
  5932  000936  EF9F  F004         	goto	u3890
  5933  00093A                     u3891:
  5934  00093A  EFA9  F004         	goto	l5296
  5935  00093E                     u3890:
  5936  00093E                     
  5937                           ; BSR set to: 0
  5938  00093E  0E00               	movlw	0
  5939  000940  6FA6               	movwf	___flmul@prod& (0+255),b
  5940  000942  0E00               	movlw	0
  5941  000944  6FA7               	movwf	(___flmul@prod+1)& (0+255),b
  5942  000946  0E80               	movlw	128
  5943  000948  6FA8               	movwf	(___flmul@prod+2)& (0+255),b
  5944  00094A  0E7F               	movlw	127
  5945  00094C  6FA9               	movwf	(___flmul@prod+3)& (0+255),b
  5946  00094E  EFD7  F004         	goto	l5308
  5947  000952                     l5296:
  5948                           
  5949                           ; BSR set to: 0
  5950  000952  BFAB               	btfsc	(___flmul@temp+1)& (0+255),7,b
  5951  000954  EFB6  F004         	goto	u3900
  5952  000958  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  5953  00095A  E106               	bnz	u3901
  5954  00095C  05AA               	decf	___flmul@temp& (0+255),w,b
  5955  00095E  B0D8               	btfsc	status,0,c
  5956  000960  EFB4  F004         	goto	u3901
  5957  000964  EFB6  F004         	goto	u3900
  5958  000968                     u3901:
  5959  000968  EFC2  F004         	goto	l2008
  5960  00096C                     u3900:
  5961  00096C                     
  5962                           ; BSR set to: 0
  5963  00096C  0E00               	movlw	0
  5964  00096E  6FA6               	movwf	___flmul@prod& (0+255),b
  5965  000970  0E00               	movlw	0
  5966  000972  6FA7               	movwf	(___flmul@prod+1)& (0+255),b
  5967  000974  0E00               	movlw	0
  5968  000976  6FA8               	movwf	(___flmul@prod+2)& (0+255),b
  5969  000978  0E00               	movlw	0
  5970  00097A  6FA9               	movwf	(___flmul@prod+3)& (0+255),b
  5971  00097C  0E00               	movlw	0
  5972  00097E  6F9F               	movwf	___flmul@sign& (0+255),b
  5973  000980  EFD7  F004         	goto	l5308
  5974  000984                     l2008:
  5975                           
  5976                           ; BSR set to: 0
  5977  000984  C0AA  F0A5         	movff	___flmul@temp,___flmul@bexp
  5978  000988                     
  5979                           ; BSR set to: 0
  5980  000988  0EFF               	movlw	255
  5981  00098A  17A6               	andwf	___flmul@prod& (0+255),f,b
  5982  00098C  0EFF               	movlw	255
  5983  00098E  17A7               	andwf	(___flmul@prod+1)& (0+255),f,b
  5984  000990  0E7F               	movlw	127
  5985  000992  17A8               	andwf	(___flmul@prod+2)& (0+255),f,b
  5986  000994  0E00               	movlw	0
  5987  000996  17A9               	andwf	(___flmul@prod+3)& (0+255),f,b
  5988  000998                     
  5989                           ; BSR set to: 0
  5990  000998  A1A5               	btfss	___flmul@bexp& (0+255),0,b
  5991  00099A  EFD1  F004         	goto	u3911
  5992  00099E  EFD3  F004         	goto	u3910
  5993  0009A2                     u3911:
  5994  0009A2  EFD4  F004         	goto	l5306
  5995  0009A6                     u3910:
  5996  0009A6                     
  5997                           ; BSR set to: 0
  5998  0009A6  8FA8               	bsf	(___flmul@prod+2)& (0+255),7,b
  5999  0009A8                     l5306:
  6000                           
  6001                           ; BSR set to: 0
  6002  0009A8  90D8               	bcf	status,0,c
  6003  0009AA  31A5               	rrcf	___flmul@bexp& (0+255),w,b
  6004  0009AC  6FA9               	movwf	(___flmul@prod+3)& (0+255),b
  6005  0009AE                     l5308:
  6006                           
  6007                           ; BSR set to: 0
  6008  0009AE  519F               	movf	___flmul@sign& (0+255),w,b
  6009  0009B0  13A9               	iorwf	(___flmul@prod+3)& (0+255),f,b
  6010  0009B2                     
  6011                           ; BSR set to: 0
  6012  0009B2  C0A6  F02A         	movff	___flmul@prod,?___flmul
  6013  0009B6  C0A7  F02B         	movff	___flmul@prod+1,?___flmul+1
  6014  0009BA  C0A8  F02C         	movff	___flmul@prod+2,?___flmul+2
  6015  0009BE  C0A9  F02D         	movff	___flmul@prod+3,?___flmul+3
  6016  0009C2                     l1995:
  6017                           
  6018                           ; BSR set to: 0
  6019  0009C2  0012               	return		;funcret
  6020  0009C4                     __end_of___flmul:
  6021                           	callstack 0
  6022                           
  6023 ;; *************** function ___awdiv *****************
  6024 ;; Defined at:
  6025 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  6026 ;; Parameters:    Size  Location     Type
  6027 ;;  dividend        2   19[COMRAM] int 
  6028 ;;  divisor         2   21[COMRAM] int 
  6029 ;; Auto vars:     Size  Location     Type
  6030 ;;  quotient        2   25[COMRAM] int 
  6031 ;;  sign            1   24[COMRAM] unsigned char 
  6032 ;;  counter         1   23[COMRAM] unsigned char 
  6033 ;; Return value:  Size  Location     Type
  6034 ;;                  2   19[COMRAM] int 
  6035 ;; Registers used:
  6036 ;;		wreg, status,2, status,0
  6037 ;; Tracked objects:
  6038 ;;		On entry : 0/0
  6039 ;;		On exit  : 0/0
  6040 ;;		Unchanged: 0/0
  6041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6042 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6043 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6045 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6046 ;;Total ram usage:        8 bytes
  6047 ;; Hardware stack levels used: 1
  6048 ;; Hardware stack levels required when called: 8
  6049 ;; This function calls:
  6050 ;;		Nothing
  6051 ;; This function is called by:
  6052 ;;		_calcSteering
  6053 ;;		_calcMotorPow
  6054 ;;		_setSteering
  6055 ;; This function uses a non-reentrant model
  6056 ;;
  6057                           
  6058                           	psect	text21
  6059  001CA6                     __ptext21:
  6060                           	callstack 0
  6061  001CA6                     ___awdiv:
  6062                           	callstack 19
  6063  001CA6  0E00               	movlw	0
  6064  001CA8  6E19               	movwf	___awdiv@sign^0,c
  6065  001CAA  BE17               	btfsc	(___awdiv@divisor+1)^0,7,c
  6066  001CAC  EF5C  F00E         	goto	u1910
  6067  001CB0  EF5A  F00E         	goto	u1911
  6068  001CB4                     u1911:
  6069  001CB4  EF62  F00E         	goto	l3766
  6070  001CB8                     u1910:
  6071  001CB8  6C16               	negf	___awdiv@divisor^0,c
  6072  001CBA  1E17               	comf	(___awdiv@divisor+1)^0,f,c
  6073  001CBC  B0D8               	btfsc	status,0,c
  6074  001CBE  2A17               	incf	(___awdiv@divisor+1)^0,f,c
  6075  001CC0  0E01               	movlw	1
  6076  001CC2  6E19               	movwf	___awdiv@sign^0,c
  6077  001CC4                     l3766:
  6078  001CC4  BE15               	btfsc	(___awdiv@dividend+1)^0,7,c
  6079  001CC6  EF69  F00E         	goto	u1920
  6080  001CCA  EF67  F00E         	goto	u1921
  6081  001CCE                     u1921:
  6082  001CCE  EF6F  F00E         	goto	l3772
  6083  001CD2                     u1920:
  6084  001CD2  6C14               	negf	___awdiv@dividend^0,c
  6085  001CD4  1E15               	comf	(___awdiv@dividend+1)^0,f,c
  6086  001CD6  B0D8               	btfsc	status,0,c
  6087  001CD8  2A15               	incf	(___awdiv@dividend+1)^0,f,c
  6088  001CDA  0E01               	movlw	1
  6089  001CDC  1A19               	xorwf	___awdiv@sign^0,f,c
  6090  001CDE                     l3772:
  6091  001CDE  0E00               	movlw	0
  6092  001CE0  6E1B               	movwf	(___awdiv@quotient+1)^0,c
  6093  001CE2  0E00               	movlw	0
  6094  001CE4  6E1A               	movwf	___awdiv@quotient^0,c
  6095  001CE6  5016               	movf	___awdiv@divisor^0,w,c
  6096  001CE8  1017               	iorwf	(___awdiv@divisor+1)^0,w,c
  6097  001CEA  B4D8               	btfsc	status,2,c
  6098  001CEC  EF7A  F00E         	goto	u1931
  6099  001CF0  EF7C  F00E         	goto	u1930
  6100  001CF4                     u1931:
  6101  001CF4  EFA4  F00E         	goto	l3794
  6102  001CF8                     u1930:
  6103  001CF8  0E01               	movlw	1
  6104  001CFA  6E18               	movwf	___awdiv@counter^0,c
  6105  001CFC  EF84  F00E         	goto	l3780
  6106  001D00                     l3778:
  6107  001D00  90D8               	bcf	status,0,c
  6108  001D02  3616               	rlcf	___awdiv@divisor^0,f,c
  6109  001D04  3617               	rlcf	(___awdiv@divisor+1)^0,f,c
  6110  001D06  2A18               	incf	___awdiv@counter^0,f,c
  6111  001D08                     l3780:
  6112  001D08  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
  6113  001D0A  EF89  F00E         	goto	u1941
  6114  001D0E  EF8B  F00E         	goto	u1940
  6115  001D12                     u1941:
  6116  001D12  EF80  F00E         	goto	l3778
  6117  001D16                     u1940:
  6118  001D16                     l3782:
  6119  001D16  90D8               	bcf	status,0,c
  6120  001D18  361A               	rlcf	___awdiv@quotient^0,f,c
  6121  001D1A  361B               	rlcf	(___awdiv@quotient+1)^0,f,c
  6122  001D1C  5016               	movf	___awdiv@divisor^0,w,c
  6123  001D1E  5C14               	subwf	___awdiv@dividend^0,w,c
  6124  001D20  5017               	movf	(___awdiv@divisor+1)^0,w,c
  6125  001D22  5815               	subwfb	(___awdiv@dividend+1)^0,w,c
  6126  001D24  A0D8               	btfss	status,0,c
  6127  001D26  EF97  F00E         	goto	u1951
  6128  001D2A  EF99  F00E         	goto	u1950
  6129  001D2E                     u1951:
  6130  001D2E  EF9E  F00E         	goto	l3790
  6131  001D32                     u1950:
  6132  001D32  5016               	movf	___awdiv@divisor^0,w,c
  6133  001D34  5E14               	subwf	___awdiv@dividend^0,f,c
  6134  001D36  5017               	movf	(___awdiv@divisor+1)^0,w,c
  6135  001D38  5A15               	subwfb	(___awdiv@dividend+1)^0,f,c
  6136  001D3A  801A               	bsf	___awdiv@quotient^0,0,c
  6137  001D3C                     l3790:
  6138  001D3C  90D8               	bcf	status,0,c
  6139  001D3E  3217               	rrcf	(___awdiv@divisor+1)^0,f,c
  6140  001D40  3216               	rrcf	___awdiv@divisor^0,f,c
  6141  001D42  2E18               	decfsz	___awdiv@counter^0,f,c
  6142  001D44  EF8B  F00E         	goto	l3782
  6143  001D48                     l3794:
  6144  001D48  5019               	movf	___awdiv@sign^0,w,c
  6145  001D4A  B4D8               	btfsc	status,2,c
  6146  001D4C  EFAA  F00E         	goto	u1961
  6147  001D50  EFAC  F00E         	goto	u1960
  6148  001D54                     u1961:
  6149  001D54  EFB0  F00E         	goto	l3798
  6150  001D58                     u1960:
  6151  001D58  6C1A               	negf	___awdiv@quotient^0,c
  6152  001D5A  1E1B               	comf	(___awdiv@quotient+1)^0,f,c
  6153  001D5C  B0D8               	btfsc	status,0,c
  6154  001D5E  2A1B               	incf	(___awdiv@quotient+1)^0,f,c
  6155  001D60                     l3798:
  6156  001D60  C01A  F014         	movff	___awdiv@quotient,?___awdiv
  6157  001D64  C01B  F015         	movff	___awdiv@quotient+1,?___awdiv+1
  6158  001D68  0012               	return		;funcret
  6159  001D6A                     __end_of___awdiv:
  6160                           	callstack 0
  6161                           
  6162 ;; *************** function _SYSTEM_Initialize *****************
  6163 ;; Defined at:
  6164 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6165 ;; Parameters:    Size  Location     Type
  6166 ;;		None
  6167 ;; Auto vars:     Size  Location     Type
  6168 ;;		None
  6169 ;; Return value:  Size  Location     Type
  6170 ;;                  1    wreg      void 
  6171 ;; Registers used:
  6172 ;;		wreg, status,2, status,0, cstack
  6173 ;; Tracked objects:
  6174 ;;		On entry : 0/0
  6175 ;;		On exit  : 0/0
  6176 ;;		Unchanged: 0/0
  6177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6182 ;;Total ram usage:        0 bytes
  6183 ;; Hardware stack levels used: 1
  6184 ;; Hardware stack levels required when called: 10
  6185 ;; This function calls:
  6186 ;;		_ADCC_Initialize
  6187 ;;		_CCP3_Initialize
  6188 ;;		_CCP4_Initialize
  6189 ;;		_CLC3_Initialize
  6190 ;;		_INTERRUPT_Initialize
  6191 ;;		_OSCILLATOR_Initialize
  6192 ;;		_PIN_MANAGER_Initialize
  6193 ;;		_PMD_Initialize
  6194 ;;		_PWM5_Initialize
  6195 ;;		_PWM6_Initialize
  6196 ;;		_PWM7_Initialize
  6197 ;;		_PWM8_Initialize
  6198 ;;		_SMT1_Initialize
  6199 ;;		_TMR2_Initialize
  6200 ;;		_TMR3_Initialize
  6201 ;;		_TMR4_Initialize
  6202 ;;		_TMR5_Initialize
  6203 ;;		_UART1_Initialize
  6204 ;; This function is called by:
  6205 ;;		_main
  6206 ;; This function uses a non-reentrant model
  6207 ;;
  6208                           
  6209                           	psect	text22
  6210  002050                     __ptext22:
  6211                           	callstack 0
  6212  002050                     _SYSTEM_Initialize:
  6213                           	callstack 20
  6214  002050                     
  6215                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  6216  002050  EC02  F010         	call	_INTERRUPT_Initialize	;wreg free
  6217                           
  6218                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  6219  002054  EC04  F013         	call	_PMD_Initialize	;wreg free
  6220                           
  6221                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  6222  002058  EC8B  F00D         	call	_PIN_MANAGER_Initialize	;wreg free
  6223                           
  6224                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  6225  00205C  EC84  F013         	call	_OSCILLATOR_Initialize	;wreg free
  6226  002060                     
  6227                           ;mcc_generated_files/mcc.c: 56:     CCP3_Initialize();
  6228  002060  EC81  F012         	call	_CCP3_Initialize	;wreg free
  6229  002064                     
  6230                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
  6231  002064  ECA9  F00F         	call	_ADCC_Initialize	;wreg free
  6232                           
  6233                           ;mcc_generated_files/mcc.c: 58:     TMR4_Initialize();
  6234  002068  EC98  F012         	call	_TMR4_Initialize	;wreg free
  6235  00206C                     
  6236                           ;mcc_generated_files/mcc.c: 59:     SMT1_Initialize();
  6237  00206C  EC0A  F012         	call	_SMT1_Initialize	;wreg free
  6238  002070                     
  6239                           ;mcc_generated_files/mcc.c: 60:     PWM8_Initialize();
  6240  002070  EC54  F013         	call	_PWM8_Initialize	;wreg free
  6241  002074                     
  6242                           ;mcc_generated_files/mcc.c: 61:     TMR2_Initialize();
  6243  002074  EC38  F013         	call	_TMR2_Initialize	;wreg free
  6244  002078                     
  6245                           ;mcc_generated_files/mcc.c: 62:     PWM6_Initialize();
  6246  002078  EC6C  F013         	call	_PWM6_Initialize	;wreg free
  6247                           
  6248                           ;mcc_generated_files/mcc.c: 63:     CCP4_Initialize();
  6249  00207C  EC6A  F012         	call	_CCP4_Initialize	;wreg free
  6250  002080                     
  6251                           ;mcc_generated_files/mcc.c: 64:     CLC3_Initialize();
  6252  002080  ECAE  F012         	call	_CLC3_Initialize	;wreg free
  6253  002084                     
  6254                           ;mcc_generated_files/mcc.c: 65:     TMR3_Initialize();
  6255  002084  EC18  F011         	call	_TMR3_Initialize	;wreg free
  6256                           
  6257                           ;mcc_generated_files/mcc.c: 66:     PWM5_Initialize();
  6258  002088  EC78  F013         	call	_PWM5_Initialize	;wreg free
  6259  00208C                     
  6260                           ;mcc_generated_files/mcc.c: 67:     TMR5_Initialize();
  6261  00208C  EC4D  F010         	call	_TMR5_Initialize	;wreg free
  6262  002090                     
  6263                           ;mcc_generated_files/mcc.c: 68:     PWM7_Initialize();
  6264  002090  EC60  F013         	call	_PWM7_Initialize	;wreg free
  6265                           
  6266                           ;mcc_generated_files/mcc.c: 69:     UART1_Initialize();
  6267  002094  EC0C  F00F         	call	_UART1_Initialize	;wreg free
  6268  002098  0012               	return		;funcret
  6269  00209A                     __end_of_SYSTEM_Initialize:
  6270                           	callstack 0
  6271                           
  6272 ;; *************** function _UART1_Initialize *****************
  6273 ;; Defined at:
  6274 ;;		line 87 in file "mcc_generated_files/uart1.c"
  6275 ;; Parameters:    Size  Location     Type
  6276 ;;		None
  6277 ;; Auto vars:     Size  Location     Type
  6278 ;;		None
  6279 ;; Return value:  Size  Location     Type
  6280 ;;                  1    wreg      void 
  6281 ;; Registers used:
  6282 ;;		wreg, status,2, status,0, cstack
  6283 ;; Tracked objects:
  6284 ;;		On entry : 0/0
  6285 ;;		On exit  : 0/0
  6286 ;;		Unchanged: 0/0
  6287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6292 ;;Total ram usage:        0 bytes
  6293 ;; Hardware stack levels used: 1
  6294 ;; Hardware stack levels required when called: 9
  6295 ;; This function calls:
  6296 ;;		_UART1_SetErrorHandler
  6297 ;;		_UART1_SetFramingErrorHandler
  6298 ;;		_UART1_SetOverrunErrorHandler
  6299 ;;		_UART1_SetRxInterruptHandler
  6300 ;;		_UART1_SetTxInterruptHandler
  6301 ;; This function is called by:
  6302 ;;		_SYSTEM_Initialize
  6303 ;; This function uses a non-reentrant model
  6304 ;;
  6305                           
  6306                           	psect	text23
  6307  001E18                     __ptext23:
  6308                           	callstack 0
  6309  001E18                     _UART1_Initialize:
  6310                           	callstack 20
  6311  001E18                     
  6312                           ;mcc_generated_files/uart1.c: 90:     PIE3bits.U1RXIE = 0;
  6313  001E18  0139               	movlb	57	; () banked
  6314  001E1A  9793               	bcf	147,3,b	;volatile
  6315  001E1C                     
  6316                           ; BSR set to: 57
  6317                           ;mcc_generated_files/uart1.c: 91:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
  6318  001E1C  0EE0               	movlw	low _UART1_Receive_ISR
  6319  001E1E  6E14               	movwf	UART1_SetRxInterruptHandler@InterruptHandler^0,c
  6320  001E20  0E1B               	movlw	high _UART1_Receive_ISR
  6321  001E22  6E15               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)^0,c
  6322  001E24  EC9C  F013         	call	_UART1_SetRxInterruptHandler	;wreg free
  6323  001E28                     
  6324                           ;mcc_generated_files/uart1.c: 92:     PIE3bits.U1TXIE = 0;
  6325  001E28  0139               	movlb	57	; () banked
  6326  001E2A  9993               	bcf	147,4,b	;volatile
  6327                           
  6328                           ;mcc_generated_files/uart1.c: 93:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
  6329  001E2C  0E2E               	movlw	low _UART1_Transmit_ISR
  6330  001E2E  6E14               	movwf	UART1_SetTxInterruptHandler@InterruptHandler^0,c
  6331  001E30  0E21               	movlw	high _UART1_Transmit_ISR
  6332  001E32  6E15               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)^0,c
  6333  001E34  EC97  F013         	call	_UART1_SetTxInterruptHandler	;wreg free
  6334  001E38                     
  6335                           ;mcc_generated_files/uart1.c: 98:     U1P1L = 0x00;
  6336  001E38  0E00               	movlw	0
  6337  001E3A  013D               	movlb	61	; () banked
  6338  001E3C  6FEC               	movwf	236,b	;volatile
  6339  001E3E                     
  6340                           ; BSR set to: 61
  6341                           ;mcc_generated_files/uart1.c: 101:     U1P1H = 0x00;
  6342  001E3E  0E00               	movlw	0
  6343  001E40  6FED               	movwf	237,b	;volatile
  6344  001E42                     
  6345                           ; BSR set to: 61
  6346                           ;mcc_generated_files/uart1.c: 104:     U1P2L = 0x00;
  6347  001E42  0E00               	movlw	0
  6348  001E44  6FEE               	movwf	238,b	;volatile
  6349  001E46                     
  6350                           ; BSR set to: 61
  6351                           ;mcc_generated_files/uart1.c: 107:     U1P2H = 0x00;
  6352  001E46  0E00               	movlw	0
  6353  001E48  6FEF               	movwf	239,b	;volatile
  6354  001E4A                     
  6355                           ; BSR set to: 61
  6356                           ;mcc_generated_files/uart1.c: 110:     U1P3L = 0x00;
  6357  001E4A  0E00               	movlw	0
  6358  001E4C  6FF0               	movwf	240,b	;volatile
  6359  001E4E                     
  6360                           ; BSR set to: 61
  6361                           ;mcc_generated_files/uart1.c: 113:     U1P3H = 0x00;
  6362  001E4E  0E00               	movlw	0
  6363  001E50  6FF1               	movwf	241,b	;volatile
  6364  001E52                     
  6365                           ; BSR set to: 61
  6366                           ;mcc_generated_files/uart1.c: 116:     U1CON0 = 0xB0;
  6367  001E52  0EB0               	movlw	176
  6368  001E54  6FF2               	movwf	242,b	;volatile
  6369  001E56                     
  6370                           ; BSR set to: 61
  6371                           ;mcc_generated_files/uart1.c: 119:     U1CON1 = 0x80;
  6372  001E56  0E80               	movlw	128
  6373  001E58  6FF3               	movwf	243,b	;volatile
  6374  001E5A                     
  6375                           ; BSR set to: 61
  6376                           ;mcc_generated_files/uart1.c: 122:     U1CON2 = 0x00;
  6377  001E5A  0E00               	movlw	0
  6378  001E5C  6FF4               	movwf	244,b	;volatile
  6379  001E5E                     
  6380                           ; BSR set to: 61
  6381                           ;mcc_generated_files/uart1.c: 125:     U1BRGL = 0x8A;
  6382  001E5E  0E8A               	movlw	138
  6383  001E60  6FF5               	movwf	245,b	;volatile
  6384  001E62                     
  6385                           ; BSR set to: 61
  6386                           ;mcc_generated_files/uart1.c: 128:     U1BRGH = 0x00;
  6387  001E62  0E00               	movlw	0
  6388  001E64  6FF6               	movwf	246,b	;volatile
  6389  001E66                     
  6390                           ; BSR set to: 61
  6391                           ;mcc_generated_files/uart1.c: 131:     U1FIFO = 0x00;
  6392  001E66  0E00               	movlw	0
  6393  001E68  6FF7               	movwf	247,b	;volatile
  6394  001E6A                     
  6395                           ; BSR set to: 61
  6396                           ;mcc_generated_files/uart1.c: 134:     U1UIR = 0x00;
  6397  001E6A  0E00               	movlw	0
  6398  001E6C  6FF8               	movwf	248,b	;volatile
  6399  001E6E                     
  6400                           ; BSR set to: 61
  6401                           ;mcc_generated_files/uart1.c: 137:     U1ERRIR = 0x00;
  6402  001E6E  0E00               	movlw	0
  6403  001E70  6FF9               	movwf	249,b	;volatile
  6404  001E72                     
  6405                           ; BSR set to: 61
  6406                           ;mcc_generated_files/uart1.c: 140:     U1ERRIE = 0x00;
  6407  001E72  0E00               	movlw	0
  6408  001E74  6FFA               	movwf	250,b	;volatile
  6409  001E76                     
  6410                           ; BSR set to: 61
  6411                           ;mcc_generated_files/uart1.c: 143:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
  6412  001E76  0E96               	movlw	low _UART1_DefaultFramingErrorHandler
  6413  001E78  6E14               	movwf	UART1_SetFramingErrorHandler@interruptHandler^0,c
  6414  001E7A  0E27               	movlw	high _UART1_DefaultFramingErrorHandler
  6415  001E7C  6E15               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  6416  001E7E  ECA6  F013         	call	_UART1_SetFramingErrorHandler	;wreg free
  6417  001E82                     
  6418                           ;mcc_generated_files/uart1.c: 144:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
  6419  001E82  0E94               	movlw	low _UART1_DefaultOverrunErrorHandler
  6420  001E84  6E14               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^0,c
  6421  001E86  0E27               	movlw	high _UART1_DefaultOverrunErrorHandler
  6422  001E88  6E15               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  6423  001E8A  ECA1  F013         	call	_UART1_SetOverrunErrorHandler	;wreg free
  6424  001E8E                     
  6425                           ;mcc_generated_files/uart1.c: 145:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
  6426  001E8E  0E88               	movlw	low _UART1_DefaultErrorHandler
  6427  001E90  6E14               	movwf	UART1_SetErrorHandler@interruptHandler^0,c
  6428  001E92  0E27               	movlw	high _UART1_DefaultErrorHandler
  6429  001E94  6E15               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^0,c
  6430  001E96  ECAB  F013         	call	_UART1_SetErrorHandler	;wreg free
  6431                           
  6432                           ;mcc_generated_files/uart1.c: 147:     uart1RxLastError.status = 0;
  6433  001E9A  0E00               	movlw	0
  6434  001E9C  6E40               	movwf	_uart1RxLastError^0,c	;volatile
  6435                           
  6436                           ;mcc_generated_files/uart1.c: 150:     uart1TxHead = 0;
  6437  001E9E  0E00               	movlw	0
  6438  001EA0  6E45               	movwf	_uart1TxHead^0,c	;volatile
  6439                           
  6440                           ;mcc_generated_files/uart1.c: 151:     uart1TxTail = 0;
  6441  001EA2  0E00               	movlw	0
  6442  001EA4  6E44               	movwf	_uart1TxTail^0,c	;volatile
  6443                           
  6444                           ;mcc_generated_files/uart1.c: 152:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
  6445  001EA6  0E08               	movlw	8
  6446  001EA8  0100               	movlb	0	; () banked
  6447  001EAA  6FE2               	movwf	_uart1TxBufferRemaining& (0+255),b	;volatile
  6448                           
  6449                           ;mcc_generated_files/uart1.c: 153:     uart1RxHead = 0;
  6450  001EAC  0E00               	movlw	0
  6451  001EAE  6E43               	movwf	_uart1RxHead^0,c	;volatile
  6452                           
  6453                           ;mcc_generated_files/uart1.c: 154:     uart1RxTail = 0;
  6454  001EB0  0E00               	movlw	0
  6455  001EB2  6E42               	movwf	_uart1RxTail^0,c	;volatile
  6456                           
  6457                           ;mcc_generated_files/uart1.c: 155:     uart1RxCount = 0;
  6458  001EB4  0E00               	movlw	0
  6459  001EB6  6E41               	movwf	_uart1RxCount^0,c	;volatile
  6460  001EB8                     
  6461                           ; BSR set to: 0
  6462                           ;mcc_generated_files/uart1.c: 158:     PIE3bits.U1RXIE = 1;
  6463  001EB8  0139               	movlb	57	; () banked
  6464  001EBA  8793               	bsf	147,3,b	;volatile
  6465  001EBC                     
  6466                           ; BSR set to: 57
  6467  001EBC  0012               	return		;funcret
  6468  001EBE                     __end_of_UART1_Initialize:
  6469                           	callstack 0
  6470                           
  6471 ;; *************** function _UART1_SetTxInterruptHandler *****************
  6472 ;; Defined at:
  6473 ;;		line 333 in file "mcc_generated_files/uart1.c"
  6474 ;; Parameters:    Size  Location     Type
  6475 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
  6476 ;;		 -> UART1_Transmit_ISR(1), 
  6477 ;; Auto vars:     Size  Location     Type
  6478 ;;		None
  6479 ;; Return value:  Size  Location     Type
  6480 ;;                  1    wreg      void 
  6481 ;; Registers used:
  6482 ;;		wreg, status,2, status,0
  6483 ;; Tracked objects:
  6484 ;;		On entry : 0/0
  6485 ;;		On exit  : 0/0
  6486 ;;		Unchanged: 0/0
  6487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6488 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6491 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6492 ;;Total ram usage:        2 bytes
  6493 ;; Hardware stack levels used: 1
  6494 ;; Hardware stack levels required when called: 8
  6495 ;; This function calls:
  6496 ;;		Nothing
  6497 ;; This function is called by:
  6498 ;;		_UART1_Initialize
  6499 ;; This function uses a non-reentrant model
  6500 ;;
  6501                           
  6502                           	psect	text24
  6503  00272E                     __ptext24:
  6504                           	callstack 0
  6505  00272E                     _UART1_SetTxInterruptHandler:
  6506                           	callstack 20
  6507  00272E                     
  6508                           ;mcc_generated_files/uart1.c: 334:     UART1_TxInterruptHandler = InterruptHandler;
  6509  00272E  C014  F0DE         	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
  6510  002732  C015  F0DF         	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
  6511  002736  0012               	return		;funcret
  6512  002738                     __end_of_UART1_SetTxInterruptHandler:
  6513                           	callstack 0
  6514                           
  6515 ;; *************** function _UART1_SetRxInterruptHandler *****************
  6516 ;; Defined at:
  6517 ;;		line 329 in file "mcc_generated_files/uart1.c"
  6518 ;; Parameters:    Size  Location     Type
  6519 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
  6520 ;;		 -> UART1_Receive_ISR(1), 
  6521 ;; Auto vars:     Size  Location     Type
  6522 ;;		None
  6523 ;; Return value:  Size  Location     Type
  6524 ;;                  1    wreg      void 
  6525 ;; Registers used:
  6526 ;;		wreg, status,2, status,0
  6527 ;; Tracked objects:
  6528 ;;		On entry : 0/0
  6529 ;;		On exit  : 0/0
  6530 ;;		Unchanged: 0/0
  6531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6532 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6535 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6536 ;;Total ram usage:        2 bytes
  6537 ;; Hardware stack levels used: 1
  6538 ;; Hardware stack levels required when called: 8
  6539 ;; This function calls:
  6540 ;;		Nothing
  6541 ;; This function is called by:
  6542 ;;		_UART1_Initialize
  6543 ;; This function uses a non-reentrant model
  6544 ;;
  6545                           
  6546                           	psect	text25
  6547  002738                     __ptext25:
  6548                           	callstack 0
  6549  002738                     _UART1_SetRxInterruptHandler:
  6550                           	callstack 20
  6551  002738                     
  6552                           ;mcc_generated_files/uart1.c: 330:     UART1_RxInterruptHandler = InterruptHandler;
  6553  002738  C014  F0E0         	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
  6554  00273C  C015  F0E1         	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
  6555  002740  0012               	return		;funcret
  6556  002742                     __end_of_UART1_SetRxInterruptHandler:
  6557                           	callstack 0
  6558                           
  6559 ;; *************** function _UART1_SetOverrunErrorHandler *****************
  6560 ;; Defined at:
  6561 ;;		line 319 in file "mcc_generated_files/uart1.c"
  6562 ;; Parameters:    Size  Location     Type
  6563 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
  6564 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
  6565 ;; Auto vars:     Size  Location     Type
  6566 ;;		None
  6567 ;; Return value:  Size  Location     Type
  6568 ;;                  1    wreg      void 
  6569 ;; Registers used:
  6570 ;;		wreg, status,2, status,0
  6571 ;; Tracked objects:
  6572 ;;		On entry : 0/0
  6573 ;;		On exit  : 0/0
  6574 ;;		Unchanged: 0/0
  6575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6576 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6579 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6580 ;;Total ram usage:        2 bytes
  6581 ;; Hardware stack levels used: 1
  6582 ;; Hardware stack levels required when called: 8
  6583 ;; This function calls:
  6584 ;;		Nothing
  6585 ;; This function is called by:
  6586 ;;		_UART1_Initialize
  6587 ;; This function uses a non-reentrant model
  6588 ;;
  6589                           
  6590                           	psect	text26
  6591  002742                     __ptext26:
  6592                           	callstack 0
  6593  002742                     _UART1_SetOverrunErrorHandler:
  6594                           	callstack 20
  6595  002742                     
  6596                           ;mcc_generated_files/uart1.c: 320:     UART1_OverrunErrorHandler = interruptHandler;
  6597  002742  C014  F0DA         	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
  6598  002746  C015  F0DB         	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
  6599  00274A  0012               	return		;funcret
  6600  00274C                     __end_of_UART1_SetOverrunErrorHandler:
  6601                           	callstack 0
  6602                           
  6603 ;; *************** function _UART1_SetFramingErrorHandler *****************
  6604 ;; Defined at:
  6605 ;;		line 315 in file "mcc_generated_files/uart1.c"
  6606 ;; Parameters:    Size  Location     Type
  6607 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
  6608 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
  6609 ;; Auto vars:     Size  Location     Type
  6610 ;;		None
  6611 ;; Return value:  Size  Location     Type
  6612 ;;                  1    wreg      void 
  6613 ;; Registers used:
  6614 ;;		wreg, status,2, status,0
  6615 ;; Tracked objects:
  6616 ;;		On entry : 0/0
  6617 ;;		On exit  : 0/0
  6618 ;;		Unchanged: 0/0
  6619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6620 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6623 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6624 ;;Total ram usage:        2 bytes
  6625 ;; Hardware stack levels used: 1
  6626 ;; Hardware stack levels required when called: 8
  6627 ;; This function calls:
  6628 ;;		Nothing
  6629 ;; This function is called by:
  6630 ;;		_UART1_Initialize
  6631 ;; This function uses a non-reentrant model
  6632 ;;
  6633                           
  6634                           	psect	text27
  6635  00274C                     __ptext27:
  6636                           	callstack 0
  6637  00274C                     _UART1_SetFramingErrorHandler:
  6638                           	callstack 20
  6639  00274C                     
  6640                           ;mcc_generated_files/uart1.c: 316:     UART1_FramingErrorHandler = interruptHandler;
  6641  00274C  C014  F0DC         	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
  6642  002750  C015  F0DD         	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
  6643  002754  0012               	return		;funcret
  6644  002756                     __end_of_UART1_SetFramingErrorHandler:
  6645                           	callstack 0
  6646                           
  6647 ;; *************** function _UART1_SetErrorHandler *****************
  6648 ;; Defined at:
  6649 ;;		line 323 in file "mcc_generated_files/uart1.c"
  6650 ;; Parameters:    Size  Location     Type
  6651 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
  6652 ;;		 -> UART1_DefaultErrorHandler(1), 
  6653 ;; Auto vars:     Size  Location     Type
  6654 ;;		None
  6655 ;; Return value:  Size  Location     Type
  6656 ;;                  1    wreg      void 
  6657 ;; Registers used:
  6658 ;;		wreg, status,2, status,0
  6659 ;; Tracked objects:
  6660 ;;		On entry : 0/0
  6661 ;;		On exit  : 0/0
  6662 ;;		Unchanged: 0/0
  6663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6664 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6667 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6668 ;;Total ram usage:        2 bytes
  6669 ;; Hardware stack levels used: 1
  6670 ;; Hardware stack levels required when called: 8
  6671 ;; This function calls:
  6672 ;;		Nothing
  6673 ;; This function is called by:
  6674 ;;		_UART1_Initialize
  6675 ;; This function uses a non-reentrant model
  6676 ;;
  6677                           
  6678                           	psect	text28
  6679  002756                     __ptext28:
  6680                           	callstack 0
  6681  002756                     _UART1_SetErrorHandler:
  6682                           	callstack 20
  6683  002756                     
  6684                           ;mcc_generated_files/uart1.c: 324:     UART1_ErrorHandler = interruptHandler;
  6685  002756  C014  F0D8         	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
  6686  00275A  C015  F0D9         	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
  6687  00275E  0012               	return		;funcret
  6688  002760                     __end_of_UART1_SetErrorHandler:
  6689                           	callstack 0
  6690                           
  6691 ;; *************** function _TMR5_Initialize *****************
  6692 ;; Defined at:
  6693 ;;		line 67 in file "mcc_generated_files/tmr5.c"
  6694 ;; Parameters:    Size  Location     Type
  6695 ;;		None
  6696 ;; Auto vars:     Size  Location     Type
  6697 ;;		None
  6698 ;; Return value:  Size  Location     Type
  6699 ;;                  1    wreg      void 
  6700 ;; Registers used:
  6701 ;;		wreg, status,2, status,0, cstack
  6702 ;; Tracked objects:
  6703 ;;		On entry : 0/0
  6704 ;;		On exit  : 0/0
  6705 ;;		Unchanged: 0/0
  6706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6709 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6710 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6711 ;;Total ram usage:        2 bytes
  6712 ;; Hardware stack levels used: 1
  6713 ;; Hardware stack levels required when called: 9
  6714 ;; This function calls:
  6715 ;;		_TMR5_SetGateInterruptHandler
  6716 ;; This function is called by:
  6717 ;;		_SYSTEM_Initialize
  6718 ;; This function uses a non-reentrant model
  6719 ;;
  6720                           
  6721                           	psect	text29
  6722  00209A                     __ptext29:
  6723                           	callstack 0
  6724  00209A                     _TMR5_Initialize:
  6725                           	callstack 20
  6726  00209A                     
  6727                           ;mcc_generated_files/tmr5.c: 72:     T5GCON = 0xC0;
  6728  00209A  0EC0               	movlw	192
  6729  00209C  6E9B               	movwf	155,c	;volatile
  6730                           
  6731                           ;mcc_generated_files/tmr5.c: 75:     T5GATE = 0x00;
  6732  00209E  0E00               	movlw	0
  6733  0020A0  6E9C               	movwf	156,c	;volatile
  6734                           
  6735                           ;mcc_generated_files/tmr5.c: 78:     T5CLK = 0x05;
  6736  0020A2  0E05               	movlw	5
  6737  0020A4  6E9D               	movwf	157,c	;volatile
  6738                           
  6739                           ;mcc_generated_files/tmr5.c: 81:     TMR5H = 0x00;
  6740  0020A6  0E00               	movlw	0
  6741  0020A8  6E99               	movwf	153,c	;volatile
  6742                           
  6743                           ;mcc_generated_files/tmr5.c: 84:     TMR5L = 0x00;
  6744  0020AA  0E00               	movlw	0
  6745  0020AC  6E98               	movwf	152,c	;volatile
  6746  0020AE                     
  6747                           ;mcc_generated_files/tmr5.c: 87:     PIR8bits.TMR5IF = 0;
  6748  0020AE  0139               	movlb	57	; () banked
  6749  0020B0  9DA8               	bcf	168,6,b	;volatile
  6750  0020B2                     
  6751                           ; BSR set to: 57
  6752                           ;mcc_generated_files/tmr5.c: 90:     timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
  6753  0020B2  5098               	movf	152,w,c	;volatile
  6754  0020B4  006F FE64  F016    	movff	16281,??_TMR5_Initialize	;volatile
  6755  0020BA  6A17               	clrf	(??_TMR5_Initialize+1)^0,c
  6756  0020BC  C016  F017         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
  6757  0020C0  6A16               	clrf	??_TMR5_Initialize^0,c
  6758  0020C2  1016               	iorwf	??_TMR5_Initialize^0,w,c
  6759  0020C4  0100               	movlb	0	; () banked
  6760  0020C6  6FD2               	movwf	_timer5ReloadVal& (0+255),b	;volatile
  6761  0020C8  5017               	movf	(??_TMR5_Initialize+1)^0,w,c
  6762  0020CA  6FD3               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
  6763  0020CC                     
  6764                           ; BSR set to: 0
  6765                           ;mcc_generated_files/tmr5.c: 93:     PIR8bits.TMR5GIF = 0;
  6766  0020CC  0139               	movlb	57	; () banked
  6767  0020CE  9FA8               	bcf	168,7,b	;volatile
  6768  0020D0                     
  6769                           ; BSR set to: 57
  6770                           ;mcc_generated_files/tmr5.c: 96:     PIE8bits.TMR5GIE = 1;
  6771  0020D0  8F98               	bsf	152,7,b	;volatile
  6772  0020D2                     
  6773                           ; BSR set to: 57
  6774                           ;mcc_generated_files/tmr5.c: 99:     TMR5_SetGateInterruptHandler(TMR5_DefaultGateInterr
      +                          uptHandler);
  6775  0020D2  0E8C               	movlw	low _TMR5_DefaultGateInterruptHandler
  6776  0020D4  6E14               	movwf	TMR5_SetGateInterruptHandler@InterruptHandler^0,c
  6777  0020D6  0E26               	movlw	high _TMR5_DefaultGateInterruptHandler
  6778  0020D8  6E15               	movwf	(TMR5_SetGateInterruptHandler@InterruptHandler+1)^0,c
  6779  0020DA  ECB0  F013         	call	_TMR5_SetGateInterruptHandler	;wreg free
  6780  0020DE                     
  6781                           ;mcc_generated_files/tmr5.c: 102:     T5CON = 0x03;
  6782  0020DE  0E03               	movlw	3
  6783  0020E0  6E9A               	movwf	154,c	;volatile
  6784  0020E2  0012               	return		;funcret
  6785  0020E4                     __end_of_TMR5_Initialize:
  6786                           	callstack 0
  6787                           
  6788 ;; *************** function _TMR5_SetGateInterruptHandler *****************
  6789 ;; Defined at:
  6790 ;;		line 186 in file "mcc_generated_files/tmr5.c"
  6791 ;; Parameters:    Size  Location     Type
  6792 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
  6793 ;;		 -> TMR5_DefaultGateInterruptHandler(1), 
  6794 ;; Auto vars:     Size  Location     Type
  6795 ;;		None
  6796 ;; Return value:  Size  Location     Type
  6797 ;;                  1    wreg      void 
  6798 ;; Registers used:
  6799 ;;		wreg, status,2, status,0
  6800 ;; Tracked objects:
  6801 ;;		On entry : 0/0
  6802 ;;		On exit  : 0/0
  6803 ;;		Unchanged: 0/0
  6804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6805 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6808 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6809 ;;Total ram usage:        2 bytes
  6810 ;; Hardware stack levels used: 1
  6811 ;; Hardware stack levels required when called: 8
  6812 ;; This function calls:
  6813 ;;		Nothing
  6814 ;; This function is called by:
  6815 ;;		_TMR5_Initialize
  6816 ;; This function uses a non-reentrant model
  6817 ;;
  6818                           
  6819                           	psect	text30
  6820  002760                     __ptext30:
  6821                           	callstack 0
  6822  002760                     _TMR5_SetGateInterruptHandler:
  6823                           	callstack 20
  6824  002760                     
  6825                           ;mcc_generated_files/tmr5.c: 187:     TMR5_GateInterruptHandler = InterruptHandler;
  6826  002760  C014  F0D0         	movff	TMR5_SetGateInterruptHandler@InterruptHandler,_TMR5_GateInterruptHandler
  6827  002764  C015  F0D1         	movff	TMR5_SetGateInterruptHandler@InterruptHandler+1,_TMR5_GateInterruptHandler+1
  6828  002768  0012               	return		;funcret
  6829  00276A                     __end_of_TMR5_SetGateInterruptHandler:
  6830                           	callstack 0
  6831                           
  6832 ;; *************** function _TMR4_Initialize *****************
  6833 ;; Defined at:
  6834 ;;		line 65 in file "mcc_generated_files/tmr4.c"
  6835 ;; Parameters:    Size  Location     Type
  6836 ;;		None
  6837 ;; Auto vars:     Size  Location     Type
  6838 ;;		None
  6839 ;; Return value:  Size  Location     Type
  6840 ;;                  1    wreg      void 
  6841 ;; Registers used:
  6842 ;;		wreg, status,2, status,0, cstack
  6843 ;; Tracked objects:
  6844 ;;		On entry : 0/0
  6845 ;;		On exit  : 0/0
  6846 ;;		Unchanged: 0/0
  6847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6851 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6852 ;;Total ram usage:        0 bytes
  6853 ;; Hardware stack levels used: 1
  6854 ;; Hardware stack levels required when called: 9
  6855 ;; This function calls:
  6856 ;;		_TMR4_SetInterruptHandler
  6857 ;; This function is called by:
  6858 ;;		_SYSTEM_Initialize
  6859 ;; This function uses a non-reentrant model
  6860 ;;
  6861                           
  6862                           	psect	text31
  6863  002530                     __ptext31:
  6864                           	callstack 0
  6865  002530                     _TMR4_Initialize:
  6866                           	callstack 20
  6867  002530                     
  6868                           ;mcc_generated_files/tmr4.c: 70:     T4CLKCON = 0x01;
  6869  002530  0E01               	movlw	1
  6870  002532  6EA2               	movwf	162,c	;volatile
  6871                           
  6872                           ;mcc_generated_files/tmr4.c: 73:     T4HLT = 0x00;
  6873  002534  0E00               	movlw	0
  6874  002536  6EA1               	movwf	161,c	;volatile
  6875                           
  6876                           ;mcc_generated_files/tmr4.c: 76:     T4RST = 0x00;
  6877  002538  0E00               	movlw	0
  6878  00253A  6EA3               	movwf	163,c	;volatile
  6879                           
  6880                           ;mcc_generated_files/tmr4.c: 79:     T4PR = 0xF9;
  6881  00253C  0EF9               	movlw	249
  6882  00253E  6E9F               	movwf	159,c	;volatile
  6883                           
  6884                           ;mcc_generated_files/tmr4.c: 82:     T4TMR = 0x00;
  6885  002540  0E00               	movlw	0
  6886  002542  6E9E               	movwf	158,c	;volatile
  6887  002544                     
  6888                           ;mcc_generated_files/tmr4.c: 85:     PIR7bits.TMR4IF = 0;
  6889  002544  0139               	movlb	57	; () banked
  6890  002546  91A7               	bcf	167,0,b	;volatile
  6891  002548                     
  6892                           ; BSR set to: 57
  6893                           ;mcc_generated_files/tmr4.c: 88:     PIE7bits.TMR4IE = 1;
  6894  002548  8197               	bsf	151,0,b	;volatile
  6895  00254A                     
  6896                           ; BSR set to: 57
  6897                           ;mcc_generated_files/tmr4.c: 91:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
  6898  00254A  0E98               	movlw	low _TMR4_DefaultInterruptHandler
  6899  00254C  6E14               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
  6900  00254E  0E27               	movlw	high _TMR4_DefaultInterruptHandler
  6901  002550  6E15               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
  6902  002552  ECB5  F013         	call	_TMR4_SetInterruptHandler	;wreg free
  6903  002556                     
  6904                           ;mcc_generated_files/tmr4.c: 94:     T4CON = 0xE0;
  6905  002556  0EE0               	movlw	224
  6906  002558  6EA0               	movwf	160,c	;volatile
  6907  00255A  0012               	return		;funcret
  6908  00255C                     __end_of_TMR4_Initialize:
  6909                           	callstack 0
  6910                           
  6911 ;; *************** function _TMR4_SetInterruptHandler *****************
  6912 ;; Defined at:
  6913 ;;		line 194 in file "mcc_generated_files/tmr4.c"
  6914 ;; Parameters:    Size  Location     Type
  6915 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
  6916 ;;		 -> TMR4_10msISR(1), TMR4_DefaultInterruptHandler(1), 
  6917 ;; Auto vars:     Size  Location     Type
  6918 ;;		None
  6919 ;; Return value:  Size  Location     Type
  6920 ;;                  1    wreg      void 
  6921 ;; Registers used:
  6922 ;;		wreg, status,2, status,0
  6923 ;; Tracked objects:
  6924 ;;		On entry : 0/0
  6925 ;;		On exit  : 0/0
  6926 ;;		Unchanged: 0/0
  6927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6928 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6931 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6932 ;;Total ram usage:        2 bytes
  6933 ;; Hardware stack levels used: 1
  6934 ;; Hardware stack levels required when called: 8
  6935 ;; This function calls:
  6936 ;;		Nothing
  6937 ;; This function is called by:
  6938 ;;		_TMR4_Initialize
  6939 ;;		_main
  6940 ;; This function uses a non-reentrant model
  6941 ;;
  6942                           
  6943                           	psect	text32
  6944  00276A                     __ptext32:
  6945                           	callstack 0
  6946  00276A                     _TMR4_SetInterruptHandler:
  6947                           	callstack 22
  6948  00276A                     
  6949                           ;mcc_generated_files/tmr4.c: 195:     TMR4_InterruptHandler = InterruptHandler;
  6950  00276A  C014  F0CC         	movff	TMR4_SetInterruptHandler@InterruptHandler,_TMR4_InterruptHandler
  6951  00276E  C015  F0CD         	movff	TMR4_SetInterruptHandler@InterruptHandler+1,_TMR4_InterruptHandler+1
  6952  002772  0012               	return		;funcret
  6953  002774                     __end_of_TMR4_SetInterruptHandler:
  6954                           	callstack 0
  6955                           
  6956 ;; *************** function _TMR3_Initialize *****************
  6957 ;; Defined at:
  6958 ;;		line 63 in file "mcc_generated_files/tmr3.c"
  6959 ;; Parameters:    Size  Location     Type
  6960 ;;		None
  6961 ;; Auto vars:     Size  Location     Type
  6962 ;;		None
  6963 ;; Return value:  Size  Location     Type
  6964 ;;                  1    wreg      void 
  6965 ;; Registers used:
  6966 ;;		wreg, status,2, status,0
  6967 ;; Tracked objects:
  6968 ;;		On entry : 0/0
  6969 ;;		On exit  : 0/0
  6970 ;;		Unchanged: 0/0
  6971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6974 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6975 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6976 ;;Total ram usage:        2 bytes
  6977 ;; Hardware stack levels used: 1
  6978 ;; Hardware stack levels required when called: 8
  6979 ;; This function calls:
  6980 ;;		Nothing
  6981 ;; This function is called by:
  6982 ;;		_SYSTEM_Initialize
  6983 ;; This function uses a non-reentrant model
  6984 ;;
  6985                           
  6986                           	psect	text33
  6987  002230                     __ptext33:
  6988                           	callstack 0
  6989  002230                     _TMR3_Initialize:
  6990                           	callstack 21
  6991  002230                     
  6992                           ;mcc_generated_files/tmr3.c: 68:     T3GCON = 0x00;
  6993  002230  0E00               	movlw	0
  6994  002232  6EA7               	movwf	167,c	;volatile
  6995                           
  6996                           ;mcc_generated_files/tmr3.c: 71:     T3GATE = 0x00;
  6997  002234  0E00               	movlw	0
  6998  002236  6EA8               	movwf	168,c	;volatile
  6999                           
  7000                           ;mcc_generated_files/tmr3.c: 74:     T3CLK = 0x05;
  7001  002238  0E05               	movlw	5
  7002  00223A  6EA9               	movwf	169,c	;volatile
  7003                           
  7004                           ;mcc_generated_files/tmr3.c: 77:     TMR3H = 0x00;
  7005  00223C  0E00               	movlw	0
  7006  00223E  6EA5               	movwf	165,c	;volatile
  7007                           
  7008                           ;mcc_generated_files/tmr3.c: 80:     TMR3L = 0x00;
  7009  002240  0E00               	movlw	0
  7010  002242  6EA4               	movwf	164,c	;volatile
  7011  002244                     
  7012                           ;mcc_generated_files/tmr3.c: 83:     PIR6bits.TMR3IF = 0;
  7013  002244  0139               	movlb	57	; () banked
  7014  002246  9DA6               	bcf	166,6,b	;volatile
  7015  002248                     
  7016                           ; BSR set to: 57
  7017                           ;mcc_generated_files/tmr3.c: 86:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
  7018  002248  50A4               	movf	164,w,c	;volatile
  7019  00224A  006F FE94  F014    	movff	16293,??_TMR3_Initialize	;volatile
  7020  002250  6A15               	clrf	(??_TMR3_Initialize+1)^0,c
  7021  002252  C014  F015         	movff	??_TMR3_Initialize,??_TMR3_Initialize+1
  7022  002256  6A14               	clrf	??_TMR3_Initialize^0,c
  7023  002258  1014               	iorwf	??_TMR3_Initialize^0,w,c
  7024  00225A  0100               	movlb	0	; () banked
  7025  00225C  6FCE               	movwf	_timer3ReloadVal& (0+255),b	;volatile
  7026  00225E  5015               	movf	(??_TMR3_Initialize+1)^0,w,c
  7027  002260  6FCF               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
  7028  002262                     
  7029                           ; BSR set to: 0
  7030                           ;mcc_generated_files/tmr3.c: 89:     T3CON = 0x01;
  7031  002262  0E01               	movlw	1
  7032  002264  6EA6               	movwf	166,c	;volatile
  7033  002266                     
  7034                           ; BSR set to: 0
  7035  002266  0012               	return		;funcret
  7036  002268                     __end_of_TMR3_Initialize:
  7037                           	callstack 0
  7038                           
  7039 ;; *************** function _TMR2_Initialize *****************
  7040 ;; Defined at:
  7041 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  7042 ;; Parameters:    Size  Location     Type
  7043 ;;		None
  7044 ;; Auto vars:     Size  Location     Type
  7045 ;;		None
  7046 ;; Return value:  Size  Location     Type
  7047 ;;                  1    wreg      void 
  7048 ;; Registers used:
  7049 ;;		wreg, status,2
  7050 ;; Tracked objects:
  7051 ;;		On entry : 0/0
  7052 ;;		On exit  : 0/0
  7053 ;;		Unchanged: 0/0
  7054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7059 ;;Total ram usage:        0 bytes
  7060 ;; Hardware stack levels used: 1
  7061 ;; Hardware stack levels required when called: 8
  7062 ;; This function calls:
  7063 ;;		Nothing
  7064 ;; This function is called by:
  7065 ;;		_SYSTEM_Initialize
  7066 ;; This function uses a non-reentrant model
  7067 ;;
  7068                           
  7069                           	psect	text34
  7070  002670                     __ptext34:
  7071                           	callstack 0
  7072  002670                     _TMR2_Initialize:
  7073                           	callstack 21
  7074  002670                     
  7075                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x05;
  7076  002670  0E05               	movlw	5
  7077  002672  6EAE               	movwf	174,c	;volatile
  7078                           
  7079                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
  7080  002674  0E00               	movlw	0
  7081  002676  6EAD               	movwf	173,c	;volatile
  7082                           
  7083                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
  7084  002678  0E00               	movlw	0
  7085  00267A  6EAF               	movwf	175,c	;volatile
  7086  00267C                     
  7087                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
  7088  00267C  68AB               	setf	171,c	;volatile
  7089                           
  7090                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
  7091  00267E  0E00               	movlw	0
  7092  002680  6EAA               	movwf	170,c	;volatile
  7093  002682                     
  7094                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
  7095  002682  0139               	movlb	57	; () banked
  7096  002684  95A4               	bcf	164,2,b	;volatile
  7097                           
  7098                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xB0;
  7099  002686  0EB0               	movlw	176
  7100  002688  6EAC               	movwf	172,c	;volatile
  7101  00268A                     
  7102                           ; BSR set to: 57
  7103  00268A  0012               	return		;funcret
  7104  00268C                     __end_of_TMR2_Initialize:
  7105                           	callstack 0
  7106                           
  7107 ;; *************** function _SMT1_Initialize *****************
  7108 ;; Defined at:
  7109 ;;		line 60 in file "mcc_generated_files/smt1.c"
  7110 ;; Parameters:    Size  Location     Type
  7111 ;;		None
  7112 ;; Auto vars:     Size  Location     Type
  7113 ;;		None
  7114 ;; Return value:  Size  Location     Type
  7115 ;;                  1    wreg      void 
  7116 ;; Registers used:
  7117 ;;		wreg, status,2
  7118 ;; Tracked objects:
  7119 ;;		On entry : 0/0
  7120 ;;		On exit  : 0/0
  7121 ;;		Unchanged: 0/0
  7122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7127 ;;Total ram usage:        0 bytes
  7128 ;; Hardware stack levels used: 1
  7129 ;; Hardware stack levels required when called: 8
  7130 ;; This function calls:
  7131 ;;		Nothing
  7132 ;; This function is called by:
  7133 ;;		_SYSTEM_Initialize
  7134 ;; This function uses a non-reentrant model
  7135 ;;
  7136                           
  7137                           	psect	text35
  7138  002414                     __ptext35:
  7139                           	callstack 0
  7140  002414                     _SMT1_Initialize:
  7141                           	callstack 21
  7142  002414                     
  7143                           ;mcc_generated_files/smt1.c: 63:     SMT1CON0 = 0x80;
  7144  002414  0E80               	movlw	128
  7145  002416  013F               	movlb	63	; () banked
  7146  002418  6F1E               	movwf	30,b	;volatile
  7147                           
  7148                           ;mcc_generated_files/smt1.c: 66:     SMT1CON1 = 0x42;
  7149  00241A  0E42               	movlw	66
  7150  00241C  6F1F               	movwf	31,b	;volatile
  7151                           
  7152                           ;mcc_generated_files/smt1.c: 69:     SMT1STAT = 0x00;
  7153  00241E  0E00               	movlw	0
  7154  002420  6F20               	movwf	32,b	;volatile
  7155                           
  7156                           ;mcc_generated_files/smt1.c: 72:     SMT1CLK = 0x04;
  7157  002422  0E04               	movlw	4
  7158  002424  6F21               	movwf	33,b	;volatile
  7159                           
  7160                           ;mcc_generated_files/smt1.c: 75:     SMT1WIN = 0x00;
  7161  002426  0E00               	movlw	0
  7162  002428  6F23               	movwf	35,b	;volatile
  7163                           
  7164                           ;mcc_generated_files/smt1.c: 78:     SMT1SIG = 0x00;
  7165  00242A  0E00               	movlw	0
  7166  00242C  6F22               	movwf	34,b	;volatile
  7167                           
  7168                           ;mcc_generated_files/smt1.c: 81:     SMT1PRU = 0x01;
  7169  00242E  0E01               	movlw	1
  7170  002430  6F1D               	movwf	29,b	;volatile
  7171  002432                     
  7172                           ; BSR set to: 63
  7173                           ;mcc_generated_files/smt1.c: 84:     SMT1PRH = 0xFF;
  7174  002432  691C               	setf	28,b	;volatile
  7175  002434                     
  7176                           ; BSR set to: 63
  7177                           ;mcc_generated_files/smt1.c: 87:     SMT1PRL = 0xFF;
  7178  002434  691B               	setf	27,b	;volatile
  7179  002436                     
  7180                           ; BSR set to: 63
  7181                           ;mcc_generated_files/smt1.c: 90:     PIE1bits.SMT1IE = 1;
  7182  002436  0139               	movlb	57	; () banked
  7183  002438  8B91               	bsf	145,5,b	;volatile
  7184  00243A                     
  7185                           ; BSR set to: 57
  7186                           ;mcc_generated_files/smt1.c: 93:     PIE1bits.SMT1PWAIE = 1;
  7187  00243A  8F91               	bsf	145,7,b	;volatile
  7188  00243C                     
  7189                           ; BSR set to: 57
  7190                           ;mcc_generated_files/smt1.c: 96:     PIE1bits.SMT1PRAIE = 1;
  7191  00243C  8D91               	bsf	145,6,b	;volatile
  7192  00243E                     
  7193                           ; BSR set to: 57
  7194                           ;mcc_generated_files/smt1.c: 99:     SMT1CON1bits.SMT1GO = 1;
  7195  00243E  013F               	movlb	63	; () banked
  7196  002440  8F1F               	bsf	31,7,b	;volatile
  7197  002442                     
  7198                           ; BSR set to: 63
  7199  002442  0012               	return		;funcret
  7200  002444                     __end_of_SMT1_Initialize:
  7201                           	callstack 0
  7202                           
  7203 ;; *************** function _PWM8_Initialize *****************
  7204 ;; Defined at:
  7205 ;;		line 58 in file "mcc_generated_files/pwm8.c"
  7206 ;; Parameters:    Size  Location     Type
  7207 ;;		None
  7208 ;; Auto vars:     Size  Location     Type
  7209 ;;		None
  7210 ;; Return value:  Size  Location     Type
  7211 ;;                  1    wreg      void 
  7212 ;; Registers used:
  7213 ;;		wreg, status,2
  7214 ;; Tracked objects:
  7215 ;;		On entry : 0/0
  7216 ;;		On exit  : 0/0
  7217 ;;		Unchanged: 0/0
  7218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7223 ;;Total ram usage:        0 bytes
  7224 ;; Hardware stack levels used: 1
  7225 ;; Hardware stack levels required when called: 8
  7226 ;; This function calls:
  7227 ;;		Nothing
  7228 ;; This function is called by:
  7229 ;;		_SYSTEM_Initialize
  7230 ;; This function uses a non-reentrant model
  7231 ;;
  7232                           
  7233                           	psect	text36
  7234  0026A8                     __ptext36:
  7235                           	callstack 0
  7236  0026A8                     _PWM8_Initialize:
  7237                           	callstack 21
  7238  0026A8                     
  7239                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
  7240  0026A8  0E80               	movlw	128
  7241  0026AA  6E62               	movwf	98,c	;volatile
  7242                           
  7243                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
  7244  0026AC  0E00               	movlw	0
  7245  0026AE  6E61               	movwf	97,c	;volatile
  7246                           
  7247                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x00;
  7248  0026B0  0E00               	movlw	0
  7249  0026B2  6E60               	movwf	96,c	;volatile
  7250                           
  7251                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 2;
  7252  0026B4  013F               	movlb	63	; () banked
  7253  0026B6  515F               	movf	95,w,b	;volatile
  7254  0026B8  0B3F               	andlw	-193
  7255  0026BA  0980               	iorlw	128
  7256  0026BC  6F5F               	movwf	95,b	;volatile
  7257  0026BE                     
  7258                           ; BSR set to: 63
  7259  0026BE  0012               	return		;funcret
  7260  0026C0                     __end_of_PWM8_Initialize:
  7261                           	callstack 0
  7262                           
  7263 ;; *************** function _PWM7_Initialize *****************
  7264 ;; Defined at:
  7265 ;;		line 58 in file "mcc_generated_files/pwm7.c"
  7266 ;; Parameters:    Size  Location     Type
  7267 ;;		None
  7268 ;; Auto vars:     Size  Location     Type
  7269 ;;		None
  7270 ;; Return value:  Size  Location     Type
  7271 ;;                  1    wreg      void 
  7272 ;; Registers used:
  7273 ;;		wreg, status,2
  7274 ;; Tracked objects:
  7275 ;;		On entry : 0/0
  7276 ;;		On exit  : 0/0
  7277 ;;		Unchanged: 0/0
  7278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7283 ;;Total ram usage:        0 bytes
  7284 ;; Hardware stack levels used: 1
  7285 ;; Hardware stack levels required when called: 8
  7286 ;; This function calls:
  7287 ;;		Nothing
  7288 ;; This function is called by:
  7289 ;;		_SYSTEM_Initialize
  7290 ;; This function uses a non-reentrant model
  7291 ;;
  7292                           
  7293                           	psect	text37
  7294  0026C0                     __ptext37:
  7295                           	callstack 0
  7296  0026C0                     _PWM7_Initialize:
  7297                           	callstack 21
  7298  0026C0                     
  7299                           ;mcc_generated_files/pwm7.c: 62:     PWM7CON = 0x80;
  7300  0026C0  0E80               	movlw	128
  7301  0026C2  6E66               	movwf	102,c	;volatile
  7302                           
  7303                           ;mcc_generated_files/pwm7.c: 65:     PWM7DCH = 0x00;
  7304  0026C4  0E00               	movlw	0
  7305  0026C6  6E65               	movwf	101,c	;volatile
  7306                           
  7307                           ;mcc_generated_files/pwm7.c: 68:     PWM7DCL = 0x00;
  7308  0026C8  0E00               	movlw	0
  7309  0026CA  6E64               	movwf	100,c	;volatile
  7310                           
  7311                           ;mcc_generated_files/pwm7.c: 71:     CCPTMRS1bits.P7TSEL = 2;
  7312  0026CC  013F               	movlb	63	; () banked
  7313  0026CE  515F               	movf	95,w,b	;volatile
  7314  0026D0  0BCF               	andlw	-49
  7315  0026D2  0920               	iorlw	32
  7316  0026D4  6F5F               	movwf	95,b	;volatile
  7317  0026D6                     
  7318                           ; BSR set to: 63
  7319  0026D6  0012               	return		;funcret
  7320  0026D8                     __end_of_PWM7_Initialize:
  7321                           	callstack 0
  7322                           
  7323 ;; *************** function _PWM6_Initialize *****************
  7324 ;; Defined at:
  7325 ;;		line 58 in file "mcc_generated_files/pwm6.c"
  7326 ;; Parameters:    Size  Location     Type
  7327 ;;		None
  7328 ;; Auto vars:     Size  Location     Type
  7329 ;;		None
  7330 ;; Return value:  Size  Location     Type
  7331 ;;                  1    wreg      void 
  7332 ;; Registers used:
  7333 ;;		wreg, status,2
  7334 ;; Tracked objects:
  7335 ;;		On entry : 0/0
  7336 ;;		On exit  : 0/0
  7337 ;;		Unchanged: 0/0
  7338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7343 ;;Total ram usage:        0 bytes
  7344 ;; Hardware stack levels used: 1
  7345 ;; Hardware stack levels required when called: 8
  7346 ;; This function calls:
  7347 ;;		Nothing
  7348 ;; This function is called by:
  7349 ;;		_SYSTEM_Initialize
  7350 ;; This function uses a non-reentrant model
  7351 ;;
  7352                           
  7353                           	psect	text38
  7354  0026D8                     __ptext38:
  7355                           	callstack 0
  7356  0026D8                     _PWM6_Initialize:
  7357                           	callstack 21
  7358  0026D8                     
  7359                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
  7360  0026D8  0E80               	movlw	128
  7361  0026DA  6E6A               	movwf	106,c	;volatile
  7362                           
  7363                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x59;
  7364  0026DC  0E59               	movlw	89
  7365  0026DE  6E69               	movwf	105,c	;volatile
  7366                           
  7367                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0x40;
  7368  0026E0  0E40               	movlw	64
  7369  0026E2  6E68               	movwf	104,c	;volatile
  7370                           
  7371                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
  7372  0026E4  013F               	movlb	63	; () banked
  7373  0026E6  515F               	movf	95,w,b	;volatile
  7374  0026E8  0BF3               	andlw	-13
  7375  0026EA  0904               	iorlw	4
  7376  0026EC  6F5F               	movwf	95,b	;volatile
  7377  0026EE                     
  7378                           ; BSR set to: 63
  7379  0026EE  0012               	return		;funcret
  7380  0026F0                     __end_of_PWM6_Initialize:
  7381                           	callstack 0
  7382                           
  7383 ;; *************** function _PWM5_Initialize *****************
  7384 ;; Defined at:
  7385 ;;		line 58 in file "mcc_generated_files/pwm5.c"
  7386 ;; Parameters:    Size  Location     Type
  7387 ;;		None
  7388 ;; Auto vars:     Size  Location     Type
  7389 ;;		None
  7390 ;; Return value:  Size  Location     Type
  7391 ;;                  1    wreg      void 
  7392 ;; Registers used:
  7393 ;;		wreg, status,2
  7394 ;; Tracked objects:
  7395 ;;		On entry : 0/0
  7396 ;;		On exit  : 0/0
  7397 ;;		Unchanged: 0/0
  7398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7403 ;;Total ram usage:        0 bytes
  7404 ;; Hardware stack levels used: 1
  7405 ;; Hardware stack levels required when called: 8
  7406 ;; This function calls:
  7407 ;;		Nothing
  7408 ;; This function is called by:
  7409 ;;		_SYSTEM_Initialize
  7410 ;; This function uses a non-reentrant model
  7411 ;;
  7412                           
  7413                           	psect	text39
  7414  0026F0                     __ptext39:
  7415                           	callstack 0
  7416  0026F0                     _PWM5_Initialize:
  7417                           	callstack 21
  7418  0026F0                     
  7419                           ;mcc_generated_files/pwm5.c: 62:     PWM5CON = 0x80;
  7420  0026F0  0E80               	movlw	128
  7421  0026F2  6E6E               	movwf	110,c	;volatile
  7422                           
  7423                           ;mcc_generated_files/pwm5.c: 65:     PWM5DCH = 0x59;
  7424  0026F4  0E59               	movlw	89
  7425  0026F6  6E6D               	movwf	109,c	;volatile
  7426                           
  7427                           ;mcc_generated_files/pwm5.c: 68:     PWM5DCL = 0x40;
  7428  0026F8  0E40               	movlw	64
  7429  0026FA  6E6C               	movwf	108,c	;volatile
  7430                           
  7431                           ;mcc_generated_files/pwm5.c: 71:     CCPTMRS1bits.P5TSEL = 1;
  7432  0026FC  013F               	movlb	63	; () banked
  7433  0026FE  515F               	movf	95,w,b	;volatile
  7434  002700  0BFC               	andlw	-4
  7435  002702  0901               	iorlw	1
  7436  002704  6F5F               	movwf	95,b	;volatile
  7437  002706                     
  7438                           ; BSR set to: 63
  7439  002706  0012               	return		;funcret
  7440  002708                     __end_of_PWM5_Initialize:
  7441                           	callstack 0
  7442                           
  7443 ;; *************** function _PMD_Initialize *****************
  7444 ;; Defined at:
  7445 ;;		line 86 in file "mcc_generated_files/mcc.c"
  7446 ;; Parameters:    Size  Location     Type
  7447 ;;		None
  7448 ;; Auto vars:     Size  Location     Type
  7449 ;;		None
  7450 ;; Return value:  Size  Location     Type
  7451 ;;                  1    wreg      void 
  7452 ;; Registers used:
  7453 ;;		wreg, status,2
  7454 ;; Tracked objects:
  7455 ;;		On entry : 0/0
  7456 ;;		On exit  : 0/0
  7457 ;;		Unchanged: 0/0
  7458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7463 ;;Total ram usage:        0 bytes
  7464 ;; Hardware stack levels used: 1
  7465 ;; Hardware stack levels required when called: 8
  7466 ;; This function calls:
  7467 ;;		Nothing
  7468 ;; This function is called by:
  7469 ;;		_SYSTEM_Initialize
  7470 ;; This function uses a non-reentrant model
  7471 ;;
  7472                           
  7473                           	psect	text40
  7474  002608                     __ptext40:
  7475                           	callstack 0
  7476  002608                     _PMD_Initialize:
  7477                           	callstack 21
  7478  002608                     
  7479                           ;mcc_generated_files/mcc.c: 89:     PMD0 = 0x00;
  7480  002608  0E00               	movlw	0
  7481  00260A  0139               	movlb	57	; () banked
  7482  00260C  6FC0               	movwf	192,b	;volatile
  7483                           
  7484                           ;mcc_generated_files/mcc.c: 91:     PMD1 = 0x00;
  7485  00260E  0E00               	movlw	0
  7486  002610  6FC1               	movwf	193,b	;volatile
  7487                           
  7488                           ;mcc_generated_files/mcc.c: 93:     PMD2 = 0x00;
  7489  002612  0E00               	movlw	0
  7490  002614  6FC2               	movwf	194,b	;volatile
  7491                           
  7492                           ;mcc_generated_files/mcc.c: 95:     PMD3 = 0x00;
  7493  002616  0E00               	movlw	0
  7494  002618  6FC3               	movwf	195,b	;volatile
  7495                           
  7496                           ;mcc_generated_files/mcc.c: 97:     PMD4 = 0x00;
  7497  00261A  0E00               	movlw	0
  7498  00261C  6FC4               	movwf	196,b	;volatile
  7499                           
  7500                           ;mcc_generated_files/mcc.c: 99:     PMD5 = 0x00;
  7501  00261E  0E00               	movlw	0
  7502  002620  6FC5               	movwf	197,b	;volatile
  7503                           
  7504                           ;mcc_generated_files/mcc.c: 101:     PMD6 = 0x00;
  7505  002622  0E00               	movlw	0
  7506  002624  6FC6               	movwf	198,b	;volatile
  7507                           
  7508                           ;mcc_generated_files/mcc.c: 103:     PMD7 = 0x00;
  7509  002626  0E00               	movlw	0
  7510  002628  6FC7               	movwf	199,b	;volatile
  7511  00262A                     
  7512                           ; BSR set to: 57
  7513  00262A  0012               	return		;funcret
  7514  00262C                     __end_of_PMD_Initialize:
  7515                           	callstack 0
  7516                           
  7517 ;; *************** function _PIN_MANAGER_Initialize *****************
  7518 ;; Defined at:
  7519 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  7520 ;; Parameters:    Size  Location     Type
  7521 ;;		None
  7522 ;; Auto vars:     Size  Location     Type
  7523 ;;		None
  7524 ;; Return value:  Size  Location     Type
  7525 ;;                  1    wreg      void 
  7526 ;; Registers used:
  7527 ;;		wreg, status,2
  7528 ;; Tracked objects:
  7529 ;;		On entry : 0/0
  7530 ;;		On exit  : 0/0
  7531 ;;		Unchanged: 0/0
  7532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7537 ;;Total ram usage:        0 bytes
  7538 ;; Hardware stack levels used: 1
  7539 ;; Hardware stack levels required when called: 8
  7540 ;; This function calls:
  7541 ;;		Nothing
  7542 ;; This function is called by:
  7543 ;;		_SYSTEM_Initialize
  7544 ;; This function uses a non-reentrant model
  7545 ;;
  7546                           
  7547                           	psect	text41
  7548  001B16                     __ptext41:
  7549                           	callstack 0
  7550  001B16                     _PIN_MANAGER_Initialize:
  7551                           	callstack 21
  7552  001B16                     
  7553                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  7554  001B16  0E00               	movlw	0
  7555  001B18  6EBE               	movwf	190,c	;volatile
  7556                           
  7557                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  7558  001B1A  0E00               	movlw	0
  7559  001B1C  6EBD               	movwf	189,c	;volatile
  7560                           
  7561                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x24;
  7562  001B1E  0E24               	movlw	36
  7563  001B20  6EBA               	movwf	186,c	;volatile
  7564                           
  7565                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  7566  001B22  0E00               	movlw	0
  7567  001B24  6EBB               	movwf	187,c	;volatile
  7568                           
  7569                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  7570  001B26  0E00               	movlw	0
  7571  001B28  6EBC               	movwf	188,c	;volatile
  7572                           
  7573                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  7574  001B2A  0E07               	movlw	7
  7575  001B2C  6EC6               	movwf	198,c	;volatile
  7576                           
  7577                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xC0;
  7578  001B2E  0EC0               	movlw	192
  7579  001B30  6EC2               	movwf	194,c	;volatile
  7580                           
  7581                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xF7;
  7582  001B32  0EF7               	movlw	247
  7583  001B34  6EC3               	movwf	195,c	;volatile
  7584  001B36                     
  7585                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
  7586  001B36  68C4               	setf	196,c	;volatile
  7587  001B38                     
  7588                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  7589  001B38  68C5               	setf	197,c	;volatile
  7590                           
  7591                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x1F;
  7592  001B3A  0E1F               	movlw	31
  7593  001B3C  013A               	movlb	58	; () banked
  7594  001B3E  6F70               	movwf	112,b	;volatile
  7595  001B40                     
  7596                           ; BSR set to: 58
  7597                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xFF;
  7598  001B40  6960               	setf	96,b	;volatile
  7599                           
  7600                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xC0;
  7601  001B42  0EC0               	movlw	192
  7602  001B44  6F50               	movwf	80,b	;volatile
  7603                           
  7604                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  7605  001B46  0E07               	movlw	7
  7606  001B48  6F80               	movwf	128,b	;volatile
  7607                           
  7608                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x7F;
  7609  001B4A  0E7F               	movlw	127
  7610  001B4C  6F40               	movwf	64,b	;volatile
  7611                           
  7612                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  7613  001B4E  0E00               	movlw	0
  7614  001B50  6F71               	movwf	113,b	;volatile
  7615                           
  7616                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  7617  001B52  0E00               	movlw	0
  7618  001B54  6F81               	movwf	129,b	;volatile
  7619                           
  7620                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  7621  001B56  0E00               	movlw	0
  7622  001B58  6F51               	movwf	81,b	;volatile
  7623                           
  7624                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  7625  001B5A  0E00               	movlw	0
  7626  001B5C  6F41               	movwf	65,b	;volatile
  7627                           
  7628                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  7629  001B5E  0E00               	movlw	0
  7630  001B60  6F61               	movwf	97,b	;volatile
  7631                           
  7632                           ;mcc_generated_files/pin_manager.c: 96:     RB1I2C = 0x00;
  7633  001B62  0E00               	movlw	0
  7634  001B64  6F5A               	movwf	90,b	;volatile
  7635                           
  7636                           ;mcc_generated_files/pin_manager.c: 97:     RB2I2C = 0x00;
  7637  001B66  0E00               	movlw	0
  7638  001B68  6F5B               	movwf	91,b	;volatile
  7639                           
  7640                           ;mcc_generated_files/pin_manager.c: 98:     RC3I2C = 0x00;
  7641  001B6A  0E00               	movlw	0
  7642  001B6C  6F6A               	movwf	106,b	;volatile
  7643                           
  7644                           ;mcc_generated_files/pin_manager.c: 99:     RC4I2C = 0x00;
  7645  001B6E  0E00               	movlw	0
  7646  001B70  6F6B               	movwf	107,b	;volatile
  7647                           
  7648                           ;mcc_generated_files/pin_manager.c: 100:     RD0I2C = 0x00;
  7649  001B72  0E00               	movlw	0
  7650  001B74  6F7A               	movwf	122,b	;volatile
  7651                           
  7652                           ;mcc_generated_files/pin_manager.c: 101:     RD1I2C = 0x00;
  7653  001B76  0E00               	movlw	0
  7654  001B78  6F7B               	movwf	123,b	;volatile
  7655                           
  7656                           ;mcc_generated_files/pin_manager.c: 106:     ODCONE = 0x00;
  7657  001B7A  0E00               	movlw	0
  7658  001B7C  6F82               	movwf	130,b	;volatile
  7659                           
  7660                           ;mcc_generated_files/pin_manager.c: 107:     ODCONA = 0x00;
  7661  001B7E  0E00               	movlw	0
  7662  001B80  6F42               	movwf	66,b	;volatile
  7663                           
  7664                           ;mcc_generated_files/pin_manager.c: 108:     ODCONB = 0x00;
  7665  001B82  0E00               	movlw	0
  7666  001B84  6F52               	movwf	82,b	;volatile
  7667                           
  7668                           ;mcc_generated_files/pin_manager.c: 109:     ODCONC = 0x00;
  7669  001B86  0E00               	movlw	0
  7670  001B88  6F62               	movwf	98,b	;volatile
  7671                           
  7672                           ;mcc_generated_files/pin_manager.c: 110:     ODCOND = 0x00;
  7673  001B8A  0E00               	movlw	0
  7674  001B8C  6F72               	movwf	114,b	;volatile
  7675  001B8E                     
  7676                           ; BSR set to: 58
  7677                           ;mcc_generated_files/pin_manager.c: 115:     SLRCONA = 0xFF;
  7678  001B8E  6943               	setf	67,b	;volatile
  7679  001B90                     
  7680                           ; BSR set to: 58
  7681                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONB = 0xFF;
  7682  001B90  6953               	setf	83,b	;volatile
  7683  001B92                     
  7684                           ; BSR set to: 58
  7685                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONC = 0xFF;
  7686  001B92  6963               	setf	99,b	;volatile
  7687  001B94                     
  7688                           ; BSR set to: 58
  7689                           ;mcc_generated_files/pin_manager.c: 118:     SLRCOND = 0xFF;
  7690  001B94  6973               	setf	115,b	;volatile
  7691                           
  7692                           ;mcc_generated_files/pin_manager.c: 119:     SLRCONE = 0x07;
  7693  001B96  0E07               	movlw	7
  7694  001B98  6F83               	movwf	131,b	;volatile
  7695  001B9A                     
  7696                           ; BSR set to: 58
  7697                           ;mcc_generated_files/pin_manager.c: 124:     INLVLA = 0xFF;
  7698  001B9A  6944               	setf	68,b	;volatile
  7699  001B9C                     
  7700                           ; BSR set to: 58
  7701                           ;mcc_generated_files/pin_manager.c: 125:     INLVLB = 0xFF;
  7702  001B9C  6954               	setf	84,b	;volatile
  7703  001B9E                     
  7704                           ; BSR set to: 58
  7705                           ;mcc_generated_files/pin_manager.c: 126:     INLVLC = 0xFF;
  7706  001B9E  6964               	setf	100,b	;volatile
  7707  001BA0                     
  7708                           ; BSR set to: 58
  7709                           ;mcc_generated_files/pin_manager.c: 127:     INLVLD = 0xFF;
  7710  001BA0  6974               	setf	116,b	;volatile
  7711                           
  7712                           ;mcc_generated_files/pin_manager.c: 128:     INLVLE = 0x0F;
  7713  001BA2  0E0F               	movlw	15
  7714  001BA4  6F84               	movwf	132,b	;volatile
  7715                           
  7716                           ;mcc_generated_files/pin_manager.c: 137:     CCP3PPS = 0x1F;
  7717  001BA6  0E1F               	movlw	31
  7718  001BA8  6FCF               	movwf	207,b	;volatile
  7719                           
  7720                           ;mcc_generated_files/pin_manager.c: 138:     CLCIN3PPS = 0x09;
  7721  001BAA  0E09               	movlw	9
  7722  001BAC  6FDC               	movwf	220,b	;volatile
  7723                           
  7724                           ;mcc_generated_files/pin_manager.c: 139:     RA1PPS = 0x0E;
  7725  001BAE  0E0E               	movlw	14
  7726  001BB0  6F01               	movwf	1,b	;volatile
  7727                           
  7728                           ;mcc_generated_files/pin_manager.c: 140:     U1RXPPS = 0x0A;
  7729  001BB2  0E0A               	movlw	10
  7730  001BB4  6FE5               	movwf	229,b	;volatile
  7731                           
  7732                           ;mcc_generated_files/pin_manager.c: 141:     RA0PPS = 0x0D;
  7733  001BB6  0E0D               	movlw	13
  7734  001BB8  6F00               	movwf	0,b	;volatile
  7735                           
  7736                           ;mcc_generated_files/pin_manager.c: 142:     T5GPPS = 0x1D;
  7737  001BBA  0E1D               	movlw	29
  7738  001BBC  6FC9               	movwf	201,b	;volatile
  7739                           
  7740                           ;mcc_generated_files/pin_manager.c: 143:     RA4PPS = 0x10;
  7741  001BBE  0E10               	movlw	16
  7742  001BC0  6F04               	movwf	4,b	;volatile
  7743                           
  7744                           ;mcc_generated_files/pin_manager.c: 144:     CLCIN0PPS = 0x07;
  7745  001BC2  0E07               	movlw	7
  7746  001BC4  6FD9               	movwf	217,b	;volatile
  7747                           
  7748                           ;mcc_generated_files/pin_manager.c: 145:     SMT1WINPPS = 0x09;
  7749  001BC6  0E09               	movlw	9
  7750  001BC8  6FD1               	movwf	209,b	;volatile
  7751                           
  7752                           ;mcc_generated_files/pin_manager.c: 146:     RA3PPS = 0x0F;
  7753  001BCA  0E0F               	movlw	15
  7754  001BCC  6F03               	movwf	3,b	;volatile
  7755                           
  7756                           ;mcc_generated_files/pin_manager.c: 147:     RB3PPS = 0x13;
  7757  001BCE  0E13               	movlw	19
  7758  001BD0  6F0B               	movwf	11,b	;volatile
  7759                           
  7760                           ;mcc_generated_files/pin_manager.c: 148:     CLCIN2PPS = 0x08;
  7761  001BD2  0E08               	movlw	8
  7762  001BD4  6FDB               	movwf	219,b	;volatile
  7763                           
  7764                           ;mcc_generated_files/pin_manager.c: 149:     SMT1SIGPPS = 0x08;
  7765  001BD6  0E08               	movlw	8
  7766  001BD8  6FD2               	movwf	210,b	;volatile
  7767                           
  7768                           ;mcc_generated_files/pin_manager.c: 150:     CCP4PPS = 0x1E;
  7769  001BDA  0E1E               	movlw	30
  7770  001BDC  6FD0               	movwf	208,b	;volatile
  7771  001BDE                     
  7772                           ; BSR set to: 58
  7773  001BDE  0012               	return		;funcret
  7774  001BE0                     __end_of_PIN_MANAGER_Initialize:
  7775                           	callstack 0
  7776                           
  7777 ;; *************** function _OSCILLATOR_Initialize *****************
  7778 ;; Defined at:
  7779 ;;		line 72 in file "mcc_generated_files/mcc.c"
  7780 ;; Parameters:    Size  Location     Type
  7781 ;;		None
  7782 ;; Auto vars:     Size  Location     Type
  7783 ;;		None
  7784 ;; Return value:  Size  Location     Type
  7785 ;;                  1    wreg      void 
  7786 ;; Registers used:
  7787 ;;		wreg, status,2
  7788 ;; Tracked objects:
  7789 ;;		On entry : 0/0
  7790 ;;		On exit  : 0/0
  7791 ;;		Unchanged: 0/0
  7792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7797 ;;Total ram usage:        0 bytes
  7798 ;; Hardware stack levels used: 1
  7799 ;; Hardware stack levels required when called: 8
  7800 ;; This function calls:
  7801 ;;		Nothing
  7802 ;; This function is called by:
  7803 ;;		_SYSTEM_Initialize
  7804 ;; This function uses a non-reentrant model
  7805 ;;
  7806                           
  7807                           	psect	text42
  7808  002708                     __ptext42:
  7809                           	callstack 0
  7810  002708                     _OSCILLATOR_Initialize:
  7811                           	callstack 21
  7812  002708                     
  7813                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x60;
  7814  002708  0E60               	movlw	96
  7815  00270A  0139               	movlb	57	; () banked
  7816  00270C  6FD9               	movwf	217,b	;volatile
  7817                           
  7818                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
  7819  00270E  0E00               	movlw	0
  7820  002710  6FDB               	movwf	219,b	;volatile
  7821                           
  7822                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
  7823  002712  0E00               	movlw	0
  7824  002714  6FDD               	movwf	221,b	;volatile
  7825                           
  7826                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x08;
  7827  002716  0E08               	movlw	8
  7828  002718  6FDF               	movwf	223,b	;volatile
  7829                           
  7830                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
  7831  00271A  0E00               	movlw	0
  7832  00271C  6FDE               	movwf	222,b	;volatile
  7833  00271E                     
  7834                           ; BSR set to: 57
  7835  00271E  0012               	return		;funcret
  7836  002720                     __end_of_OSCILLATOR_Initialize:
  7837                           	callstack 0
  7838                           
  7839 ;; *************** function _INTERRUPT_Initialize *****************
  7840 ;; Defined at:
  7841 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  7842 ;; Parameters:    Size  Location     Type
  7843 ;;		None
  7844 ;; Auto vars:     Size  Location     Type
  7845 ;;  state           1   19[COMRAM] _Bool 
  7846 ;; Return value:  Size  Location     Type
  7847 ;;                  1    wreg      void 
  7848 ;; Registers used:
  7849 ;;		wreg, status,2
  7850 ;; Tracked objects:
  7851 ;;		On entry : 0/0
  7852 ;;		On exit  : 0/0
  7853 ;;		Unchanged: 0/0
  7854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7856 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7858 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7859 ;;Total ram usage:        1 bytes
  7860 ;; Hardware stack levels used: 1
  7861 ;; Hardware stack levels required when called: 8
  7862 ;; This function calls:
  7863 ;;		Nothing
  7864 ;; This function is called by:
  7865 ;;		_SYSTEM_Initialize
  7866 ;; This function uses a non-reentrant model
  7867 ;;
  7868                           
  7869                           	psect	text43
  7870  002004                     __ptext43:
  7871                           	callstack 0
  7872  002004                     _INTERRUPT_Initialize:
  7873                           	callstack 21
  7874  002004                     
  7875                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
  7876  002004  8AD2               	bsf	210,5,c	;volatile
  7877  002006                     
  7878                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
  7879  002006  0E00               	movlw	0
  7880  002008  BED2               	btfsc	16338,7,c	;volatile
  7881  00200A  0E01               	movlw	1
  7882  00200C  6E14               	movwf	INTERRUPT_Initialize@state^0,c
  7883  00200E                     
  7884                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
  7885  00200E  9ED2               	bcf	16338,7,c	;volatile
  7886                           
  7887                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
  7888  002010  0E55               	movlw	85
  7889  002012  6ED4               	movwf	212,c	;volatile
  7890                           
  7891                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
  7892  002014  0EAA               	movlw	170
  7893  002016  6ED4               	movwf	212,c	;volatile
  7894  002018                     
  7895                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
  7896  002018  90D4               	bcf	212,0,c	;volatile
  7897                           
  7898                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTBASEU = 0;
  7899  00201A  0E00               	movlw	0
  7900  00201C  6ED7               	movwf	215,c	;volatile
  7901                           
  7902                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTBASEH = 0;
  7903  00201E  0E00               	movlw	0
  7904  002020  6ED6               	movwf	214,c	;volatile
  7905                           
  7906                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTBASEL = 8;
  7907  002022  0E08               	movlw	8
  7908  002024  6ED5               	movwf	213,c	;volatile
  7909                           
  7910                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
  7911  002026  0E55               	movlw	85
  7912  002028  6ED4               	movwf	212,c	;volatile
  7913                           
  7914                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
  7915  00202A  0EAA               	movlw	170
  7916  00202C  6ED4               	movwf	212,c	;volatile
  7917  00202E                     
  7918                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
  7919  00202E  80D4               	bsf	212,0,c	;volatile
  7920  002030                     
  7921                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
  7922  002030  B014               	btfsc	INTERRUPT_Initialize@state^0,0,c
  7923  002032  D002               	bra	u1135
  7924  002034  9ED2               	bcf	16338,7,c	;volatile
  7925  002036  D001               	bra	u1136
  7926  002038                     u1135:
  7927  002038  8ED2               	bsf	16338,7,c	;volatile
  7928  00203A                     u1136:
  7929  00203A                     
  7930                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR3bits.U1TXIP = 0;
  7931  00203A  0139               	movlb	57	; () banked
  7932  00203C  9983               	bcf	131,4,b	;volatile
  7933  00203E                     
  7934                           ; BSR set to: 57
  7935                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR3bits.U1RXIP = 0;
  7936  00203E  9783               	bcf	131,3,b	;volatile
  7937  002040                     
  7938                           ; BSR set to: 57
  7939                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR1bits.SMT1PWAIP = 1;
  7940  002040  8F81               	bsf	129,7,b	;volatile
  7941  002042                     
  7942                           ; BSR set to: 57
  7943                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR1bits.SMT1IP = 1;
  7944  002042  8B81               	bsf	129,5,b	;volatile
  7945  002044                     
  7946                           ; BSR set to: 57
  7947                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR1bits.SMT1PRAIP = 1;
  7948  002044  8D81               	bsf	129,6,b	;volatile
  7949  002046                     
  7950                           ; BSR set to: 57
  7951                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR10bits.CCP4IP = 1;
  7952  002046  818A               	bsf	138,0,b	;volatile
  7953  002048                     
  7954                           ; BSR set to: 57
  7955                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR8bits.TMR5GIP = 1;
  7956  002048  8F88               	bsf	136,7,b	;volatile
  7957  00204A                     
  7958                           ; BSR set to: 57
  7959                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR7bits.TMR4IP = 0;
  7960  00204A  9187               	bcf	135,0,b	;volatile
  7961  00204C                     
  7962                           ; BSR set to: 57
  7963                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR9bits.CCP3IP = 1;
  7964  00204C  8389               	bsf	137,1,b	;volatile
  7965  00204E                     
  7966                           ; BSR set to: 57
  7967  00204E  0012               	return		;funcret
  7968  002050                     __end_of_INTERRUPT_Initialize:
  7969                           	callstack 0
  7970                           
  7971 ;; *************** function _CLC3_Initialize *****************
  7972 ;; Defined at:
  7973 ;;		line 58 in file "mcc_generated_files/clc3.c"
  7974 ;; Parameters:    Size  Location     Type
  7975 ;;		None
  7976 ;; Auto vars:     Size  Location     Type
  7977 ;;		None
  7978 ;; Return value:  Size  Location     Type
  7979 ;;                  1    wreg      void 
  7980 ;; Registers used:
  7981 ;;		wreg, status,2
  7982 ;; Tracked objects:
  7983 ;;		On entry : 0/0
  7984 ;;		On exit  : 0/0
  7985 ;;		Unchanged: 0/0
  7986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7991 ;;Total ram usage:        0 bytes
  7992 ;; Hardware stack levels used: 1
  7993 ;; Hardware stack levels required when called: 8
  7994 ;; This function calls:
  7995 ;;		Nothing
  7996 ;; This function is called by:
  7997 ;;		_SYSTEM_Initialize
  7998 ;; This function uses a non-reentrant model
  7999 ;;
  8000                           
  8001                           	psect	text44
  8002  00255C                     __ptext44:
  8003                           	callstack 0
  8004  00255C                     _CLC3_Initialize:
  8005                           	callstack 21
  8006  00255C                     
  8007                           ;mcc_generated_files/clc3.c: 63:     CLC3POL = 0x00;
  8008  00255C  0E00               	movlw	0
  8009  00255E  013C               	movlb	60	; () banked
  8010  002560  6F61               	movwf	97,b	;volatile
  8011                           
  8012                           ;mcc_generated_files/clc3.c: 65:     CLC3SEL0 = 0x03;
  8013  002562  0E03               	movlw	3
  8014  002564  6F62               	movwf	98,b	;volatile
  8015                           
  8016                           ;mcc_generated_files/clc3.c: 67:     CLC3SEL1 = 0x02;
  8017  002566  0E02               	movlw	2
  8018  002568  6F63               	movwf	99,b	;volatile
  8019                           
  8020                           ;mcc_generated_files/clc3.c: 69:     CLC3SEL2 = 0x00;
  8021  00256A  0E00               	movlw	0
  8022  00256C  6F64               	movwf	100,b	;volatile
  8023                           
  8024                           ;mcc_generated_files/clc3.c: 71:     CLC3SEL3 = 0x00;
  8025  00256E  0E00               	movlw	0
  8026  002570  6F65               	movwf	101,b	;volatile
  8027                           
  8028                           ;mcc_generated_files/clc3.c: 73:     CLC3GLS0 = 0x02;
  8029  002572  0E02               	movlw	2
  8030  002574  6F66               	movwf	102,b	;volatile
  8031                           
  8032                           ;mcc_generated_files/clc3.c: 75:     CLC3GLS1 = 0x08;
  8033  002576  0E08               	movlw	8
  8034  002578  6F67               	movwf	103,b	;volatile
  8035                           
  8036                           ;mcc_generated_files/clc3.c: 77:     CLC3GLS2 = 0x00;
  8037  00257A  0E00               	movlw	0
  8038  00257C  6F68               	movwf	104,b	;volatile
  8039                           
  8040                           ;mcc_generated_files/clc3.c: 79:     CLC3GLS3 = 0x00;
  8041  00257E  0E00               	movlw	0
  8042  002580  6F69               	movwf	105,b	;volatile
  8043                           
  8044                           ;mcc_generated_files/clc3.c: 81:     CLC3CON = 0x85;
  8045  002582  0E85               	movlw	133
  8046  002584  6F60               	movwf	96,b	;volatile
  8047  002586                     
  8048                           ; BSR set to: 60
  8049  002586  0012               	return		;funcret
  8050  002588                     __end_of_CLC3_Initialize:
  8051                           	callstack 0
  8052                           
  8053 ;; *************** function _CCP4_Initialize *****************
  8054 ;; Defined at:
  8055 ;;		line 78 in file "mcc_generated_files/ccp4.c"
  8056 ;; Parameters:    Size  Location     Type
  8057 ;;		None
  8058 ;; Auto vars:     Size  Location     Type
  8059 ;;		None
  8060 ;; Return value:  Size  Location     Type
  8061 ;;                  1    wreg      void 
  8062 ;; Registers used:
  8063 ;;		wreg, status,2, status,0, cstack
  8064 ;; Tracked objects:
  8065 ;;		On entry : 0/0
  8066 ;;		On exit  : 0/0
  8067 ;;		Unchanged: 0/0
  8068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8073 ;;Total ram usage:        0 bytes
  8074 ;; Hardware stack levels used: 1
  8075 ;; Hardware stack levels required when called: 9
  8076 ;; This function calls:
  8077 ;;		_CCP4_SetCallBack
  8078 ;; This function is called by:
  8079 ;;		_SYSTEM_Initialize
  8080 ;; This function uses a non-reentrant model
  8081 ;;
  8082                           
  8083                           	psect	text45
  8084  0024D4                     __ptext45:
  8085                           	callstack 0
  8086  0024D4                     _CCP4_Initialize:
  8087                           	callstack 20
  8088  0024D4                     
  8089                           ;mcc_generated_files/ccp4.c: 83:  CCP4CON = 0x83;
  8090  0024D4  0E83               	movlw	131
  8091  0024D6  6E72               	movwf	114,c	;volatile
  8092                           
  8093                           ;mcc_generated_files/ccp4.c: 86:  CCP4CAP = 0x00;
  8094  0024D8  0E00               	movlw	0
  8095  0024DA  6E73               	movwf	115,c	;volatile
  8096                           
  8097                           ;mcc_generated_files/ccp4.c: 89:  CCPR4H = 0x00;
  8098  0024DC  0E00               	movlw	0
  8099  0024DE  6E71               	movwf	113,c	;volatile
  8100                           
  8101                           ;mcc_generated_files/ccp4.c: 92:  CCPR4L = 0x00;
  8102  0024E0  0E00               	movlw	0
  8103  0024E2  6E70               	movwf	112,c	;volatile
  8104  0024E4                     
  8105                           ;mcc_generated_files/ccp4.c: 95:     CCP4_SetCallBack(CCP4_DefaultCallBack);
  8106  0024E4  0EA4               	movlw	low _CCP4_DefaultCallBack
  8107  0024E6  6E14               	movwf	CCP4_SetCallBack@customCallBack^0,c
  8108  0024E8  0E24               	movlw	high _CCP4_DefaultCallBack
  8109  0024EA  6E15               	movwf	(CCP4_SetCallBack@customCallBack+1)^0,c
  8110  0024EC  ECBA  F013         	call	_CCP4_SetCallBack	;wreg free
  8111  0024F0                     
  8112                           ;mcc_generated_files/ccp4.c: 98:  CCPTMRS0bits.C4TSEL = 0x2;
  8113  0024F0  013F               	movlb	63	; () banked
  8114  0024F2  515E               	movf	94,w,b	;volatile
  8115  0024F4  0B3F               	andlw	-193
  8116  0024F6  0980               	iorlw	128
  8117  0024F8  6F5E               	movwf	94,b	;volatile
  8118  0024FA                     
  8119                           ; BSR set to: 63
  8120                           ;mcc_generated_files/ccp4.c: 101:     PIR10bits.CCP4IF = 0;
  8121  0024FA  0139               	movlb	57	; () banked
  8122  0024FC  91AA               	bcf	170,0,b	;volatile
  8123  0024FE                     
  8124                           ; BSR set to: 57
  8125                           ;mcc_generated_files/ccp4.c: 104:     PIE10bits.CCP4IE = 1;
  8126  0024FE  819A               	bsf	154,0,b	;volatile
  8127  002500                     
  8128                           ; BSR set to: 57
  8129  002500  0012               	return		;funcret
  8130  002502                     __end_of_CCP4_Initialize:
  8131                           	callstack 0
  8132                           
  8133 ;; *************** function _CCP4_SetCallBack *****************
  8134 ;; Defined at:
  8135 ;;		line 75 in file "mcc_generated_files/ccp4.c"
  8136 ;; Parameters:    Size  Location     Type
  8137 ;;  customCallBa    2   19[COMRAM] PTR FTN(unsigned short ,
  8138 ;;		 -> CCP4_DefaultCallBack(1), 
  8139 ;; Auto vars:     Size  Location     Type
  8140 ;;		None
  8141 ;; Return value:  Size  Location     Type
  8142 ;;                  1    wreg      void 
  8143 ;; Registers used:
  8144 ;;		wreg, status,2, status,0
  8145 ;; Tracked objects:
  8146 ;;		On entry : 0/0
  8147 ;;		On exit  : 0/0
  8148 ;;		Unchanged: 0/0
  8149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8150 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8153 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8154 ;;Total ram usage:        2 bytes
  8155 ;; Hardware stack levels used: 1
  8156 ;; Hardware stack levels required when called: 8
  8157 ;; This function calls:
  8158 ;;		Nothing
  8159 ;; This function is called by:
  8160 ;;		_CCP4_Initialize
  8161 ;; This function uses a non-reentrant model
  8162 ;;
  8163                           
  8164                           	psect	text46
  8165  002774                     __ptext46:
  8166                           	callstack 0
  8167  002774                     _CCP4_SetCallBack:
  8168                           	callstack 20
  8169  002774                     
  8170                           ;mcc_generated_files/ccp4.c: 76:     CCP4_CallBack = customCallBack;
  8171  002774  C014  F0D4         	movff	CCP4_SetCallBack@customCallBack,_CCP4_CallBack
  8172  002778  C015  F0D5         	movff	CCP4_SetCallBack@customCallBack+1,_CCP4_CallBack+1
  8173  00277C  0012               	return		;funcret
  8174  00277E                     __end_of_CCP4_SetCallBack:
  8175                           	callstack 0
  8176                           
  8177 ;; *************** function _CCP3_Initialize *****************
  8178 ;; Defined at:
  8179 ;;		line 75 in file "mcc_generated_files/ccp3.c"
  8180 ;; Parameters:    Size  Location     Type
  8181 ;;		None
  8182 ;; Auto vars:     Size  Location     Type
  8183 ;;		None
  8184 ;; Return value:  Size  Location     Type
  8185 ;;                  1    wreg      void 
  8186 ;; Registers used:
  8187 ;;		wreg, status,2, status,0, cstack
  8188 ;; Tracked objects:
  8189 ;;		On entry : 0/0
  8190 ;;		On exit  : 0/0
  8191 ;;		Unchanged: 0/0
  8192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8197 ;;Total ram usage:        0 bytes
  8198 ;; Hardware stack levels used: 1
  8199 ;; Hardware stack levels required when called: 9
  8200 ;; This function calls:
  8201 ;;		_CCP3_SetCallBack
  8202 ;; This function is called by:
  8203 ;;		_SYSTEM_Initialize
  8204 ;; This function uses a non-reentrant model
  8205 ;;
  8206                           
  8207                           	psect	text47
  8208  002502                     __ptext47:
  8209                           	callstack 0
  8210  002502                     _CCP3_Initialize:
  8211                           	callstack 20
  8212  002502                     
  8213                           ;mcc_generated_files/ccp3.c: 80:  CCP3CON = 0x83;
  8214  002502  0E83               	movlw	131
  8215  002504  6E76               	movwf	118,c	;volatile
  8216                           
  8217                           ;mcc_generated_files/ccp3.c: 83:  CCP3CAP = 0x00;
  8218  002506  0E00               	movlw	0
  8219  002508  6E77               	movwf	119,c	;volatile
  8220                           
  8221                           ;mcc_generated_files/ccp3.c: 86:  CCPR3H = 0x00;
  8222  00250A  0E00               	movlw	0
  8223  00250C  6E75               	movwf	117,c	;volatile
  8224                           
  8225                           ;mcc_generated_files/ccp3.c: 89:  CCPR3L = 0x00;
  8226  00250E  0E00               	movlw	0
  8227  002510  6E74               	movwf	116,c	;volatile
  8228  002512                     
  8229                           ;mcc_generated_files/ccp3.c: 92:     CCP3_SetCallBack(CCP3_DefaultCallBack);
  8230  002512  0E74               	movlw	low _CCP3_DefaultCallBack
  8231  002514  6E14               	movwf	CCP3_SetCallBack@customCallBack^0,c
  8232  002516  0E24               	movlw	high _CCP3_DefaultCallBack
  8233  002518  6E15               	movwf	(CCP3_SetCallBack@customCallBack+1)^0,c
  8234  00251A  ECBF  F013         	call	_CCP3_SetCallBack	;wreg free
  8235  00251E                     
  8236                           ;mcc_generated_files/ccp3.c: 95:  CCPTMRS0bits.C3TSEL = 0x2;
  8237  00251E  013F               	movlb	63	; () banked
  8238  002520  515E               	movf	94,w,b	;volatile
  8239  002522  0BCF               	andlw	-49
  8240  002524  0920               	iorlw	32
  8241  002526  6F5E               	movwf	94,b	;volatile
  8242  002528                     
  8243                           ; BSR set to: 63
  8244                           ;mcc_generated_files/ccp3.c: 98:     PIR9bits.CCP3IF = 0;
  8245  002528  0139               	movlb	57	; () banked
  8246  00252A  93A9               	bcf	169,1,b	;volatile
  8247  00252C                     
  8248                           ; BSR set to: 57
  8249                           ;mcc_generated_files/ccp3.c: 101:     PIE9bits.CCP3IE = 1;
  8250  00252C  8399               	bsf	153,1,b	;volatile
  8251  00252E                     
  8252                           ; BSR set to: 57
  8253  00252E  0012               	return		;funcret
  8254  002530                     __end_of_CCP3_Initialize:
  8255                           	callstack 0
  8256                           
  8257 ;; *************** function _CCP3_SetCallBack *****************
  8258 ;; Defined at:
  8259 ;;		line 119 in file "mcc_generated_files/ccp3.c"
  8260 ;; Parameters:    Size  Location     Type
  8261 ;;  customCallBa    2   19[COMRAM] PTR FTN(unsigned short ,
  8262 ;;		 -> CCP3_DefaultCallBack(1), 
  8263 ;; Auto vars:     Size  Location     Type
  8264 ;;		None
  8265 ;; Return value:  Size  Location     Type
  8266 ;;                  1    wreg      void 
  8267 ;; Registers used:
  8268 ;;		wreg, status,2, status,0
  8269 ;; Tracked objects:
  8270 ;;		On entry : 0/0
  8271 ;;		On exit  : 0/0
  8272 ;;		Unchanged: 0/0
  8273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8274 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8277 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8278 ;;Total ram usage:        2 bytes
  8279 ;; Hardware stack levels used: 1
  8280 ;; Hardware stack levels required when called: 8
  8281 ;; This function calls:
  8282 ;;		Nothing
  8283 ;; This function is called by:
  8284 ;;		_CCP3_Initialize
  8285 ;; This function uses a non-reentrant model
  8286 ;;
  8287                           
  8288                           	psect	text48
  8289  00277E                     __ptext48:
  8290                           	callstack 0
  8291  00277E                     _CCP3_SetCallBack:
  8292                           	callstack 20
  8293  00277E                     
  8294                           ;mcc_generated_files/ccp3.c: 120:     CCP3_CallBack = customCallBack;
  8295  00277E  C014  F0D6         	movff	CCP3_SetCallBack@customCallBack,_CCP3_CallBack
  8296  002782  C015  F0D7         	movff	CCP3_SetCallBack@customCallBack+1,_CCP3_CallBack+1
  8297  002786  0012               	return		;funcret
  8298  002788                     __end_of_CCP3_SetCallBack:
  8299                           	callstack 0
  8300                           
  8301 ;; *************** function _ADCC_Initialize *****************
  8302 ;; Defined at:
  8303 ;;		line 62 in file "mcc_generated_files/adcc.c"
  8304 ;; Parameters:    Size  Location     Type
  8305 ;;		None
  8306 ;; Auto vars:     Size  Location     Type
  8307 ;;		None
  8308 ;; Return value:  Size  Location     Type
  8309 ;;                  1    wreg      void 
  8310 ;; Registers used:
  8311 ;;		wreg, status,2
  8312 ;; Tracked objects:
  8313 ;;		On entry : 0/0
  8314 ;;		On exit  : 0/0
  8315 ;;		Unchanged: 0/0
  8316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8321 ;;Total ram usage:        0 bytes
  8322 ;; Hardware stack levels used: 1
  8323 ;; Hardware stack levels required when called: 8
  8324 ;; This function calls:
  8325 ;;		Nothing
  8326 ;; This function is called by:
  8327 ;;		_SYSTEM_Initialize
  8328 ;; This function uses a non-reentrant model
  8329 ;;
  8330                           
  8331                           	psect	text49
  8332  001F52                     __ptext49:
  8333                           	callstack 0
  8334  001F52                     _ADCC_Initialize:
  8335                           	callstack 21
  8336  001F52                     
  8337                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
  8338  001F52  0E00               	movlw	0
  8339  001F54  013E               	movlb	62	; () banked
  8340  001F56  6FDE               	movwf	222,b	;volatile
  8341                           
  8342                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
  8343  001F58  0E00               	movlw	0
  8344  001F5A  6FDF               	movwf	223,b	;volatile
  8345                           
  8346                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
  8347  001F5C  0E00               	movlw	0
  8348  001F5E  6FE0               	movwf	224,b	;volatile
  8349                           
  8350                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
  8351  001F60  0E00               	movlw	0
  8352  001F62  6FE1               	movwf	225,b	;volatile
  8353                           
  8354                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
  8355  001F64  0E00               	movlw	0
  8356  001F66  6FE4               	movwf	228,b	;volatile
  8357                           
  8358                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
  8359  001F68  0E00               	movlw	0
  8360  001F6A  6FE5               	movwf	229,b	;volatile
  8361                           
  8362                           ;mcc_generated_files/adcc.c: 78:     ADACCU = 0x00;
  8363  001F6C  0E00               	movlw	0
  8364  001F6E  6FEA               	movwf	234,b	;volatile
  8365                           
  8366                           ;mcc_generated_files/adcc.c: 80:     ADRPT = 0x00;
  8367  001F70  0E00               	movlw	0
  8368  001F72  6FEC               	movwf	236,b	;volatile
  8369                           
  8370                           ;mcc_generated_files/adcc.c: 82:     ADPCH = 0x00;
  8371  001F74  0E00               	movlw	0
  8372  001F76  6FF1               	movwf	241,b	;volatile
  8373                           
  8374                           ;mcc_generated_files/adcc.c: 84:     ADACQL = 0x58;
  8375  001F78  0E58               	movlw	88
  8376  001F7A  6FF3               	movwf	243,b	;volatile
  8377                           
  8378                           ;mcc_generated_files/adcc.c: 86:     ADACQH = 0x02;
  8379  001F7C  0E02               	movlw	2
  8380  001F7E  6FF4               	movwf	244,b	;volatile
  8381                           
  8382                           ;mcc_generated_files/adcc.c: 88:     ADCAP = 0x00;
  8383  001F80  0E00               	movlw	0
  8384  001F82  6FF5               	movwf	245,b	;volatile
  8385                           
  8386                           ;mcc_generated_files/adcc.c: 90:     ADPREL = 0x00;
  8387  001F84  0E00               	movlw	0
  8388  001F86  6FF6               	movwf	246,b	;volatile
  8389                           
  8390                           ;mcc_generated_files/adcc.c: 92:     ADPREH = 0x00;
  8391  001F88  0E00               	movlw	0
  8392  001F8A  6FF7               	movwf	247,b	;volatile
  8393                           
  8394                           ;mcc_generated_files/adcc.c: 94:     ADCON1 = 0x00;
  8395  001F8C  0E00               	movlw	0
  8396  001F8E  6FF9               	movwf	249,b	;volatile
  8397                           
  8398                           ;mcc_generated_files/adcc.c: 96:     ADCON2 = 0x00;
  8399  001F90  0E00               	movlw	0
  8400  001F92  6FFA               	movwf	250,b	;volatile
  8401                           
  8402                           ;mcc_generated_files/adcc.c: 98:     ADCON3 = 0x00;
  8403  001F94  0E00               	movlw	0
  8404  001F96  6FFB               	movwf	251,b	;volatile
  8405                           
  8406                           ;mcc_generated_files/adcc.c: 100:     ADSTAT = 0x00;
  8407  001F98  0E00               	movlw	0
  8408  001F9A  6FFC               	movwf	252,b	;volatile
  8409                           
  8410                           ;mcc_generated_files/adcc.c: 102:     ADREF = 0x00;
  8411  001F9C  0E00               	movlw	0
  8412  001F9E  6FFD               	movwf	253,b	;volatile
  8413                           
  8414                           ;mcc_generated_files/adcc.c: 104:     ADACT = 0x00;
  8415  001FA0  0E00               	movlw	0
  8416  001FA2  6FFE               	movwf	254,b	;volatile
  8417                           
  8418                           ;mcc_generated_files/adcc.c: 106:     ADCLK = 0x1F;
  8419  001FA4  0E1F               	movlw	31
  8420  001FA6  6FFF               	movwf	255,b	;volatile
  8421                           
  8422                           ;mcc_generated_files/adcc.c: 108:     ADCON0 = 0x84;
  8423  001FA8  0E84               	movlw	132
  8424  001FAA  6FF8               	movwf	248,b	;volatile
  8425  001FAC                     
  8426                           ; BSR set to: 62
  8427  001FAC  0012               	return		;funcret
  8428  001FAE                     __end_of_ADCC_Initialize:
  8429                           	callstack 0
  8430                           
  8431 ;; *************** function _UART1_tx_vect_isr *****************
  8432 ;; Defined at:
  8433 ;;		line 235 in file "mcc_generated_files/uart1.c"
  8434 ;; Parameters:    Size  Location     Type
  8435 ;;		None
  8436 ;; Auto vars:     Size  Location     Type
  8437 ;;		None
  8438 ;; Return value:  Size  Location     Type
  8439 ;;                  1    wreg      void 
  8440 ;; Registers used:
  8441 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  8442 ;; Tracked objects:
  8443 ;;		On entry : 0/0
  8444 ;;		On exit  : 0/0
  8445 ;;		Unchanged: 0/0
  8446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8449 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8450 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8451 ;;Total ram usage:        1 bytes
  8452 ;; Hardware stack levels used: 1
  8453 ;; Hardware stack levels required when called: 5
  8454 ;; This function calls:
  8455 ;;		Absolute function
  8456 ;;		_UART1_Transmit_ISR
  8457 ;; This function is called by:
  8458 ;;		Interrupt level 1
  8459 ;; This function uses a non-reentrant model
  8460 ;;
  8461                           
  8462                           	psect	text50
  8463  0021B8                     __ptext50:
  8464                           	callstack 0
  8465  0021B8                     _UART1_tx_vect_isr:
  8466                           	callstack 20
  8467                           
  8468                           ; BSR set to: 62
  8469                           ;incstack = 0
  8470  0021B8  006F FF60  F011    	movff	status,??_UART1_tx_vect_isr
  8471  0021BE                     
  8472                           ;mcc_generated_files/uart1.c: 237:     if(UART1_TxInterruptHandler)
  8473  0021BE  0100               	movlb	0	; () banked
  8474  0021C0  51DE               	movf	_UART1_TxInterruptHandler& (0+255),w,b
  8475  0021C2  11DF               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
  8476  0021C4  B4D8               	btfsc	status,2,c
  8477  0021C6  EFE7  F010         	goto	i1u362_21
  8478  0021CA  EFE9  F010         	goto	i1u362_20
  8479  0021CE                     i1u362_21:
  8480  0021CE  EFF6  F010         	goto	i1l324
  8481  0021D2                     i1u362_20:
  8482  0021D2                     
  8483                           ; BSR set to: 0
  8484                           ;mcc_generated_files/uart1.c: 238:     {;mcc_generated_files/uart1.c: 239:         UART1
      +                          _TxInterruptHandler();
  8485  0021D2  D802               	call	i1u363_28
  8486  0021D4  EFF6  F010         	goto	i1u363_29
  8487  0021D8                     i1u363_28:
  8488  0021D8  0005               	push	
  8489  0021DA  6EFA               	movwf	pclath,c
  8490  0021DC  51DE               	movf	_UART1_TxInterruptHandler& (0+255),w,b
  8491  0021DE  6EFD               	movwf	tosl,c
  8492  0021E0  51DF               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
  8493  0021E2  6EFE               	movwf	tosh,c
  8494  0021E4  50F8               	movf	tblptru,w,c
  8495  0021E6  6EFF               	movwf	tosu,c
  8496  0021E8  50FA               	movf	pclath,w,c
  8497  0021EA  0012               	return		;indir
  8498  0021EC                     i1u363_29:
  8499  0021EC                     i1l324:
  8500  0021EC  0060  F047  FFD8   	movff	??_UART1_tx_vect_isr,status
  8501  0021F2  0011               	retfie		f
  8502  0021F4                     __end_of_UART1_tx_vect_isr:
  8503                           	callstack 0
  8504                           
  8505 ;; *************** function _UART1_Transmit_ISR *****************
  8506 ;; Defined at:
  8507 ;;		line 253 in file "mcc_generated_files/uart1.c"
  8508 ;; Parameters:    Size  Location     Type
  8509 ;;		None
  8510 ;; Auto vars:     Size  Location     Type
  8511 ;;		None
  8512 ;; Return value:  Size  Location     Type
  8513 ;;                  1    wreg      void 
  8514 ;; Registers used:
  8515 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8516 ;; Tracked objects:
  8517 ;;		On entry : 0/0
  8518 ;;		On exit  : 0/0
  8519 ;;		Unchanged: 0/0
  8520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8525 ;;Total ram usage:        0 bytes
  8526 ;; Hardware stack levels used: 1
  8527 ;; Hardware stack levels required when called: 4
  8528 ;; This function calls:
  8529 ;;		Nothing
  8530 ;; This function is called by:
  8531 ;;		_UART1_Initialize
  8532 ;;		_UART1_tx_vect_isr
  8533 ;; This function uses a non-reentrant model
  8534 ;;
  8535                           
  8536                           	psect	text51
  8537  00212E                     __ptext51:
  8538                           	callstack 0
  8539  00212E                     _UART1_Transmit_ISR:
  8540                           	callstack 20
  8541  00212E                     
  8542                           ;mcc_generated_files/uart1.c: 256:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
  8543  00212E  0E08               	movlw	8
  8544  002130  0100               	movlb	0	; () banked
  8545  002132  61E2               	cpfslt	_uart1TxBufferRemaining& (0+255),b	;volatile
  8546  002134  EF9E  F010         	goto	i1u346_21
  8547  002138  EFA0  F010         	goto	i1u346_20
  8548  00213C                     i1u346_21:
  8549  00213C  EFB8  F010         	goto	i1l333
  8550  002140                     i1u346_20:
  8551  002140                     
  8552                           ; BSR set to: 0
  8553                           ;mcc_generated_files/uart1.c: 257:     {;mcc_generated_files/uart1.c: 258:         U1TXB
      +                           = uart1TxBuffer[uart1TxTail++];
  8554  002140  0E70               	movlw	low _uart1TxBuffer
  8555  002142  2444               	addwf	_uart1TxTail^0,w,c	;volatile
  8556  002144  6ED9               	movwf	fsr2l,c
  8557  002146  6ADA               	clrf	fsr2h,c
  8558  002148  0E00               	movlw	high _uart1TxBuffer
  8559  00214A  22DA               	addwfc	fsr2h,f,c
  8560  00214C  50DF               	movf	indf2,w,c
  8561  00214E  013D               	movlb	61	; () banked
  8562  002150  6FEA               	movwf	234,b	;volatile
  8563  002152                     
  8564                           ; BSR set to: 61
  8565  002152  2A44               	incf	_uart1TxTail^0,f,c	;volatile
  8566  002154                     
  8567                           ; BSR set to: 61
  8568                           ;mcc_generated_files/uart1.c: 259:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
  8569  002154  0E07               	movlw	7
  8570  002156  6444               	cpfsgt	_uart1TxTail^0,c	;volatile
  8571  002158  EFB0  F010         	goto	i1u347_21
  8572  00215C  EFB2  F010         	goto	i1u347_20
  8573  002160                     i1u347_21:
  8574  002160  EFB4  F010         	goto	i1l4868
  8575  002164                     i1u347_20:
  8576  002164                     
  8577                           ; BSR set to: 61
  8578                           ;mcc_generated_files/uart1.c: 260:         {;mcc_generated_files/uart1.c: 261:          
      +                             uart1TxTail = 0;
  8579  002164  0E00               	movlw	0
  8580  002166  6E44               	movwf	_uart1TxTail^0,c	;volatile
  8581  002168                     i1l4868:
  8582                           
  8583                           ; BSR set to: 61
  8584                           ;mcc_generated_files/uart1.c: 263:         uart1TxBufferRemaining++;
  8585  002168  0100               	movlb	0	; () banked
  8586  00216A  2BE2               	incf	_uart1TxBufferRemaining& (0+255),f,b	;volatile
  8587                           
  8588                           ;mcc_generated_files/uart1.c: 264:     }
  8589  00216C  EFBA  F010         	goto	i1l336
  8590  002170                     i1l333:
  8591                           
  8592                           ; BSR set to: 0
  8593                           ;mcc_generated_files/uart1.c: 266:     {;mcc_generated_files/uart1.c: 267:         PIE3b
      +                          its.U1TXIE = 0;
  8594  002170  0139               	movlb	57	; () banked
  8595  002172  9993               	bcf	147,4,b	;volatile
  8596  002174                     i1l336:
  8597  002174  0012               	return		;funcret
  8598  002176                     __end_of_UART1_Transmit_ISR:
  8599                           	callstack 0
  8600                           
  8601 ;; *************** function _UART1_rx_vect_isr *****************
  8602 ;; Defined at:
  8603 ;;		line 243 in file "mcc_generated_files/uart1.c"
  8604 ;; Parameters:    Size  Location     Type
  8605 ;;		None
  8606 ;; Auto vars:     Size  Location     Type
  8607 ;;		None
  8608 ;; Return value:  Size  Location     Type
  8609 ;;                  1    wreg      void 
  8610 ;; Registers used:
  8611 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  8612 ;; Tracked objects:
  8613 ;;		On entry : 0/0
  8614 ;;		On exit  : 0/0
  8615 ;;		Unchanged: 0/0
  8616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8619 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8620 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8621 ;;Total ram usage:        1 bytes
  8622 ;; Hardware stack levels used: 1
  8623 ;; Hardware stack levels required when called: 7
  8624 ;; This function calls:
  8625 ;;		Absolute function
  8626 ;;		_UART1_Receive_ISR
  8627 ;; This function is called by:
  8628 ;;		Interrupt level 1
  8629 ;; This function uses a non-reentrant model
  8630 ;;
  8631                           
  8632                           	psect	text52
  8633  0021F4                     __ptext52:
  8634                           	callstack 0
  8635  0021F4                     _UART1_rx_vect_isr:
  8636                           	callstack 18
  8637                           
  8638                           ;incstack = 0
  8639  0021F4  006F FF60  F012    	movff	status,??_UART1_rx_vect_isr
  8640  0021FA                     
  8641                           ;mcc_generated_files/uart1.c: 245:     if(UART1_RxInterruptHandler)
  8642  0021FA  0100               	movlb	0	; () banked
  8643  0021FC  51E0               	movf	_UART1_RxInterruptHandler& (0+255),w,b
  8644  0021FE  11E1               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
  8645  002200  B4D8               	btfsc	status,2,c
  8646  002202  EF05  F011         	goto	i1u364_21
  8647  002206  EF07  F011         	goto	i1u364_20
  8648  00220A                     i1u364_21:
  8649  00220A  EF14  F011         	goto	i1l330
  8650  00220E                     i1u364_20:
  8651  00220E                     
  8652                           ; BSR set to: 0
  8653                           ;mcc_generated_files/uart1.c: 246:     {;mcc_generated_files/uart1.c: 247:         UART1
      +                          _RxInterruptHandler();
  8654  00220E  D802               	call	i1u365_28
  8655  002210  EF14  F011         	goto	i1u365_29
  8656  002214                     i1u365_28:
  8657  002214  0005               	push	
  8658  002216  6EFA               	movwf	pclath,c
  8659  002218  51E0               	movf	_UART1_RxInterruptHandler& (0+255),w,b
  8660  00221A  6EFD               	movwf	tosl,c
  8661  00221C  51E1               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
  8662  00221E  6EFE               	movwf	tosh,c
  8663  002220  50F8               	movf	tblptru,w,c
  8664  002222  6EFF               	movwf	tosu,c
  8665  002224  50FA               	movf	pclath,w,c
  8666  002226  0012               	return		;indir
  8667  002228                     i1u365_29:
  8668  002228                     i1l330:
  8669  002228  0060  F04B  FFD8   	movff	??_UART1_rx_vect_isr,status
  8670  00222E  0011               	retfie		f
  8671  002230                     __end_of_UART1_rx_vect_isr:
  8672                           	callstack 0
  8673                           
  8674 ;; *************** function _UART1_Receive_ISR *****************
  8675 ;; Defined at:
  8676 ;;		line 273 in file "mcc_generated_files/uart1.c"
  8677 ;; Parameters:    Size  Location     Type
  8678 ;;		None
  8679 ;; Auto vars:     Size  Location     Type
  8680 ;;		None
  8681 ;; Return value:  Size  Location     Type
  8682 ;;                  1    wreg      void 
  8683 ;; Registers used:
  8684 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  8685 ;; Tracked objects:
  8686 ;;		On entry : 0/0
  8687 ;;		On exit  : 0/0
  8688 ;;		Unchanged: 0/0
  8689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8694 ;;Total ram usage:        0 bytes
  8695 ;; Hardware stack levels used: 1
  8696 ;; Hardware stack levels required when called: 6
  8697 ;; This function calls:
  8698 ;;		Absolute function
  8699 ;;		_UART1_DefaultErrorHandler
  8700 ;;		_UART1_DefaultFramingErrorHandler
  8701 ;;		_UART1_DefaultOverrunErrorHandler
  8702 ;;		_UART1_RxDataHandler
  8703 ;; This function is called by:
  8704 ;;		_UART1_Initialize
  8705 ;;		_UART1_rx_vect_isr
  8706 ;; This function uses a non-reentrant model
  8707 ;;
  8708                           
  8709                           	psect	text53
  8710  001BE0                     __ptext53:
  8711                           	callstack 0
  8712  001BE0                     _UART1_Receive_ISR:
  8713                           	callstack 18
  8714  001BE0                     
  8715                           ;mcc_generated_files/uart1.c: 276:     uart1RxStatusBuffer[uart1RxHead].status = 0;
  8716  001BE0  0E60               	movlw	low _uart1RxStatusBuffer
  8717  001BE2  2443               	addwf	_uart1RxHead^0,w,c	;volatile
  8718  001BE4  6ED9               	movwf	fsr2l,c
  8719  001BE6  6ADA               	clrf	fsr2h,c
  8720  001BE8  0E00               	movlw	high _uart1RxStatusBuffer
  8721  001BEA  22DA               	addwfc	fsr2h,f,c
  8722  001BEC  0E00               	movlw	0
  8723  001BEE  6EDF               	movwf	indf2,c
  8724  001BF0                     
  8725                           ;mcc_generated_files/uart1.c: 278:     if(U1ERRIRbits.FERIF){
  8726  001BF0  013D               	movlb	61	; () banked
  8727  001BF2  A7F9               	btfss	249,3,b	;volatile
  8728  001BF4  EFFE  F00D         	goto	i1u348_21
  8729  001BF8  EF00  F00E         	goto	i1u348_20
  8730  001BFC                     i1u348_21:
  8731  001BFC  EF15  F00E         	goto	i1l4878
  8732  001C00                     i1u348_20:
  8733  001C00                     
  8734                           ; BSR set to: 61
  8735                           ;mcc_generated_files/uart1.c: 279:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
  8736  001C00  0E60               	movlw	low _uart1RxStatusBuffer
  8737  001C02  2443               	addwf	_uart1RxHead^0,w,c	;volatile
  8738  001C04  6ED9               	movwf	fsr2l,c
  8739  001C06  6ADA               	clrf	fsr2h,c
  8740  001C08  0E00               	movlw	high _uart1RxStatusBuffer
  8741  001C0A  22DA               	addwfc	fsr2h,f,c
  8742  001C0C  0100               	movlb	0	; () banked
  8743  001C0E  82DF               	bsf	indf2,1,c
  8744  001C10                     
  8745                           ; BSR set to: 0
  8746                           ;mcc_generated_files/uart1.c: 280:         UART1_FramingErrorHandler();
  8747  001C10  D802               	call	i1u349_28
  8748  001C12  EF15  F00E         	goto	i1u349_29
  8749  001C16                     i1u349_28:
  8750  001C16  0005               	push	
  8751  001C18  6EFA               	movwf	pclath,c
  8752  001C1A  51DC               	movf	_UART1_FramingErrorHandler& (0+255),w,b
  8753  001C1C  6EFD               	movwf	tosl,c
  8754  001C1E  51DD               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
  8755  001C20  6EFE               	movwf	tosh,c
  8756  001C22  50F8               	movf	tblptru,w,c
  8757  001C24  6EFF               	movwf	tosu,c
  8758  001C26  50FA               	movf	pclath,w,c
  8759  001C28  0012               	return		;indir
  8760  001C2A                     i1u349_29:
  8761  001C2A                     i1l4878:
  8762                           
  8763                           ;mcc_generated_files/uart1.c: 283:     if(U1ERRIRbits.RXFOIF){
  8764  001C2A  013D               	movlb	61	; () banked
  8765  001C2C  A3F9               	btfss	249,1,b	;volatile
  8766  001C2E  EF1B  F00E         	goto	i1u350_21
  8767  001C32  EF1D  F00E         	goto	i1u350_20
  8768  001C36                     i1u350_21:
  8769  001C36  EF32  F00E         	goto	i1l4884
  8770  001C3A                     i1u350_20:
  8771  001C3A                     
  8772                           ; BSR set to: 61
  8773                           ;mcc_generated_files/uart1.c: 284:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
  8774  001C3A  0E60               	movlw	low _uart1RxStatusBuffer
  8775  001C3C  2443               	addwf	_uart1RxHead^0,w,c	;volatile
  8776  001C3E  6ED9               	movwf	fsr2l,c
  8777  001C40  6ADA               	clrf	fsr2h,c
  8778  001C42  0E00               	movlw	high _uart1RxStatusBuffer
  8779  001C44  22DA               	addwfc	fsr2h,f,c
  8780  001C46  0100               	movlb	0	; () banked
  8781  001C48  84DF               	bsf	indf2,2,c
  8782  001C4A                     
  8783                           ; BSR set to: 0
  8784                           ;mcc_generated_files/uart1.c: 285:         UART1_OverrunErrorHandler();
  8785  001C4A  D802               	call	i1u351_28
  8786  001C4C  EF32  F00E         	goto	i1u351_29
  8787  001C50                     i1u351_28:
  8788  001C50  0005               	push	
  8789  001C52  6EFA               	movwf	pclath,c
  8790  001C54  51DA               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
  8791  001C56  6EFD               	movwf	tosl,c
  8792  001C58  51DB               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
  8793  001C5A  6EFE               	movwf	tosh,c
  8794  001C5C  50F8               	movf	tblptru,w,c
  8795  001C5E  6EFF               	movwf	tosu,c
  8796  001C60  50FA               	movf	pclath,w,c
  8797  001C62  0012               	return		;indir
  8798  001C64                     i1u351_29:
  8799  001C64                     i1l4884:
  8800                           
  8801                           ;mcc_generated_files/uart1.c: 288:     if(uart1RxStatusBuffer[uart1RxHead].status){
  8802  001C64  0E60               	movlw	low _uart1RxStatusBuffer
  8803  001C66  2443               	addwf	_uart1RxHead^0,w,c	;volatile
  8804  001C68  6ED9               	movwf	fsr2l,c
  8805  001C6A  6ADA               	clrf	fsr2h,c
  8806  001C6C  0E00               	movlw	high _uart1RxStatusBuffer
  8807  001C6E  22DA               	addwfc	fsr2h,f,c
  8808  001C70  50DF               	movf	indf2,w,c
  8809  001C72  B4D8               	btfsc	status,2,c
  8810  001C74  EF3E  F00E         	goto	i1u352_21
  8811  001C78  EF40  F00E         	goto	i1u352_20
  8812  001C7C                     i1u352_21:
  8813  001C7C  EF50  F00E         	goto	i1l4888
  8814  001C80                     i1u352_20:
  8815  001C80                     
  8816                           ;mcc_generated_files/uart1.c: 289:         UART1_ErrorHandler();
  8817  001C80  D802               	call	i1u353_28
  8818  001C82  EF4E  F00E         	goto	i1u353_29
  8819  001C86                     i1u353_28:
  8820  001C86  0005               	push	
  8821  001C88  0100               	movlb	0	; () banked
  8822  001C8A  6EFA               	movwf	pclath,c
  8823  001C8C  51D8               	movf	_UART1_ErrorHandler& (0+255),w,b
  8824  001C8E  6EFD               	movwf	tosl,c
  8825  001C90  51D9               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
  8826  001C92  6EFE               	movwf	tosh,c
  8827  001C94  50F8               	movf	tblptru,w,c
  8828  001C96  6EFF               	movwf	tosu,c
  8829  001C98  50FA               	movf	pclath,w,c
  8830  001C9A  0012               	return		;indir
  8831  001C9C                     i1u353_29:
  8832                           
  8833                           ;mcc_generated_files/uart1.c: 290:     } else {
  8834  001C9C  EF52  F00E         	goto	i1l343
  8835  001CA0                     i1l4888:
  8836                           
  8837                           ;mcc_generated_files/uart1.c: 291:         UART1_RxDataHandler();
  8838  001CA0  ECC4  F012         	call	_UART1_RxDataHandler	;wreg free
  8839  001CA4                     i1l343:
  8840  001CA4  0012               	return		;funcret
  8841  001CA6                     __end_of_UART1_Receive_ISR:
  8842                           	callstack 0
  8843                           
  8844 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
  8845 ;; Defined at:
  8846 ;;		line 309 in file "mcc_generated_files/uart1.c"
  8847 ;; Parameters:    Size  Location     Type
  8848 ;;		None
  8849 ;; Auto vars:     Size  Location     Type
  8850 ;;		None
  8851 ;; Return value:  Size  Location     Type
  8852 ;;                  1    wreg      void 
  8853 ;; Registers used:
  8854 ;;		None
  8855 ;; Tracked objects:
  8856 ;;		On entry : 0/0
  8857 ;;		On exit  : 0/0
  8858 ;;		Unchanged: 0/0
  8859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8864 ;;Total ram usage:        0 bytes
  8865 ;; Hardware stack levels used: 1
  8866 ;; Hardware stack levels required when called: 4
  8867 ;; This function calls:
  8868 ;;		Nothing
  8869 ;; This function is called by:
  8870 ;;		_UART1_Initialize
  8871 ;;		_UART1_Receive_ISR
  8872 ;; This function uses a non-reentrant model
  8873 ;;
  8874                           
  8875                           	psect	text54
  8876  002794                     __ptext54:
  8877                           	callstack 0
  8878  002794                     _UART1_DefaultOverrunErrorHandler:
  8879                           	callstack 19
  8880  002794  0012               	return		;funcret
  8881  002796                     __end_of_UART1_DefaultOverrunErrorHandler:
  8882                           	callstack 0
  8883                           
  8884 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
  8885 ;; Defined at:
  8886 ;;		line 307 in file "mcc_generated_files/uart1.c"
  8887 ;; Parameters:    Size  Location     Type
  8888 ;;		None
  8889 ;; Auto vars:     Size  Location     Type
  8890 ;;		None
  8891 ;; Return value:  Size  Location     Type
  8892 ;;                  1    wreg      void 
  8893 ;; Registers used:
  8894 ;;		None
  8895 ;; Tracked objects:
  8896 ;;		On entry : 0/0
  8897 ;;		On exit  : 0/0
  8898 ;;		Unchanged: 0/0
  8899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8904 ;;Total ram usage:        0 bytes
  8905 ;; Hardware stack levels used: 1
  8906 ;; Hardware stack levels required when called: 4
  8907 ;; This function calls:
  8908 ;;		Nothing
  8909 ;; This function is called by:
  8910 ;;		_UART1_Initialize
  8911 ;;		_UART1_Receive_ISR
  8912 ;; This function uses a non-reentrant model
  8913 ;;
  8914                           
  8915                           	psect	text55
  8916  002796                     __ptext55:
  8917                           	callstack 0
  8918  002796                     _UART1_DefaultFramingErrorHandler:
  8919                           	callstack 19
  8920  002796  0012               	return		;funcret
  8921  002798                     __end_of_UART1_DefaultFramingErrorHandler:
  8922                           	callstack 0
  8923                           
  8924 ;; *************** function _UART1_DefaultErrorHandler *****************
  8925 ;; Defined at:
  8926 ;;		line 311 in file "mcc_generated_files/uart1.c"
  8927 ;; Parameters:    Size  Location     Type
  8928 ;;		None
  8929 ;; Auto vars:     Size  Location     Type
  8930 ;;		None
  8931 ;; Return value:  Size  Location     Type
  8932 ;;                  1    wreg      void 
  8933 ;; Registers used:
  8934 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8935 ;; Tracked objects:
  8936 ;;		On entry : 0/0
  8937 ;;		On exit  : 0/0
  8938 ;;		Unchanged: 0/0
  8939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8944 ;;Total ram usage:        0 bytes
  8945 ;; Hardware stack levels used: 1
  8946 ;; Hardware stack levels required when called: 5
  8947 ;; This function calls:
  8948 ;;		_UART1_RxDataHandler
  8949 ;; This function is called by:
  8950 ;;		_UART1_Initialize
  8951 ;;		_UART1_Receive_ISR
  8952 ;; This function uses a non-reentrant model
  8953 ;;
  8954                           
  8955                           	psect	text56
  8956  002788                     __ptext56:
  8957                           	callstack 0
  8958  002788                     _UART1_DefaultErrorHandler:
  8959                           	callstack 18
  8960  002788                     
  8961                           ;mcc_generated_files/uart1.c: 312:     UART1_RxDataHandler();
  8962  002788  ECC4  F012         	call	_UART1_RxDataHandler	;wreg free
  8963  00278C  0012               	return		;funcret
  8964  00278E                     __end_of_UART1_DefaultErrorHandler:
  8965                           	callstack 0
  8966                           
  8967 ;; *************** function _UART1_RxDataHandler *****************
  8968 ;; Defined at:
  8969 ;;		line 297 in file "mcc_generated_files/uart1.c"
  8970 ;; Parameters:    Size  Location     Type
  8971 ;;		None
  8972 ;; Auto vars:     Size  Location     Type
  8973 ;;		None
  8974 ;; Return value:  Size  Location     Type
  8975 ;;                  1    wreg      void 
  8976 ;; Registers used:
  8977 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8978 ;; Tracked objects:
  8979 ;;		On entry : 0/0
  8980 ;;		On exit  : 0/0
  8981 ;;		Unchanged: 0/0
  8982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8987 ;;Total ram usage:        0 bytes
  8988 ;; Hardware stack levels used: 1
  8989 ;; Hardware stack levels required when called: 4
  8990 ;; This function calls:
  8991 ;;		Nothing
  8992 ;; This function is called by:
  8993 ;;		_UART1_Receive_ISR
  8994 ;;		_UART1_DefaultErrorHandler
  8995 ;; This function uses a non-reentrant model
  8996 ;;
  8997                           
  8998                           	psect	text57
  8999  002588                     __ptext57:
  9000                           	callstack 0
  9001  002588                     _UART1_RxDataHandler:
  9002                           	callstack 19
  9003  002588                     
  9004                           ;mcc_generated_files/uart1.c: 299:     uart1RxBuffer[uart1RxHead++] = U1RXB;
  9005  002588  0E68               	movlw	low _uart1RxBuffer
  9006  00258A  2443               	addwf	_uart1RxHead^0,w,c	;volatile
  9007  00258C  6ED9               	movwf	fsr2l,c
  9008  00258E  6ADA               	clrf	fsr2h,c
  9009  002590  0E00               	movlw	high _uart1RxBuffer
  9010  002592  22DA               	addwfc	fsr2h,f,c
  9011  002594  006F F7A3 FFDF     	movff	15848,indf2	;volatile
  9012  00259A  2A43               	incf	_uart1RxHead^0,f,c	;volatile
  9013  00259C                     
  9014                           ;mcc_generated_files/uart1.c: 300:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
  9015  00259C  0E07               	movlw	7
  9016  00259E  6443               	cpfsgt	_uart1RxHead^0,c	;volatile
  9017  0025A0  EFD4  F012         	goto	i1u245_21
  9018  0025A4  EFD6  F012         	goto	i1u245_20
  9019  0025A8                     i1u245_21:
  9020  0025A8  EFD8  F012         	goto	i1l4128
  9021  0025AC                     i1u245_20:
  9022  0025AC                     
  9023                           ;mcc_generated_files/uart1.c: 301:     {;mcc_generated_files/uart1.c: 302:         uart1
      +                          RxHead = 0;
  9024  0025AC  0E00               	movlw	0
  9025  0025AE  6E43               	movwf	_uart1RxHead^0,c	;volatile
  9026  0025B0                     i1l4128:
  9027                           
  9028                           ;mcc_generated_files/uart1.c: 304:     uart1RxCount++;
  9029  0025B0  2A41               	incf	_uart1RxCount^0,f,c	;volatile
  9030  0025B2  0012               	return		;funcret
  9031  0025B4                     __end_of_UART1_RxDataHandler:
  9032                           	callstack 0
  9033                           
  9034 ;; *************** function _TMR4_ISR *****************
  9035 ;; Defined at:
  9036 ;;		line 166 in file "mcc_generated_files/tmr4.c"
  9037 ;; Parameters:    Size  Location     Type
  9038 ;;		None
  9039 ;; Auto vars:     Size  Location     Type
  9040 ;;		None
  9041 ;; Return value:  Size  Location     Type
  9042 ;;                  1    wreg      void 
  9043 ;; Registers used:
  9044 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  9045 ;; Tracked objects:
  9046 ;;		On entry : 0/0
  9047 ;;		On exit  : 0/0
  9048 ;;		Unchanged: 0/0
  9049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9052 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9053 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9054 ;;Total ram usage:        1 bytes
  9055 ;; Hardware stack levels used: 1
  9056 ;; Hardware stack levels required when called: 6
  9057 ;; This function calls:
  9058 ;;		_TMR4_CallBack
  9059 ;; This function is called by:
  9060 ;;		Interrupt level 1
  9061 ;; This function uses a non-reentrant model
  9062 ;;
  9063                           
  9064                           	psect	text58
  9065  002268                     __ptext58:
  9066                           	callstack 0
  9067  002268                     _TMR4_ISR:
  9068                           	callstack 19
  9069                           
  9070                           ;incstack = 0
  9071  002268  006F FF60  F013    	movff	status,??_TMR4_ISR
  9072  00226E                     
  9073                           ;mcc_generated_files/tmr4.c: 168:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr4.c: 171:     PIR7bits.TMR4IF = 0;
  9074  00226E  0139               	movlb	57	; () banked
  9075  002270  91A7               	bcf	167,0,b	;volatile
  9076  002272                     
  9077                           ; BSR set to: 57
  9078                           ;mcc_generated_files/tmr4.c: 174:     if (++CountCallBack >= 10)
  9079  002272  4A3C               	infsnz	TMR4_ISR@CountCallBack^0,f,c	;volatile
  9080  002274  2A3D               	incf	(TMR4_ISR@CountCallBack+1)^0,f,c	;volatile
  9081  002276  503D               	movf	(TMR4_ISR@CountCallBack+1)^0,w,c	;volatile
  9082  002278  E109               	bnz	i1u370_20
  9083  00227A  0E0A               	movlw	10
  9084  00227C  5C3C               	subwf	TMR4_ISR@CountCallBack^0,w,c	;volatile
  9085  00227E  A0D8               	btfss	status,0,c
  9086  002280  EF44  F011         	goto	i1u370_21
  9087  002284  EF46  F011         	goto	i1u370_20
  9088  002288                     i1u370_21:
  9089  002288  EF4C  F011         	goto	i1l688
  9090  00228C                     i1u370_20:
  9091  00228C                     
  9092                           ; BSR set to: 57
  9093                           ;mcc_generated_files/tmr4.c: 175:     {;mcc_generated_files/tmr4.c: 177:         TMR4_Ca
      +                          llBack();
  9094  00228C  EC22  F012         	call	_TMR4_CallBack	;wreg free
  9095  002290                     
  9096                           ;mcc_generated_files/tmr4.c: 180:         CountCallBack = 0;
  9097  002290  0E00               	movlw	0
  9098  002292  6E3D               	movwf	(TMR4_ISR@CountCallBack+1)^0,c	;volatile
  9099  002294  0E00               	movlw	0
  9100  002296  6E3C               	movwf	TMR4_ISR@CountCallBack^0,c	;volatile
  9101  002298                     i1l688:
  9102  002298  0060  F04F  FFD8   	movff	??_TMR4_ISR,status
  9103  00229E  0011               	retfie		f
  9104  0022A0                     __end_of_TMR4_ISR:
  9105                           	callstack 0
  9106                           
  9107 ;; *************** function _TMR4_CallBack *****************
  9108 ;; Defined at:
  9109 ;;		line 184 in file "mcc_generated_files/tmr4.c"
  9110 ;; Parameters:    Size  Location     Type
  9111 ;;		None
  9112 ;; Auto vars:     Size  Location     Type
  9113 ;;		None
  9114 ;; Return value:  Size  Location     Type
  9115 ;;                  1    wreg      void 
  9116 ;; Registers used:
  9117 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  9118 ;; Tracked objects:
  9119 ;;		On entry : 0/0
  9120 ;;		On exit  : 0/0
  9121 ;;		Unchanged: 0/0
  9122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9127 ;;Total ram usage:        0 bytes
  9128 ;; Hardware stack levels used: 1
  9129 ;; Hardware stack levels required when called: 5
  9130 ;; This function calls:
  9131 ;;		Absolute function
  9132 ;;		_TMR4_10msISR
  9133 ;;		_TMR4_DefaultInterruptHandler
  9134 ;; This function is called by:
  9135 ;;		_TMR4_ISR
  9136 ;; This function uses a non-reentrant model
  9137 ;;
  9138                           
  9139                           	psect	text59
  9140  002444                     __ptext59:
  9141                           	callstack 0
  9142  002444                     _TMR4_CallBack:
  9143                           	callstack 19
  9144  002444                     
  9145                           ;mcc_generated_files/tmr4.c: 188:     if(TMR4_InterruptHandler)
  9146  002444  0100               	movlb	0	; () banked
  9147  002446  51CC               	movf	_TMR4_InterruptHandler& (0+255),w,b
  9148  002448  11CD               	iorwf	(_TMR4_InterruptHandler+1)& (0+255),w,b
  9149  00244A  B4D8               	btfsc	status,2,c
  9150  00244C  EF2A  F012         	goto	i1u357_21
  9151  002450  EF2C  F012         	goto	i1u357_20
  9152  002454                     i1u357_21:
  9153  002454  EF39  F012         	goto	i1l692
  9154  002458                     i1u357_20:
  9155  002458                     
  9156                           ; BSR set to: 0
  9157                           ;mcc_generated_files/tmr4.c: 189:     {;mcc_generated_files/tmr4.c: 190:         TMR4_In
      +                          terruptHandler();
  9158  002458  D802               	call	i1u358_28
  9159  00245A  EF39  F012         	goto	i1u358_29
  9160  00245E                     i1u358_28:
  9161  00245E  0005               	push	
  9162  002460  6EFA               	movwf	pclath,c
  9163  002462  51CC               	movf	_TMR4_InterruptHandler& (0+255),w,b
  9164  002464  6EFD               	movwf	tosl,c
  9165  002466  51CD               	movf	(_TMR4_InterruptHandler+1)& (0+255),w,b
  9166  002468  6EFE               	movwf	tosh,c
  9167  00246A  50F8               	movf	tblptru,w,c
  9168  00246C  6EFF               	movwf	tosu,c
  9169  00246E  50FA               	movf	pclath,w,c
  9170  002470  0012               	return		;indir
  9171  002472                     i1u358_29:
  9172  002472                     i1l692:
  9173  002472  0012               	return		;funcret
  9174  002474                     __end_of_TMR4_CallBack:
  9175                           	callstack 0
  9176                           
  9177 ;; *************** function _TMR4_10msISR *****************
  9178 ;; Defined at:
  9179 ;;		line 55 in file "main.c"
  9180 ;; Parameters:    Size  Location     Type
  9181 ;;		None
  9182 ;; Auto vars:     Size  Location     Type
  9183 ;;		None
  9184 ;; Return value:  Size  Location     Type
  9185 ;;                  1    wreg      void 
  9186 ;; Registers used:
  9187 ;;		status,2, status,0
  9188 ;; Tracked objects:
  9189 ;;		On entry : 0/0
  9190 ;;		On exit  : 0/0
  9191 ;;		Unchanged: 0/0
  9192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9197 ;;Total ram usage:        0 bytes
  9198 ;; Hardware stack levels used: 1
  9199 ;; Hardware stack levels required when called: 4
  9200 ;; This function calls:
  9201 ;;		Nothing
  9202 ;; This function is called by:
  9203 ;;		_main
  9204 ;;		_TMR4_CallBack
  9205 ;; This function uses a non-reentrant model
  9206 ;;
  9207                           
  9208                           	psect	text60
  9209  00278E                     __ptext60:
  9210                           	callstack 0
  9211  00278E                     _TMR4_10msISR:
  9212                           	callstack 19
  9213  00278E                     
  9214                           ;main.c: 56:     ++cycle10ms;
  9215  00278E  0100               	movlb	0	; () banked
  9216  002790  2B9E               	incf	_cycle10ms& (0+255),f,b	;volatile
  9217  002792                     
  9218                           ; BSR set to: 0
  9219  002792  0012               	return		;funcret
  9220  002794                     __end_of_TMR4_10msISR:
  9221                           	callstack 0
  9222                           
  9223 ;; *************** function _TMR4_DefaultInterruptHandler *****************
  9224 ;; Defined at:
  9225 ;;		line 198 in file "mcc_generated_files/tmr4.c"
  9226 ;; Parameters:    Size  Location     Type
  9227 ;;		None
  9228 ;; Auto vars:     Size  Location     Type
  9229 ;;		None
  9230 ;; Return value:  Size  Location     Type
  9231 ;;                  1    wreg      void 
  9232 ;; Registers used:
  9233 ;;		None
  9234 ;; Tracked objects:
  9235 ;;		On entry : 0/0
  9236 ;;		On exit  : 0/0
  9237 ;;		Unchanged: 0/0
  9238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9243 ;;Total ram usage:        0 bytes
  9244 ;; Hardware stack levels used: 1
  9245 ;; Hardware stack levels required when called: 4
  9246 ;; This function calls:
  9247 ;;		Nothing
  9248 ;; This function is called by:
  9249 ;;		_TMR4_Initialize
  9250 ;;		_TMR4_CallBack
  9251 ;; This function uses a non-reentrant model
  9252 ;;
  9253                           
  9254                           	psect	text61
  9255  002798                     __ptext61:
  9256                           	callstack 0
  9257  002798                     _TMR4_DefaultInterruptHandler:
  9258                           	callstack 19
  9259  002798  0012               	return		;funcret
  9260  00279A                     __end_of_TMR4_DefaultInterruptHandler:
  9261                           	callstack 0
  9262                           
  9263 ;; *************** function _Default_ISR *****************
  9264 ;; Defined at:
  9265 ;;		line 83 in file "mcc_generated_files/interrupt_manager.c"
  9266 ;; Parameters:    Size  Location     Type
  9267 ;;		None
  9268 ;; Auto vars:     Size  Location     Type
  9269 ;;		None
  9270 ;; Return value:  Size  Location     Type
  9271 ;;                  1    wreg      void 
  9272 ;; Registers used:
  9273 ;;		None
  9274 ;; Tracked objects:
  9275 ;;		On entry : 0/0
  9276 ;;		On exit  : 0/0
  9277 ;;		Unchanged: 0/0
  9278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9283 ;;Total ram usage:        0 bytes
  9284 ;; Hardware stack levels used: 1
  9285 ;; This function calls:
  9286 ;;		Nothing
  9287 ;; This function is called by:
  9288 ;;		Interrupt level 2
  9289 ;; This function uses a non-reentrant model
  9290 ;;
  9291                           
  9292                           	psect	text62
  9293  00279C                     __ptext62:
  9294                           	callstack 0
  9295  00279C                     _Default_ISR:
  9296                           	callstack 21
  9297  00279C  0011               	retfie		f
  9298  00279E                     __end_of_Default_ISR:
  9299                           	callstack 0
  9300                           
  9301 ;; *************** function _CCP3_CaptureISR *****************
  9302 ;; Defined at:
  9303 ;;		line 104 in file "mcc_generated_files/ccp3.c"
  9304 ;; Parameters:    Size  Location     Type
  9305 ;;		None
  9306 ;; Auto vars:     Size  Location     Type
  9307 ;;  module          2    2[COMRAM] struct CCPR3Reg_tag
  9308 ;; Return value:  Size  Location     Type
  9309 ;;                  1    wreg      void 
  9310 ;; Registers used:
  9311 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  9312 ;; Tracked objects:
  9313 ;;		On entry : 0/0
  9314 ;;		On exit  : 0/0
  9315 ;;		Unchanged: 0/0
  9316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9318 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9320 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9321 ;;Total ram usage:        2 bytes
  9322 ;; Hardware stack levels used: 1
  9323 ;; Hardware stack levels required when called: 1
  9324 ;; This function calls:
  9325 ;;		Absolute function
  9326 ;;		_CCP3_DefaultCallBack
  9327 ;; This function is called by:
  9328 ;;		Interrupt level 2
  9329 ;; This function uses a non-reentrant model
  9330 ;;
  9331                           
  9332                           	psect	text63
  9333  0022A0                     __ptext63:
  9334                           	callstack 0
  9335  0022A0                     _CCP3_CaptureISR:
  9336                           	callstack 20
  9337  0022A0                     
  9338                           ;mcc_generated_files/ccp3.c: 106:     CCP3_PERIOD_REG_T module;;mcc_generated_files/ccp3
      +                          .c: 109:     PIR9bits.CCP3IF = 0;
  9339  0022A0  0139               	movlb	57	; () banked
  9340  0022A2  93A9               	bcf	169,1,b	;volatile
  9341                           
  9342                           ;mcc_generated_files/ccp3.c: 112:     module.ccpr3l = CCPR3L;
  9343  0022A4  006F FDD0  F003    	movff	16244,CCP3_CaptureISR@module	;volatile
  9344                           
  9345                           ;mcc_generated_files/ccp3.c: 113:     module.ccpr3h = CCPR3H;
  9346  0022AA  006F FDD4  F004    	movff	16245,CCP3_CaptureISR@module+1	;volatile
  9347  0022B0                     
  9348                           ; BSR set to: 57
  9349                           ;mcc_generated_files/ccp3.c: 116:     CCP3_CallBack(module.ccpr3_16Bit);
  9350  0022B0  C003  F001         	movff	CCP3_CaptureISR@module,CCP3_DefaultCallBack@capturedValue
  9351  0022B4  C004  F002         	movff	CCP3_CaptureISR@module+1,CCP3_DefaultCallBack@capturedValue+1
  9352  0022B8  D802               	call	i2u366_48
  9353  0022BA  EF6A  F011         	goto	i2u366_49
  9354  0022BE                     i2u366_48:
  9355  0022BE  0005               	push	
  9356  0022C0  0100               	movlb	0	; () banked
  9357  0022C2  6EFA               	movwf	pclath,c
  9358  0022C4  51D6               	movf	_CCP3_CallBack& (0+255),w,b
  9359  0022C6  6EFD               	movwf	tosl,c
  9360  0022C8  51D7               	movf	(_CCP3_CallBack+1)& (0+255),w,b
  9361  0022CA  6EFE               	movwf	tosh,c
  9362  0022CC  50F8               	movf	tblptru,w,c
  9363  0022CE  6EFF               	movwf	tosu,c
  9364  0022D0  50FA               	movf	pclath,w,c
  9365  0022D2  0012               	return		;indir
  9366  0022D4                     i2u366_49:
  9367  0022D4  0011               	retfie		f
  9368  0022D6                     __end_of_CCP3_CaptureISR:
  9369                           	callstack 0
  9370                           
  9371 ;; *************** function _CCP3_DefaultCallBack *****************
  9372 ;; Defined at:
  9373 ;;		line 64 in file "mcc_generated_files/ccp3.c"
  9374 ;; Parameters:    Size  Location     Type
  9375 ;;  capturedValu    2    0[COMRAM] unsigned short 
  9376 ;; Auto vars:     Size  Location     Type
  9377 ;;		None
  9378 ;; Return value:  Size  Location     Type
  9379 ;;                  1    wreg      void 
  9380 ;; Registers used:
  9381 ;;		wreg, status,2, status,0
  9382 ;; Tracked objects:
  9383 ;;		On entry : 0/0
  9384 ;;		On exit  : 0/0
  9385 ;;		Unchanged: 0/0
  9386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9387 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9390 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9391 ;;Total ram usage:        2 bytes
  9392 ;; Hardware stack levels used: 1
  9393 ;; This function calls:
  9394 ;;		Nothing
  9395 ;; This function is called by:
  9396 ;;		_CCP3_Initialize
  9397 ;;		_CCP3_CaptureISR
  9398 ;; This function uses a non-reentrant model
  9399 ;;
  9400                           
  9401                           	psect	text64
  9402  002474                     __ptext64:
  9403                           	callstack 0
  9404  002474                     _CCP3_DefaultCallBack:
  9405                           	callstack 20
  9406  002474                     
  9407                           ;mcc_generated_files/ccp3.c: 64: static void CCP3_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp3.c: 65: {;mcc_generated_files/ccp3.c: 67:     if(PORTDbits.RD7
      +                          ) {
  9408  002474  AECD               	btfss	205,7,c	;volatile
  9409  002476  EF3F  F012         	goto	i2u354_41
  9410  00247A  EF41  F012         	goto	i2u354_40
  9411  00247E                     i2u354_41:
  9412  00247E  EF47  F012         	goto	i2l4894
  9413  002482                     i2u354_40:
  9414  002482                     
  9415                           ;mcc_generated_files/ccp3.c: 68:         distLeftM = capturedValue;
  9416  002482  C001  F09A         	movff	CCP3_DefaultCallBack@capturedValue,_distLeftM
  9417  002486  C002  F09B         	movff	CCP3_DefaultCallBack@capturedValue+1,_distLeftM+1
  9418                           
  9419                           ;mcc_generated_files/ccp3.c: 69:     } else {
  9420  00248A  EF51  F012         	goto	i2l438
  9421  00248E                     i2l4894:
  9422                           
  9423                           ;mcc_generated_files/ccp3.c: 70:         distLeft = capturedValue - distLeftM;
  9424  00248E  0100               	movlb	0	; () banked
  9425  002490  519A               	movf	_distLeftM& (0+255),w,b
  9426  002492  5C01               	subwf	CCP3_DefaultCallBack@capturedValue^0,w,c
  9427  002494  6F9C               	movwf	_distLeft& (0+255),b	;volatile
  9428  002496  519B               	movf	(_distLeftM+1)& (0+255),w,b
  9429  002498  5802               	subwfb	(CCP3_DefaultCallBack@capturedValue+1)^0,w,c
  9430  00249A  6F9D               	movwf	(_distLeft+1)& (0+255),b	;volatile
  9431  00249C                     
  9432                           ; BSR set to: 0
  9433                           ;mcc_generated_files/ccp3.c: 71:         distLeft >>= 1;
  9434  00249C  90D8               	bcf	status,0,c
  9435  00249E  339D               	rrcf	(_distLeft+1)& (0+255),f,b	;volatile
  9436  0024A0  339C               	rrcf	_distLeft& (0+255),f,b	;volatile
  9437  0024A2                     i2l438:
  9438  0024A2  0012               	return		;funcret
  9439  0024A4                     __end_of_CCP3_DefaultCallBack:
  9440                           	callstack 0
  9441                           
  9442 ;; *************** function _CCP4_CaptureISR *****************
  9443 ;; Defined at:
  9444 ;;		line 107 in file "mcc_generated_files/ccp4.c"
  9445 ;; Parameters:    Size  Location     Type
  9446 ;;		None
  9447 ;; Auto vars:     Size  Location     Type
  9448 ;;  module          2    6[COMRAM] struct CCPR4Reg_tag
  9449 ;; Return value:  Size  Location     Type
  9450 ;;                  1    wreg      void 
  9451 ;; Registers used:
  9452 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  9453 ;; Tracked objects:
  9454 ;;		On entry : 0/0
  9455 ;;		On exit  : 0/0
  9456 ;;		Unchanged: 0/0
  9457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9459 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9461 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9462 ;;Total ram usage:        2 bytes
  9463 ;; Hardware stack levels used: 1
  9464 ;; Hardware stack levels required when called: 1
  9465 ;; This function calls:
  9466 ;;		Absolute function
  9467 ;;		_CCP4_DefaultCallBack
  9468 ;; This function is called by:
  9469 ;;		Interrupt level 2
  9470 ;; This function uses a non-reentrant model
  9471 ;;
  9472                           
  9473                           	psect	text65
  9474  0022D8                     __ptext65:
  9475                           	callstack 0
  9476  0022D8                     _CCP4_CaptureISR:
  9477                           	callstack 20
  9478  0022D8                     
  9479                           ;mcc_generated_files/ccp4.c: 109:     CCP4_PERIOD_REG_T module;;mcc_generated_files/ccp4
      +                          .c: 112:     PIR10bits.CCP4IF = 0;
  9480  0022D8  0139               	movlb	57	; () banked
  9481  0022DA  91AA               	bcf	170,0,b	;volatile
  9482                           
  9483                           ;mcc_generated_files/ccp4.c: 115:     module.ccpr4l = CCPR4L;
  9484  0022DC  006F FDC0  F007    	movff	16240,CCP4_CaptureISR@module	;volatile
  9485                           
  9486                           ;mcc_generated_files/ccp4.c: 116:     module.ccpr4h = CCPR4H;
  9487  0022E2  006F FDC4  F008    	movff	16241,CCP4_CaptureISR@module+1	;volatile
  9488  0022E8                     
  9489                           ; BSR set to: 57
  9490                           ;mcc_generated_files/ccp4.c: 119:     CCP4_CallBack(module.ccpr4_16Bit);
  9491  0022E8  C007  F005         	movff	CCP4_CaptureISR@module,CCP4_DefaultCallBack@capturedValue
  9492  0022EC  C008  F006         	movff	CCP4_CaptureISR@module+1,CCP4_DefaultCallBack@capturedValue+1
  9493  0022F0  D802               	call	i2u367_48
  9494  0022F2  EF86  F011         	goto	i2u367_49
  9495  0022F6                     i2u367_48:
  9496  0022F6  0005               	push	
  9497  0022F8  0100               	movlb	0	; () banked
  9498  0022FA  6EFA               	movwf	pclath,c
  9499  0022FC  51D4               	movf	_CCP4_CallBack& (0+255),w,b
  9500  0022FE  6EFD               	movwf	tosl,c
  9501  002300  51D5               	movf	(_CCP4_CallBack+1)& (0+255),w,b
  9502  002302  6EFE               	movwf	tosh,c
  9503  002304  50F8               	movf	tblptru,w,c
  9504  002306  6EFF               	movwf	tosu,c
  9505  002308  50FA               	movf	pclath,w,c
  9506  00230A  0012               	return		;indir
  9507  00230C                     i2u367_49:
  9508  00230C  0011               	retfie		f
  9509  00230E                     __end_of_CCP4_CaptureISR:
  9510                           	callstack 0
  9511                           
  9512 ;; *************** function _CCP4_DefaultCallBack *****************
  9513 ;; Defined at:
  9514 ;;		line 64 in file "mcc_generated_files/ccp4.c"
  9515 ;; Parameters:    Size  Location     Type
  9516 ;;  capturedValu    2    4[COMRAM] unsigned short 
  9517 ;; Auto vars:     Size  Location     Type
  9518 ;;		None
  9519 ;; Return value:  Size  Location     Type
  9520 ;;                  1    wreg      void 
  9521 ;; Registers used:
  9522 ;;		wreg, status,2, status,0
  9523 ;; Tracked objects:
  9524 ;;		On entry : 0/0
  9525 ;;		On exit  : 0/0
  9526 ;;		Unchanged: 0/0
  9527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9528 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9531 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9532 ;;Total ram usage:        2 bytes
  9533 ;; Hardware stack levels used: 1
  9534 ;; This function calls:
  9535 ;;		Nothing
  9536 ;; This function is called by:
  9537 ;;		_CCP4_Initialize
  9538 ;;		_CCP4_CaptureISR
  9539 ;; This function uses a non-reentrant model
  9540 ;;
  9541                           
  9542                           	psect	text66
  9543  0024A4                     __ptext66:
  9544                           	callstack 0
  9545  0024A4                     _CCP4_DefaultCallBack:
  9546                           	callstack 20
  9547  0024A4                     
  9548                           ;mcc_generated_files/ccp4.c: 64: static void CCP4_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp4.c: 65: {;mcc_generated_files/ccp4.c: 67:     if(PORTDbits.RD6
      +                          ) {
  9549  0024A4  ACCD               	btfss	205,6,c	;volatile
  9550  0024A6  EF57  F012         	goto	i2u355_41
  9551  0024AA  EF59  F012         	goto	i2u355_40
  9552  0024AE                     i2u355_41:
  9553  0024AE  EF5F  F012         	goto	i2l4902
  9554  0024B2                     i2u355_40:
  9555  0024B2                     
  9556                           ;mcc_generated_files/ccp4.c: 68:         distRightM = capturedValue;
  9557  0024B2  C005  F096         	movff	CCP4_DefaultCallBack@capturedValue,_distRightM
  9558  0024B6  C006  F097         	movff	CCP4_DefaultCallBack@capturedValue+1,_distRightM+1
  9559                           
  9560                           ;mcc_generated_files/ccp4.c: 70:     } else {
  9561  0024BA  EF69  F012         	goto	i2l476
  9562  0024BE                     i2l4902:
  9563                           
  9564                           ;mcc_generated_files/ccp4.c: 71:         distRight = capturedValue - distRightM;
  9565  0024BE  0100               	movlb	0	; () banked
  9566  0024C0  5196               	movf	_distRightM& (0+255),w,b
  9567  0024C2  5C05               	subwf	CCP4_DefaultCallBack@capturedValue^0,w,c
  9568  0024C4  6F98               	movwf	_distRight& (0+255),b	;volatile
  9569  0024C6  5197               	movf	(_distRightM+1)& (0+255),w,b
  9570  0024C8  5806               	subwfb	(CCP4_DefaultCallBack@capturedValue+1)^0,w,c
  9571  0024CA  6F99               	movwf	(_distRight+1)& (0+255),b	;volatile
  9572  0024CC                     
  9573                           ; BSR set to: 0
  9574                           ;mcc_generated_files/ccp4.c: 72:         distRight >>= 1;
  9575  0024CC  90D8               	bcf	status,0,c
  9576  0024CE  3399               	rrcf	(_distRight+1)& (0+255),f,b	;volatile
  9577  0024D0  3398               	rrcf	_distRight& (0+255),f,b	;volatile
  9578  0024D2                     i2l476:
  9579  0024D2  0012               	return		;funcret
  9580  0024D4                     __end_of_CCP4_DefaultCallBack:
  9581                           	callstack 0
  9582                           
  9583 ;; *************** function _TMR5_GATE_ISR *****************
  9584 ;; Defined at:
  9585 ;;		line 175 in file "mcc_generated_files/tmr5.c"
  9586 ;; Parameters:    Size  Location     Type
  9587 ;;		None
  9588 ;; Auto vars:     Size  Location     Type
  9589 ;;		None
  9590 ;; Return value:  Size  Location     Type
  9591 ;;                  1    wreg      void 
  9592 ;; Registers used:
  9593 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  9594 ;; Tracked objects:
  9595 ;;		On entry : 0/0
  9596 ;;		On exit  : 0/0
  9597 ;;		Unchanged: 0/0
  9598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9603 ;;Total ram usage:        0 bytes
  9604 ;; Hardware stack levels used: 1
  9605 ;; Hardware stack levels required when called: 3
  9606 ;; This function calls:
  9607 ;;		Absolute function
  9608 ;;		_TMR5_DefaultGateInterruptHandler
  9609 ;; This function is called by:
  9610 ;;		Interrupt level 2
  9611 ;; This function uses a non-reentrant model
  9612 ;;
  9613                           
  9614                           	psect	text67
  9615  0023E0                     __ptext67:
  9616                           	callstack 0
  9617  0023E0                     _TMR5_GATE_ISR:
  9618                           	callstack 18
  9619  0023E0                     
  9620                           ;mcc_generated_files/tmr5.c: 178:     PIR8bits.TMR5GIF = 0;
  9621  0023E0  0139               	movlb	57	; () banked
  9622  0023E2  9FA8               	bcf	168,7,b	;volatile
  9623  0023E4                     
  9624                           ; BSR set to: 57
  9625                           ;mcc_generated_files/tmr5.c: 180:     if(TMR5_GateInterruptHandler)
  9626  0023E4  0100               	movlb	0	; () banked
  9627  0023E6  51D0               	movf	_TMR5_GateInterruptHandler& (0+255),w,b
  9628  0023E8  11D1               	iorwf	(_TMR5_GateInterruptHandler+1)& (0+255),w,b
  9629  0023EA  B4D8               	btfsc	status,2,c
  9630  0023EC  EFFA  F011         	goto	i2u368_41
  9631  0023F0  EFFC  F011         	goto	i2u368_40
  9632  0023F4                     i2u368_41:
  9633  0023F4  EF09  F012         	goto	i2l552
  9634  0023F8                     i2u368_40:
  9635  0023F8                     
  9636                           ; BSR set to: 0
  9637                           ;mcc_generated_files/tmr5.c: 181:     {;mcc_generated_files/tmr5.c: 182:         TMR5_Ga
      +                          teInterruptHandler();
  9638  0023F8  D802               	call	i2u369_48
  9639  0023FA  EF09  F012         	goto	i2u369_49
  9640  0023FE                     i2u369_48:
  9641  0023FE  0005               	push	
  9642  002400  6EFA               	movwf	pclath,c
  9643  002402  51D0               	movf	_TMR5_GateInterruptHandler& (0+255),w,b
  9644  002404  6EFD               	movwf	tosl,c
  9645  002406  51D1               	movf	(_TMR5_GateInterruptHandler+1)& (0+255),w,b
  9646  002408  6EFE               	movwf	tosh,c
  9647  00240A  50F8               	movf	tblptru,w,c
  9648  00240C  6EFF               	movwf	tosu,c
  9649  00240E  50FA               	movf	pclath,w,c
  9650  002410  0012               	return		;indir
  9651  002412                     i2u369_49:
  9652  002412                     i2l552:
  9653  002412  0011               	retfie		f
  9654  002414                     __end_of_TMR5_GATE_ISR:
  9655                           	callstack 0
  9656                           
  9657 ;; *************** function _TMR5_DefaultGateInterruptHandler *****************
  9658 ;; Defined at:
  9659 ;;		line 190 in file "mcc_generated_files/tmr5.c"
  9660 ;; Parameters:    Size  Location     Type
  9661 ;;		None
  9662 ;; Auto vars:     Size  Location     Type
  9663 ;;		None
  9664 ;; Return value:  Size  Location     Type
  9665 ;;                  1    wreg      void 
  9666 ;; Registers used:
  9667 ;;		wreg, status,2, status,0, cstack
  9668 ;; Tracked objects:
  9669 ;;		On entry : 0/0
  9670 ;;		On exit  : 0/0
  9671 ;;		Unchanged: 0/0
  9672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9677 ;;Total ram usage:        0 bytes
  9678 ;; Hardware stack levels used: 1
  9679 ;; Hardware stack levels required when called: 2
  9680 ;; This function calls:
  9681 ;;		_TMR5_ReadTimer
  9682 ;;		_TMR5_Reload
  9683 ;; This function is called by:
  9684 ;;		_TMR5_Initialize
  9685 ;;		_TMR5_GATE_ISR
  9686 ;; This function uses a non-reentrant model
  9687 ;;
  9688                           
  9689                           	psect	text68
  9690  00268C                     __ptext68:
  9691                           	callstack 0
  9692  00268C                     _TMR5_DefaultGateInterruptHandler:
  9693                           	callstack 18
  9694  00268C                     
  9695                           ;mcc_generated_files/tmr5.c: 194:     distFront = TMR5_ReadTimer();
  9696  00268C  EC16  F013         	call	_TMR5_ReadTimer	;wreg free
  9697  002690  C009  F04A         	movff	?_TMR5_ReadTimer,_distFront	;volatile
  9698  002694  C00A  F04B         	movff	?_TMR5_ReadTimer+1,_distFront+1	;volatile
  9699  002698                     
  9700                           ;mcc_generated_files/tmr5.c: 195:     distFront >>= 1;
  9701  002698  90D8               	bcf	status,0,c
  9702  00269A  324B               	rrcf	(_distFront+1)^0,f,c	;volatile
  9703  00269C  324A               	rrcf	_distFront^0,f,c	;volatile
  9704  00269E                     
  9705                           ;mcc_generated_files/tmr5.c: 196:     TMR5_Reload();
  9706  00269E  EC90  F013         	call	_TMR5_Reload	;wreg free
  9707  0026A2                     
  9708                           ;mcc_generated_files/tmr5.c: 197:     PIR8bits.TMR5GIF = 0;
  9709  0026A2  0139               	movlb	57	; () banked
  9710  0026A4  9FA8               	bcf	168,7,b	;volatile
  9711  0026A6                     
  9712                           ; BSR set to: 57
  9713  0026A6  0012               	return		;funcret
  9714  0026A8                     __end_of_TMR5_DefaultGateInterruptHandler:
  9715                           	callstack 0
  9716                           
  9717 ;; *************** function _TMR5_Reload *****************
  9718 ;; Defined at:
  9719 ;;		line 155 in file "mcc_generated_files/tmr5.c"
  9720 ;; Parameters:    Size  Location     Type
  9721 ;;		None
  9722 ;; Auto vars:     Size  Location     Type
  9723 ;;		None
  9724 ;; Return value:  Size  Location     Type
  9725 ;;                  1    wreg      void 
  9726 ;; Registers used:
  9727 ;;		wreg, status,2, cstack
  9728 ;; Tracked objects:
  9729 ;;		On entry : 0/0
  9730 ;;		On exit  : 0/0
  9731 ;;		Unchanged: 0/0
  9732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9737 ;;Total ram usage:        0 bytes
  9738 ;; Hardware stack levels used: 1
  9739 ;; Hardware stack levels required when called: 1
  9740 ;; This function calls:
  9741 ;;		_TMR5_WriteTimer
  9742 ;; This function is called by:
  9743 ;;		_TMR5_DefaultGateInterruptHandler
  9744 ;; This function uses a non-reentrant model
  9745 ;;
  9746                           
  9747                           	psect	text69
  9748  002720                     __ptext69:
  9749                           	callstack 0
  9750  002720                     _TMR5_Reload:
  9751                           	callstack 18
  9752  002720                     
  9753                           ;mcc_generated_files/tmr5.c: 157:     TMR5_WriteTimer(timer5ReloadVal);
  9754  002720  C0D2  F009         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
  9755  002724  C0D3  F00A         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
  9756  002728  ECDA  F012         	call	_TMR5_WriteTimer	;wreg free
  9757  00272C  0012               	return		;funcret
  9758  00272E                     __end_of_TMR5_Reload:
  9759                           	callstack 0
  9760                           
  9761 ;; *************** function _TMR5_WriteTimer *****************
  9762 ;; Defined at:
  9763 ;;		line 133 in file "mcc_generated_files/tmr5.c"
  9764 ;; Parameters:    Size  Location     Type
  9765 ;;  timerVal        2    8[COMRAM] unsigned short 
  9766 ;; Auto vars:     Size  Location     Type
  9767 ;;		None
  9768 ;; Return value:  Size  Location     Type
  9769 ;;                  1    wreg      void 
  9770 ;; Registers used:
  9771 ;;		wreg, status,2
  9772 ;; Tracked objects:
  9773 ;;		On entry : 0/0
  9774 ;;		On exit  : 0/0
  9775 ;;		Unchanged: 0/0
  9776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9777 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9780 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9781 ;;Total ram usage:        2 bytes
  9782 ;; Hardware stack levels used: 1
  9783 ;; This function calls:
  9784 ;;		Nothing
  9785 ;; This function is called by:
  9786 ;;		_TMR5_Reload
  9787 ;; This function uses a non-reentrant model
  9788 ;;
  9789                           
  9790                           	psect	text70
  9791  0025B4                     __ptext70:
  9792                           	callstack 0
  9793  0025B4                     _TMR5_WriteTimer:
  9794                           	callstack 18
  9795  0025B4                     
  9796                           ;mcc_generated_files/tmr5.c: 133: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 134: {;mcc_generated_files/tmr5.c: 135:     if (T5CONbits.NOT_SYNC == 1)
  9797  0025B4  A49A               	btfss	154,2,c	;volatile
  9798  0025B6  EFDF  F012         	goto	i2u246_41
  9799  0025BA  EFE1  F012         	goto	i2u246_40
  9800  0025BE                     i2u246_41:
  9801  0025BE  EFEA  F012         	goto	i2l4146
  9802  0025C2                     i2u246_40:
  9803  0025C2                     
  9804                           ;mcc_generated_files/tmr5.c: 136:     {;mcc_generated_files/tmr5.c: 138:         T5CONbi
      +                          ts.TMR5ON = 0;
  9805  0025C2  909A               	bcf	154,0,c	;volatile
  9806  0025C4                     
  9807                           ;mcc_generated_files/tmr5.c: 141:         TMR5H = (uint8_t)(timerVal >> 8);
  9808  0025C4  500A               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
  9809  0025C6  6E99               	movwf	153,c	;volatile
  9810  0025C8                     
  9811                           ;mcc_generated_files/tmr5.c: 142:         TMR5L = (uint8_t)timerVal;
  9812  0025C8  0060  F027  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
  9813  0025CE                     
  9814                           ;mcc_generated_files/tmr5.c: 145:         T5CONbits.TMR5ON =1;
  9815  0025CE  809A               	bsf	154,0,c	;volatile
  9816                           
  9817                           ;mcc_generated_files/tmr5.c: 146:     }
  9818  0025D0  EFEF  F012         	goto	i2l534
  9819  0025D4                     i2l4146:
  9820                           
  9821                           ;mcc_generated_files/tmr5.c: 148:     {;mcc_generated_files/tmr5.c: 150:         TMR5H =
      +                           (uint8_t)(timerVal >> 8);
  9822  0025D4  500A               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
  9823  0025D6  6E99               	movwf	153,c	;volatile
  9824  0025D8                     
  9825                           ;mcc_generated_files/tmr5.c: 151:         TMR5L = (uint8_t)timerVal;
  9826  0025D8  0060  F027  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
  9827  0025DE                     i2l534:
  9828  0025DE  0012               	return		;funcret
  9829  0025E0                     __end_of_TMR5_WriteTimer:
  9830                           	callstack 0
  9831                           
  9832 ;; *************** function _TMR5_ReadTimer *****************
  9833 ;; Defined at:
  9834 ;;		line 117 in file "mcc_generated_files/tmr5.c"
  9835 ;; Parameters:    Size  Location     Type
  9836 ;;		None
  9837 ;; Auto vars:     Size  Location     Type
  9838 ;;  readVal         2   12[COMRAM] unsigned short 
  9839 ;;  readValLow      1   15[COMRAM] unsigned char 
  9840 ;;  readValHigh     1   14[COMRAM] unsigned char 
  9841 ;; Return value:  Size  Location     Type
  9842 ;;                  2    8[COMRAM] unsigned short 
  9843 ;; Registers used:
  9844 ;;		wreg, status,2
  9845 ;; Tracked objects:
  9846 ;;		On entry : 0/0
  9847 ;;		On exit  : 0/0
  9848 ;;		Unchanged: 0/0
  9849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9850 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9851 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9852 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9853 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9854 ;;Total ram usage:        8 bytes
  9855 ;; Hardware stack levels used: 1
  9856 ;; This function calls:
  9857 ;;		Nothing
  9858 ;; This function is called by:
  9859 ;;		_TMR5_DefaultGateInterruptHandler
  9860 ;; This function uses a non-reentrant model
  9861 ;;
  9862                           
  9863                           	psect	text71
  9864  00262C                     __ptext71:
  9865                           	callstack 0
  9866  00262C                     _TMR5_ReadTimer:
  9867                           	callstack 19
  9868  00262C                     
  9869                           ;mcc_generated_files/tmr5.c: 119:     uint16_t readVal;;mcc_generated_files/tmr5.c: 120:
      +                               uint8_t readValHigh;;mcc_generated_files/tmr5.c: 121:     uint8_t readValLow;;mcc_g
      +                          enerated_files/tmr5.c: 123:     T5CONbits.T5RD16 = 1;
  9870  00262C  829A               	bsf	154,1,c	;volatile
  9871                           
  9872                           ;mcc_generated_files/tmr5.c: 125:     readValLow = TMR5L;
  9873  00262E  006F FE60  F010    	movff	16280,TMR5_ReadTimer@readValLow	;volatile
  9874                           
  9875                           ;mcc_generated_files/tmr5.c: 126:     readValHigh = TMR5H;
  9876  002634  006F FE64  F00F    	movff	16281,TMR5_ReadTimer@readValHigh	;volatile
  9877  00263A                     
  9878                           ;mcc_generated_files/tmr5.c: 128:     readVal = ((uint16_t)readValHigh << 8) | readValLo
      +                          w;
  9879  00263A  500F               	movf	TMR5_ReadTimer@readValHigh^0,w,c
  9880  00263C  6E0B               	movwf	??_TMR5_ReadTimer^0,c
  9881  00263E  5010               	movf	TMR5_ReadTimer@readValLow^0,w,c
  9882  002640  6E0D               	movwf	TMR5_ReadTimer@readVal^0,c
  9883  002642  C00B  F00E         	movff	??_TMR5_ReadTimer,TMR5_ReadTimer@readVal+1
  9884  002646                     
  9885                           ;mcc_generated_files/tmr5.c: 130:     return readVal;
  9886  002646  C00D  F009         	movff	TMR5_ReadTimer@readVal,?_TMR5_ReadTimer
  9887  00264A  C00E  F00A         	movff	TMR5_ReadTimer@readVal+1,?_TMR5_ReadTimer+1
  9888  00264E  0012               	return		;funcret
  9889  002650                     __end_of_TMR5_ReadTimer:
  9890                           	callstack 0
  9891                           
  9892 ;; *************** function _SMT1_PR_ACQ_ISR *****************
  9893 ;; Defined at:
  9894 ;;		line 192 in file "mcc_generated_files/smt1.c"
  9895 ;; Parameters:    Size  Location     Type
  9896 ;;		None
  9897 ;; Auto vars:     Size  Location     Type
  9898 ;;		None
  9899 ;; Return value:  Size  Location     Type
  9900 ;;                  1    wreg      void 
  9901 ;; Registers used:
  9902 ;;		wreg, status,2, status,0
  9903 ;; Tracked objects:
  9904 ;;		On entry : 0/0
  9905 ;;		On exit  : 0/0
  9906 ;;		Unchanged: 0/0
  9907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9912 ;;Total ram usage:        0 bytes
  9913 ;; Hardware stack levels used: 1
  9914 ;; This function calls:
  9915 ;;		Nothing
  9916 ;; This function is called by:
  9917 ;;		Interrupt level 2
  9918 ;; This function uses a non-reentrant model
  9919 ;;
  9920                           
  9921                           	psect	text72
  9922  0020E4                     __ptext72:
  9923                           	callstack 0
  9924  0020E4                     _SMT1_PR_ACQ_ISR:
  9925                           	callstack 21
  9926  0020E4                     
  9927                           ;mcc_generated_files/smt1.c: 196:     PIR1bits.SMT1PRAIF = 0;
  9928  0020E4  0139               	movlb	57	; () banked
  9929  0020E6  9DA1               	bcf	161,6,b	;volatile
  9930  0020E8                     
  9931                           ; BSR set to: 57
  9932                           ;mcc_generated_files/smt1.c: 197:     smtPeriod = SMT1CPR;
  9933  0020E8  013F               	movlb	63	; () banked
  9934  0020EA  5115               	movf	21,w,b	;volatile
  9935  0020EC  6E46               	movwf	_smtPeriod^0,c	;volatile
  9936  0020EE  5116               	movf	22,w,b	;volatile
  9937  0020F0  6E47               	movwf	(_smtPeriod+1)^0,c	;volatile
  9938  0020F2  5117               	movf	23,w,b	;volatile
  9939  0020F4  6E48               	movwf	(_smtPeriod+2)^0,c	;volatile
  9940  0020F6  6A49               	clrf	(_smtPeriod+3)^0,c	;volatile
  9941  0020F8                     
  9942                           ; BSR set to: 63
  9943                           ;mcc_generated_files/smt1.c: 198:     if(CLC3CONbits.LC3OUT) smtWay++;
  9944  0020F8  013C               	movlb	60	; () banked
  9945  0020FA  AB60               	btfss	96,5,b	;volatile
  9946  0020FC  EF82  F010         	goto	i2u371_41
  9947  002100  EF84  F010         	goto	i2u371_40
  9948  002104                     i2u371_41:
  9949  002104  EF8D  F010         	goto	i2l5010
  9950  002108                     i2u371_40:
  9951  002108                     
  9952                           ; BSR set to: 60
  9953  002108  0E01               	movlw	1
  9954  00210A  0100               	movlb	0	; () banked
  9955  00210C  2778               	addwf	_smtWay& (0+255),f,b	;volatile
  9956  00210E  0E00               	movlw	0
  9957  002110  2379               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
  9958  002112  237A               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
  9959  002114  237B               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
  9960  002116  EF96  F010         	goto	i2l856
  9961  00211A                     i2l5010:
  9962                           
  9963                           ; BSR set to: 60
  9964  00211A  0EFF               	movlw	255
  9965  00211C  0100               	movlb	0	; () banked
  9966  00211E  2778               	addwf	_smtWay& (0+255),f,b	;volatile
  9967  002120  0EFF               	movlw	255
  9968  002122  2379               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
  9969  002124  0EFF               	movlw	255
  9970  002126  237A               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
  9971  002128  0EFF               	movlw	255
  9972  00212A  237B               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
  9973  00212C                     i2l856:
  9974                           
  9975                           ; BSR set to: 0
  9976  00212C  0011               	retfie		f
  9977  00212E                     __end_of_SMT1_PR_ACQ_ISR:
  9978                           	callstack 0
  9979                           
  9980 ;; *************** function _SMT1_PW_ACQ_ISR *****************
  9981 ;; Defined at:
  9982 ;;		line 203 in file "mcc_generated_files/smt1.c"
  9983 ;; Parameters:    Size  Location     Type
  9984 ;;		None
  9985 ;; Auto vars:     Size  Location     Type
  9986 ;;		None
  9987 ;; Return value:  Size  Location     Type
  9988 ;;                  1    wreg      void 
  9989 ;; Registers used:
  9990 ;;		wreg, status,2, status,0
  9991 ;; Tracked objects:
  9992 ;;		On entry : 0/0
  9993 ;;		On exit  : 0/0
  9994 ;;		Unchanged: 0/0
  9995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10000 ;;Total ram usage:        0 bytes
 10001 ;; Hardware stack levels used: 1
 10002 ;; This function calls:
 10003 ;;		Nothing
 10004 ;; This function is called by:
 10005 ;;		Interrupt level 2
 10006 ;; This function uses a non-reentrant model
 10007 ;;
 10008                           
 10009                           	psect	text73
 10010  001FB0                     __ptext73:
 10011                           	callstack 0
 10012  001FB0                     _SMT1_PW_ACQ_ISR:
 10013                           	callstack 21
 10014  001FB0                     
 10015                           ;mcc_generated_files/smt1.c: 207:     PIR1bits.SMT1PWAIF = 0;
 10016  001FB0  0139               	movlb	57	; () banked
 10017  001FB2  9FA1               	bcf	161,7,b	;volatile
 10018  001FB4                     
 10019                           ; BSR set to: 57
 10020                           ;mcc_generated_files/smt1.c: 208:     smtDuty = SMT1CPW;
 10021  001FB4  013F               	movlb	63	; () banked
 10022  001FB6  5118               	movf	24,w,b	;volatile
 10023  001FB8  0100               	movlb	0	; () banked
 10024  001FBA  6F7C               	movwf	_smtDuty& (0+255),b	;volatile
 10025  001FBC  013F               	movlb	63	; () banked
 10026  001FBE  5119               	movf	25,w,b	;volatile
 10027  001FC0  0100               	movlb	0	; () banked
 10028  001FC2  6F7D               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 10029  001FC4  013F               	movlb	63	; () banked
 10030  001FC6  511A               	movf	26,w,b	;volatile
 10031  001FC8  0100               	movlb	0	; () banked
 10032  001FCA  6F7E               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 10033  001FCC  6B7F               	clrf	(_smtDuty+3)& (0+255),b	;volatile
 10034  001FCE                     
 10035                           ; BSR set to: 0
 10036                           ;mcc_generated_files/smt1.c: 209:     if(CLC3CONbits.LC3OUT) smtWay++;
 10037  001FCE  013C               	movlb	60	; () banked
 10038  001FD0  AB60               	btfss	96,5,b	;volatile
 10039  001FD2  EFED  F00F         	goto	i2u372_41
 10040  001FD6  EFEF  F00F         	goto	i2u372_40
 10041  001FDA                     i2u372_41:
 10042  001FDA  EFF8  F00F         	goto	i2l5020
 10043  001FDE                     i2u372_40:
 10044  001FDE                     
 10045                           ; BSR set to: 60
 10046  001FDE  0E01               	movlw	1
 10047  001FE0  0100               	movlb	0	; () banked
 10048  001FE2  2778               	addwf	_smtWay& (0+255),f,b	;volatile
 10049  001FE4  0E00               	movlw	0
 10050  001FE6  2379               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 10051  001FE8  237A               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 10052  001FEA  237B               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 10053  001FEC  EF01  F010         	goto	i2l863
 10054  001FF0                     i2l5020:
 10055                           
 10056                           ; BSR set to: 60
 10057  001FF0  0EFF               	movlw	255
 10058  001FF2  0100               	movlb	0	; () banked
 10059  001FF4  2778               	addwf	_smtWay& (0+255),f,b	;volatile
 10060  001FF6  0EFF               	movlw	255
 10061  001FF8  2379               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 10062  001FFA  0EFF               	movlw	255
 10063  001FFC  237A               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 10064  001FFE  0EFF               	movlw	255
 10065  002000  237B               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 10066  002002                     i2l863:
 10067                           
 10068                           ; BSR set to: 0
 10069  002002  0011               	retfie		f
 10070  002004                     __end_of_SMT1_PW_ACQ_ISR:
 10071                           	callstack 0
 10072                           
 10073 ;; *************** function _SMT1_Overflow_ISR *****************
 10074 ;; Defined at:
 10075 ;;		line 213 in file "mcc_generated_files/smt1.c"
 10076 ;; Parameters:    Size  Location     Type
 10077 ;;		None
 10078 ;; Auto vars:     Size  Location     Type
 10079 ;;		None
 10080 ;; Return value:  Size  Location     Type
 10081 ;;                  1    wreg      void 
 10082 ;; Registers used:
 10083 ;;		wreg, status,2
 10084 ;; Tracked objects:
 10085 ;;		On entry : 0/0
 10086 ;;		On exit  : 0/0
 10087 ;;		Unchanged: 0/0
 10088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10093 ;;Total ram usage:        0 bytes
 10094 ;; Hardware stack levels used: 1
 10095 ;; This function calls:
 10096 ;;		Nothing
 10097 ;; This function is called by:
 10098 ;;		Interrupt level 2
 10099 ;; This function uses a non-reentrant model
 10100 ;;
 10101                           
 10102                           	psect	text74
 10103  0025E0                     __ptext74:
 10104                           	callstack 0
 10105  0025E0                     _SMT1_Overflow_ISR:
 10106                           	callstack 21
 10107  0025E0                     
 10108                           ;mcc_generated_files/smt1.c: 217:     PIR1bits.SMT1IF = 0;
 10109  0025E0  0139               	movlb	57	; () banked
 10110  0025E2  9BA1               	bcf	161,5,b	;volatile
 10111  0025E4                     
 10112                           ; BSR set to: 57
 10113                           ;mcc_generated_files/smt1.c: 218:     smtPeriod = 0;
 10114  0025E4  0E00               	movlw	0
 10115  0025E6  6E46               	movwf	_smtPeriod^0,c	;volatile
 10116  0025E8  0E00               	movlw	0
 10117  0025EA  6E47               	movwf	(_smtPeriod+1)^0,c	;volatile
 10118  0025EC  0E00               	movlw	0
 10119  0025EE  6E48               	movwf	(_smtPeriod+2)^0,c	;volatile
 10120  0025F0  0E00               	movlw	0
 10121  0025F2  6E49               	movwf	(_smtPeriod+3)^0,c	;volatile
 10122                           
 10123                           ;mcc_generated_files/smt1.c: 219:     smtDuty = 0;
 10124  0025F4  0E00               	movlw	0
 10125  0025F6  0100               	movlb	0	; () banked
 10126  0025F8  6F7C               	movwf	_smtDuty& (0+255),b	;volatile
 10127  0025FA  0E00               	movlw	0
 10128  0025FC  6F7D               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 10129  0025FE  0E00               	movlw	0
 10130  002600  6F7E               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 10131  002602  0E00               	movlw	0
 10132  002604  6F7F               	movwf	(_smtDuty+3)& (0+255),b	;volatile
 10133  002606                     
 10134                           ; BSR set to: 0
 10135  002606  0011               	retfie		f
 10136  002608                     __end_of_SMT1_Overflow_ISR:
 10137                           	callstack 0
 10138                           
 10139                           ;
 10140                           ; Interrupt Vector Table @ 0x8
 10141                           ;
 10142                           
 10143                           	psect	ivt0x8
 10144  000008                     __pivt0x8:
 10145                           	callstack 0
 10146  000008                     ivt0x8_base:
 10147                           	callstack 0
 10148                           
 10149                           ; Vector 0 : SWINT
 10150  000008  09E7               	dw	_Default_ISR shr (0+2)
 10151                           
 10152                           ; Vector 1 : HLVD
 10153  00000A  09E7               	dw	_Default_ISR shr (0+2)
 10154                           
 10155                           ; Vector 2 : OSF
 10156  00000C  09E7               	dw	_Default_ISR shr (0+2)
 10157                           
 10158                           ; Vector 3 : CSW
 10159  00000E  09E7               	dw	_Default_ISR shr (0+2)
 10160                           
 10161                           ; Vector 4 : NVM
 10162  000010  09E7               	dw	_Default_ISR shr (0+2)
 10163                           
 10164                           ; Vector 5 : SCAN
 10165  000012  09E7               	dw	_Default_ISR shr (0+2)
 10166                           
 10167                           ; Vector 6 : CRC
 10168  000014  09E7               	dw	_Default_ISR shr (0+2)
 10169                           
 10170                           ; Vector 7 : IOC
 10171  000016  09E7               	dw	_Default_ISR shr (0+2)
 10172                           
 10173                           ; Vector 8 : INT0
 10174  000018  09E7               	dw	_Default_ISR shr (0+2)
 10175                           
 10176                           ; Vector 9 : ZCD
 10177  00001A  09E7               	dw	_Default_ISR shr (0+2)
 10178                           
 10179                           ; Vector 10 : AD
 10180  00001C  09E7               	dw	_Default_ISR shr (0+2)
 10181                           
 10182                           ; Vector 11 : ADT
 10183  00001E  09E7               	dw	_Default_ISR shr (0+2)
 10184                           
 10185                           ; Vector 12 : CMP1
 10186  000020  09E7               	dw	_Default_ISR shr (0+2)
 10187                           
 10188                           ; Vector 13 : SMT1
 10189  000022  0978               	dw	_SMT1_Overflow_ISR shr (0+2)
 10190                           
 10191                           ; Vector 14 : SMT1PRA
 10192  000024  0839               	dw	_SMT1_PR_ACQ_ISR shr (0+2)
 10193                           
 10194                           ; Vector 15 : SMT1PRW
 10195  000026  07EC               	dw	_SMT1_PW_ACQ_ISR shr (0+2)
 10196                           
 10197                           ; Vector 16 : DMA1SCNT
 10198  000028  09E7               	dw	_Default_ISR shr (0+2)
 10199                           
 10200                           ; Vector 17 : DMA1DCNT
 10201  00002A  09E7               	dw	_Default_ISR shr (0+2)
 10202                           
 10203                           ; Vector 18 : DMA1OR
 10204  00002C  09E7               	dw	_Default_ISR shr (0+2)
 10205                           
 10206                           ; Vector 19 : DMA1A
 10207  00002E  09E7               	dw	_Default_ISR shr (0+2)
 10208                           
 10209                           ; Vector 20 : SPI1RX
 10210  000030  09E7               	dw	_Default_ISR shr (0+2)
 10211                           
 10212                           ; Vector 21 : SPI1TX
 10213  000032  09E7               	dw	_Default_ISR shr (0+2)
 10214                           
 10215                           ; Vector 22 : SPI1
 10216  000034  09E7               	dw	_Default_ISR shr (0+2)
 10217                           
 10218                           ; Vector 23 : I2C1RX
 10219  000036  09E7               	dw	_Default_ISR shr (0+2)
 10220                           
 10221                           ; Vector 24 : I2C1TX
 10222  000038  09E7               	dw	_Default_ISR shr (0+2)
 10223                           
 10224                           ; Vector 25 : I2C1
 10225  00003A  09E7               	dw	_Default_ISR shr (0+2)
 10226                           
 10227                           ; Vector 26 : I2C1E
 10228  00003C  09E7               	dw	_Default_ISR shr (0+2)
 10229                           
 10230                           ; Vector 27 : U1RX
 10231  00003E  087D               	dw	_UART1_rx_vect_isr shr (0+2)
 10232                           
 10233                           ; Vector 28 : U1TX
 10234  000040  086E               	dw	_UART1_tx_vect_isr shr (0+2)
 10235                           
 10236                           ; Vector 29 : U1E
 10237  000042  09E7               	dw	_Default_ISR shr (0+2)
 10238                           
 10239                           ; Vector 30 : U1
 10240  000044  09E7               	dw	_Default_ISR shr (0+2)
 10241                           
 10242                           ; Vector 31 : TMR0
 10243  000046  09E7               	dw	_Default_ISR shr (0+2)
 10244                           
 10245                           ; Vector 32 : TMR1
 10246  000048  09E7               	dw	_Default_ISR shr (0+2)
 10247                           
 10248                           ; Vector 33 : TMR1G
 10249  00004A  09E7               	dw	_Default_ISR shr (0+2)
 10250                           
 10251                           ; Vector 34 : TMR2
 10252  00004C  09E7               	dw	_Default_ISR shr (0+2)
 10253                           
 10254                           ; Vector 35 : CCP1
 10255  00004E  09E7               	dw	_Default_ISR shr (0+2)
 10256                           
 10257                           ; Vector 36 : Undefined
 10258  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 10259                           
 10260                           ; Vector 37 : NCO1
 10261  000052  09E7               	dw	_Default_ISR shr (0+2)
 10262                           
 10263                           ; Vector 38 : CWG1
 10264  000054  09E7               	dw	_Default_ISR shr (0+2)
 10265                           
 10266                           ; Vector 39 : CLC1
 10267  000056  09E7               	dw	_Default_ISR shr (0+2)
 10268                           
 10269                           ; Vector 40 : INT1
 10270  000058  09E7               	dw	_Default_ISR shr (0+2)
 10271                           
 10272                           ; Vector 41 : CMP2
 10273  00005A  09E7               	dw	_Default_ISR shr (0+2)
 10274                           
 10275                           ; Vector 42 : DMA2SCNT
 10276  00005C  09E7               	dw	_Default_ISR shr (0+2)
 10277                           
 10278                           ; Vector 43 : DMA2DCNT
 10279  00005E  09E7               	dw	_Default_ISR shr (0+2)
 10280                           
 10281                           ; Vector 44 : DMA2OR
 10282  000060  09E7               	dw	_Default_ISR shr (0+2)
 10283                           
 10284                           ; Vector 45 : DMA2A
 10285  000062  09E7               	dw	_Default_ISR shr (0+2)
 10286                           
 10287                           ; Vector 46 : I2C2RX
 10288  000064  09E7               	dw	_Default_ISR shr (0+2)
 10289                           
 10290                           ; Vector 47 : I2C2TX
 10291  000066  09E7               	dw	_Default_ISR shr (0+2)
 10292                           
 10293                           ; Vector 48 : I2C2
 10294  000068  09E7               	dw	_Default_ISR shr (0+2)
 10295                           
 10296                           ; Vector 49 : I2C2E
 10297  00006A  09E7               	dw	_Default_ISR shr (0+2)
 10298                           
 10299                           ; Vector 50 : U2RX
 10300  00006C  09E7               	dw	_Default_ISR shr (0+2)
 10301                           
 10302                           ; Vector 51 : U2TX
 10303  00006E  09E7               	dw	_Default_ISR shr (0+2)
 10304                           
 10305                           ; Vector 52 : U2E
 10306  000070  09E7               	dw	_Default_ISR shr (0+2)
 10307                           
 10308                           ; Vector 53 : U2
 10309  000072  09E7               	dw	_Default_ISR shr (0+2)
 10310                           
 10311                           ; Vector 54 : TMR3
 10312  000074  09E7               	dw	_Default_ISR shr (0+2)
 10313                           
 10314                           ; Vector 55 : TMR3G
 10315  000076  09E7               	dw	_Default_ISR shr (0+2)
 10316                           
 10317                           ; Vector 56 : TMR4
 10318  000078  089A               	dw	_TMR4_ISR shr (0+2)
 10319                           
 10320                           ; Vector 57 : CCP2
 10321  00007A  09E7               	dw	_Default_ISR shr (0+2)
 10322                           
 10323                           ; Vector 58 : Undefined
 10324  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 10325                           
 10326                           ; Vector 59 : CWG2
 10327  00007E  09E7               	dw	_Default_ISR shr (0+2)
 10328                           
 10329                           ; Vector 60 : CLC2
 10330  000080  09E7               	dw	_Default_ISR shr (0+2)
 10331                           
 10332                           ; Vector 61 : INT2
 10333  000082  09E7               	dw	_Default_ISR shr (0+2)
 10334                           
 10335                           ; Vector 62 : Undefined
 10336  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 10337                           
 10338                           ; Vector 63 : Undefined
 10339  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 10340                           
 10341                           ; Vector 64 : Undefined
 10342  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 10343                           
 10344                           ; Vector 65 : Undefined
 10345  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 10346                           
 10347                           ; Vector 66 : Undefined
 10348  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 10349                           
 10350                           ; Vector 67 : Undefined
 10351  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 10352                           
 10353                           ; Vector 68 : Undefined
 10354  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 10355                           
 10356                           ; Vector 69 : Undefined
 10357  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 10358                           
 10359                           ; Vector 70 : TMR5
 10360  000094  09E7               	dw	_Default_ISR shr (0+2)
 10361                           
 10362                           ; Vector 71 : TMR5G
 10363  000096  08F8               	dw	_TMR5_GATE_ISR shr (0+2)
 10364                           
 10365                           ; Vector 72 : TMR6
 10366  000098  09E7               	dw	_Default_ISR shr (0+2)
 10367                           
 10368                           ; Vector 73 : CCP3
 10369  00009A  08A8               	dw	_CCP3_CaptureISR shr (0+2)
 10370                           
 10371                           ; Vector 74 : CWG3
 10372  00009C  09E7               	dw	_Default_ISR shr (0+2)
 10373                           
 10374                           ; Vector 75 : CLC3
 10375  00009E  09E7               	dw	_Default_ISR shr (0+2)
 10376                           
 10377                           ; Vector 76 : Undefined
 10378  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 10379                           
 10380                           ; Vector 77 : Undefined
 10381  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 10382                           
 10383                           ; Vector 78 : Undefined
 10384  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 10385                           
 10386                           ; Vector 79 : Undefined
 10387  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 10388                           
 10389                           ; Vector 80 : CCP4
 10390  0000A8  08B6               	dw	_CCP4_CaptureISR shr (0+2)
 10391                           
 10392                           ; Vector 81 : CLC4
 10393  0000AA  09E7               	dw	_Default_ISR shr (0+2)
 10394  0000AC                     ivt0x8_undefint:
 10395                           	callstack 0
 10396  0000AC  00FF               	reset	
 10397  0000                     
 10398                           	psect	text75
 10399  000000                     __ptext75:
 10400                           	callstack 0
 10401  000000                     
 10402                           	psect	rparam
 10403  0000                     
 10404                           	psect	idloc
 10405                           
 10406                           ;Config register IDLOC0 @ 0x200000
 10407                           ;	unspecified, using default values
 10408  200000                     	org	2097152
 10409  200000  0FFF               	dw	4095
 10410                           
 10411                           ;Config register IDLOC1 @ 0x200002
 10412                           ;	unspecified, using default values
 10413  200002                     	org	2097154
 10414  200002  0FFF               	dw	4095
 10415                           
 10416                           ;Config register IDLOC2 @ 0x200004
 10417                           ;	unspecified, using default values
 10418  200004                     	org	2097156
 10419  200004  0FFF               	dw	4095
 10420                           
 10421                           ;Config register IDLOC3 @ 0x200006
 10422                           ;	unspecified, using default values
 10423  200006                     	org	2097158
 10424  200006  0FFF               	dw	4095
 10425                           
 10426                           ;Config register IDLOC4 @ 0x200008
 10427                           ;	unspecified, using default values
 10428  200008                     	org	2097160
 10429  200008  0FFF               	dw	4095
 10430                           
 10431                           ;Config register IDLOC5 @ 0x20000A
 10432                           ;	unspecified, using default values
 10433  20000A                     	org	2097162
 10434  20000A  0FFF               	dw	4095
 10435                           
 10436                           ;Config register IDLOC6 @ 0x20000C
 10437                           ;	unspecified, using default values
 10438  20000C                     	org	2097164
 10439  20000C  0FFF               	dw	4095
 10440                           
 10441                           ;Config register IDLOC7 @ 0x20000E
 10442                           ;	unspecified, using default values
 10443  20000E                     	org	2097166
 10444  20000E  0FFF               	dw	4095
 10445                           
 10446                           	psect	config
 10447                           
 10448                           ;Config register CONFIG1L @ 0x300000
 10449                           ;	External Oscillator Selection
 10450                           ;	FEXTOSC = OFF, Oscillator not enabled
 10451                           ;	Reset Oscillator Selection
 10452                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 10453  300000                     	org	3145728
 10454  300000  8C                 	db	140
 10455                           
 10456                           ;Config register CONFIG1H @ 0x300001
 10457                           ;	Clock out Enable bit
 10458                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 10459                           ;	PRLOCKED One-Way Set Enable bit
 10460                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
 10461                           ;	Clock Switch Enable bit
 10462                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 10463                           ;	Fail-Safe Clock Monitor Enable bit
 10464                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 10465  300001                     	org	3145729
 10466  300001  FF                 	db	255
 10467                           
 10468                           ;Config register CONFIG2L @ 0x300002
 10469                           ;	MCLR Enable bit
 10470                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 10471                           ;	Power-up timer selection bits
 10472                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 10473                           ;	Multi-vector enable bit
 10474                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 10475                           ;	IVTLOCK bit One-way set enable bit
 10476                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
 10477                           ;	Low Power BOR Enable bit
 10478                           ;	LPBOREN = OFF, ULPBOR disabled
 10479                           ;	Brown-out Reset Enable bits
 10480                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 10481  300002                     	org	3145730
 10482  300002  FF                 	db	255
 10483                           
 10484                           ;Config register CONFIG2H @ 0x300003
 10485                           ;	Brown-out Reset Voltage Selection bits
 10486                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 10487                           ;	ZCD Disable bit
 10488                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 10489                           ;	PPSLOCK bit One-Way Set Enable bit
 10490                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 10491                           ;	Stack Full/Underflow Reset Enable bit
 10492                           ;	STVREN = ON, Stack full/underflow will cause Reset
 10493                           ;	Debugger Enable bit
 10494                           ;	DEBUG = OFF, Background debugger disabled
 10495                           ;	Extended Instruction Set Enable bit
 10496                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 10497  300003                     	org	3145731
 10498  300003  FF                 	db	255
 10499                           
 10500                           ;Config register CONFIG3L @ 0x300004
 10501                           ;	WDT Period selection bits
 10502                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 10503                           ;	WDT operating mode
 10504                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 10505  300004                     	org	3145732
 10506  300004  9F                 	db	159
 10507                           
 10508                           ;Config register CONFIG3H @ 0x300005
 10509                           ;	WDT Window Select bits
 10510                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 10511                           ;	WDT input clock selector
 10512                           ;	WDTCCS = SC, Software Control
 10513  300005                     	org	3145733
 10514  300005  FF                 	db	255
 10515                           
 10516                           ;Config register CONFIG4L @ 0x300006
 10517                           ;	Boot Block Size selection bits
 10518                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 10519                           ;	Boot Block enable bit
 10520                           ;	BBEN = OFF, Boot block disabled
 10521                           ;	Storage Area Flash enable bit
 10522                           ;	SAFEN = OFF, SAF disabled
 10523                           ;	Application Block write protection bit
 10524                           ;	WRTAPP = OFF, Application Block not write protected
 10525  300006                     	org	3145734
 10526  300006  FF                 	db	255
 10527                           
 10528                           ;Config register CONFIG4H @ 0x300007
 10529                           ;	Configuration Register Write Protection bit
 10530                           ;	WRTB = OFF, Configuration registers (300000-30000Bh) not write-protected
 10531                           ;	Boot Block Write Protection bit
 10532                           ;	WRTC = OFF, Boot Block (000000-0007FFh) not write-protected
 10533                           ;	Data EEPROM Write Protection bit
 10534                           ;	WRTD = OFF, Data EEPROM not write-protected
 10535                           ;	SAF Write protection bit
 10536                           ;	WRTSAF = OFF, SAF not Write Protected
 10537                           ;	Low Voltage Programming Enable bit
 10538                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 10539  300007                     	org	3145735
 10540  300007  FF                 	db	255
 10541                           
 10542                           ;Config register CONFIG5L @ 0x300008
 10543                           ;	PFM and Data EEPROM Code Protection bit
 10544                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 10545  300008                     	org	3145736
 10546  300008  FF                 	db	255
 10547                           
 10548                           ;Config register CONFIG5H @ 0x300009
 10549                           ;	unspecified, using default values
 10550  300009                     	org	3145737
 10551  300009  FF                 	db	255
 10552                           tosu	equ	0x3FFF
 10553                           tosh	equ	0x3FFE
 10554                           tosl	equ	0x3FFD
 10555                           stkptr	equ	0x3FFC
 10556                           pclatu	equ	0x3FFB
 10557                           pclath	equ	0x3FFA
 10558                           pcl	equ	0x3FF9
 10559                           tblptru	equ	0x3FF8
 10560                           tblptrh	equ	0x3FF7
 10561                           tblptrl	equ	0x3FF6
 10562                           tablat	equ	0x3FF5
 10563                           prodh	equ	0x3FF4
 10564                           prodl	equ	0x3FF3
 10565                           indf0	equ	0x3FEF
 10566                           postinc0	equ	0x3FEE
 10567                           postdec0	equ	0x3FED
 10568                           preinc0	equ	0x3FEC
 10569                           plusw0	equ	0x3FEB
 10570                           fsr0h	equ	0x3FEA
 10571                           fsr0l	equ	0x3FE9
 10572                           wreg	equ	0x3FE8
 10573                           indf1	equ	0x3FE7
 10574                           postinc1	equ	0x3FE6
 10575                           postdec1	equ	0x3FE5
 10576                           preinc1	equ	0x3FE4
 10577                           plusw1	equ	0x3FE3
 10578                           fsr1h	equ	0x3FE2
 10579                           fsr1l	equ	0x3FE1
 10580                           bsr	equ	0x3FE0
 10581                           indf2	equ	0x3FDF
 10582                           postinc2	equ	0x3FDE
 10583                           postdec2	equ	0x3FDD
 10584                           preinc2	equ	0x3FDC
 10585                           plusw2	equ	0x3FDB
 10586                           fsr2h	equ	0x3FDA
 10587                           fsr2l	equ	0x3FD9
 10588                           status	equ	0x3FD8

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         81
    Persistent  23
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     57      76
    BANK0           160     45     131
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), Absolute function(), 

    TMR5_SetGateInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), 

    TMR5_GateInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), Absolute function(), 

    CCP4_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), 

    CCP4_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), Absolute function(), 

    CCP3_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), 

    CCP3_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), Absolute function(), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultErrorHandler(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultOverrunErrorHandler(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultFramingErrorHandler(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Receive_ISR(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _setSteering->___awdiv
    _calcSpeed->___fladd
    ___fladd->___flmul
    _setMotor->_PWM7_LoadDutyValue
    _setMotor->_PWM8_LoadDutyValue
    _actSpeed->___aldiv
    ___xxtofl->___awdiv
    ___fltol->___fladd
    ___flmul->___xxtofl
    _SYSTEM_Initialize->_TMR5_Initialize
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR5_Initialize->_TMR5_SetGateInterruptHandler
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _CCP4_Initialize->_CCP4_SetCallBack
    _CCP3_Initialize->_CCP3_SetCallBack

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR4_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _CCP3_CaptureISR in COMRAM

    _CCP3_CaptureISR->_CCP3_DefaultCallBack

Critical Paths under _CCP4_CaptureISR in COMRAM

    _CCP4_CaptureISR->_CCP4_DefaultCallBack

Critical Paths under _TMR5_GATE_ISR in COMRAM

    _TMR5_DefaultGateInterruptHandler->_TMR5_ReadTimer
    _TMR5_Reload->_TMR5_WriteTimer

Critical Paths under _SMT1_PR_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_Overflow_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _loop->_startAccell
    _startAccell->_calcSteering
    _calcSteering->___fltol
    _calcSpeed->___fltol
    ___fladd->___flmul
    _calcMotorPow->___fltol
    ___fltol->___fladd

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR4_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _CCP3_CaptureISR in BANK0

    None.

Critical Paths under _CCP4_CaptureISR in BANK0

    None.

Critical Paths under _TMR5_GATE_ISR in BANK0

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR4_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _CCP3_CaptureISR in BANK1

    None.

Critical Paths under _CCP4_CaptureISR in BANK1

    None.

Critical Paths under _TMR5_GATE_ISR in BANK1

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR4_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _CCP3_CaptureISR in BANK2

    None.

Critical Paths under _CCP4_CaptureISR in BANK2

    None.

Critical Paths under _TMR5_GATE_ISR in BANK2

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR4_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _CCP3_CaptureISR in BANK3

    None.

Critical Paths under _CCP4_CaptureISR in BANK3

    None.

Critical Paths under _TMR5_GATE_ISR in BANK3

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR4_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _CCP3_CaptureISR in BANK4

    None.

Critical Paths under _CCP4_CaptureISR in BANK4

    None.

Critical Paths under _TMR5_GATE_ISR in BANK4

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR4_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _CCP3_CaptureISR in BANK5

    None.

Critical Paths under _CCP4_CaptureISR in BANK5

    None.

Critical Paths under _TMR5_GATE_ISR in BANK5

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR4_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _CCP3_CaptureISR in BANK6

    None.

Critical Paths under _CCP4_CaptureISR in BANK6

    None.

Critical Paths under _TMR5_GATE_ISR in BANK6

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR4_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _CCP3_CaptureISR in BANK7

    None.

Critical Paths under _CCP4_CaptureISR in BANK7

    None.

Critical Paths under _TMR5_GATE_ISR in BANK7

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR4_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _CCP3_CaptureISR in BANK8

    None.

Critical Paths under _CCP4_CaptureISR in BANK8

    None.

Critical Paths under _TMR5_GATE_ISR in BANK8

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR4_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _CCP3_CaptureISR in BANK9

    None.

Critical Paths under _CCP4_CaptureISR in BANK9

    None.

Critical Paths under _TMR5_GATE_ISR in BANK9

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR4_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _CCP3_CaptureISR in BANK10

    None.

Critical Paths under _CCP4_CaptureISR in BANK10

    None.

Critical Paths under _TMR5_GATE_ISR in BANK10

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR4_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _CCP3_CaptureISR in BANK11

    None.

Critical Paths under _CCP4_CaptureISR in BANK11

    None.

Critical Paths under _TMR5_GATE_ISR in BANK11

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR4_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _CCP3_CaptureISR in BANK12

    None.

Critical Paths under _CCP4_CaptureISR in BANK12

    None.

Critical Paths under _TMR5_GATE_ISR in BANK12

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR4_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _CCP3_CaptureISR in BANK13

    None.

Critical Paths under _CCP4_CaptureISR in BANK13

    None.

Critical Paths under _TMR5_GATE_ISR in BANK13

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR4_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _CCP3_CaptureISR in BANK14

    None.

Critical Paths under _CCP4_CaptureISR in BANK14

    None.

Critical Paths under _TMR5_GATE_ISR in BANK14

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR4_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _CCP3_CaptureISR in BANK15

    None.

Critical Paths under _CCP4_CaptureISR in BANK15

    None.

Critical Paths under _TMR5_GATE_ISR in BANK15

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   46314
                  _SYSTEM_Initialize
           _TMR4_SetInterruptHandler
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0   45167
                       _calcMotorPow
                          _calcSpeed
                       _calcSteering
                           _getCurve
                         _getReverse
                           _setMotor
                        _setSteering
                        _startAccell
 ---------------------------------------------------------------------------------
 (2) _startAccell                                          4     4      0   17519
                                             41 BANK0      4     4      0
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
                       _calcSteering
                           _setMotor
                        _setSteering
 ---------------------------------------------------------------------------------
 (3) _calcSteering                                         6     6      0    8560
                                             35 BANK0      6     6      0
                            ___awdiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                        _setSteering
 ---------------------------------------------------------------------------------
 (3) _setSteering                                          9     6      3    3168
                                             27 COMRAM     9     6      3
                 _PWM5_LoadDutyValue
                 _PWM6_LoadDutyValue
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) _PWM6_LoadDutyValue                                   4     2      2     120
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _PWM5_LoadDutyValue                                   4     2      2     120
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     334
                                             19 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _getReverse                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getCurve                                             6     6      0     112
                                             19 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (2) _calcSpeed                                            6     6      0    7910
                                             35 BANK0      6     6      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    3402
                                             53 COMRAM     4     4      0
                                             13 BANK0     12     4      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _calcMotorPow                                         7     7      0    6916
                                             35 BANK0      7     7      0
                            ___awdiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                           _actSpeed
                           _setMotor
 ---------------------------------------------------------------------------------
 (3) _setMotor                                             4     2      2     982
                                             23 COMRAM     4     2      2
                 _PWM7_LoadDutyValue
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (4) _PWM8_LoadDutyValue                                   4     2      2     272
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _PWM7_LoadDutyValue                                   4     2      2     272
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _actSpeed                                             4     2      2     629
                                             33 COMRAM     4     2      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     604
                                             19 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     626
                                             27 COMRAM    14    10      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     697
                                             25 BANK0     10     6      4
                            ___awdiv (ARG)
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    3053
                                             41 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___awdiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     756
                                             19 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     973
                    _ADCC_Initialize
                    _CCP3_Initialize
                    _CCP4_Initialize
                    _CLC3_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM5_Initialize
                    _PWM6_Initialize
                    _PWM7_Initialize
                    _PWM8_Initialize
                    _SMT1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR4_Initialize
                    _TMR5_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     490
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0      98
                                             21 COMRAM     2     2      0
       _TMR5_SetGateInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetGateInterruptHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     174
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             2     0      2     174
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      2     2      0       0
                                             19 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMT1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM7_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      15
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CLC3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP4_Initialize                                      0     0      0      98
                   _CCP4_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP4_SetCallBack                                     2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CCP3_Initialize                                      0     0      0      98
                   _CCP3_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP3_SetCallBack                                     2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _UART1_tx_vect_isr                                    1     1      0       0
                                             16 COMRAM     1     1      0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (7) _UART1_Transmit_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _UART1_rx_vect_isr                                    1     1      0       0
                                             17 COMRAM     1     1      0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (7) _UART1_Receive_ISR                                    0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (8) _UART1_DefaultOverrunErrorHandler                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _UART1_DefaultFramingErrorHandler                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _UART1_DefaultErrorHandler                            0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (8) _UART1_RxDataHandler                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _TMR4_ISR                                             1     1      0       0
                                             18 COMRAM     1     1      0
                      _TMR4_CallBack
 ---------------------------------------------------------------------------------
 (7) _TMR4_CallBack                                        0     0      0       0
                   Absolute function *
                       _TMR4_10msISR *
       _TMR4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TMR4_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR4_10msISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _CCP3_CaptureISR                                     2     2      0     144
                                              2 COMRAM     2     2      0
                   Absolute function *
               _CCP3_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (11) _CCP3_DefaultCallBack                                2     0      2      97
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _CCP4_CaptureISR                                     2     2      0     144
                                              6 COMRAM     2     2      0
                   Absolute function *
               _CCP4_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (11) _CCP4_DefaultCallBack                                2     0      2      97
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _TMR5_GATE_ISR                                       0     0      0     233
                   Absolute function *
   _TMR5_DefaultGateInterruptHandler *
 ---------------------------------------------------------------------------------
 (11) _TMR5_DefaultGateInterruptHandler                    0     0      0     233
                     _TMR5_ReadTimer
                        _TMR5_Reload
 ---------------------------------------------------------------------------------
 (12) _TMR5_Reload                                         0     0      0     164
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (13) _TMR5_WriteTimer                                     2     0      2     164
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) _TMR5_ReadTimer                                      8     6      2      69
                                              8 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _SMT1_PR_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _SMT1_PW_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _SMT1_Overflow_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
     _CCP3_Initialize
       _CCP3_SetCallBack
     _CCP4_Initialize
       _CCP4_SetCallBack
     _CLC3_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM5_Initialize
     _PWM6_Initialize
     _PWM7_Initialize
     _PWM8_Initialize
     _SMT1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetGateInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
   _TMR4_SetInterruptHandler
   _loop
     _calcMotorPow
       ___awdiv
       ___flmul
         ___awdiv (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
       ___fltol
         ___awdiv (ARG)
         ___fladd (ARG)
           ___flmul (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _actSpeed
         ___aldiv
       _setMotor
         _PWM7_LoadDutyValue
         _PWM8_LoadDutyValue
     _calcSpeed
       ___fladd
       ___flmul
       ___fltol
       ___xxtofl
     _calcSteering
       ___awdiv
       ___flmul
       ___fltol
       ___xxtofl
       _setSteering
         _PWM5_LoadDutyValue
         _PWM6_LoadDutyValue
         ___awdiv
     _getCurve
     _getReverse
     _setMotor
     _setSteering
     _startAccell
       ___flge
       ___flmul
       ___fltol
       ___xxtofl
       _calcSteering
       _setMotor
       _setSteering

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *

 _TMR4_ISR (ROOT)
   _TMR4_CallBack
     Absolute function(Fake) *
     _TMR4_10msISR *
     _TMR4_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _CCP3_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP3_DefaultCallBack *

 _CCP4_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP4_DefaultCallBack *

 _TMR5_GATE_ISR (ROOT)
   Absolute function(Fake) *
   _TMR5_DefaultGateInterruptHandler *
     _TMR5_ReadTimer
     _TMR5_Reload
       _TMR5_WriteTimer

 _SMT1_PR_ACQ_ISR (ROOT)

 _SMT1_PW_ACQ_ISR (ROOT)

 _SMT1_Overflow_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK15          100      0       0      30        0.0%
BANK15             100      0       0      31        0.0%
BITBANK14          100      0       0      28        0.0%
BANK14             100      0       0      29        0.0%
BITBANK13          100      0       0      36        0.0%
BANK13             100      0       0      27        0.0%
BITBANK12          100      0       0      35        0.0%
BANK12             100      0       0      26        0.0%
BITBANK11          100      0       0      34        0.0%
BANK11             100      0       0      25        0.0%
BITBANK10          100      0       0      33        0.0%
BANK10             100      0       0      24        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2D      83       5       81.9%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     39      4C       1       80.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      CF      32        0.0%
DATA                 0      0      CF       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Jan 31 16:29:18 2024

                             _CCP4_Initialize 24D4                        ??_CCP3_DefaultCallBack 0003  
                                 _startAccell 14EE                                            l72 271E  
                                          l75 262A                                            l69 2098  
                                ___awdiv@sign 0019                             ??_TMR5_WriteTimer 000B  
                 __size_of_PWM6_LoadDutyValue 0034                                           l404 204E  
                                         l520 20E2                                           l441 252E  
                                         l362 274A                                           l371 2736  
                                         l188 1BDE                                           l284 1EBC  
                                         l365 275E                                           l359 2754  
                                         l368 2740                                           l712 23DC  
                                         l449 2786                                           l482 2500  
                                         l723 26BE                                           l555 2768  
                                         l644 255A                                           l740 2374  
                                         l709 26D6                                           l581 2266  
                                         l726 23A8                                           l479 277C  
                                         l751 26EE                                           l737 2706  
                                         l754 2340                                           l923 268A  
                                         l695 2772                                           l795 2442  
                                         l893 2586                                           _GIE 01FE97  
                                         _PR2 003FAB                                           _PR4 003F9F  
                     __size_of_PMD_Initialize 0024                               _TMR2_Initialize 2670  
              CCP4_SetCallBack@customCallBack 0014                                           tosl 003FFD  
                                         wreg 003FE8                              _CCP4_SetCallBack 2774  
                                ___flmul@aexp 00A0                                  ___flmul@bexp 00A5  
                          _UART1_Transmit_ISR 212E                                  ___flmul@sign 009F  
                                ___flmul@temp 00AA                                  ___flmul@prod 00A6  
                     __end_of_CCP4_CaptureISR 230E                                  ___fltol@exp1 00C1  
                                        l2000 08CC                                          l2001 08BA  
                                        l1042 1FAC                                          l1302 0D1C  
                                        l2008 0984                                          l2032 10A8  
                                        l1216 1D86                                          l1226 1E16  
                                        l2035 1204                                          l1235 1F50  
                                        l1317 0E3E                                          l2046 119C  
                                        l2039 1140                                          l1255 0BFE  
                                        l1247 161E                                          l1361 1212  
                                        l1290 1A32                                          l1339 1050  
                                        l1275 0C0E                                          l1363 1236  
                             _timer3ReloadVal 00CE                                          l4100 11D4  
                                        l1348 14EC                                          l1364 124A  
                                        l1357 1B14                                          l1269 0B5A  
                                        l1365 1272                                          l4110 2738  
                                        l4102 11E4                                          l1374 13A8  
                                        l4112 272E                                          l1608 1D68  
                                        l4104 11F2                                          l1456 172A  
                                        l1289 1A22                                          l1297 0C8A  
                                        l4130 277E                                          l4114 274C  
                                        l4106 11F4                                          l1642 18F0  
                                        l4132 2774                                          l4116 2742  
                                        l4150 276A                                          l4134 2760  
                                        l4118 2756                                          l4070 10B8  
                                        l4230 1EDC                                          l1647 1936  
                                        l2800 1B92                                          l5200 05D8  
                                        l4080 10F6                                          l4072 10CE  
                                        l4064 1054                                          l4232 1EEC  
                                        l4160 1A80                                          l4152 1A34  
                                        l1905 02A2                                          l2810 1BA0  
                                        l2802 1B94                                          l5210 0604  
                                        l5202 05DE                                          l1674 1832  
                                        l4090 117E                                          l4082 1128  
                                        l4066 1064                                          l4234 1F1C  
                                        l4226 1EBE                                          l4170 1ADC  
                                        l4154 1A50                                          l4162 1A90  
                                        l1922 03BC                                          l1914 0572  
                                        l1906 0290                                          l1931 048C  
                                        l1907 0256                                          l2812 2708  
                                        l2804 1B9A                                          l4500 2262  
                                        l5300 0988                                          l5220 065A  
                                        l5212 0614                                          l5204 05E4  
                                        l4092 118C                                          l4084 112A  
                                        l4076 10E2                                          l4068 1072  
                                        l4236 1F48                                          l4228 1EC6  
                                        l4164 1AAC                                          l4172 1AFC  
                                        l4156 1A6C                                          l1932 047A  
                                        l2806 1B9C                                          l4510 20D0  
                                        l4502 209A                                          l5310 09B2  
                                        l5302 0998                                          l5230 06A2  
                                        l5214 0624                                          l5206 05F2  
                                        l4094 11AA                                          l4086 1136  
                                        l4078 10EA                                          l4166 1AC8  
                                        l4158 1A74                                          l2824 1F52  
                                        l2760 200E                                          l2808 1B9E  
                                        l2840 2434                                          l4512 20D2  
                                        l4504 20AE                                          l4520 1E28  
                                        l5304 09A6                                          l5240 06F0  
                                        l5232 06AE                                          l5224 066E  
                                        l5216 062A                                          l5208 05F4  
                                        l5320 1758                                          l4096 11AC  
                                        l4088 1172                                          l4168 1AD0  
                                        l2770 203E                                          l2762 2018  
                                        l2850 26A8                                          l2842 2436  
                                        l4514 20DE                                          l4506 20B2  
                                        l4530 1E4A                                          l4522 1E38  
                                        l5306 09A8                                          l5250 074E  
                                        l5242 0700                                          l5234 06CA  
                                        l5226 067E                                          l5218 064A  
                                        l5330 17A6                                          l5322 1782  
                                        l5314 172C                                          l4098 11B0  
                                        l3802 23AA                                          l5410 00B2  
                                        l4610 0A1A                                          l4450 18B0  
                                        l4442 1834                                          l3810 127A  
                                        l2780 2048                                          l2772 2040  
                                        l2764 202E                                          l2756 2004  
                                        l2844 243A                                          l2836 2414  
                                        l2852 2670                                          l4508 20CC  
                                        l4540 1E5E                                          l4532 1E4E  
                                        l4524 1E3E                                          l4516 1E18  
                                        l5308 09AE                                          l5260 07D8  
                                        l5252 075E                                          l5244 0710  
                                        l5236 06D6                                          l5228 0688  
                                        l5340 17D2                                          l5324 1784  
                                        l5316 1744                                          l3804 2376  
                                        l5500 0270                                          l5420 00F0  
                                        l5412 00C0                                          l4620 0A8E  
                                        l4612 0A30                                          l4604 09C4  
                                        l4700 1A1E                                          l4460 1934  
                                        l4452 18BE                                          l4444 1862  
                                        l3812 1286                                          l3820 12AE  
                                        l4470 2528                                          l2870 255C  
                                        l2782 204A                                          l2774 2042  
                                        l2766 2030                                          l2758 2006  
                                        l2790 1B36                                          l2846 243C  
                                        l2838 2432                                          l2854 267C  
                                        l4550 1E72                                          l4542 1E62  
                                        l4534 1E52                                          l4526 1E42  
                                        l4518 1E1C                                          l5270 0852  
                                        l5262 080E                                          l5254 077E  
                                        l5246 0720                                          l5238 06E2  
                                        l5190 0592                                          l5350 1802  
                                        l5326 1794                                          l5510 02B0  
                                        l5502 0274                                          l5430 0120  
                                        l5422 0100                                          l5414 00CE  
                                        l4630 0AD0                                          l4622 0A9E  
                                        l4614 0A40                                          l4606 09E2  
                                        l4702 1A1E                                          l4454 18D0  
                                        l4446 1872                                          l3830 133C  
                                        l3814 128E                                          l3822 12F0  
                                        l3806 1206                                          l1991 063A  
                                        l4472 252C                                          l4464 2502  
                                        l2784 204C                                          l2776 2044  
                                        l2768 203A                                          l2792 1B38  
                                        l2880 26F0                                          l2848 243E  
                                        l2856 2682                                          l4480 254A  
                                        l4552 1E76                                          l4544 1E66  
                                        l4536 1E56                                          l4528 1E46  
                                        l4800 2064                                          l3760 1CAA  
                                        l5280 08B2                                          l5272 0864  
                                        l5264 081C                                          l5256 078E  
                                        l5248 0730                                          l5192 05A2  
                                        l5184 0574                                          l5352 1812  
                                        l5336 17BE                                          l5328 1798  
                                        l5600 054A                                          l5520 02F2  
                                        l5512 02C0                                          l5504 0282  
                                        l5440 014A                                          l5432 0132  
                                        l5424 0102                                          l5416 00D0  
                                        l4640 0B36                                          l4632 0AE2  
                                        l4624 0AAE                                          l4616 0A5C  
                                        l4608 09FE                                          l4456 18DE  
                                        l4448 18A0                                          l3840 1398  
                                        l3832 1358                                          l3824 130C  
                                        l3816 129A                                          l3808 1252  
                                        l5360 0C8A                                          l4466 2512  
                                        l4490 24FA                                          l2778 2046  
                                        l2794 1B40                                          l2786 2608  
                                        l2858 26D8                                          l4482 2556  
                                        l4474 2530                                          l4554 1E82  
                                        l4546 1E6A                                          l4538 1E5A  
                                        l4810 2080                                          l4802 206C  
                                        l3770 1CDA                                          l3762 1CB8  
                                        l5290 0920                                          l5274 0872  
                                        l5266 083A                                          l5258 07AE  
                                        l5194 05B2                                          l5186 0582  
                                        l5354 1822                                          l5346 17E6  
                                        l5338 17C8                                          l3850 1632  
                                        l5602 054C                                          l5530 0320  
                                        l5522 0300                                          l5506 0284  
                                        l5442 015A                                          l5450 0184  
                                        l5434 0134                                          l5418 00E0  
                                        l5426 010A                                          l4650 0B98  
                                        l4642 0B46                                          l4634 0AF8  
                                        l4626 0ABA                                          l4618 0A78  
                                        l4458 192E                                          l3754 2342  
                                        l3834 1364                                          l3826 1318  
                                        l5362 0CA6                                          l5370 0CDA  
                                        l1995 09C2                                          l4468 251E  
                                        l4492 24FE                                          l4484 24D4  
                                        l2796 1B8E                                          l2788 1B16  
                                        l4476 2544                                          l4556 1E8E  
                                        l4548 1E6E                                          l4812 2084  
                                        l4804 2070                                          l3780 1D08  
                                        l3772 1CDE                                          l3764 1CC0  
                                        l5284 08DC                                          l5292 0924  
                                        l5276 0876                                          l5268 0844  
                                        l5196 05C2                                          l5188 0590  
                                        l5348 17F2                                          l3860 1668  
                                        l3852 1642                                          l5700 13AA  
                                        l5604 0552                                          l5540 038C  
                                        l5532 032A                                          l5524 030C  
                                        l5516 02D4                                          l5508 028E  
                                        l5460 01BC                                          l5452 0194  
                                        l5444 016A                                          l5436 013A  
                                        l5428 011A                                          l4644 0B52  
                                        l4636 0B0A                                          l4628 0AC0  
                                        l3756 230E                                          l3836 1380  
                                        l3828 1334                                          l5380 0D8C  
                                        l5372 0D20                                          l5364 0CB2  
                                        l5620 156C                                          l5612 14EE  
                                        l4486 24E4                                          l2798 1B90  
                                        l4494 2230                                          l4478 2548  
                                        l4558 1EB8                                          l4814 208C  
                                        l4806 2074                                          l3790 1D3C  
                                        l3782 1D16                                          l3774 1CE6  
                                        l3766 1CC4                                          l3758 1CA6  
                                        l5294 093E                                          l5286 08E8  
                                        l5278 0884                                          l1998 0854  
                                        l5198 05C8                                          l3870 16B0  
                                        l3862 1678                                          l3854 1646  
                                        l3846 1620                                          l5710 144C  
                                        l5702 13B6                                          l5606 0560  
                                        l5542 039C                                          l5526 0310  
                                        l5518 02E4                                          l5534 0330  
                                        l5470 01D0                                          l5462 01C0  
                                        l5454 01A6                                          l5446 017A  
                                        l5438 0148                                          l4654 0BA8  
                                        l4646 0B6A                                          l4638 0B20  
                                        l4662 0BC4                                          l3838 1388  
                                        l5390 0DD8                                          l5382 0DA0  
                                        l5374 0D34                                          l5366 0CCE  
                                        l5358 0C10                                          l5630 15E0  
                                        l5622 1588                                          l5614 14FE  
                                        l4488 24F0                                          l2896 26C0  
                                        l4496 2244                                          l4816 2090  
                                        l4808 2078                                          l3792 1D42  
                                        l3784 1D1C                                          l3776 1CF8  
                                        l3768 1CD2                                          l5296 0952  
                                        l5288 08F6                                          l3880 16F4  
                                        l3872 16BA                                          l3864 168E  
                                        l3856 1654                                          l3848 1624  
                                        l5720 148C                                          l5712 1460  
                                        l5704 13C4                                          l5608 0562  
                                        l5560 041E                                          l5552 03F6  
                                        l5536 0356                                          l5544 03AC  
                                        l5528 031E                                          l5480 01E4  
                                        l5472 01D4                                          l5464 01C4  
                                        l5456 01B4                                          l5448 017C  
                                        l4656 0BB8                                          l4648 0B7C  
                                        l4680 197C                                          l4672 1938  
                                        l5384 0DB2                                          l5376 0D48  
                                        l5640 1616                                          l5632 15EA  
                                        l5624 1598                                          l5616 1502  
                                        l4498 2248                                          l3786 1D32  
                                        l3778 1D00                                          l3794 1D48  
                                        l5298 096C                                          l3874 16D8  
                                        l3866 1696                                          l3882 16FA  
                                        l3858 1664                                          l5730 14E4  
                                        l5722 14A8                                          l5714 1468  
                                        l5706 13D0                                          l5562 0426  
                                        l5554 0400                                          l5546 03D2  
                                        l5538 038A                                          l5570 044A  
                                        l5490 01F8                                          l5482 01E8  
                                        l5474 01D8                                          l5466 01C8  
                                        l5458 01B8                                          l5650 0E68  
                                        l4690 19C6                                          l4682 1986  
                                        l4674 194E                                          l5378 0D78  
                                        l5642 161A                                          l5634 15F6  
                                        l5626 159E                                          l5618 1538  
                                        l3796 1D58                                          l3788 1D3A  
                                        l3884 170A                                          l3876 16E8  
                                        l3868 16A2                                          l5724 14B4  
                                        l5716 147C                                          l5708 13D0  
                                        l5580 049C                                          l5572 044E  
                                        l5564 042A                                          l5556 040E  
                                        l5548 03E2                                          l5492 0222  
                                        l5484 01EC                                          l5476 01DC  
                                        l5468 01CC                                          l5652 0E84  
                                        l5660 0EBA                                          l5644 0E40  
                                        l4692 19DC                                          l4684 199E  
                                        l4676 1958                                          l5388 0DC6  
                                        l5396 0DEC                                          l5636 1600  
                                        l5628 15AE                                          l5740 1DA0  
                                        l5732 1D6A                                          l3798 1D60  
                                        l3886 171A                                          l3878 16EA  
                                        l5726 14D0                                          l5718 1480  
                                        l5590 0502                                          l5582 04A8  
                                        l5574 045C                                          l5566 043A  
                                        l5558 0410                                          l5494 023E  
                                        l5486 01F0                                          l5478 01E0  
                                        l5670 0F88                                          l5662 0EC6  
                                        l5654 0E8C                                          l5646 0E4E  
                                        l4694 19E4                                          l4686 19A2  
                                        l4678 196A                                          l5638 1604  
                                        l5750 1DCC                                          l5742 1DA8  
                                        l5734 1D94                                          l5728 14D8  
                                        l5592 0512                                          l5584 04B6  
                                        l5576 0472                                          l5568 043C  
                                        l5496 024E                                          l5488 01F4  
                                        l5672 0F94                                          l5664 0EDC  
                                        l5656 0EA2                                          l5648 0E64  
                                        l4688 19B4                                          l4696 19E8  
                                        l5760 1E0A                                          l5752 1DDA  
                                        l5744 1DB0                                          l5736 1D98  
                                        l5594 0532                                          l5586 04F0  
                                        l5498 0264                                          l5690 1040  
                                        l5930 0FC0                                          l5666 0EE0  
                                        l5658 0EAE                                          l5682 0FAC  
                                        l4698 19FE                                          l5922 0CEE  
                                        l5762 1E0E                                          l5754 1DEA  
                                        l5746 1DB6                                          l5738 1D9C  
                                        l5770 2664                                          l4796 2050  
                                        l5596 0536                                          l5588 04F2  
                                        l5692 1048                                          l5676 0FA0  
                                        l5668 0EF6                                          l5684 0FFE  
                                        l5924 0E00                                          l5756 1DFE  
                                        l5748 1DC8                                          l5764 2650  
                                        l4798 2060                                          l5598 0544  
                                        l5686 101C                                          l5926 12C2  
                                        l5758 1E06                                          l5766 2654  
                                        l5688 1024                                          l5928 0BD8  
                                        l5768 2656                                          u2000 1334  
                                        u2001 1330                                          u2010 1358  
                                        u2011 1354                                          u2020 1380  
                                        u2021 137C                                          u2030 1632  
                                        u1135 2038                                          u2031 162E  
                                        u1136 203A                                          u2040 1654  
                                        u3000 192E                                          u2041 1650  
                                        u3001 192A                                          u2050 168E  
                                        u2051 168A                                          u2060 16B0  
                                        u3100 0AAE                                          u2061 16AC  
                                        u3101 0AAA                                          _LATA 003FBA  
                                        u2070 16D8                                          u3110 0AD0  
                                        _LATB 003FBB                                          u2071 16D4  
                                        u3111 0ACC                                          _LATC 003FBC  
                                        u2400 118C                                          u2080 170A  
                                        u3200 0BB8                                          u3120 0AE2  
                                        u3040 09FE                                          u4000 0CCE  
                                        _LATD 003FBD                                          u2401 1188  
                                        u2081 1706                                          u3201 0BB4  
                                        u3121 0ADE                                          u3041 09FA  
                                        u4001 0CCA                                          _LATE 003FBE  
                                        u2410 119C                                          u3130 0AF8  
                                        u3050 0A1A                                          u3210 194E  
                                        u4010 0DB2                                          u2411 1198  
                                        u3131 0AF4                                          u3051 0A16  
                                        u3211 194A                                          u4011 0DAE  
                                        u2420 11AA                                          u2500 1AC8  
                                        u4100 01A6                                          u3140 0B0A  
                                        u3060 0A30                                          u3220 196A  
                                        u4020 0DD8                                          u2421 11A6  
                                        u2501 1AC4                                          u4101 01A2  
                                        u3141 0B06                                          u3061 0A2C  
                                        u3221 1966                                          u4021 0DD4  
                                        u2430 11E4                                          u2350 1064  
                                        u4110 01B4                                          u4030 00CE  
                                        u3150 0B20                                          u3070 0A5C  
                                        u3230 197C                                          u2431 11E0  
                                        u2351 1060                                          u4111 01B0  
                                        u4031 00CA                                          u3151 0B1C  
                                        u3071 0A58                                          u3231 1978  
                                        u2440 11F2                                          u2360 1072  
                                        u4200 02F2                                          u4120 0222  
                                        u4040 00E0                                          u3160 0B36  
                                        u3080 0A78                                          u3240 199E  
                                        u2441 11EE                                          u2361 106E  
                                        u4201 02EE                                          u4121 021E  
                                        u4041 00DC                                          u3161 0B32  
                                        u3081 0A74                                          u3241 199A  
                                        u2370 10CE                                          u4210 0300  
                                        u4130 023A                                          u4050 00F0  
                                        u3170 0B46                                          u3090 0A8E  
                                        u3250 19B4                                          _T2PR 003FAB  
                                        u2371 10CA                                          u4211 02FC  
                                        u4131 0234                                          u4051 00EC  
                                        u3171 0B42                                          u3091 0A8A  
                                        u3251 19B0                                          u2380 1124  
                                        u4300 044A                                          u4220 031E  
                                        u4140 023C                                          u4060 0132  
                                        u3180 0B7C                                          u3260 19C6  
                                        u2381 1120                                          u4301 0446  
                                        u4221 031A                                          u4061 012E  
                                        u3181 0B78                                          u3261 19C2  
                                        u1910 1CB8                                          u2390 116E  
                                        u2550 1EDC                                          u2470 1A50  
                                        u4310 045C                                          u4230 0356  
                                        u4150 0264                                          u4070 0148  
                                        u3190 0B98                                          u3270 19DC  
                                        u1911 1CB4                                          u2391 116A  
                                        u2551 1ED8                                          u2471 1A4C  
                                        u4311 0458                                          u4231 0352  
                                        u4151 0260                                          u4071 0144  
                                        u3191 0B94                                          u3271 19D8  
                                        u1920 1CD2                                          u2560 1EEC  
                                        u2480 1A6C                                          u4400 0544  
                                        u4320 0472                                          u4240 039C  
                                        u4160 0282                                          u4080 015A  
                                        u3280 19FE                                          u1921 1CCE  
                                        u2561 1EE8                                          u2481 1A68  
                                        u4401 0540                                          u4321 046E  
                                        u4241 0398                                          u4161 027E  
                                        u4081 0156                                          u3281 19FA  
                                        u1905 2332                                          u1930 1CF8  
                                        u2490 1AAC                                          u4410 0560  
                                        u4330 0488                                          u4250 03D2  
                                        u4170 02A2                                          u4090 016A  
                                        u3290 1A1A                                          _T4PR 003F9F  
                                        u1931 1CF4                                          u2491 1AA8  
                                        u4411 055C                                          u4331 0484  
                                        u4251 03CE                                          u4171 029E  
                                        u4091 0166                                          u3291 1A16  
                                        u1940 1D16                                          u4340 049C  
                                        u4260 03E2                                          u4180 02B0  
                                        u4500 101C                                          u4420 15AE  
                                        u1941 1D12                                          u4341 0498  
                                        u4261 03DE                                          u4181 02AC  
                                        u4501 1018                                          u4421 15AA  
                                        u1950 1D32                                          u4350 04B6  
                                        u4270 040E                                          u4190 02C0  
                                        u4510 1040                                          u4430 15E0  
                                        u1951 1D2E                                          u4351 04B2  
                                        u4271 040A                                          u4191 02BC  
                                        u4511 103C                                          u4431 15DC  
                                        u1960 1D58                                          u3800 065A  
                                        u4520 1460                                          u4360 04F0  
                                        u4280 041E                                          u4440 1616  
                                        u1961 1D54                                          u3801 0656  
                                        u4521 145C                                          u4361 04EC  
                                        u4281 041A                                          u4441 1612  
                                        u3810 07F8                                          u3730 0590  
                                        u4530 147C                                          u4370 0502  
                                        u4290 043A                                          u4450 0E64  
                                        u3731 058C                                          u4531 1478  
                                        u4371 04FE                                          u4291 0436  
                                        u4451 0E60                                          u3900 096C  
                                        u3820 0852                                          u3740 05A2  
                                        u4540 14A8                                          u4380 0512  
                                        u4460 0E84                                          _PMD0 0039C0  
                                        u3901 0968                                          u3821 084E  
                                        u3741 059E                                          u4541 14A4  
                                        u4381 050E                                          u4461 0E80  
                                        _PMD1 0039C1                                          u3910 09A6  
                                        u3830 0872                                          u3750 05B2  
                                        u4550 14D0                                          u4390 0532  
                                        u4470 0EA2                                          u1990 130C  
                                        _PMD2 0039C2                                          u3911 09A2  
                                        u3831 086E                                          u3815 07EE  
                                        u3751 05AE                                          u1975 23CE  
                                        u4551 14CC                                          u4391 052E  
                                        u4471 0E9E                                          u1895 2366  
                                        u1991 1308                                          _PMD3 0039C3  
                                        u3840 0884                                          u3760 05F2  
                                        u3920 1744                                          u4480 0EDC  
                                        u2960 1862                                          u4560 1D94  
                                        _PMD4 0039C4                                          u3841 0880  
                                        u3761 05EE                                          u3921 1740  
                                        u1985 239A                                          u4481 0ED8  
                                        u2961 185E                                          u4561 1D90  
                                        _PMD5 0039C5                                          u3850 08B2  
                                        u3770 0604                                          u3930 1778  
                                        u4490 0EF6                                          u2970 18A0  
                                        u4570 1DC8                                          _PMD6 0039C6  
                                        u3851 08AE                                          u3771 0600  
                                        u4491 0EF2                                          u2971 189C  
                                        u4571 1DC4                                          _PMD7 0039C7  
                                        u3860 08C8                                          u3780 0614  
                                        u3940 17A6                                          u2980 18BE  
                                        u4580 1DDA                                          u3861 08C4  
                                        u3781 0610                                          u3941 17A2  
                                        u2981 18BA                                          u4581 1DD6  
                                        u3870 08DC                                          u3790 064A  
                                        u3950 17BA                                          u2990 18DE  
                                        u3871 08D8                                          u3791 0646  
                                        u3951 17B6                                          u3935 176E  
                                        u2991 18DA                                          u3880 08F6  
                                        u3960 17E2                                          u3881 08F2  
                                        u3961 17DE                                          u3890 093E  
                                        u3970 1802                                          u3891 093A  
                                        u3971 17FE                                          u3980 1812  
                                        u3981 180E                                          u3990 0CA6  
                                        u3991 0CA2                                          _TMR2 003FAA  
                                        _TMR4 003F9E                                          _WPUA 003A41  
                                        _WPUB 003A51                                          _WPUC 003A61  
                                        _WPUD 003A71                                          _WPUE 003A81  
                         ?_UART1_Transmit_ISR 0001                                          _main 2650  
                                        _loop 1D6A                                          indf2 003FDF  
                                        fsr2l 003FD9                                          prodh 003FF4  
                                        prodl 003FF3                                          start 00AE  
                             _timer5ReloadVal 00D2                               _TMR3_Initialize 2230  
                             _PWM5_Initialize 26F0                             ??_CLC3_Initialize 0014  
               ??_UART1_SetTxInterruptHandler 0016                    ??_TMR4_SetInterruptHandler 0016  
                           _UART1_rx_vect_isr 21F4                                  ___param_bank 000000  
                  __end_of_PWM5_LoadDutyValue 2376                            ?_UART1_rx_vect_isr 0001  
              __size_of_OSCILLATOR_Initialize 0018                          ??_UART1_Transmit_ISR 0011  
               __end_of_OSCILLATOR_Initialize 2720                                 ___fltol@sign1 00C0  
                             __end_of___aldiv 172C                                         _ADCAP 003EF5  
                                       _ADACT 003EFE                       __end_of_CCP3_Initialize 2530  
                             __end_of___fladd 0574                                         ?_main 0001  
                                       _ADCLK 003EFF                                         _ADCNT 003EEB  
                                       _ADPCH 003EF1                                         _ADREF 003EFD  
                             __end_of___awdiv 1D6A                                         ?_loop 0001  
                                       _ADRPT 003EEC                        ??_CCP4_DefaultCallBack 0007  
                             __end_of___flmul 09C4                      TMR5_ReadTimer@readValLow 0010  
                             __end_of___fltol 1834                               ___awdiv@divisor 0016  
                                       _U1P1H 003DED                                         _U1P2H 003DEF  
                                       _U1P1L 003DEC                                         _U1P3H 003DF1  
                                       _T3CLK 003FA9                                         _T2CON 003FAC  
                                       _U1P2L 003DEE                                         _U1P3L 003DF0  
                                       _T3CON 003FA6                                         _T5CLK 003F9D  
                                       _T4CON 003FA0                                         _T2HLT 003FAD  
                                       _T5CON 003F9A                                         _T4HLT 003FA1  
                                       _T2TMR 003FAA                                         _U1UIR 003DF8  
                                       i1l330 2228                                         _T2RST 003FAF  
                                       _U1RXB 003DE8                                         i1l324 21EC  
                                       i1l333 2170                                         i1l350 2796  
                                       i1l343 1CA4                                         i1l336 2174  
                                       i1l353 2794                                         _U1TXB 003DEA  
                                       i1l347 25B2                                         i1l356 278C  
                                       _T4TMR 003F9E                                         _T4RST 003FA3  
                                       i2l409 279C                                         i1l692 2472  
                                       i2l534 25DE                                         i2l438 24A2  
                                       i2l446 22D4                                         i2l552 2412  
                                       i1l688 2298                                         i2l529 264E  
                                       i2l537 272C                                         i1l698 2798  
                                       i2l476 24D2                                         i2l558 26A6  
                                       i2l487 230C                           ??_UART1_rx_vect_isr 0012  
                                       i2l863 2002                                         i2l856 212C  
                                       i2l868 2606                               ___awdiv@counter 0018  
                                       _OSCEN 0039DD                                         _TMR3H 003FA5  
                                       _TMR5H 003F99                                         _TMR3L 003FA4  
                                       _TMR5L 003F98                                         _TRISA 003FC2  
                                       _TRISB 003FC3                                         _TRISC 003FC4  
                                       _TRISD 003FC5                                         _TRISE 003FC6  
                                 _Default_ISR 279C                               _TMR4_Initialize 2530  
                             _PWM6_Initialize 26D8                             _UART1_tx_vect_isr 21B8  
                            __end_of_TMR4_ISR 22A0                       setSteering@steeringMode 001E  
                                       _delay 003E                         __size_of_calcMotorPow 0144  
                          ?_UART1_tx_vect_isr 0001                              ?_SMT1_Initialize 0001  
                                       pclath 003FFA                                         tablat 003FF5  
                                 _BatteryVolt 0080                         __size_of_calcSteering 0230  
                                       status 003FD8           __end_of_UART1_SetRxInterruptHandler 2742  
                 _UART1_SetRxInterruptHandler 2738                       __end_of_CCP4_Initialize 2502  
         fp__UART1_DefaultFramingErrorHandler 0000      __end_of_UART1_DefaultFramingErrorHandler 2798  
   __size_of_UART1_DefaultFramingErrorHandler 0002            ??_UART1_DefaultFramingErrorHandler 0012  
           ?_UART1_DefaultFramingErrorHandler 0001              _UART1_DefaultFramingErrorHandler 2796  
                         ??_UART1_tx_vect_isr 0011                     __end_of_UART1_rx_vect_isr 2230  
                             _TMR5_Initialize 209A                               _PWM7_Initialize 26C0  
                             __initialization 2176                         TMR5_ReadTimer@readVal 000D  
                            ?_CCP3_CaptureISR 0001                                  __end_of_main 2670  
                                __end_of_loop 1E18                   ??_UART1_DefaultErrorHandler 0012  
                     __end_of_TMR2_Initialize 268C                                        ??_main 003A  
                                      ??_loop 003A                                 __activetblptr 000002  
                                _calcMotorPow 13AA          __size_of_UART1_SetTxInterruptHandler 000A  
                   __end_of_UART1_tx_vect_isr 21F4                               _PWM8_Initialize 26A8  
                            _UART1_Initialize 1E18                                  _calcSteering 0C10  
                            ?_CCP4_CaptureISR 0001                                        _ADACCH 003EE9  
                                      _ADACCL 003EE8                                        _ADACCU 003EEA  
                                      _ADACQH 003EF4                                        _ADACQL 003EF3  
                                      _ADCON0 003EF8                                        _ADCON1 003EF9  
                                      _ADCON2 003EFA                                        _ADCON3 003EFB  
                                      _ADERRH 003EE3                                        _ADERRL 003EE2  
                                      _ADLTHH 003EDF                                        _ADLTHL 003EDE  
                                      _ADRESH 003EF0                                        _ADRESL 003EEF  
                                      _ADPREH 003EF7                                        _ADPREL 003EF6  
                                      _CCPR3H 003F75                                        _CCPR4H 003F71  
                                      _CCPR3L 003F74                                        _CCPR4L 003F70  
                                      _ADSTAT 003EFC                                        _ADUTHH 003EE1  
                            ___awdiv@dividend 0014                                        _ADUTHL 003EE0  
                          _PWM8_LoadDutyValue 2376                                        _ANSELA 003A40  
                                      _ANSELB 003A50                                        _ANSELC 003A60  
                                      _ANSELD 003A70                                        _ANSELE 003A80  
                                      _RB1I2C 003A5A                                        _RB2I2C 003A5B  
                                      _RD0I2C 003A7A                                        _U1CON0 003DF2  
                                      _U1CON1 003DF3                                        _U1CON2 003DF4  
                                      _RC3I2C 003A6A                                        _RD1I2C 003A7B  
                                      _T3GATE 003FA8                                        _RC4I2C 003A6B  
                                      _U1BRGH 003DF6                                        _U1FIFO 003DF7  
                                      _T3GCON 003FA7                                        _U1BRGL 003DF5  
                                      _T5GATE 003F9C                                        _T5GCON 003F9B  
                                      _RA0PPS 003A00                                        _RA1PPS 003A01  
                                      _RA3PPS 003A03                                        _RA4PPS 003A04  
                                      _RB3PPS 003A0B                                        _T5GPPS 003AC9  
                                      i1l1229 2792                                        _ODCONA 003A42  
                                      _ODCONB 003A52                                        _ODCONC 003A62  
                                      _ODCOND 003A72                                        _ODCONE 003A82  
                                      i1l5000 2290                                        i1l4120 2588  
                                      i1l4122 259A                                        i1l4124 259C  
                                      i1l4126 25AC                                        i1l4128 25B0  
                     __end_of_PWM5_Initialize 2708                       __end_of_TMR3_Initialize 2268  
                                      i1l4560 2788                                        i2l5010 211A  
                                      i2l5002 20E4                                        i1l4930 2458  
                                      i2l5020 1FF0                                        i2l5012 1FB0  
                                      i2l5004 20E8                                        i2l4140 25C4  
                                      i1l4860 2140                                        i2l5022 25E0  
                                      i2l5014 1FB4                                        i2l5006 20F8  
                                      i2l4142 25C8                                        i1l4870 1BE0  
                                      i1l4862 2152                                        i2l5024 25E4  
                                      i2l5016 1FCE                                        i2l5008 2108  
                                      i2l4144 25CE                                        i2l4136 25B4  
                                      i1l4928 2444                                        i1l4880 1C3A  
                                      i1l4872 1BF0                                        i1l4864 2154  
                                      i2l5018 1FDE                                        i2l4138 25C2  
                                      i2l4146 25D4                                        i1l4794 278E  
                                      i1l4882 1C4A                                        i1l4874 1C00  
                                      i1l4866 2164                                        i1l4858 212E  
                                      i1l4970 21BE                                        i2l4148 25D8  
                                      i1l4884 1C64                                        i1l4876 1C10  
                                      i1l4868 2168                                        i1l4972 21D2  
                                      i1l4886 1C80                                        i1l4878 1C2A  
                                      i1l4974 21FA                                        i1l4888 1CA0  
                                      i1l4976 220E                                        i1l4994 226E  
                                      i1l4996 2272                                        i1l4998 228C  
                                      _INLVLA 003A44                                        i2l4562 262C  
                                      i2l4570 2720                                        _INLVLB 003A54  
                                      _INLVLC 003A64                                        i2l4564 263A  
                                      i2l4900 24B2                                        _INLVLD 003A74  
                                      _INLVLE 003A84                                        i2l4566 2646  
                                      i2l4910 269E                                        i2l4902 24BE  
                                      i2l4912 26A2                                        i2l4904 24CC  
                                      i2l4906 268C                                        i2l4908 2698  
                                      i2l4890 2474                                        i2l4892 2482  
                                      i2l4980 22B0                                        i2l4990 23F8  
                                      i2l4982 22D8                                        i2l4894 248E  
                                      i2l4984 22E8                                        i2l4896 249C  
                                      i2l4986 23E0                                        i2l4898 24A4  
                                      i2l4978 22A0                                        i2l4988 23E4  
                                ?_setSteering 001C                                        _OSCFRQ 0039DF  
                            __end_of_actSpeed 1F52                                        _SMT1PR 003F1B  
                       _UART1_SetErrorHandler 2756                              __end_of___xxtofl 1206  
                         ?_PWM8_LoadDutyValue 0014                              __end_of_getCurve 0C10  
                    __end_of_CCP3_SetCallBack 2788                                  _CCPTMRS0bits 003F5E  
                                _CCPTMRS1bits 003F5F                                        ___flge 1834  
                                   ??___aldiv 001C                                     ??___fladd 0036  
                                   ??___awdiv 0018                                     ??___flmul 0032  
                                   ??___fltol 00BC                                 _CCP3_CallBack 00D6  
                                ?_TMR5_Reload 0001                       __end_of_PWM6_Initialize 26F0  
                     __end_of_TMR4_Initialize 255C                                        clear_0 2190  
                                      clear_1 219C                              ___awdiv@quotient 001A  
                                      _motPow 008C                       fp__CCP3_DefaultCallBack 0000  
                                      isa$std 000001                                 _CCP4_CallBack 00D4  
                                      _smtWay 0078                              ?_CCP3_Initialize 0001  
                        ??_PWM8_LoadDutyValue 0016                              __end_of_setMotor 1B16  
                             _ADCC_Initialize 1F52          __end_of_TMR4_DefaultInterruptHandler 279A  
       __size_of_TMR4_DefaultInterruptHandler 0002                  _TMR4_DefaultInterruptHandler 2798  
                              _PMD_Initialize 2608                                  __pdataCOMRAM 004C  
                       __end_of_TMR5_GATE_ISR 2414                                        tblptrh 003FF7  
                                      tblptrl 003FF6                                        tblptru 003FF8  
    TMR4_SetInterruptHandler@InterruptHandler 0014  TMR5_SetGateInterruptHandler@InterruptHandler 0014  
 UART1_SetTxInterruptHandler@InterruptHandler 0014   UART1_SetRxInterruptHandler@InterruptHandler 0014  
        __end_of_UART1_SetOverrunErrorHandler 274C         __size_of_UART1_SetOverrunErrorHandler 000A  
                _UART1_SetOverrunErrorHandler 2742                     _UART1_DefaultErrorHandler 2788  
               __size_of_INTERRUPT_Initialize 004C                  __size_of_UART1_RxDataHandler 002C  
                           getCurve@deltaLeft 0018                                    ___flge@ff1 0014  
                                  ___flge@ff2 0018                       __end_of_PWM7_Initialize 26D8  
                     __end_of_TMR5_Initialize 20E4                                  ___xxtofl@arg 0026  
                                ___xxtofl@exp 0025                             _SYSTEM_Initialize 2050  
                                ___xxtofl@val 001C                                    __accesstop 0060  
                     __end_of__initialization 21AE                              ?_CCP4_Initialize 0001  
                         setSteering@steering 001C                            ?_SYSTEM_Initialize 0001  
                               ___rparam_used 000001                    __size_of_UART1_rx_vect_isr 003C  
                                  ___fltol@f1 00B8                               _TMR5_WriteTimer 25B4  
                          __size_of_calcSpeed 0212                     calcMotorPow@setSpeedDelta 00C4  
                    __end_of_CCP4_SetCallBack 277E                                __pcstackCOMRAM 0001  
                       __end_of_TMR4_CallBack 2474                                  ?_startAccell 0001  
                         ??_SYSTEM_Initialize 0018                                     ?_TMR4_ISR 0001  
                             startAccell@MPow 00C8                                ivt0x8_undefint 00AC  
                             fp__TMR4_10msISR 0000                              ?_TMR2_Initialize 0001  
                     __end_of_PWM8_Initialize 26C0                        __end_of_PMD_Initialize 262C  
                 __size_of_PWM7_LoadDutyValue 0034                         CCP3_CaptureISR@module 0003  
                  __size_of_UART1_tx_vect_isr 003C                CCP3_SetCallBack@customCallBack 0014  
                   _UART1_FramingErrorHandler 00DC               fp__TMR4_DefaultInterruptHandler 0000  
               ?_TMR4_DefaultInterruptHandler 0001                       fp__CCP4_DefaultCallBack 0000  
                    __size_of_SMT1_PR_ACQ_ISR 004A                             _calcSteering$3880 00C4  
                   __end_of_SYSTEM_Initialize 209A                               _CLC3_Initialize 255C  
                 PWM7_LoadDutyValue@dutyValue 0014                                    __pbssBANK0 0060  
               ?_UART1_SetOverrunErrorHandler 0014                        ?_UART1_SetErrorHandler 0014  
                            ?_PWM5_Initialize 0001                              ?_TMR3_Initialize 0001  
                    __size_of_SMT1_PW_ACQ_ISR 0054                         _TMR4_InterruptHandler 00CC  
                                     IVTBASEH 003FD6                                       IVTBASEL 003FD5  
                                     IVTBASEU 003FD7                                       ?___flge 0014  
                                  ??_TMR4_ISR 0013                       __end_of_ADCC_Initialize 1FAE  
                  __end_of_PWM6_LoadDutyValue 2342          __end_of_TMR5_SetGateInterruptHandler 276A  
       __size_of_TMR5_SetGateInterruptHandler 000A                  _TMR5_SetGateInterruptHandler 2760  
                                     _CCP3CAP 003F77                                       _CCP4CAP 003F73  
                                     _CCP3CON 003F76                                       _CCP4CON 003F72  
                                     _ADFLTRH 003EE7                                       _ADFLTRL 003EE6  
               __size_of_CCP3_DefaultCallBack 0030                                       _CCP3PPS 003ACF  
                                     _CCP4PPS 003AD0                                       _CLC3CON 003C60  
                                     _CLC3POL 003C61                                       _ADPREVH 003EEE  
                                     _ADPREVL 003EED                              ?_PWM6_Initialize 0001  
                            ?_TMR4_Initialize 0001                                       _ADSTPTH 003EE5  
                                     _ADSTPTL 003EE4                               ?_PMD_Initialize 0001  
                           _UART1_Receive_ISR 1BE0                                    _getReverse 1938  
                                     _U1ERRIE 003DFA                                     ?_actSpeed 0022  
                                     _U1ERRIR 003DF9                                 ?_TMR4_10msISR 0001  
                                ?_Default_ISR 0001                            ?_UART1_Receive_ISR 0001  
                                     _U1RXPPS 003AE5                                     ?___xxtofl 001C  
                          _PWM5_LoadDutyValue 2342                                    _distRightM 0096  
                     __size_of_TMR5_ReadTimer 0024                                       _OSCCON1 0039D9  
                                     _OSCCON3 0039DB                             __end_of_calcSpeed 1052  
                                     _IVTLOCK 003FD4                                       _SMT1CLK 003F21  
                                     _OSCTUNE 0039DE                                       _SMT1CPR 003F15  
                                     _SMT1CPW 003F18                                       _PWM5DCH 003F6D  
                                     _PWM5DCL 003F6C                                       _PWM6DCH 003F69  
                                     _PWM6DCL 003F68                                       _PWM7DCH 003F65  
                                     _PWM7DCL 003F64                                       _SMT1SIG 003F22  
                                     _PWM8DCH 003F61                                       _PWM5CON 003F6E  
                                     _PWM8DCL 003F60                                       _SMT1PRH 003F1C  
                                     _PWM6CON 003F6A                                       _SMT1PRL 003F1B  
                                     _PWM7CON 003F66                                       _SMT1PRU 003F1D  
                                   ?_getCurve 0001                                       _SMT1WIN 003F23  
                                     _SMT1TMR 003F12                                       _PWM8CON 003F62  
                                     _SLRCONA 003A43                                       _SLRCONB 003A53  
                                     _SLRCONC 003A63                                       _SLRCOND 003A73  
                                     _SLRCONE 003A83                           ??_UART1_Receive_ISR 0012  
                     __end_of_TMR5_WriteTimer 25E0                           ?_PWM5_LoadDutyValue 0014  
                            ?_PWM7_Initialize 0001                              ?_TMR5_Initialize 0001  
                   INTERRUPT_Initialize@state 0014                          __size_of_setSteering 01A4  
                                   _CLCIN0PPS 003AD9                                     _CLCIN2PPS 003ADB  
                                   _CLCIN3PPS 003ADC                                       __Hparam 0000  
                                   ?_setMotor 0018                                       __Lparam 0000  
                    __end_of_UART1_Initialize 1EBE                                       ___aldiv 1620  
                             __size_of___flge 0104                                       ___fladd 00B2  
                                     ___awdiv 1CA6                                       ___flmul 0574  
                                     ___fltol 172C                     __end_of_UART1_Receive_ISR 1CA6  
                        ??_PWM5_LoadDutyValue 0016                                       __pcinit 2176  
                   _TMR5_GateInterruptHandler 00D0                              ?_PWM8_Initialize 0001  
                                     __ramtop 1000                   __size_of_UART1_Transmit_ISR 0048  
               ?_TMR5_SetGateInterruptHandler 0014                                       __ptext0 2650  
                                     __ptext1 1D6A                                       __ptext2 14EE  
                                     __ptext3 0C10                                       __ptext4 1206  
                                     __ptext5 230E                                       __ptext6 2342  
                                     __ptext7 1834                                       __ptext8 1938  
                                     __ptext9 09C4                                ??_TMR4_10msISR 0013  
                        __size_of_TMR5_Reload 000E                                    ??_actSpeed 0024  
                     __end_of_CLC3_Initialize 2588                         _OSCILLATOR_Initialize 2708  
                                   _T2CONbits 003FAC                                    ??___xxtofl 0020  
                                   _T3CONbits 003FA6                 __size_of_CCP4_DefaultCallBack 0030  
                            ___aldiv@dividend 0014                                     _T4CONbits 003FA0  
                    ??_PIN_MANAGER_Initialize 0014             __size_of_TMR4_SetInterruptHandler 000A  
                                   _T2HLTbits 003FAD                                     _T5CONbits 003F9A  
                   ?_TMR4_SetInterruptHandler 0014                                     _IPR10bits 00398A  
                                     _smtDuty 007C                                     _T4HLTbits 003FA1  
                                  ??_getCurve 0014                                     _PIE10bits 00399A  
                  __size_of_SYSTEM_Initialize 004A                          end_of_initialization 21AE  
                                   _T2RSTbits 003FAF                ??_TMR4_DefaultInterruptHandler 0013  
                                   _T4RSTbits 003FA3                                     _PIR10bits 0039AA  
                           ??_SMT1_PR_ACQ_ISR 0011                                 __Lmediumconst 0000  
         __end_of_UART1_SetTxInterruptHandler 2738                   _UART1_SetTxInterruptHandler 272E  
              ??_UART1_SetOverrunErrorHandler 0016                                    ??_setMotor 001A  
                    __size_of_SMT1_Initialize 0030                             ?_CCP3_SetCallBack 0014  
                            ___aldiv@quotient 001E                             ??_SMT1_PW_ACQ_ISR 0011  
                                     postinc0 003FEE                              ?_ADCC_Initialize 0001  
                          ??_CCP3_SetCallBack 0016                           _UART1_RxDataHandler 2588  
                        __size_of_startAccell 0132                                   ?_getReverse 0001  
                                   _PORTBbits 003FCB                                     _PORTDbits 003FCD  
                    __size_of_CCP3_CaptureISR 0036                                   ___fladd@grs 00B7  
                          getCurve@deltaRight 0016                                 ___xxtofl@sign 0024  
                        ?_UART1_RxDataHandler 0001                              ?_TMR5_WriteTimer 0009  
                        setSteering@steeringB 0023                          setSteering@steeringF 0021  
                     TMR5_WriteTimer@timerVal 0009                                   ___flmul@grs 00A1  
                    __size_of_CCP4_CaptureISR 0036             CCP4_DefaultCallBack@capturedValue 0005  
                           ?_CCP4_SetCallBack 0014                  __end_of_INTERRUPT_Initialize 2050  
                              __end_of___flge 1938                    __size_of_UART1_Receive_ISR 00C6  
                          ??_CCP4_SetCallBack 0016                                   _CLC3CONbits 003C60  
                               __pidataCOMRAM 279E                             __size_of_TMR4_ISR 0038  
                      ?_OSCILLATOR_Initialize 0001                   __size_of_PWM8_LoadDutyValue 0034  
                            ?_CLC3_Initialize 0001                                _TMR5_ReadTimer 262C  
                         start_initialization 2176                ??_TMR5_SetGateInterruptHandler 0016  
             __size_of_PIN_MANAGER_Initialize 00CA                          __size_of_Default_ISR 0002  
                     ??_UART1_SetErrorHandler 0016                      __size_of_CCP3_Initialize 002E  
                       ??_UART1_RxDataHandler 0012                                    ivt0x8_base 0008  
                               _uart1RxBuffer 0068                                   _actMotorPow 0084  
                               _uart1TxBuffer 0070                           __size_of_getReverse 00FC  
                        __end_of_TMR4_10msISR 2794                                  _middleOffSet 008E  
                                    ??___flge 001C                              ??_PMD_Initialize 0014  
                      __size_of_TMR5_GATE_ISR 0034                                  _oldDistRight 0092  
                    __size_of_CCP4_Initialize 002E                    __end_of_PWM7_LoadDutyValue 23DE  
                           ??_SMT1_Initialize 0014                        __end_of_TMR5_ReadTimer 2650  
                       CCP4_CaptureISR@module 0007                                     ___fladd@a 00B0  
                                   ___fladd@b 00AC                           calcMotorPow@addMPow 00C8  
                 PWM5_LoadDutyValue@dutyValue 0014                         TMR4_ISR@CountCallBack 003C  
                                   ___flmul@a 002E                                     ___flmul@b 002A  
                                 __pbssCOMRAM 003A                            _UART1_ErrorHandler 00D8  
                               __pcstackBANK0 009F                             __size_of_actSpeed 0094  
                          _PWM6_LoadDutyValue 230E                      __size_of_TMR2_Initialize 001C  
                           __size_of___xxtofl 01B4                      _UART1_RxInterruptHandler 00E0  
                           ??_CCP3_CaptureISR 0003                  __end_of_CCP3_DefaultCallBack 24A4  
                      __size_of_TMR4_CallBack 0030                                     _calcSpeed 0E40  
                           __size_of_getCurve 024C                           ?_PWM6_LoadDutyValue 0014  
                 PWM8_LoadDutyValue@dutyValue 0014                  fp__UART1_DefaultErrorHandler 0000  
                                _currentSpeed 0088                  ?_UART1_SetRxInterruptHandler 0014  
                                   __pnvBANK0 00CC                            setMotor@motorPower 0018  
                      _PIN_MANAGER_Initialize 1B16                      __size_of_PWM5_Initialize 0018  
                    __size_of_TMR3_Initialize 0038                             ?_UART1_Initialize 0001  
        __end_of_UART1_SetFramingErrorHandler 2756         __size_of_UART1_SetFramingErrorHandler 000A  
                _UART1_SetFramingErrorHandler 274C                                      ?___aldiv 0014  
                                    ?___fladd 00AC                             __size_of_setMotor 00E2  
            __end_of_TMR4_SetInterruptHandler 2774                                      ?___awdiv 0014  
           CCP3_DefaultCallBack@capturedValue 0001                             ??_CCP4_CaptureISR 0007  
                                    ?___flmul 002A                                      ?___fltol 00B8  
                          ??_UART1_Initialize 0016                                     _distLeftM 009A  
                                   _distFront 004A                              _uart1RxLastError 0040  
                                   _distRight 0098                          ??_PWM6_LoadDutyValue 0016  
                                   _cycle10ms 009E                               ?_TMR5_ReadTimer 0009  
                               ?_calcMotorPow 0001                                      _CLC3GLS0 003C66  
                                    _CLC3GLS1 003C67                                      _CLC3GLS2 003C68  
                                    _CLC3GLS3 003C69                                     _driveMode 004C  
         fp__UART1_DefaultOverrunErrorHandler 0000      __end_of_UART1_DefaultOverrunErrorHandler 2796  
   __size_of_UART1_DefaultOverrunErrorHandler 0002            ??_UART1_DefaultOverrunErrorHandler 0012  
           ?_UART1_DefaultOverrunErrorHandler 0001              _UART1_DefaultOverrunErrorHandler 2794  
                                    _CLC3SEL0 003C62                                      _CLC3SEL1 003C63  
                                    _CLC3SEL2 003C64                                      _CLC3SEL3 003C65  
                             _SMT1_PR_ACQ_ISR 20E4                                 ?_calcSteering 0001  
                    __size_of_PWM6_Initialize 0018                      __size_of_TMR4_Initialize 002C  
                               _TMR5_GATE_ISR 23E0                                     _curveMode 003F  
                                    _T2CLKCON 003FAE                                   _U1ERRIRbits 003DF9  
                                    _T4CLKCON 003FA2                                    ?_calcSpeed 0001  
                        _INTERRUPT_Initialize 2004                                 ??_setSteering 001F  
                             ___aldiv@divisor 0018                               _SMT1_PW_ACQ_ISR 1FB0  
                             ___aldiv@counter 001C         UART1_SetErrorHandler@interruptHandler 0014  
                                    _IPR1bits 003981                  __end_of_CCP4_DefaultCallBack 24D4  
                           ??_CCP3_Initialize 0016                                      _IPR3bits 003983  
                                    _PIE1bits 003991                                      _PIE3bits 003993  
                                    _IPR7bits 003987                                      _IPR8bits 003988  
                                    _IPR9bits 003989                                      _PIE7bits 003997  
                                    _PIE8bits 003998                                      _PIE9bits 003999  
                                    _IVTBASEH 003FD6                                      _IVTBASEL 003FD5  
                                    _IVTBASEU 003FD7                                      i1u245_20 25AC  
                                    i1u245_21 25A8                                      i1u350_20 1C3A  
                                    i1u350_21 1C36                                      i1u352_20 1C80  
                                    i1u351_28 1C50                                      i1u352_21 1C7C  
                                    i1u351_29 1C64                                      i1u370_20 228C  
                                    i1u353_28 1C86                                      i1u346_20 2140  
                                    i1u362_20 21D2                                      i1u370_21 2288  
                                    i1u353_29 1C9C                                      i1u346_21 213C  
                                    i1u362_21 21CE                                      i1u347_20 2164  
                                    i1u347_21 2160                 ??_UART1_SetRxInterruptHandler 0016  
                                    i1u348_20 1C00                                      i1u364_20 220E  
                                    i1u363_28 21D8                                      i1u348_21 1BFC  
                                    i1u364_21 220A                                      i1u363_29 21EC  
                                    i1u357_20 2458                                      i1u357_21 2454  
                                    i1u349_28 1C16                                      i1u365_28 2214  
                                    i1u349_29 1C2A                                      i1u365_29 2228  
                                    i1u358_28 245E                                      i1u358_29 2472  
                                    i2u246_40 25C2                                      i2u246_41 25BE  
                                    _PIR1bits 0039A1                                      i2u354_40 2482  
                                    i2u354_41 247E                                      i2u371_40 2108  
                                    i2u355_40 24B2                                      i2u371_41 2104  
                                    i2u355_41 24AE                                      i2u372_40 1FDE  
                                    i2u372_41 1FDA                                      i2u366_48 22BE  
                                    i2u366_49 22D4                                      _PIR4bits 0039A4  
                                    i2u368_40 23F8                                      i2u367_48 22F6  
                                    i2u368_41 23F4                                      i2u367_49 230C  
                                    i2u369_48 23FE                                      i2u369_49 2412  
                                    _PIR6bits 0039A6                                      _PIR7bits 0039A7  
                                    _PIR8bits 0039A8                                      _PIR9bits 0039A9  
                                    _SMT1CON0 003F1E                                      _SMT1CON1 003F1F  
                    __size_of_PWM7_Initialize 0018                      __size_of_TMR5_Initialize 004A  
                                    _SMT1STAT 003F20                             _SMT1_Overflow_ISR 25E0  
                                    _TMR4_ISR 2268                    __end_of_UART1_Transmit_ISR 2176  
                               _TMR4_CallBack 2444                                     _smtPeriod 0046  
               ?_UART1_SetFramingErrorHandler 0014                                 ??_TMR5_Reload 000B  
                 __size_of_PWM5_LoadDutyValue 0034                            ?_SMT1_Overflow_ISR 0001  
                                ??_getReverse 0014                                ??_calcMotorPow 00C2  
                                  _ADCON0bits 003EF8                                    _ADCON1bits 003EF9  
                                  _ADCON2bits 003EFA                                    _ADCON3bits 003EFB  
                           ??_CCP4_Initialize 0016                                ??_calcSteering 00C2  
                         ??_SMT1_Overflow_ISR 0011                     TMR5_ReadTimer@readValHigh 000F  
                   __size_of_CCP3_SetCallBack 000A                                ?_TMR5_GATE_ISR 0001  
                    __size_of_PWM8_Initialize 0018                                  _SMT1CON0bits 003F1E  
                                _SMT1CON1bits 003F1F                                   _INTCON0bits 003FD2  
                       ?_INTERRUPT_Initialize 0001                         __size_of_TMR4_10msISR 0006  
                        fp__UART1_Receive_ISR 0000                        _uart1TxBufferRemaining 00E2  
                           ??_TMR2_Initialize 0014                                  _uart1RxCount 0041  
                          __end_of_getReverse 1A34                                    _ADSTATbits 003EFC  
                                    __Hrparam 0000                     __end_of_SMT1_Overflow_ISR 2608  
                         __end_of_setSteering 13AA                                      __Lrparam 0000  
                                 _oldDistLeft 003A                                 ??_startAccell 003A  
                              ?_TMR4_CallBack 0001                                calcSpeed@speed 00C6  
                     ??_OSCILLATOR_Initialize 0014                              __size_of___aldiv 010C  
                            __size_of___fladd 04C2                              __size_of___awdiv 00C4  
                            __size_of___flmul 0450                              __size_of___fltol 0108  
                                _SMT1STATbits 003F20                          _CCP3_DefaultCallBack 2474  
                     __end_of_SMT1_PR_ACQ_ISR 212E                             ??_PWM5_Initialize 0014  
                           ??_TMR3_Initialize 0014                      _TMR4_SetInterruptHandler 276A  
                                    _actSpeed 1EBE          __size_of_UART1_SetRxInterruptHandler 000A  
                                _TMR4_10msISR 278E                                      ___xxtofl 1052  
                    __size_of_ADCC_Initialize 005C                           __end_of_TMR5_Reload 272E  
                   __size_of_CCP4_SetCallBack 000A                                      __pivt0x8 0008  
                     __end_of_SMT1_PW_ACQ_ISR 2004                                      _getCurve 09C4  
                                    __ptext10 0E40                                      __ptext11 00B2  
                                    __ptext20 0574                                      __ptext12 13AA  
                                    __ptext21 1CA6                                      __ptext13 1A34  
                                    __ptext30 2760                                      __ptext22 2050  
                                    __ptext14 2376                                      __ptext31 2530  
                                    __ptext23 1E18                                      __ptext15 23AA  
                                    __ptext40 2608                                      __ptext32 276A  
                                    __ptext24 272E                                      __ptext16 1EBE  
                                    __ptext41 1B16                                      __ptext33 2230  
                                    __ptext25 2738                                      __ptext17 1620  
                                    __ptext50 21B8                                      __ptext42 2708  
                                    __ptext34 2670                                      __ptext26 2742  
                                    __ptext18 1052                                      __ptext51 212E  
                                    __ptext43 2004                                      __ptext35 2414  
                                    __ptext27 274C                                      __ptext19 172C  
                                    __ptext60 278E                                      __ptext52 21F4  
                                    __ptext44 255C                                      __ptext36 26A8  
                                    __ptext28 2756                                      __ptext61 2798  
                                    __ptext53 1BE0                                      __ptext45 24D4  
                                    __ptext37 26C0                                      __ptext29 209A  
                                    __ptext70 25B4                                      __ptext62 279C  
                                    __ptext54 2794                                      __ptext46 2774  
                                    __ptext38 26D8                                      __ptext71 262C  
                                    __ptext63 22A0                                      __ptext55 2796  
                                    __ptext47 2502                                      __ptext39 26F0  
                                    __ptext72 20E4                                      __ptext64 2474  
                                    __ptext56 2788                                      __ptext48 277E  
                                    __ptext73 1FB0                                      __ptext65 22D8  
                                    __ptext57 2588                                      __ptext49 1F52  
                                    __ptext74 25E0                                      __ptext66 24A4  
                                    __ptext58 2268                                      __ptext75 0000  
                                    __ptext67 23E0                                      __ptext59 2444  
                                    __ptext68 268C                                      __ptext69 2720  
                                    _distLeft 009C                __size_of_UART1_SetErrorHandler 000A  
                                 ??_calcSpeed 00C2                 __end_of_UART1_SetErrorHandler 2760  
                                  _T3GCONbits 003FA7                             ??_TMR4_Initialize 0016  
                           ??_PWM6_Initialize 0014                                 __size_of_main 0020  
                                    _oldSpeed 0086                                    _T5GCONbits 003F9B  
                               __size_of_loop 00AE                               _SMT1_Initialize 2414  
                                 _IVTLOCKbits 003FD4                                      _setMotor 1A34  
                                    _setSpeed 008A                      __size_of_TMR5_WriteTimer 002C  
                   _UART1_OverrunErrorHandler 00DA  UART1_SetOverrunErrorHandler@interruptHandler 0014  
                                    isa$xinst 000000            __size_of_UART1_DefaultErrorHandler 0006  
                  ?_UART1_DefaultErrorHandler 0001                         ?_CCP3_DefaultCallBack 0001  
                  __end_of_PWM8_LoadDutyValue 23AA                               _CCP3_CaptureISR 22A0  
                       fp__UART1_Transmit_ISR 0000                             ??_TMR5_Initialize 0016  
                           ??_PWM7_Initialize 0014           fp__TMR5_DefaultGateInterruptHandler 0000  
    __end_of_TMR5_DefaultGateInterruptHandler 26A8     __size_of_TMR5_DefaultGateInterruptHandler 001C  
          ??_TMR5_DefaultGateInterruptHandler 0011             ?_TMR5_DefaultGateInterruptHandler 0001  
            _TMR5_DefaultGateInterruptHandler 268C                           __end_of_startAccell 1620  
                              _battCheckCount 0090                                 ??_Default_ISR 0001  
              ??_UART1_SetFramingErrorHandler 0016                                  _reverseCount 0094  
                             ??_TMR5_GATE_ISR 0011                   __end_of_UART1_RxDataHandler 25B4  
                                 _uart1RxHead 0043                          _CCP4_DefaultCallBack 24A4  
                                 _uart1TxHead 0045                                   _uart1RxTail 0042  
                                 _uart1TxTail 0044                        ??_INTERRUPT_Initialize 0014  
                          _PWM7_LoadDutyValue 23AA                                      intlevel1 0000  
                                    intlevel2 0000                      __size_of_CLC3_Initialize 002C  
                                 _setSteering 1206                               _CCP4_CaptureISR 22D8  
                     ?_PIN_MANAGER_Initialize 0001                             ??_PWM8_Initialize 0014  
                         ?_PWM7_LoadDutyValue 0014                          __end_of_calcMotorPow 14EE  
                             ??_TMR4_CallBack 0013                    __size_of_SMT1_Overflow_ISR 0028  
                        __end_of_calcSteering 0E40                           _uart1RxStatusBuffer 0060  
                            ??_TMR5_ReadTimer 000B  UART1_SetFramingErrorHandler@interruptHandler 0014  
           __end_of_UART1_DefaultErrorHandler 278E                                   _reverseTime 0082  
                            ?_SMT1_PR_ACQ_ISR 0001                                   _TMR5_Reload 2720  
                                  _SMT1SIGPPS 003AD2                                    _SMT1WINPPS 003AD1  
                        ??_PWM7_LoadDutyValue 0016                                 actSpeed@speed 0024  
                       ?_CCP4_DefaultCallBack 0005                     calcMotorPow@oldSpeedDelta 00C6  
                            _CCP3_SetCallBack 277E                     __size_of_UART1_Initialize 00A6  
                                ___aldiv@sign 001D                              ?_SMT1_PW_ACQ_ISR 0001  
                             _CCP3_Initialize 2502                   PWM6_LoadDutyValue@dutyValue 0014  
                           calcSteering@delta 00C6                      _UART1_TxInterruptHandler 00DE  
                               ___fladd@signs 00B4                           __end_of_Default_ISR 279E  
                     __end_of_SMT1_Initialize 2444                __end_of_PIN_MANAGER_Initialize 1BE0  
                           ??_ADCC_Initialize 0014                                  ___fladd@aexp 00B5  
                                ___fladd@bexp 00B6                  ?_UART1_SetTxInterruptHandler 0014  
                     __end_of_CCP3_CaptureISR 22D6  
