

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Jan 23 17:29:14 2024

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F46K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=4,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=4,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1
    87                           	psect	text72,global,reloc=4,class=CODE,delta=1
    88                           	psect	text73,global,reloc=2,class=CODE,delta=1
    89                           	psect	text74,global,reloc=2,class=CODE,delta=1
    90                           	psect	text75,global,reloc=2,class=CODE,delta=1
    91                           	psect	text76,global,reloc=4,class=CODE,delta=1
    92                           	psect	text77,global,reloc=4,class=CODE,delta=1
    93                           	psect	text78,global,reloc=2,class=CODE,delta=1
    94                           	psect	text79,global,reloc=4,class=CODE,delta=1
    95                           	psect	text80,global,reloc=2,class=CODE,delta=1
    96                           	psect	text81,global,reloc=4,class=CODE,delta=1
    97                           	psect	text82,global,reloc=2,class=CODE,delta=1
    98                           	psect	text83,global,reloc=2,class=CODE,delta=1
    99                           	psect	text84,global,reloc=2,class=CODE,delta=1
   100                           	psect	text85,global,reloc=2,class=CODE,delta=1
   101                           	psect	text86,global,reloc=4,class=CODE,delta=1
   102                           	psect	text87,global,reloc=4,class=CODE,delta=1
   103                           	psect	text88,global,reloc=4,class=CODE,delta=1
   104                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   105                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   106                           	psect	text89,global,reloc=4,class=CODE,delta=1
   107                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   108                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   109                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   110  0000                     
   111                           ; Version 2.20
   112                           ; Generated 05/05/2020 GMT
   113                           ; 
   114                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   115                           ; All rights reserved.
   116                           ; 
   117                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   118                           ; 
   119                           ; Redistribution and use in source and binary forms, with or without modification, are
   120                           ; permitted provided that the following conditions are met:
   121                           ; 
   122                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   123                           ;        conditions and the following disclaimer.
   124                           ; 
   125                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   126                           ;        of conditions and the following disclaimer in the documentation and/or other
   127                           ;        materials provided with the distribution.
   128                           ; 
   129                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   130                           ;        software without specific prior written permission.
   131                           ; 
   132                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   133                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   134                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   135                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   136                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   137                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   138                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   139                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   140                           ; 
   141                           ; 
   142                           ; Code-generator required, PIC18F46K42 Definitions
   143                           ; 
   144                           ; SFR Addresses
   145  0000                     _ADERRL	set	16098
   146  0000                     _ADERRH	set	16099
   147  0000                     _ADPREVL	set	16109
   148  0000                     _ADPREVH	set	16110
   149  0000                     _ADFLTRL	set	16102
   150  0000                     _ADFLTRH	set	16103
   151  0000                     _ADACCL	set	16104
   152  0000                     _ADACCH	set	16105
   153  0000                     _ADCNT	set	16107
   154  0000                     _ADRESL	set	16111
   155  0000                     _ADRESH	set	16112
   156  0000                     _ADCON0	set	16120
   157  0000                     _ADCON1	set	16121
   158  0000                     _ADPREH	set	16119
   159  0000                     _ADPREL	set	16118
   160  0000                     _ADCAP	set	16117
   161  0000                     _ADACQH	set	16116
   162  0000                     _ADPCH	set	16113
   163  0000                     _ADRPT	set	16108
   164  0000                     _ADACCU	set	16106
   165  0000                     _ADSTPTH	set	16101
   166  0000                     _ADSTPTL	set	16100
   167  0000                     _ADUTHH	set	16097
   168  0000                     _ADUTHL	set	16096
   169  0000                     _ADLTHH	set	16095
   170  0000                     _T2CON	set	16300
   171  0000                     _T2TMR	set	16298
   172  0000                     _T2PR	set	16299
   173  0000                     _T2HLT	set	16301
   174  0000                     _T2CLKCON	set	16302
   175  0000                     _SMT1SIG	set	16162
   176  0000                     _SMT1WIN	set	16163
   177  0000                     _SMT1CLK	set	16161
   178  0000                     _SMT1STAT	set	16160
   179  0000                     _SMT1CON1	set	16159
   180  0000                     _PWM8DCL	set	16224
   181  0000                     _PWM8DCH	set	16225
   182  0000                     _PWM8CON	set	16226
   183  0000                     _CCPTMRS1bits	set	16223
   184  0000                     _PWM7DCL	set	16228
   185  0000                     _PWM7DCH	set	16229
   186  0000                     _PWM7CON	set	16230
   187  0000                     _T4CON	set	16288
   188  0000                     _PIR7bits	set	14759
   189  0000                     _T4TMR	set	16286
   190  0000                     _T4PR	set	16287
   191  0000                     _T4RST	set	16291
   192  0000                     _T4HLT	set	16289
   193  0000                     _T4CLKCON	set	16290
   194  0000                     _T3CON	set	16294
   195  0000                     _TMR3L	set	16292
   196  0000                     _TMR3H	set	16293
   197  0000                     _T3CLK	set	16297
   198  0000                     _T3GATE	set	16296
   199  0000                     _T3GCON	set	16295
   200  0000                     _T5CON	set	16282
   201  0000                     _T5CLK	set	16285
   202  0000                     _T5GATE	set	16284
   203  0000                     _CCPR4L	set	16240
   204  0000                     _CCPR4H	set	16241
   205  0000                     _CCP4CAP	set	16243
   206  0000                     _CCP4CON	set	16242
   207  0000                     _IPR9bits	set	14729
   208  0000                     _IVTBASEL	set	16341
   209  0000                     _IVTBASEH	set	16342
   210  0000                     _IVTBASEU	set	16343
   211  0000                     _CCP4PPS	set	15056
   212  0000                     _SMT1WINPPS	set	15057
   213  0000                     _CLCIN0PPS	set	15065
   214  0000                     _CLCIN3PPS	set	15068
   215  0000                     _TRISD	set	16325
   216  0000                     _TRISC	set	16324
   217  0000                     _TRISB	set	16323
   218  0000                     _LATC	set	16316
   219  0000                     _LATB	set	16315
   220  0000                     _OSCTUNE	set	14814
   221  0000                     _OSCFRQ	set	14815
   222                           
   223                           	psect	nvCOMRAM
   224  000038                     __pnvCOMRAM:
   225                           	callstack 0
   226  000038                     _TMR5_GateInterruptHandler:
   227                           	callstack 0
   228  000038                     	ds	2
   229  00003A                     _timer5ReloadVal:
   230                           	callstack 0
   231  00003A                     	ds	2
   232  00003C                     _UART1_TxInterruptHandler:
   233                           	callstack 0
   234  00003C                     	ds	2
   235  00003E                     _UART1_RxInterruptHandler:
   236                           	callstack 0
   237  00003E                     	ds	2
   238  000040                     _uart1TxBufferRemaining:
   239                           	callstack 0
   240  000040                     	ds	1
   241                           
   242                           	psect	nvBANK0
   243  0000F0                     __pnvBANK0:
   244                           	callstack 0
   245  0000F0                     _BatteryVolt:
   246                           	callstack 0
   247  0000F0                     	ds	2
   248  0000F2                     _TMR4_InterruptHandler:
   249                           	callstack 0
   250  0000F2                     	ds	2
   251  0000F4                     _timer3ReloadVal:
   252                           	callstack 0
   253  0000F4                     	ds	2
   254  0000F6                     _CCP4_CallBack:
   255                           	callstack 0
   256  0000F6                     	ds	2
   257  0000F8                     _CCP3_CallBack:
   258                           	callstack 0
   259  0000F8                     	ds	2
   260  0000FA                     _UART1_ErrorHandler:
   261                           	callstack 0
   262  0000FA                     	ds	2
   263  0000FC                     _UART1_OverrunErrorHandler:
   264                           	callstack 0
   265  0000FC                     	ds	2
   266  0000FE                     _UART1_FramingErrorHandler:
   267                           	callstack 0
   268  0000FE                     	ds	2
   269  0000                     _CLC3CON	set	15456
   270  0000                     _U1ERRIRbits	set	15865
   271  0000                     _ADCON1bits	set	16121
   272  0000                     _ADSTATbits	set	16124
   273  0000                     _ADCON2bits	set	16122
   274  0000                     _ADCON3bits	set	16123
   275  0000                     _ADCON0bits	set	16120
   276  0000                     _SMT1PR	set	16155
   277  0000                     _SMT1STATbits	set	16160
   278  0000                     _SMT1CON0bits	set	16158
   279  0000                     _SMT1CON1bits	set	16159
   280  0000                     _PR2	set	16299
   281  0000                     _TMR2	set	16298
   282  0000                     _T2CONbits	set	16300
   283  0000                     _T2RSTbits	set	16303
   284  0000                     _T2HLTbits	set	16301
   285  0000                     _PR4	set	16287
   286  0000                     _TMR4	set	16286
   287  0000                     _T4CONbits	set	16288
   288  0000                     _T4RSTbits	set	16291
   289  0000                     _T4HLTbits	set	16289
   290  0000                     _T3GCONbits	set	16295
   291  0000                     _T3CONbits	set	16294
   292  0000                     _T5GCONbits	set	16283
   293  0000                     _T5CONbits	set	16282
   294  0000                     _IVTLOCKbits	set	16340
   295  0000                     _GIE	set	130711
   296  0000                     _IPR1bits	set	14721
   297  0000                     _IPR3bits	set	14723
   298  0000                     _PIE3bits	set	14739
   299  0000                     _PMD0	set	14784
   300  0000                     _OSCCON1	set	14809
   301  0000                     _OSCCON3	set	14811
   302  0000                     _OSCEN	set	14813
   303  0000                     _RA0PPS	set	14848
   304  0000                     _RA1PPS	set	14849
   305  0000                     _ANSELA	set	14912
   306  0000                     _ANSELB	set	14928
   307  0000                     _ANSELC	set	14944
   308  0000                     _ANSELD	set	14960
   309  0000                     _LATA	set	16314
   310  0000                     _LATD	set	16317
   311  0000                     _LATE	set	16318
   312  0000                     _PMD7	set	14791
   313  0000                     _PMD6	set	14790
   314  0000                     _PMD5	set	14789
   315  0000                     _PMD4	set	14788
   316  0000                     _PMD3	set	14787
   317  0000                     _PMD2	set	14786
   318  0000                     _PMD1	set	14785
   319  0000                     _TRISA	set	16322
   320  0000                     _TRISE	set	16326
   321  0000                     _PORTDbits	set	16333
   322  0000                     _INTCON0bits	set	16338
   323  0000                     _INLVLD	set	14964
   324  0000                     _SLRCOND	set	14963
   325  0000                     _ODCOND	set	14962
   326  0000                     _RD0I2C	set	14970
   327  0000                     _WPUD	set	14961
   328  0000                     _ANSELE	set	14976
   329  0000                     _INLVLC	set	14948
   330  0000                     _SLRCONC	set	14947
   331  0000                     _ODCONC	set	14946
   332  0000                     _RC3I2C	set	14954
   333  0000                     _WPUC	set	14945
   334  0000                     _INLVLB	set	14932
   335  0000                     _SLRCONB	set	14931
   336  0000                     _ODCONB	set	14930
   337  0000                     _RB1I2C	set	14938
   338  0000                     _WPUB	set	14929
   339  0000                     _T5GPPS	set	15049
   340  0000                     _CCP3PPS	set	15055
   341  0000                     _INLVLE	set	14980
   342  0000                     _SLRCONE	set	14979
   343  0000                     _ODCONE	set	14978
   344  0000                     _WPUE	set	14977
   345  0000                     _INLVLA	set	14916
   346  0000                     _SLRCONA	set	14915
   347  0000                     _ODCONA	set	14914
   348  0000                     _WPUA	set	14913
   349  0000                     _RB2I2C	set	14939
   350  0000                     _RC4I2C	set	14955
   351  0000                     _RD1I2C	set	14971
   352  0000                     _U1RXPPS	set	15077
   353  0000                     _RA3PPS	set	14851
   354  0000                     _RA4PPS	set	14852
   355  0000                     _CLC3CONbits	set	15456
   356  0000                     _U1RXB	set	15848
   357  0000                     _U1TXB	set	15850
   358  0000                     _U1P1L	set	15852
   359  0000                     _RB3PPS	set	14859
   360  0000                     _CLCIN2PPS	set	15067
   361  0000                     _SMT1SIGPPS	set	15058
   362  0000                     _PIE7bits	set	14743
   363  0000                     _PIE8bits	set	14744
   364  0000                     _PIE9bits	set	14745
   365  0000                     _PIR9bits	set	14761
   366  0000                     _SMT1TMR	set	16146
   367  0000                     _SMT1CPR	set	16149
   368  0000                     _SMT1CPW	set	16152
   369  0000                     _ADLTHL	set	16094
   370  0000                     _SMT1PRL	set	16155
   371  0000                     _SMT1PRH	set	16156
   372  0000                     _SMT1PRU	set	16157
   373  0000                     _SMT1CON0	set	16158
   374  0000                     _CCPTMRS0bits	set	16222
   375  0000                     _CCPR3L	set	16244
   376  0000                     _CCPR3H	set	16245
   377  0000                     _CCP3CON	set	16246
   378  0000                     _U1ERRIE	set	15866
   379  0000                     _U1ERRIR	set	15865
   380  0000                     _U1UIR	set	15864
   381  0000                     _U1FIFO	set	15863
   382  0000                     _U1BRGH	set	15862
   383  0000                     _U1BRGL	set	15861
   384  0000                     _U1CON2	set	15860
   385  0000                     _U1CON1	set	15859
   386  0000                     _U1CON0	set	15858
   387  0000                     _U1P3H	set	15857
   388  0000                     _U1P3L	set	15856
   389  0000                     _U1P2H	set	15855
   390  0000                     _U1P2L	set	15854
   391  0000                     _U1P1H	set	15853
   392  0000                     _IVTLOCK	set	16340
   393  0000                     _IPR7bits	set	14727
   394  0000                     _IPR8bits	set	14728
   395  0000                     _IPR10bits	set	14730
   396  0000                     _PIE1bits	set	14737
   397  0000                     _TMR5L	set	16280
   398  0000                     _TMR5H	set	16281
   399  0000                     _T5GCON	set	16283
   400  0000                     _CCP3CAP	set	16247
   401  0000                     _PIR10bits	set	14762
   402  0000                     _PIR1bits	set	14753
   403  0000                     _PIR6bits	set	14758
   404  0000                     _PIR8bits	set	14760
   405  0000                     _PIE10bits	set	14746
   406  0000                     _PWM6DCL	set	16232
   407  0000                     _PWM6DCH	set	16233
   408  0000                     _PWM6CON	set	16234
   409  0000                     _PWM5DCL	set	16236
   410  0000                     _PWM5DCH	set	16237
   411  0000                     _PWM5CON	set	16238
   412  0000                     _PIR4bits	set	14756
   413  0000                     _CLC3GLS3	set	15465
   414  0000                     _CLC3GLS2	set	15464
   415  0000                     _CLC3GLS1	set	15463
   416  0000                     _CLC3GLS0	set	15462
   417  0000                     _CLC3SEL3	set	15461
   418  0000                     _CLC3SEL2	set	15460
   419  0000                     _CLC3SEL1	set	15459
   420  0000                     _CLC3SEL0	set	15458
   421  0000                     _CLC3POL	set	15457
   422  0000                     _T2RST	set	16303
   423  0000                     _ADACQL	set	16115
   424  0000                     _ADCLK	set	16127
   425  0000                     _ADACT	set	16126
   426  0000                     _ADREF	set	16125
   427  0000                     _ADSTAT	set	16124
   428  0000                     _ADCON3	set	16123
   429  0000                     _ADCON2	set	16122
   430                           
   431                           	psect	smallconst
   432  001000                     __psmallconst:
   433                           	callstack 0
   434  001000  00                 	db	0
   435  001001                     STR_2:
   436                           
   437                           ; BSR set to: 0
   438  001001  4F                 	db	79	;'O'
   439  001002  75                 	db	117	;'u'
   440  001003  74                 	db	116	;'t'
   441  001004  20                 	db	32
   442  001005  7C                 	db	124
   443  001006  20                 	db	32
   444  001007  64                 	db	100	;'d'
   445  001008  4C                 	db	76	;'L'
   446  001009  3D                 	db	61	;'='
   447  00100A  20                 	db	32
   448  00100B  25                 	db	37
   449  00100C  64                 	db	100	;'d'
   450  00100D  20                 	db	32
   451  00100E  7C                 	db	124
   452  00100F  20                 	db	32
   453  001010  64                 	db	100	;'d'
   454  001011  52                 	db	82	;'R'
   455  001012  3D                 	db	61	;'='
   456  001013  20                 	db	32
   457  001014  25                 	db	37
   458  001015  64                 	db	100	;'d'
   459  001016  00                 	db	0
   460  001017                     STR_5:
   461                           
   462                           ; BSR set to: 0
   463  001017  20                 	db	32
   464  001018  20                 	db	32
   465  001019  20                 	db	32
   466  00101A  43                 	db	67	;'C'
   467  00101B  75                 	db	117	;'u'
   468  00101C  72                 	db	114	;'r'
   469  00101D  76                 	db	118	;'v'
   470  00101E  65                 	db	101	;'e'
   471  00101F  52                 	db	82	;'R'
   472  001020  69                 	db	105	;'i'
   473  001021  67                 	db	103	;'g'
   474  001022  68                 	db	104	;'h'
   475  001023  74                 	db	116	;'t'
   476  001024  00                 	db	0
   477  001025                     STR_3:
   478                           
   479                           ; BSR set to: 0
   480  001025  20                 	db	32
   481  001026  20                 	db	32
   482  001027  20                 	db	32
   483  001028  43                 	db	67	;'C'
   484  001029  75                 	db	117	;'u'
   485  00102A  72                 	db	114	;'r'
   486  00102B  76                 	db	118	;'v'
   487  00102C  65                 	db	101	;'e'
   488  00102D  4C                 	db	76	;'L'
   489  00102E  65                 	db	101	;'e'
   490  00102F  66                 	db	102	;'f'
   491  001030  74                 	db	116	;'t'
   492  001031  00                 	db	0
   493  001032                     STR_9:
   494                           
   495                           ; BSR set to: 0
   496  001032  41                 	db	65	;'A'
   497  001033  66                 	db	102	;'f'
   498  001034  74                 	db	116	;'t'
   499  001035  65                 	db	101	;'e'
   500  001036  72                 	db	114	;'r'
   501  001037  43                 	db	67	;'C'
   502  001038  75                 	db	117	;'u'
   503  001039  72                 	db	114	;'r'
   504  00103A  76                 	db	118	;'v'
   505  00103B  65                 	db	101	;'e'
   506  00103C  0A                 	db	10
   507  00103D  00                 	db	0
   508  00103E                     STR_1:
   509                           
   510                           ; BSR set to: 0
   511  00103E  42                 	db	66	;'B'
   512  00103F  56                 	db	86	;'V'
   513  001040  6F                 	db	111	;'o'
   514  001041  6C                 	db	108	;'l'
   515  001042  74                 	db	116	;'t'
   516  001043  3A                 	db	58	;':'
   517  001044  20                 	db	32
   518  001045  25                 	db	37
   519  001046  64                 	db	100	;'d'
   520  001047  0A                 	db	10
   521  001048  00                 	db	0
   522  001049                     STR_7:
   523                           
   524                           ; BSR set to: 0
   525  001049  64                 	db	100	;'d'
   526  00104A  69                 	db	105	;'i'
   527  00104B  73                 	db	115	;'s'
   528  00104C  74                 	db	116	;'t'
   529  00104D  4C                 	db	76	;'L'
   530  00104E  3D                 	db	61	;'='
   531  00104F  20                 	db	32
   532  001050  25                 	db	37
   533  001051  64                 	db	100	;'d'
   534  001052  0A                 	db	10
   535  001053  00                 	db	0
   536  001054                     STR_8:
   537                           
   538                           ; BSR set to: 0
   539  001054  64                 	db	100	;'d'
   540  001055  69                 	db	105	;'i'
   541  001056  73                 	db	115	;'s'
   542  001057  74                 	db	116	;'t'
   543  001058  52                 	db	82	;'R'
   544  001059  3D                 	db	61	;'='
   545  00105A  20                 	db	32
   546  00105B  25                 	db	37
   547  00105C  64                 	db	100	;'d'
   548  00105D  0A                 	db	10
   549  00105E  00                 	db	0
   550  00105F                     STR_10:
   551                           
   552                           ; BSR set to: 0
   553  00105F  4F                 	db	79	;'O'
   554  001060  75                 	db	117	;'u'
   555  001061  74                 	db	116	;'t'
   556  001062  43                 	db	67	;'C'
   557  001063  75                 	db	117	;'u'
   558  001064  72                 	db	114	;'r'
   559  001065  76                 	db	118	;'v'
   560  001066  65                 	db	101	;'e'
   561  001067  0A                 	db	10
   562  001068  00                 	db	0
   563  001069                     STR_6:
   564                           
   565                           ; BSR set to: 0
   566  001069  49                 	db	73	;'I'
   567  00106A  6E                 	db	110	;'n'
   568  00106B  43                 	db	67	;'C'
   569  00106C  75                 	db	117	;'u'
   570  00106D  72                 	db	114	;'r'
   571  00106E  76                 	db	118	;'v'
   572  00106F  65                 	db	101	;'e'
   573  001070  0A                 	db	10
   574  001071  00                 	db	0
   575  001072  00                 	db	0	; dummy byte at the end
   576  0000                     
   577                           ; #config settings
   578                           
   579                           	psect	cinit
   580  003B46                     __pcinit:
   581                           	callstack 0
   582  003B46                     start_initialization:
   583                           	callstack 0
   584  003B46                     __initialization:
   585                           	callstack 0
   586                           
   587                           ; Clear objects allocated to BANK1 (32 bytes)
   588  003B46  EE00  F100         	lfsr	0,__pbssBANK1
   589  003B4A  0E20               	movlw	32
   590  003B4C                     clear_0:
   591  003B4C  6AEE               	clrf	postinc0,c
   592  003B4E  06E8               	decf	wreg,f,c
   593  003B50  E1FD               	bnz	clear_0
   594                           
   595                           ; Clear objects allocated to BANK0 (60 bytes)
   596  003B52  EE00  F0B4         	lfsr	0,__pbssBANK0
   597  003B56  0E3C               	movlw	60
   598  003B58                     clear_1:
   599  003B58  6AEE               	clrf	postinc0,c
   600  003B5A  06E8               	decf	wreg,f,c
   601  003B5C  E1FD               	bnz	clear_1
   602                           
   603                           ; Clear objects allocated to COMRAM (21 bytes)
   604  003B5E  EE00  F023         	lfsr	0,__pbssCOMRAM
   605  003B62  0E15               	movlw	21
   606  003B64                     clear_2:
   607  003B64  6AEE               	clrf	postinc0,c
   608  003B66  06E8               	decf	wreg,f,c
   609  003B68  E1FD               	bnz	clear_2
   610                           
   611                           ;
   612                           ; Setup IVTBASE
   613                           ;
   614  003B6A  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   615  003B6C  6ED5               	movwf	213,c
   616  003B6E  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   617  003B70  6ED6               	movwf	214,c
   618  003B72  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   619  003B74  6ED7               	movwf	215,c
   620  003B76                     end_of_initialization:
   621                           	callstack 0
   622  003B76                     __end_of__initialization:
   623                           	callstack 0
   624  003B76  0100               	movlb	0
   625  003B78  EF6F  F01F         	goto	_main	;jump to C main() function
   626                           
   627                           	psect	bssCOMRAM
   628  000023                     __pbssCOMRAM:
   629                           	callstack 0
   630  000023                     _flags:
   631                           	callstack 0
   632  000023                     	ds	2
   633  000025                     _motPow:
   634                           	callstack 0
   635  000025                     	ds	2
   636  000027                     TMR4_ISR@CountCallBack:
   637                           	callstack 0
   638  000027                     	ds	2
   639  000029                     _distRightM:
   640                           	callstack 0
   641  000029                     	ds	2
   642  00002B                     _distLeftM:
   643                           	callstack 0
   644  00002B                     	ds	2
   645  00002D                     _reverseCount:
   646                           	callstack 0
   647  00002D                     	ds	1
   648  00002E                     _uart1RxLastError:
   649                           	callstack 0
   650  00002E                     	ds	1
   651  00002F                     _uart1RxCount:
   652                           	callstack 0
   653  00002F                     	ds	1
   654  000030                     _uart1RxTail:
   655                           	callstack 0
   656  000030                     	ds	1
   657  000031                     _uart1RxHead:
   658                           	callstack 0
   659  000031                     	ds	1
   660  000032                     _uart1TxTail:
   661                           	callstack 0
   662  000032                     	ds	1
   663  000033                     _uart1TxHead:
   664                           	callstack 0
   665  000033                     	ds	1
   666  000034                     _smtPeriod:
   667                           	callstack 0
   668  000034                     	ds	4
   669                           
   670                           	psect	bssBANK0
   671  0000B4                     __pbssBANK0:
   672                           	callstack 0
   673  0000B4                     _uart1RxStatusBuffer:
   674                           	callstack 0
   675  0000B4                     	ds	8
   676  0000BC                     _uart1RxBuffer:
   677                           	callstack 0
   678  0000BC                     	ds	8
   679  0000C4                     _uart1TxBuffer:
   680                           	callstack 0
   681  0000C4                     	ds	8
   682  0000CC                     _smtWay:
   683                           	callstack 0
   684  0000CC                     	ds	4
   685  0000D0                     _smtDuty:
   686                           	callstack 0
   687  0000D0                     	ds	4
   688  0000D4                     _nout:
   689                           	callstack 0
   690  0000D4                     	ds	2
   691  0000D6                     _width:
   692                           	callstack 0
   693  0000D6                     	ds	2
   694  0000D8                     _prec:
   695                           	callstack 0
   696  0000D8                     	ds	2
   697  0000DA                     _actMotorPow:
   698                           	callstack 0
   699  0000DA                     	ds	2
   700  0000DC                     _oldSpeed:
   701                           	callstack 0
   702  0000DC                     	ds	2
   703  0000DE                     _currentSpeed:
   704                           	callstack 0
   705  0000DE                     	ds	2
   706  0000E0                     _setSpeed:
   707                           	callstack 0
   708  0000E0                     	ds	2
   709  0000E2                     _oldDistRight:
   710                           	callstack 0
   711  0000E2                     	ds	2
   712  0000E4                     _oldDistLeft:
   713                           	callstack 0
   714  0000E4                     	ds	2
   715  0000E6                     _distRight:
   716                           	callstack 0
   717  0000E6                     	ds	2
   718  0000E8                     _distLeft:
   719                           	callstack 0
   720  0000E8                     	ds	2
   721  0000EA                     _delay:
   722                           	callstack 0
   723  0000EA                     	ds	1
   724  0000EB                     _cycle10ms:
   725                           	callstack 0
   726  0000EB                     	ds	1
   727  0000EC                     _curveMode:
   728                           	callstack 0
   729  0000EC                     	ds	1
   730  0000ED                     _driveMode:
   731                           	callstack 0
   732  0000ED                     	ds	1
   733  0000EE                     _distFront:
   734                           	callstack 0
   735  0000EE                     	ds	2
   736                           
   737                           	psect	bssBANK1
   738  000100                     __pbssBANK1:
   739                           	callstack 0
   740  000100                     _dbuf:
   741                           	callstack 0
   742  000100                     	ds	32
   743                           
   744                           	psect	cstackBANK1
   745  000120                     __pcstackBANK1:
   746                           	callstack 0
   747  000120                     vfprintf@cfmt:
   748                           	callstack 0
   749                           
   750                           ; 2 bytes @ 0x0
   751  000120                     	ds	2
   752  000122                     ?_printf:
   753                           	callstack 0
   754  000122                     printf@fmt:
   755                           	callstack 0
   756                           
   757                           ; 2 bytes @ 0x2
   758  000122                     	ds	6
   759  000128                     printf@ap:
   760                           	callstack 0
   761                           
   762                           ; 2 bytes @ 0x8
   763  000128                     	ds	2
   764  00012A                     ??_getCurve:
   765                           
   766                           ; 1 bytes @ 0xA
   767  00012A                     	ds	2
   768  00012C                     getCurve@deltaLeft:
   769                           	callstack 0
   770                           
   771                           ; 2 bytes @ 0xC
   772  00012C                     	ds	2
   773  00012E                     getCurve@deltaRight:
   774                           	callstack 0
   775                           
   776                           ; 2 bytes @ 0xE
   777  00012E                     	ds	2
   778                           
   779                           	psect	cstackBANK0
   780  000060                     __pcstackBANK0:
   781                           	callstack 0
   782  000060                     ??_TMR5_Initialize:
   783  000060                     ??_PWM7_LoadDutyValue:
   784  000060                     ??_PWM8_LoadDutyValue:
   785  000060                     ??_PWM5_LoadDutyValue:
   786  000060                     ??_PWM6_LoadDutyValue:
   787  000060                     ??_ADCC_GetSingleConversion:
   788  000060                     ?___awdiv:
   789                           	callstack 0
   790  000060                     ?___aldiv:
   791                           	callstack 0
   792  000060                     ?___xxtofl:
   793                           	callstack 0
   794  000060                     ?___aodiv:
   795                           	callstack 0
   796  000060                     ?___aomod:
   797                           	callstack 0
   798  000060                     ___awdiv@dividend:
   799                           	callstack 0
   800  000060                     fputc@c:
   801                           	callstack 0
   802  000060                     strlen@a:
   803                           	callstack 0
   804  000060                     ___aldiv@dividend:
   805                           	callstack 0
   806  000060                     ___xxtofl@val:
   807                           	callstack 0
   808  000060                     ___aodiv@dividend:
   809                           	callstack 0
   810  000060                     ___aomod@dividend:
   811                           	callstack 0
   812                           
   813                           ; 8 bytes @ 0x0
   814  000060                     	ds	2
   815  000062                     setMotor@motorPower:
   816                           	callstack 0
   817  000062                     ___awdiv@divisor:
   818                           	callstack 0
   819  000062                     fputc@fp:
   820                           	callstack 0
   821                           
   822                           ; 2 bytes @ 0x2
   823  000062                     	ds	2
   824  000064                     ??_setMotor:
   825  000064                     ??_fputc:
   826  000064                     ??___xxtofl:
   827  000064                     ___awdiv@counter:
   828                           	callstack 0
   829  000064                     ___aldiv@divisor:
   830                           	callstack 0
   831                           
   832                           ; 4 bytes @ 0x4
   833  000064                     	ds	1
   834  000065                     ___awdiv@sign:
   835                           	callstack 0
   836                           
   837                           ; 1 bytes @ 0x5
   838  000065                     	ds	1
   839  000066                     ___awdiv@quotient:
   840                           	callstack 0
   841                           
   842                           ; 2 bytes @ 0x6
   843  000066                     	ds	2
   844  000068                     ___aldiv@counter:
   845                           	callstack 0
   846  000068                     ___xxtofl@sign:
   847                           	callstack 0
   848  000068                     setSteering@steering:
   849                           	callstack 0
   850  000068                     ___aodiv@divisor:
   851                           	callstack 0
   852  000068                     ___aomod@divisor:
   853                           	callstack 0
   854                           
   855                           ; 8 bytes @ 0x8
   856  000068                     	ds	1
   857  000069                     ___aldiv@sign:
   858                           	callstack 0
   859  000069                     ___xxtofl@exp:
   860                           	callstack 0
   861  000069                     fputs@s:
   862                           	callstack 0
   863                           
   864                           ; 2 bytes @ 0x9
   865  000069                     	ds	1
   866  00006A                     setSteering@steeringMode:
   867                           	callstack 0
   868  00006A                     ___aldiv@quotient:
   869                           	callstack 0
   870  00006A                     ___xxtofl@arg:
   871                           	callstack 0
   872                           
   873                           ; 4 bytes @ 0xA
   874  00006A                     	ds	1
   875  00006B                     ??_setSteering:
   876  00006B                     fputs@fp:
   877                           	callstack 0
   878                           
   879                           ; 2 bytes @ 0xB
   880  00006B                     	ds	2
   881  00006D                     fputs@c:
   882                           	callstack 0
   883  00006D                     setSteering@steeringF:
   884                           	callstack 0
   885                           
   886                           ; 2 bytes @ 0xD
   887  00006D                     	ds	1
   888  00006E                     ?___flmul:
   889                           	callstack 0
   890  00006E                     actSpeed@speed:
   891                           	callstack 0
   892  00006E                     fputs@i:
   893                           	callstack 0
   894  00006E                     ___flge@ff1:
   895                           	callstack 0
   896  00006E                     ___flmul@b:
   897                           	callstack 0
   898                           
   899                           ; 4 bytes @ 0xE
   900  00006E                     	ds	1
   901  00006F                     setSteering@steeringB:
   902                           	callstack 0
   903                           
   904                           ; 2 bytes @ 0xF
   905  00006F                     	ds	1
   906  000070                     ?_abs:
   907                           	callstack 0
   908  000070                     ?_pad:
   909                           	callstack 0
   910  000070                     ___aodiv@counter:
   911                           	callstack 0
   912  000070                     pad@fp:
   913                           	callstack 0
   914  000070                     abs@a:
   915                           	callstack 0
   916                           
   917                           ; 2 bytes @ 0x10
   918  000070                     	ds	1
   919  000071                     ??_calcSteering:
   920  000071                     ___aodiv@sign:
   921                           	callstack 0
   922                           
   923                           ; 1 bytes @ 0x11
   924  000071                     	ds	1
   925  000072                     ??_abs:
   926  000072                     pad@buf:
   927                           	callstack 0
   928  000072                     ___flge@ff2:
   929                           	callstack 0
   930  000072                     ___flmul@a:
   931                           	callstack 0
   932  000072                     ___aodiv@quotient:
   933                           	callstack 0
   934                           
   935                           ; 8 bytes @ 0x12
   936  000072                     	ds	1
   937  000073                     calcSteering@delta:
   938                           	callstack 0
   939                           
   940                           ; 2 bytes @ 0x13
   941  000073                     	ds	1
   942  000074                     pad@p:
   943                           	callstack 0
   944                           
   945                           ; 2 bytes @ 0x14
   946  000074                     	ds	2
   947  000076                     ??___flmul:
   948  000076                     ??___flge:
   949  000076                     pad@i:
   950                           	callstack 0
   951                           
   952                           ; 2 bytes @ 0x16
   953  000076                     	ds	2
   954  000078                     pad@w:
   955                           	callstack 0
   956                           
   957                           ; 2 bytes @ 0x18
   958  000078                     	ds	2
   959  00007A                     ?_dtoa:
   960                           	callstack 0
   961  00007A                     ___flmul@sign:
   962                           	callstack 0
   963  00007A                     dtoa@fp:
   964                           	callstack 0
   965                           
   966                           ; 2 bytes @ 0x1A
   967  00007A                     	ds	1
   968  00007B                     ___flmul@aexp:
   969                           	callstack 0
   970                           
   971                           ; 1 bytes @ 0x1B
   972  00007B                     	ds	1
   973  00007C                     ___flmul@grs:
   974                           	callstack 0
   975  00007C                     dtoa@d:
   976                           	callstack 0
   977                           
   978                           ; 8 bytes @ 0x1C
   979  00007C                     	ds	4
   980  000080                     ___flmul@bexp:
   981                           	callstack 0
   982                           
   983                           ; 1 bytes @ 0x20
   984  000080                     	ds	1
   985  000081                     ___flmul@prod:
   986                           	callstack 0
   987                           
   988                           ; 4 bytes @ 0x21
   989  000081                     	ds	3
   990  000084                     ??_dtoa:
   991                           
   992                           ; 1 bytes @ 0x24
   993  000084                     	ds	1
   994  000085                     ___flmul@temp:
   995                           	callstack 0
   996                           
   997                           ; 2 bytes @ 0x25
   998  000085                     	ds	2
   999  000087                     ?___fladd:
  1000                           	callstack 0
  1001  000087                     ___fladd@b:
  1002                           	callstack 0
  1003                           
  1004                           ; 4 bytes @ 0x27
  1005  000087                     	ds	4
  1006  00008B                     ___fladd@a:
  1007                           	callstack 0
  1008                           
  1009                           ; 4 bytes @ 0x2B
  1010  00008B                     	ds	1
  1011  00008C                     _dtoa$3453:
  1012                           	callstack 0
  1013                           
  1014                           ; 2 bytes @ 0x2C
  1015  00008C                     	ds	2
  1016  00008E                     dtoa@p:
  1017                           	callstack 0
  1018                           
  1019                           ; 2 bytes @ 0x2E
  1020  00008E                     	ds	1
  1021  00008F                     ??___fladd:
  1022                           
  1023                           ; 1 bytes @ 0x2F
  1024  00008F                     	ds	1
  1025  000090                     dtoa@w:
  1026                           	callstack 0
  1027                           
  1028                           ; 2 bytes @ 0x30
  1029  000090                     	ds	2
  1030  000092                     dtoa@s:
  1031                           	callstack 0
  1032                           
  1033                           ; 2 bytes @ 0x32
  1034  000092                     	ds	1
  1035  000093                     ___fladd@signs:
  1036                           	callstack 0
  1037                           
  1038                           ; 1 bytes @ 0x33
  1039  000093                     	ds	1
  1040  000094                     ___fladd@aexp:
  1041                           	callstack 0
  1042  000094                     dtoa@n:
  1043                           	callstack 0
  1044                           
  1045                           ; 8 bytes @ 0x34
  1046  000094                     	ds	1
  1047  000095                     ___fladd@bexp:
  1048                           	callstack 0
  1049                           
  1050                           ; 1 bytes @ 0x35
  1051  000095                     	ds	1
  1052  000096                     ___fladd@grs:
  1053                           	callstack 0
  1054                           
  1055                           ; 1 bytes @ 0x36
  1056  000096                     	ds	1
  1057  000097                     ?___fltol:
  1058                           	callstack 0
  1059  000097                     ___fltol@f1:
  1060                           	callstack 0
  1061                           
  1062                           ; 4 bytes @ 0x37
  1063  000097                     	ds	4
  1064  00009B                     ??___fltol:
  1065                           
  1066                           ; 1 bytes @ 0x3B
  1067  00009B                     	ds	1
  1068  00009C                     dtoa@i:
  1069                           	callstack 0
  1070                           
  1071                           ; 2 bytes @ 0x3C
  1072  00009C                     	ds	2
  1073  00009E                     ?_vfpfcnvrt:
  1074                           	callstack 0
  1075  00009E                     vfpfcnvrt@fp:
  1076                           	callstack 0
  1077                           
  1078                           ; 2 bytes @ 0x3E
  1079  00009E                     	ds	1
  1080  00009F                     ??_calcSpeed:
  1081  00009F                     ??_calcMotorPow:
  1082                           
  1083                           ; 1 bytes @ 0x3F
  1084  00009F                     	ds	1
  1085  0000A0                     vfpfcnvrt@fmt:
  1086                           	callstack 0
  1087                           
  1088                           ; 2 bytes @ 0x40
  1089  0000A0                     	ds	1
  1090  0000A1                     calcSpeed@speed:
  1091                           	callstack 0
  1092  0000A1                     calcMotorPow@setSpeedDelta:
  1093                           	callstack 0
  1094                           
  1095                           ; 2 bytes @ 0x41
  1096  0000A1                     	ds	1
  1097  0000A2                     vfpfcnvrt@ap:
  1098                           	callstack 0
  1099                           
  1100                           ; 2 bytes @ 0x42
  1101  0000A2                     	ds	1
  1102  0000A3                     calcMotorPow@oldSpeedDelta:
  1103                           	callstack 0
  1104                           
  1105                           ; 2 bytes @ 0x43
  1106  0000A3                     	ds	1
  1107  0000A4                     ??_vfpfcnvrt:
  1108                           
  1109                           ; 1 bytes @ 0x44
  1110  0000A4                     	ds	1
  1111  0000A5                     calcMotorPow@addMPow:
  1112                           	callstack 0
  1113                           
  1114                           ; 1 bytes @ 0x45
  1115  0000A5                     	ds	1
  1116  0000A6                     vfpfcnvrt@ll:
  1117                           	callstack 0
  1118                           
  1119                           ; 8 bytes @ 0x46
  1120  0000A6                     	ds	8
  1121  0000AE                     ?_vfprintf:
  1122                           	callstack 0
  1123  0000AE                     vfprintf@fp:
  1124                           	callstack 0
  1125                           
  1126                           ; 2 bytes @ 0x4E
  1127  0000AE                     	ds	2
  1128  0000B0                     vfprintf@fmt:
  1129                           	callstack 0
  1130                           
  1131                           ; 2 bytes @ 0x50
  1132  0000B0                     	ds	2
  1133  0000B2                     vfprintf@ap:
  1134                           	callstack 0
  1135                           
  1136                           ; 2 bytes @ 0x52
  1137  0000B2                     	ds	2
  1138                           
  1139                           	psect	cstackCOMRAM
  1140  000001                     __pcstackCOMRAM:
  1141                           	callstack 0
  1142  000001                     CCP3_DefaultCallBack@capturedValue:
  1143                           	callstack 0
  1144                           
  1145                           ; 2 bytes @ 0x0
  1146  000001                     	ds	2
  1147  000003                     ??_CCP3_CaptureISR:
  1148                           
  1149                           ; 1 bytes @ 0x2
  1150  000003                     	ds	2
  1151  000005                     CCP3_CaptureISR@module:
  1152                           	callstack 0
  1153                           
  1154                           ; 2 bytes @ 0x4
  1155  000005                     	ds	2
  1156  000007                     CCP4_DefaultCallBack@capturedValue:
  1157                           	callstack 0
  1158                           
  1159                           ; 2 bytes @ 0x6
  1160  000007                     	ds	2
  1161  000009                     ??_CCP4_CaptureISR:
  1162                           
  1163                           ; 1 bytes @ 0x8
  1164  000009                     	ds	2
  1165  00000B                     CCP4_CaptureISR@module:
  1166                           	callstack 0
  1167                           
  1168                           ; 2 bytes @ 0xA
  1169  00000B                     	ds	2
  1170  00000D                     ?_TMR5_ReadTimer:
  1171                           	callstack 0
  1172  00000D                     TMR5_WriteTimer@timerVal:
  1173                           	callstack 0
  1174                           
  1175                           ; 2 bytes @ 0xC
  1176  00000D                     	ds	2
  1177  00000F                     ??_TMR5_ReadTimer:
  1178  00000F                     
  1179                           ; 1 bytes @ 0xE
  1180  00000F                     	ds	2
  1181  000011                     TMR5_ReadTimer@readVal:
  1182                           	callstack 0
  1183                           
  1184                           ; 2 bytes @ 0x10
  1185  000011                     	ds	2
  1186  000013                     TMR5_ReadTimer@readValHigh:
  1187                           	callstack 0
  1188                           
  1189                           ; 1 bytes @ 0x12
  1190  000013                     	ds	1
  1191  000014                     TMR5_ReadTimer@readValLow:
  1192                           	callstack 0
  1193                           
  1194                           ; 1 bytes @ 0x13
  1195  000014                     	ds	1
  1196  000015                     ??_TMR5_GATE_ISR:
  1197                           
  1198                           ; 1 bytes @ 0x14
  1199  000015                     	ds	2
  1200  000017                     ??_UART1_tx_vect_isr:
  1201  000017                     
  1202                           ; 1 bytes @ 0x16
  1203  000017                     	ds	3
  1204  00001A                     ??_UART1_rx_vect_isr:
  1205                           
  1206                           ; 1 bytes @ 0x19
  1207  00001A                     	ds	3
  1208  00001D                     ??_TMR4_ISR:
  1209                           
  1210                           ; 1 bytes @ 0x1C
  1211  00001D                     	ds	3
  1212  000020                     ??_TMR3_Initialize:
  1213  000020                     ?_strlen:
  1214                           	callstack 0
  1215  000020                     ?_ADCC_GetSingleConversion:
  1216                           	callstack 0
  1217  000020                     ?_actSpeed:
  1218                           	callstack 0
  1219  000020                     UART1_Write@txData:
  1220                           	callstack 0
  1221  000020                     INTERRUPT_Initialize@state:
  1222                           	callstack 0
  1223  000020                     ___aomod@counter:
  1224                           	callstack 0
  1225  000020                     ___fltol@sign1:
  1226                           	callstack 0
  1227  000020                     UART1_SetFramingErrorHandler@interruptHandler:
  1228                           	callstack 0
  1229  000020                     UART1_SetOverrunErrorHandler@interruptHandler:
  1230                           	callstack 0
  1231  000020                     UART1_SetErrorHandler@interruptHandler:
  1232                           	callstack 0
  1233  000020                     UART1_SetRxInterruptHandler@InterruptHandler:
  1234                           	callstack 0
  1235  000020                     UART1_SetTxInterruptHandler@InterruptHandler:
  1236                           	callstack 0
  1237  000020                     CCP3_SetCallBack@customCallBack:
  1238                           	callstack 0
  1239  000020                     CCP4_SetCallBack@customCallBack:
  1240                           	callstack 0
  1241  000020                     TMR5_SetGateInterruptHandler@InterruptHandler:
  1242                           	callstack 0
  1243  000020                     TMR4_SetInterruptHandler@InterruptHandler:
  1244                           	callstack 0
  1245  000020                     PWM7_LoadDutyValue@dutyValue:
  1246                           	callstack 0
  1247  000020                     PWM8_LoadDutyValue@dutyValue:
  1248                           	callstack 0
  1249  000020                     PWM5_LoadDutyValue@dutyValue:
  1250                           	callstack 0
  1251  000020                     PWM6_LoadDutyValue@dutyValue:
  1252                           	callstack 0
  1253  000020                     strlen@s:
  1254                           	callstack 0
  1255                           
  1256                           ; 2 bytes @ 0x1F
  1257  000020                     	ds	1
  1258  000021                     putch@txData:
  1259                           	callstack 0
  1260  000021                     ___aomod@sign:
  1261                           	callstack 0
  1262  000021                     ___fltol@exp1:
  1263                           	callstack 0
  1264                           
  1265                           ; 1 bytes @ 0x20
  1266  000021                     	ds	1
  1267  000022                     ??_pad:
  1268  000022                     ADCC_GetSingleConversion@channel:
  1269                           	callstack 0
  1270                           
  1271                           ; 1 bytes @ 0x21
  1272  000022                     	ds	1
  1273  000023                     
  1274                           ; 1 bytes @ 0x22
  1275 ;;
  1276 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1277 ;;
  1278 ;; *************** function _main *****************
  1279 ;; Defined at:
  1280 ;;		line 9 in file "main.c"
  1281 ;; Parameters:    Size  Location     Type
  1282 ;;		None
  1283 ;; Auto vars:     Size  Location     Type
  1284 ;;		None
  1285 ;; Return value:  Size  Location     Type
  1286 ;;                  1    wreg      void 
  1287 ;; Registers used:
  1288 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1289 ;; Tracked objects:
  1290 ;;		On entry : 0/0
  1291 ;;		On exit  : 0/0
  1292 ;;		Unchanged: 0/0
  1293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1298 ;;Total ram usage:        0 bytes
  1299 ;; Hardware stack levels required when called: 19
  1300 ;; This function calls:
  1301 ;;		_SYSTEM_Initialize
  1302 ;;		_TMR4_SetInterruptHandler
  1303 ;;		_loop
  1304 ;; This function is called by:
  1305 ;;		Startup code after reset
  1306 ;; This function uses a non-reentrant model
  1307 ;;
  1308                           
  1309                           	psect	text0
  1310  003EDE                     __ptext0:
  1311                           	callstack 0
  1312  003EDE                     _main:
  1313                           	callstack 12
  1314  003EDE                     
  1315                           ;main.c: 10:     SYSTEM_Initialize();
  1316  003EDE  EC50  F01C         	call	_SYSTEM_Initialize	;wreg free
  1317  003EE2                     
  1318                           ;main.c: 11:     (INTCON0bits.GIEH = 1);
  1319  003EE2  8ED2               	bsf	210,7,c	;volatile
  1320  003EE4                     
  1321                           ;main.c: 12:     (INTCON0bits.GIEL = 1);
  1322  003EE4  8CD2               	bsf	210,6,c	;volatile
  1323                           
  1324                           ;main.c: 13:     TMR4_SetInterruptHandler(TMR4_10msISR);
  1325  003EE6  0E28               	movlw	low _TMR4_10msISR
  1326  003EE8  6E20               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
  1327  003EEA  0E40               	movlw	high _TMR4_10msISR
  1328  003EEC  6E21               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
  1329  003EEE  EC02  F020         	call	_TMR4_SetInterruptHandler	;wreg free
  1330  003EF2                     l6594:
  1331                           
  1332                           ;main.c: 16:         loop();
  1333  003EF2  EC31  F01A         	call	_loop	;wreg free
  1334  003EF6  EF79  F01F         	goto	l6594
  1335  003EFA  EF57  F000         	goto	start
  1336  003EFE                     __end_of_main:
  1337                           	callstack 0
  1338                           
  1339 ;; *************** function _loop *****************
  1340 ;; Defined at:
  1341 ;;		line 20 in file "main.c"
  1342 ;; Parameters:    Size  Location     Type
  1343 ;;		None
  1344 ;; Auto vars:     Size  Location     Type
  1345 ;;		None
  1346 ;; Return value:  Size  Location     Type
  1347 ;;                  1    wreg      void 
  1348 ;; Registers used:
  1349 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1350 ;; Tracked objects:
  1351 ;;		On entry : 0/0
  1352 ;;		On exit  : 0/0
  1353 ;;		Unchanged: 0/0
  1354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1359 ;;Total ram usage:        0 bytes
  1360 ;; Hardware stack levels used: 1
  1361 ;; Hardware stack levels required when called: 18
  1362 ;; This function calls:
  1363 ;;		___flge
  1364 ;;		___xxtofl
  1365 ;;		_calcMotorPow
  1366 ;;		_calcSpeed
  1367 ;;		_calcSteering
  1368 ;;		_getBatteryVoltage
  1369 ;;		_getCurve
  1370 ;;		_getReverse
  1371 ;; This function is called by:
  1372 ;;		_main
  1373 ;; This function uses a non-reentrant model
  1374 ;;
  1375                           
  1376                           	psect	text1
  1377  003462                     __ptext1:
  1378                           	callstack 0
  1379  003462                     _loop:
  1380                           	callstack 12
  1381  003462                     l1212:
  1382  003462                     
  1383                           ;main.c: 26:         getBatteryVoltage();
  1384  003462  EC38  F01F         	call	_getBatteryVoltage	;wreg free
  1385  003466                     
  1386                           ;main.c: 27:     }while(BatteryVolt < ((6) * 409.6));
  1387  003466  C0F0  F060         	movff	_BatteryVolt,___xxtofl@val
  1388  00346A  C0F1  F061         	movff	_BatteryVolt+1,___xxtofl@val+1
  1389  00346E  0100               	movlb	0	; () banked
  1390  003470  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
  1391  003472  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
  1392  003474  0E00               	movlw	0
  1393  003476  EC3B  F012         	call	___xxtofl
  1394  00347A  C060  F06E         	movff	?___xxtofl,___flge@ff1
  1395  00347E  C061  F06F         	movff	?___xxtofl+1,___flge@ff1+1
  1396  003482  C062  F070         	movff	?___xxtofl+2,___flge@ff1+2
  1397  003486  C063  F071         	movff	?___xxtofl+3,___flge@ff1+3
  1398  00348A  0E9A               	movlw	154
  1399  00348C  0100               	movlb	0	; () banked
  1400  00348E  6F72               	movwf	___flge@ff2& (0+255),b
  1401  003490  0E99               	movlw	153
  1402  003492  6F73               	movwf	(___flge@ff2+1)& (0+255),b
  1403  003494  0E19               	movlw	25
  1404  003496  6F74               	movwf	(___flge@ff2+2)& (0+255),b
  1405  003498  0E45               	movlw	69
  1406  00349A  6F75               	movwf	(___flge@ff2+3)& (0+255),b
  1407  00349C  ECC5  F016         	call	___flge	;wreg free
  1408  0034A0  0100               	movlb	0	; () banked
  1409  0034A2  A0D8               	btfss	status,0,c
  1410  0034A4  EF56  F01A         	goto	u5961
  1411  0034A8  EF58  F01A         	goto	u5960
  1412  0034AC                     u5961:
  1413  0034AC  EF31  F01A         	goto	l1212
  1414  0034B0                     u5960:
  1415  0034B0                     
  1416                           ; BSR set to: 0
  1417                           ;main.c: 29:     oldDistLeft = distLeft;
  1418  0034B0  C0E8  F0E4         	movff	_distLeft,_oldDistLeft	;volatile
  1419  0034B4  C0E9  F0E5         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  1420                           
  1421                           ;main.c: 30:     oldDistRight = distRight;
  1422  0034B8  C0E6  F0E2         	movff	_distRight,_oldDistRight	;volatile
  1423  0034BC  C0E7  F0E3         	movff	_distRight+1,_oldDistRight+1	;volatile
  1424  0034C0                     l6574:
  1425  0034C0  0100               	movlb	0	; () banked
  1426  0034C2  51EB               	movf	_cycle10ms& (0+255),w,b
  1427  0034C4  B4D8               	btfsc	status,2,c
  1428  0034C6  EF67  F01A         	goto	u5971
  1429  0034CA  EF69  F01A         	goto	u5970
  1430  0034CE                     u5971:
  1431  0034CE  EF60  F01A         	goto	l6574
  1432  0034D2                     u5970:
  1433  0034D2                     
  1434                           ; BSR set to: 0
  1435                           ;main.c: 34:         cycle10ms = 0;
  1436  0034D2  0E00               	movlw	0
  1437  0034D4  6FEB               	movwf	_cycle10ms& (0+255),b
  1438  0034D6                     
  1439                           ; BSR set to: 0
  1440                           ;main.c: 49:         getCurve();
  1441  0034D6  EC36  F00E         	call	_getCurve	;wreg free
  1442  0034DA                     
  1443                           ;main.c: 50:         getReverse();
  1444  0034DA  EC78  F01A         	call	_getReverse	;wreg free
  1445  0034DE                     
  1446                           ;main.c: 52:         calcSteering();
  1447  0034DE  EC27  F015         	call	_calcSteering	;wreg free
  1448  0034E2                     
  1449                           ;main.c: 53:         calcSpeed();
  1450  0034E2  EC50  F011         	call	_calcSpeed	;wreg free
  1451  0034E6                     
  1452                           ;main.c: 54:         calcMotorPow();
  1453  0034E6  EC8F  F014         	call	_calcMotorPow	;wreg free
  1454  0034EA  EF60  F01A         	goto	l6574
  1455  0034EE  0012               	return		;funcret
  1456  0034F0                     __end_of_loop:
  1457                           	callstack 0
  1458                           
  1459 ;; *************** function _getReverse *****************
  1460 ;; Defined at:
  1461 ;;		line 146 in file "main.c"
  1462 ;; Parameters:    Size  Location     Type
  1463 ;;		None
  1464 ;; Auto vars:     Size  Location     Type
  1465 ;;		None
  1466 ;; Return value:  Size  Location     Type
  1467 ;;                  1    wreg      void 
  1468 ;; Registers used:
  1469 ;;		wreg, status,2, status,0
  1470 ;; Tracked objects:
  1471 ;;		On entry : 0/0
  1472 ;;		On exit  : 0/0
  1473 ;;		Unchanged: 0/0
  1474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1479 ;;Total ram usage:        0 bytes
  1480 ;; Hardware stack levels used: 1
  1481 ;; Hardware stack levels required when called: 8
  1482 ;; This function calls:
  1483 ;;		Nothing
  1484 ;; This function is called by:
  1485 ;;		_loop
  1486 ;; This function uses a non-reentrant model
  1487 ;;
  1488                           
  1489                           	psect	text2
  1490  0034F0                     __ptext2:
  1491                           	callstack 0
  1492  0034F0                     _getReverse:
  1493                           	callstack 21
  1494  0034F0                     
  1495                           ;main.c: 147:     if(distFront < (10)){
  1496  0034F0  0100               	movlb	0	; () banked
  1497  0034F2  51EF               	movf	(_distFront+1)& (0+255),w,b	;volatile
  1498  0034F4  E107               	bnz	u3751
  1499  0034F6  0E0A               	movlw	10
  1500  0034F8  5DEE               	subwf	_distFront& (0+255),w,b	;volatile
  1501  0034FA  B0D8               	btfsc	status,0,c
  1502  0034FC  EF82  F01A         	goto	u3751
  1503  003500  EF84  F01A         	goto	u3750
  1504  003504                     u3751:
  1505  003504  EF87  F01A         	goto	l5068
  1506  003508                     u3750:
  1507  003508                     
  1508                           ; BSR set to: 0
  1509                           ;main.c: 148:         ++reverseCount;
  1510  003508  2A2D               	incf	_reverseCount^0,f,c
  1511                           
  1512                           ;main.c: 149:     }else if(driveMode != Backwards){
  1513  00350A  EF92  F01A         	goto	l5072
  1514  00350E                     l5068:
  1515                           
  1516                           ; BSR set to: 0
  1517  00350E  0E02               	movlw	2
  1518  003510  19ED               	xorwf	_driveMode& (0+255),w,b
  1519  003512  B4D8               	btfsc	status,2,c
  1520  003514  EF8E  F01A         	goto	u3761
  1521  003518  EF90  F01A         	goto	u3760
  1522  00351C                     u3761:
  1523  00351C  EF92  F01A         	goto	l5072
  1524  003520                     u3760:
  1525  003520                     
  1526                           ; BSR set to: 0
  1527                           ;main.c: 150:         reverseCount = 0;
  1528  003520  0E00               	movlw	0
  1529  003522  6E2D               	movwf	_reverseCount^0,c
  1530  003524                     l5072:
  1531                           
  1532                           ; BSR set to: 0
  1533                           ;main.c: 153:     if(reverseCount > (100)){
  1534  003524  0E64               	movlw	100
  1535  003526  642D               	cpfsgt	_reverseCount^0,c
  1536  003528  EF98  F01A         	goto	u3771
  1537  00352C  EF9A  F01A         	goto	u3770
  1538  003530                     u3771:
  1539  003530  EFAB  F01A         	goto	l1264
  1540  003534                     u3770:
  1541  003534                     
  1542                           ; BSR set to: 0
  1543                           ;main.c: 154:         driveMode = Backwards;
  1544  003534  0E02               	movlw	2
  1545  003536  6FED               	movwf	_driveMode& (0+255),b
  1546  003538                     
  1547                           ; BSR set to: 0
  1548                           ;main.c: 155:         if(distFront > (50)){
  1549  003538  51EF               	movf	(_distFront+1)& (0+255),w,b	;volatile
  1550  00353A  E109               	bnz	u3780
  1551  00353C  0E33               	movlw	51
  1552  00353E  5DEE               	subwf	_distFront& (0+255),w,b	;volatile
  1553  003540  A0D8               	btfss	status,0,c
  1554  003542  EFA5  F01A         	goto	u3781
  1555  003546  EFA7  F01A         	goto	u3780
  1556  00354A                     u3781:
  1557  00354A  EFAB  F01A         	goto	l1264
  1558  00354E                     u3780:
  1559  00354E                     
  1560                           ; BSR set to: 0
  1561                           ;main.c: 156:              driveMode = Straight;
  1562  00354E  0E00               	movlw	0
  1563  003550  6FED               	movwf	_driveMode& (0+255),b
  1564                           
  1565                           ;main.c: 157:              reverseCount = 0;
  1566  003552  0E00               	movlw	0
  1567  003554  6E2D               	movwf	_reverseCount^0,c
  1568  003556                     l1264:
  1569                           
  1570                           ; BSR set to: 0
  1571  003556  0012               	return		;funcret
  1572  003558                     __end_of_getReverse:
  1573                           	callstack 0
  1574                           
  1575 ;; *************** function _getCurve *****************
  1576 ;; Defined at:
  1577 ;;		line 79 in file "main.c"
  1578 ;; Parameters:    Size  Location     Type
  1579 ;;		None
  1580 ;; Auto vars:     Size  Location     Type
  1581 ;;  deltaRight      2   14[BANK1 ] short 
  1582 ;;  deltaLeft       2   12[BANK1 ] short 
  1583 ;; Return value:  Size  Location     Type
  1584 ;;                  1    wreg      void 
  1585 ;; Registers used:
  1586 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1587 ;; Tracked objects:
  1588 ;;		On entry : 0/0
  1589 ;;		On exit  : 0/0
  1590 ;;		Unchanged: 0/0
  1591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1593 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1594 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1595 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1596 ;;Total ram usage:        6 bytes
  1597 ;; Hardware stack levels used: 1
  1598 ;; Hardware stack levels required when called: 17
  1599 ;; This function calls:
  1600 ;;		_printf
  1601 ;; This function is called by:
  1602 ;;		_loop
  1603 ;; This function uses a non-reentrant model
  1604 ;;
  1605                           
  1606                           	psect	text3
  1607  001C6C                     __ptext3:
  1608                           	callstack 0
  1609  001C6C                     _getCurve:
  1610                           	callstack 12
  1611  001C6C                     
  1612                           ;main.c: 80:     int16_t deltaLeft;;main.c: 81:     int16_t deltaRight;;main.c: 83:     
      +                          switch (curveMode){
  1613  001C6C  EF2E  F00F         	goto	l6406
  1614  001C70                     l6352:
  1615                           
  1616                           ; BSR set to: 1
  1617                           ;main.c: 85:             deltaLeft = (int16_t)(distLeft - oldDistLeft);
  1618  001C70  0100               	movlb	0	; () banked
  1619  001C72  51E4               	movf	_oldDistLeft& (0+255),w,b
  1620  001C74  5DE8               	subwf	_distLeft& (0+255),w,b	;volatile
  1621  001C76  0101               	movlb	1	; () banked
  1622  001C78  6F2C               	movwf	getCurve@deltaLeft& (0+255),b
  1623  001C7A  0100               	movlb	0	; () banked
  1624  001C7C  51E5               	movf	(_oldDistLeft+1)& (0+255),w,b
  1625  001C7E  59E9               	subwfb	(_distLeft+1)& (0+255),w,b	;volatile
  1626  001C80  0101               	movlb	1	; () banked
  1627  001C82  6F2D               	movwf	(getCurve@deltaLeft+1)& (0+255),b
  1628                           
  1629                           ;main.c: 86:             deltaRight = (int16_t)(distRight - oldDistRight);
  1630  001C84  0100               	movlb	0	; () banked
  1631  001C86  51E2               	movf	_oldDistRight& (0+255),w,b
  1632  001C88  5DE6               	subwf	_distRight& (0+255),w,b	;volatile
  1633  001C8A  0101               	movlb	1	; () banked
  1634  001C8C  6F2E               	movwf	getCurve@deltaRight& (0+255),b
  1635  001C8E  0100               	movlb	0	; () banked
  1636  001C90  51E3               	movf	(_oldDistRight+1)& (0+255),w,b
  1637  001C92  59E7               	subwfb	(_distRight+1)& (0+255),w,b	;volatile
  1638  001C94  0101               	movlb	1	; () banked
  1639  001C96  6F2F               	movwf	(getCurve@deltaRight+1)& (0+255),b
  1640                           
  1641                           ;main.c: 89:             if(deltaLeft > (50)){
  1642  001C98  BF2D               	btfsc	(getCurve@deltaLeft+1)& (0+255),7,b
  1643  001C9A  EF58  F00E         	goto	u5681
  1644  001C9E  512D               	movf	(getCurve@deltaLeft+1)& (0+255),w,b
  1645  001CA0  E109               	bnz	u5680
  1646  001CA2  0E33               	movlw	51
  1647  001CA4  5D2C               	subwf	getCurve@deltaLeft& (0+255),w,b
  1648  001CA6  A0D8               	btfss	status,0,c
  1649  001CA8  EF58  F00E         	goto	u5681
  1650  001CAC  EF5A  F00E         	goto	u5680
  1651  001CB0                     u5681:
  1652  001CB0  EF79  F00E         	goto	l6360
  1653  001CB4                     u5680:
  1654  001CB4                     
  1655                           ; BSR set to: 1
  1656                           ;main.c: 90:                 delay = 0;
  1657  001CB4  0E00               	movlw	0
  1658  001CB6  0100               	movlb	0	; () banked
  1659  001CB8  6FEA               	movwf	_delay& (0+255),b
  1660                           
  1661                           ;main.c: 91:                 curveMode = BeforeCurve;
  1662  001CBA  0E01               	movlw	1
  1663  001CBC  6FEC               	movwf	_curveMode& (0+255),b
  1664                           
  1665                           ;main.c: 92:                 driveMode = CurveLeft;
  1666  001CBE  0E03               	movlw	3
  1667  001CC0  6FED               	movwf	_driveMode& (0+255),b
  1668  001CC2                     
  1669                           ; BSR set to: 0
  1670                           ;main.c: 93:                 printf("Out | dL= %d | dR= %d", deltaLeft, deltaRight);
  1671  001CC2  0E01               	movlw	low STR_2
  1672  001CC4  0101               	movlb	1	; () banked
  1673  001CC6  6F22               	movwf	printf@fmt& (0+255),b
  1674  001CC8  0E10               	movlw	high STR_2
  1675  001CCA  6F23               	movwf	(printf@fmt+1)& (0+255),b
  1676  001CCC  C12C  F124         	movff	getCurve@deltaLeft,?_printf+2
  1677  001CD0  C12D  F125         	movff	getCurve@deltaLeft+1,?_printf+3
  1678  001CD4  C12E  F126         	movff	getCurve@deltaRight,?_printf+4
  1679  001CD8  C12F  F127         	movff	getCurve@deltaRight+1,?_printf+5
  1680  001CDC  EC0F  F01F         	call	_printf	;wreg free
  1681  001CE0                     
  1682                           ;main.c: 94:                 printf("   CurveLeft");
  1683  001CE0  0E25               	movlw	low STR_3
  1684  001CE2  0101               	movlb	1	; () banked
  1685  001CE4  6F22               	movwf	printf@fmt& (0+255),b
  1686  001CE6  0E10               	movlw	high STR_3
  1687  001CE8  6F23               	movwf	(printf@fmt+1)& (0+255),b
  1688  001CEA  EC0F  F01F         	call	_printf	;wreg free
  1689                           
  1690                           ;main.c: 95:             } else if(deltaRight > (50)){
  1691  001CEE  EF4D  F00F         	goto	l1240
  1692  001CF2                     l6360:
  1693                           
  1694                           ; BSR set to: 1
  1695  001CF2  BF2F               	btfsc	(getCurve@deltaRight+1)& (0+255),7,b
  1696  001CF4  EF85  F00E         	goto	u5691
  1697  001CF8  512F               	movf	(getCurve@deltaRight+1)& (0+255),w,b
  1698  001CFA  E109               	bnz	u5690
  1699  001CFC  0E33               	movlw	51
  1700  001CFE  5D2E               	subwf	getCurve@deltaRight& (0+255),w,b
  1701  001D00  A0D8               	btfss	status,0,c
  1702  001D02  EF85  F00E         	goto	u5691
  1703  001D06  EF87  F00E         	goto	u5690
  1704  001D0A                     u5691:
  1705  001D0A  EF4D  F00F         	goto	l1240
  1706  001D0E                     u5690:
  1707  001D0E                     
  1708                           ; BSR set to: 1
  1709                           ;main.c: 96:                 delay = 0;
  1710  001D0E  0E00               	movlw	0
  1711  001D10  0100               	movlb	0	; () banked
  1712  001D12  6FEA               	movwf	_delay& (0+255),b
  1713                           
  1714                           ;main.c: 97:                 curveMode = BeforeCurve;
  1715  001D14  0E01               	movlw	1
  1716  001D16  6FEC               	movwf	_curveMode& (0+255),b
  1717                           
  1718                           ;main.c: 98:                 driveMode = CurveRight;
  1719  001D18  0E04               	movlw	4
  1720  001D1A  6FED               	movwf	_driveMode& (0+255),b
  1721  001D1C                     
  1722                           ; BSR set to: 0
  1723                           ;main.c: 99:                 printf("Out | dL= %d | dR= %d", deltaLeft, deltaRight);
  1724  001D1C  0E01               	movlw	low STR_2
  1725  001D1E  0101               	movlb	1	; () banked
  1726  001D20  6F22               	movwf	printf@fmt& (0+255),b
  1727  001D22  0E10               	movlw	high STR_2
  1728  001D24  6F23               	movwf	(printf@fmt+1)& (0+255),b
  1729  001D26  C12C  F124         	movff	getCurve@deltaLeft,?_printf+2
  1730  001D2A  C12D  F125         	movff	getCurve@deltaLeft+1,?_printf+3
  1731  001D2E  C12E  F126         	movff	getCurve@deltaRight,?_printf+4
  1732  001D32  C12F  F127         	movff	getCurve@deltaRight+1,?_printf+5
  1733  001D36  EC0F  F01F         	call	_printf	;wreg free
  1734  001D3A                     
  1735                           ;main.c: 100:                 printf("   CurveRight");
  1736  001D3A  0E17               	movlw	low STR_5
  1737  001D3C  0101               	movlb	1	; () banked
  1738  001D3E  6F22               	movwf	printf@fmt& (0+255),b
  1739  001D40  0E10               	movlw	high STR_5
  1740  001D42  6F23               	movwf	(printf@fmt+1)& (0+255),b
  1741  001D44  EC0F  F01F         	call	_printf	;wreg free
  1742  001D48  EF4D  F00F         	goto	l1240
  1743  001D4C                     l6368:
  1744                           
  1745                           ; BSR set to: 1
  1746                           ;main.c: 106:             if(delay > (75)){
  1747  001D4C  0E4B               	movlw	75
  1748  001D4E  0100               	movlb	0	; () banked
  1749  001D50  65EA               	cpfsgt	_delay& (0+255),b
  1750  001D52  EFAD  F00E         	goto	u5701
  1751  001D56  EFAF  F00E         	goto	u5700
  1752  001D5A                     u5701:
  1753  001D5A  EFBC  F00E         	goto	l6374
  1754  001D5E                     u5700:
  1755  001D5E                     
  1756                           ; BSR set to: 0
  1757                           ;main.c: 107:                 delay = 0;
  1758  001D5E  0E00               	movlw	0
  1759  001D60  6FEA               	movwf	_delay& (0+255),b
  1760                           
  1761                           ;main.c: 108:                 curveMode = InCurve;
  1762  001D62  0E02               	movlw	2
  1763  001D64  6FEC               	movwf	_curveMode& (0+255),b
  1764  001D66                     
  1765                           ; BSR set to: 0
  1766                           ;main.c: 109:                 printf("InCurve\n");
  1767  001D66  0E69               	movlw	low STR_6
  1768  001D68  0101               	movlb	1	; () banked
  1769  001D6A  6F22               	movwf	printf@fmt& (0+255),b
  1770  001D6C  0E10               	movlw	high STR_6
  1771  001D6E  6F23               	movwf	(printf@fmt+1)& (0+255),b
  1772  001D70  EC0F  F01F         	call	_printf	;wreg free
  1773                           
  1774                           ;main.c: 110:             } else {
  1775  001D74  EF4D  F00F         	goto	l1240
  1776  001D78                     l6374:
  1777                           
  1778                           ; BSR set to: 0
  1779                           ;main.c: 111:                 delay++;
  1780  001D78  2BEA               	incf	_delay& (0+255),f,b
  1781  001D7A  EF4D  F00F         	goto	l1240
  1782  001D7E                     l6376:
  1783                           
  1784                           ; BSR set to: 1
  1785                           ;main.c: 115:             if(delay > (50)){
  1786  001D7E  0E32               	movlw	50
  1787  001D80  0100               	movlb	0	; () banked
  1788  001D82  65EA               	cpfsgt	_delay& (0+255),b
  1789  001D84  EFC6  F00E         	goto	u5711
  1790  001D88  EFC8  F00E         	goto	u5710
  1791  001D8C                     u5711:
  1792  001D8C  EFBC  F00E         	goto	l6374
  1793  001D90                     u5710:
  1794  001D90                     
  1795                           ; BSR set to: 0
  1796                           ;main.c: 116:                 if(driveMode == CurveLeft){
  1797  001D90  0E03               	movlw	3
  1798  001D92  19ED               	xorwf	_driveMode& (0+255),w,b
  1799  001D94  A4D8               	btfss	status,2,c
  1800  001D96  EFCF  F00E         	goto	u5721
  1801  001D9A  EFD1  F00E         	goto	u5720
  1802  001D9E                     u5721:
  1803  001D9E  EFDE  F00E         	goto	l6382
  1804  001DA2                     u5720:
  1805  001DA2                     
  1806                           ; BSR set to: 0
  1807                           ;main.c: 117:                     printf("distL= %d\n", distLeft);
  1808  001DA2  0E49               	movlw	low STR_7
  1809  001DA4  0101               	movlb	1	; () banked
  1810  001DA6  6F22               	movwf	printf@fmt& (0+255),b
  1811  001DA8  0E10               	movlw	high STR_7
  1812  001DAA  6F23               	movwf	(printf@fmt+1)& (0+255),b
  1813  001DAC  C0E8  F124         	movff	_distLeft,?_printf+2	;volatile
  1814  001DB0  C0E9  F125         	movff	_distLeft+1,?_printf+3	;volatile
  1815  001DB4  EC0F  F01F         	call	_printf	;wreg free
  1816                           
  1817                           ;main.c: 118:                 } else if(driveMode == CurveLeft){
  1818  001DB8  EFF2  F00E         	goto	l6386
  1819  001DBC                     l6382:
  1820                           
  1821                           ; BSR set to: 0
  1822  001DBC  0E03               	movlw	3
  1823  001DBE  19ED               	xorwf	_driveMode& (0+255),w,b
  1824  001DC0  A4D8               	btfss	status,2,c
  1825  001DC2  EFE5  F00E         	goto	u5731
  1826  001DC6  EFE7  F00E         	goto	u5730
  1827  001DCA                     u5731:
  1828  001DCA  EFF2  F00E         	goto	l6386
  1829  001DCE                     u5730:
  1830  001DCE                     
  1831                           ; BSR set to: 0
  1832                           ;main.c: 119:                     printf("distR= %d\n", distRight);
  1833  001DCE  0E54               	movlw	low STR_8
  1834  001DD0  0101               	movlb	1	; () banked
  1835  001DD2  6F22               	movwf	printf@fmt& (0+255),b
  1836  001DD4  0E10               	movlw	high STR_8
  1837  001DD6  6F23               	movwf	(printf@fmt+1)& (0+255),b
  1838  001DD8  C0E6  F124         	movff	_distRight,?_printf+2	;volatile
  1839  001DDC  C0E7  F125         	movff	_distRight+1,?_printf+3	;volatile
  1840  001DE0  EC0F  F01F         	call	_printf	;wreg free
  1841  001DE4                     l6386:
  1842                           
  1843                           ;main.c: 122:                 if(distLeft < (40) || distRight < (40)){
  1844  001DE4  0100               	movlb	0	; () banked
  1845  001DE6  51E9               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  1846  001DE8  E109               	bnz	u5740
  1847  001DEA  0E28               	movlw	40
  1848  001DEC  5DE8               	subwf	_distLeft& (0+255),w,b	;volatile
  1849  001DEE  A0D8               	btfss	status,0,c
  1850  001DF0  EFFC  F00E         	goto	u5741
  1851  001DF4  EFFE  F00E         	goto	u5740
  1852  001DF8                     u5741:
  1853  001DF8  EF09  F00F         	goto	l6390
  1854  001DFC                     u5740:
  1855  001DFC                     
  1856                           ; BSR set to: 0
  1857  001DFC  51E7               	movf	(_distRight+1)& (0+255),w,b	;volatile
  1858  001DFE  E107               	bnz	u5751
  1859  001E00  0E28               	movlw	40
  1860  001E02  5DE6               	subwf	_distRight& (0+255),w,b	;volatile
  1861  001E04  B0D8               	btfsc	status,0,c
  1862  001E06  EF07  F00F         	goto	u5751
  1863  001E0A  EF09  F00F         	goto	u5750
  1864  001E0E                     u5751:
  1865  001E0E  EF4D  F00F         	goto	l1240
  1866  001E12                     u5750:
  1867  001E12                     l6390:
  1868                           
  1869                           ; BSR set to: 0
  1870                           ;main.c: 123:                     delay = 0;
  1871  001E12  0E00               	movlw	0
  1872  001E14  6FEA               	movwf	_delay& (0+255),b
  1873                           
  1874                           ;main.c: 124:                     curveMode = AfterCurve;
  1875  001E16  0E03               	movlw	3
  1876  001E18  6FEC               	movwf	_curveMode& (0+255),b
  1877                           
  1878                           ;main.c: 125:                     driveMode = Straight;
  1879  001E1A  0E00               	movlw	0
  1880  001E1C  6FED               	movwf	_driveMode& (0+255),b
  1881  001E1E                     
  1882                           ; BSR set to: 0
  1883                           ;main.c: 126:                     printf("AfterCurve\n");
  1884  001E1E  0E32               	movlw	low STR_9
  1885  001E20  0101               	movlb	1	; () banked
  1886  001E22  6F22               	movwf	printf@fmt& (0+255),b
  1887  001E24  0E10               	movlw	high STR_9
  1888  001E26  6F23               	movwf	(printf@fmt+1)& (0+255),b
  1889  001E28  EC0F  F01F         	call	_printf	;wreg free
  1890  001E2C  EF4D  F00F         	goto	l1240
  1891  001E30                     l6396:
  1892                           
  1893                           ; BSR set to: 1
  1894                           ;main.c: 133:             if(delay > (100)){
  1895  001E30  0E64               	movlw	100
  1896  001E32  0100               	movlb	0	; () banked
  1897  001E34  65EA               	cpfsgt	_delay& (0+255),b
  1898  001E36  EF1F  F00F         	goto	u5761
  1899  001E3A  EF21  F00F         	goto	u5760
  1900  001E3E                     u5761:
  1901  001E3E  EFBC  F00E         	goto	l6374
  1902  001E42                     u5760:
  1903  001E42                     
  1904                           ; BSR set to: 0
  1905                           ;main.c: 134:                 delay = 0;
  1906  001E42  0E00               	movlw	0
  1907  001E44  6FEA               	movwf	_delay& (0+255),b
  1908                           
  1909                           ;main.c: 135:                 curveMode = OutCurve;
  1910  001E46  0E00               	movlw	0
  1911  001E48  6FEC               	movwf	_curveMode& (0+255),b
  1912  001E4A                     
  1913                           ; BSR set to: 0
  1914                           ;main.c: 136:                 printf("OutCurve\n");
  1915  001E4A  0E5F               	movlw	low STR_10
  1916  001E4C  0101               	movlb	1	; () banked
  1917  001E4E  6F22               	movwf	printf@fmt& (0+255),b
  1918  001E50  0E10               	movlw	high STR_10
  1919  001E52  6F23               	movwf	(printf@fmt+1)& (0+255),b
  1920  001E54  EC0F  F01F         	call	_printf	;wreg free
  1921                           
  1922                           ;main.c: 137:             } else {
  1923  001E58  EF4D  F00F         	goto	l1240
  1924  001E5C                     l6406:
  1925  001E5C  0100               	movlb	0	; () banked
  1926  001E5E  51EC               	movf	_curveMode& (0+255),w,b
  1927  001E60  0101               	movlb	1	; () banked
  1928  001E62  6F2A               	movwf	??_getCurve& (0+255),b
  1929  001E64  6B2B               	clrf	(??_getCurve+1)& (0+255),b
  1930                           
  1931                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1932                           ; Switch size 1, requested type "simple"
  1933                           ; Number of cases is 1, Range of values is 0 to 0
  1934                           ; switch strategies available:
  1935                           ; Name         Instructions Cycles
  1936                           ; simple_byte            4     3 (average)
  1937                           ;	Chosen strategy is simple_byte
  1938  001E66  512B               	movf	(??_getCurve+1)& (0+255),w,b
  1939  001E68  0A00               	xorlw	0	; case 0
  1940  001E6A  B4D8               	btfsc	status,2,c
  1941  001E6C  EF3A  F00F         	goto	l6676
  1942  001E70  EF4D  F00F         	goto	l1240
  1943  001E74                     l6676:
  1944                           
  1945                           ; BSR set to: 1
  1946                           ; Switch size 1, requested type "simple"
  1947                           ; Number of cases is 4, Range of values is 0 to 3
  1948                           ; switch strategies available:
  1949                           ; Name         Instructions Cycles
  1950                           ; simple_byte           13     7 (average)
  1951                           ;	Chosen strategy is simple_byte
  1952  001E74  512A               	movf	??_getCurve& (0+255),w,b
  1953  001E76  0A00               	xorlw	0	; case 0
  1954  001E78  B4D8               	btfsc	status,2,c
  1955  001E7A  EF38  F00E         	goto	l6352
  1956  001E7E  0A01               	xorlw	1	; case 1
  1957  001E80  B4D8               	btfsc	status,2,c
  1958  001E82  EFA6  F00E         	goto	l6368
  1959  001E86  0A03               	xorlw	3	; case 2
  1960  001E88  B4D8               	btfsc	status,2,c
  1961  001E8A  EFBF  F00E         	goto	l6376
  1962  001E8E  0A01               	xorlw	1	; case 3
  1963  001E90  B4D8               	btfsc	status,2,c
  1964  001E92  EF18  F00F         	goto	l6396
  1965  001E96  EF4D  F00F         	goto	l1240
  1966  001E9A                     l1240:
  1967                           
  1968                           ;main.c: 142:     oldDistLeft = distLeft;
  1969  001E9A  C0E8  F0E4         	movff	_distLeft,_oldDistLeft	;volatile
  1970  001E9E  C0E9  F0E5         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  1971                           
  1972                           ;main.c: 143:     oldDistRight = distRight;
  1973  001EA2  C0E6  F0E2         	movff	_distRight,_oldDistRight	;volatile
  1974  001EA6  C0E7  F0E3         	movff	_distRight+1,_oldDistRight+1	;volatile
  1975  001EAA  0012               	return		;funcret
  1976  001EAC                     __end_of_getCurve:
  1977                           	callstack 0
  1978                           
  1979 ;; *************** function _getBatteryVoltage *****************
  1980 ;; Defined at:
  1981 ;;		line 74 in file "main.c"
  1982 ;; Parameters:    Size  Location     Type
  1983 ;;		None
  1984 ;; Auto vars:     Size  Location     Type
  1985 ;;		None
  1986 ;; Return value:  Size  Location     Type
  1987 ;;                  1    wreg      void 
  1988 ;; Registers used:
  1989 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1990 ;; Tracked objects:
  1991 ;;		On entry : 0/0
  1992 ;;		On exit  : 0/0
  1993 ;;		Unchanged: 0/0
  1994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1999 ;;Total ram usage:        0 bytes
  2000 ;; Hardware stack levels used: 1
  2001 ;; Hardware stack levels required when called: 17
  2002 ;; This function calls:
  2003 ;;		_ADCC_GetSingleConversion
  2004 ;;		_printf
  2005 ;; This function is called by:
  2006 ;;		_loop
  2007 ;; This function uses a non-reentrant model
  2008 ;;
  2009                           
  2010                           	psect	text4
  2011  003E70                     __ptext4:
  2012                           	callstack 0
  2013  003E70                     _getBatteryVoltage:
  2014                           	callstack 12
  2015  003E70                     
  2016                           ;main.c: 75:     BatteryVolt = ADCC_GetSingleConversion(aiBatt);
  2017  003E70  0E22               	movlw	34
  2018  003E72  EC69  F01D         	call	_ADCC_GetSingleConversion
  2019  003E76  C020  F0F0         	movff	?_ADCC_GetSingleConversion,_BatteryVolt
  2020  003E7A  C021  F0F1         	movff	?_ADCC_GetSingleConversion+1,_BatteryVolt+1
  2021  003E7E                     
  2022                           ;main.c: 76:     printf("BVolt: %d\n", BatteryVolt);
  2023  003E7E  0E3E               	movlw	low STR_1
  2024  003E80  0101               	movlb	1	; () banked
  2025  003E82  6F22               	movwf	printf@fmt& (0+255),b
  2026  003E84  0E10               	movlw	high STR_1
  2027  003E86  6F23               	movwf	(printf@fmt+1)& (0+255),b
  2028  003E88  C0F0  F124         	movff	_BatteryVolt,?_printf+2
  2029  003E8C  C0F1  F125         	movff	_BatteryVolt+1,?_printf+3
  2030  003E90  EC0F  F01F         	call	_printf	;wreg free
  2031  003E94  0012               	return		;funcret
  2032  003E96                     __end_of_getBatteryVoltage:
  2033                           	callstack 0
  2034                           
  2035 ;; *************** function _printf *****************
  2036 ;; Defined at:
  2037 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\printf.c"
  2038 ;; Parameters:    Size  Location     Type
  2039 ;;  fmt             2    2[BANK1 ] PTR const unsigned char 
  2040 ;;		 -> STR_10(10), STR_9(12), STR_8(11), STR_7(11), 
  2041 ;;		 -> STR_6(9), STR_5(14), STR_4(22), STR_3(13), 
  2042 ;;		 -> STR_2(22), STR_1(11), 
  2043 ;; Auto vars:     Size  Location     Type
  2044 ;;  ap              2    8[BANK1 ] PTR void [1]
  2045 ;;		 -> ?_printf(2), 
  2046 ;;  ret             2    0        int 
  2047 ;; Return value:  Size  Location     Type
  2048 ;;                  2    2[BANK1 ] int 
  2049 ;; Registers used:
  2050 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2051 ;; Tracked objects:
  2052 ;;		On entry : 0/0
  2053 ;;		On exit  : 0/0
  2054 ;;		Unchanged: 0/0
  2055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2056 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2057 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2059 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2060 ;;Total ram usage:        8 bytes
  2061 ;; Hardware stack levels used: 1
  2062 ;; Hardware stack levels required when called: 16
  2063 ;; This function calls:
  2064 ;;		_vfprintf
  2065 ;; This function is called by:
  2066 ;;		_getBatteryVoltage
  2067 ;;		_getCurve
  2068 ;; This function uses a non-reentrant model
  2069 ;;
  2070                           
  2071                           	psect	text5
  2072  003E1E                     __ptext5:
  2073                           	callstack 0
  2074  003E1E                     _printf:
  2075                           	callstack 12
  2076  003E1E  0E24               	movlw	low (?_printf+2)
  2077  003E20  0101               	movlb	1	; () banked
  2078  003E22  6F28               	movwf	printf@ap& (0+255),b
  2079  003E24  0E01               	movlw	high (?_printf+2)
  2080  003E26  6F29               	movwf	(printf@ap+1)& (0+255),b
  2081  003E28                     
  2082                           ; BSR set to: 1
  2083  003E28  0E00               	movlw	0
  2084  003E2A  0100               	movlb	0	; () banked
  2085  003E2C  6FAE               	movwf	vfprintf@fp& (0+255),b
  2086  003E2E  0E00               	movlw	0
  2087  003E30  6FAF               	movwf	(vfprintf@fp+1)& (0+255),b
  2088  003E32  C122  F0B0         	movff	printf@fmt,vfprintf@fmt
  2089  003E36  C123  F0B1         	movff	printf@fmt+1,vfprintf@fmt+1
  2090  003E3A  0E28               	movlw	low printf@ap
  2091  003E3C  6FB2               	movwf	vfprintf@ap& (0+255),b
  2092  003E3E  0E01               	movlw	high printf@ap
  2093  003E40  6FB3               	movwf	(vfprintf@ap+1)& (0+255),b
  2094  003E42  ECAC  F01A         	call	_vfprintf	;wreg free
  2095  003E46  0012               	return		;funcret
  2096  003E48                     __end_of_printf:
  2097                           	callstack 0
  2098                           
  2099 ;; *************** function _vfprintf *****************
  2100 ;; Defined at:
  2101 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2102 ;; Parameters:    Size  Location     Type
  2103 ;;  fp              2   78[BANK0 ] PTR struct _IO_FILE
  2104 ;;		 -> NULL(0), 
  2105 ;;  fmt             2   80[BANK0 ] PTR const unsigned char 
  2106 ;;		 -> STR_10(10), STR_9(12), STR_8(11), STR_7(11), 
  2107 ;;		 -> STR_6(9), STR_5(14), STR_4(22), STR_3(13), 
  2108 ;;		 -> STR_2(22), STR_1(11), 
  2109 ;;  ap              2   82[BANK0 ] PTR PTR void 
  2110 ;;		 -> printf@ap(2), 
  2111 ;; Auto vars:     Size  Location     Type
  2112 ;;  cfmt            2    0[BANK1 ] PTR unsigned char 
  2113 ;;		 -> STR_10(10), STR_9(12), STR_8(11), STR_7(11), 
  2114 ;;		 -> STR_6(9), STR_5(14), STR_4(22), STR_3(13), 
  2115 ;;		 -> STR_2(22), STR_1(11), 
  2116 ;; Return value:  Size  Location     Type
  2117 ;;                  2   78[BANK0 ] int 
  2118 ;; Registers used:
  2119 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2120 ;; Tracked objects:
  2121 ;;		On entry : 0/0
  2122 ;;		On exit  : 0/0
  2123 ;;		Unchanged: 0/0
  2124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2125 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2126 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2128 ;;      Totals:         0       6       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2129 ;;Total ram usage:        8 bytes
  2130 ;; Hardware stack levels used: 1
  2131 ;; Hardware stack levels required when called: 15
  2132 ;; This function calls:
  2133 ;;		_vfpfcnvrt
  2134 ;; This function is called by:
  2135 ;;		_printf
  2136 ;; This function uses a non-reentrant model
  2137 ;;
  2138                           
  2139                           	psect	text6
  2140  003558                     __ptext6:
  2141                           	callstack 0
  2142  003558                     _vfprintf:
  2143                           	callstack 12
  2144  003558                     
  2145                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2146  003558  C0B0  F120         	movff	vfprintf@fmt,vfprintf@cfmt
  2147  00355C  C0B1  F121         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2148  003560                     
  2149                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2150  003560  0E00               	movlw	0
  2151  003562  0100               	movlb	0	; () banked
  2152  003564  6FD5               	movwf	(_nout+1)& (0+255),b
  2153  003566  0E00               	movlw	0
  2154  003568  6FD4               	movwf	_nout& (0+255),b
  2155                           
  2156                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2157  00356A  EFCA  F01A         	goto	l5866
  2158  00356E                     l5864:
  2159                           
  2160                           ; BSR set to: 0
  2161                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2162  00356E  C0AE  F09E         	movff	vfprintf@fp,vfpfcnvrt@fp
  2163  003572  C0AF  F09F         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2164  003576  0E20               	movlw	low vfprintf@cfmt
  2165  003578  6FA0               	movwf	vfpfcnvrt@fmt& (0+255),b
  2166  00357A  0E01               	movlw	high vfprintf@cfmt
  2167  00357C  6FA1               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2168  00357E  C0B2  F0A2         	movff	vfprintf@ap,vfpfcnvrt@ap
  2169  003582  C0B3  F0A3         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2170  003586  EC56  F00F         	call	_vfpfcnvrt	;wreg free
  2171  00358A  0100               	movlb	0	; () banked
  2172  00358C  519E               	movf	?_vfpfcnvrt& (0+255),w,b
  2173  00358E  27D4               	addwf	_nout& (0+255),f,b
  2174  003590  519F               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2175  003592  23D5               	addwfc	(_nout+1)& (0+255),f,b
  2176  003594                     l5866:
  2177                           
  2178                           ; BSR set to: 0
  2179                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2180  003594  0060  F483  FFF6   	movff	vfprintf@cfmt,tblptrl
  2181  00359A  0060  F487  FFF7   	movff	vfprintf@cfmt+1,tblptrh
  2182  0035A0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2183  0035A0  6AF8               	clrf	tblptru,c
  2184  0035A2                     	endif
  2185  0035A2                     	if	0	;tblptru may be non-zero
  2186  0035A2                     	endif
  2187  0035A2  0008               	tblrd		*
  2188  0035A4  50F5               	movf	tablat,w,c
  2189  0035A6  0900               	iorlw	0
  2190  0035A8  A4D8               	btfss	status,2,c
  2191  0035AA  EFD9  F01A         	goto	u4881
  2192  0035AE  EFDB  F01A         	goto	u4880
  2193  0035B2                     u4881:
  2194  0035B2  EFB7  F01A         	goto	l5864
  2195  0035B6                     u4880:
  2196  0035B6                     
  2197                           ; BSR set to: 0
  2198                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2199  0035B6  C0D4  F0AE         	movff	_nout,?_vfprintf
  2200  0035BA  C0D5  F0AF         	movff	_nout+1,?_vfprintf+1
  2201  0035BE                     
  2202                           ; BSR set to: 0
  2203  0035BE  0012               	return		;funcret
  2204  0035C0                     __end_of_vfprintf:
  2205                           	callstack 0
  2206                           
  2207 ;; *************** function _vfpfcnvrt *****************
  2208 ;; Defined at:
  2209 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2210 ;; Parameters:    Size  Location     Type
  2211 ;;  fp              2   62[BANK0 ] PTR struct _IO_FILE
  2212 ;;		 -> NULL(0), 
  2213 ;;  fmt             2   64[BANK0 ] PTR PTR unsigned char 
  2214 ;;		 -> vfprintf@cfmt(2), 
  2215 ;;  ap              2   66[BANK0 ] PTR PTR void 
  2216 ;;		 -> printf@ap(2), 
  2217 ;; Auto vars:     Size  Location     Type
  2218 ;;  ll              8   70[BANK0 ] long long 
  2219 ;;  llu             8    0        unsigned long long 
  2220 ;;  f               4    0        unsigned long long 
  2221 ;;  vp              3    0        PTR void 
  2222 ;;  ct              3    0        unsigned char [3]
  2223 ;;  cp              3    0        PTR unsigned char 
  2224 ;;  i               2    0        int 
  2225 ;;  done            2    0        int 
  2226 ;;  c               1    0        unsigned char 
  2227 ;; Return value:  Size  Location     Type
  2228 ;;                  2   62[BANK0 ] int 
  2229 ;; Registers used:
  2230 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2231 ;; Tracked objects:
  2232 ;;		On entry : 0/0
  2233 ;;		On exit  : 0/0
  2234 ;;		Unchanged: 0/0
  2235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2236 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2237 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2238 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2239 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2240 ;;Total ram usage:       16 bytes
  2241 ;; Hardware stack levels used: 1
  2242 ;; Hardware stack levels required when called: 14
  2243 ;; This function calls:
  2244 ;;		_dtoa
  2245 ;;		_fputc
  2246 ;; This function is called by:
  2247 ;;		_vfprintf
  2248 ;; This function uses a non-reentrant model
  2249 ;;
  2250                           
  2251                           	psect	text7
  2252  001EAC                     __ptext7:
  2253                           	callstack 0
  2254  001EAC                     _vfpfcnvrt:
  2255                           	callstack 12
  2256  001EAC                     
  2257                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2258  001EAC  0060  F283  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2259  001EB2  0060  F287  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2260  001EB8  006F FF7B FFF6     	movff	postinc2,tblptrl
  2261  001EBE  006F FF77 FFF7     	movff	postdec2,tblptrh
  2262  001EC4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2263  001EC4  6AF8               	clrf	tblptru,c
  2264  001EC6                     	endif
  2265  001EC6                     	if	0	;tblptru may be non-zero
  2266  001EC6                     	endif
  2267  001EC6  0008               	tblrd		*
  2268  001EC8  50F5               	movf	tablat,w,c
  2269  001ECA  0A25               	xorlw	37
  2270  001ECC  A4D8               	btfss	status,2,c
  2271  001ECE  EF6B  F00F         	goto	u4681
  2272  001ED2  EF6D  F00F         	goto	u4680
  2273  001ED6                     u4681:
  2274  001ED6  EF39  F010         	goto	l5756
  2275  001EDA                     u4680:
  2276  001EDA                     
  2277                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2278  001EDA  0060  F283  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2279  001EE0  0060  F287  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2280  001EE6  2ADE               	incf	postinc2,f,c
  2281  001EE8  0E00               	movlw	0
  2282  001EEA  22DD               	addwfc	postdec2,f,c
  2283  001EEC                     
  2284                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2285  001EEC  0E00               	movlw	0
  2286  001EEE  0100               	movlb	0	; () banked
  2287  001EF0  6FD7               	movwf	(_width+1)& (0+255),b
  2288  001EF2  0E00               	movlw	0
  2289  001EF4  6FD6               	movwf	_width& (0+255),b
  2290  001EF6  C0D6  F023         	movff	_width,_flags
  2291  001EFA  C0D7  F024         	movff	_width+1,_flags+1
  2292  001EFE                     
  2293                           ; BSR set to: 0
  2294                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2295  001EFE  69D8               	setf	_prec& (0+255),b
  2296  001F00  69D9               	setf	(_prec+1)& (0+255),b
  2297  001F02                     
  2298                           ; BSR set to: 0
  2299                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2300  001F02  0060  F283  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2301  001F08  0060  F287  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2302  001F0E  006F FF7B FFF6     	movff	postinc2,tblptrl
  2303  001F14  006F FF77 FFF7     	movff	postdec2,tblptrh
  2304  001F1A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2305  001F1A  6AF8               	clrf	tblptru,c
  2306  001F1C                     	endif
  2307  001F1C                     	if	0	;tblptru may be non-zero
  2308  001F1C                     	endif
  2309  001F1C  0008               	tblrd		*
  2310  001F1E  50F5               	movf	tablat,w,c
  2311  001F20  0A64               	xorlw	100
  2312  001F22  B4D8               	btfsc	status,2,c
  2313  001F24  EF96  F00F         	goto	u4691
  2314  001F28  EF98  F00F         	goto	u4690
  2315  001F2C                     u4691:
  2316  001F2C  EFAF  F00F         	goto	l5734
  2317  001F30                     u4690:
  2318  001F30                     
  2319                           ; BSR set to: 0
  2320  001F30  0060  F283  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2321  001F36  0060  F287  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2322  001F3C  006F FF7B FFF6     	movff	postinc2,tblptrl
  2323  001F42  006F FF77 FFF7     	movff	postdec2,tblptrh
  2324  001F48                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2325  001F48  6AF8               	clrf	tblptru,c
  2326  001F4A                     	endif
  2327  001F4A                     	if	0	;tblptru may be non-zero
  2328  001F4A                     	endif
  2329  001F4A  0008               	tblrd		*
  2330  001F4C  50F5               	movf	tablat,w,c
  2331  001F4E  0A69               	xorlw	105
  2332  001F50  A4D8               	btfss	status,2,c
  2333  001F52  EFAD  F00F         	goto	u4701
  2334  001F56  EFAF  F00F         	goto	u4700
  2335  001F5A                     u4701:
  2336  001F5A  EFF9  F00F         	goto	l5740
  2337  001F5E                     u4700:
  2338  001F5E                     l5734:
  2339                           
  2340                           ; BSR set to: 0
  2341                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2342  001F5E  0060  F283  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2343  001F64  0060  F287  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2344  001F6A  2ADE               	incf	postinc2,f,c
  2345  001F6C  0E00               	movlw	0
  2346  001F6E  22DD               	addwfc	postdec2,f,c
  2347                           
  2348                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2349  001F70  0060  F28B  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  2350  001F76  0060  F28F  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  2351  001F7C  006F FF7C  F0A4    	movff	indf2,??_vfpfcnvrt
  2352  001F82  0E02               	movlw	2
  2353  001F84  26DE               	addwf	postinc2,f,c
  2354  001F86  006F FF7C  F0A5    	movff	indf2,??_vfpfcnvrt+1
  2355  001F8C  0E00               	movlw	0
  2356  001F8E  22DD               	addwfc	postdec2,f,c
  2357  001F90  0060  F293  FFD9   	movff	??_vfpfcnvrt,fsr2l
  2358  001F96  0060  F297  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  2359  001F9C  006F FF78  F0A6    	movff	postinc2,vfpfcnvrt@ll
  2360  001FA2  006F FF74  F0A7    	movff	postdec2,vfpfcnvrt@ll+1
  2361  001FA8  0E00               	movlw	0
  2362  001FAA  BFA7               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2363  001FAC  0EFF               	movlw	-1
  2364  001FAE  6FA8               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2365  001FB0  6FA9               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2366  001FB2  6FAA               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2367  001FB4  6FAB               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2368  001FB6  6FAC               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2369  001FB8  6FAD               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2370  001FBA                     
  2371                           ; BSR set to: 0
  2372                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2373  001FBA  C09E  F07A         	movff	vfpfcnvrt@fp,dtoa@fp
  2374  001FBE  C09F  F07B         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2375  001FC2  C0A6  F07C         	movff	vfpfcnvrt@ll,dtoa@d
  2376  001FC6  C0A7  F07D         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2377  001FCA  C0A8  F07E         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2378  001FCE  C0A9  F07F         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2379  001FD2  C0AA  F080         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2380  001FD6  C0AB  F081         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2381  001FDA  C0AC  F082         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2382  001FDE  C0AD  F083         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2383  001FE2  ECC3  F00C         	call	_dtoa	;wreg free
  2384  001FE6  C07A  F09E         	movff	?_dtoa,?_vfpfcnvrt
  2385  001FEA  C07B  F09F         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2386  001FEE  EF5C  F010         	goto	l2078
  2387  001FF2                     l5740:
  2388                           
  2389                           ; BSR set to: 0
  2390                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2391  001FF2  0060  F283  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2392  001FF8  0060  F287  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2393  001FFE  006F FF7B FFF6     	movff	postinc2,tblptrl
  2394  002004  006F FF77 FFF7     	movff	postdec2,tblptrh
  2395  00200A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2396  00200A  6AF8               	clrf	tblptru,c
  2397  00200C                     	endif
  2398  00200C                     	if	0	;tblptru may be non-zero
  2399  00200C                     	endif
  2400  00200C  0008               	tblrd		*
  2401  00200E  50F5               	movf	tablat,w,c
  2402  002010  0A25               	xorlw	37
  2403  002012  A4D8               	btfss	status,2,c
  2404  002014  EF0E  F010         	goto	u4711
  2405  002018  EF10  F010         	goto	u4710
  2406  00201C                     u4711:
  2407  00201C  EF2A  F010         	goto	l5750
  2408  002020                     u4710:
  2409  002020                     
  2410                           ; BSR set to: 0
  2411                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2412  002020  0060  F283  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2413  002026  0060  F287  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2414  00202C  2ADE               	incf	postinc2,f,c
  2415  00202E  0E00               	movlw	0
  2416  002030  22DD               	addwfc	postdec2,f,c
  2417  002032                     
  2418                           ; BSR set to: 0
  2419                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2420  002032  0E00               	movlw	0
  2421  002034  6F61               	movwf	(fputc@c+1)& (0+255),b
  2422  002036  0E25               	movlw	37
  2423  002038  6F60               	movwf	fputc@c& (0+255),b
  2424  00203A  C09E  F062         	movff	vfpfcnvrt@fp,fputc@fp
  2425  00203E  C09F  F063         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2426  002042  ECE5  F019         	call	_fputc	;wreg free
  2427  002046                     l5746:
  2428                           
  2429                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2430  002046  0E00               	movlw	0
  2431  002048  0100               	movlb	0	; () banked
  2432  00204A  6F9F               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2433  00204C  0E01               	movlw	1
  2434  00204E  6F9E               	movwf	?_vfpfcnvrt& (0+255),b
  2435  002050  EF5C  F010         	goto	l2078
  2436  002054                     l5750:
  2437                           
  2438                           ; BSR set to: 0
  2439                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2440  002054  0060  F283  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2441  00205A  0060  F287  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2442  002060  2ADE               	incf	postinc2,f,c
  2443  002062  0E00               	movlw	0
  2444  002064  22DD               	addwfc	postdec2,f,c
  2445  002066                     
  2446                           ; BSR set to: 0
  2447                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2448  002066  0E00               	movlw	0
  2449  002068  6F9F               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2450  00206A  0E00               	movlw	0
  2451  00206C  6F9E               	movwf	?_vfpfcnvrt& (0+255),b
  2452  00206E  EF5C  F010         	goto	l2078
  2453  002072                     l5756:
  2454                           
  2455                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2456  002072  0060  F283  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2457  002078  0060  F287  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2458  00207E  006F FF7B FFF6     	movff	postinc2,tblptrl
  2459  002084  006F FF77 FFF7     	movff	postdec2,tblptrh
  2460  00208A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2461  00208A  6AF8               	clrf	tblptru,c
  2462  00208C                     	endif
  2463  00208C                     	if	0	;tblptru may be non-zero
  2464  00208C                     	endif
  2465  00208C  0008               	tblrd		*
  2466  00208E  50F5               	movf	tablat,w,c
  2467  002090  0100               	movlb	0	; () banked
  2468  002092  6F60               	movwf	fputc@c& (0+255),b
  2469  002094  6B61               	clrf	(fputc@c+1)& (0+255),b
  2470  002096  C09E  F062         	movff	vfpfcnvrt@fp,fputc@fp
  2471  00209A  C09F  F063         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2472  00209E  ECE5  F019         	call	_fputc	;wreg free
  2473  0020A2                     
  2474                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2475  0020A2  0060  F283  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2476  0020A8  0060  F287  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2477  0020AE  2ADE               	incf	postinc2,f,c
  2478  0020B0  0E00               	movlw	0
  2479  0020B2  22DD               	addwfc	postdec2,f,c
  2480  0020B4  EF23  F010         	goto	l5746
  2481  0020B8                     l2078:
  2482  0020B8  0012               	return		;funcret
  2483  0020BA                     __end_of_vfpfcnvrt:
  2484                           	callstack 0
  2485                           
  2486 ;; *************** function _dtoa *****************
  2487 ;; Defined at:
  2488 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2489 ;; Parameters:    Size  Location     Type
  2490 ;;  fp              2   26[BANK0 ] PTR struct _IO_FILE
  2491 ;;		 -> NULL(0), 
  2492 ;;  d               8   28[BANK0 ] long long 
  2493 ;; Auto vars:     Size  Location     Type
  2494 ;;  n               8   52[BANK0 ] long long 
  2495 ;;  i               2   60[BANK0 ] int 
  2496 ;;  s               2   50[BANK0 ] int 
  2497 ;;  w               2   48[BANK0 ] int 
  2498 ;;  p               2   46[BANK0 ] int 
  2499 ;; Return value:  Size  Location     Type
  2500 ;;                  2   26[BANK0 ] int 
  2501 ;; Registers used:
  2502 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2503 ;; Tracked objects:
  2504 ;;		On entry : 0/0
  2505 ;;		On exit  : 0/0
  2506 ;;		Unchanged: 0/0
  2507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2508 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2509 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2510 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2511 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2512 ;;Total ram usage:       36 bytes
  2513 ;; Hardware stack levels used: 1
  2514 ;; Hardware stack levels required when called: 13
  2515 ;; This function calls:
  2516 ;;		___aodiv
  2517 ;;		___aomod
  2518 ;;		_abs
  2519 ;;		_pad
  2520 ;; This function is called by:
  2521 ;;		_vfpfcnvrt
  2522 ;; This function uses a non-reentrant model
  2523 ;;
  2524                           
  2525                           	psect	text8
  2526  001986                     __ptext8:
  2527                           	callstack 0
  2528  001986                     _dtoa:
  2529                           	callstack 12
  2530  001986                     
  2531                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  2532  001986  C07C  F094         	movff	dtoa@d,dtoa@n
  2533  00198A  C07D  F095         	movff	dtoa@d+1,dtoa@n+1
  2534  00198E  C07E  F096         	movff	dtoa@d+2,dtoa@n+2
  2535  001992  C07F  F097         	movff	dtoa@d+3,dtoa@n+3
  2536  001996  C080  F098         	movff	dtoa@d+4,dtoa@n+4
  2537  00199A  C081  F099         	movff	dtoa@d+5,dtoa@n+5
  2538  00199E  C082  F09A         	movff	dtoa@d+6,dtoa@n+6
  2539  0019A2  C083  F09B         	movff	dtoa@d+7,dtoa@n+7
  2540  0019A6                     
  2541                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  2542  0019A6  0100               	movlb	0	; () banked
  2543  0019A8  BF9B               	btfsc	(dtoa@n+7)& (0+255),7,b
  2544  0019AA  EFD9  F00C         	goto	u4531
  2545  0019AE  EFDC  F00C         	goto	u4530
  2546  0019B2                     u4531:
  2547  0019B2  0E01               	movlw	1
  2548  0019B4  EFDD  F00C         	goto	u4540
  2549  0019B8                     u4530:
  2550  0019B8  0E00               	movlw	0
  2551  0019BA                     u4540:
  2552  0019BA  6F92               	movwf	dtoa@s& (0+255),b
  2553  0019BC  6B93               	clrf	(dtoa@s+1)& (0+255),b
  2554                           
  2555                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  2556  0019BE  5192               	movf	dtoa@s& (0+255),w,b
  2557  0019C0  1193               	iorwf	(dtoa@s+1)& (0+255),w,b
  2558  0019C2  B4D8               	btfsc	status,2,c
  2559  0019C4  EFE6  F00C         	goto	u4551
  2560  0019C8  EFE8  F00C         	goto	u4550
  2561  0019CC                     u4551:
  2562  0019CC  EFF8  F00C         	goto	l5666
  2563  0019D0                     u4550:
  2564  0019D0                     
  2565                           ; BSR set to: 0
  2566                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  2567  0019D0  1F9B               	comf	(dtoa@n+7)& (0+255),f,b
  2568  0019D2  1F9A               	comf	(dtoa@n+6)& (0+255),f,b
  2569  0019D4  1F99               	comf	(dtoa@n+5)& (0+255),f,b
  2570  0019D6  1F98               	comf	(dtoa@n+4)& (0+255),f,b
  2571  0019D8  1F97               	comf	(dtoa@n+3)& (0+255),f,b
  2572  0019DA  1F96               	comf	(dtoa@n+2)& (0+255),f,b
  2573  0019DC  1F95               	comf	(dtoa@n+1)& (0+255),f,b
  2574  0019DE  6D94               	negf	dtoa@n& (0+255),b
  2575  0019E0  0E00               	movlw	0
  2576  0019E2  2395               	addwfc	(dtoa@n+1)& (0+255),f,b
  2577  0019E4  2396               	addwfc	(dtoa@n+2)& (0+255),f,b
  2578  0019E6  2397               	addwfc	(dtoa@n+3)& (0+255),f,b
  2579  0019E8  2398               	addwfc	(dtoa@n+4)& (0+255),f,b
  2580  0019EA  2399               	addwfc	(dtoa@n+5)& (0+255),f,b
  2581  0019EC  239A               	addwfc	(dtoa@n+6)& (0+255),f,b
  2582  0019EE  239B               	addwfc	(dtoa@n+7)& (0+255),f,b
  2583  0019F0                     l5666:
  2584                           
  2585                           ; BSR set to: 0
  2586                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  2587  0019F0  BFD9               	btfsc	(_prec+1)& (0+255),7,b
  2588  0019F2  EFFD  F00C         	goto	u4561
  2589  0019F6  EFFF  F00C         	goto	u4560
  2590  0019FA                     u4561:
  2591  0019FA  EF00  F00D         	goto	l5670
  2592  0019FE                     u4560:
  2593  0019FE                     
  2594                           ; BSR set to: 0
  2595                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  2596  0019FE  9223               	bcf	_flags^0,1,c
  2597  001A00                     l5670:
  2598                           
  2599                           ; BSR set to: 0
  2600                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  2601  001A00  BFD9               	btfsc	(_prec+1)& (0+255),7,b
  2602  001A02  EF0D  F00D         	goto	u4570
  2603  001A06  51D9               	movf	(_prec+1)& (0+255),w,b
  2604  001A08  E106               	bnz	u4571
  2605  001A0A  05D8               	decf	_prec& (0+255),w,b
  2606  001A0C  B0D8               	btfsc	status,0,c
  2607  001A0E  EF0B  F00D         	goto	u4571
  2608  001A12  EF0D  F00D         	goto	u4570
  2609  001A16                     u4571:
  2610  001A16  EF13  F00D         	goto	l2051
  2611  001A1A                     u4570:
  2612  001A1A                     
  2613                           ; BSR set to: 0
  2614  001A1A  0E00               	movlw	0
  2615  001A1C  6F8F               	movwf	(dtoa@p+1)& (0+255),b
  2616  001A1E  0E01               	movlw	1
  2617  001A20  6F8E               	movwf	dtoa@p& (0+255),b
  2618  001A22  EF17  F00D         	goto	l2053
  2619  001A26                     l2051:
  2620                           
  2621                           ; BSR set to: 0
  2622  001A26  C0D8  F08E         	movff	_prec,dtoa@p
  2623  001A2A  C0D9  F08F         	movff	_prec+1,dtoa@p+1
  2624  001A2E                     l2053:
  2625                           
  2626                           ; BSR set to: 0
  2627                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  2628  001A2E  C0D6  F090         	movff	_width,dtoa@w
  2629  001A32  C0D7  F091         	movff	_width+1,dtoa@w+1
  2630  001A36                     
  2631                           ; BSR set to: 0
  2632                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  2633  001A36  5192               	movf	dtoa@s& (0+255),w,b
  2634  001A38  1193               	iorwf	(dtoa@s+1)& (0+255),w,b
  2635  001A3A  A4D8               	btfss	status,2,c
  2636  001A3C  EF22  F00D         	goto	u4581
  2637  001A40  EF24  F00D         	goto	u4580
  2638  001A44                     u4581:
  2639  001A44  EF2B  F00D         	goto	l5678
  2640  001A48                     u4580:
  2641  001A48                     
  2642                           ; BSR set to: 0
  2643  001A48  A423               	btfss	_flags^0,2,c
  2644  001A4A  EF29  F00D         	goto	u4591
  2645  001A4E  EF2B  F00D         	goto	u4590
  2646  001A52                     u4591:
  2647  001A52  EF2E  F00D         	goto	l5680
  2648  001A56                     u4590:
  2649  001A56                     l5678:
  2650                           
  2651                           ; BSR set to: 0
  2652                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 306:         --w;
  2653  001A56  0790               	decf	dtoa@w& (0+255),f,b
  2654  001A58  A0D8               	btfss	status,0,c
  2655  001A5A  0791               	decf	(dtoa@w+1)& (0+255),f,b
  2656  001A5C                     l5680:
  2657                           
  2658                           ; BSR set to: 0
  2659                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  2660  001A5C  0E00               	movlw	0
  2661  001A5E  6F9D               	movwf	(dtoa@i+1)& (0+255),b
  2662  001A60  0E1F               	movlw	31
  2663  001A62  6F9C               	movwf	dtoa@i& (0+255),b
  2664  001A64                     
  2665                           ; BSR set to: 0
  2666                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  2667  001A64  0E00               	movlw	0
  2668  001A66  0101               	movlb	1	; () banked
  2669  001A68  6F1F               	movwf	(_dbuf+31)& (0+255),b
  2670                           
  2671                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2672  001A6A  EFB4  F00D         	goto	l5694
  2673  001A6E                     l5684:
  2674                           
  2675                           ; BSR set to: 0
  2676                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 313:         --i;
  2677  001A6E  079C               	decf	dtoa@i& (0+255),f,b
  2678  001A70  A0D8               	btfss	status,0,c
  2679  001A72  079D               	decf	(dtoa@i+1)& (0+255),f,b
  2680  001A74                     
  2681                           ; BSR set to: 0
  2682                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2683  001A74  0E00               	movlw	low _dbuf
  2684  001A76  259C               	addwf	dtoa@i& (0+255),w,b
  2685  001A78  6ED9               	movwf	fsr2l,c
  2686  001A7A  0E01               	movlw	high _dbuf
  2687  001A7C  219D               	addwfc	(dtoa@i+1)& (0+255),w,b
  2688  001A7E  6EDA               	movwf	fsr2h,c
  2689  001A80  C094  F060         	movff	dtoa@n,___aomod@dividend
  2690  001A84  C095  F061         	movff	dtoa@n+1,___aomod@dividend+1
  2691  001A88  C096  F062         	movff	dtoa@n+2,___aomod@dividend+2
  2692  001A8C  C097  F063         	movff	dtoa@n+3,___aomod@dividend+3
  2693  001A90  C098  F064         	movff	dtoa@n+4,___aomod@dividend+4
  2694  001A94  C099  F065         	movff	dtoa@n+5,___aomod@dividend+5
  2695  001A98  C09A  F066         	movff	dtoa@n+6,___aomod@dividend+6
  2696  001A9C  C09B  F067         	movff	dtoa@n+7,___aomod@dividend+7
  2697  001AA0  0E0A               	movlw	10
  2698  001AA2  6F68               	movwf	___aomod@divisor& (0+255),b
  2699  001AA4  0E00               	movlw	0
  2700  001AA6  6F69               	movwf	(___aomod@divisor+1)& (0+255),b
  2701  001AA8  0E00               	movlw	0
  2702  001AAA  6F6A               	movwf	(___aomod@divisor+2)& (0+255),b
  2703  001AAC  0E00               	movlw	0
  2704  001AAE  6F6B               	movwf	(___aomod@divisor+3)& (0+255),b
  2705  001AB0  0E00               	movlw	0
  2706  001AB2  6F6C               	movwf	(___aomod@divisor+4)& (0+255),b
  2707  001AB4  0E00               	movlw	0
  2708  001AB6  6F6D               	movwf	(___aomod@divisor+5)& (0+255),b
  2709  001AB8  0E00               	movlw	0
  2710  001ABA  6F6E               	movwf	(___aomod@divisor+6)& (0+255),b
  2711  001ABC  0E00               	movlw	0
  2712  001ABE  6F6F               	movwf	(___aomod@divisor+7)& (0+255),b
  2713  001AC0  ECDC  F013         	call	___aomod	;wreg free
  2714  001AC4  C060  F084         	movff	?___aomod,??_dtoa
  2715  001AC8  C061  F085         	movff	?___aomod+1,??_dtoa+1
  2716  001ACC  C062  F086         	movff	?___aomod+2,??_dtoa+2
  2717  001AD0  C063  F087         	movff	?___aomod+3,??_dtoa+3
  2718  001AD4  C064  F088         	movff	?___aomod+4,??_dtoa+4
  2719  001AD8  C065  F089         	movff	?___aomod+5,??_dtoa+5
  2720  001ADC  C066  F08A         	movff	?___aomod+6,??_dtoa+6
  2721  001AE0  C067  F08B         	movff	?___aomod+7,??_dtoa+7
  2722  001AE4  C084  F070         	movff	??_dtoa,abs@a
  2723  001AE8  C086  F071         	movff	??_dtoa+2,abs@a+1
  2724  001AEC  EC2A  F01D         	call	_abs	;wreg free
  2725  001AF0  0100               	movlb	0	; () banked
  2726  001AF2  5170               	movf	?_abs& (0+255),w,b
  2727  001AF4  0F30               	addlw	48
  2728  001AF6  6EDF               	movwf	indf2,c
  2729  001AF8                     
  2730                           ; BSR set to: 0
  2731                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 315:         --p;
  2732  001AF8  078E               	decf	dtoa@p& (0+255),f,b
  2733  001AFA  A0D8               	btfss	status,0,c
  2734  001AFC  078F               	decf	(dtoa@p+1)& (0+255),f,b
  2735  001AFE                     
  2736                           ; BSR set to: 0
  2737                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 316:         --w;
  2738  001AFE  0790               	decf	dtoa@w& (0+255),f,b
  2739  001B00  A0D8               	btfss	status,0,c
  2740  001B02  0791               	decf	(dtoa@w+1)& (0+255),f,b
  2741  001B04                     
  2742                           ; BSR set to: 0
  2743                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  2744  001B04  C094  F060         	movff	dtoa@n,___aodiv@dividend
  2745  001B08  C095  F061         	movff	dtoa@n+1,___aodiv@dividend+1
  2746  001B0C  C096  F062         	movff	dtoa@n+2,___aodiv@dividend+2
  2747  001B10  C097  F063         	movff	dtoa@n+3,___aodiv@dividend+3
  2748  001B14  C098  F064         	movff	dtoa@n+4,___aodiv@dividend+4
  2749  001B18  C099  F065         	movff	dtoa@n+5,___aodiv@dividend+5
  2750  001B1C  C09A  F066         	movff	dtoa@n+6,___aodiv@dividend+6
  2751  001B20  C09B  F067         	movff	dtoa@n+7,___aodiv@dividend+7
  2752  001B24  0E0A               	movlw	10
  2753  001B26  6F68               	movwf	___aodiv@divisor& (0+255),b
  2754  001B28  0E00               	movlw	0
  2755  001B2A  6F69               	movwf	(___aodiv@divisor+1)& (0+255),b
  2756  001B2C  0E00               	movlw	0
  2757  001B2E  6F6A               	movwf	(___aodiv@divisor+2)& (0+255),b
  2758  001B30  0E00               	movlw	0
  2759  001B32  6F6B               	movwf	(___aodiv@divisor+3)& (0+255),b
  2760  001B34  0E00               	movlw	0
  2761  001B36  6F6C               	movwf	(___aodiv@divisor+4)& (0+255),b
  2762  001B38  0E00               	movlw	0
  2763  001B3A  6F6D               	movwf	(___aodiv@divisor+5)& (0+255),b
  2764  001B3C  0E00               	movlw	0
  2765  001B3E  6F6E               	movwf	(___aodiv@divisor+6)& (0+255),b
  2766  001B40  0E00               	movlw	0
  2767  001B42  6F6F               	movwf	(___aodiv@divisor+7)& (0+255),b
  2768  001B44  EC17  F013         	call	___aodiv	;wreg free
  2769  001B48  C060  F094         	movff	?___aodiv,dtoa@n
  2770  001B4C  C061  F095         	movff	?___aodiv+1,dtoa@n+1
  2771  001B50  C062  F096         	movff	?___aodiv+2,dtoa@n+2
  2772  001B54  C063  F097         	movff	?___aodiv+3,dtoa@n+3
  2773  001B58  C064  F098         	movff	?___aodiv+4,dtoa@n+4
  2774  001B5C  C065  F099         	movff	?___aodiv+5,dtoa@n+5
  2775  001B60  C066  F09A         	movff	?___aodiv+6,dtoa@n+6
  2776  001B64  C067  F09B         	movff	?___aodiv+7,dtoa@n+7
  2777  001B68                     l5694:
  2778                           
  2779                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2780  001B68  0100               	movlb	0	; () banked
  2781  001B6A  BF9D               	btfsc	(dtoa@i+1)& (0+255),7,b
  2782  001B6C  EFC0  F00D         	goto	u4601
  2783  001B70  519D               	movf	(dtoa@i+1)& (0+255),w,b
  2784  001B72  E108               	bnz	u4600
  2785  001B74  059C               	decf	dtoa@i& (0+255),w,b
  2786  001B76  A0D8               	btfss	status,0,c
  2787  001B78  EFC0  F00D         	goto	u4601
  2788  001B7C  EFC2  F00D         	goto	u4600
  2789  001B80                     u4601:
  2790  001B80  EFF2  F00D         	goto	l5704
  2791  001B84                     u4600:
  2792  001B84                     
  2793                           ; BSR set to: 0
  2794  001B84  5194               	movf	dtoa@n& (0+255),w,b
  2795  001B86  1195               	iorwf	(dtoa@n+1)& (0+255),w,b
  2796  001B88  1196               	iorwf	(dtoa@n+2)& (0+255),w,b
  2797  001B8A  1197               	iorwf	(dtoa@n+3)& (0+255),w,b
  2798  001B8C  1198               	iorwf	(dtoa@n+4)& (0+255),w,b
  2799  001B8E  1199               	iorwf	(dtoa@n+5)& (0+255),w,b
  2800  001B90  119A               	iorwf	(dtoa@n+6)& (0+255),w,b
  2801  001B92  119B               	iorwf	(dtoa@n+7)& (0+255),w,b
  2802  001B94  A4D8               	btfss	status,2,c
  2803  001B96  EFCF  F00D         	goto	u4611
  2804  001B9A  EFD1  F00D         	goto	u4610
  2805  001B9E                     u4611:
  2806  001B9E  EF37  F00D         	goto	l5684
  2807  001BA2                     u4610:
  2808  001BA2                     
  2809                           ; BSR set to: 0
  2810  001BA2  BF8F               	btfsc	(dtoa@p+1)& (0+255),7,b
  2811  001BA4  EFDE  F00D         	goto	u4620
  2812  001BA8  518F               	movf	(dtoa@p+1)& (0+255),w,b
  2813  001BAA  E106               	bnz	u4621
  2814  001BAC  058E               	decf	dtoa@p& (0+255),w,b
  2815  001BAE  B0D8               	btfsc	status,0,c
  2816  001BB0  EFDC  F00D         	goto	u4621
  2817  001BB4  EFDE  F00D         	goto	u4620
  2818  001BB8                     u4621:
  2819  001BB8  EF37  F00D         	goto	l5684
  2820  001BBC                     u4620:
  2821  001BBC                     
  2822                           ; BSR set to: 0
  2823  001BBC  BF91               	btfsc	(dtoa@w+1)& (0+255),7,b
  2824  001BBE  EFE9  F00D         	goto	u4631
  2825  001BC2  5191               	movf	(dtoa@w+1)& (0+255),w,b
  2826  001BC4  E108               	bnz	u4630
  2827  001BC6  0590               	decf	dtoa@w& (0+255),w,b
  2828  001BC8  A0D8               	btfss	status,0,c
  2829  001BCA  EFE9  F00D         	goto	u4631
  2830  001BCE  EFEB  F00D         	goto	u4630
  2831  001BD2                     u4631:
  2832  001BD2  EFF2  F00D         	goto	l5704
  2833  001BD6                     u4630:
  2834  001BD6                     
  2835                           ; BSR set to: 0
  2836  001BD6  B223               	btfsc	_flags^0,1,c
  2837  001BD8  EFF0  F00D         	goto	u4641
  2838  001BDC  EFF2  F00D         	goto	u4640
  2839  001BE0                     u4641:
  2840  001BE0  EF37  F00D         	goto	l5684
  2841  001BE4                     u4640:
  2842  001BE4                     l5704:
  2843                           
  2844                           ; BSR set to: 0
  2845                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  2846  001BE4  5192               	movf	dtoa@s& (0+255),w,b
  2847  001BE6  1193               	iorwf	(dtoa@s+1)& (0+255),w,b
  2848  001BE8  A4D8               	btfss	status,2,c
  2849  001BEA  EFF9  F00D         	goto	u4651
  2850  001BEE  EFFB  F00D         	goto	u4650
  2851  001BF2                     u4651:
  2852  001BF2  EF02  F00E         	goto	l5708
  2853  001BF6                     u4650:
  2854  001BF6                     
  2855                           ; BSR set to: 0
  2856  001BF6  A423               	btfss	_flags^0,2,c
  2857  001BF8  EF00  F00E         	goto	u4661
  2858  001BFC  EF02  F00E         	goto	u4660
  2859  001C00                     u4661:
  2860  001C00  EF21  F00E         	goto	l5718
  2861  001C04                     u4660:
  2862  001C04                     l5708:
  2863                           
  2864                           ; BSR set to: 0
  2865                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 322:         --i;
  2866  001C04  079C               	decf	dtoa@i& (0+255),f,b
  2867  001C06  A0D8               	btfss	status,0,c
  2868  001C08  079D               	decf	(dtoa@i+1)& (0+255),f,b
  2869  001C0A                     
  2870                           ; BSR set to: 0
  2871                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  2872  001C0A  5192               	movf	dtoa@s& (0+255),w,b
  2873  001C0C  1193               	iorwf	(dtoa@s+1)& (0+255),w,b
  2874  001C0E  A4D8               	btfss	status,2,c
  2875  001C10  EF0C  F00E         	goto	u4671
  2876  001C14  EF0E  F00E         	goto	u4670
  2877  001C18                     u4671:
  2878  001C18  EF14  F00E         	goto	l5714
  2879  001C1C                     u4670:
  2880  001C1C                     
  2881                           ; BSR set to: 0
  2882  001C1C  0E00               	movlw	0
  2883  001C1E  6F8D               	movwf	(_dtoa$3453+1)& (0+255),b
  2884  001C20  0E2B               	movlw	43
  2885  001C22  6F8C               	movwf	_dtoa$3453& (0+255),b
  2886  001C24  EF18  F00E         	goto	l5716
  2887  001C28                     l5714:
  2888                           
  2889                           ; BSR set to: 0
  2890  001C28  0E00               	movlw	0
  2891  001C2A  6F8D               	movwf	(_dtoa$3453+1)& (0+255),b
  2892  001C2C  0E2D               	movlw	45
  2893  001C2E  6F8C               	movwf	_dtoa$3453& (0+255),b
  2894  001C30                     l5716:
  2895                           
  2896                           ; BSR set to: 0
  2897  001C30  0E00               	movlw	low _dbuf
  2898  001C32  259C               	addwf	dtoa@i& (0+255),w,b
  2899  001C34  6ED9               	movwf	fsr2l,c
  2900  001C36  0E01               	movlw	high _dbuf
  2901  001C38  219D               	addwfc	(dtoa@i+1)& (0+255),w,b
  2902  001C3A  6EDA               	movwf	fsr2h,c
  2903  001C3C  0060  F233  FFDF   	movff	_dtoa$3453,indf2
  2904  001C42                     l5718:
  2905                           
  2906                           ; BSR set to: 0
  2907                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  2908  001C42  C07A  F070         	movff	dtoa@fp,pad@fp
  2909  001C46  C07B  F071         	movff	dtoa@fp+1,pad@fp+1
  2910  001C4A  0E00               	movlw	low _dbuf
  2911  001C4C  259C               	addwf	dtoa@i& (0+255),w,b
  2912  001C4E  6F72               	movwf	pad@buf& (0+255),b
  2913  001C50  0E01               	movlw	high _dbuf
  2914  001C52  219D               	addwfc	(dtoa@i+1)& (0+255),w,b
  2915  001C54  6F73               	movwf	(pad@buf+1)& (0+255),b
  2916  001C56  C090  F074         	movff	dtoa@w,pad@p
  2917  001C5A  C091  F075         	movff	dtoa@w+1,pad@p+1
  2918  001C5E  EC1F  F018         	call	_pad	;wreg free
  2919  001C62  C070  F07A         	movff	?_pad,?_dtoa
  2920  001C66  C071  F07B         	movff	?_pad+1,?_dtoa+1
  2921  001C6A  0012               	return		;funcret
  2922  001C6C                     __end_of_dtoa:
  2923                           	callstack 0
  2924                           
  2925 ;; *************** function _pad *****************
  2926 ;; Defined at:
  2927 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2928 ;; Parameters:    Size  Location     Type
  2929 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  2930 ;;		 -> NULL(0), 
  2931 ;;  buf             2   18[BANK0 ] PTR unsigned char 
  2932 ;;		 -> dbuf(32), 
  2933 ;;  p               2   20[BANK0 ] int 
  2934 ;; Auto vars:     Size  Location     Type
  2935 ;;  w               2   24[BANK0 ] int 
  2936 ;;  i               2   22[BANK0 ] int 
  2937 ;; Return value:  Size  Location     Type
  2938 ;;                  2   16[BANK0 ] int 
  2939 ;; Registers used:
  2940 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2941 ;; Tracked objects:
  2942 ;;		On entry : 0/0
  2943 ;;		On exit  : 0/0
  2944 ;;		Unchanged: 0/0
  2945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2946 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2947 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2948 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2949 ;;      Totals:         1      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2950 ;;Total ram usage:       11 bytes
  2951 ;; Hardware stack levels used: 1
  2952 ;; Hardware stack levels required when called: 12
  2953 ;; This function calls:
  2954 ;;		_fputc
  2955 ;;		_fputs
  2956 ;;		_strlen
  2957 ;; This function is called by:
  2958 ;;		_dtoa
  2959 ;; This function uses a non-reentrant model
  2960 ;;
  2961                           
  2962                           	psect	text9
  2963  00303E                     __ptext9:
  2964                           	callstack 0
  2965  00303E                     _pad:
  2966                           	callstack 12
  2967  00303E                     
  2968                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2969  00303E  A023               	btfss	_flags^0,0,c
  2970  003040  EF24  F018         	goto	u4481
  2971  003044  EF26  F018         	goto	u4480
  2972  003048                     u4481:
  2973  003048  EF30  F018         	goto	l5638
  2974  00304C                     u4480:
  2975  00304C                     
  2976                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2977  00304C  C072  F069         	movff	pad@buf,fputs@s
  2978  003050  C073  F06A         	movff	pad@buf+1,fputs@s+1
  2979  003054  C070  F06B         	movff	pad@fp,fputs@fp
  2980  003058  C071  F06C         	movff	pad@fp+1,fputs@fp+1
  2981  00305C  ECBF  F01C         	call	_fputs	;wreg free
  2982  003060                     l5638:
  2983                           
  2984                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2985  003060  0100               	movlb	0	; () banked
  2986  003062  BF75               	btfsc	(pad@p+1)& (0+255),7,b
  2987  003064  EF36  F018         	goto	u4491
  2988  003068  EF38  F018         	goto	u4490
  2989  00306C                     u4491:
  2990  00306C  EF3E  F018         	goto	l5642
  2991  003070                     u4490:
  2992  003070                     
  2993                           ; BSR set to: 0
  2994  003070  C074  F078         	movff	pad@p,pad@w
  2995  003074  C075  F079         	movff	pad@p+1,pad@w+1
  2996  003078  EF42  F018         	goto	l2040
  2997  00307C                     l5642:
  2998                           
  2999                           ; BSR set to: 0
  3000  00307C  0E00               	movlw	0
  3001  00307E  6F79               	movwf	(pad@w+1)& (0+255),b
  3002  003080  0E00               	movlw	0
  3003  003082  6F78               	movwf	pad@w& (0+255),b
  3004  003084                     l2040:
  3005                           
  3006                           ; BSR set to: 0
  3007                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  3008  003084  0E00               	movlw	0
  3009  003086  6F77               	movwf	(pad@i+1)& (0+255),b
  3010  003088  0E00               	movlw	0
  3011  00308A  6F76               	movwf	pad@i& (0+255),b
  3012                           
  3013                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3014  00308C  EF55  F018         	goto	l5648
  3015  003090                     l5644:
  3016                           
  3017                           ; BSR set to: 0
  3018                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  3019  003090  0E00               	movlw	0
  3020  003092  6F61               	movwf	(fputc@c+1)& (0+255),b
  3021  003094  0E20               	movlw	32
  3022  003096  6F60               	movwf	fputc@c& (0+255),b
  3023  003098  C070  F062         	movff	pad@fp,fputc@fp
  3024  00309C  C071  F063         	movff	pad@fp+1,fputc@fp+1
  3025  0030A0  ECE5  F019         	call	_fputc	;wreg free
  3026  0030A4                     
  3027                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  3028  0030A4  0100               	movlb	0	; () banked
  3029  0030A6  4B76               	infsnz	pad@i& (0+255),f,b
  3030  0030A8  2B77               	incf	(pad@i+1)& (0+255),f,b
  3031  0030AA                     l5648:
  3032                           
  3033                           ; BSR set to: 0
  3034                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3035  0030AA  5178               	movf	pad@w& (0+255),w,b
  3036  0030AC  5D76               	subwf	pad@i& (0+255),w,b
  3037  0030AE  5177               	movf	(pad@i+1)& (0+255),w,b
  3038  0030B0  0A80               	xorlw	128
  3039  0030B2  6E22               	movwf	??_pad^0,c
  3040  0030B4  5179               	movf	(pad@w+1)& (0+255),w,b
  3041  0030B6  0A80               	xorlw	128
  3042  0030B8  5822               	subwfb	??_pad^0,w,c
  3043  0030BA  A0D8               	btfss	status,0,c
  3044  0030BC  EF62  F018         	goto	u4501
  3045  0030C0  EF64  F018         	goto	u4500
  3046  0030C4                     u4501:
  3047  0030C4  EF48  F018         	goto	l5644
  3048  0030C8                     u4500:
  3049  0030C8                     
  3050                           ; BSR set to: 0
  3051                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  3052  0030C8  B023               	btfsc	_flags^0,0,c
  3053  0030CA  EF69  F018         	goto	u4511
  3054  0030CE  EF6B  F018         	goto	u4510
  3055  0030D2                     u4511:
  3056  0030D2  EF75  F018         	goto	l5652
  3057  0030D6                     u4510:
  3058  0030D6                     
  3059                           ; BSR set to: 0
  3060                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  3061  0030D6  C072  F069         	movff	pad@buf,fputs@s
  3062  0030DA  C073  F06A         	movff	pad@buf+1,fputs@s+1
  3063  0030DE  C070  F06B         	movff	pad@fp,fputs@fp
  3064  0030E2  C071  F06C         	movff	pad@fp+1,fputs@fp+1
  3065  0030E6  ECBF  F01C         	call	_fputs	;wreg free
  3066  0030EA                     l5652:
  3067                           
  3068                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  3069  0030EA  C072  F020         	movff	pad@buf,strlen@s
  3070  0030EE  C073  F021         	movff	pad@buf+1,strlen@s+1
  3071  0030F2  EC4B  F01D         	call	_strlen	;wreg free
  3072  0030F6  0100               	movlb	0	; () banked
  3073  0030F8  5178               	movf	pad@w& (0+255),w,b
  3074  0030FA  2420               	addwf	?_strlen^0,w,c
  3075  0030FC  6F70               	movwf	?_pad& (0+255),b
  3076  0030FE  5179               	movf	(pad@w+1)& (0+255),w,b
  3077  003100  2021               	addwfc	(?_strlen+1)^0,w,c
  3078  003102  6F71               	movwf	(?_pad+1)& (0+255),b
  3079  003104                     
  3080                           ; BSR set to: 0
  3081  003104  0012               	return		;funcret
  3082  003106                     __end_of_pad:
  3083                           	callstack 0
  3084                           
  3085 ;; *************** function _strlen *****************
  3086 ;; Defined at:
  3087 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  3088 ;; Parameters:    Size  Location     Type
  3089 ;;  s               2   31[COMRAM] PTR const unsigned char 
  3090 ;;		 -> dbuf(32), 
  3091 ;; Auto vars:     Size  Location     Type
  3092 ;;  a               2    0[BANK0 ] PTR const unsigned char 
  3093 ;;		 -> dbuf(32), 
  3094 ;; Return value:  Size  Location     Type
  3095 ;;                  2   31[COMRAM] unsigned int 
  3096 ;; Registers used:
  3097 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3098 ;; Tracked objects:
  3099 ;;		On entry : 0/0
  3100 ;;		On exit  : 0/0
  3101 ;;		Unchanged: 0/0
  3102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3103 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3104 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3106 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3107 ;;Total ram usage:        4 bytes
  3108 ;; Hardware stack levels used: 1
  3109 ;; Hardware stack levels required when called: 8
  3110 ;; This function calls:
  3111 ;;		Nothing
  3112 ;; This function is called by:
  3113 ;;		_pad
  3114 ;; This function uses a non-reentrant model
  3115 ;;
  3116                           
  3117                           	psect	text10
  3118  003A96                     __ptext10:
  3119                           	callstack 0
  3120  003A96                     _strlen:
  3121                           	callstack 15
  3122  003A96  C020  F060         	movff	strlen@s,strlen@a
  3123  003A9A  C021  F061         	movff	strlen@s+1,strlen@a+1
  3124  003A9E  EF53  F01D         	goto	l5548
  3125  003AA2                     l5546:
  3126  003AA2  4A20               	infsnz	strlen@s^0,f,c
  3127  003AA4  2A21               	incf	(strlen@s+1)^0,f,c
  3128  003AA6                     l5548:
  3129  003AA6  0060  F083  FFD9   	movff	strlen@s,fsr2l
  3130  003AAC  0060  F087  FFDA   	movff	strlen@s+1,fsr2h
  3131  003AB2  50DF               	movf	indf2,w,c
  3132  003AB4  A4D8               	btfss	status,2,c
  3133  003AB6  EF5F  F01D         	goto	u4341
  3134  003ABA  EF61  F01D         	goto	u4340
  3135  003ABE                     u4341:
  3136  003ABE  EF51  F01D         	goto	l5546
  3137  003AC2                     u4340:
  3138  003AC2  0100               	movlb	0	; () banked
  3139  003AC4  5160               	movf	strlen@a& (0+255),w,b
  3140  003AC6  5C20               	subwf	strlen@s^0,w,c
  3141  003AC8  6E20               	movwf	?_strlen^0,c
  3142  003ACA  5161               	movf	(strlen@a+1)& (0+255),w,b
  3143  003ACC  5821               	subwfb	(strlen@s+1)^0,w,c
  3144  003ACE  6E21               	movwf	(?_strlen+1)^0,c
  3145  003AD0                     
  3146                           ; BSR set to: 0
  3147  003AD0  0012               	return		;funcret
  3148  003AD2                     __end_of_strlen:
  3149                           	callstack 0
  3150                           
  3151 ;; *************** function _fputs *****************
  3152 ;; Defined at:
  3153 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  3154 ;; Parameters:    Size  Location     Type
  3155 ;;  s               2    9[BANK0 ] PTR const unsigned char 
  3156 ;;		 -> dbuf(32), 
  3157 ;;  fp              2   11[BANK0 ] PTR struct _IO_FILE
  3158 ;;		 -> NULL(0), 
  3159 ;; Auto vars:     Size  Location     Type
  3160 ;;  i               2   14[BANK0 ] int 
  3161 ;;  c               1   13[BANK0 ] unsigned char 
  3162 ;; Return value:  Size  Location     Type
  3163 ;;                  2    9[BANK0 ] int 
  3164 ;; Registers used:
  3165 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3166 ;; Tracked objects:
  3167 ;;		On entry : 0/0
  3168 ;;		On exit  : 0/0
  3169 ;;		Unchanged: 0/0
  3170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3171 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3172 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3174 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3175 ;;Total ram usage:        7 bytes
  3176 ;; Hardware stack levels used: 1
  3177 ;; Hardware stack levels required when called: 11
  3178 ;; This function calls:
  3179 ;;		_fputc
  3180 ;; This function is called by:
  3181 ;;		_pad
  3182 ;; This function uses a non-reentrant model
  3183 ;;
  3184                           
  3185                           	psect	text11
  3186  00397E                     __ptext11:
  3187                           	callstack 0
  3188  00397E                     _fputs:
  3189                           	callstack 12
  3190  00397E  0E00               	movlw	0
  3191  003980  0100               	movlb	0	; () banked
  3192  003982  6F6F               	movwf	(fputs@i+1)& (0+255),b
  3193  003984  0E00               	movlw	0
  3194  003986  6F6E               	movwf	fputs@i& (0+255),b
  3195  003988  EFD2  F01C         	goto	l5542
  3196  00398C                     l5538:
  3197                           
  3198                           ; BSR set to: 0
  3199  00398C  C06D  F060         	movff	fputs@c,fputc@c
  3200  003990  6B61               	clrf	(fputc@c+1)& (0+255),b
  3201  003992  C06B  F062         	movff	fputs@fp,fputc@fp
  3202  003996  C06C  F063         	movff	fputs@fp+1,fputc@fp+1
  3203  00399A  ECE5  F019         	call	_fputc	;wreg free
  3204  00399E  0100               	movlb	0	; () banked
  3205  0039A0  4B6E               	infsnz	fputs@i& (0+255),f,b
  3206  0039A2  2B6F               	incf	(fputs@i+1)& (0+255),f,b
  3207  0039A4                     l5542:
  3208                           
  3209                           ; BSR set to: 0
  3210  0039A4  516E               	movf	fputs@i& (0+255),w,b
  3211  0039A6  2569               	addwf	fputs@s& (0+255),w,b
  3212  0039A8  6ED9               	movwf	fsr2l,c
  3213  0039AA  516F               	movf	(fputs@i+1)& (0+255),w,b
  3214  0039AC  216A               	addwfc	(fputs@s+1)& (0+255),w,b
  3215  0039AE  6EDA               	movwf	fsr2h,c
  3216  0039B0  50DF               	movf	indf2,w,c
  3217  0039B2  6F6D               	movwf	fputs@c& (0+255),b
  3218  0039B4  516D               	movf	fputs@c& (0+255),w,b
  3219  0039B6  A4D8               	btfss	status,2,c
  3220  0039B8  EFE0  F01C         	goto	u4331
  3221  0039BC  EFE2  F01C         	goto	u4330
  3222  0039C0                     u4331:
  3223  0039C0  EFC6  F01C         	goto	l5538
  3224  0039C4                     u4330:
  3225  0039C4                     
  3226                           ; BSR set to: 0
  3227  0039C4  0012               	return		;funcret
  3228  0039C6                     __end_of_fputs:
  3229                           	callstack 0
  3230                           
  3231 ;; *************** function _fputc *****************
  3232 ;; Defined at:
  3233 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  3234 ;; Parameters:    Size  Location     Type
  3235 ;;  c               2    0[BANK0 ] int 
  3236 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
  3237 ;;		 -> NULL(0), 
  3238 ;; Auto vars:     Size  Location     Type
  3239 ;;		None
  3240 ;; Return value:  Size  Location     Type
  3241 ;;                  2    0[BANK0 ] int 
  3242 ;; Registers used:
  3243 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3244 ;; Tracked objects:
  3245 ;;		On entry : 0/0
  3246 ;;		On exit  : 0/0
  3247 ;;		Unchanged: 0/0
  3248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3249 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3251 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3252 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3253 ;;Total ram usage:        9 bytes
  3254 ;; Hardware stack levels used: 1
  3255 ;; Hardware stack levels required when called: 10
  3256 ;; This function calls:
  3257 ;;		_putch
  3258 ;; This function is called by:
  3259 ;;		_pad
  3260 ;;		_vfpfcnvrt
  3261 ;;		_fputs
  3262 ;; This function uses a non-reentrant model
  3263 ;;
  3264                           
  3265                           	psect	text12
  3266  0033CA                     __ptext12:
  3267                           	callstack 0
  3268  0033CA                     _fputc:
  3269                           	callstack 15
  3270  0033CA  0100               	movlb	0	; () banked
  3271  0033CC  5162               	movf	fputc@fp& (0+255),w,b
  3272  0033CE  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  3273  0033D0  B4D8               	btfsc	status,2,c
  3274  0033D2  EFED  F019         	goto	u4291
  3275  0033D6  EFEF  F019         	goto	u4290
  3276  0033DA                     u4291:
  3277  0033DA  EFF8  F019         	goto	l5526
  3278  0033DE                     u4290:
  3279  0033DE                     
  3280                           ; BSR set to: 0
  3281  0033DE  5162               	movf	fputc@fp& (0+255),w,b
  3282  0033E0  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  3283  0033E2  A4D8               	btfss	status,2,c
  3284  0033E4  EFF6  F019         	goto	u4301
  3285  0033E8  EFF8  F019         	goto	u4300
  3286  0033EC                     u4301:
  3287  0033EC  EFFD  F019         	goto	l5528
  3288  0033F0                     u4300:
  3289  0033F0                     l5526:
  3290                           
  3291                           ; BSR set to: 0
  3292  0033F0  5160               	movf	fputc@c& (0+255),w,b
  3293  0033F2  ECDF  F01F         	call	_putch
  3294  0033F6  EF30  F01A         	goto	l2104
  3295  0033FA                     l5528:
  3296                           
  3297                           ; BSR set to: 0
  3298  0033FA  EE20 F009          	lfsr	2,9
  3299  0033FE  5162               	movf	fputc@fp& (0+255),w,b
  3300  003400  26D9               	addwf	fsr2l,f,c
  3301  003402  5163               	movf	(fputc@fp+1)& (0+255),w,b
  3302  003404  22DA               	addwfc	fsr2h,f,c
  3303  003406  50DE               	movf	postinc2,w,c
  3304  003408  10DE               	iorwf	postinc2,w,c
  3305  00340A  B4D8               	btfsc	status,2,c
  3306  00340C  EF0A  F01A         	goto	u4311
  3307  003410  EF0C  F01A         	goto	u4310
  3308  003414                     u4311:
  3309  003414  EF27  F01A         	goto	l5532
  3310  003418                     u4310:
  3311  003418                     
  3312                           ; BSR set to: 0
  3313  003418  EE20 F009          	lfsr	2,9
  3314  00341C  5162               	movf	fputc@fp& (0+255),w,b
  3315  00341E  26D9               	addwf	fsr2l,f,c
  3316  003420  5163               	movf	(fputc@fp+1)& (0+255),w,b
  3317  003422  22DA               	addwfc	fsr2h,f,c
  3318  003424  EE10 F003          	lfsr	1,3
  3319  003428  5162               	movf	fputc@fp& (0+255),w,b
  3320  00342A  26E1               	addwf	fsr1l,f,c
  3321  00342C  5163               	movf	(fputc@fp+1)& (0+255),w,b
  3322  00342E  22E2               	addwfc	fsr1h,f,c
  3323  003430  50DE               	movf	postinc2,w,c
  3324  003432  5CE6               	subwf	postinc1,w,c
  3325  003434  50E6               	movf	postinc1,w,c
  3326  003436  0A80               	xorlw	128
  3327  003438  6F68               	movwf	(??_fputc+4)& (0+255),b
  3328  00343A  50DE               	movf	postinc2,w,c
  3329  00343C  0A80               	xorlw	128
  3330  00343E  5968               	subwfb	(??_fputc+4)& (0+255),w,b
  3331  003440  B0D8               	btfsc	status,0,c
  3332  003442  EF25  F01A         	goto	u4321
  3333  003446  EF27  F01A         	goto	u4320
  3334  00344A                     u4321:
  3335  00344A  EF30  F01A         	goto	l2104
  3336  00344E                     u4320:
  3337  00344E                     l5532:
  3338                           
  3339                           ; BSR set to: 0
  3340  00344E  EE20 F003          	lfsr	2,3
  3341  003452  5162               	movf	fputc@fp& (0+255),w,b
  3342  003454  26D9               	addwf	fsr2l,f,c
  3343  003456  5163               	movf	(fputc@fp+1)& (0+255),w,b
  3344  003458  22DA               	addwfc	fsr2h,f,c
  3345  00345A  2ADE               	incf	postinc2,f,c
  3346  00345C  0E00               	movlw	0
  3347  00345E  22DD               	addwfc	postdec2,f,c
  3348  003460                     l2104:
  3349  003460  0012               	return		;funcret
  3350  003462                     __end_of_fputc:
  3351                           	callstack 0
  3352                           
  3353 ;; *************** function _putch *****************
  3354 ;; Defined at:
  3355 ;;		line 230 in file "mcc_generated_files/uart1.c"
  3356 ;; Parameters:    Size  Location     Type
  3357 ;;  txData          1    wreg     unsigned char 
  3358 ;; Auto vars:     Size  Location     Type
  3359 ;;  txData          1   32[COMRAM] unsigned char 
  3360 ;; Return value:  Size  Location     Type
  3361 ;;                  1    wreg      void 
  3362 ;; Registers used:
  3363 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3364 ;; Tracked objects:
  3365 ;;		On entry : 0/0
  3366 ;;		On exit  : 0/0
  3367 ;;		Unchanged: 0/0
  3368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3370 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3372 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3373 ;;Total ram usage:        1 bytes
  3374 ;; Hardware stack levels used: 1
  3375 ;; Hardware stack levels required when called: 9
  3376 ;; This function calls:
  3377 ;;		_UART1_Write
  3378 ;; This function is called by:
  3379 ;;		_fputc
  3380 ;; This function uses a non-reentrant model
  3381 ;;
  3382                           
  3383                           	psect	text13
  3384  003FBE                     __ptext13:
  3385                           	callstack 0
  3386  003FBE                     _putch:
  3387                           	callstack 15
  3388                           
  3389                           ;incstack = 0
  3390                           ;putch@txData stored from wreg
  3391  003FBE  6E21               	movwf	putch@txData^0,c
  3392  003FC0                     
  3393                           ;mcc_generated_files/uart1.c: 230: void putch(char txData);mcc_generated_files/uart1.c: 
      +                          231: {;mcc_generated_files/uart1.c: 232:     UART1_Write(txData);
  3394  003FC0  5021               	movf	putch@txData^0,w,c
  3395  003FC2  ECE0  F01A         	call	_UART1_Write
  3396  003FC6  0012               	return		;funcret
  3397  003FC8                     __end_of_putch:
  3398                           	callstack 0
  3399                           
  3400 ;; *************** function _UART1_Write *****************
  3401 ;; Defined at:
  3402 ;;		line 202 in file "mcc_generated_files/uart1.c"
  3403 ;; Parameters:    Size  Location     Type
  3404 ;;  txData          1    wreg     unsigned char 
  3405 ;; Auto vars:     Size  Location     Type
  3406 ;;  txData          1   31[COMRAM] unsigned char 
  3407 ;; Return value:  Size  Location     Type
  3408 ;;                  1    wreg      void 
  3409 ;; Registers used:
  3410 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3411 ;; Tracked objects:
  3412 ;;		On entry : 0/0
  3413 ;;		On exit  : 0/0
  3414 ;;		Unchanged: 0/0
  3415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3417 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3419 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3420 ;;Total ram usage:        1 bytes
  3421 ;; Hardware stack levels used: 1
  3422 ;; Hardware stack levels required when called: 8
  3423 ;; This function calls:
  3424 ;;		Nothing
  3425 ;; This function is called by:
  3426 ;;		_putch
  3427 ;; This function uses a non-reentrant model
  3428 ;;
  3429                           
  3430                           	psect	text14
  3431  0035C0                     __ptext14:
  3432                           	callstack 0
  3433  0035C0                     _UART1_Write:
  3434                           	callstack 15
  3435                           
  3436                           ;incstack = 0
  3437                           ;UART1_Write@txData stored from wreg
  3438  0035C0  6E20               	movwf	UART1_Write@txData^0,c
  3439  0035C2                     l5504:
  3440                           
  3441                           ;mcc_generated_files/uart1.c: 204:     while(0 == uart1TxBufferRemaining)
  3442  0035C2  5040               	movf	_uart1TxBufferRemaining^0,w,c	;volatile
  3443  0035C4  B4D8               	btfsc	status,2,c
  3444  0035C6  EFE7  F01A         	goto	u4261
  3445  0035CA  EFE9  F01A         	goto	u4260
  3446  0035CE                     u4261:
  3447  0035CE  EFE1  F01A         	goto	l5504
  3448  0035D2                     u4260:
  3449  0035D2                     
  3450                           ;mcc_generated_files/uart1.c: 208:     if(0 == PIE3bits.U1TXIE)
  3451  0035D2  0139               	movlb	57	; () banked
  3452  0035D4  B993               	btfsc	147,4,b	;volatile
  3453  0035D6  EFEF  F01A         	goto	u4271
  3454  0035DA  EFF1  F01A         	goto	u4270
  3455  0035DE                     u4271:
  3456  0035DE  EFF6  F01A         	goto	l309
  3457  0035E2                     u4270:
  3458  0035E2                     
  3459                           ; BSR set to: 57
  3460                           ;mcc_generated_files/uart1.c: 209:     {;mcc_generated_files/uart1.c: 210:         U1TXB
      +                           = txData;
  3461  0035E2  0060  F083  FDEA   	movff	UART1_Write@txData,15850	;volatile
  3462                           
  3463                           ;mcc_generated_files/uart1.c: 211:     }
  3464  0035E8  EF0C  F01B         	goto	l5518
  3465  0035EC                     l309:
  3466                           
  3467                           ; BSR set to: 57
  3468                           ;mcc_generated_files/uart1.c: 213:     {;mcc_generated_files/uart1.c: 214:         PIE3b
      +                          its.U1TXIE = 0;
  3469  0035EC  9993               	bcf	147,4,b	;volatile
  3470  0035EE                     
  3471                           ; BSR set to: 57
  3472                           ;mcc_generated_files/uart1.c: 215:         uart1TxBuffer[uart1TxHead++] = txData;
  3473  0035EE  0EC4               	movlw	low _uart1TxBuffer
  3474  0035F0  2433               	addwf	_uart1TxHead^0,w,c	;volatile
  3475  0035F2  6ED9               	movwf	fsr2l,c
  3476  0035F4  6ADA               	clrf	fsr2h,c
  3477  0035F6  0E00               	movlw	high _uart1TxBuffer
  3478  0035F8  22DA               	addwfc	fsr2h,f,c
  3479  0035FA  0060  F083  FFDF   	movff	UART1_Write@txData,indf2
  3480  003600                     
  3481                           ; BSR set to: 57
  3482  003600  2A33               	incf	_uart1TxHead^0,f,c	;volatile
  3483  003602                     
  3484                           ; BSR set to: 57
  3485                           ;mcc_generated_files/uart1.c: 216:         if(sizeof(uart1TxBuffer) <= uart1TxHead)
  3486  003602  0E07               	movlw	7
  3487  003604  6433               	cpfsgt	_uart1TxHead^0,c	;volatile
  3488  003606  EF07  F01B         	goto	u4281
  3489  00360A  EF09  F01B         	goto	u4280
  3490  00360E                     u4281:
  3491  00360E  EF0B  F01B         	goto	l5516
  3492  003612                     u4280:
  3493  003612                     
  3494                           ; BSR set to: 57
  3495                           ;mcc_generated_files/uart1.c: 217:         {;mcc_generated_files/uart1.c: 218:          
      +                             uart1TxHead = 0;
  3496  003612  0E00               	movlw	0
  3497  003614  6E33               	movwf	_uart1TxHead^0,c	;volatile
  3498  003616                     l5516:
  3499                           
  3500                           ; BSR set to: 57
  3501                           ;mcc_generated_files/uart1.c: 220:         uart1TxBufferRemaining--;
  3502  003616  0640               	decf	_uart1TxBufferRemaining^0,f,c	;volatile
  3503  003618                     l5518:
  3504                           
  3505                           ; BSR set to: 57
  3506                           ;mcc_generated_files/uart1.c: 222:     PIE3bits.U1TXIE = 1;
  3507  003618  8993               	bsf	147,4,b	;volatile
  3508  00361A                     
  3509                           ; BSR set to: 57
  3510  00361A  0012               	return		;funcret
  3511  00361C                     __end_of_UART1_Write:
  3512                           	callstack 0
  3513                           
  3514 ;; *************** function _abs *****************
  3515 ;; Defined at:
  3516 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\abs.c"
  3517 ;; Parameters:    Size  Location     Type
  3518 ;;  a               2   16[BANK0 ] int 
  3519 ;; Auto vars:     Size  Location     Type
  3520 ;;		None
  3521 ;; Return value:  Size  Location     Type
  3522 ;;                  2   16[BANK0 ] int 
  3523 ;; Registers used:
  3524 ;;		wreg, status,2, status,0
  3525 ;; Tracked objects:
  3526 ;;		On entry : 0/0
  3527 ;;		On exit  : 0/0
  3528 ;;		Unchanged: 0/0
  3529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3530 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3532 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3533 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3534 ;;Total ram usage:        4 bytes
  3535 ;; Hardware stack levels used: 1
  3536 ;; Hardware stack levels required when called: 8
  3537 ;; This function calls:
  3538 ;;		Nothing
  3539 ;; This function is called by:
  3540 ;;		_dtoa
  3541 ;; This function uses a non-reentrant model
  3542 ;;
  3543                           
  3544                           	psect	text15
  3545  003A54                     __ptext15:
  3546                           	callstack 0
  3547  003A54                     _abs:
  3548                           	callstack 16
  3549  003A54  0100               	movlb	0	; () banked
  3550  003A56  BF71               	btfsc	(abs@a+1)& (0+255),7,b
  3551  003A58  EF38  F01D         	goto	u4520
  3552  003A5C  5171               	movf	(abs@a+1)& (0+255),w,b
  3553  003A5E  E106               	bnz	u4521
  3554  003A60  0570               	decf	abs@a& (0+255),w,b
  3555  003A62  B0D8               	btfsc	status,0,c
  3556  003A64  EF36  F01D         	goto	u4521
  3557  003A68  EF38  F01D         	goto	u4520
  3558  003A6C                     u4521:
  3559  003A6C  EF46  F01D         	goto	l2089
  3560  003A70                     u4520:
  3561  003A70                     
  3562                           ; BSR set to: 0
  3563  003A70  C070  F072         	movff	abs@a,??_abs
  3564  003A74  C071  F073         	movff	abs@a+1,??_abs+1
  3565  003A78  1F72               	comf	??_abs& (0+255),f,b
  3566  003A7A  1F73               	comf	(??_abs+1)& (0+255),f,b
  3567  003A7C  4B72               	infsnz	??_abs& (0+255),f,b
  3568  003A7E  2B73               	incf	(??_abs+1)& (0+255),f,b
  3569  003A80  C072  F070         	movff	??_abs,?_abs
  3570  003A84  C073  F071         	movff	??_abs+1,?_abs+1
  3571  003A88  EF4A  F01D         	goto	l2092
  3572  003A8C                     l2089:
  3573                           
  3574                           ; BSR set to: 0
  3575  003A8C  C070  F070         	movff	abs@a,?_abs
  3576  003A90  C071  F071         	movff	abs@a+1,?_abs+1
  3577  003A94                     l2092:
  3578                           
  3579                           ; BSR set to: 0
  3580  003A94  0012               	return		;funcret
  3581  003A96                     __end_of_abs:
  3582                           	callstack 0
  3583                           
  3584 ;; *************** function ___aomod *****************
  3585 ;; Defined at:
  3586 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aomod.c"
  3587 ;; Parameters:    Size  Location     Type
  3588 ;;  dividend        8    0[BANK0 ] long long 
  3589 ;;  divisor         8    8[BANK0 ] long long 
  3590 ;; Auto vars:     Size  Location     Type
  3591 ;;  sign            1   32[COMRAM] unsigned char 
  3592 ;;  counter         1   31[COMRAM] unsigned char 
  3593 ;; Return value:  Size  Location     Type
  3594 ;;                  8    0[BANK0 ] long long 
  3595 ;; Registers used:
  3596 ;;		wreg, status,2, status,0
  3597 ;; Tracked objects:
  3598 ;;		On entry : 0/0
  3599 ;;		On exit  : 0/0
  3600 ;;		Unchanged: 0/0
  3601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3602 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3603 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3605 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3606 ;;Total ram usage:       18 bytes
  3607 ;; Hardware stack levels used: 1
  3608 ;; Hardware stack levels required when called: 8
  3609 ;; This function calls:
  3610 ;;		Nothing
  3611 ;; This function is called by:
  3612 ;;		_dtoa
  3613 ;; This function uses a non-reentrant model
  3614 ;;
  3615                           
  3616                           	psect	text16
  3617  0027B8                     __ptext16:
  3618                           	callstack 0
  3619  0027B8                     ___aomod:
  3620                           	callstack 16
  3621  0027B8  0E00               	movlw	0
  3622  0027BA  6E21               	movwf	___aomod@sign^0,c
  3623  0027BC  0100               	movlb	0	; () banked
  3624  0027BE  BF67               	btfsc	(___aomod@dividend+7)& (0+255),7,b
  3625  0027C0  EFE6  F013         	goto	u4420
  3626  0027C4  EFE4  F013         	goto	u4421
  3627  0027C8                     u4421:
  3628  0027C8  EFF8  F013         	goto	l5606
  3629  0027CC                     u4420:
  3630  0027CC                     
  3631                           ; BSR set to: 0
  3632  0027CC  1F67               	comf	(___aomod@dividend+7)& (0+255),f,b
  3633  0027CE  1F66               	comf	(___aomod@dividend+6)& (0+255),f,b
  3634  0027D0  1F65               	comf	(___aomod@dividend+5)& (0+255),f,b
  3635  0027D2  1F64               	comf	(___aomod@dividend+4)& (0+255),f,b
  3636  0027D4  1F63               	comf	(___aomod@dividend+3)& (0+255),f,b
  3637  0027D6  1F62               	comf	(___aomod@dividend+2)& (0+255),f,b
  3638  0027D8  1F61               	comf	(___aomod@dividend+1)& (0+255),f,b
  3639  0027DA  6D60               	negf	___aomod@dividend& (0+255),b
  3640  0027DC  0E00               	movlw	0
  3641  0027DE  2361               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  3642  0027E0  2362               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  3643  0027E2  2363               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  3644  0027E4  2364               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  3645  0027E6  2365               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  3646  0027E8  2366               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  3647  0027EA  2367               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  3648  0027EC                     
  3649                           ; BSR set to: 0
  3650  0027EC  0E01               	movlw	1
  3651  0027EE  6E21               	movwf	___aomod@sign^0,c
  3652  0027F0                     l5606:
  3653                           
  3654                           ; BSR set to: 0
  3655  0027F0  BF6F               	btfsc	(___aomod@divisor+7)& (0+255),7,b
  3656  0027F2  EFFF  F013         	goto	u4430
  3657  0027F6  EFFD  F013         	goto	u4431
  3658  0027FA                     u4431:
  3659  0027FA  EF0F  F014         	goto	l5610
  3660  0027FE                     u4430:
  3661  0027FE                     
  3662                           ; BSR set to: 0
  3663  0027FE  1F6F               	comf	(___aomod@divisor+7)& (0+255),f,b
  3664  002800  1F6E               	comf	(___aomod@divisor+6)& (0+255),f,b
  3665  002802  1F6D               	comf	(___aomod@divisor+5)& (0+255),f,b
  3666  002804  1F6C               	comf	(___aomod@divisor+4)& (0+255),f,b
  3667  002806  1F6B               	comf	(___aomod@divisor+3)& (0+255),f,b
  3668  002808  1F6A               	comf	(___aomod@divisor+2)& (0+255),f,b
  3669  00280A  1F69               	comf	(___aomod@divisor+1)& (0+255),f,b
  3670  00280C  6D68               	negf	___aomod@divisor& (0+255),b
  3671  00280E  0E00               	movlw	0
  3672  002810  2369               	addwfc	(___aomod@divisor+1)& (0+255),f,b
  3673  002812  236A               	addwfc	(___aomod@divisor+2)& (0+255),f,b
  3674  002814  236B               	addwfc	(___aomod@divisor+3)& (0+255),f,b
  3675  002816  236C               	addwfc	(___aomod@divisor+4)& (0+255),f,b
  3676  002818  236D               	addwfc	(___aomod@divisor+5)& (0+255),f,b
  3677  00281A  236E               	addwfc	(___aomod@divisor+6)& (0+255),f,b
  3678  00281C  236F               	addwfc	(___aomod@divisor+7)& (0+255),f,b
  3679  00281E                     l5610:
  3680                           
  3681                           ; BSR set to: 0
  3682  00281E  5168               	movf	___aomod@divisor& (0+255),w,b
  3683  002820  1169               	iorwf	(___aomod@divisor+1)& (0+255),w,b
  3684  002822  116A               	iorwf	(___aomod@divisor+2)& (0+255),w,b
  3685  002824  116B               	iorwf	(___aomod@divisor+3)& (0+255),w,b
  3686  002826  116C               	iorwf	(___aomod@divisor+4)& (0+255),w,b
  3687  002828  116D               	iorwf	(___aomod@divisor+5)& (0+255),w,b
  3688  00282A  116E               	iorwf	(___aomod@divisor+6)& (0+255),w,b
  3689  00282C  116F               	iorwf	(___aomod@divisor+7)& (0+255),w,b
  3690  00282E  B4D8               	btfsc	status,2,c
  3691  002830  EF1C  F014         	goto	u4441
  3692  002834  EF1E  F014         	goto	u4440
  3693  002838                     u4441:
  3694  002838  EF66  F014         	goto	l5626
  3695  00283C                     u4440:
  3696  00283C                     
  3697                           ; BSR set to: 0
  3698  00283C  0E01               	movlw	1
  3699  00283E  6E20               	movwf	___aomod@counter^0,c
  3700  002840  EF2C  F014         	goto	l5616
  3701  002844                     l5614:
  3702                           
  3703                           ; BSR set to: 0
  3704  002844  90D8               	bcf	status,0,c
  3705  002846  3768               	rlcf	___aomod@divisor& (0+255),f,b
  3706  002848  3769               	rlcf	(___aomod@divisor+1)& (0+255),f,b
  3707  00284A  376A               	rlcf	(___aomod@divisor+2)& (0+255),f,b
  3708  00284C  376B               	rlcf	(___aomod@divisor+3)& (0+255),f,b
  3709  00284E  376C               	rlcf	(___aomod@divisor+4)& (0+255),f,b
  3710  002850  376D               	rlcf	(___aomod@divisor+5)& (0+255),f,b
  3711  002852  376E               	rlcf	(___aomod@divisor+6)& (0+255),f,b
  3712  002854  376F               	rlcf	(___aomod@divisor+7)& (0+255),f,b
  3713  002856  2A20               	incf	___aomod@counter^0,f,c
  3714  002858                     l5616:
  3715                           
  3716                           ; BSR set to: 0
  3717  002858  AF6F               	btfss	(___aomod@divisor+7)& (0+255),7,b
  3718  00285A  EF31  F014         	goto	u4451
  3719  00285E  EF33  F014         	goto	u4450
  3720  002862                     u4451:
  3721  002862  EF22  F014         	goto	l5614
  3722  002866                     u4450:
  3723  002866                     l5618:
  3724                           
  3725                           ; BSR set to: 0
  3726  002866  5168               	movf	___aomod@divisor& (0+255),w,b
  3727  002868  5D60               	subwf	___aomod@dividend& (0+255),w,b
  3728  00286A  5169               	movf	(___aomod@divisor+1)& (0+255),w,b
  3729  00286C  5961               	subwfb	(___aomod@dividend+1)& (0+255),w,b
  3730  00286E  516A               	movf	(___aomod@divisor+2)& (0+255),w,b
  3731  002870  5962               	subwfb	(___aomod@dividend+2)& (0+255),w,b
  3732  002872  516B               	movf	(___aomod@divisor+3)& (0+255),w,b
  3733  002874  5963               	subwfb	(___aomod@dividend+3)& (0+255),w,b
  3734  002876  516C               	movf	(___aomod@divisor+4)& (0+255),w,b
  3735  002878  5964               	subwfb	(___aomod@dividend+4)& (0+255),w,b
  3736  00287A  516D               	movf	(___aomod@divisor+5)& (0+255),w,b
  3737  00287C  5965               	subwfb	(___aomod@dividend+5)& (0+255),w,b
  3738  00287E  516E               	movf	(___aomod@divisor+6)& (0+255),w,b
  3739  002880  5966               	subwfb	(___aomod@dividend+6)& (0+255),w,b
  3740  002882  516F               	movf	(___aomod@divisor+7)& (0+255),w,b
  3741  002884  5967               	subwfb	(___aomod@dividend+7)& (0+255),w,b
  3742  002886  A0D8               	btfss	status,0,c
  3743  002888  EF48  F014         	goto	u4461
  3744  00288C  EF4A  F014         	goto	u4460
  3745  002890                     u4461:
  3746  002890  EF5A  F014         	goto	l5622
  3747  002894                     u4460:
  3748  002894                     
  3749                           ; BSR set to: 0
  3750  002894  5168               	movf	___aomod@divisor& (0+255),w,b
  3751  002896  5F60               	subwf	___aomod@dividend& (0+255),f,b
  3752  002898  5169               	movf	(___aomod@divisor+1)& (0+255),w,b
  3753  00289A  5B61               	subwfb	(___aomod@dividend+1)& (0+255),f,b
  3754  00289C  516A               	movf	(___aomod@divisor+2)& (0+255),w,b
  3755  00289E  5B62               	subwfb	(___aomod@dividend+2)& (0+255),f,b
  3756  0028A0  516B               	movf	(___aomod@divisor+3)& (0+255),w,b
  3757  0028A2  5B63               	subwfb	(___aomod@dividend+3)& (0+255),f,b
  3758  0028A4  516C               	movf	(___aomod@divisor+4)& (0+255),w,b
  3759  0028A6  5B64               	subwfb	(___aomod@dividend+4)& (0+255),f,b
  3760  0028A8  516D               	movf	(___aomod@divisor+5)& (0+255),w,b
  3761  0028AA  5B65               	subwfb	(___aomod@dividend+5)& (0+255),f,b
  3762  0028AC  516E               	movf	(___aomod@divisor+6)& (0+255),w,b
  3763  0028AE  5B66               	subwfb	(___aomod@dividend+6)& (0+255),f,b
  3764  0028B0  516F               	movf	(___aomod@divisor+7)& (0+255),w,b
  3765  0028B2  5B67               	subwfb	(___aomod@dividend+7)& (0+255),f,b
  3766  0028B4                     l5622:
  3767                           
  3768                           ; BSR set to: 0
  3769  0028B4  90D8               	bcf	status,0,c
  3770  0028B6  336F               	rrcf	(___aomod@divisor+7)& (0+255),f,b
  3771  0028B8  336E               	rrcf	(___aomod@divisor+6)& (0+255),f,b
  3772  0028BA  336D               	rrcf	(___aomod@divisor+5)& (0+255),f,b
  3773  0028BC  336C               	rrcf	(___aomod@divisor+4)& (0+255),f,b
  3774  0028BE  336B               	rrcf	(___aomod@divisor+3)& (0+255),f,b
  3775  0028C0  336A               	rrcf	(___aomod@divisor+2)& (0+255),f,b
  3776  0028C2  3369               	rrcf	(___aomod@divisor+1)& (0+255),f,b
  3777  0028C4  3368               	rrcf	___aomod@divisor& (0+255),f,b
  3778  0028C6                     
  3779                           ; BSR set to: 0
  3780  0028C6  2E20               	decfsz	___aomod@counter^0,f,c
  3781  0028C8  EF33  F014         	goto	l5618
  3782  0028CC                     l5626:
  3783                           
  3784                           ; BSR set to: 0
  3785  0028CC  5021               	movf	___aomod@sign^0,w,c
  3786  0028CE  B4D8               	btfsc	status,2,c
  3787  0028D0  EF6C  F014         	goto	u4471
  3788  0028D4  EF6E  F014         	goto	u4470
  3789  0028D8                     u4471:
  3790  0028D8  EF7E  F014         	goto	l5630
  3791  0028DC                     u4470:
  3792  0028DC                     
  3793                           ; BSR set to: 0
  3794  0028DC  1F67               	comf	(___aomod@dividend+7)& (0+255),f,b
  3795  0028DE  1F66               	comf	(___aomod@dividend+6)& (0+255),f,b
  3796  0028E0  1F65               	comf	(___aomod@dividend+5)& (0+255),f,b
  3797  0028E2  1F64               	comf	(___aomod@dividend+4)& (0+255),f,b
  3798  0028E4  1F63               	comf	(___aomod@dividend+3)& (0+255),f,b
  3799  0028E6  1F62               	comf	(___aomod@dividend+2)& (0+255),f,b
  3800  0028E8  1F61               	comf	(___aomod@dividend+1)& (0+255),f,b
  3801  0028EA  6D60               	negf	___aomod@dividend& (0+255),b
  3802  0028EC  0E00               	movlw	0
  3803  0028EE  2361               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  3804  0028F0  2362               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  3805  0028F2  2363               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  3806  0028F4  2364               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  3807  0028F6  2365               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  3808  0028F8  2366               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  3809  0028FA  2367               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  3810  0028FC                     l5630:
  3811                           
  3812                           ; BSR set to: 0
  3813  0028FC  C060  F060         	movff	___aomod@dividend,?___aomod
  3814  002900  C061  F061         	movff	___aomod@dividend+1,?___aomod+1
  3815  002904  C062  F062         	movff	___aomod@dividend+2,?___aomod+2
  3816  002908  C063  F063         	movff	___aomod@dividend+3,?___aomod+3
  3817  00290C  C064  F064         	movff	___aomod@dividend+4,?___aomod+4
  3818  002910  C065  F065         	movff	___aomod@dividend+5,?___aomod+5
  3819  002914  C066  F066         	movff	___aomod@dividend+6,?___aomod+6
  3820  002918  C067  F067         	movff	___aomod@dividend+7,?___aomod+7
  3821  00291C                     
  3822                           ; BSR set to: 0
  3823  00291C  0012               	return		;funcret
  3824  00291E                     __end_of___aomod:
  3825                           	callstack 0
  3826                           
  3827 ;; *************** function ___aodiv *****************
  3828 ;; Defined at:
  3829 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aodiv.c"
  3830 ;; Parameters:    Size  Location     Type
  3831 ;;  dividend        8    0[BANK0 ] long long 
  3832 ;;  divisor         8    8[BANK0 ] long long 
  3833 ;; Auto vars:     Size  Location     Type
  3834 ;;  quotient        8   18[BANK0 ] long long 
  3835 ;;  sign            1   17[BANK0 ] unsigned char 
  3836 ;;  counter         1   16[BANK0 ] unsigned char 
  3837 ;; Return value:  Size  Location     Type
  3838 ;;                  8    0[BANK0 ] long long 
  3839 ;; Registers used:
  3840 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3841 ;; Tracked objects:
  3842 ;;		On entry : 0/0
  3843 ;;		On exit  : 0/0
  3844 ;;		Unchanged: 0/0
  3845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3846 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3847 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3849 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3850 ;;Total ram usage:       26 bytes
  3851 ;; Hardware stack levels used: 1
  3852 ;; Hardware stack levels required when called: 8
  3853 ;; This function calls:
  3854 ;;		Nothing
  3855 ;; This function is called by:
  3856 ;;		_dtoa
  3857 ;; This function uses a non-reentrant model
  3858 ;;
  3859                           
  3860                           	psect	text17
  3861  00262E                     __ptext17:
  3862                           	callstack 0
  3863  00262E                     ___aodiv:
  3864                           	callstack 16
  3865  00262E  0E00               	movlw	0
  3866  002630  0100               	movlb	0	; () banked
  3867  002632  6F71               	movwf	___aodiv@sign& (0+255),b
  3868  002634                     
  3869                           ; BSR set to: 0
  3870  002634  BF6F               	btfsc	(___aodiv@divisor+7)& (0+255),7,b
  3871  002636  EF21  F013         	goto	u4350
  3872  00263A  EF1F  F013         	goto	u4351
  3873  00263E                     u4351:
  3874  00263E  EF33  F013         	goto	l5562
  3875  002642                     u4350:
  3876  002642                     
  3877                           ; BSR set to: 0
  3878  002642  1F6F               	comf	(___aodiv@divisor+7)& (0+255),f,b
  3879  002644  1F6E               	comf	(___aodiv@divisor+6)& (0+255),f,b
  3880  002646  1F6D               	comf	(___aodiv@divisor+5)& (0+255),f,b
  3881  002648  1F6C               	comf	(___aodiv@divisor+4)& (0+255),f,b
  3882  00264A  1F6B               	comf	(___aodiv@divisor+3)& (0+255),f,b
  3883  00264C  1F6A               	comf	(___aodiv@divisor+2)& (0+255),f,b
  3884  00264E  1F69               	comf	(___aodiv@divisor+1)& (0+255),f,b
  3885  002650  6D68               	negf	___aodiv@divisor& (0+255),b
  3886  002652  0E00               	movlw	0
  3887  002654  2369               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
  3888  002656  236A               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
  3889  002658  236B               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
  3890  00265A  236C               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
  3891  00265C  236D               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
  3892  00265E  236E               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
  3893  002660  236F               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
  3894  002662                     
  3895                           ; BSR set to: 0
  3896  002662  0E01               	movlw	1
  3897  002664  6F71               	movwf	___aodiv@sign& (0+255),b
  3898  002666                     l5562:
  3899                           
  3900                           ; BSR set to: 0
  3901  002666  BF67               	btfsc	(___aodiv@dividend+7)& (0+255),7,b
  3902  002668  EF3A  F013         	goto	u4360
  3903  00266C  EF38  F013         	goto	u4361
  3904  002670                     u4361:
  3905  002670  EF4C  F013         	goto	l5568
  3906  002674                     u4360:
  3907  002674                     
  3908                           ; BSR set to: 0
  3909  002674  1F67               	comf	(___aodiv@dividend+7)& (0+255),f,b
  3910  002676  1F66               	comf	(___aodiv@dividend+6)& (0+255),f,b
  3911  002678  1F65               	comf	(___aodiv@dividend+5)& (0+255),f,b
  3912  00267A  1F64               	comf	(___aodiv@dividend+4)& (0+255),f,b
  3913  00267C  1F63               	comf	(___aodiv@dividend+3)& (0+255),f,b
  3914  00267E  1F62               	comf	(___aodiv@dividend+2)& (0+255),f,b
  3915  002680  1F61               	comf	(___aodiv@dividend+1)& (0+255),f,b
  3916  002682  6D60               	negf	___aodiv@dividend& (0+255),b
  3917  002684  0E00               	movlw	0
  3918  002686  2361               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
  3919  002688  2362               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
  3920  00268A  2363               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
  3921  00268C  2364               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
  3922  00268E  2365               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
  3923  002690  2366               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
  3924  002692  2367               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
  3925  002694                     
  3926                           ; BSR set to: 0
  3927  002694  0E01               	movlw	1
  3928  002696  1B71               	xorwf	___aodiv@sign& (0+255),f,b
  3929  002698                     l5568:
  3930                           
  3931                           ; BSR set to: 0
  3932  002698  EE20  F072         	lfsr	2,___aodiv@quotient
  3933  00269C  0E07               	movlw	7
  3934  00269E                     u4371:
  3935  00269E  6ADE               	clrf	postinc2,c
  3936  0026A0  06E8               	decf	wreg,f,c
  3937  0026A2  E2FD               	bc	u4371
  3938  0026A4                     
  3939                           ; BSR set to: 0
  3940  0026A4  5168               	movf	___aodiv@divisor& (0+255),w,b
  3941  0026A6  1169               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
  3942  0026A8  116A               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
  3943  0026AA  116B               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
  3944  0026AC  116C               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
  3945  0026AE  116D               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
  3946  0026B0  116E               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
  3947  0026B2  116F               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
  3948  0026B4  B4D8               	btfsc	status,2,c
  3949  0026B6  EF5F  F013         	goto	u4381
  3950  0026BA  EF61  F013         	goto	u4380
  3951  0026BE                     u4381:
  3952  0026BE  EFB3  F013         	goto	l5590
  3953  0026C2                     u4380:
  3954  0026C2                     
  3955                           ; BSR set to: 0
  3956  0026C2  0E01               	movlw	1
  3957  0026C4  6F70               	movwf	___aodiv@counter& (0+255),b
  3958  0026C6  EF6F  F013         	goto	l5576
  3959  0026CA                     l5574:
  3960                           
  3961                           ; BSR set to: 0
  3962  0026CA  90D8               	bcf	status,0,c
  3963  0026CC  3768               	rlcf	___aodiv@divisor& (0+255),f,b
  3964  0026CE  3769               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
  3965  0026D0  376A               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
  3966  0026D2  376B               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
  3967  0026D4  376C               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
  3968  0026D6  376D               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
  3969  0026D8  376E               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
  3970  0026DA  376F               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
  3971  0026DC  2B70               	incf	___aodiv@counter& (0+255),f,b
  3972  0026DE                     l5576:
  3973                           
  3974                           ; BSR set to: 0
  3975  0026DE  AF6F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  3976  0026E0  EF74  F013         	goto	u4391
  3977  0026E4  EF76  F013         	goto	u4390
  3978  0026E8                     u4391:
  3979  0026E8  EF65  F013         	goto	l5574
  3980  0026EC                     u4390:
  3981  0026EC                     l5578:
  3982                           
  3983                           ; BSR set to: 0
  3984  0026EC  90D8               	bcf	status,0,c
  3985  0026EE  3772               	rlcf	___aodiv@quotient& (0+255),f,b
  3986  0026F0  3773               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
  3987  0026F2  3774               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
  3988  0026F4  3775               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
  3989  0026F6  3776               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
  3990  0026F8  3777               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
  3991  0026FA  3778               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
  3992  0026FC  3779               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
  3993  0026FE                     
  3994                           ; BSR set to: 0
  3995  0026FE  5168               	movf	___aodiv@divisor& (0+255),w,b
  3996  002700  5D60               	subwf	___aodiv@dividend& (0+255),w,b
  3997  002702  5169               	movf	(___aodiv@divisor+1)& (0+255),w,b
  3998  002704  5961               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
  3999  002706  516A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  4000  002708  5962               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
  4001  00270A  516B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  4002  00270C  5963               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
  4003  00270E  516C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  4004  002710  5964               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
  4005  002712  516D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  4006  002714  5965               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
  4007  002716  516E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  4008  002718  5966               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
  4009  00271A  516F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  4010  00271C  5967               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
  4011  00271E  A0D8               	btfss	status,0,c
  4012  002720  EF94  F013         	goto	u4401
  4013  002724  EF96  F013         	goto	u4400
  4014  002728                     u4401:
  4015  002728  EFA7  F013         	goto	l5586
  4016  00272C                     u4400:
  4017  00272C                     
  4018                           ; BSR set to: 0
  4019  00272C  5168               	movf	___aodiv@divisor& (0+255),w,b
  4020  00272E  5F60               	subwf	___aodiv@dividend& (0+255),f,b
  4021  002730  5169               	movf	(___aodiv@divisor+1)& (0+255),w,b
  4022  002732  5B61               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
  4023  002734  516A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  4024  002736  5B62               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
  4025  002738  516B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  4026  00273A  5B63               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
  4027  00273C  516C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  4028  00273E  5B64               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
  4029  002740  516D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  4030  002742  5B65               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
  4031  002744  516E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  4032  002746  5B66               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
  4033  002748  516F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  4034  00274A  5B67               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
  4035  00274C                     
  4036                           ; BSR set to: 0
  4037  00274C  8172               	bsf	___aodiv@quotient& (0+255),0,b
  4038  00274E                     l5586:
  4039                           
  4040                           ; BSR set to: 0
  4041  00274E  90D8               	bcf	status,0,c
  4042  002750  336F               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
  4043  002752  336E               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
  4044  002754  336D               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
  4045  002756  336C               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
  4046  002758  336B               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
  4047  00275A  336A               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
  4048  00275C  3369               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
  4049  00275E  3368               	rrcf	___aodiv@divisor& (0+255),f,b
  4050  002760                     
  4051                           ; BSR set to: 0
  4052  002760  2F70               	decfsz	___aodiv@counter& (0+255),f,b
  4053  002762  EF76  F013         	goto	l5578
  4054  002766                     l5590:
  4055                           
  4056                           ; BSR set to: 0
  4057  002766  5171               	movf	___aodiv@sign& (0+255),w,b
  4058  002768  B4D8               	btfsc	status,2,c
  4059  00276A  EFB9  F013         	goto	u4411
  4060  00276E  EFBB  F013         	goto	u4410
  4061  002772                     u4411:
  4062  002772  EFCB  F013         	goto	l5594
  4063  002776                     u4410:
  4064  002776                     
  4065                           ; BSR set to: 0
  4066  002776  1F79               	comf	(___aodiv@quotient+7)& (0+255),f,b
  4067  002778  1F78               	comf	(___aodiv@quotient+6)& (0+255),f,b
  4068  00277A  1F77               	comf	(___aodiv@quotient+5)& (0+255),f,b
  4069  00277C  1F76               	comf	(___aodiv@quotient+4)& (0+255),f,b
  4070  00277E  1F75               	comf	(___aodiv@quotient+3)& (0+255),f,b
  4071  002780  1F74               	comf	(___aodiv@quotient+2)& (0+255),f,b
  4072  002782  1F73               	comf	(___aodiv@quotient+1)& (0+255),f,b
  4073  002784  6D72               	negf	___aodiv@quotient& (0+255),b
  4074  002786  0E00               	movlw	0
  4075  002788  2373               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
  4076  00278A  2374               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
  4077  00278C  2375               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
  4078  00278E  2376               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
  4079  002790  2377               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
  4080  002792  2378               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
  4081  002794  2379               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
  4082  002796                     l5594:
  4083                           
  4084                           ; BSR set to: 0
  4085  002796  C072  F060         	movff	___aodiv@quotient,?___aodiv
  4086  00279A  C073  F061         	movff	___aodiv@quotient+1,?___aodiv+1
  4087  00279E  C074  F062         	movff	___aodiv@quotient+2,?___aodiv+2
  4088  0027A2  C075  F063         	movff	___aodiv@quotient+3,?___aodiv+3
  4089  0027A6  C076  F064         	movff	___aodiv@quotient+4,?___aodiv+4
  4090  0027AA  C077  F065         	movff	___aodiv@quotient+5,?___aodiv+5
  4091  0027AE  C078  F066         	movff	___aodiv@quotient+6,?___aodiv+6
  4092  0027B2  C079  F067         	movff	___aodiv@quotient+7,?___aodiv+7
  4093  0027B6                     
  4094                           ; BSR set to: 0
  4095  0027B6  0012               	return		;funcret
  4096  0027B8                     __end_of___aodiv:
  4097                           	callstack 0
  4098                           
  4099 ;; *************** function _ADCC_GetSingleConversion *****************
  4100 ;; Defined at:
  4101 ;;		line 137 in file "mcc_generated_files/adcc.c"
  4102 ;; Parameters:    Size  Location     Type
  4103 ;;  channel         1    wreg     enum E16067
  4104 ;; Auto vars:     Size  Location     Type
  4105 ;;  channel         1   33[COMRAM] enum E16067
  4106 ;; Return value:  Size  Location     Type
  4107 ;;                  2   31[COMRAM] unsigned short 
  4108 ;; Registers used:
  4109 ;;		wreg, status,2, status,0
  4110 ;; Tracked objects:
  4111 ;;		On entry : 0/0
  4112 ;;		On exit  : 0/0
  4113 ;;		Unchanged: 0/0
  4114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4115 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4116 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4117 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4118 ;;      Totals:         3       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4119 ;;Total ram usage:        5 bytes
  4120 ;; Hardware stack levels used: 1
  4121 ;; Hardware stack levels required when called: 8
  4122 ;; This function calls:
  4123 ;;		Nothing
  4124 ;; This function is called by:
  4125 ;;		_getBatteryVoltage
  4126 ;; This function uses a non-reentrant model
  4127 ;;
  4128                           
  4129                           	psect	text18
  4130  003AD2                     __ptext18:
  4131                           	callstack 0
  4132  003AD2                     _ADCC_GetSingleConversion:
  4133                           	callstack 20
  4134                           
  4135                           ; BSR set to: 0
  4136                           ;incstack = 0
  4137                           ;ADCC_GetSingleConversion@channel stored from wreg
  4138  003AD2  6E22               	movwf	ADCC_GetSingleConversion@channel^0,c
  4139  003AD4                     
  4140                           ;mcc_generated_files/adcc.c: 137: adc_result_t ADCC_GetSingleConversion(adcc_channel_t c
      +                          hannel);mcc_generated_files/adcc.c: 138: {;mcc_generated_files/adcc.c: 140:     ADPCH = 
      +                          channel;
  4141  003AD4  0060  F08B  FEF1   	movff	ADCC_GetSingleConversion@channel,16113	;volatile
  4142  003ADA                     
  4143                           ;mcc_generated_files/adcc.c: 143:     ADCON0bits.ADON = 1;
  4144  003ADA  013E               	movlb	62	; () banked
  4145  003ADC  8FF8               	bsf	248,7,b	;volatile
  4146  003ADE                     
  4147                           ; BSR set to: 62
  4148                           ;mcc_generated_files/adcc.c: 146:     ADCON0bits.ADCONT = 0;
  4149  003ADE  9DF8               	bcf	248,6,b	;volatile
  4150  003AE0                     
  4151                           ; BSR set to: 62
  4152                           ;mcc_generated_files/adcc.c: 149:     ADCON0bits.ADGO = 1;
  4153  003AE0  81F8               	bsf	248,0,b	;volatile
  4154  003AE2                     l1054:
  4155                           
  4156                           ; BSR set to: 62
  4157                           ;mcc_generated_files/adcc.c: 153:     while (ADCON0bits.ADGO)
  4158  003AE2  B1F8               	btfsc	248,0,b	;volatile
  4159  003AE4  EF76  F01D         	goto	u4891
  4160  003AE8  EF78  F01D         	goto	u4890
  4161  003AEC                     u4891:
  4162  003AEC  EF71  F01D         	goto	l1054
  4163  003AF0                     u4890:
  4164  003AF0                     
  4165                           ; BSR set to: 62
  4166                           ;mcc_generated_files/adcc.c: 159:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  4167  003AF0  51F0               	movf	240,w,b	;volatile
  4168  003AF2  0100               	movlb	0	; () banked
  4169  003AF4  6F61               	movwf	(??_ADCC_GetSingleConversion+1)& (0+255),b
  4170  003AF6  6B60               	clrf	??_ADCC_GetSingleConversion& (0+255),b
  4171  003AF8  013E               	movlb	62	; () banked
  4172  003AFA  51EF               	movf	239,w,b	;volatile
  4173  003AFC  0100               	movlb	0	; () banked
  4174  003AFE  2560               	addwf	??_ADCC_GetSingleConversion& (0+255),w,b
  4175  003B00  6E20               	movwf	?_ADCC_GetSingleConversion^0,c
  4176  003B02  013E               	movlb	62	; () banked
  4177  003B04  0E00               	movlw	0
  4178  003B06  0100               	movlb	0	; () banked
  4179  003B08  2161               	addwfc	(??_ADCC_GetSingleConversion+1)& (0+255),w,b
  4180  003B0A  6E21               	movwf	(?_ADCC_GetSingleConversion+1)^0,c
  4181  003B0C                     
  4182                           ; BSR set to: 0
  4183  003B0C  0012               	return		;funcret
  4184  003B0E                     __end_of_ADCC_GetSingleConversion:
  4185                           	callstack 0
  4186                           
  4187 ;; *************** function _calcSteering *****************
  4188 ;; Defined at:
  4189 ;;		line 162 in file "main.c"
  4190 ;; Parameters:    Size  Location     Type
  4191 ;;		None
  4192 ;; Auto vars:     Size  Location     Type
  4193 ;;  delta           2   19[BANK0 ] short 
  4194 ;; Return value:  Size  Location     Type
  4195 ;;                  1    wreg      void 
  4196 ;; Registers used:
  4197 ;;		wreg, status,2, status,0, cstack
  4198 ;; Tracked objects:
  4199 ;;		On entry : 0/0
  4200 ;;		On exit  : 0/0
  4201 ;;		Unchanged: 0/0
  4202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4204 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4205 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4206 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4207 ;;Total ram usage:        4 bytes
  4208 ;; Hardware stack levels used: 1
  4209 ;; Hardware stack levels required when called: 10
  4210 ;; This function calls:
  4211 ;;		___awdiv
  4212 ;;		_setSteering
  4213 ;; This function is called by:
  4214 ;;		_loop
  4215 ;; This function uses a non-reentrant model
  4216 ;;
  4217                           
  4218                           	psect	text19
  4219  002A4E                     __ptext19:
  4220                           	callstack 0
  4221  002A4E                     _calcSteering:
  4222                           	callstack 19
  4223  002A4E                     
  4224                           ;main.c: 163:     int16_t delta = (int16_t)(distLeft - distRight ) - (int16_t)((0) * 1.4
      +                          142135);
  4225  002A4E  0100               	movlb	0	; () banked
  4226  002A50  51E6               	movf	_distRight& (0+255),w,b	;volatile
  4227  002A52  5DE8               	subwf	_distLeft& (0+255),w,b	;volatile
  4228  002A54  6F73               	movwf	calcSteering@delta& (0+255),b
  4229  002A56  51E7               	movf	(_distRight+1)& (0+255),w,b	;volatile
  4230  002A58  59E9               	subwfb	(_distLeft+1)& (0+255),w,b	;volatile
  4231  002A5A  6F74               	movwf	(calcSteering@delta+1)& (0+255),b
  4232  002A5C                     
  4233                           ; BSR set to: 0
  4234                           ;main.c: 164:     delta /= (2);
  4235  002A5C  C073  F060         	movff	calcSteering@delta,___awdiv@dividend
  4236  002A60  C074  F061         	movff	calcSteering@delta+1,___awdiv@dividend+1
  4237  002A64  0E00               	movlw	0
  4238  002A66  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  4239  002A68  0E02               	movlw	2
  4240  002A6A  6F62               	movwf	___awdiv@divisor& (0+255),b
  4241  002A6C  EC83  F018         	call	___awdiv	;wreg free
  4242  002A70  C060  F073         	movff	?___awdiv,calcSteering@delta
  4243  002A74  C061  F074         	movff	?___awdiv+1,calcSteering@delta+1
  4244                           
  4245                           ;main.c: 168:     switch (driveMode){
  4246  002A78  EF97  F015         	goto	l6440
  4247  002A7C                     l6416:
  4248                           
  4249                           ; BSR set to: 0
  4250                           ;main.c: 170:             setSteering(delta, Ratio);
  4251  002A7C  C073  F068         	movff	calcSteering@delta,setSteering@steering
  4252  002A80  C074  F069         	movff	calcSteering@delta+1,setSteering@steering+1
  4253  002A84  0E02               	movlw	2
  4254  002A86  6F6A               	movwf	setSteering@steeringMode& (0+255),b
  4255  002A88  EC5D  F010         	call	_setSteering	;wreg free
  4256                           
  4257                           ;main.c: 171:             break;
  4258  002A8C  EFB9  F015         	goto	l1280
  4259  002A90                     l6418:
  4260                           
  4261                           ; BSR set to: 0
  4262                           ;main.c: 173:             setSteering(delta, Front);
  4263  002A90  C073  F068         	movff	calcSteering@delta,setSteering@steering
  4264  002A94  C074  F069         	movff	calcSteering@delta+1,setSteering@steering+1
  4265  002A98  0E03               	movlw	3
  4266  002A9A  6F6A               	movwf	setSteering@steeringMode& (0+255),b
  4267  002A9C  EC5D  F010         	call	_setSteering	;wreg free
  4268                           
  4269                           ;main.c: 174:             break;
  4270  002AA0  EFB9  F015         	goto	l1280
  4271  002AA4                     l6420:
  4272                           
  4273                           ; BSR set to: 0
  4274                           ;main.c: 176:             if(distLeft < distRight){
  4275  002AA4  51E6               	movf	_distRight& (0+255),w,b	;volatile
  4276  002AA6  5DE8               	subwf	_distLeft& (0+255),w,b	;volatile
  4277  002AA8  51E7               	movf	(_distRight+1)& (0+255),w,b	;volatile
  4278  002AAA  59E9               	subwfb	(_distLeft+1)& (0+255),w,b	;volatile
  4279  002AAC  B0D8               	btfsc	status,0,c
  4280  002AAE  EF5B  F015         	goto	u5771
  4281  002AB2  EF5D  F015         	goto	u5770
  4282  002AB6                     u5771:
  4283  002AB6  EF67  F015         	goto	l6424
  4284  002ABA                     u5770:
  4285  002ABA                     
  4286                           ; BSR set to: 0
  4287                           ;main.c: 177:                 setSteering(-(65), Front);
  4288  002ABA  0EFF               	movlw	255
  4289  002ABC  6F69               	movwf	(setSteering@steering+1)& (0+255),b
  4290  002ABE  0EBF               	movlw	191
  4291  002AC0  6F68               	movwf	setSteering@steering& (0+255),b
  4292  002AC2  0E03               	movlw	3
  4293  002AC4  6F6A               	movwf	setSteering@steeringMode& (0+255),b
  4294  002AC6  EC5D  F010         	call	_setSteering	;wreg free
  4295                           
  4296                           ;main.c: 178:             }else{
  4297  002ACA  EFB9  F015         	goto	l1280
  4298  002ACE                     l6424:
  4299                           
  4300                           ; BSR set to: 0
  4301                           ;main.c: 179:                 setSteering((65), Front);
  4302  002ACE  0E00               	movlw	0
  4303  002AD0  6F69               	movwf	(setSteering@steering+1)& (0+255),b
  4304  002AD2  0E41               	movlw	65
  4305  002AD4  6F68               	movwf	setSteering@steering& (0+255),b
  4306  002AD6  0E03               	movlw	3
  4307  002AD8  6F6A               	movwf	setSteering@steeringMode& (0+255),b
  4308  002ADA  EC5D  F010         	call	_setSteering	;wreg free
  4309  002ADE  EFB9  F015         	goto	l1280
  4310  002AE2                     l6426:
  4311                           
  4312                           ; BSR set to: 0
  4313                           ;main.c: 183:             if(curveMode == InCurve){
  4314  002AE2  0E02               	movlw	2
  4315  002AE4  19EC               	xorwf	_curveMode& (0+255),w,b
  4316  002AE6  A4D8               	btfss	status,2,c
  4317  002AE8  EF78  F015         	goto	u5781
  4318  002AEC  EF7A  F015         	goto	u5780
  4319  002AF0                     u5781:
  4320  002AF0  EF48  F015         	goto	l6418
  4321  002AF4                     u5780:
  4322  002AF4                     
  4323                           ; BSR set to: 0
  4324                           ;main.c: 184:                 setSteering((65), Ratio);
  4325  002AF4  0E00               	movlw	0
  4326  002AF6  6F69               	movwf	(setSteering@steering+1)& (0+255),b
  4327  002AF8  0E41               	movlw	65
  4328  002AFA  6F68               	movwf	setSteering@steering& (0+255),b
  4329  002AFC  0E02               	movlw	2
  4330  002AFE  6F6A               	movwf	setSteering@steeringMode& (0+255),b
  4331  002B00  EC5D  F010         	call	_setSteering	;wreg free
  4332                           
  4333                           ;main.c: 185:             } else {
  4334  002B04  EFB9  F015         	goto	l1280
  4335  002B08                     l6432:
  4336                           
  4337                           ; BSR set to: 0
  4338                           ;main.c: 190:             if(curveMode == InCurve){
  4339  002B08  0E02               	movlw	2
  4340  002B0A  19EC               	xorwf	_curveMode& (0+255),w,b
  4341  002B0C  A4D8               	btfss	status,2,c
  4342  002B0E  EF8B  F015         	goto	u5791
  4343  002B12  EF8D  F015         	goto	u5790
  4344  002B16                     u5791:
  4345  002B16  EF48  F015         	goto	l6418
  4346  002B1A                     u5790:
  4347  002B1A                     
  4348                           ; BSR set to: 0
  4349                           ;main.c: 191:                 setSteering(-(65), Ratio);
  4350  002B1A  0EFF               	movlw	255
  4351  002B1C  6F69               	movwf	(setSteering@steering+1)& (0+255),b
  4352  002B1E  0EBF               	movlw	191
  4353  002B20  6F68               	movwf	setSteering@steering& (0+255),b
  4354  002B22  0E02               	movlw	2
  4355  002B24  6F6A               	movwf	setSteering@steeringMode& (0+255),b
  4356  002B26  EC5D  F010         	call	_setSteering	;wreg free
  4357                           
  4358                           ;main.c: 192:             } else {
  4359  002B2A  EFB9  F015         	goto	l1280
  4360  002B2E                     l6440:
  4361  002B2E  0100               	movlb	0	; () banked
  4362  002B30  51ED               	movf	_driveMode& (0+255),w,b
  4363  002B32  6F71               	movwf	??_calcSteering& (0+255),b
  4364  002B34  6B72               	clrf	(??_calcSteering+1)& (0+255),b
  4365                           
  4366                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4367                           ; Switch size 1, requested type "simple"
  4368                           ; Number of cases is 1, Range of values is 0 to 0
  4369                           ; switch strategies available:
  4370                           ; Name         Instructions Cycles
  4371                           ; simple_byte            4     3 (average)
  4372                           ;	Chosen strategy is simple_byte
  4373  002B36  5172               	movf	(??_calcSteering+1)& (0+255),w,b
  4374  002B38  0A00               	xorlw	0	; case 0
  4375  002B3A  B4D8               	btfsc	status,2,c
  4376  002B3C  EFA2  F015         	goto	l6678
  4377  002B40  EFB9  F015         	goto	l1280
  4378  002B44                     l6678:
  4379                           
  4380                           ; BSR set to: 0
  4381                           ; Switch size 1, requested type "simple"
  4382                           ; Number of cases is 5, Range of values is 0 to 4
  4383                           ; switch strategies available:
  4384                           ; Name         Instructions Cycles
  4385                           ; simple_byte           16     9 (average)
  4386                           ;	Chosen strategy is simple_byte
  4387  002B44  5171               	movf	??_calcSteering& (0+255),w,b
  4388  002B46  0A00               	xorlw	0	; case 0
  4389  002B48  B4D8               	btfsc	status,2,c
  4390  002B4A  EF48  F015         	goto	l6418
  4391  002B4E  0A01               	xorlw	1	; case 1
  4392  002B50  B4D8               	btfsc	status,2,c
  4393  002B52  EF3E  F015         	goto	l6416
  4394  002B56  0A03               	xorlw	3	; case 2
  4395  002B58  B4D8               	btfsc	status,2,c
  4396  002B5A  EF52  F015         	goto	l6420
  4397  002B5E  0A01               	xorlw	1	; case 3
  4398  002B60  B4D8               	btfsc	status,2,c
  4399  002B62  EF71  F015         	goto	l6426
  4400  002B66  0A07               	xorlw	7	; case 4
  4401  002B68  B4D8               	btfsc	status,2,c
  4402  002B6A  EF84  F015         	goto	l6432
  4403  002B6E  EFB9  F015         	goto	l1280
  4404  002B72                     l1280:
  4405  002B72  0012               	return		;funcret
  4406  002B74                     __end_of_calcSteering:
  4407                           	callstack 0
  4408                           
  4409 ;; *************** function _setSteering *****************
  4410 ;; Defined at:
  4411 ;;		line 202 in file "main.c"
  4412 ;; Parameters:    Size  Location     Type
  4413 ;;  steering        2    8[BANK0 ] short 
  4414 ;;  steeringMode    1   10[BANK0 ] enum E17298
  4415 ;; Auto vars:     Size  Location     Type
  4416 ;;  steeringB       2   15[BANK0 ] short 
  4417 ;;  steeringF       2   13[BANK0 ] short 
  4418 ;; Return value:  Size  Location     Type
  4419 ;;                  1    wreg      void 
  4420 ;; Registers used:
  4421 ;;		wreg, status,2, status,0, cstack
  4422 ;; Tracked objects:
  4423 ;;		On entry : 0/0
  4424 ;;		On exit  : 0/0
  4425 ;;		Unchanged: 0/0
  4426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4427 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4428 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4429 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4430 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4431 ;;Total ram usage:        9 bytes
  4432 ;; Hardware stack levels used: 1
  4433 ;; Hardware stack levels required when called: 9
  4434 ;; This function calls:
  4435 ;;		_PWM5_LoadDutyValue
  4436 ;;		_PWM6_LoadDutyValue
  4437 ;;		___awdiv
  4438 ;; This function is called by:
  4439 ;;		_calcSteering
  4440 ;; This function uses a non-reentrant model
  4441 ;;
  4442                           
  4443                           	psect	text20
  4444  0020BA                     __ptext20:
  4445                           	callstack 0
  4446  0020BA                     _setSteering:
  4447                           	callstack 19
  4448  0020BA                     
  4449                           ;main.c: 203:     int16_t steeringF = 0, steeringB = 0;
  4450  0020BA  0E00               	movlw	0
  4451  0020BC  0100               	movlb	0	; () banked
  4452  0020BE  6F6E               	movwf	(setSteering@steeringF+1)& (0+255),b
  4453  0020C0  0E00               	movlw	0
  4454  0020C2  6F6D               	movwf	setSteering@steeringF& (0+255),b
  4455  0020C4  0E00               	movlw	0
  4456  0020C6  6F70               	movwf	(setSteering@steeringB+1)& (0+255),b
  4457  0020C8  0E00               	movlw	0
  4458  0020CA  6F6F               	movwf	setSteering@steeringB& (0+255),b
  4459                           
  4460                           ;main.c: 204:     switch(steeringMode){
  4461  0020CC  EFCC  F010         	goto	l5906
  4462  0020D0                     l1284:
  4463                           
  4464                           ; BSR set to: 0
  4465                           ;main.c: 206:             steeringF = (-steering);
  4466  0020D0  C068  F06B         	movff	setSteering@steering,??_setSteering
  4467  0020D4  C069  F06C         	movff	setSteering@steering+1,??_setSteering+1
  4468  0020D8  1F6B               	comf	??_setSteering& (0+255),f,b
  4469  0020DA  1F6C               	comf	(??_setSteering+1)& (0+255),f,b
  4470  0020DC  4B6B               	infsnz	??_setSteering& (0+255),f,b
  4471  0020DE  2B6C               	incf	(??_setSteering+1)& (0+255),f,b
  4472  0020E0  C06B  F06D         	movff	??_setSteering,setSteering@steeringF
  4473  0020E4  C06C  F06E         	movff	??_setSteering+1,setSteering@steeringF+1
  4474                           
  4475                           ;main.c: 207:             steeringB = steering;
  4476  0020E8  C068  F06F         	movff	setSteering@steering,setSteering@steeringB
  4477  0020EC  C069  F070         	movff	setSteering@steering+1,setSteering@steeringB+1
  4478                           
  4479                           ;main.c: 208:             break;
  4480  0020F0  EFED  F010         	goto	l5908
  4481  0020F4                     l1286:
  4482                           
  4483                           ; BSR set to: 0
  4484                           ;main.c: 210:             steeringF = (-steering);
  4485  0020F4  C068  F06B         	movff	setSteering@steering,??_setSteering
  4486  0020F8  C069  F06C         	movff	setSteering@steering+1,??_setSteering+1
  4487  0020FC  1F6B               	comf	??_setSteering& (0+255),f,b
  4488  0020FE  1F6C               	comf	(??_setSteering+1)& (0+255),f,b
  4489  002100  4B6B               	infsnz	??_setSteering& (0+255),f,b
  4490  002102  2B6C               	incf	(??_setSteering+1)& (0+255),f,b
  4491  002104  C06B  F06D         	movff	??_setSteering,setSteering@steeringF
  4492  002108  C06C  F06E         	movff	??_setSteering+1,setSteering@steeringF+1
  4493                           
  4494                           ;main.c: 211:             steeringB = (-steering);
  4495  00210C  C068  F06B         	movff	setSteering@steering,??_setSteering
  4496  002110  C069  F06C         	movff	setSteering@steering+1,??_setSteering+1
  4497  002114  1F6B               	comf	??_setSteering& (0+255),f,b
  4498  002116  1F6C               	comf	(??_setSteering+1)& (0+255),f,b
  4499  002118  4B6B               	infsnz	??_setSteering& (0+255),f,b
  4500  00211A  2B6C               	incf	(??_setSteering+1)& (0+255),f,b
  4501  00211C  C06B  F06F         	movff	??_setSteering,setSteering@steeringB
  4502  002120  C06C  F070         	movff	??_setSteering+1,setSteering@steeringB+1
  4503                           
  4504                           ;main.c: 212:             break;
  4505  002124  EFED  F010         	goto	l5908
  4506  002128                     l1287:
  4507                           
  4508                           ; BSR set to: 0
  4509                           ;main.c: 214:             steeringF = (-steering);
  4510  002128  C068  F06B         	movff	setSteering@steering,??_setSteering
  4511  00212C  C069  F06C         	movff	setSteering@steering+1,??_setSteering+1
  4512  002130  1F6B               	comf	??_setSteering& (0+255),f,b
  4513  002132  1F6C               	comf	(??_setSteering+1)& (0+255),f,b
  4514  002134  4B6B               	infsnz	??_setSteering& (0+255),f,b
  4515  002136  2B6C               	incf	(??_setSteering+1)& (0+255),f,b
  4516  002138  C06B  F06D         	movff	??_setSteering,setSteering@steeringF
  4517  00213C  C06C  F06E         	movff	??_setSteering+1,setSteering@steeringF+1
  4518  002140                     
  4519                           ; BSR set to: 0
  4520                           ;main.c: 215:             steeringB = (steering / (3));
  4521  002140  C068  F060         	movff	setSteering@steering,___awdiv@dividend
  4522  002144  C069  F061         	movff	setSteering@steering+1,___awdiv@dividend+1
  4523  002148  0E00               	movlw	0
  4524  00214A  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  4525  00214C  0E03               	movlw	3
  4526  00214E  6F62               	movwf	___awdiv@divisor& (0+255),b
  4527  002150  EC83  F018         	call	___awdiv	;wreg free
  4528  002154  C060  F06F         	movff	?___awdiv,setSteering@steeringB
  4529  002158  C061  F070         	movff	?___awdiv+1,setSteering@steeringB+1
  4530                           
  4531                           ;main.c: 216:             break;
  4532  00215C  EFED  F010         	goto	l5908
  4533  002160                     l1288:
  4534                           
  4535                           ; BSR set to: 0
  4536                           ;main.c: 218:             steeringF = (-steering);
  4537  002160  C068  F06B         	movff	setSteering@steering,??_setSteering
  4538  002164  C069  F06C         	movff	setSteering@steering+1,??_setSteering+1
  4539  002168  1F6B               	comf	??_setSteering& (0+255),f,b
  4540  00216A  1F6C               	comf	(??_setSteering+1)& (0+255),f,b
  4541  00216C  4B6B               	infsnz	??_setSteering& (0+255),f,b
  4542  00216E  2B6C               	incf	(??_setSteering+1)& (0+255),f,b
  4543  002170  C06B  F06D         	movff	??_setSteering,setSteering@steeringF
  4544  002174  C06C  F06E         	movff	??_setSteering+1,setSteering@steeringF+1
  4545                           
  4546                           ;main.c: 220:             break;
  4547  002178  EFED  F010         	goto	l5908
  4548  00217C                     l1289:
  4549                           
  4550                           ; BSR set to: 0
  4551                           ;main.c: 223:             steeringB = (-steering);
  4552  00217C  C068  F06B         	movff	setSteering@steering,??_setSteering
  4553  002180  C069  F06C         	movff	setSteering@steering+1,??_setSteering+1
  4554  002184  1F6B               	comf	??_setSteering& (0+255),f,b
  4555  002186  1F6C               	comf	(??_setSteering+1)& (0+255),f,b
  4556  002188  4B6B               	infsnz	??_setSteering& (0+255),f,b
  4557  00218A  2B6C               	incf	(??_setSteering+1)& (0+255),f,b
  4558  00218C  C06B  F06F         	movff	??_setSteering,setSteering@steeringB
  4559  002190  C06C  F070         	movff	??_setSteering+1,setSteering@steeringB+1
  4560                           
  4561                           ;main.c: 224:             break;
  4562  002194  EFED  F010         	goto	l5908
  4563  002198                     l5906:
  4564                           
  4565                           ; BSR set to: 0
  4566  002198  516A               	movf	setSteering@steeringMode& (0+255),w,b
  4567  00219A  6F6B               	movwf	??_setSteering& (0+255),b
  4568  00219C  6B6C               	clrf	(??_setSteering+1)& (0+255),b
  4569                           
  4570                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4571                           ; Switch size 1, requested type "simple"
  4572                           ; Number of cases is 1, Range of values is 0 to 0
  4573                           ; switch strategies available:
  4574                           ; Name         Instructions Cycles
  4575                           ; simple_byte            4     3 (average)
  4576                           ;	Chosen strategy is simple_byte
  4577  00219E  516C               	movf	(??_setSteering+1)& (0+255),w,b
  4578  0021A0  0A00               	xorlw	0	; case 0
  4579  0021A2  B4D8               	btfsc	status,2,c
  4580  0021A4  EFD6  F010         	goto	l6680
  4581  0021A8  EFED  F010         	goto	l5908
  4582  0021AC                     l6680:
  4583                           
  4584                           ; BSR set to: 0
  4585                           ; Switch size 1, requested type "simple"
  4586                           ; Number of cases is 5, Range of values is 0 to 4
  4587                           ; switch strategies available:
  4588                           ; Name         Instructions Cycles
  4589                           ; simple_byte           16     9 (average)
  4590                           ;	Chosen strategy is simple_byte
  4591  0021AC  516B               	movf	??_setSteering& (0+255),w,b
  4592  0021AE  0A00               	xorlw	0	; case 0
  4593  0021B0  B4D8               	btfsc	status,2,c
  4594  0021B2  EF68  F010         	goto	l1284
  4595  0021B6  0A01               	xorlw	1	; case 1
  4596  0021B8  B4D8               	btfsc	status,2,c
  4597  0021BA  EF7A  F010         	goto	l1286
  4598  0021BE  0A03               	xorlw	3	; case 2
  4599  0021C0  B4D8               	btfsc	status,2,c
  4600  0021C2  EF94  F010         	goto	l1287
  4601  0021C6  0A01               	xorlw	1	; case 3
  4602  0021C8  B4D8               	btfsc	status,2,c
  4603  0021CA  EFB0  F010         	goto	l1288
  4604  0021CE  0A07               	xorlw	7	; case 4
  4605  0021D0  B4D8               	btfsc	status,2,c
  4606  0021D2  EFBE  F010         	goto	l1289
  4607  0021D6  EFED  F010         	goto	l5908
  4608  0021DA                     l5908:
  4609                           
  4610                           ;main.c: 231:     if(steeringF > ((65))){
  4611  0021DA  0100               	movlb	0	; () banked
  4612  0021DC  BF6E               	btfsc	(setSteering@steeringF+1)& (0+255),7,b
  4613  0021DE  EFFA  F010         	goto	u4921
  4614  0021E2  516E               	movf	(setSteering@steeringF+1)& (0+255),w,b
  4615  0021E4  E109               	bnz	u4920
  4616  0021E6  0E42               	movlw	66
  4617  0021E8  5D6D               	subwf	setSteering@steeringF& (0+255),w,b
  4618  0021EA  A0D8               	btfss	status,0,c
  4619  0021EC  EFFA  F010         	goto	u4921
  4620  0021F0  EFFC  F010         	goto	u4920
  4621  0021F4                     u4921:
  4622  0021F4  EF02  F011         	goto	l5912
  4623  0021F8                     u4920:
  4624  0021F8                     
  4625                           ; BSR set to: 0
  4626                           ;main.c: 232:         steeringF = ((65));
  4627  0021F8  0E00               	movlw	0
  4628  0021FA  6F6E               	movwf	(setSteering@steeringF+1)& (0+255),b
  4629  0021FC  0E41               	movlw	65
  4630  0021FE  6F6D               	movwf	setSteering@steeringF& (0+255),b
  4631                           
  4632                           ;main.c: 233:     } else if(steeringF < (-(65))){
  4633  002200  EF14  F011         	goto	l5916
  4634  002204                     l5912:
  4635                           
  4636                           ; BSR set to: 0
  4637  002204  AF6E               	btfss	(setSteering@steeringF+1)& (0+255),7,b
  4638  002206  EF0E  F011         	goto	u4931
  4639  00220A  0EBF               	movlw	191
  4640  00220C  5D6D               	subwf	setSteering@steeringF& (0+255),w,b
  4641  00220E  0EFF               	movlw	255
  4642  002210  596E               	subwfb	(setSteering@steeringF+1)& (0+255),w,b
  4643  002212  B0D8               	btfsc	status,0,c
  4644  002214  EF0E  F011         	goto	u4931
  4645  002218  EF10  F011         	goto	u4930
  4646  00221C                     u4931:
  4647  00221C  EF14  F011         	goto	l5916
  4648  002220                     u4930:
  4649  002220                     
  4650                           ; BSR set to: 0
  4651                           ;main.c: 234:         steeringF = (-(65));
  4652  002220  0EFF               	movlw	255
  4653  002222  6F6E               	movwf	(setSteering@steeringF+1)& (0+255),b
  4654  002224  0EBF               	movlw	191
  4655  002226  6F6D               	movwf	setSteering@steeringF& (0+255),b
  4656  002228                     l5916:
  4657                           
  4658                           ; BSR set to: 0
  4659                           ;main.c: 237:     if(steeringB > ((45))){
  4660  002228  BF70               	btfsc	(setSteering@steeringB+1)& (0+255),7,b
  4661  00222A  EF20  F011         	goto	u4941
  4662  00222E  5170               	movf	(setSteering@steeringB+1)& (0+255),w,b
  4663  002230  E109               	bnz	u4940
  4664  002232  0E2E               	movlw	46
  4665  002234  5D6F               	subwf	setSteering@steeringB& (0+255),w,b
  4666  002236  A0D8               	btfss	status,0,c
  4667  002238  EF20  F011         	goto	u4941
  4668  00223C  EF22  F011         	goto	u4940
  4669  002240                     u4941:
  4670  002240  EF28  F011         	goto	l5920
  4671  002244                     u4940:
  4672  002244                     
  4673                           ; BSR set to: 0
  4674                           ;main.c: 238:         steeringB = ((45));
  4675  002244  0E00               	movlw	0
  4676  002246  6F70               	movwf	(setSteering@steeringB+1)& (0+255),b
  4677  002248  0E2D               	movlw	45
  4678  00224A  6F6F               	movwf	setSteering@steeringB& (0+255),b
  4679                           
  4680                           ;main.c: 239:     } else if(steeringB < (-(45))){
  4681  00224C  EF3A  F011         	goto	l5924
  4682  002250                     l5920:
  4683                           
  4684                           ; BSR set to: 0
  4685  002250  AF70               	btfss	(setSteering@steeringB+1)& (0+255),7,b
  4686  002252  EF34  F011         	goto	u4951
  4687  002256  0ED3               	movlw	211
  4688  002258  5D6F               	subwf	setSteering@steeringB& (0+255),w,b
  4689  00225A  0EFF               	movlw	255
  4690  00225C  5970               	subwfb	(setSteering@steeringB+1)& (0+255),w,b
  4691  00225E  B0D8               	btfsc	status,0,c
  4692  002260  EF34  F011         	goto	u4951
  4693  002264  EF36  F011         	goto	u4950
  4694  002268                     u4951:
  4695  002268  EF3A  F011         	goto	l5924
  4696  00226C                     u4950:
  4697  00226C                     
  4698                           ; BSR set to: 0
  4699                           ;main.c: 240:         steeringB = (-(45));
  4700  00226C  0EFF               	movlw	255
  4701  00226E  6F70               	movwf	(setSteering@steeringB+1)& (0+255),b
  4702  002270  0ED3               	movlw	211
  4703  002272  6F6F               	movwf	setSteering@steeringB& (0+255),b
  4704  002274                     l5924:
  4705                           
  4706                           ; BSR set to: 0
  4707                           ;main.c: 244:     PWM6_LoadDutyValue((uint16_t)((352) - steeringF));
  4708  002274  516D               	movf	setSteering@steeringF& (0+255),w,b
  4709  002276  0860               	sublw	96
  4710  002278  6E20               	movwf	PWM6_LoadDutyValue@dutyValue^0,c
  4711  00227A  516E               	movf	(setSteering@steeringF+1)& (0+255),w,b
  4712  00227C  A0D8               	btfss	status,0,c
  4713  00227E  2AE8               	incf	wreg,f,c
  4714  002280  0801               	sublw	1
  4715  002282  6E21               	movwf	(PWM6_LoadDutyValue@dutyValue+1)^0,c
  4716  002284  ECBE  F01D         	call	_PWM6_LoadDutyValue	;wreg free
  4717  002288                     
  4718                           ;main.c: 245:     PWM5_LoadDutyValue((uint16_t)((357) - steeringB));
  4719  002288  0100               	movlb	0	; () banked
  4720  00228A  516F               	movf	setSteering@steeringB& (0+255),w,b
  4721  00228C  0865               	sublw	101
  4722  00228E  6E20               	movwf	PWM5_LoadDutyValue@dutyValue^0,c
  4723  002290  5170               	movf	(setSteering@steeringB+1)& (0+255),w,b
  4724  002292  A0D8               	btfss	status,0,c
  4725  002294  2AE8               	incf	wreg,f,c
  4726  002296  0801               	sublw	1
  4727  002298  6E21               	movwf	(PWM5_LoadDutyValue@dutyValue+1)^0,c
  4728  00229A  ECD9  F01D         	call	_PWM5_LoadDutyValue	;wreg free
  4729  00229E  0012               	return		;funcret
  4730  0022A0                     __end_of_setSteering:
  4731                           	callstack 0
  4732                           
  4733 ;; *************** function ___awdiv *****************
  4734 ;; Defined at:
  4735 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  4736 ;; Parameters:    Size  Location     Type
  4737 ;;  dividend        2    0[BANK0 ] int 
  4738 ;;  divisor         2    2[BANK0 ] int 
  4739 ;; Auto vars:     Size  Location     Type
  4740 ;;  quotient        2    6[BANK0 ] int 
  4741 ;;  sign            1    5[BANK0 ] unsigned char 
  4742 ;;  counter         1    4[BANK0 ] unsigned char 
  4743 ;; Return value:  Size  Location     Type
  4744 ;;                  2    0[BANK0 ] int 
  4745 ;; Registers used:
  4746 ;;		wreg, status,2, status,0
  4747 ;; Tracked objects:
  4748 ;;		On entry : 0/0
  4749 ;;		On exit  : 0/0
  4750 ;;		Unchanged: 0/0
  4751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4752 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4753 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4755 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4756 ;;Total ram usage:        8 bytes
  4757 ;; Hardware stack levels used: 1
  4758 ;; Hardware stack levels required when called: 8
  4759 ;; This function calls:
  4760 ;;		Nothing
  4761 ;; This function is called by:
  4762 ;;		_calcSteering
  4763 ;;		_setSteering
  4764 ;; This function uses a non-reentrant model
  4765 ;;
  4766                           
  4767                           	psect	text21
  4768  003106                     __ptext21:
  4769                           	callstack 0
  4770  003106                     ___awdiv:
  4771                           	callstack 19
  4772  003106  0E00               	movlw	0
  4773  003108  0100               	movlb	0	; () banked
  4774  00310A  6F65               	movwf	___awdiv@sign& (0+255),b
  4775  00310C                     
  4776                           ; BSR set to: 0
  4777  00310C  BF63               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  4778  00310E  EF8D  F018         	goto	u4820
  4779  003112  EF8B  F018         	goto	u4821
  4780  003116                     u4821:
  4781  003116  EF93  F018         	goto	l5824
  4782  00311A                     u4820:
  4783  00311A                     
  4784                           ; BSR set to: 0
  4785  00311A  6D62               	negf	___awdiv@divisor& (0+255),b
  4786  00311C  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  4787  00311E  B0D8               	btfsc	status,0,c
  4788  003120  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  4789  003122                     
  4790                           ; BSR set to: 0
  4791  003122  0E01               	movlw	1
  4792  003124  6F65               	movwf	___awdiv@sign& (0+255),b
  4793  003126                     l5824:
  4794                           
  4795                           ; BSR set to: 0
  4796  003126  BF61               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
  4797  003128  EF9A  F018         	goto	u4830
  4798  00312C  EF98  F018         	goto	u4831
  4799  003130                     u4831:
  4800  003130  EFA0  F018         	goto	l5830
  4801  003134                     u4830:
  4802  003134                     
  4803                           ; BSR set to: 0
  4804  003134  6D60               	negf	___awdiv@dividend& (0+255),b
  4805  003136  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  4806  003138  B0D8               	btfsc	status,0,c
  4807  00313A  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  4808  00313C                     
  4809                           ; BSR set to: 0
  4810  00313C  0E01               	movlw	1
  4811  00313E  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  4812  003140                     l5830:
  4813                           
  4814                           ; BSR set to: 0
  4815  003140  0E00               	movlw	0
  4816  003142  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  4817  003144  0E00               	movlw	0
  4818  003146  6F66               	movwf	___awdiv@quotient& (0+255),b
  4819  003148                     
  4820                           ; BSR set to: 0
  4821  003148  5162               	movf	___awdiv@divisor& (0+255),w,b
  4822  00314A  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  4823  00314C  B4D8               	btfsc	status,2,c
  4824  00314E  EFAB  F018         	goto	u4841
  4825  003152  EFAD  F018         	goto	u4840
  4826  003156                     u4841:
  4827  003156  EFD5  F018         	goto	l5852
  4828  00315A                     u4840:
  4829  00315A                     
  4830                           ; BSR set to: 0
  4831  00315A  0E01               	movlw	1
  4832  00315C  6F64               	movwf	___awdiv@counter& (0+255),b
  4833  00315E  EFB5  F018         	goto	l5838
  4834  003162                     l5836:
  4835                           
  4836                           ; BSR set to: 0
  4837  003162  90D8               	bcf	status,0,c
  4838  003164  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  4839  003166  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  4840  003168  2B64               	incf	___awdiv@counter& (0+255),f,b
  4841  00316A                     l5838:
  4842                           
  4843                           ; BSR set to: 0
  4844  00316A  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  4845  00316C  EFBA  F018         	goto	u4851
  4846  003170  EFBC  F018         	goto	u4850
  4847  003174                     u4851:
  4848  003174  EFB1  F018         	goto	l5836
  4849  003178                     u4850:
  4850  003178                     l5840:
  4851                           
  4852                           ; BSR set to: 0
  4853  003178  90D8               	bcf	status,0,c
  4854  00317A  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  4855  00317C  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  4856  00317E                     
  4857                           ; BSR set to: 0
  4858  00317E  5162               	movf	___awdiv@divisor& (0+255),w,b
  4859  003180  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  4860  003182  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4861  003184  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  4862  003186  A0D8               	btfss	status,0,c
  4863  003188  EFC8  F018         	goto	u4861
  4864  00318C  EFCA  F018         	goto	u4860
  4865  003190                     u4861:
  4866  003190  EFCF  F018         	goto	l5848
  4867  003194                     u4860:
  4868  003194                     
  4869                           ; BSR set to: 0
  4870  003194  5162               	movf	___awdiv@divisor& (0+255),w,b
  4871  003196  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  4872  003198  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4873  00319A  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  4874  00319C                     
  4875                           ; BSR set to: 0
  4876  00319C  8166               	bsf	___awdiv@quotient& (0+255),0,b
  4877  00319E                     l5848:
  4878                           
  4879                           ; BSR set to: 0
  4880  00319E  90D8               	bcf	status,0,c
  4881  0031A0  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  4882  0031A2  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  4883  0031A4                     
  4884                           ; BSR set to: 0
  4885  0031A4  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  4886  0031A6  EFBC  F018         	goto	l5840
  4887  0031AA                     l5852:
  4888                           
  4889                           ; BSR set to: 0
  4890  0031AA  5165               	movf	___awdiv@sign& (0+255),w,b
  4891  0031AC  B4D8               	btfsc	status,2,c
  4892  0031AE  EFDB  F018         	goto	u4871
  4893  0031B2  EFDD  F018         	goto	u4870
  4894  0031B6                     u4871:
  4895  0031B6  EFE1  F018         	goto	l5856
  4896  0031BA                     u4870:
  4897  0031BA                     
  4898                           ; BSR set to: 0
  4899  0031BA  6D66               	negf	___awdiv@quotient& (0+255),b
  4900  0031BC  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  4901  0031BE  B0D8               	btfsc	status,0,c
  4902  0031C0  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  4903  0031C2                     l5856:
  4904                           
  4905                           ; BSR set to: 0
  4906  0031C2  C066  F060         	movff	___awdiv@quotient,?___awdiv
  4907  0031C6  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
  4908  0031CA                     
  4909                           ; BSR set to: 0
  4910  0031CA  0012               	return		;funcret
  4911  0031CC                     __end_of___awdiv:
  4912                           	callstack 0
  4913                           
  4914 ;; *************** function _PWM6_LoadDutyValue *****************
  4915 ;; Defined at:
  4916 ;;		line 74 in file "mcc_generated_files/pwm6.c"
  4917 ;; Parameters:    Size  Location     Type
  4918 ;;  dutyValue       2   31[COMRAM] unsigned short 
  4919 ;; Auto vars:     Size  Location     Type
  4920 ;;		None
  4921 ;; Return value:  Size  Location     Type
  4922 ;;                  1    wreg      void 
  4923 ;; Registers used:
  4924 ;;		wreg, status,2, status,0
  4925 ;; Tracked objects:
  4926 ;;		On entry : 0/0
  4927 ;;		On exit  : 0/0
  4928 ;;		Unchanged: 0/0
  4929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4930 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4932 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4933 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4934 ;;Total ram usage:        4 bytes
  4935 ;; Hardware stack levels used: 1
  4936 ;; Hardware stack levels required when called: 8
  4937 ;; This function calls:
  4938 ;;		Nothing
  4939 ;; This function is called by:
  4940 ;;		_setSteering
  4941 ;; This function uses a non-reentrant model
  4942 ;;
  4943                           
  4944                           	psect	text22
  4945  003B7C                     __ptext22:
  4946                           	callstack 0
  4947  003B7C                     _PWM6_LoadDutyValue:
  4948                           	callstack 19
  4949  003B7C                     
  4950                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  4951  003B7C  C020  F060         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
  4952  003B80  C021  F061         	movff	PWM6_LoadDutyValue@dutyValue+1,??_PWM6_LoadDutyValue+1
  4953  003B84  0100               	movlb	0	; () banked
  4954  003B86  90D8               	bcf	status,0,c
  4955  003B88  3361               	rrcf	(??_PWM6_LoadDutyValue+1)& (0+255),f,b
  4956  003B8A  3360               	rrcf	??_PWM6_LoadDutyValue& (0+255),f,b
  4957  003B8C  90D8               	bcf	status,0,c
  4958  003B8E  3361               	rrcf	(??_PWM6_LoadDutyValue+1)& (0+255),f,b
  4959  003B90  3360               	rrcf	??_PWM6_LoadDutyValue& (0+255),f,b
  4960  003B92  5160               	movf	??_PWM6_LoadDutyValue& (0+255),w,b
  4961  003B94  6E69               	movwf	105,c	;volatile
  4962                           
  4963                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
  4964  003B96  C020  F060         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
  4965  003B9A  0E03               	movlw	3
  4966  003B9C  1760               	andwf	??_PWM6_LoadDutyValue& (0+255),f,b
  4967  003B9E  0E06               	movlw	6
  4968  003BA0  6F61               	movwf	(??_PWM6_LoadDutyValue+1)& (0+255),b
  4969  003BA2                     u4755:
  4970  003BA2  90D8               	bcf	status,0,c
  4971  003BA4  3760               	rlcf	??_PWM6_LoadDutyValue& (0+255),f,b
  4972  003BA6  2F61               	decfsz	(??_PWM6_LoadDutyValue+1)& (0+255),f,b
  4973  003BA8  EFD1  F01D         	goto	u4755
  4974  003BAC  5160               	movf	??_PWM6_LoadDutyValue& (0+255),w,b
  4975  003BAE  6E68               	movwf	104,c	;volatile
  4976  003BB0                     
  4977                           ; BSR set to: 0
  4978  003BB0  0012               	return		;funcret
  4979  003BB2                     __end_of_PWM6_LoadDutyValue:
  4980                           	callstack 0
  4981                           
  4982 ;; *************** function _PWM5_LoadDutyValue *****************
  4983 ;; Defined at:
  4984 ;;		line 74 in file "mcc_generated_files/pwm5.c"
  4985 ;; Parameters:    Size  Location     Type
  4986 ;;  dutyValue       2   31[COMRAM] unsigned short 
  4987 ;; Auto vars:     Size  Location     Type
  4988 ;;		None
  4989 ;; Return value:  Size  Location     Type
  4990 ;;                  1    wreg      void 
  4991 ;; Registers used:
  4992 ;;		wreg, status,2, status,0
  4993 ;; Tracked objects:
  4994 ;;		On entry : 0/0
  4995 ;;		On exit  : 0/0
  4996 ;;		Unchanged: 0/0
  4997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4998 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5000 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5001 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5002 ;;Total ram usage:        4 bytes
  5003 ;; Hardware stack levels used: 1
  5004 ;; Hardware stack levels required when called: 8
  5005 ;; This function calls:
  5006 ;;		Nothing
  5007 ;; This function is called by:
  5008 ;;		_setSteering
  5009 ;; This function uses a non-reentrant model
  5010 ;;
  5011                           
  5012                           	psect	text23
  5013  003BB2                     __ptext23:
  5014                           	callstack 0
  5015  003BB2                     _PWM5_LoadDutyValue:
  5016                           	callstack 19
  5017  003BB2                     
  5018                           ;mcc_generated_files/pwm5.c: 74:  void PWM5_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm5.c: 75:  {;mcc_generated_files/pwm5.c: 77:      PWM5DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  5019  003BB2  C020  F060         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
  5020  003BB6  C021  F061         	movff	PWM5_LoadDutyValue@dutyValue+1,??_PWM5_LoadDutyValue+1
  5021  003BBA  0100               	movlb	0	; () banked
  5022  003BBC  90D8               	bcf	status,0,c
  5023  003BBE  3361               	rrcf	(??_PWM5_LoadDutyValue+1)& (0+255),f,b
  5024  003BC0  3360               	rrcf	??_PWM5_LoadDutyValue& (0+255),f,b
  5025  003BC2  90D8               	bcf	status,0,c
  5026  003BC4  3361               	rrcf	(??_PWM5_LoadDutyValue+1)& (0+255),f,b
  5027  003BC6  3360               	rrcf	??_PWM5_LoadDutyValue& (0+255),f,b
  5028  003BC8  5160               	movf	??_PWM5_LoadDutyValue& (0+255),w,b
  5029  003BCA  6E6D               	movwf	109,c	;volatile
  5030                           
  5031                           ;mcc_generated_files/pwm5.c: 80:      PWM5DCL = (dutyValue & 0x0003)<<6;
  5032  003BCC  C020  F060         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
  5033  003BD0  0E03               	movlw	3
  5034  003BD2  1760               	andwf	??_PWM5_LoadDutyValue& (0+255),f,b
  5035  003BD4  0E06               	movlw	6
  5036  003BD6  6F61               	movwf	(??_PWM5_LoadDutyValue+1)& (0+255),b
  5037  003BD8                     u4745:
  5038  003BD8  90D8               	bcf	status,0,c
  5039  003BDA  3760               	rlcf	??_PWM5_LoadDutyValue& (0+255),f,b
  5040  003BDC  2F61               	decfsz	(??_PWM5_LoadDutyValue+1)& (0+255),f,b
  5041  003BDE  EFEC  F01D         	goto	u4745
  5042  003BE2  5160               	movf	??_PWM5_LoadDutyValue& (0+255),w,b
  5043  003BE4  6E6C               	movwf	108,c	;volatile
  5044  003BE6                     
  5045                           ; BSR set to: 0
  5046  003BE6  0012               	return		;funcret
  5047  003BE8                     __end_of_PWM5_LoadDutyValue:
  5048                           	callstack 0
  5049                           
  5050 ;; *************** function _calcSpeed *****************
  5051 ;; Defined at:
  5052 ;;		line 248 in file "main.c"
  5053 ;; Parameters:    Size  Location     Type
  5054 ;;		None
  5055 ;; Auto vars:     Size  Location     Type
  5056 ;;  speed           2   65[BANK0 ] short 
  5057 ;; Return value:  Size  Location     Type
  5058 ;;                  1    wreg      void 
  5059 ;; Registers used:
  5060 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5061 ;; Tracked objects:
  5062 ;;		On entry : 0/0
  5063 ;;		On exit  : 0/0
  5064 ;;		Unchanged: 0/0
  5065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5067 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5068 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5069 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5070 ;;Total ram usage:        4 bytes
  5071 ;; Hardware stack levels used: 1
  5072 ;; Hardware stack levels required when called: 9
  5073 ;; This function calls:
  5074 ;;		___fladd
  5075 ;;		___flmul
  5076 ;;		___fltol
  5077 ;;		___xxtofl
  5078 ;; This function is called by:
  5079 ;;		_loop
  5080 ;; This function uses a non-reentrant model
  5081 ;;
  5082                           
  5083                           	psect	text24
  5084  0022A0                     __ptext24:
  5085                           	callstack 0
  5086  0022A0                     _calcSpeed:
  5087                           	callstack 20
  5088  0022A0                     
  5089                           ;main.c: 249:     int16_t speed = 0;
  5090  0022A0  0E00               	movlw	0
  5091  0022A2  0100               	movlb	0	; () banked
  5092  0022A4  6FA2               	movwf	(calcSpeed@speed+1)& (0+255),b
  5093  0022A6  0E00               	movlw	0
  5094  0022A8  6FA1               	movwf	calcSpeed@speed& (0+255),b
  5095                           
  5096                           ;main.c: 251:     switch (driveMode){
  5097  0022AA  EFF0  F011         	goto	l6480
  5098  0022AE                     l6448:
  5099                           
  5100                           ; BSR set to: 0
  5101                           ;main.c: 253:             if(distFront > 40) {
  5102  0022AE  51EF               	movf	(_distFront+1)& (0+255),w,b	;volatile
  5103  0022B0  E109               	bnz	u5800
  5104  0022B2  0E29               	movlw	41
  5105  0022B4  5DEE               	subwf	_distFront& (0+255),w,b	;volatile
  5106  0022B6  A0D8               	btfss	status,0,c
  5107  0022B8  EF60  F011         	goto	u5801
  5108  0022BC  EF62  F011         	goto	u5800
  5109  0022C0                     u5801:
  5110  0022C0  EF64  F011         	goto	l6452
  5111  0022C4                     u5800:
  5112  0022C4                     
  5113                           ; BSR set to: 0
  5114                           ;main.c: 254:                 driveMode = Straight;
  5115  0022C4  0E00               	movlw	0
  5116  0022C6  6FED               	movwf	_driveMode& (0+255),b
  5117  0022C8                     l6452:
  5118                           
  5119                           ; BSR set to: 0
  5120                           ;main.c: 257:             if(distFront < 40 && setSpeed > 0){
  5121  0022C8  51EF               	movf	(_distFront+1)& (0+255),w,b	;volatile
  5122  0022CA  E107               	bnz	u5811
  5123  0022CC  0E28               	movlw	40
  5124  0022CE  5DEE               	subwf	_distFront& (0+255),w,b	;volatile
  5125  0022D0  B0D8               	btfsc	status,0,c
  5126  0022D2  EF6D  F011         	goto	u5811
  5127  0022D6  EF6F  F011         	goto	u5810
  5128  0022DA                     u5811:
  5129  0022DA  EF85  F011         	goto	l6460
  5130  0022DE                     u5810:
  5131  0022DE                     
  5132                           ; BSR set to: 0
  5133  0022DE  BFE1               	btfsc	(_setSpeed+1)& (0+255),7,b
  5134  0022E0  EF7A  F011         	goto	u5821
  5135  0022E4  51E1               	movf	(_setSpeed+1)& (0+255),w,b
  5136  0022E6  E108               	bnz	u5820
  5137  0022E8  05E0               	decf	_setSpeed& (0+255),w,b
  5138  0022EA  A0D8               	btfss	status,0,c
  5139  0022EC  EF7A  F011         	goto	u5821
  5140  0022F0  EF7C  F011         	goto	u5820
  5141  0022F4                     u5821:
  5142  0022F4  EF85  F011         	goto	l6460
  5143  0022F8                     u5820:
  5144  0022F8                     
  5145                           ; BSR set to: 0
  5146                           ;main.c: 258:                 speed = setSpeed;
  5147  0022F8  C0E0  F0A1         	movff	_setSpeed,calcSpeed@speed
  5148  0022FC  C0E1  F0A2         	movff	_setSpeed+1,calcSpeed@speed+1
  5149  002300                     
  5150                           ; BSR set to: 0
  5151                           ;main.c: 259:                 speed -= 1;
  5152  002300  07A1               	decf	calcSpeed@speed& (0+255),f,b
  5153  002302  A0D8               	btfss	status,0,c
  5154  002304  07A2               	decf	(calcSpeed@speed+1)& (0+255),f,b
  5155                           
  5156                           ;main.c: 260:             }else if( distFront < 20){
  5157  002306  EF11  F012         	goto	l6482
  5158  00230A                     l6460:
  5159                           
  5160                           ; BSR set to: 0
  5161  00230A  51EF               	movf	(_distFront+1)& (0+255),w,b	;volatile
  5162  00230C  E107               	bnz	u5831
  5163  00230E  0E14               	movlw	20
  5164  002310  5DEE               	subwf	_distFront& (0+255),w,b	;volatile
  5165  002312  B0D8               	btfsc	status,0,c
  5166  002314  EF8E  F011         	goto	u5831
  5167  002318  EF90  F011         	goto	u5830
  5168  00231C                     u5831:
  5169  00231C  EF11  F012         	goto	l6482
  5170  002320                     u5830:
  5171  002320                     
  5172                           ; BSR set to: 0
  5173                           ;main.c: 261:                 speed = setSpeed;
  5174  002320  C0E0  F0A1         	movff	_setSpeed,calcSpeed@speed
  5175  002324  C0E1  F0A2         	movff	_setSpeed+1,calcSpeed@speed+1
  5176  002328                     
  5177                           ; BSR set to: 0
  5178                           ;main.c: 262:                 speed -= 2;
  5179  002328  0EFE               	movlw	254
  5180  00232A  27A1               	addwf	calcSpeed@speed& (0+255),f,b
  5181  00232C  0EFF               	movlw	255
  5182  00232E  23A2               	addwfc	(calcSpeed@speed+1)& (0+255),f,b
  5183  002330  EF11  F012         	goto	l6482
  5184  002334                     l6466:
  5185                           
  5186                           ; BSR set to: 0
  5187                           ;main.c: 266:             if(distFront < 40) {
  5188  002334  51EF               	movf	(_distFront+1)& (0+255),w,b	;volatile
  5189  002336  E107               	bnz	u5841
  5190  002338  0E28               	movlw	40
  5191  00233A  5DEE               	subwf	_distFront& (0+255),w,b	;volatile
  5192  00233C  B0D8               	btfsc	status,0,c
  5193  00233E  EFA3  F011         	goto	u5841
  5194  002342  EFA5  F011         	goto	u5840
  5195  002346                     u5841:
  5196  002346  EFA7  F011         	goto	l6470
  5197  00234A                     u5840:
  5198  00234A                     
  5199                           ; BSR set to: 0
  5200                           ;main.c: 267:                 driveMode = Brake;
  5201  00234A  0E01               	movlw	1
  5202  00234C  6FED               	movwf	_driveMode& (0+255),b
  5203  00234E                     l6470:
  5204                           
  5205                           ; BSR set to: 0
  5206                           ;main.c: 270:             speed = (int16_t)((0.8) * distFront + (150));
  5207  00234E  0E00               	movlw	0
  5208  002350  6F8B               	movwf	___fladd@a& (0+255),b
  5209  002352  0E00               	movlw	0
  5210  002354  6F8C               	movwf	(___fladd@a+1)& (0+255),b
  5211  002356  0E16               	movlw	22
  5212  002358  6F8D               	movwf	(___fladd@a+2)& (0+255),b
  5213  00235A  0E43               	movlw	67
  5214  00235C  6F8E               	movwf	(___fladd@a+3)& (0+255),b
  5215  00235E  0ECD               	movlw	205
  5216  002360  6F72               	movwf	___flmul@a& (0+255),b
  5217  002362  0ECC               	movlw	204
  5218  002364  6F73               	movwf	(___flmul@a+1)& (0+255),b
  5219  002366  0E4C               	movlw	76
  5220  002368  6F74               	movwf	(___flmul@a+2)& (0+255),b
  5221  00236A  0E3F               	movlw	63
  5222  00236C  6F75               	movwf	(___flmul@a+3)& (0+255),b
  5223  00236E  C0EE  F060         	movff	_distFront,___xxtofl@val	;volatile
  5224  002372  C0EF  F061         	movff	_distFront+1,___xxtofl@val+1	;volatile
  5225  002376  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
  5226  002378  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
  5227  00237A  0E00               	movlw	0
  5228  00237C  EC3B  F012         	call	___xxtofl
  5229  002380  C060  F06E         	movff	?___xxtofl,___flmul@b
  5230  002384  C061  F06F         	movff	?___xxtofl+1,___flmul@b+1
  5231  002388  C062  F070         	movff	?___xxtofl+2,___flmul@b+2
  5232  00238C  C063  F071         	movff	?___xxtofl+3,___flmul@b+3
  5233  002390  EC9B  F00A         	call	___flmul	;wreg free
  5234  002394  C06E  F087         	movff	?___flmul,___fladd@b
  5235  002398  C06F  F088         	movff	?___flmul+1,___fladd@b+1
  5236  00239C  C070  F089         	movff	?___flmul+2,___fladd@b+2
  5237  0023A0  C071  F08A         	movff	?___flmul+3,___fladd@b+3
  5238  0023A4  EC3A  F008         	call	___fladd	;wreg free
  5239  0023A8  C087  F097         	movff	?___fladd,___fltol@f1
  5240  0023AC  C088  F098         	movff	?___fladd+1,___fltol@f1+1
  5241  0023B0  C089  F099         	movff	?___fladd+2,___fltol@f1+2
  5242  0023B4  C08A  F09A         	movff	?___fladd+3,___fltol@f1+3
  5243  0023B8  EC41  F016         	call	___fltol	;wreg free
  5244  0023BC  C097  F0A1         	movff	?___fltol,calcSpeed@speed
  5245  0023C0  C098  F0A2         	movff	?___fltol+1,calcSpeed@speed+1
  5246                           
  5247                           ;main.c: 271:             break;
  5248  0023C4  EF11  F012         	goto	l6482
  5249  0023C8                     l6472:
  5250                           
  5251                           ; BSR set to: 0
  5252                           ;main.c: 273:             speed = (-150);
  5253  0023C8  0EFF               	movlw	255
  5254  0023CA  6FA2               	movwf	(calcSpeed@speed+1)& (0+255),b
  5255  0023CC  0E6A               	movlw	106
  5256  0023CE  6FA1               	movwf	calcSpeed@speed& (0+255),b
  5257                           
  5258                           ;main.c: 274:             break;
  5259  0023D0  EF11  F012         	goto	l6482
  5260  0023D4                     l6474:
  5261                           
  5262                           ; BSR set to: 0
  5263                           ;main.c: 276:             speed = (150);
  5264  0023D4  0E00               	movlw	0
  5265  0023D6  6FA2               	movwf	(calcSpeed@speed+1)& (0+255),b
  5266  0023D8  0E96               	movlw	150
  5267  0023DA  6FA1               	movwf	calcSpeed@speed& (0+255),b
  5268                           
  5269                           ;main.c: 277:             break;
  5270  0023DC  EF11  F012         	goto	l6482
  5271  0023E0                     l6480:
  5272                           
  5273                           ; BSR set to: 0
  5274  0023E0  51ED               	movf	_driveMode& (0+255),w,b
  5275  0023E2  6F9F               	movwf	??_calcSpeed& (0+255),b
  5276  0023E4  6BA0               	clrf	(??_calcSpeed+1)& (0+255),b
  5277                           
  5278                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5279                           ; Switch size 1, requested type "simple"
  5280                           ; Number of cases is 1, Range of values is 0 to 0
  5281                           ; switch strategies available:
  5282                           ; Name         Instructions Cycles
  5283                           ; simple_byte            4     3 (average)
  5284                           ;	Chosen strategy is simple_byte
  5285  0023E6  51A0               	movf	(??_calcSpeed+1)& (0+255),w,b
  5286  0023E8  0A00               	xorlw	0	; case 0
  5287  0023EA  B4D8               	btfsc	status,2,c
  5288  0023EC  EFFA  F011         	goto	l6682
  5289  0023F0  EF11  F012         	goto	l6482
  5290  0023F4                     l6682:
  5291                           
  5292                           ; BSR set to: 0
  5293                           ; Switch size 1, requested type "simple"
  5294                           ; Number of cases is 5, Range of values is 0 to 4
  5295                           ; switch strategies available:
  5296                           ; Name         Instructions Cycles
  5297                           ; simple_byte           16     9 (average)
  5298                           ;	Chosen strategy is simple_byte
  5299  0023F4  519F               	movf	??_calcSpeed& (0+255),w,b
  5300  0023F6  0A00               	xorlw	0	; case 0
  5301  0023F8  B4D8               	btfsc	status,2,c
  5302  0023FA  EF9A  F011         	goto	l6466
  5303  0023FE  0A01               	xorlw	1	; case 1
  5304  002400  B4D8               	btfsc	status,2,c
  5305  002402  EF57  F011         	goto	l6448
  5306  002406  0A03               	xorlw	3	; case 2
  5307  002408  B4D8               	btfsc	status,2,c
  5308  00240A  EFE4  F011         	goto	l6472
  5309  00240E  0A01               	xorlw	1	; case 3
  5310  002410  B4D8               	btfsc	status,2,c
  5311  002412  EFEA  F011         	goto	l6474
  5312  002416  0A07               	xorlw	7	; case 4
  5313  002418  B4D8               	btfsc	status,2,c
  5314  00241A  EFEA  F011         	goto	l6474
  5315  00241E  EF11  F012         	goto	l6482
  5316  002422                     l6482:
  5317                           
  5318                           ;main.c: 283:     if(speed > (400)){
  5319  002422  0100               	movlb	0	; () banked
  5320  002424  BFA2               	btfsc	(calcSpeed@speed+1)& (0+255),7,b
  5321  002426  EF1E  F012         	goto	u5851
  5322  00242A  0E91               	movlw	145
  5323  00242C  5DA1               	subwf	calcSpeed@speed& (0+255),w,b
  5324  00242E  0E01               	movlw	1
  5325  002430  59A2               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
  5326  002432  A0D8               	btfss	status,0,c
  5327  002434  EF1E  F012         	goto	u5851
  5328  002438  EF20  F012         	goto	u5850
  5329  00243C                     u5851:
  5330  00243C  EF24  F012         	goto	l6486
  5331  002440                     u5850:
  5332  002440                     
  5333                           ; BSR set to: 0
  5334                           ;main.c: 284:         speed = (400);
  5335  002440  0E01               	movlw	1
  5336  002442  6FA2               	movwf	(calcSpeed@speed+1)& (0+255),b
  5337  002444  0E90               	movlw	144
  5338  002446  6FA1               	movwf	calcSpeed@speed& (0+255),b
  5339  002448                     l6486:
  5340                           
  5341                           ; BSR set to: 0
  5342                           ;main.c: 286:     if(speed < (-250)){
  5343  002448  AFA2               	btfss	(calcSpeed@speed+1)& (0+255),7,b
  5344  00244A  EF30  F012         	goto	u5861
  5345  00244E  0E06               	movlw	6
  5346  002450  5DA1               	subwf	calcSpeed@speed& (0+255),w,b
  5347  002452  0EFF               	movlw	255
  5348  002454  59A2               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
  5349  002456  B0D8               	btfsc	status,0,c
  5350  002458  EF30  F012         	goto	u5861
  5351  00245C  EF32  F012         	goto	u5860
  5352  002460                     u5861:
  5353  002460  EF36  F012         	goto	l6490
  5354  002464                     u5860:
  5355  002464                     
  5356                           ; BSR set to: 0
  5357                           ;main.c: 287:         speed = (-250);
  5358  002464  0EFF               	movlw	255
  5359  002466  6FA2               	movwf	(calcSpeed@speed+1)& (0+255),b
  5360  002468  0E06               	movlw	6
  5361  00246A  6FA1               	movwf	calcSpeed@speed& (0+255),b
  5362  00246C                     l6490:
  5363                           
  5364                           ; BSR set to: 0
  5365                           ;main.c: 289:     setSpeed = speed;
  5366  00246C  C0A1  F0E0         	movff	calcSpeed@speed,_setSpeed
  5367  002470  C0A2  F0E1         	movff	calcSpeed@speed+1,_setSpeed+1
  5368  002474                     
  5369                           ; BSR set to: 0
  5370  002474  0012               	return		;funcret
  5371  002476                     __end_of_calcSpeed:
  5372                           	callstack 0
  5373                           
  5374 ;; *************** function ___fladd *****************
  5375 ;; Defined at:
  5376 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  5377 ;; Parameters:    Size  Location     Type
  5378 ;;  b               4   39[BANK0 ] void 
  5379 ;;  a               4   43[BANK0 ] void 
  5380 ;; Auto vars:     Size  Location     Type
  5381 ;;  grs             1   54[BANK0 ] unsigned char 
  5382 ;;  bexp            1   53[BANK0 ] unsigned char 
  5383 ;;  aexp            1   52[BANK0 ] unsigned char 
  5384 ;;  signs           1   51[BANK0 ] unsigned char 
  5385 ;; Return value:  Size  Location     Type
  5386 ;;                  4   39[BANK0 ] unsigned char 
  5387 ;; Registers used:
  5388 ;;		wreg, status,2, status,0
  5389 ;; Tracked objects:
  5390 ;;		On entry : 0/0
  5391 ;;		On exit  : 0/0
  5392 ;;		Unchanged: 0/0
  5393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5394 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5395 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5396 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5397 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5398 ;;Total ram usage:       16 bytes
  5399 ;; Hardware stack levels used: 1
  5400 ;; Hardware stack levels required when called: 8
  5401 ;; This function calls:
  5402 ;;		Nothing
  5403 ;; This function is called by:
  5404 ;;		_calcSpeed
  5405 ;; This function uses a non-reentrant model
  5406 ;;
  5407                           
  5408                           	psect	text25
  5409  001074                     __ptext25:
  5410                           	callstack 0
  5411  001074                     ___fladd:
  5412                           	callstack 20
  5413  001074  0100               	movlb	0	; () banked
  5414  001076  518A               	movf	(___fladd@b+3)& (0+255),w,b
  5415  001078  0B80               	andlw	128
  5416  00107A  6F93               	movwf	___fladd@signs& (0+255),b
  5417  00107C  518A               	movf	(___fladd@b+3)& (0+255),w,b
  5418  00107E  258A               	addwf	(___fladd@b+3)& (0+255),w,b
  5419  001080  6F95               	movwf	___fladd@bexp& (0+255),b
  5420  001082                     
  5421                           ; BSR set to: 0
  5422  001082  AF89               	btfss	(___fladd@b+2)& (0+255),7,b
  5423  001084  EF46  F008         	goto	u5001
  5424  001088  EF48  F008         	goto	u5000
  5425  00108C                     u5001:
  5426  00108C  EF49  F008         	goto	l5960
  5427  001090                     u5000:
  5428  001090                     
  5429                           ; BSR set to: 0
  5430  001090  8195               	bsf	___fladd@bexp& (0+255),0,b
  5431  001092                     l5960:
  5432                           
  5433                           ; BSR set to: 0
  5434  001092  5195               	movf	___fladd@bexp& (0+255),w,b
  5435  001094  B4D8               	btfsc	status,2,c
  5436  001096  EF4F  F008         	goto	u5011
  5437  00109A  EF51  F008         	goto	u5010
  5438  00109E                     u5011:
  5439  00109E  EF66  F008         	goto	l5970
  5440  0010A2                     u5010:
  5441  0010A2                     
  5442                           ; BSR set to: 0
  5443  0010A2  2995               	incf	___fladd@bexp& (0+255),w,b
  5444  0010A4  A4D8               	btfss	status,2,c
  5445  0010A6  EF57  F008         	goto	u5021
  5446  0010AA  EF59  F008         	goto	u5020
  5447  0010AE                     u5021:
  5448  0010AE  EF61  F008         	goto	l5966
  5449  0010B2                     u5020:
  5450  0010B2                     
  5451                           ; BSR set to: 0
  5452  0010B2  0E00               	movlw	0
  5453  0010B4  6F87               	movwf	___fladd@b& (0+255),b
  5454  0010B6  0E00               	movlw	0
  5455  0010B8  6F88               	movwf	(___fladd@b+1)& (0+255),b
  5456  0010BA  0E00               	movlw	0
  5457  0010BC  6F89               	movwf	(___fladd@b+2)& (0+255),b
  5458  0010BE  0E00               	movlw	0
  5459  0010C0  6F8A               	movwf	(___fladd@b+3)& (0+255),b
  5460  0010C2                     l5966:
  5461                           
  5462                           ; BSR set to: 0
  5463  0010C2  8F89               	bsf	(___fladd@b+2)& (0+255),7,b
  5464  0010C4                     
  5465                           ; BSR set to: 0
  5466  0010C4  0E00               	movlw	0
  5467  0010C6  6F8A               	movwf	(___fladd@b+3)& (0+255),b
  5468  0010C8  EF6E  F008         	goto	l5972
  5469  0010CC                     l5970:
  5470                           
  5471                           ; BSR set to: 0
  5472  0010CC  0E00               	movlw	0
  5473  0010CE  6F87               	movwf	___fladd@b& (0+255),b
  5474  0010D0  0E00               	movlw	0
  5475  0010D2  6F88               	movwf	(___fladd@b+1)& (0+255),b
  5476  0010D4  0E00               	movlw	0
  5477  0010D6  6F89               	movwf	(___fladd@b+2)& (0+255),b
  5478  0010D8  0E00               	movlw	0
  5479  0010DA  6F8A               	movwf	(___fladd@b+3)& (0+255),b
  5480  0010DC                     l5972:
  5481                           
  5482                           ; BSR set to: 0
  5483  0010DC  518E               	movf	(___fladd@a+3)& (0+255),w,b
  5484  0010DE  0B80               	andlw	128
  5485  0010E0  6F94               	movwf	___fladd@aexp& (0+255),b
  5486  0010E2                     
  5487                           ; BSR set to: 0
  5488  0010E2  5193               	movf	___fladd@signs& (0+255),w,b
  5489  0010E4  1994               	xorwf	___fladd@aexp& (0+255),w,b
  5490  0010E6  B4D8               	btfsc	status,2,c
  5491  0010E8  EF78  F008         	goto	u5031
  5492  0010EC  EF7A  F008         	goto	u5030
  5493  0010F0                     u5031:
  5494  0010F0  EF7B  F008         	goto	l5978
  5495  0010F4                     u5030:
  5496  0010F4                     
  5497                           ; BSR set to: 0
  5498  0010F4  8D93               	bsf	___fladd@signs& (0+255),6,b
  5499  0010F6                     l5978:
  5500                           
  5501                           ; BSR set to: 0
  5502  0010F6  518E               	movf	(___fladd@a+3)& (0+255),w,b
  5503  0010F8  258E               	addwf	(___fladd@a+3)& (0+255),w,b
  5504  0010FA  6F94               	movwf	___fladd@aexp& (0+255),b
  5505  0010FC                     
  5506                           ; BSR set to: 0
  5507  0010FC  AF8D               	btfss	(___fladd@a+2)& (0+255),7,b
  5508  0010FE  EF83  F008         	goto	u5041
  5509  001102  EF85  F008         	goto	u5040
  5510  001106                     u5041:
  5511  001106  EF86  F008         	goto	l5984
  5512  00110A                     u5040:
  5513  00110A                     
  5514                           ; BSR set to: 0
  5515  00110A  8194               	bsf	___fladd@aexp& (0+255),0,b
  5516  00110C                     l5984:
  5517                           
  5518                           ; BSR set to: 0
  5519  00110C  5194               	movf	___fladd@aexp& (0+255),w,b
  5520  00110E  B4D8               	btfsc	status,2,c
  5521  001110  EF8C  F008         	goto	u5051
  5522  001114  EF8E  F008         	goto	u5050
  5523  001118                     u5051:
  5524  001118  EFA3  F008         	goto	l5994
  5525  00111C                     u5050:
  5526  00111C                     
  5527                           ; BSR set to: 0
  5528  00111C  2994               	incf	___fladd@aexp& (0+255),w,b
  5529  00111E  A4D8               	btfss	status,2,c
  5530  001120  EF94  F008         	goto	u5061
  5531  001124  EF96  F008         	goto	u5060
  5532  001128                     u5061:
  5533  001128  EF9E  F008         	goto	l5990
  5534  00112C                     u5060:
  5535  00112C                     
  5536                           ; BSR set to: 0
  5537  00112C  0E00               	movlw	0
  5538  00112E  6F8B               	movwf	___fladd@a& (0+255),b
  5539  001130  0E00               	movlw	0
  5540  001132  6F8C               	movwf	(___fladd@a+1)& (0+255),b
  5541  001134  0E00               	movlw	0
  5542  001136  6F8D               	movwf	(___fladd@a+2)& (0+255),b
  5543  001138  0E00               	movlw	0
  5544  00113A  6F8E               	movwf	(___fladd@a+3)& (0+255),b
  5545  00113C                     l5990:
  5546                           
  5547                           ; BSR set to: 0
  5548  00113C  8F8D               	bsf	(___fladd@a+2)& (0+255),7,b
  5549  00113E                     
  5550                           ; BSR set to: 0
  5551  00113E  0E00               	movlw	0
  5552  001140  6F8E               	movwf	(___fladd@a+3)& (0+255),b
  5553  001142  EFAB  F008         	goto	l5996
  5554  001146                     l5994:
  5555                           
  5556                           ; BSR set to: 0
  5557  001146  0E00               	movlw	0
  5558  001148  6F8B               	movwf	___fladd@a& (0+255),b
  5559  00114A  0E00               	movlw	0
  5560  00114C  6F8C               	movwf	(___fladd@a+1)& (0+255),b
  5561  00114E  0E00               	movlw	0
  5562  001150  6F8D               	movwf	(___fladd@a+2)& (0+255),b
  5563  001152  0E00               	movlw	0
  5564  001154  6F8E               	movwf	(___fladd@a+3)& (0+255),b
  5565  001156                     l5996:
  5566                           
  5567                           ; BSR set to: 0
  5568  001156  5195               	movf	___fladd@bexp& (0+255),w,b
  5569  001158  5D94               	subwf	___fladd@aexp& (0+255),w,b
  5570  00115A  B0D8               	btfsc	status,0,c
  5571  00115C  EFB2  F008         	goto	u5071
  5572  001160  EFB4  F008         	goto	u5070
  5573  001164                     u5071:
  5574  001164  EFDB  F008         	goto	l6032
  5575  001168                     u5070:
  5576  001168                     
  5577                           ; BSR set to: 0
  5578  001168  AD93               	btfss	___fladd@signs& (0+255),6,b
  5579  00116A  EFB9  F008         	goto	u5081
  5580  00116E  EFBB  F008         	goto	u5080
  5581  001172                     u5081:
  5582  001172  EFBD  F008         	goto	l6002
  5583  001176                     u5080:
  5584  001176                     
  5585                           ; BSR set to: 0
  5586  001176  0E80               	movlw	128
  5587  001178  1B93               	xorwf	___fladd@signs& (0+255),f,b
  5588  00117A                     l6002:
  5589                           
  5590                           ; BSR set to: 0
  5591  00117A  C095  F096         	movff	___fladd@bexp,___fladd@grs
  5592  00117E                     
  5593                           ; BSR set to: 0
  5594  00117E  C094  F095         	movff	___fladd@aexp,___fladd@bexp
  5595  001182                     
  5596                           ; BSR set to: 0
  5597  001182  C096  F094         	movff	___fladd@grs,___fladd@aexp
  5598  001186                     
  5599                           ; BSR set to: 0
  5600  001186  C087  F096         	movff	___fladd@b,___fladd@grs
  5601  00118A                     
  5602                           ; BSR set to: 0
  5603  00118A  C08B  F087         	movff	___fladd@a,___fladd@b
  5604  00118E                     
  5605                           ; BSR set to: 0
  5606  00118E  C096  F08B         	movff	___fladd@grs,___fladd@a
  5607  001192                     
  5608                           ; BSR set to: 0
  5609  001192  C088  F096         	movff	___fladd@b+1,___fladd@grs
  5610  001196                     
  5611                           ; BSR set to: 0
  5612  001196  C08C  F088         	movff	___fladd@a+1,___fladd@b+1
  5613  00119A                     
  5614                           ; BSR set to: 0
  5615  00119A  C096  F08C         	movff	___fladd@grs,___fladd@a+1
  5616  00119E                     
  5617                           ; BSR set to: 0
  5618  00119E  C089  F096         	movff	___fladd@b+2,___fladd@grs
  5619  0011A2                     
  5620                           ; BSR set to: 0
  5621  0011A2  C08D  F089         	movff	___fladd@a+2,___fladd@b+2
  5622  0011A6                     
  5623                           ; BSR set to: 0
  5624  0011A6  C096  F08D         	movff	___fladd@grs,___fladd@a+2
  5625  0011AA                     
  5626                           ; BSR set to: 0
  5627  0011AA  C08A  F096         	movff	___fladd@b+3,___fladd@grs
  5628  0011AE                     
  5629                           ; BSR set to: 0
  5630  0011AE  C08E  F08A         	movff	___fladd@a+3,___fladd@b+3
  5631  0011B2                     
  5632                           ; BSR set to: 0
  5633  0011B2  C096  F08E         	movff	___fladd@grs,___fladd@a+3
  5634  0011B6                     l6032:
  5635                           
  5636                           ; BSR set to: 0
  5637  0011B6  0E00               	movlw	0
  5638  0011B8  6F96               	movwf	___fladd@grs& (0+255),b
  5639  0011BA                     
  5640                           ; BSR set to: 0
  5641  0011BA  5195               	movf	___fladd@bexp& (0+255),w,b
  5642  0011BC  C094  F08F         	movff	___fladd@aexp,??___fladd
  5643  0011C0  6B90               	clrf	(??___fladd+1)& (0+255),b
  5644  0011C2  5F8F               	subwf	??___fladd& (0+255),f,b
  5645  0011C4  0E00               	movlw	0
  5646  0011C6  5B90               	subwfb	(??___fladd+1)& (0+255),f,b
  5647  0011C8  BF90               	btfsc	(??___fladd+1)& (0+255),7,b
  5648  0011CA  EFF0  F008         	goto	u5091
  5649  0011CE  5190               	movf	(??___fladd+1)& (0+255),w,b
  5650  0011D0  E109               	bnz	u5090
  5651  0011D2  0E1A               	movlw	26
  5652  0011D4  5D8F               	subwf	??___fladd& (0+255),w,b
  5653  0011D6  A0D8               	btfss	status,0,c
  5654  0011D8  EFF0  F008         	goto	u5091
  5655  0011DC  EFF2  F008         	goto	u5090
  5656  0011E0                     u5091:
  5657  0011E0  EF29  F009         	goto	l1864
  5658  0011E4                     u5090:
  5659  0011E4                     
  5660                           ; BSR set to: 0
  5661  0011E4  5187               	movf	___fladd@b& (0+255),w,b
  5662  0011E6  1188               	iorwf	(___fladd@b+1)& (0+255),w,b
  5663  0011E8  1189               	iorwf	(___fladd@b+2)& (0+255),w,b
  5664  0011EA  118A               	iorwf	(___fladd@b+3)& (0+255),w,b
  5665  0011EC  A4D8               	btfss	status,2,c
  5666  0011EE  EFFB  F008         	goto	u5101
  5667  0011F2  EFFE  F008         	goto	u5100
  5668  0011F6                     u5101:
  5669  0011F6  0E01               	movlw	1
  5670  0011F8  EFFF  F008         	goto	u5110
  5671  0011FC                     u5100:
  5672  0011FC  0E00               	movlw	0
  5673  0011FE                     u5110:
  5674  0011FE  6F96               	movwf	___fladd@grs& (0+255),b
  5675  001200                     
  5676                           ; BSR set to: 0
  5677  001200  0E00               	movlw	0
  5678  001202  6F87               	movwf	___fladd@b& (0+255),b
  5679  001204  0E00               	movlw	0
  5680  001206  6F88               	movwf	(___fladd@b+1)& (0+255),b
  5681  001208  0E00               	movlw	0
  5682  00120A  6F89               	movwf	(___fladd@b+2)& (0+255),b
  5683  00120C  0E00               	movlw	0
  5684  00120E  6F8A               	movwf	(___fladd@b+3)& (0+255),b
  5685  001210                     
  5686                           ; BSR set to: 0
  5687  001210  C094  F095         	movff	___fladd@aexp,___fladd@bexp
  5688  001214  EF32  F009         	goto	l1863
  5689  001218                     l1865:
  5690                           
  5691                           ; BSR set to: 0
  5692  001218  A196               	btfss	___fladd@grs& (0+255),0,b
  5693  00121A  EF11  F009         	goto	u5121
  5694  00121E  EF13  F009         	goto	u5120
  5695  001222                     u5121:
  5696  001222  EF19  F009         	goto	l6044
  5697  001226                     u5120:
  5698  001226                     
  5699                           ; BSR set to: 0
  5700  001226  90D8               	bcf	status,0,c
  5701  001228  3196               	rrcf	___fladd@grs& (0+255),w,b
  5702  00122A  0901               	iorlw	1
  5703  00122C  6F96               	movwf	___fladd@grs& (0+255),b
  5704  00122E  EF1B  F009         	goto	l6046
  5705  001232                     l6044:
  5706                           
  5707                           ; BSR set to: 0
  5708  001232  90D8               	bcf	status,0,c
  5709  001234  3396               	rrcf	___fladd@grs& (0+255),f,b
  5710  001236                     l6046:
  5711                           
  5712                           ; BSR set to: 0
  5713  001236  A187               	btfss	___fladd@b& (0+255),0,b
  5714  001238  EF20  F009         	goto	u5131
  5715  00123C  EF22  F009         	goto	u5130
  5716  001240                     u5131:
  5717  001240  EF23  F009         	goto	l6050
  5718  001244                     u5130:
  5719  001244                     
  5720                           ; BSR set to: 0
  5721  001244  8F96               	bsf	___fladd@grs& (0+255),7,b
  5722  001246                     l6050:
  5723                           
  5724                           ; BSR set to: 0
  5725  001246  358A               	rlcf	(___fladd@b+3)& (0+255),w,b
  5726  001248  338A               	rrcf	(___fladd@b+3)& (0+255),f,b
  5727  00124A  3389               	rrcf	(___fladd@b+2)& (0+255),f,b
  5728  00124C  3388               	rrcf	(___fladd@b+1)& (0+255),f,b
  5729  00124E  3387               	rrcf	___fladd@b& (0+255),f,b
  5730  001250                     
  5731                           ; BSR set to: 0
  5732  001250  2B95               	incf	___fladd@bexp& (0+255),f,b
  5733  001252                     l1864:
  5734                           
  5735                           ; BSR set to: 0
  5736  001252  5194               	movf	___fladd@aexp& (0+255),w,b
  5737  001254  5D95               	subwf	___fladd@bexp& (0+255),w,b
  5738  001256  A0D8               	btfss	status,0,c
  5739  001258  EF30  F009         	goto	u5141
  5740  00125C  EF32  F009         	goto	u5140
  5741  001260                     u5141:
  5742  001260  EF0C  F009         	goto	l1865
  5743  001264                     u5140:
  5744  001264                     l1863:
  5745                           
  5746                           ; BSR set to: 0
  5747  001264  BD93               	btfsc	___fladd@signs& (0+255),6,b
  5748  001266  EF37  F009         	goto	u5151
  5749  00126A  EF39  F009         	goto	u5150
  5750  00126E                     u5151:
  5751  00126E  EF79  F009         	goto	l6078
  5752  001272                     u5150:
  5753  001272                     
  5754                           ; BSR set to: 0
  5755  001272  5195               	movf	___fladd@bexp& (0+255),w,b
  5756  001274  A4D8               	btfss	status,2,c
  5757  001276  EF3F  F009         	goto	u5161
  5758  00127A  EF41  F009         	goto	u5160
  5759  00127E                     u5161:
  5760  00127E  EF4B  F009         	goto	l6060
  5761  001282                     u5160:
  5762  001282                     
  5763                           ; BSR set to: 0
  5764  001282  0E00               	movlw	0
  5765  001284  6F87               	movwf	?___fladd& (0+255),b
  5766  001286  0E00               	movlw	0
  5767  001288  6F88               	movwf	(?___fladd+1)& (0+255),b
  5768  00128A  0E00               	movlw	0
  5769  00128C  6F89               	movwf	(?___fladd+2)& (0+255),b
  5770  00128E  0E00               	movlw	0
  5771  001290  6F8A               	movwf	(?___fladd+3)& (0+255),b
  5772  001292  EF9A  F00A         	goto	l1872
  5773  001296                     l6060:
  5774                           
  5775                           ; BSR set to: 0
  5776  001296  518B               	movf	___fladd@a& (0+255),w,b
  5777  001298  2787               	addwf	___fladd@b& (0+255),f,b
  5778  00129A  518C               	movf	(___fladd@a+1)& (0+255),w,b
  5779  00129C  2388               	addwfc	(___fladd@b+1)& (0+255),f,b
  5780  00129E  518D               	movf	(___fladd@a+2)& (0+255),w,b
  5781  0012A0  2389               	addwfc	(___fladd@b+2)& (0+255),f,b
  5782  0012A2  518E               	movf	(___fladd@a+3)& (0+255),w,b
  5783  0012A4  238A               	addwfc	(___fladd@b+3)& (0+255),f,b
  5784  0012A6                     
  5785                           ; BSR set to: 0
  5786  0012A6  A18A               	btfss	(___fladd@b+3)& (0+255),0,b
  5787  0012A8  EF58  F009         	goto	u5171
  5788  0012AC  EF5A  F009         	goto	u5170
  5789  0012B0                     u5171:
  5790  0012B0  EF06  F00A         	goto	l6114
  5791  0012B4                     u5170:
  5792  0012B4                     
  5793                           ; BSR set to: 0
  5794  0012B4  A196               	btfss	___fladd@grs& (0+255),0,b
  5795  0012B6  EF5F  F009         	goto	u5181
  5796  0012BA  EF61  F009         	goto	u5180
  5797  0012BE                     u5181:
  5798  0012BE  EF67  F009         	goto	l6068
  5799  0012C2                     u5180:
  5800  0012C2                     
  5801                           ; BSR set to: 0
  5802  0012C2  90D8               	bcf	status,0,c
  5803  0012C4  3196               	rrcf	___fladd@grs& (0+255),w,b
  5804  0012C6  0901               	iorlw	1
  5805  0012C8  6F96               	movwf	___fladd@grs& (0+255),b
  5806  0012CA  EF69  F009         	goto	l6070
  5807  0012CE                     l6068:
  5808                           
  5809                           ; BSR set to: 0
  5810  0012CE  90D8               	bcf	status,0,c
  5811  0012D0  3396               	rrcf	___fladd@grs& (0+255),f,b
  5812  0012D2                     l6070:
  5813                           
  5814                           ; BSR set to: 0
  5815  0012D2  A187               	btfss	___fladd@b& (0+255),0,b
  5816  0012D4  EF6E  F009         	goto	u5191
  5817  0012D8  EF70  F009         	goto	u5190
  5818  0012DC                     u5191:
  5819  0012DC  EF71  F009         	goto	l6074
  5820  0012E0                     u5190:
  5821  0012E0                     
  5822                           ; BSR set to: 0
  5823  0012E0  8F96               	bsf	___fladd@grs& (0+255),7,b
  5824  0012E2                     l6074:
  5825                           
  5826                           ; BSR set to: 0
  5827  0012E2  358A               	rlcf	(___fladd@b+3)& (0+255),w,b
  5828  0012E4  338A               	rrcf	(___fladd@b+3)& (0+255),f,b
  5829  0012E6  3389               	rrcf	(___fladd@b+2)& (0+255),f,b
  5830  0012E8  3388               	rrcf	(___fladd@b+1)& (0+255),f,b
  5831  0012EA  3387               	rrcf	___fladd@b& (0+255),f,b
  5832  0012EC                     
  5833                           ; BSR set to: 0
  5834  0012EC  2B95               	incf	___fladd@bexp& (0+255),f,b
  5835  0012EE  EF06  F00A         	goto	l6114
  5836  0012F2                     l6078:
  5837                           
  5838                           ; BSR set to: 0
  5839  0012F2  518B               	movf	___fladd@a& (0+255),w,b
  5840  0012F4  5D87               	subwf	___fladd@b& (0+255),w,b
  5841  0012F6  518C               	movf	(___fladd@a+1)& (0+255),w,b
  5842  0012F8  5988               	subwfb	(___fladd@b+1)& (0+255),w,b
  5843  0012FA  518D               	movf	(___fladd@a+2)& (0+255),w,b
  5844  0012FC  5989               	subwfb	(___fladd@b+2)& (0+255),w,b
  5845  0012FE  518A               	movf	(___fladd@b+3)& (0+255),w,b
  5846  001300  0A80               	xorlw	128
  5847  001302  6F8F               	movwf	??___fladd& (0+255),b
  5848  001304  518E               	movf	(___fladd@a+3)& (0+255),w,b
  5849  001306  0A80               	xorlw	128
  5850  001308  598F               	subwfb	??___fladd& (0+255),w,b
  5851  00130A  B0D8               	btfsc	status,0,c
  5852  00130C  EF8A  F009         	goto	u5201
  5853  001310  EF8C  F009         	goto	u5200
  5854  001314                     u5201:
  5855  001314  EFB7  F009         	goto	l6088
  5856  001318                     u5200:
  5857  001318                     
  5858                           ; BSR set to: 0
  5859  001318  5187               	movf	___fladd@b& (0+255),w,b
  5860  00131A  5D8B               	subwf	___fladd@a& (0+255),w,b
  5861  00131C  6F8F               	movwf	??___fladd& (0+255),b
  5862  00131E  5188               	movf	(___fladd@b+1)& (0+255),w,b
  5863  001320  598C               	subwfb	(___fladd@a+1)& (0+255),w,b
  5864  001322  6F90               	movwf	(??___fladd+1)& (0+255),b
  5865  001324  5189               	movf	(___fladd@b+2)& (0+255),w,b
  5866  001326  598D               	subwfb	(___fladd@a+2)& (0+255),w,b
  5867  001328  6F91               	movwf	(??___fladd+2)& (0+255),b
  5868  00132A  518A               	movf	(___fladd@b+3)& (0+255),w,b
  5869  00132C  598E               	subwfb	(___fladd@a+3)& (0+255),w,b
  5870  00132E  6F92               	movwf	(??___fladd+3)& (0+255),b
  5871  001330  0EFF               	movlw	255
  5872  001332  258F               	addwf	??___fladd& (0+255),w,b
  5873  001334  6F87               	movwf	___fladd@b& (0+255),b
  5874  001336  0EFF               	movlw	255
  5875  001338  2190               	addwfc	(??___fladd+1)& (0+255),w,b
  5876  00133A  6F88               	movwf	(___fladd@b+1)& (0+255),b
  5877  00133C  0EFF               	movlw	255
  5878  00133E  2191               	addwfc	(??___fladd+2)& (0+255),w,b
  5879  001340  6F89               	movwf	(___fladd@b+2)& (0+255),b
  5880  001342  0EFF               	movlw	255
  5881  001344  2192               	addwfc	(??___fladd+3)& (0+255),w,b
  5882  001346  6F8A               	movwf	(___fladd@b+3)& (0+255),b
  5883  001348  0E80               	movlw	128
  5884  00134A  1B93               	xorwf	___fladd@signs& (0+255),f,b
  5885  00134C                     
  5886                           ; BSR set to: 0
  5887  00134C  6D96               	negf	___fladd@grs& (0+255),b
  5888  00134E                     
  5889                           ; BSR set to: 0
  5890  00134E  5196               	movf	___fladd@grs& (0+255),w,b
  5891  001350  A4D8               	btfss	status,2,c
  5892  001352  EFAD  F009         	goto	u5211
  5893  001356  EFAF  F009         	goto	u5210
  5894  00135A                     u5211:
  5895  00135A  EFBF  F009         	goto	l1880
  5896  00135E                     u5210:
  5897  00135E                     
  5898                           ; BSR set to: 0
  5899  00135E  0E01               	movlw	1
  5900  001360  2787               	addwf	___fladd@b& (0+255),f,b
  5901  001362  0E00               	movlw	0
  5902  001364  2388               	addwfc	(___fladd@b+1)& (0+255),f,b
  5903  001366  2389               	addwfc	(___fladd@b+2)& (0+255),f,b
  5904  001368  238A               	addwfc	(___fladd@b+3)& (0+255),f,b
  5905  00136A  EFBF  F009         	goto	l1880
  5906  00136E                     l6088:
  5907                           
  5908                           ; BSR set to: 0
  5909  00136E  518B               	movf	___fladd@a& (0+255),w,b
  5910  001370  5F87               	subwf	___fladd@b& (0+255),f,b
  5911  001372  518C               	movf	(___fladd@a+1)& (0+255),w,b
  5912  001374  5B88               	subwfb	(___fladd@b+1)& (0+255),f,b
  5913  001376  518D               	movf	(___fladd@a+2)& (0+255),w,b
  5914  001378  5B89               	subwfb	(___fladd@b+2)& (0+255),f,b
  5915  00137A  518E               	movf	(___fladd@a+3)& (0+255),w,b
  5916  00137C  5B8A               	subwfb	(___fladd@b+3)& (0+255),f,b
  5917  00137E                     l1880:
  5918                           
  5919                           ; BSR set to: 0
  5920  00137E  5187               	movf	___fladd@b& (0+255),w,b
  5921  001380  1188               	iorwf	(___fladd@b+1)& (0+255),w,b
  5922  001382  1189               	iorwf	(___fladd@b+2)& (0+255),w,b
  5923  001384  118A               	iorwf	(___fladd@b+3)& (0+255),w,b
  5924  001386  A4D8               	btfss	status,2,c
  5925  001388  EFC8  F009         	goto	u5221
  5926  00138C  EFCA  F009         	goto	u5220
  5927  001390                     u5221:
  5928  001390  EFFF  F009         	goto	l6112
  5929  001394                     u5220:
  5930  001394                     
  5931                           ; BSR set to: 0
  5932  001394  5196               	movf	___fladd@grs& (0+255),w,b
  5933  001396  A4D8               	btfss	status,2,c
  5934  001398  EFD0  F009         	goto	u5231
  5935  00139C  EFD2  F009         	goto	u5230
  5936  0013A0                     u5231:
  5937  0013A0  EFFF  F009         	goto	l6112
  5938  0013A4                     u5230:
  5939  0013A4                     
  5940                           ; BSR set to: 0
  5941  0013A4  0E00               	movlw	0
  5942  0013A6  6F87               	movwf	?___fladd& (0+255),b
  5943  0013A8  0E00               	movlw	0
  5944  0013AA  6F88               	movwf	(?___fladd+1)& (0+255),b
  5945  0013AC  0E00               	movlw	0
  5946  0013AE  6F89               	movwf	(?___fladd+2)& (0+255),b
  5947  0013B0  0E00               	movlw	0
  5948  0013B2  6F8A               	movwf	(?___fladd+3)& (0+255),b
  5949  0013B4  EF9A  F00A         	goto	l1872
  5950  0013B8                     l6096:
  5951                           
  5952                           ; BSR set to: 0
  5953  0013B8  90D8               	bcf	status,0,c
  5954  0013BA  3787               	rlcf	___fladd@b& (0+255),f,b
  5955  0013BC  3788               	rlcf	(___fladd@b+1)& (0+255),f,b
  5956  0013BE  3789               	rlcf	(___fladd@b+2)& (0+255),f,b
  5957  0013C0  378A               	rlcf	(___fladd@b+3)& (0+255),f,b
  5958  0013C2                     
  5959                           ; BSR set to: 0
  5960  0013C2  AF96               	btfss	___fladd@grs& (0+255),7,b
  5961  0013C4  EFE6  F009         	goto	u5241
  5962  0013C8  EFE8  F009         	goto	u5240
  5963  0013CC                     u5241:
  5964  0013CC  EFE9  F009         	goto	l6102
  5965  0013D0                     u5240:
  5966  0013D0                     
  5967                           ; BSR set to: 0
  5968  0013D0  8187               	bsf	___fladd@b& (0+255),0,b
  5969  0013D2                     l6102:
  5970                           
  5971                           ; BSR set to: 0
  5972  0013D2  A196               	btfss	___fladd@grs& (0+255),0,b
  5973  0013D4  EFEE  F009         	goto	u5251
  5974  0013D8  EFF0  F009         	goto	u5250
  5975  0013DC                     u5251:
  5976  0013DC  EFF4  F009         	goto	l6106
  5977  0013E0                     u5250:
  5978  0013E0                     
  5979                           ; BSR set to: 0
  5980  0013E0  80D8               	bsf	status,0,c
  5981  0013E2  3796               	rlcf	___fladd@grs& (0+255),f,b
  5982  0013E4  EFF6  F009         	goto	l6108
  5983  0013E8                     l6106:
  5984                           
  5985                           ; BSR set to: 0
  5986  0013E8  90D8               	bcf	status,0,c
  5987  0013EA  3796               	rlcf	___fladd@grs& (0+255),f,b
  5988  0013EC                     l6108:
  5989                           
  5990                           ; BSR set to: 0
  5991  0013EC  5195               	movf	___fladd@bexp& (0+255),w,b
  5992  0013EE  B4D8               	btfsc	status,2,c
  5993  0013F0  EFFC  F009         	goto	u5261
  5994  0013F4  EFFE  F009         	goto	u5260
  5995  0013F8                     u5261:
  5996  0013F8  EFFF  F009         	goto	l6112
  5997  0013FC                     u5260:
  5998  0013FC                     
  5999                           ; BSR set to: 0
  6000  0013FC  0795               	decf	___fladd@bexp& (0+255),f,b
  6001  0013FE                     l6112:
  6002                           
  6003                           ; BSR set to: 0
  6004  0013FE  AF89               	btfss	(___fladd@b+2)& (0+255),7,b
  6005  001400  EF04  F00A         	goto	u5271
  6006  001404  EF06  F00A         	goto	u5270
  6007  001408                     u5271:
  6008  001408  EFDC  F009         	goto	l6096
  6009  00140C                     u5270:
  6010  00140C                     l6114:
  6011                           
  6012                           ; BSR set to: 0
  6013  00140C  0E00               	movlw	0
  6014  00140E  6F94               	movwf	___fladd@aexp& (0+255),b
  6015  001410                     
  6016                           ; BSR set to: 0
  6017  001410  AF96               	btfss	___fladd@grs& (0+255),7,b
  6018  001412  EF0D  F00A         	goto	u5281
  6019  001416  EF0F  F00A         	goto	u5280
  6020  00141A                     u5281:
  6021  00141A  EF27  F00A         	goto	l1889
  6022  00141E                     u5280:
  6023  00141E                     
  6024                           ; BSR set to: 0
  6025  00141E  C096  F08F         	movff	___fladd@grs,??___fladd
  6026  001422  0E7F               	movlw	127
  6027  001424  178F               	andwf	??___fladd& (0+255),f,b
  6028  001426  B4D8               	btfsc	status,2,c
  6029  001428  EF18  F00A         	goto	u5291
  6030  00142C  EF1A  F00A         	goto	u5290
  6031  001430                     u5291:
  6032  001430  EF1E  F00A         	goto	l1890
  6033  001434                     u5290:
  6034  001434                     l6120:
  6035                           
  6036                           ; BSR set to: 0
  6037  001434  0E01               	movlw	1
  6038  001436  6F94               	movwf	___fladd@aexp& (0+255),b
  6039  001438  EF27  F00A         	goto	l1889
  6040  00143C                     l1890:
  6041                           
  6042                           ; BSR set to: 0
  6043  00143C  A187               	btfss	___fladd@b& (0+255),0,b
  6044  00143E  EF23  F00A         	goto	u5301
  6045  001442  EF25  F00A         	goto	u5300
  6046  001446                     u5301:
  6047  001446  EF27  F00A         	goto	l1889
  6048  00144A                     u5300:
  6049  00144A  EF1A  F00A         	goto	l6120
  6050  00144E                     l1889:
  6051                           
  6052                           ; BSR set to: 0
  6053  00144E  5194               	movf	___fladd@aexp& (0+255),w,b
  6054  001450  B4D8               	btfsc	status,2,c
  6055  001452  EF2D  F00A         	goto	u5311
  6056  001456  EF2F  F00A         	goto	u5310
  6057  00145A                     u5311:
  6058  00145A  EF5A  F00A         	goto	l6132
  6059  00145E                     u5310:
  6060  00145E                     
  6061                           ; BSR set to: 0
  6062  00145E  0E01               	movlw	1
  6063  001460  2787               	addwf	___fladd@b& (0+255),f,b
  6064  001462  0E00               	movlw	0
  6065  001464  2388               	addwfc	(___fladd@b+1)& (0+255),f,b
  6066  001466  2389               	addwfc	(___fladd@b+2)& (0+255),f,b
  6067  001468  238A               	addwfc	(___fladd@b+3)& (0+255),f,b
  6068  00146A                     
  6069                           ; BSR set to: 0
  6070  00146A  A18A               	btfss	(___fladd@b+3)& (0+255),0,b
  6071  00146C  EF3A  F00A         	goto	u5321
  6072  001470  EF3C  F00A         	goto	u5320
  6073  001474                     u5321:
  6074  001474  EF5A  F00A         	goto	l6132
  6075  001478                     u5320:
  6076  001478                     
  6077                           ; BSR set to: 0
  6078  001478  C087  F08F         	movff	___fladd@b,??___fladd
  6079  00147C  C088  F090         	movff	___fladd@b+1,??___fladd+1
  6080  001480  C089  F091         	movff	___fladd@b+2,??___fladd+2
  6081  001484  C08A  F092         	movff	___fladd@b+3,??___fladd+3
  6082  001488  3592               	rlcf	(??___fladd+3)& (0+255),w,b
  6083  00148A  3392               	rrcf	(??___fladd+3)& (0+255),f,b
  6084  00148C  3391               	rrcf	(??___fladd+2)& (0+255),f,b
  6085  00148E  3390               	rrcf	(??___fladd+1)& (0+255),f,b
  6086  001490  338F               	rrcf	??___fladd& (0+255),f,b
  6087  001492  C08F  F087         	movff	??___fladd,___fladd@b
  6088  001496  C090  F088         	movff	??___fladd+1,___fladd@b+1
  6089  00149A  C091  F089         	movff	??___fladd+2,___fladd@b+2
  6090  00149E  C092  F08A         	movff	??___fladd+3,___fladd@b+3
  6091  0014A2  2995               	incf	___fladd@bexp& (0+255),w,b
  6092  0014A4  B4D8               	btfsc	status,2,c
  6093  0014A6  EF57  F00A         	goto	u5331
  6094  0014AA  EF59  F00A         	goto	u5330
  6095  0014AE                     u5331:
  6096  0014AE  EF5A  F00A         	goto	l6132
  6097  0014B2                     u5330:
  6098  0014B2                     
  6099                           ; BSR set to: 0
  6100  0014B2  2B95               	incf	___fladd@bexp& (0+255),f,b
  6101  0014B4                     l6132:
  6102                           
  6103                           ; BSR set to: 0
  6104  0014B4  2995               	incf	___fladd@bexp& (0+255),w,b
  6105  0014B6  B4D8               	btfsc	status,2,c
  6106  0014B8  EF60  F00A         	goto	u5341
  6107  0014BC  EF62  F00A         	goto	u5340
  6108  0014C0                     u5341:
  6109  0014C0  EF6A  F00A         	goto	l6136
  6110  0014C4                     u5340:
  6111  0014C4                     
  6112                           ; BSR set to: 0
  6113  0014C4  5195               	movf	___fladd@bexp& (0+255),w,b
  6114  0014C6  A4D8               	btfss	status,2,c
  6115  0014C8  EF68  F00A         	goto	u5351
  6116  0014CC  EF6A  F00A         	goto	u5350
  6117  0014D0                     u5351:
  6118  0014D0  EF7C  F00A         	goto	l6140
  6119  0014D4                     u5350:
  6120  0014D4                     l6136:
  6121                           
  6122                           ; BSR set to: 0
  6123  0014D4  0E00               	movlw	0
  6124  0014D6  6F87               	movwf	___fladd@b& (0+255),b
  6125  0014D8  0E00               	movlw	0
  6126  0014DA  6F88               	movwf	(___fladd@b+1)& (0+255),b
  6127  0014DC  0E00               	movlw	0
  6128  0014DE  6F89               	movwf	(___fladd@b+2)& (0+255),b
  6129  0014E0  0E00               	movlw	0
  6130  0014E2  6F8A               	movwf	(___fladd@b+3)& (0+255),b
  6131  0014E4  5195               	movf	___fladd@bexp& (0+255),w,b
  6132  0014E6  A4D8               	btfss	status,2,c
  6133  0014E8  EF78  F00A         	goto	u5361
  6134  0014EC  EF7A  F00A         	goto	u5360
  6135  0014F0                     u5361:
  6136  0014F0  EF7C  F00A         	goto	l6140
  6137  0014F4                     u5360:
  6138  0014F4                     
  6139                           ; BSR set to: 0
  6140  0014F4  0E00               	movlw	0
  6141  0014F6  6F93               	movwf	___fladd@signs& (0+255),b
  6142  0014F8                     l6140:
  6143                           
  6144                           ; BSR set to: 0
  6145  0014F8  A195               	btfss	___fladd@bexp& (0+255),0,b
  6146  0014FA  EF81  F00A         	goto	u5371
  6147  0014FE  EF83  F00A         	goto	u5370
  6148  001502                     u5371:
  6149  001502  EF86  F00A         	goto	l6144
  6150  001506                     u5370:
  6151  001506                     
  6152                           ; BSR set to: 0
  6153  001506  8F89               	bsf	(___fladd@b+2)& (0+255),7,b
  6154  001508  EF87  F00A         	goto	l6146
  6155  00150C                     l6144:
  6156                           
  6157                           ; BSR set to: 0
  6158  00150C  9F89               	bcf	(___fladd@b+2)& (0+255),7,b
  6159  00150E                     l6146:
  6160                           
  6161                           ; BSR set to: 0
  6162  00150E  90D8               	bcf	status,0,c
  6163  001510  3195               	rrcf	___fladd@bexp& (0+255),w,b
  6164  001512  6F8A               	movwf	(___fladd@b+3)& (0+255),b
  6165  001514                     
  6166                           ; BSR set to: 0
  6167  001514  AF93               	btfss	___fladd@signs& (0+255),7,b
  6168  001516  EF8F  F00A         	goto	u5381
  6169  00151A  EF91  F00A         	goto	u5380
  6170  00151E                     u5381:
  6171  00151E  EF92  F00A         	goto	l6152
  6172  001522                     u5380:
  6173  001522                     
  6174                           ; BSR set to: 0
  6175  001522  8F8A               	bsf	(___fladd@b+3)& (0+255),7,b
  6176  001524                     l6152:
  6177                           
  6178                           ; BSR set to: 0
  6179  001524  C087  F087         	movff	___fladd@b,?___fladd
  6180  001528  C088  F088         	movff	___fladd@b+1,?___fladd+1
  6181  00152C  C089  F089         	movff	___fladd@b+2,?___fladd+2
  6182  001530  C08A  F08A         	movff	___fladd@b+3,?___fladd+3
  6183  001534                     l1872:
  6184                           
  6185                           ; BSR set to: 0
  6186  001534  0012               	return		;funcret
  6187  001536                     __end_of___fladd:
  6188                           	callstack 0
  6189                           
  6190 ;; *************** function _calcMotorPow *****************
  6191 ;; Defined at:
  6192 ;;		line 292 in file "main.c"
  6193 ;; Parameters:    Size  Location     Type
  6194 ;;		None
  6195 ;; Auto vars:     Size  Location     Type
  6196 ;;  oldSpeedDelt    2   67[BANK0 ] short 
  6197 ;;  setSpeedDelt    2   65[BANK0 ] short 
  6198 ;;  addMPow         1   69[BANK0 ] char 
  6199 ;; Return value:  Size  Location     Type
  6200 ;;                  1    wreg      void 
  6201 ;; Registers used:
  6202 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6203 ;; Tracked objects:
  6204 ;;		On entry : 0/0
  6205 ;;		On exit  : 0/0
  6206 ;;		Unchanged: 0/0
  6207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6209 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6210 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6211 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6212 ;;Total ram usage:        7 bytes
  6213 ;; Hardware stack levels used: 1
  6214 ;; Hardware stack levels required when called: 10
  6215 ;; This function calls:
  6216 ;;		___flmul
  6217 ;;		___fltol
  6218 ;;		___xxtofl
  6219 ;;		_actSpeed
  6220 ;;		_setMotor
  6221 ;; This function is called by:
  6222 ;;		_loop
  6223 ;; This function uses a non-reentrant model
  6224 ;;
  6225                           
  6226                           	psect	text26
  6227  00291E                     __ptext26:
  6228                           	callstack 0
  6229  00291E                     _calcMotorPow:
  6230                           	callstack 19
  6231  00291E                     
  6232                           ;main.c: 293:     int16_t setSpeedDelta = setSpeed - currentSpeed;
  6233  00291E  0100               	movlb	0	; () banked
  6234  002920  51DE               	movf	_currentSpeed& (0+255),w,b
  6235  002922  5DE0               	subwf	_setSpeed& (0+255),w,b
  6236  002924  6FA1               	movwf	calcMotorPow@setSpeedDelta& (0+255),b
  6237  002926  51DF               	movf	(_currentSpeed+1)& (0+255),w,b
  6238  002928  59E1               	subwfb	(_setSpeed+1)& (0+255),w,b
  6239  00292A  6FA2               	movwf	(calcMotorPow@setSpeedDelta+1)& (0+255),b
  6240                           
  6241                           ;main.c: 294:     int16_t oldSpeedDelta = currentSpeed - oldSpeed;
  6242  00292C  51DC               	movf	_oldSpeed& (0+255),w,b
  6243  00292E  5DDE               	subwf	_currentSpeed& (0+255),w,b
  6244  002930  6FA3               	movwf	calcMotorPow@oldSpeedDelta& (0+255),b
  6245  002932  51DD               	movf	(_oldSpeed+1)& (0+255),w,b
  6246  002934  59DF               	subwfb	(_currentSpeed+1)& (0+255),w,b
  6247  002936  6FA4               	movwf	(calcMotorPow@oldSpeedDelta+1)& (0+255),b
  6248  002938                     
  6249                           ; BSR set to: 0
  6250                           ;main.c: 297:     currentSpeed = actSpeed();
  6251  002938  EC98  F019         	call	_actSpeed	;wreg free
  6252  00293C  C020  F0DE         	movff	?_actSpeed,_currentSpeed
  6253  002940  C021  F0DF         	movff	?_actSpeed+1,_currentSpeed+1
  6254  002944                     
  6255                           ;main.c: 301:  addMPow = (int8_t)((0.025) * (setSpeedDelta - (oldSpeedDelta / (1))));
  6256  002944  0ECD               	movlw	205
  6257  002946  0100               	movlb	0	; () banked
  6258  002948  6F72               	movwf	___flmul@a& (0+255),b
  6259  00294A  0ECC               	movlw	204
  6260  00294C  6F73               	movwf	(___flmul@a+1)& (0+255),b
  6261  00294E  0ECC               	movlw	204
  6262  002950  6F74               	movwf	(___flmul@a+2)& (0+255),b
  6263  002952  0E3C               	movlw	60
  6264  002954  6F75               	movwf	(___flmul@a+3)& (0+255),b
  6265  002956  51A3               	movf	calcMotorPow@oldSpeedDelta& (0+255),w,b
  6266  002958  5DA1               	subwf	calcMotorPow@setSpeedDelta& (0+255),w,b
  6267  00295A  6F9F               	movwf	??_calcMotorPow& (0+255),b
  6268  00295C  51A4               	movf	(calcMotorPow@oldSpeedDelta+1)& (0+255),w,b
  6269  00295E  59A2               	subwfb	(calcMotorPow@setSpeedDelta+1)& (0+255),w,b
  6270  002960  6FA0               	movwf	(??_calcMotorPow+1)& (0+255),b
  6271  002962  C09F  F060         	movff	??_calcMotorPow,___xxtofl@val
  6272  002966  C0A0  F061         	movff	??_calcMotorPow+1,___xxtofl@val+1
  6273  00296A  0E00               	movlw	0
  6274  00296C  BF61               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  6275  00296E  0EFF               	movlw	-1
  6276  002970  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
  6277  002972  6F63               	movwf	(___xxtofl@val+3)& (0+255),b
  6278  002974  0E01               	movlw	1
  6279  002976  EC3B  F012         	call	___xxtofl
  6280  00297A  C060  F06E         	movff	?___xxtofl,___flmul@b
  6281  00297E  C061  F06F         	movff	?___xxtofl+1,___flmul@b+1
  6282  002982  C062  F070         	movff	?___xxtofl+2,___flmul@b+2
  6283  002986  C063  F071         	movff	?___xxtofl+3,___flmul@b+3
  6284  00298A  EC9B  F00A         	call	___flmul	;wreg free
  6285  00298E  C06E  F097         	movff	?___flmul,___fltol@f1
  6286  002992  C06F  F098         	movff	?___flmul+1,___fltol@f1+1
  6287  002996  C070  F099         	movff	?___flmul+2,___fltol@f1+2
  6288  00299A  C071  F09A         	movff	?___flmul+3,___fltol@f1+3
  6289  00299E  EC41  F016         	call	___fltol	;wreg free
  6290  0029A2  0100               	movlb	0	; () banked
  6291  0029A4  5197               	movf	?___fltol& (0+255),w,b
  6292  0029A6  6FA5               	movwf	calcMotorPow@addMPow& (0+255),b
  6293  0029A8                     
  6294                           ; BSR set to: 0
  6295                           ;main.c: 303:     if(addMPow > (2)){
  6296  0029A8  51A5               	movf	calcMotorPow@addMPow& (0+255),w,b
  6297  0029AA  0A80               	xorlw	128
  6298  0029AC  0F7D               	addlw	-131
  6299  0029AE  A0D8               	btfss	status,0,c
  6300  0029B0  EFDC  F014         	goto	u5871
  6301  0029B4  EFDE  F014         	goto	u5870
  6302  0029B8                     u5871:
  6303  0029B8  EFE2  F014         	goto	l6508
  6304  0029BC                     u5870:
  6305  0029BC                     
  6306                           ; BSR set to: 0
  6307                           ;main.c: 304:         addMPow = (2);
  6308  0029BC  0E02               	movlw	2
  6309  0029BE  6FA5               	movwf	calcMotorPow@addMPow& (0+255),b
  6310                           
  6311                           ;main.c: 305:     }else if(addMPow < -(2)){
  6312  0029C0  EFEE  F014         	goto	l6512
  6313  0029C4                     l6508:
  6314                           
  6315                           ; BSR set to: 0
  6316  0029C4  51A5               	movf	calcMotorPow@addMPow& (0+255),w,b
  6317  0029C6  0A80               	xorlw	128
  6318  0029C8  0F82               	addlw	130
  6319  0029CA  B0D8               	btfsc	status,0,c
  6320  0029CC  EFEA  F014         	goto	u5881
  6321  0029D0  EFEC  F014         	goto	u5880
  6322  0029D4                     u5881:
  6323  0029D4  EFEE  F014         	goto	l6512
  6324  0029D8                     u5880:
  6325  0029D8                     
  6326                           ; BSR set to: 0
  6327                           ;main.c: 306:         addMPow = -(2);
  6328  0029D8  0EFE               	movlw	254
  6329  0029DA  6FA5               	movwf	calcMotorPow@addMPow& (0+255),b
  6330  0029DC                     l6512:
  6331                           
  6332                           ; BSR set to: 0
  6333                           ;main.c: 309:  actMotorPow = actMotorPow + addMPow;
  6334  0029DC  51DA               	movf	_actMotorPow& (0+255),w,b
  6335  0029DE  25A5               	addwf	calcMotorPow@addMPow& (0+255),w,b
  6336  0029E0  6FDA               	movwf	_actMotorPow& (0+255),b
  6337  0029E2  0E00               	movlw	0
  6338  0029E4  BFA5               	btfsc	calcMotorPow@addMPow& (0+255),7,b
  6339  0029E6  0EFF               	movlw	255
  6340  0029E8  21DB               	addwfc	(_actMotorPow+1)& (0+255),w,b
  6341  0029EA  6FDB               	movwf	(_actMotorPow+1)& (0+255),b
  6342  0029EC                     
  6343                           ; BSR set to: 0
  6344                           ;main.c: 311:  if(actMotorPow > (600)){
  6345  0029EC  BFDB               	btfsc	(_actMotorPow+1)& (0+255),7,b
  6346  0029EE  EF02  F015         	goto	u5891
  6347  0029F2  0E59               	movlw	89
  6348  0029F4  5DDA               	subwf	_actMotorPow& (0+255),w,b
  6349  0029F6  0E02               	movlw	2
  6350  0029F8  59DB               	subwfb	(_actMotorPow+1)& (0+255),w,b
  6351  0029FA  A0D8               	btfss	status,0,c
  6352  0029FC  EF02  F015         	goto	u5891
  6353  002A00  EF04  F015         	goto	u5890
  6354  002A04                     u5891:
  6355  002A04  EF0A  F015         	goto	l6518
  6356  002A08                     u5890:
  6357  002A08                     
  6358                           ; BSR set to: 0
  6359                           ;main.c: 312:   actMotorPow = (600);
  6360  002A08  0E02               	movlw	2
  6361  002A0A  6FDB               	movwf	(_actMotorPow+1)& (0+255),b
  6362  002A0C  0E58               	movlw	88
  6363  002A0E  6FDA               	movwf	_actMotorPow& (0+255),b
  6364                           
  6365                           ;main.c: 313:  }else if(actMotorPow < (-300)){
  6366  002A10  EF1C  F015         	goto	l6522
  6367  002A14                     l6518:
  6368                           
  6369                           ; BSR set to: 0
  6370  002A14  AFDB               	btfss	(_actMotorPow+1)& (0+255),7,b
  6371  002A16  EF16  F015         	goto	u5901
  6372  002A1A  0ED4               	movlw	212
  6373  002A1C  5DDA               	subwf	_actMotorPow& (0+255),w,b
  6374  002A1E  0EFE               	movlw	254
  6375  002A20  59DB               	subwfb	(_actMotorPow+1)& (0+255),w,b
  6376  002A22  B0D8               	btfsc	status,0,c
  6377  002A24  EF16  F015         	goto	u5901
  6378  002A28  EF18  F015         	goto	u5900
  6379  002A2C                     u5901:
  6380  002A2C  EF1C  F015         	goto	l6522
  6381  002A30                     u5900:
  6382  002A30                     
  6383                           ; BSR set to: 0
  6384                           ;main.c: 314:   actMotorPow = (-300);
  6385  002A30  0EFE               	movlw	254
  6386  002A32  6FDB               	movwf	(_actMotorPow+1)& (0+255),b
  6387  002A34  0ED4               	movlw	212
  6388  002A36  6FDA               	movwf	_actMotorPow& (0+255),b
  6389  002A38                     l6522:
  6390                           
  6391                           ; BSR set to: 0
  6392                           ;main.c: 317:     setMotor(actMotorPow);
  6393  002A38  C0DA  F062         	movff	_actMotorPow,setMotor@motorPower
  6394  002A3C  C0DB  F063         	movff	_actMotorPow+1,setMotor@motorPower+1
  6395  002A40  EC48  F017         	call	_setMotor	;wreg free
  6396  002A44                     
  6397                           ;main.c: 319:     oldSpeed = currentSpeed;
  6398  002A44  C0DE  F0DC         	movff	_currentSpeed,_oldSpeed
  6399  002A48  C0DF  F0DD         	movff	_currentSpeed+1,_oldSpeed+1
  6400  002A4C  0012               	return		;funcret
  6401  002A4E                     __end_of_calcMotorPow:
  6402                           	callstack 0
  6403                           
  6404 ;; *************** function _setMotor *****************
  6405 ;; Defined at:
  6406 ;;		line 322 in file "main.c"
  6407 ;; Parameters:    Size  Location     Type
  6408 ;;  motorPower      2    2[BANK0 ] short 
  6409 ;; Auto vars:     Size  Location     Type
  6410 ;;		None
  6411 ;; Return value:  Size  Location     Type
  6412 ;;                  1    wreg      void 
  6413 ;; Registers used:
  6414 ;;		wreg, status,2, status,0, cstack
  6415 ;; Tracked objects:
  6416 ;;		On entry : 0/0
  6417 ;;		On exit  : 0/0
  6418 ;;		Unchanged: 0/0
  6419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6420 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6422 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6423 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6424 ;;Total ram usage:        4 bytes
  6425 ;; Hardware stack levels used: 1
  6426 ;; Hardware stack levels required when called: 9
  6427 ;; This function calls:
  6428 ;;		_PWM7_LoadDutyValue
  6429 ;;		_PWM8_LoadDutyValue
  6430 ;; This function is called by:
  6431 ;;		_calcMotorPow
  6432 ;; This function uses a non-reentrant model
  6433 ;;
  6434                           
  6435                           	psect	text27
  6436  002E90                     __ptext27:
  6437                           	callstack 0
  6438  002E90                     _setMotor:
  6439                           	callstack 19
  6440  002E90                     
  6441                           ;main.c: 323:     if(motorPower > 1){
  6442  002E90  0100               	movlb	0	; () banked
  6443  002E92  BF63               	btfsc	(setMotor@motorPower+1)& (0+255),7,b
  6444  002E94  EF55  F017         	goto	u4961
  6445  002E98  5163               	movf	(setMotor@motorPower+1)& (0+255),w,b
  6446  002E9A  E109               	bnz	u4960
  6447  002E9C  0E02               	movlw	2
  6448  002E9E  5D62               	subwf	setMotor@motorPower& (0+255),w,b
  6449  002EA0  A0D8               	btfss	status,0,c
  6450  002EA2  EF55  F017         	goto	u4961
  6451  002EA6  EF57  F017         	goto	u4960
  6452  002EAA                     u4961:
  6453  002EAA  EF77  F017         	goto	l5942
  6454  002EAE                     u4960:
  6455  002EAE                     
  6456                           ; BSR set to: 0
  6457                           ;main.c: 324:        if(motorPower > (600)){
  6458  002EAE  BF63               	btfsc	(setMotor@motorPower+1)& (0+255),7,b
  6459  002EB0  EF63  F017         	goto	u4971
  6460  002EB4  0E59               	movlw	89
  6461  002EB6  5D62               	subwf	setMotor@motorPower& (0+255),w,b
  6462  002EB8  0E02               	movlw	2
  6463  002EBA  5963               	subwfb	(setMotor@motorPower+1)& (0+255),w,b
  6464  002EBC  A0D8               	btfss	status,0,c
  6465  002EBE  EF63  F017         	goto	u4971
  6466  002EC2  EF65  F017         	goto	u4970
  6467  002EC6                     u4971:
  6468  002EC6  EF69  F017         	goto	l5938
  6469  002ECA                     u4970:
  6470  002ECA                     
  6471                           ; BSR set to: 0
  6472                           ;main.c: 325:             motorPower = (600);
  6473  002ECA  0E02               	movlw	2
  6474  002ECC  6F63               	movwf	(setMotor@motorPower+1)& (0+255),b
  6475  002ECE  0E58               	movlw	88
  6476  002ED0  6F62               	movwf	setMotor@motorPower& (0+255),b
  6477  002ED2                     l5938:
  6478                           
  6479                           ; BSR set to: 0
  6480                           ;main.c: 327:         PWM7_LoadDutyValue((uint16_t)(motorPower));
  6481  002ED2  C062  F020         	movff	setMotor@motorPower,PWM7_LoadDutyValue@dutyValue
  6482  002ED6  C063  F021         	movff	setMotor@motorPower+1,PWM7_LoadDutyValue@dutyValue+1
  6483  002EDA  EC0F  F01E         	call	_PWM7_LoadDutyValue	;wreg free
  6484  002EDE                     
  6485                           ;main.c: 328:         PWM8_LoadDutyValue(0);
  6486  002EDE  0E00               	movlw	0
  6487  002EE0  6E21               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
  6488  002EE2  0E00               	movlw	0
  6489  002EE4  6E20               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
  6490  002EE6  ECF4  F01D         	call	_PWM8_LoadDutyValue	;wreg free
  6491                           
  6492                           ;main.c: 329:     } else if(motorPower < -1){
  6493  002EEA  EFB9  F017         	goto	l1332
  6494  002EEE                     l5942:
  6495                           
  6496                           ; BSR set to: 0
  6497  002EEE  AF63               	btfss	(setMotor@motorPower+1)& (0+255),7,b
  6498  002EF0  EF82  F017         	goto	u4981
  6499  002EF4  2962               	incf	setMotor@motorPower& (0+255),w,b
  6500  002EF6  0EFF               	movlw	255
  6501  002EF8  5963               	subwfb	(setMotor@motorPower+1)& (0+255),w,b
  6502  002EFA  B0D8               	btfsc	status,0,c
  6503  002EFC  EF82  F017         	goto	u4981
  6504  002F00  EF84  F017         	goto	u4980
  6505  002F04                     u4981:
  6506  002F04  EFAD  F017         	goto	l5952
  6507  002F08                     u4980:
  6508  002F08                     
  6509                           ; BSR set to: 0
  6510                           ;main.c: 330:         if(motorPower < (-300)){
  6511  002F08  AF63               	btfss	(setMotor@motorPower+1)& (0+255),7,b
  6512  002F0A  EF90  F017         	goto	u4991
  6513  002F0E  0ED4               	movlw	212
  6514  002F10  5D62               	subwf	setMotor@motorPower& (0+255),w,b
  6515  002F12  0EFE               	movlw	254
  6516  002F14  5963               	subwfb	(setMotor@motorPower+1)& (0+255),w,b
  6517  002F16  B0D8               	btfsc	status,0,c
  6518  002F18  EF90  F017         	goto	u4991
  6519  002F1C  EF92  F017         	goto	u4990
  6520  002F20                     u4991:
  6521  002F20  EF96  F017         	goto	l5948
  6522  002F24                     u4990:
  6523  002F24                     
  6524                           ; BSR set to: 0
  6525                           ;main.c: 331:             motorPower = (-300);
  6526  002F24  0EFE               	movlw	254
  6527  002F26  6F63               	movwf	(setMotor@motorPower+1)& (0+255),b
  6528  002F28  0ED4               	movlw	212
  6529  002F2A  6F62               	movwf	setMotor@motorPower& (0+255),b
  6530  002F2C                     l5948:
  6531                           
  6532                           ; BSR set to: 0
  6533                           ;main.c: 333:         PWM7_LoadDutyValue(0);
  6534  002F2C  0E00               	movlw	0
  6535  002F2E  6E21               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
  6536  002F30  0E00               	movlw	0
  6537  002F32  6E20               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
  6538  002F34  EC0F  F01E         	call	_PWM7_LoadDutyValue	;wreg free
  6539  002F38                     
  6540                           ;main.c: 334:         PWM8_LoadDutyValue((uint16_t)(-motorPower));
  6541  002F38  C062  F064         	movff	setMotor@motorPower,??_setMotor
  6542  002F3C  C063  F065         	movff	setMotor@motorPower+1,??_setMotor+1
  6543  002F40  0100               	movlb	0	; () banked
  6544  002F42  1F64               	comf	??_setMotor& (0+255),f,b
  6545  002F44  1F65               	comf	(??_setMotor+1)& (0+255),f,b
  6546  002F46  4B64               	infsnz	??_setMotor& (0+255),f,b
  6547  002F48  2B65               	incf	(??_setMotor+1)& (0+255),f,b
  6548  002F4A  C064  F020         	movff	??_setMotor,PWM8_LoadDutyValue@dutyValue
  6549  002F4E  C065  F021         	movff	??_setMotor+1,PWM8_LoadDutyValue@dutyValue+1
  6550  002F52  ECF4  F01D         	call	_PWM8_LoadDutyValue	;wreg free
  6551                           
  6552                           ;main.c: 335:     } else {
  6553  002F56  EFB9  F017         	goto	l1332
  6554  002F5A                     l5952:
  6555                           
  6556                           ; BSR set to: 0
  6557                           ;main.c: 336:         PWM7_LoadDutyValue(0);
  6558  002F5A  0E00               	movlw	0
  6559  002F5C  6E21               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
  6560  002F5E  0E00               	movlw	0
  6561  002F60  6E20               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
  6562  002F62  EC0F  F01E         	call	_PWM7_LoadDutyValue	;wreg free
  6563                           
  6564                           ;main.c: 337:         PWM8_LoadDutyValue(0);
  6565  002F66  0E00               	movlw	0
  6566  002F68  6E21               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
  6567  002F6A  0E00               	movlw	0
  6568  002F6C  6E20               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
  6569  002F6E  ECF4  F01D         	call	_PWM8_LoadDutyValue	;wreg free
  6570  002F72                     l1332:
  6571  002F72  0012               	return		;funcret
  6572  002F74                     __end_of_setMotor:
  6573                           	callstack 0
  6574                           
  6575 ;; *************** function _PWM8_LoadDutyValue *****************
  6576 ;; Defined at:
  6577 ;;		line 74 in file "mcc_generated_files/pwm8.c"
  6578 ;; Parameters:    Size  Location     Type
  6579 ;;  dutyValue       2   31[COMRAM] unsigned short 
  6580 ;; Auto vars:     Size  Location     Type
  6581 ;;		None
  6582 ;; Return value:  Size  Location     Type
  6583 ;;                  1    wreg      void 
  6584 ;; Registers used:
  6585 ;;		wreg, status,2, status,0
  6586 ;; Tracked objects:
  6587 ;;		On entry : 0/0
  6588 ;;		On exit  : 0/0
  6589 ;;		Unchanged: 0/0
  6590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6591 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6593 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6594 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6595 ;;Total ram usage:        4 bytes
  6596 ;; Hardware stack levels used: 1
  6597 ;; Hardware stack levels required when called: 8
  6598 ;; This function calls:
  6599 ;;		Nothing
  6600 ;; This function is called by:
  6601 ;;		_setMotor
  6602 ;; This function uses a non-reentrant model
  6603 ;;
  6604                           
  6605                           	psect	text28
  6606  003BE8                     __ptext28:
  6607                           	callstack 0
  6608  003BE8                     _PWM8_LoadDutyValue:
  6609                           	callstack 19
  6610  003BE8                     
  6611                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  6612  003BE8  C020  F060         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
  6613  003BEC  C021  F061         	movff	PWM8_LoadDutyValue@dutyValue+1,??_PWM8_LoadDutyValue+1
  6614  003BF0  0100               	movlb	0	; () banked
  6615  003BF2  90D8               	bcf	status,0,c
  6616  003BF4  3361               	rrcf	(??_PWM8_LoadDutyValue+1)& (0+255),f,b
  6617  003BF6  3360               	rrcf	??_PWM8_LoadDutyValue& (0+255),f,b
  6618  003BF8  90D8               	bcf	status,0,c
  6619  003BFA  3361               	rrcf	(??_PWM8_LoadDutyValue+1)& (0+255),f,b
  6620  003BFC  3360               	rrcf	??_PWM8_LoadDutyValue& (0+255),f,b
  6621  003BFE  5160               	movf	??_PWM8_LoadDutyValue& (0+255),w,b
  6622  003C00  6E61               	movwf	97,c	;volatile
  6623                           
  6624                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
  6625  003C02  C020  F060         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
  6626  003C06  0E03               	movlw	3
  6627  003C08  1760               	andwf	??_PWM8_LoadDutyValue& (0+255),f,b
  6628  003C0A  0E06               	movlw	6
  6629  003C0C  6F61               	movwf	(??_PWM8_LoadDutyValue+1)& (0+255),b
  6630  003C0E                     u4735:
  6631  003C0E  90D8               	bcf	status,0,c
  6632  003C10  3760               	rlcf	??_PWM8_LoadDutyValue& (0+255),f,b
  6633  003C12  2F61               	decfsz	(??_PWM8_LoadDutyValue+1)& (0+255),f,b
  6634  003C14  EF07  F01E         	goto	u4735
  6635  003C18  5160               	movf	??_PWM8_LoadDutyValue& (0+255),w,b
  6636  003C1A  6E60               	movwf	96,c	;volatile
  6637  003C1C                     
  6638                           ; BSR set to: 0
  6639  003C1C  0012               	return		;funcret
  6640  003C1E                     __end_of_PWM8_LoadDutyValue:
  6641                           	callstack 0
  6642                           
  6643 ;; *************** function _PWM7_LoadDutyValue *****************
  6644 ;; Defined at:
  6645 ;;		line 74 in file "mcc_generated_files/pwm7.c"
  6646 ;; Parameters:    Size  Location     Type
  6647 ;;  dutyValue       2   31[COMRAM] unsigned short 
  6648 ;; Auto vars:     Size  Location     Type
  6649 ;;		None
  6650 ;; Return value:  Size  Location     Type
  6651 ;;                  1    wreg      void 
  6652 ;; Registers used:
  6653 ;;		wreg, status,2, status,0
  6654 ;; Tracked objects:
  6655 ;;		On entry : 0/0
  6656 ;;		On exit  : 0/0
  6657 ;;		Unchanged: 0/0
  6658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6659 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6661 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6662 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6663 ;;Total ram usage:        4 bytes
  6664 ;; Hardware stack levels used: 1
  6665 ;; Hardware stack levels required when called: 8
  6666 ;; This function calls:
  6667 ;;		Nothing
  6668 ;; This function is called by:
  6669 ;;		_setMotor
  6670 ;; This function uses a non-reentrant model
  6671 ;;
  6672                           
  6673                           	psect	text29
  6674  003C1E                     __ptext29:
  6675                           	callstack 0
  6676  003C1E                     _PWM7_LoadDutyValue:
  6677                           	callstack 19
  6678  003C1E                     
  6679                           ;mcc_generated_files/pwm7.c: 74:  void PWM7_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm7.c: 75:  {;mcc_generated_files/pwm7.c: 77:      PWM7DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  6680  003C1E  C020  F060         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
  6681  003C22  C021  F061         	movff	PWM7_LoadDutyValue@dutyValue+1,??_PWM7_LoadDutyValue+1
  6682  003C26  0100               	movlb	0	; () banked
  6683  003C28  90D8               	bcf	status,0,c
  6684  003C2A  3361               	rrcf	(??_PWM7_LoadDutyValue+1)& (0+255),f,b
  6685  003C2C  3360               	rrcf	??_PWM7_LoadDutyValue& (0+255),f,b
  6686  003C2E  90D8               	bcf	status,0,c
  6687  003C30  3361               	rrcf	(??_PWM7_LoadDutyValue+1)& (0+255),f,b
  6688  003C32  3360               	rrcf	??_PWM7_LoadDutyValue& (0+255),f,b
  6689  003C34  5160               	movf	??_PWM7_LoadDutyValue& (0+255),w,b
  6690  003C36  6E65               	movwf	101,c	;volatile
  6691                           
  6692                           ;mcc_generated_files/pwm7.c: 80:      PWM7DCL = (dutyValue & 0x0003)<<6;
  6693  003C38  C020  F060         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
  6694  003C3C  0E03               	movlw	3
  6695  003C3E  1760               	andwf	??_PWM7_LoadDutyValue& (0+255),f,b
  6696  003C40  0E06               	movlw	6
  6697  003C42  6F61               	movwf	(??_PWM7_LoadDutyValue+1)& (0+255),b
  6698  003C44                     u4725:
  6699  003C44  90D8               	bcf	status,0,c
  6700  003C46  3760               	rlcf	??_PWM7_LoadDutyValue& (0+255),f,b
  6701  003C48  2F61               	decfsz	(??_PWM7_LoadDutyValue+1)& (0+255),f,b
  6702  003C4A  EF22  F01E         	goto	u4725
  6703  003C4E  5160               	movf	??_PWM7_LoadDutyValue& (0+255),w,b
  6704  003C50  6E64               	movwf	100,c	;volatile
  6705  003C52                     
  6706                           ; BSR set to: 0
  6707  003C52  0012               	return		;funcret
  6708  003C54                     __end_of_PWM7_LoadDutyValue:
  6709                           	callstack 0
  6710                           
  6711 ;; *************** function _actSpeed *****************
  6712 ;; Defined at:
  6713 ;;		line 62 in file "main.c"
  6714 ;; Parameters:    Size  Location     Type
  6715 ;;		None
  6716 ;; Auto vars:     Size  Location     Type
  6717 ;;  speed           2   14[BANK0 ] short 
  6718 ;; Return value:  Size  Location     Type
  6719 ;;                  2   31[COMRAM] short 
  6720 ;; Registers used:
  6721 ;;		wreg, status,2, status,0, cstack
  6722 ;; Tracked objects:
  6723 ;;		On entry : 0/0
  6724 ;;		On exit  : 0/0
  6725 ;;		Unchanged: 0/0
  6726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6727 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6728 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6730 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6731 ;;Total ram usage:        4 bytes
  6732 ;; Hardware stack levels used: 1
  6733 ;; Hardware stack levels required when called: 9
  6734 ;; This function calls:
  6735 ;;		___aldiv
  6736 ;; This function is called by:
  6737 ;;		_calcMotorPow
  6738 ;; This function uses a non-reentrant model
  6739 ;;
  6740                           
  6741                           	psect	text30
  6742  003330                     __ptext30:
  6743                           	callstack 0
  6744  003330                     _actSpeed:
  6745                           	callstack 19
  6746  003330                     
  6747                           ;main.c: 63:     int16_t speed = 0;
  6748  003330  0E00               	movlw	0
  6749  003332  0100               	movlb	0	; () banked
  6750  003334  6F6F               	movwf	(actSpeed@speed+1)& (0+255),b
  6751  003336  0E00               	movlw	0
  6752  003338  6F6E               	movwf	actSpeed@speed& (0+255),b
  6753  00333A                     
  6754                           ; BSR set to: 0
  6755                           ;main.c: 64:     if(smtPeriod){
  6756  00333A  5034               	movf	_smtPeriod^0,w,c	;volatile
  6757  00333C  1035               	iorwf	(_smtPeriod+1)^0,w,c	;volatile
  6758  00333E  1036               	iorwf	(_smtPeriod+2)^0,w,c	;volatile
  6759  003340  1037               	iorwf	(_smtPeriod+3)^0,w,c	;volatile
  6760  003342  B4D8               	btfsc	status,2,c
  6761  003344  EFA6  F019         	goto	u4901
  6762  003348  EFA8  F019         	goto	u4900
  6763  00334C                     u4901:
  6764  00334C  EFE0  F019         	goto	l5890
  6765  003350                     u4900:
  6766  003350                     
  6767                           ; BSR set to: 0
  6768                           ;main.c: 65:         if(CLC3CONbits.LC3OUT){
  6769  003350  013C               	movlb	60	; () banked
  6770  003352  AB60               	btfss	96,5,b	;volatile
  6771  003354  EFAE  F019         	goto	u4911
  6772  003358  EFB0  F019         	goto	u4910
  6773  00335C                     u4911:
  6774  00335C  EFC9  F019         	goto	l5888
  6775  003360                     u4910:
  6776  003360                     
  6777                           ; BSR set to: 60
  6778                           ;main.c: 66:             speed = (int16_t)((int32_t)(500000 / (int32_t)smtPeriod));
  6779  003360  0E20               	movlw	32
  6780  003362  0100               	movlb	0	; () banked
  6781  003364  6F60               	movwf	___aldiv@dividend& (0+255),b
  6782  003366  0EA1               	movlw	161
  6783  003368  6F61               	movwf	(___aldiv@dividend+1)& (0+255),b
  6784  00336A  0E07               	movlw	7
  6785  00336C  6F62               	movwf	(___aldiv@dividend+2)& (0+255),b
  6786  00336E  0E00               	movlw	0
  6787  003370  6F63               	movwf	(___aldiv@dividend+3)& (0+255),b
  6788  003372  C034  F064         	movff	_smtPeriod,___aldiv@divisor	;volatile
  6789  003376  C035  F065         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
  6790  00337A  C036  F066         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
  6791  00337E  C037  F067         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
  6792  003382  ECBA  F015         	call	___aldiv	;wreg free
  6793  003386  C060  F06E         	movff	?___aldiv,actSpeed@speed
  6794  00338A  C061  F06F         	movff	?___aldiv+1,actSpeed@speed+1
  6795                           
  6796                           ;main.c: 67:         } else {
  6797  00338E  EFE0  F019         	goto	l5890
  6798  003392                     l5888:
  6799                           
  6800                           ; BSR set to: 60
  6801                           ;main.c: 68:             speed = (int16_t)((int32_t)(-500000 / (int32_t)smtPeriod));
  6802  003392  0EE0               	movlw	224
  6803  003394  0100               	movlb	0	; () banked
  6804  003396  6F60               	movwf	___aldiv@dividend& (0+255),b
  6805  003398  0E5E               	movlw	94
  6806  00339A  6F61               	movwf	(___aldiv@dividend+1)& (0+255),b
  6807  00339C  0EF8               	movlw	248
  6808  00339E  6F62               	movwf	(___aldiv@dividend+2)& (0+255),b
  6809  0033A0  0EFF               	movlw	255
  6810  0033A2  6F63               	movwf	(___aldiv@dividend+3)& (0+255),b
  6811  0033A4  C034  F064         	movff	_smtPeriod,___aldiv@divisor	;volatile
  6812  0033A8  C035  F065         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
  6813  0033AC  C036  F066         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
  6814  0033B0  C037  F067         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
  6815  0033B4  ECBA  F015         	call	___aldiv	;wreg free
  6816  0033B8  C060  F06E         	movff	?___aldiv,actSpeed@speed
  6817  0033BC  C061  F06F         	movff	?___aldiv+1,actSpeed@speed+1
  6818  0033C0                     l5890:
  6819                           
  6820                           ;main.c: 71:     return speed;
  6821  0033C0  C06E  F020         	movff	actSpeed@speed,?_actSpeed
  6822  0033C4  C06F  F021         	movff	actSpeed@speed+1,?_actSpeed+1
  6823  0033C8  0012               	return		;funcret
  6824  0033CA                     __end_of_actSpeed:
  6825                           	callstack 0
  6826                           
  6827 ;; *************** function ___aldiv *****************
  6828 ;; Defined at:
  6829 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aldiv.c"
  6830 ;; Parameters:    Size  Location     Type
  6831 ;;  dividend        4    0[BANK0 ] long 
  6832 ;;  divisor         4    4[BANK0 ] long 
  6833 ;; Auto vars:     Size  Location     Type
  6834 ;;  quotient        4   10[BANK0 ] long 
  6835 ;;  sign            1    9[BANK0 ] unsigned char 
  6836 ;;  counter         1    8[BANK0 ] unsigned char 
  6837 ;; Return value:  Size  Location     Type
  6838 ;;                  4    0[BANK0 ] long 
  6839 ;; Registers used:
  6840 ;;		wreg, status,2, status,0
  6841 ;; Tracked objects:
  6842 ;;		On entry : 0/0
  6843 ;;		On exit  : 0/0
  6844 ;;		Unchanged: 0/0
  6845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6846 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6847 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6849 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6850 ;;Total ram usage:       14 bytes
  6851 ;; Hardware stack levels used: 1
  6852 ;; Hardware stack levels required when called: 8
  6853 ;; This function calls:
  6854 ;;		Nothing
  6855 ;; This function is called by:
  6856 ;;		_actSpeed
  6857 ;; This function uses a non-reentrant model
  6858 ;;
  6859                           
  6860                           	psect	text31
  6861  002B74                     __ptext31:
  6862                           	callstack 0
  6863  002B74                     ___aldiv:
  6864                           	callstack 19
  6865  002B74  0E00               	movlw	0
  6866  002B76  0100               	movlb	0	; () banked
  6867  002B78  6F69               	movwf	___aldiv@sign& (0+255),b
  6868  002B7A                     
  6869                           ; BSR set to: 0
  6870  002B7A  BF67               	btfsc	(___aldiv@divisor+3)& (0+255),7,b
  6871  002B7C  EFC4  F015         	goto	u4760
  6872  002B80  EFC2  F015         	goto	u4761
  6873  002B84                     u4761:
  6874  002B84  EFCE  F015         	goto	l5780
  6875  002B88                     u4760:
  6876  002B88                     
  6877                           ; BSR set to: 0
  6878  002B88  1F67               	comf	(___aldiv@divisor+3)& (0+255),f,b
  6879  002B8A  1F66               	comf	(___aldiv@divisor+2)& (0+255),f,b
  6880  002B8C  1F65               	comf	(___aldiv@divisor+1)& (0+255),f,b
  6881  002B8E  6D64               	negf	___aldiv@divisor& (0+255),b
  6882  002B90  0E00               	movlw	0
  6883  002B92  2365               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
  6884  002B94  2366               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
  6885  002B96  2367               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
  6886  002B98                     
  6887                           ; BSR set to: 0
  6888  002B98  0E01               	movlw	1
  6889  002B9A  6F69               	movwf	___aldiv@sign& (0+255),b
  6890  002B9C                     l5780:
  6891                           
  6892                           ; BSR set to: 0
  6893  002B9C  BF63               	btfsc	(___aldiv@dividend+3)& (0+255),7,b
  6894  002B9E  EFD5  F015         	goto	u4770
  6895  002BA2  EFD3  F015         	goto	u4771
  6896  002BA6                     u4771:
  6897  002BA6  EFDF  F015         	goto	l5786
  6898  002BAA                     u4770:
  6899  002BAA                     
  6900                           ; BSR set to: 0
  6901  002BAA  1F63               	comf	(___aldiv@dividend+3)& (0+255),f,b
  6902  002BAC  1F62               	comf	(___aldiv@dividend+2)& (0+255),f,b
  6903  002BAE  1F61               	comf	(___aldiv@dividend+1)& (0+255),f,b
  6904  002BB0  6D60               	negf	___aldiv@dividend& (0+255),b
  6905  002BB2  0E00               	movlw	0
  6906  002BB4  2361               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
  6907  002BB6  2362               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
  6908  002BB8  2363               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
  6909  002BBA                     
  6910                           ; BSR set to: 0
  6911  002BBA  0E01               	movlw	1
  6912  002BBC  1B69               	xorwf	___aldiv@sign& (0+255),f,b
  6913  002BBE                     l5786:
  6914                           
  6915                           ; BSR set to: 0
  6916  002BBE  0E00               	movlw	0
  6917  002BC0  6F6A               	movwf	___aldiv@quotient& (0+255),b
  6918  002BC2  0E00               	movlw	0
  6919  002BC4  6F6B               	movwf	(___aldiv@quotient+1)& (0+255),b
  6920  002BC6  0E00               	movlw	0
  6921  002BC8  6F6C               	movwf	(___aldiv@quotient+2)& (0+255),b
  6922  002BCA  0E00               	movlw	0
  6923  002BCC  6F6D               	movwf	(___aldiv@quotient+3)& (0+255),b
  6924  002BCE                     
  6925                           ; BSR set to: 0
  6926  002BCE  5164               	movf	___aldiv@divisor& (0+255),w,b
  6927  002BD0  1165               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
  6928  002BD2  1166               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
  6929  002BD4  1167               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
  6930  002BD6  B4D8               	btfsc	status,2,c
  6931  002BD8  EFF0  F015         	goto	u4781
  6932  002BDC  EFF2  F015         	goto	u4780
  6933  002BE0                     u4781:
  6934  002BE0  EF28  F016         	goto	l5808
  6935  002BE4                     u4780:
  6936  002BE4                     
  6937                           ; BSR set to: 0
  6938  002BE4  0E01               	movlw	1
  6939  002BE6  6F68               	movwf	___aldiv@counter& (0+255),b
  6940  002BE8  EFFC  F015         	goto	l5794
  6941  002BEC                     l5792:
  6942                           
  6943                           ; BSR set to: 0
  6944  002BEC  90D8               	bcf	status,0,c
  6945  002BEE  3764               	rlcf	___aldiv@divisor& (0+255),f,b
  6946  002BF0  3765               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
  6947  002BF2  3766               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
  6948  002BF4  3767               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
  6949  002BF6  2B68               	incf	___aldiv@counter& (0+255),f,b
  6950  002BF8                     l5794:
  6951                           
  6952                           ; BSR set to: 0
  6953  002BF8  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  6954  002BFA  EF01  F016         	goto	u4791
  6955  002BFE  EF03  F016         	goto	u4790
  6956  002C02                     u4791:
  6957  002C02  EFF6  F015         	goto	l5792
  6958  002C06                     u4790:
  6959  002C06                     l5796:
  6960                           
  6961                           ; BSR set to: 0
  6962  002C06  90D8               	bcf	status,0,c
  6963  002C08  376A               	rlcf	___aldiv@quotient& (0+255),f,b
  6964  002C0A  376B               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  6965  002C0C  376C               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  6966  002C0E  376D               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  6967  002C10                     
  6968                           ; BSR set to: 0
  6969  002C10  5164               	movf	___aldiv@divisor& (0+255),w,b
  6970  002C12  5D60               	subwf	___aldiv@dividend& (0+255),w,b
  6971  002C14  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
  6972  002C16  5961               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
  6973  002C18  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
  6974  002C1A  5962               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
  6975  002C1C  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
  6976  002C1E  5963               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
  6977  002C20  A0D8               	btfss	status,0,c
  6978  002C22  EF15  F016         	goto	u4801
  6979  002C26  EF17  F016         	goto	u4800
  6980  002C2A                     u4801:
  6981  002C2A  EF20  F016         	goto	l5804
  6982  002C2E                     u4800:
  6983  002C2E                     
  6984                           ; BSR set to: 0
  6985  002C2E  5164               	movf	___aldiv@divisor& (0+255),w,b
  6986  002C30  5F60               	subwf	___aldiv@dividend& (0+255),f,b
  6987  002C32  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
  6988  002C34  5B61               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
  6989  002C36  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
  6990  002C38  5B62               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
  6991  002C3A  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
  6992  002C3C  5B63               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
  6993  002C3E                     
  6994                           ; BSR set to: 0
  6995  002C3E  816A               	bsf	___aldiv@quotient& (0+255),0,b
  6996  002C40                     l5804:
  6997                           
  6998                           ; BSR set to: 0
  6999  002C40  90D8               	bcf	status,0,c
  7000  002C42  3367               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
  7001  002C44  3366               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
  7002  002C46  3365               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
  7003  002C48  3364               	rrcf	___aldiv@divisor& (0+255),f,b
  7004  002C4A                     
  7005                           ; BSR set to: 0
  7006  002C4A  2F68               	decfsz	___aldiv@counter& (0+255),f,b
  7007  002C4C  EF03  F016         	goto	l5796
  7008  002C50                     l5808:
  7009                           
  7010                           ; BSR set to: 0
  7011  002C50  5169               	movf	___aldiv@sign& (0+255),w,b
  7012  002C52  B4D8               	btfsc	status,2,c
  7013  002C54  EF2E  F016         	goto	u4811
  7014  002C58  EF30  F016         	goto	u4810
  7015  002C5C                     u4811:
  7016  002C5C  EF38  F016         	goto	l5812
  7017  002C60                     u4810:
  7018  002C60                     
  7019                           ; BSR set to: 0
  7020  002C60  1F6D               	comf	(___aldiv@quotient+3)& (0+255),f,b
  7021  002C62  1F6C               	comf	(___aldiv@quotient+2)& (0+255),f,b
  7022  002C64  1F6B               	comf	(___aldiv@quotient+1)& (0+255),f,b
  7023  002C66  6D6A               	negf	___aldiv@quotient& (0+255),b
  7024  002C68  0E00               	movlw	0
  7025  002C6A  236B               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  7026  002C6C  236C               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  7027  002C6E  236D               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  7028  002C70                     l5812:
  7029                           
  7030                           ; BSR set to: 0
  7031  002C70  C06A  F060         	movff	___aldiv@quotient,?___aldiv
  7032  002C74  C06B  F061         	movff	___aldiv@quotient+1,?___aldiv+1
  7033  002C78  C06C  F062         	movff	___aldiv@quotient+2,?___aldiv+2
  7034  002C7C  C06D  F063         	movff	___aldiv@quotient+3,?___aldiv+3
  7035  002C80                     
  7036                           ; BSR set to: 0
  7037  002C80  0012               	return		;funcret
  7038  002C82                     __end_of___aldiv:
  7039                           	callstack 0
  7040                           
  7041 ;; *************** function ___xxtofl *****************
  7042 ;; Defined at:
  7043 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\xxtofl.c"
  7044 ;; Parameters:    Size  Location     Type
  7045 ;;  sign            1    wreg     unsigned char 
  7046 ;;  val             4    0[BANK0 ] long 
  7047 ;; Auto vars:     Size  Location     Type
  7048 ;;  sign            1    8[BANK0 ] unsigned char 
  7049 ;;  arg             4   10[BANK0 ] unsigned long 
  7050 ;;  exp             1    9[BANK0 ] unsigned char 
  7051 ;; Return value:  Size  Location     Type
  7052 ;;                  4    0[BANK0 ] unsigned char 
  7053 ;; Registers used:
  7054 ;;		wreg, status,2, status,0
  7055 ;; Tracked objects:
  7056 ;;		On entry : 0/0
  7057 ;;		On exit  : 0/0
  7058 ;;		Unchanged: 0/0
  7059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7060 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7061 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7062 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7063 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7064 ;;Total ram usage:       14 bytes
  7065 ;; Hardware stack levels used: 1
  7066 ;; Hardware stack levels required when called: 8
  7067 ;; This function calls:
  7068 ;;		Nothing
  7069 ;; This function is called by:
  7070 ;;		_loop
  7071 ;;		_calcSpeed
  7072 ;;		_calcMotorPow
  7073 ;; This function uses a non-reentrant model
  7074 ;;
  7075                           
  7076                           	psect	text32
  7077  002476                     __ptext32:
  7078                           	callstack 0
  7079  002476                     ___xxtofl:
  7080                           	callstack 20
  7081                           
  7082                           ; BSR set to: 0
  7083                           ;incstack = 0
  7084                           ;___xxtofl@sign stored from wreg
  7085  002476  0100               	movlb	0	; () banked
  7086  002478  6F68               	movwf	___xxtofl@sign& (0+255),b
  7087  00247A  0100               	movlb	0	; () banked
  7088  00247C  5168               	movf	___xxtofl@sign& (0+255),w,b
  7089  00247E  B4D8               	btfsc	status,2,c
  7090  002480  EF44  F012         	goto	u5581
  7091  002484  EF46  F012         	goto	u5580
  7092  002488                     u5581:
  7093  002488  EF68  F012         	goto	l1990
  7094  00248C                     u5580:
  7095  00248C                     
  7096                           ; BSR set to: 0
  7097  00248C  BF63               	btfsc	(___xxtofl@val+3)& (0+255),7,b
  7098  00248E  EF4D  F012         	goto	u5590
  7099  002492  EF4B  F012         	goto	u5591
  7100  002496                     u5591:
  7101  002496  EF68  F012         	goto	l1990
  7102  00249A                     u5590:
  7103  00249A                     
  7104                           ; BSR set to: 0
  7105  00249A  C060  F064         	movff	___xxtofl@val,??___xxtofl
  7106  00249E  C061  F065         	movff	___xxtofl@val+1,??___xxtofl+1
  7107  0024A2  C062  F066         	movff	___xxtofl@val+2,??___xxtofl+2
  7108  0024A6  C063  F067         	movff	___xxtofl@val+3,??___xxtofl+3
  7109  0024AA  1F64               	comf	??___xxtofl& (0+255),f,b
  7110  0024AC  1F65               	comf	(??___xxtofl+1)& (0+255),f,b
  7111  0024AE  1F66               	comf	(??___xxtofl+2)& (0+255),f,b
  7112  0024B0  1F67               	comf	(??___xxtofl+3)& (0+255),f,b
  7113  0024B2  2B64               	incf	??___xxtofl& (0+255),f,b
  7114  0024B4  0E00               	movlw	0
  7115  0024B6  2365               	addwfc	(??___xxtofl+1)& (0+255),f,b
  7116  0024B8  2366               	addwfc	(??___xxtofl+2)& (0+255),f,b
  7117  0024BA  2367               	addwfc	(??___xxtofl+3)& (0+255),f,b
  7118  0024BC  C064  F06A         	movff	??___xxtofl,___xxtofl@arg
  7119  0024C0  C065  F06B         	movff	??___xxtofl+1,___xxtofl@arg+1
  7120  0024C4  C066  F06C         	movff	??___xxtofl+2,___xxtofl@arg+2
  7121  0024C8  C067  F06D         	movff	??___xxtofl+3,___xxtofl@arg+3
  7122  0024CC  EF70  F012         	goto	l6292
  7123  0024D0                     l1990:
  7124                           
  7125                           ; BSR set to: 0
  7126  0024D0  C060  F06A         	movff	___xxtofl@val,___xxtofl@arg
  7127  0024D4  C061  F06B         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7128  0024D8  C062  F06C         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7129  0024DC  C063  F06D         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7130  0024E0                     l6292:
  7131                           
  7132                           ; BSR set to: 0
  7133  0024E0  5160               	movf	___xxtofl@val& (0+255),w,b
  7134  0024E2  1161               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  7135  0024E4  1162               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  7136  0024E6  1163               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  7137  0024E8  A4D8               	btfss	status,2,c
  7138  0024EA  EF79  F012         	goto	u5601
  7139  0024EE  EF7B  F012         	goto	u5600
  7140  0024F2                     u5601:
  7141  0024F2  EF85  F012         	goto	l6298
  7142  0024F6                     u5600:
  7143  0024F6                     
  7144                           ; BSR set to: 0
  7145  0024F6  0E00               	movlw	0
  7146  0024F8  6F60               	movwf	?___xxtofl& (0+255),b
  7147  0024FA  0E00               	movlw	0
  7148  0024FC  6F61               	movwf	(?___xxtofl+1)& (0+255),b
  7149  0024FE  0E00               	movlw	0
  7150  002500  6F62               	movwf	(?___xxtofl+2)& (0+255),b
  7151  002502  0E00               	movlw	0
  7152  002504  6F63               	movwf	(?___xxtofl+3)& (0+255),b
  7153  002506  EF16  F013         	goto	l1993
  7154  00250A                     l6298:
  7155                           
  7156                           ; BSR set to: 0
  7157  00250A  0E96               	movlw	150
  7158  00250C  6F69               	movwf	___xxtofl@exp& (0+255),b
  7159  00250E  EF8F  F012         	goto	l6302
  7160  002512                     l6300:
  7161                           
  7162                           ; BSR set to: 0
  7163  002512  2B69               	incf	___xxtofl@exp& (0+255),f,b
  7164  002514  90D8               	bcf	status,0,c
  7165  002516  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  7166  002518  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  7167  00251A  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  7168  00251C  336A               	rrcf	___xxtofl@arg& (0+255),f,b
  7169  00251E                     l6302:
  7170                           
  7171                           ; BSR set to: 0
  7172  00251E  0E00               	movlw	0
  7173  002520  156A               	andwf	___xxtofl@arg& (0+255),w,b
  7174  002522  6F64               	movwf	??___xxtofl& (0+255),b
  7175  002524  0E00               	movlw	0
  7176  002526  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  7177  002528  6F65               	movwf	(??___xxtofl+1)& (0+255),b
  7178  00252A  0E00               	movlw	0
  7179  00252C  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  7180  00252E  6F66               	movwf	(??___xxtofl+2)& (0+255),b
  7181  002530  0EFE               	movlw	254
  7182  002532  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  7183  002534  6F67               	movwf	(??___xxtofl+3)& (0+255),b
  7184  002536  5164               	movf	??___xxtofl& (0+255),w,b
  7185  002538  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
  7186  00253A  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
  7187  00253C  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
  7188  00253E  A4D8               	btfss	status,2,c
  7189  002540  EFA4  F012         	goto	u5611
  7190  002544  EFA6  F012         	goto	u5610
  7191  002548                     u5611:
  7192  002548  EF89  F012         	goto	l6300
  7193  00254C                     u5610:
  7194  00254C  EFB4  F012         	goto	l1997
  7195  002550                     l6304:
  7196                           
  7197                           ; BSR set to: 0
  7198  002550  2B69               	incf	___xxtofl@exp& (0+255),f,b
  7199  002552                     
  7200                           ; BSR set to: 0
  7201  002552  0E01               	movlw	1
  7202  002554  276A               	addwf	___xxtofl@arg& (0+255),f,b
  7203  002556  0E00               	movlw	0
  7204  002558  236B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  7205  00255A  236C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  7206  00255C  236D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  7207  00255E                     
  7208                           ; BSR set to: 0
  7209  00255E  90D8               	bcf	status,0,c
  7210  002560  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  7211  002562  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  7212  002564  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  7213  002566  336A               	rrcf	___xxtofl@arg& (0+255),f,b
  7214  002568                     l1997:
  7215                           
  7216                           ; BSR set to: 0
  7217  002568  0E00               	movlw	0
  7218  00256A  156A               	andwf	___xxtofl@arg& (0+255),w,b
  7219  00256C  6F64               	movwf	??___xxtofl& (0+255),b
  7220  00256E  0E00               	movlw	0
  7221  002570  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  7222  002572  6F65               	movwf	(??___xxtofl+1)& (0+255),b
  7223  002574  0E00               	movlw	0
  7224  002576  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  7225  002578  6F66               	movwf	(??___xxtofl+2)& (0+255),b
  7226  00257A  0EFF               	movlw	255
  7227  00257C  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  7228  00257E  6F67               	movwf	(??___xxtofl+3)& (0+255),b
  7229  002580  5164               	movf	??___xxtofl& (0+255),w,b
  7230  002582  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
  7231  002584  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
  7232  002586  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
  7233  002588  A4D8               	btfss	status,2,c
  7234  00258A  EFC9  F012         	goto	u5621
  7235  00258E  EFCB  F012         	goto	u5620
  7236  002592                     u5621:
  7237  002592  EFA8  F012         	goto	l6304
  7238  002596                     u5620:
  7239  002596  EFD3  F012         	goto	l6312
  7240  00259A                     l6310:
  7241                           
  7242                           ; BSR set to: 0
  7243  00259A  0769               	decf	___xxtofl@exp& (0+255),f,b
  7244  00259C  90D8               	bcf	status,0,c
  7245  00259E  376A               	rlcf	___xxtofl@arg& (0+255),f,b
  7246  0025A0  376B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  7247  0025A2  376C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  7248  0025A4  376D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  7249  0025A6                     l6312:
  7250                           
  7251                           ; BSR set to: 0
  7252  0025A6  BF6C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  7253  0025A8  EFD8  F012         	goto	u5631
  7254  0025AC  EFDA  F012         	goto	u5630
  7255  0025B0                     u5631:
  7256  0025B0  EFE2  F012         	goto	l2004
  7257  0025B4                     u5630:
  7258  0025B4                     
  7259                           ; BSR set to: 0
  7260  0025B4  0E02               	movlw	2
  7261  0025B6  6169               	cpfslt	___xxtofl@exp& (0+255),b
  7262  0025B8  EFE0  F012         	goto	u5641
  7263  0025BC  EFE2  F012         	goto	u5640
  7264  0025C0                     u5641:
  7265  0025C0  EFCD  F012         	goto	l6310
  7266  0025C4                     u5640:
  7267  0025C4                     l2004:
  7268                           
  7269                           ; BSR set to: 0
  7270  0025C4  B169               	btfsc	___xxtofl@exp& (0+255),0,b
  7271  0025C6  EFE7  F012         	goto	u5651
  7272  0025CA  EFE9  F012         	goto	u5650
  7273  0025CE                     u5651:
  7274  0025CE  EFEA  F012         	goto	l6318
  7275  0025D2                     u5650:
  7276  0025D2                     
  7277                           ; BSR set to: 0
  7278  0025D2  9F6C               	bcf	(___xxtofl@arg+2)& (0+255),7,b
  7279  0025D4                     l6318:
  7280                           
  7281                           ; BSR set to: 0
  7282  0025D4  90D8               	bcf	status,0,c
  7283  0025D6  3369               	rrcf	___xxtofl@exp& (0+255),f,b
  7284  0025D8                     
  7285                           ; BSR set to: 0
  7286  0025D8  C069  F064         	movff	___xxtofl@exp,??___xxtofl
  7287  0025DC  6B65               	clrf	(??___xxtofl+1)& (0+255),b
  7288  0025DE  6B66               	clrf	(??___xxtofl+2)& (0+255),b
  7289  0025E0  6B67               	clrf	(??___xxtofl+3)& (0+255),b
  7290  0025E2  C064  F067         	movff	??___xxtofl,??___xxtofl+3
  7291  0025E6  6B66               	clrf	(??___xxtofl+2)& (0+255),b
  7292  0025E8  6B65               	clrf	(??___xxtofl+1)& (0+255),b
  7293  0025EA  6B64               	clrf	??___xxtofl& (0+255),b
  7294  0025EC  5164               	movf	??___xxtofl& (0+255),w,b
  7295  0025EE  136A               	iorwf	___xxtofl@arg& (0+255),f,b
  7296  0025F0  5165               	movf	(??___xxtofl+1)& (0+255),w,b
  7297  0025F2  136B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  7298  0025F4  5166               	movf	(??___xxtofl+2)& (0+255),w,b
  7299  0025F6  136C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  7300  0025F8  5167               	movf	(??___xxtofl+3)& (0+255),w,b
  7301  0025FA  136D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  7302  0025FC                     
  7303                           ; BSR set to: 0
  7304  0025FC  5168               	movf	___xxtofl@sign& (0+255),w,b
  7305  0025FE  B4D8               	btfsc	status,2,c
  7306  002600  EF04  F013         	goto	u5661
  7307  002604  EF06  F013         	goto	u5660
  7308  002608                     u5661:
  7309  002608  EF0E  F013         	goto	l6328
  7310  00260C                     u5660:
  7311  00260C                     
  7312                           ; BSR set to: 0
  7313  00260C  BF63               	btfsc	(___xxtofl@val+3)& (0+255),7,b
  7314  00260E  EF0D  F013         	goto	u5670
  7315  002612  EF0B  F013         	goto	u5671
  7316  002616                     u5671:
  7317  002616  EF0E  F013         	goto	l6328
  7318  00261A                     u5670:
  7319  00261A                     
  7320                           ; BSR set to: 0
  7321  00261A  8F6D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  7322  00261C                     l6328:
  7323                           
  7324                           ; BSR set to: 0
  7325  00261C  C06A  F060         	movff	___xxtofl@arg,?___xxtofl
  7326  002620  C06B  F061         	movff	___xxtofl@arg+1,?___xxtofl+1
  7327  002624  C06C  F062         	movff	___xxtofl@arg+2,?___xxtofl+2
  7328  002628  C06D  F063         	movff	___xxtofl@arg+3,?___xxtofl+3
  7329  00262C                     l1993:
  7330                           
  7331                           ; BSR set to: 0
  7332  00262C  0012               	return		;funcret
  7333  00262E                     __end_of___xxtofl:
  7334                           	callstack 0
  7335                           
  7336 ;; *************** function ___fltol *****************
  7337 ;; Defined at:
  7338 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fltol.c"
  7339 ;; Parameters:    Size  Location     Type
  7340 ;;  f1              4   55[BANK0 ] unsigned char 
  7341 ;; Auto vars:     Size  Location     Type
  7342 ;;  exp1            1   32[COMRAM] unsigned char 
  7343 ;;  sign1           1   31[COMRAM] unsigned char 
  7344 ;; Return value:  Size  Location     Type
  7345 ;;                  4   55[BANK0 ] long 
  7346 ;; Registers used:
  7347 ;;		wreg, status,2, status,0
  7348 ;; Tracked objects:
  7349 ;;		On entry : 0/0
  7350 ;;		On exit  : 0/0
  7351 ;;		Unchanged: 0/0
  7352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7353 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7354 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7355 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7356 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7357 ;;Total ram usage:       10 bytes
  7358 ;; Hardware stack levels used: 1
  7359 ;; Hardware stack levels required when called: 8
  7360 ;; This function calls:
  7361 ;;		Nothing
  7362 ;; This function is called by:
  7363 ;;		_calcSpeed
  7364 ;;		_calcMotorPow
  7365 ;; This function uses a non-reentrant model
  7366 ;;
  7367                           
  7368                           	psect	text33
  7369  002C82                     __ptext33:
  7370                           	callstack 0
  7371  002C82                     ___fltol:
  7372                           	callstack 20
  7373  002C82  0100               	movlb	0	; () banked
  7374  002C84  3599               	rlcf	(___fltol@f1+2)& (0+255),w,b
  7375  002C86  359A               	rlcf	(___fltol@f1+3)& (0+255),w,b
  7376  002C88  6E21               	movwf	___fltol@exp1^0,c
  7377  002C8A  5021               	movf	___fltol@exp1^0,w,c
  7378  002C8C  A4D8               	btfss	status,2,c
  7379  002C8E  EF4B  F016         	goto	u3491
  7380  002C92  EF4D  F016         	goto	u3490
  7381  002C96                     u3491:
  7382  002C96  EF57  F016         	goto	l4806
  7383  002C9A                     u3490:
  7384  002C9A                     l4802:
  7385                           
  7386                           ; BSR set to: 0
  7387  002C9A  0E00               	movlw	0
  7388  002C9C  6F97               	movwf	?___fltol& (0+255),b
  7389  002C9E  0E00               	movlw	0
  7390  002CA0  6F98               	movwf	(?___fltol+1)& (0+255),b
  7391  002CA2  0E00               	movlw	0
  7392  002CA4  6F99               	movwf	(?___fltol+2)& (0+255),b
  7393  002CA6  0E00               	movlw	0
  7394  002CA8  6F9A               	movwf	(?___fltol+3)& (0+255),b
  7395  002CAA  EFC4  F016         	goto	l1632
  7396  002CAE                     l4806:
  7397                           
  7398                           ; BSR set to: 0
  7399  002CAE  C097  F09B         	movff	___fltol@f1,??___fltol
  7400  002CB2  C098  F09C         	movff	___fltol@f1+1,??___fltol+1
  7401  002CB6  C099  F09D         	movff	___fltol@f1+2,??___fltol+2
  7402  002CBA  C09A  F09E         	movff	___fltol@f1+3,??___fltol+3
  7403  002CBE  0E20               	movlw	32
  7404  002CC0  EF67  F016         	goto	u3500
  7405  002CC4                     u3505:
  7406  002CC4  90D8               	bcf	status,0,c
  7407  002CC6  339E               	rrcf	(??___fltol+3)& (0+255),f,b
  7408  002CC8  339D               	rrcf	(??___fltol+2)& (0+255),f,b
  7409  002CCA  339C               	rrcf	(??___fltol+1)& (0+255),f,b
  7410  002CCC  339B               	rrcf	??___fltol& (0+255),f,b
  7411  002CCE                     u3500:
  7412  002CCE  2EE8               	decfsz	wreg,f,c
  7413  002CD0  EF62  F016         	goto	u3505
  7414  002CD4  519B               	movf	??___fltol& (0+255),w,b
  7415  002CD6  6E20               	movwf	___fltol@sign1^0,c
  7416  002CD8                     
  7417                           ; BSR set to: 0
  7418  002CD8  8F99               	bsf	(___fltol@f1+2)& (0+255),7,b
  7419  002CDA                     
  7420                           ; BSR set to: 0
  7421  002CDA  0EFF               	movlw	255
  7422  002CDC  1797               	andwf	___fltol@f1& (0+255),f,b
  7423  002CDE  0EFF               	movlw	255
  7424  002CE0  1798               	andwf	(___fltol@f1+1)& (0+255),f,b
  7425  002CE2  0EFF               	movlw	255
  7426  002CE4  1799               	andwf	(___fltol@f1+2)& (0+255),f,b
  7427  002CE6  0E00               	movlw	0
  7428  002CE8  179A               	andwf	(___fltol@f1+3)& (0+255),f,b
  7429  002CEA                     
  7430                           ; BSR set to: 0
  7431  002CEA  0E96               	movlw	150
  7432  002CEC  5E21               	subwf	___fltol@exp1^0,f,c
  7433  002CEE                     
  7434                           ; BSR set to: 0
  7435  002CEE  BE21               	btfsc	___fltol@exp1^0,7,c
  7436  002CF0  EF7E  F016         	goto	u3510
  7437  002CF4  EF7C  F016         	goto	u3511
  7438  002CF8                     u3511:
  7439  002CF8  EF94  F016         	goto	l4826
  7440  002CFC                     u3510:
  7441  002CFC                     
  7442                           ; BSR set to: 0
  7443  002CFC  5021               	movf	___fltol@exp1^0,w,c
  7444  002CFE  0A80               	xorlw	128
  7445  002D00  0F97               	addlw	151
  7446  002D02  B0D8               	btfsc	status,0,c
  7447  002D04  EF86  F016         	goto	u3521
  7448  002D08  EF88  F016         	goto	u3520
  7449  002D0C                     u3521:
  7450  002D0C  EF8A  F016         	goto	l4822
  7451  002D10                     u3520:
  7452  002D10  EF4D  F016         	goto	l4802
  7453  002D14                     l4822:
  7454                           
  7455                           ; BSR set to: 0
  7456  002D14  90D8               	bcf	status,0,c
  7457  002D16  339A               	rrcf	(___fltol@f1+3)& (0+255),f,b
  7458  002D18  3399               	rrcf	(___fltol@f1+2)& (0+255),f,b
  7459  002D1A  3398               	rrcf	(___fltol@f1+1)& (0+255),f,b
  7460  002D1C  3397               	rrcf	___fltol@f1& (0+255),f,b
  7461  002D1E                     
  7462                           ; BSR set to: 0
  7463  002D1E  3E21               	incfsz	___fltol@exp1^0,f,c
  7464  002D20  EF8A  F016         	goto	l4822
  7465  002D24  EFAC  F016         	goto	l4836
  7466  002D28                     l4826:
  7467                           
  7468                           ; BSR set to: 0
  7469  002D28  0E1F               	movlw	31
  7470  002D2A  6421               	cpfsgt	___fltol@exp1^0,c
  7471  002D2C  EF9A  F016         	goto	u3531
  7472  002D30  EF9C  F016         	goto	u3530
  7473  002D34                     u3531:
  7474  002D34  EFA4  F016         	goto	l4834
  7475  002D38                     u3530:
  7476  002D38  EF4D  F016         	goto	l4802
  7477  002D3C                     l4832:
  7478                           
  7479                           ; BSR set to: 0
  7480  002D3C  90D8               	bcf	status,0,c
  7481  002D3E  3797               	rlcf	___fltol@f1& (0+255),f,b
  7482  002D40  3798               	rlcf	(___fltol@f1+1)& (0+255),f,b
  7483  002D42  3799               	rlcf	(___fltol@f1+2)& (0+255),f,b
  7484  002D44  379A               	rlcf	(___fltol@f1+3)& (0+255),f,b
  7485  002D46  0621               	decf	___fltol@exp1^0,f,c
  7486  002D48                     l4834:
  7487                           
  7488                           ; BSR set to: 0
  7489  002D48  5021               	movf	___fltol@exp1^0,w,c
  7490  002D4A  A4D8               	btfss	status,2,c
  7491  002D4C  EFAA  F016         	goto	u3541
  7492  002D50  EFAC  F016         	goto	u3540
  7493  002D54                     u3541:
  7494  002D54  EF9E  F016         	goto	l4832
  7495  002D58                     u3540:
  7496  002D58                     l4836:
  7497                           
  7498                           ; BSR set to: 0
  7499  002D58  5020               	movf	___fltol@sign1^0,w,c
  7500  002D5A  B4D8               	btfsc	status,2,c
  7501  002D5C  EFB2  F016         	goto	u3551
  7502  002D60  EFB4  F016         	goto	u3550
  7503  002D64                     u3551:
  7504  002D64  EFBC  F016         	goto	l4840
  7505  002D68                     u3550:
  7506  002D68                     
  7507                           ; BSR set to: 0
  7508  002D68  1F9A               	comf	(___fltol@f1+3)& (0+255),f,b
  7509  002D6A  1F99               	comf	(___fltol@f1+2)& (0+255),f,b
  7510  002D6C  1F98               	comf	(___fltol@f1+1)& (0+255),f,b
  7511  002D6E  6D97               	negf	___fltol@f1& (0+255),b
  7512  002D70  0E00               	movlw	0
  7513  002D72  2398               	addwfc	(___fltol@f1+1)& (0+255),f,b
  7514  002D74  2399               	addwfc	(___fltol@f1+2)& (0+255),f,b
  7515  002D76  239A               	addwfc	(___fltol@f1+3)& (0+255),f,b
  7516  002D78                     l4840:
  7517                           
  7518                           ; BSR set to: 0
  7519  002D78  C097  F097         	movff	___fltol@f1,?___fltol
  7520  002D7C  C098  F098         	movff	___fltol@f1+1,?___fltol+1
  7521  002D80  C099  F099         	movff	___fltol@f1+2,?___fltol+2
  7522  002D84  C09A  F09A         	movff	___fltol@f1+3,?___fltol+3
  7523  002D88                     l1632:
  7524                           
  7525                           ; BSR set to: 0
  7526  002D88  0012               	return		;funcret
  7527  002D8A                     __end_of___fltol:
  7528                           	callstack 0
  7529                           
  7530 ;; *************** function ___flmul *****************
  7531 ;; Defined at:
  7532 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcmul.c"
  7533 ;; Parameters:    Size  Location     Type
  7534 ;;  b               4   14[BANK0 ] long 
  7535 ;;  a               4   18[BANK0 ] long 
  7536 ;; Auto vars:     Size  Location     Type
  7537 ;;  prod            4   33[BANK0 ] struct .
  7538 ;;  grs             4   28[BANK0 ] unsigned long 
  7539 ;;  temp            2   37[BANK0 ] struct .
  7540 ;;  bexp            1   32[BANK0 ] unsigned char 
  7541 ;;  aexp            1   27[BANK0 ] unsigned char 
  7542 ;;  sign            1   26[BANK0 ] unsigned char 
  7543 ;; Return value:  Size  Location     Type
  7544 ;;                  4   14[BANK0 ] unsigned char 
  7545 ;; Registers used:
  7546 ;;		wreg, status,2, status,0, prodl, prodh
  7547 ;; Tracked objects:
  7548 ;;		On entry : 0/0
  7549 ;;		On exit  : 0/0
  7550 ;;		Unchanged: 0/0
  7551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7552 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7553 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7554 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7555 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7556 ;;Total ram usage:       25 bytes
  7557 ;; Hardware stack levels used: 1
  7558 ;; Hardware stack levels required when called: 8
  7559 ;; This function calls:
  7560 ;;		Nothing
  7561 ;; This function is called by:
  7562 ;;		_calcSpeed
  7563 ;;		_calcMotorPow
  7564 ;; This function uses a non-reentrant model
  7565 ;;
  7566                           
  7567                           	psect	text34
  7568  001536                     __ptext34:
  7569                           	callstack 0
  7570  001536                     ___flmul:
  7571                           	callstack 20
  7572  001536  0100               	movlb	0	; () banked
  7573  001538  5171               	movf	(___flmul@b+3)& (0+255),w,b
  7574  00153A  0B80               	andlw	128
  7575  00153C  6F7A               	movwf	___flmul@sign& (0+255),b
  7576  00153E  5171               	movf	(___flmul@b+3)& (0+255),w,b
  7577  001540  2571               	addwf	(___flmul@b+3)& (0+255),w,b
  7578  001542  6F80               	movwf	___flmul@bexp& (0+255),b
  7579  001544                     
  7580                           ; BSR set to: 0
  7581  001544  AF70               	btfss	(___flmul@b+2)& (0+255),7,b
  7582  001546  EFA7  F00A         	goto	u5391
  7583  00154A  EFA9  F00A         	goto	u5390
  7584  00154E                     u5391:
  7585  00154E  EFAA  F00A         	goto	l6162
  7586  001552                     u5390:
  7587  001552                     
  7588                           ; BSR set to: 0
  7589  001552  8180               	bsf	___flmul@bexp& (0+255),0,b
  7590  001554                     l6162:
  7591                           
  7592                           ; BSR set to: 0
  7593  001554  5180               	movf	___flmul@bexp& (0+255),w,b
  7594  001556  B4D8               	btfsc	status,2,c
  7595  001558  EFB0  F00A         	goto	u5401
  7596  00155C  EFB2  F00A         	goto	u5400
  7597  001560                     u5401:
  7598  001560  EFC5  F00A         	goto	l6170
  7599  001564                     u5400:
  7600  001564                     
  7601                           ; BSR set to: 0
  7602  001564  2980               	incf	___flmul@bexp& (0+255),w,b
  7603  001566  A4D8               	btfss	status,2,c
  7604  001568  EFB8  F00A         	goto	u5411
  7605  00156C  EFBA  F00A         	goto	u5410
  7606  001570                     u5411:
  7607  001570  EFC2  F00A         	goto	l6168
  7608  001574                     u5410:
  7609  001574                     
  7610                           ; BSR set to: 0
  7611  001574  0E00               	movlw	0
  7612  001576  6F6E               	movwf	___flmul@b& (0+255),b
  7613  001578  0E00               	movlw	0
  7614  00157A  6F6F               	movwf	(___flmul@b+1)& (0+255),b
  7615  00157C  0E00               	movlw	0
  7616  00157E  6F70               	movwf	(___flmul@b+2)& (0+255),b
  7617  001580  0E00               	movlw	0
  7618  001582  6F71               	movwf	(___flmul@b+3)& (0+255),b
  7619  001584                     l6168:
  7620                           
  7621                           ; BSR set to: 0
  7622  001584  8F70               	bsf	(___flmul@b+2)& (0+255),7,b
  7623  001586  EFCD  F00A         	goto	l6172
  7624  00158A                     l6170:
  7625                           
  7626                           ; BSR set to: 0
  7627  00158A  0E00               	movlw	0
  7628  00158C  6F6E               	movwf	___flmul@b& (0+255),b
  7629  00158E  0E00               	movlw	0
  7630  001590  6F6F               	movwf	(___flmul@b+1)& (0+255),b
  7631  001592  0E00               	movlw	0
  7632  001594  6F70               	movwf	(___flmul@b+2)& (0+255),b
  7633  001596  0E00               	movlw	0
  7634  001598  6F71               	movwf	(___flmul@b+3)& (0+255),b
  7635  00159A                     l6172:
  7636                           
  7637                           ; BSR set to: 0
  7638  00159A  5175               	movf	(___flmul@a+3)& (0+255),w,b
  7639  00159C  0B80               	andlw	128
  7640  00159E  1B7A               	xorwf	___flmul@sign& (0+255),f,b
  7641  0015A0                     
  7642                           ; BSR set to: 0
  7643  0015A0  5175               	movf	(___flmul@a+3)& (0+255),w,b
  7644  0015A2  2575               	addwf	(___flmul@a+3)& (0+255),w,b
  7645  0015A4  6F7B               	movwf	___flmul@aexp& (0+255),b
  7646  0015A6                     
  7647                           ; BSR set to: 0
  7648  0015A6  AF74               	btfss	(___flmul@a+2)& (0+255),7,b
  7649  0015A8  EFD8  F00A         	goto	u5421
  7650  0015AC  EFDA  F00A         	goto	u5420
  7651  0015B0                     u5421:
  7652  0015B0  EFDB  F00A         	goto	l6180
  7653  0015B4                     u5420:
  7654  0015B4                     
  7655                           ; BSR set to: 0
  7656  0015B4  817B               	bsf	___flmul@aexp& (0+255),0,b
  7657  0015B6                     l6180:
  7658                           
  7659                           ; BSR set to: 0
  7660  0015B6  517B               	movf	___flmul@aexp& (0+255),w,b
  7661  0015B8  B4D8               	btfsc	status,2,c
  7662  0015BA  EFE1  F00A         	goto	u5431
  7663  0015BE  EFE3  F00A         	goto	u5430
  7664  0015C2                     u5431:
  7665  0015C2  EFF6  F00A         	goto	l6188
  7666  0015C6                     u5430:
  7667  0015C6                     
  7668                           ; BSR set to: 0
  7669  0015C6  297B               	incf	___flmul@aexp& (0+255),w,b
  7670  0015C8  A4D8               	btfss	status,2,c
  7671  0015CA  EFE9  F00A         	goto	u5441
  7672  0015CE  EFEB  F00A         	goto	u5440
  7673  0015D2                     u5441:
  7674  0015D2  EFF3  F00A         	goto	l6186
  7675  0015D6                     u5440:
  7676  0015D6                     
  7677                           ; BSR set to: 0
  7678  0015D6  0E00               	movlw	0
  7679  0015D8  6F72               	movwf	___flmul@a& (0+255),b
  7680  0015DA  0E00               	movlw	0
  7681  0015DC  6F73               	movwf	(___flmul@a+1)& (0+255),b
  7682  0015DE  0E00               	movlw	0
  7683  0015E0  6F74               	movwf	(___flmul@a+2)& (0+255),b
  7684  0015E2  0E00               	movlw	0
  7685  0015E4  6F75               	movwf	(___flmul@a+3)& (0+255),b
  7686  0015E6                     l6186:
  7687                           
  7688                           ; BSR set to: 0
  7689  0015E6  8F74               	bsf	(___flmul@a+2)& (0+255),7,b
  7690  0015E8  EFFE  F00A         	goto	l1949
  7691  0015EC                     l6188:
  7692                           
  7693                           ; BSR set to: 0
  7694  0015EC  0E00               	movlw	0
  7695  0015EE  6F72               	movwf	___flmul@a& (0+255),b
  7696  0015F0  0E00               	movlw	0
  7697  0015F2  6F73               	movwf	(___flmul@a+1)& (0+255),b
  7698  0015F4  0E00               	movlw	0
  7699  0015F6  6F74               	movwf	(___flmul@a+2)& (0+255),b
  7700  0015F8  0E00               	movlw	0
  7701  0015FA  6F75               	movwf	(___flmul@a+3)& (0+255),b
  7702  0015FC                     l1949:
  7703                           
  7704                           ; BSR set to: 0
  7705  0015FC  517B               	movf	___flmul@aexp& (0+255),w,b
  7706  0015FE  B4D8               	btfsc	status,2,c
  7707  001600  EF04  F00B         	goto	u5451
  7708  001604  EF06  F00B         	goto	u5450
  7709  001608                     u5451:
  7710  001608  EF0E  F00B         	goto	l6192
  7711  00160C                     u5450:
  7712  00160C                     
  7713                           ; BSR set to: 0
  7714  00160C  5180               	movf	___flmul@bexp& (0+255),w,b
  7715  00160E  A4D8               	btfss	status,2,c
  7716  001610  EF0C  F00B         	goto	u5461
  7717  001614  EF0E  F00B         	goto	u5460
  7718  001618                     u5461:
  7719  001618  EF18  F00B         	goto	l6196
  7720  00161C                     u5460:
  7721  00161C                     l6192:
  7722                           
  7723                           ; BSR set to: 0
  7724  00161C  0E00               	movlw	0
  7725  00161E  6F6E               	movwf	?___flmul& (0+255),b
  7726  001620  0E00               	movlw	0
  7727  001622  6F6F               	movwf	(?___flmul+1)& (0+255),b
  7728  001624  0E00               	movlw	0
  7729  001626  6F70               	movwf	(?___flmul+2)& (0+255),b
  7730  001628  0E00               	movlw	0
  7731  00162A  6F71               	movwf	(?___flmul+3)& (0+255),b
  7732  00162C  EFC2  F00C         	goto	l1953
  7733  001630                     l6196:
  7734                           
  7735                           ; BSR set to: 0
  7736  001630  5174               	movf	(___flmul@a+2)& (0+255),w,b
  7737  001632  036E               	mulwf	___flmul@b& (0+255),b
  7738  001634  006F FFCC  F085    	movff	prodl,___flmul@temp
  7739  00163A  006F FFD0  F086    	movff	prodh,___flmul@temp+1
  7740  001640                     
  7741                           ; BSR set to: 0
  7742  001640  5185               	movf	___flmul@temp& (0+255),w,b
  7743  001642  6F7C               	movwf	___flmul@grs& (0+255),b
  7744  001644  6B7D               	clrf	(___flmul@grs+1)& (0+255),b
  7745  001646  6B7E               	clrf	(___flmul@grs+2)& (0+255),b
  7746  001648  6B7F               	clrf	(___flmul@grs+3)& (0+255),b
  7747  00164A                     
  7748                           ; BSR set to: 0
  7749  00164A  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  7750  00164C  6F81               	movwf	___flmul@prod& (0+255),b
  7751  00164E  6B82               	clrf	(___flmul@prod+1)& (0+255),b
  7752  001650  6B83               	clrf	(___flmul@prod+2)& (0+255),b
  7753  001652  6B84               	clrf	(___flmul@prod+3)& (0+255),b
  7754  001654  5173               	movf	(___flmul@a+1)& (0+255),w,b
  7755  001656  036F               	mulwf	(___flmul@b+1)& (0+255),b
  7756  001658  006F FFCC  F085    	movff	prodl,___flmul@temp
  7757  00165E  006F FFD0  F086    	movff	prodh,___flmul@temp+1
  7758  001664                     
  7759                           ; BSR set to: 0
  7760  001664  5185               	movf	___flmul@temp& (0+255),w,b
  7761  001666  277C               	addwf	___flmul@grs& (0+255),f,b
  7762  001668  0E00               	movlw	0
  7763  00166A  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7764  00166C  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7765  00166E  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7766  001670                     
  7767                           ; BSR set to: 0
  7768  001670  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  7769  001672  2781               	addwf	___flmul@prod& (0+255),f,b
  7770  001674  0E00               	movlw	0
  7771  001676  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7772  001678  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7773  00167A  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7774  00167C  5172               	movf	___flmul@a& (0+255),w,b
  7775  00167E  0370               	mulwf	(___flmul@b+2)& (0+255),b
  7776  001680  006F FFCC  F085    	movff	prodl,___flmul@temp
  7777  001686  006F FFD0  F086    	movff	prodh,___flmul@temp+1
  7778  00168C                     
  7779                           ; BSR set to: 0
  7780  00168C  5185               	movf	___flmul@temp& (0+255),w,b
  7781  00168E  277C               	addwf	___flmul@grs& (0+255),f,b
  7782  001690  0E00               	movlw	0
  7783  001692  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7784  001694  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7785  001696  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7786  001698                     
  7787                           ; BSR set to: 0
  7788  001698  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  7789  00169A  2781               	addwf	___flmul@prod& (0+255),f,b
  7790  00169C  0E00               	movlw	0
  7791  00169E  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7792  0016A0  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7793  0016A2  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7794  0016A4                     
  7795                           ; BSR set to: 0
  7796  0016A4  C07E  F07F         	movff	___flmul@grs+2,___flmul@grs+3
  7797  0016A8  C07D  F07E         	movff	___flmul@grs+1,___flmul@grs+2
  7798  0016AC  C07C  F07D         	movff	___flmul@grs,___flmul@grs+1
  7799  0016B0  6B7C               	clrf	___flmul@grs& (0+255),b
  7800  0016B2                     
  7801                           ; BSR set to: 0
  7802  0016B2  5172               	movf	___flmul@a& (0+255),w,b
  7803  0016B4  036F               	mulwf	(___flmul@b+1)& (0+255),b
  7804  0016B6  006F FFCC  F085    	movff	prodl,___flmul@temp
  7805  0016BC  006F FFD0  F086    	movff	prodh,___flmul@temp+1
  7806  0016C2                     
  7807                           ; BSR set to: 0
  7808  0016C2  5185               	movf	___flmul@temp& (0+255),w,b
  7809  0016C4  277C               	addwf	___flmul@grs& (0+255),f,b
  7810  0016C6  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  7811  0016C8  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7812  0016CA  0E00               	movlw	0
  7813  0016CC  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7814  0016CE  0E00               	movlw	0
  7815  0016D0  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7816  0016D2                     
  7817                           ; BSR set to: 0
  7818  0016D2  5173               	movf	(___flmul@a+1)& (0+255),w,b
  7819  0016D4  036E               	mulwf	___flmul@b& (0+255),b
  7820  0016D6  006F FFCC  F085    	movff	prodl,___flmul@temp
  7821  0016DC  006F FFD0  F086    	movff	prodh,___flmul@temp+1
  7822  0016E2                     
  7823                           ; BSR set to: 0
  7824  0016E2  5185               	movf	___flmul@temp& (0+255),w,b
  7825  0016E4  277C               	addwf	___flmul@grs& (0+255),f,b
  7826  0016E6  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  7827  0016E8  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7828  0016EA  0E00               	movlw	0
  7829  0016EC  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7830  0016EE  0E00               	movlw	0
  7831  0016F0  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7832  0016F2                     
  7833                           ; BSR set to: 0
  7834  0016F2  C07E  F07F         	movff	___flmul@grs+2,___flmul@grs+3
  7835  0016F6  C07D  F07E         	movff	___flmul@grs+1,___flmul@grs+2
  7836  0016FA  C07C  F07D         	movff	___flmul@grs,___flmul@grs+1
  7837  0016FE  6B7C               	clrf	___flmul@grs& (0+255),b
  7838  001700  5172               	movf	___flmul@a& (0+255),w,b
  7839  001702  036E               	mulwf	___flmul@b& (0+255),b
  7840  001704  006F FFCC  F085    	movff	prodl,___flmul@temp
  7841  00170A  006F FFD0  F086    	movff	prodh,___flmul@temp+1
  7842  001710                     
  7843                           ; BSR set to: 0
  7844  001710  5185               	movf	___flmul@temp& (0+255),w,b
  7845  001712  277C               	addwf	___flmul@grs& (0+255),f,b
  7846  001714  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  7847  001716  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7848  001718  0E00               	movlw	0
  7849  00171A  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7850  00171C  0E00               	movlw	0
  7851  00171E  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7852  001720                     
  7853                           ; BSR set to: 0
  7854  001720  5174               	movf	(___flmul@a+2)& (0+255),w,b
  7855  001722  036F               	mulwf	(___flmul@b+1)& (0+255),b
  7856  001724  006F FFCC  F085    	movff	prodl,___flmul@temp
  7857  00172A  006F FFD0  F086    	movff	prodh,___flmul@temp+1
  7858  001730  5185               	movf	___flmul@temp& (0+255),w,b
  7859  001732  2781               	addwf	___flmul@prod& (0+255),f,b
  7860  001734  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  7861  001736  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7862  001738  0E00               	movlw	0
  7863  00173A  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7864  00173C  0E00               	movlw	0
  7865  00173E  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7866  001740                     
  7867                           ; BSR set to: 0
  7868  001740  5173               	movf	(___flmul@a+1)& (0+255),w,b
  7869  001742  0370               	mulwf	(___flmul@b+2)& (0+255),b
  7870  001744  006F FFCC  F085    	movff	prodl,___flmul@temp
  7871  00174A  006F FFD0  F086    	movff	prodh,___flmul@temp+1
  7872  001750                     
  7873                           ; BSR set to: 0
  7874  001750  5185               	movf	___flmul@temp& (0+255),w,b
  7875  001752  2781               	addwf	___flmul@prod& (0+255),f,b
  7876  001754  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  7877  001756  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7878  001758  0E00               	movlw	0
  7879  00175A  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7880  00175C  0E00               	movlw	0
  7881  00175E  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7882  001760  5174               	movf	(___flmul@a+2)& (0+255),w,b
  7883  001762  0370               	mulwf	(___flmul@b+2)& (0+255),b
  7884  001764  006F FFCC  F085    	movff	prodl,___flmul@temp
  7885  00176A  006F FFD0  F086    	movff	prodh,___flmul@temp+1
  7886  001770                     
  7887                           ; BSR set to: 0
  7888  001770  5185               	movf	___flmul@temp& (0+255),w,b
  7889  001772  6F76               	movwf	??___flmul& (0+255),b
  7890  001774  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  7891  001776  6F77               	movwf	(??___flmul+1)& (0+255),b
  7892  001778  6B78               	clrf	(??___flmul+2)& (0+255),b
  7893  00177A  6B79               	clrf	(??___flmul+3)& (0+255),b
  7894  00177C  C078  F079         	movff	??___flmul+2,??___flmul+3
  7895  001780  C077  F078         	movff	??___flmul+1,??___flmul+2
  7896  001784  C076  F077         	movff	??___flmul,??___flmul+1
  7897  001788  6B76               	clrf	??___flmul& (0+255),b
  7898  00178A  5176               	movf	??___flmul& (0+255),w,b
  7899  00178C  2781               	addwf	___flmul@prod& (0+255),f,b
  7900  00178E  5177               	movf	(??___flmul+1)& (0+255),w,b
  7901  001790  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7902  001792  5178               	movf	(??___flmul+2)& (0+255),w,b
  7903  001794  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7904  001796  5179               	movf	(??___flmul+3)& (0+255),w,b
  7905  001798  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7906  00179A                     
  7907                           ; BSR set to: 0
  7908  00179A  C07C  F076         	movff	___flmul@grs,??___flmul
  7909  00179E  C07D  F077         	movff	___flmul@grs+1,??___flmul+1
  7910  0017A2  C07E  F078         	movff	___flmul@grs+2,??___flmul+2
  7911  0017A6  C07F  F079         	movff	___flmul@grs+3,??___flmul+3
  7912  0017AA  0E19               	movlw	25
  7913  0017AC  EFDD  F00B         	goto	u5470
  7914  0017B0                     u5475:
  7915  0017B0  90D8               	bcf	status,0,c
  7916  0017B2  3379               	rrcf	(??___flmul+3)& (0+255),f,b
  7917  0017B4  3378               	rrcf	(??___flmul+2)& (0+255),f,b
  7918  0017B6  3377               	rrcf	(??___flmul+1)& (0+255),f,b
  7919  0017B8  3376               	rrcf	??___flmul& (0+255),f,b
  7920  0017BA                     u5470:
  7921  0017BA  2EE8               	decfsz	wreg,f,c
  7922  0017BC  EFD8  F00B         	goto	u5475
  7923  0017C0  5176               	movf	??___flmul& (0+255),w,b
  7924  0017C2  2781               	addwf	___flmul@prod& (0+255),f,b
  7925  0017C4  5177               	movf	(??___flmul+1)& (0+255),w,b
  7926  0017C6  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7927  0017C8  5178               	movf	(??___flmul+2)& (0+255),w,b
  7928  0017CA  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7929  0017CC  5179               	movf	(??___flmul+3)& (0+255),w,b
  7930  0017CE  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7931  0017D0                     
  7932                           ; BSR set to: 0
  7933  0017D0  C07E  F07F         	movff	___flmul@grs+2,___flmul@grs+3
  7934  0017D4  C07D  F07E         	movff	___flmul@grs+1,___flmul@grs+2
  7935  0017D8  C07C  F07D         	movff	___flmul@grs,___flmul@grs+1
  7936  0017DC  6B7C               	clrf	___flmul@grs& (0+255),b
  7937  0017DE                     
  7938                           ; BSR set to: 0
  7939  0017DE  517B               	movf	___flmul@aexp& (0+255),w,b
  7940  0017E0  C080  F076         	movff	___flmul@bexp,??___flmul
  7941  0017E4  6B77               	clrf	(??___flmul+1)& (0+255),b
  7942  0017E6  2776               	addwf	??___flmul& (0+255),f,b
  7943  0017E8  0E00               	movlw	0
  7944  0017EA  2377               	addwfc	(??___flmul+1)& (0+255),f,b
  7945  0017EC  0E82               	movlw	130
  7946  0017EE  2576               	addwf	??___flmul& (0+255),w,b
  7947  0017F0  6F85               	movwf	___flmul@temp& (0+255),b
  7948  0017F2  0EFF               	movlw	255
  7949  0017F4  2177               	addwfc	(??___flmul+1)& (0+255),w,b
  7950  0017F6  6F86               	movwf	(___flmul@temp+1)& (0+255),b
  7951  0017F8  EF13  F00C         	goto	l6244
  7952  0017FC                     l6238:
  7953                           
  7954                           ; BSR set to: 0
  7955  0017FC  90D8               	bcf	status,0,c
  7956  0017FE  3781               	rlcf	___flmul@prod& (0+255),f,b
  7957  001800  3782               	rlcf	(___flmul@prod+1)& (0+255),f,b
  7958  001802  3783               	rlcf	(___flmul@prod+2)& (0+255),f,b
  7959  001804  3784               	rlcf	(___flmul@prod+3)& (0+255),f,b
  7960  001806                     
  7961                           ; BSR set to: 0
  7962  001806  AF7F               	btfss	(___flmul@grs+3)& (0+255),7,b
  7963  001808  EF08  F00C         	goto	u5481
  7964  00180C  EF0A  F00C         	goto	u5480
  7965  001810                     u5481:
  7966  001810  EF0B  F00C         	goto	l1956
  7967  001814                     u5480:
  7968  001814                     
  7969                           ; BSR set to: 0
  7970  001814  8181               	bsf	___flmul@prod& (0+255),0,b
  7971  001816                     l1956:
  7972                           
  7973                           ; BSR set to: 0
  7974  001816  90D8               	bcf	status,0,c
  7975  001818  377C               	rlcf	___flmul@grs& (0+255),f,b
  7976  00181A  377D               	rlcf	(___flmul@grs+1)& (0+255),f,b
  7977  00181C  377E               	rlcf	(___flmul@grs+2)& (0+255),f,b
  7978  00181E  377F               	rlcf	(___flmul@grs+3)& (0+255),f,b
  7979  001820  0785               	decf	___flmul@temp& (0+255),f,b
  7980  001822  A0D8               	btfss	status,0,c
  7981  001824  0786               	decf	(___flmul@temp+1)& (0+255),f,b
  7982  001826                     l6244:
  7983                           
  7984                           ; BSR set to: 0
  7985  001826  AF83               	btfss	(___flmul@prod+2)& (0+255),7,b
  7986  001828  EF18  F00C         	goto	u5491
  7987  00182C  EF1A  F00C         	goto	u5490
  7988  001830                     u5491:
  7989  001830  EFFE  F00B         	goto	l6238
  7990  001834                     u5490:
  7991  001834                     
  7992                           ; BSR set to: 0
  7993  001834  0E00               	movlw	0
  7994  001836  6F7B               	movwf	___flmul@aexp& (0+255),b
  7995  001838                     
  7996                           ; BSR set to: 0
  7997  001838  AF7F               	btfss	(___flmul@grs+3)& (0+255),7,b
  7998  00183A  EF21  F00C         	goto	u5501
  7999  00183E  EF23  F00C         	goto	u5500
  8000  001842                     u5501:
  8001  001842  EF47  F00C         	goto	l1958
  8002  001846                     u5500:
  8003  001846                     
  8004                           ; BSR set to: 0
  8005  001846  0EFF               	movlw	255
  8006  001848  157C               	andwf	___flmul@grs& (0+255),w,b
  8007  00184A  6F76               	movwf	??___flmul& (0+255),b
  8008  00184C  0EFF               	movlw	255
  8009  00184E  157D               	andwf	(___flmul@grs+1)& (0+255),w,b
  8010  001850  6F77               	movwf	(??___flmul+1)& (0+255),b
  8011  001852  0EFF               	movlw	255
  8012  001854  157E               	andwf	(___flmul@grs+2)& (0+255),w,b
  8013  001856  6F78               	movwf	(??___flmul+2)& (0+255),b
  8014  001858  0E7F               	movlw	127
  8015  00185A  157F               	andwf	(___flmul@grs+3)& (0+255),w,b
  8016  00185C  6F79               	movwf	(??___flmul+3)& (0+255),b
  8017  00185E  5176               	movf	??___flmul& (0+255),w,b
  8018  001860  1177               	iorwf	(??___flmul+1)& (0+255),w,b
  8019  001862  1178               	iorwf	(??___flmul+2)& (0+255),w,b
  8020  001864  1179               	iorwf	(??___flmul+3)& (0+255),w,b
  8021  001866  B4D8               	btfsc	status,2,c
  8022  001868  EF38  F00C         	goto	u5511
  8023  00186C  EF3A  F00C         	goto	u5510
  8024  001870                     u5511:
  8025  001870  EF3E  F00C         	goto	l1959
  8026  001874                     u5510:
  8027  001874                     l6252:
  8028                           
  8029                           ; BSR set to: 0
  8030  001874  0E01               	movlw	1
  8031  001876  6F7B               	movwf	___flmul@aexp& (0+255),b
  8032  001878  EF47  F00C         	goto	l1958
  8033  00187C                     l1959:
  8034                           
  8035                           ; BSR set to: 0
  8036  00187C  A181               	btfss	___flmul@prod& (0+255),0,b
  8037  00187E  EF43  F00C         	goto	u5521
  8038  001882  EF45  F00C         	goto	u5520
  8039  001886                     u5521:
  8040  001886  EF47  F00C         	goto	l1958
  8041  00188A                     u5520:
  8042  00188A  EF3A  F00C         	goto	l6252
  8043  00188E                     l1958:
  8044                           
  8045                           ; BSR set to: 0
  8046  00188E  517B               	movf	___flmul@aexp& (0+255),w,b
  8047  001890  B4D8               	btfsc	status,2,c
  8048  001892  EF4D  F00C         	goto	u5531
  8049  001896  EF4F  F00C         	goto	u5530
  8050  00189A                     u5531:
  8051  00189A  EF73  F00C         	goto	l6264
  8052  00189E                     u5530:
  8053  00189E                     
  8054                           ; BSR set to: 0
  8055  00189E  0E01               	movlw	1
  8056  0018A0  2781               	addwf	___flmul@prod& (0+255),f,b
  8057  0018A2  0E00               	movlw	0
  8058  0018A4  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8059  0018A6  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8060  0018A8  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8061  0018AA                     
  8062                           ; BSR set to: 0
  8063  0018AA  A184               	btfss	(___flmul@prod+3)& (0+255),0,b
  8064  0018AC  EF5A  F00C         	goto	u5541
  8065  0018B0  EF5C  F00C         	goto	u5540
  8066  0018B4                     u5541:
  8067  0018B4  EF73  F00C         	goto	l6264
  8068  0018B8                     u5540:
  8069  0018B8                     
  8070                           ; BSR set to: 0
  8071  0018B8  C081  F076         	movff	___flmul@prod,??___flmul
  8072  0018BC  C082  F077         	movff	___flmul@prod+1,??___flmul+1
  8073  0018C0  C083  F078         	movff	___flmul@prod+2,??___flmul+2
  8074  0018C4  C084  F079         	movff	___flmul@prod+3,??___flmul+3
  8075  0018C8  3579               	rlcf	(??___flmul+3)& (0+255),w,b
  8076  0018CA  3379               	rrcf	(??___flmul+3)& (0+255),f,b
  8077  0018CC  3378               	rrcf	(??___flmul+2)& (0+255),f,b
  8078  0018CE  3377               	rrcf	(??___flmul+1)& (0+255),f,b
  8079  0018D0  3376               	rrcf	??___flmul& (0+255),f,b
  8080  0018D2  C076  F081         	movff	??___flmul,___flmul@prod
  8081  0018D6  C077  F082         	movff	??___flmul+1,___flmul@prod+1
  8082  0018DA  C078  F083         	movff	??___flmul+2,___flmul@prod+2
  8083  0018DE  C079  F084         	movff	??___flmul+3,___flmul@prod+3
  8084  0018E2                     
  8085                           ; BSR set to: 0
  8086  0018E2  4B85               	infsnz	___flmul@temp& (0+255),f,b
  8087  0018E4  2B86               	incf	(___flmul@temp+1)& (0+255),f,b
  8088  0018E6                     l6264:
  8089                           
  8090                           ; BSR set to: 0
  8091  0018E6  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8092  0018E8  EF7E  F00C         	goto	u5551
  8093  0018EC  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  8094  0018EE  E108               	bnz	u5550
  8095  0018F0  2985               	incf	___flmul@temp& (0+255),w,b
  8096  0018F2  A0D8               	btfss	status,0,c
  8097  0018F4  EF7E  F00C         	goto	u5551
  8098  0018F8  EF80  F00C         	goto	u5550
  8099  0018FC                     u5551:
  8100  0018FC  EF8A  F00C         	goto	l6268
  8101  001900                     u5550:
  8102  001900                     
  8103                           ; BSR set to: 0
  8104  001900  0E00               	movlw	0
  8105  001902  6F81               	movwf	___flmul@prod& (0+255),b
  8106  001904  0E00               	movlw	0
  8107  001906  6F82               	movwf	(___flmul@prod+1)& (0+255),b
  8108  001908  0E80               	movlw	128
  8109  00190A  6F83               	movwf	(___flmul@prod+2)& (0+255),b
  8110  00190C  0E7F               	movlw	127
  8111  00190E  6F84               	movwf	(___flmul@prod+3)& (0+255),b
  8112  001910  EFB8  F00C         	goto	l6280
  8113  001914                     l6268:
  8114                           
  8115                           ; BSR set to: 0
  8116  001914  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8117  001916  EF97  F00C         	goto	u5560
  8118  00191A  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  8119  00191C  E106               	bnz	u5561
  8120  00191E  0585               	decf	___flmul@temp& (0+255),w,b
  8121  001920  B0D8               	btfsc	status,0,c
  8122  001922  EF95  F00C         	goto	u5561
  8123  001926  EF97  F00C         	goto	u5560
  8124  00192A                     u5561:
  8125  00192A  EFA3  F00C         	goto	l1966
  8126  00192E                     u5560:
  8127  00192E                     
  8128                           ; BSR set to: 0
  8129  00192E  0E00               	movlw	0
  8130  001930  6F81               	movwf	___flmul@prod& (0+255),b
  8131  001932  0E00               	movlw	0
  8132  001934  6F82               	movwf	(___flmul@prod+1)& (0+255),b
  8133  001936  0E00               	movlw	0
  8134  001938  6F83               	movwf	(___flmul@prod+2)& (0+255),b
  8135  00193A  0E00               	movlw	0
  8136  00193C  6F84               	movwf	(___flmul@prod+3)& (0+255),b
  8137  00193E  0E00               	movlw	0
  8138  001940  6F7A               	movwf	___flmul@sign& (0+255),b
  8139  001942  EFB8  F00C         	goto	l6280
  8140  001946                     l1966:
  8141                           
  8142                           ; BSR set to: 0
  8143  001946  C085  F080         	movff	___flmul@temp,___flmul@bexp
  8144  00194A                     
  8145                           ; BSR set to: 0
  8146  00194A  0EFF               	movlw	255
  8147  00194C  1781               	andwf	___flmul@prod& (0+255),f,b
  8148  00194E  0EFF               	movlw	255
  8149  001950  1782               	andwf	(___flmul@prod+1)& (0+255),f,b
  8150  001952  0E7F               	movlw	127
  8151  001954  1783               	andwf	(___flmul@prod+2)& (0+255),f,b
  8152  001956  0E00               	movlw	0
  8153  001958  1784               	andwf	(___flmul@prod+3)& (0+255),f,b
  8154  00195A                     
  8155                           ; BSR set to: 0
  8156  00195A  A180               	btfss	___flmul@bexp& (0+255),0,b
  8157  00195C  EFB2  F00C         	goto	u5571
  8158  001960  EFB4  F00C         	goto	u5570
  8159  001964                     u5571:
  8160  001964  EFB5  F00C         	goto	l6278
  8161  001968                     u5570:
  8162  001968                     
  8163                           ; BSR set to: 0
  8164  001968  8F83               	bsf	(___flmul@prod+2)& (0+255),7,b
  8165  00196A                     l6278:
  8166                           
  8167                           ; BSR set to: 0
  8168  00196A  90D8               	bcf	status,0,c
  8169  00196C  3180               	rrcf	___flmul@bexp& (0+255),w,b
  8170  00196E  6F84               	movwf	(___flmul@prod+3)& (0+255),b
  8171  001970                     l6280:
  8172                           
  8173                           ; BSR set to: 0
  8174  001970  517A               	movf	___flmul@sign& (0+255),w,b
  8175  001972  1384               	iorwf	(___flmul@prod+3)& (0+255),f,b
  8176  001974                     
  8177                           ; BSR set to: 0
  8178  001974  C081  F06E         	movff	___flmul@prod,?___flmul
  8179  001978  C082  F06F         	movff	___flmul@prod+1,?___flmul+1
  8180  00197C  C083  F070         	movff	___flmul@prod+2,?___flmul+2
  8181  001980  C084  F071         	movff	___flmul@prod+3,?___flmul+3
  8182  001984                     l1953:
  8183                           
  8184                           ; BSR set to: 0
  8185  001984  0012               	return		;funcret
  8186  001986                     __end_of___flmul:
  8187                           	callstack 0
  8188                           
  8189 ;; *************** function ___flge *****************
  8190 ;; Defined at:
  8191 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flge.c"
  8192 ;; Parameters:    Size  Location     Type
  8193 ;;  ff1             4   14[BANK0 ] unsigned char 
  8194 ;;  ff2             4   18[BANK0 ] unsigned char 
  8195 ;; Auto vars:     Size  Location     Type
  8196 ;;		None
  8197 ;; Return value:  Size  Location     Type
  8198 ;;		None               void
  8199 ;; Registers used:
  8200 ;;		wreg, status,2, status,0
  8201 ;; Tracked objects:
  8202 ;;		On entry : 0/0
  8203 ;;		On exit  : 0/0
  8204 ;;		Unchanged: 0/0
  8205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8206 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8208 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8209 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8210 ;;Total ram usage:       12 bytes
  8211 ;; Hardware stack levels used: 1
  8212 ;; Hardware stack levels required when called: 8
  8213 ;; This function calls:
  8214 ;;		Nothing
  8215 ;; This function is called by:
  8216 ;;		_loop
  8217 ;; This function uses a non-reentrant model
  8218 ;;
  8219                           
  8220                           	psect	text35
  8221  002D8A                     __ptext35:
  8222                           	callstack 0
  8223  002D8A                     ___flge:
  8224                           	callstack 21
  8225  002D8A  0E00               	movlw	0
  8226  002D8C  0100               	movlb	0	; () banked
  8227  002D8E  156E               	andwf	___flge@ff1& (0+255),w,b
  8228  002D90  6F76               	movwf	??___flge& (0+255),b
  8229  002D92  0E00               	movlw	0
  8230  002D94  156F               	andwf	(___flge@ff1+1)& (0+255),w,b
  8231  002D96  6F77               	movwf	(??___flge+1)& (0+255),b
  8232  002D98  0E80               	movlw	128
  8233  002D9A  1570               	andwf	(___flge@ff1+2)& (0+255),w,b
  8234  002D9C  6F78               	movwf	(??___flge+2)& (0+255),b
  8235  002D9E  0E7F               	movlw	127
  8236  002DA0  1571               	andwf	(___flge@ff1+3)& (0+255),w,b
  8237  002DA2  6F79               	movwf	(??___flge+3)& (0+255),b
  8238  002DA4  5176               	movf	??___flge& (0+255),w,b
  8239  002DA6  1177               	iorwf	(??___flge+1)& (0+255),w,b
  8240  002DA8  1178               	iorwf	(??___flge+2)& (0+255),w,b
  8241  002DAA  1179               	iorwf	(??___flge+3)& (0+255),w,b
  8242  002DAC  A4D8               	btfss	status,2,c
  8243  002DAE  EFDB  F016         	goto	u5911
  8244  002DB2  EFDD  F016         	goto	u5910
  8245  002DB6                     u5911:
  8246  002DB6  EFE5  F016         	goto	l6530
  8247  002DBA                     u5910:
  8248  002DBA                     
  8249                           ; BSR set to: 0
  8250  002DBA  0E00               	movlw	0
  8251  002DBC  6F6E               	movwf	___flge@ff1& (0+255),b
  8252  002DBE  0E00               	movlw	0
  8253  002DC0  6F6F               	movwf	(___flge@ff1+1)& (0+255),b
  8254  002DC2  0E00               	movlw	0
  8255  002DC4  6F70               	movwf	(___flge@ff1+2)& (0+255),b
  8256  002DC6  0E00               	movlw	0
  8257  002DC8  6F71               	movwf	(___flge@ff1+3)& (0+255),b
  8258  002DCA                     l6530:
  8259                           
  8260                           ; BSR set to: 0
  8261  002DCA  0E00               	movlw	0
  8262  002DCC  1572               	andwf	___flge@ff2& (0+255),w,b
  8263  002DCE  6F76               	movwf	??___flge& (0+255),b
  8264  002DD0  0E00               	movlw	0
  8265  002DD2  1573               	andwf	(___flge@ff2+1)& (0+255),w,b
  8266  002DD4  6F77               	movwf	(??___flge+1)& (0+255),b
  8267  002DD6  0E80               	movlw	128
  8268  002DD8  1574               	andwf	(___flge@ff2+2)& (0+255),w,b
  8269  002DDA  6F78               	movwf	(??___flge+2)& (0+255),b
  8270  002DDC  0E7F               	movlw	127
  8271  002DDE  1575               	andwf	(___flge@ff2+3)& (0+255),w,b
  8272  002DE0  6F79               	movwf	(??___flge+3)& (0+255),b
  8273  002DE2  5176               	movf	??___flge& (0+255),w,b
  8274  002DE4  1177               	iorwf	(??___flge+1)& (0+255),w,b
  8275  002DE6  1178               	iorwf	(??___flge+2)& (0+255),w,b
  8276  002DE8  1179               	iorwf	(??___flge+3)& (0+255),w,b
  8277  002DEA  A4D8               	btfss	status,2,c
  8278  002DEC  EFFA  F016         	goto	u5921
  8279  002DF0  EFFC  F016         	goto	u5920
  8280  002DF4                     u5921:
  8281  002DF4  EF04  F017         	goto	l6534
  8282  002DF8                     u5920:
  8283  002DF8                     
  8284                           ; BSR set to: 0
  8285  002DF8  0E00               	movlw	0
  8286  002DFA  6F72               	movwf	___flge@ff2& (0+255),b
  8287  002DFC  0E00               	movlw	0
  8288  002DFE  6F73               	movwf	(___flge@ff2+1)& (0+255),b
  8289  002E00  0E00               	movlw	0
  8290  002E02  6F74               	movwf	(___flge@ff2+2)& (0+255),b
  8291  002E04  0E00               	movlw	0
  8292  002E06  6F75               	movwf	(___flge@ff2+3)& (0+255),b
  8293  002E08                     l6534:
  8294                           
  8295                           ; BSR set to: 0
  8296  002E08  AF71               	btfss	(___flge@ff1+3)& (0+255),7,b
  8297  002E0A  EF09  F017         	goto	u5931
  8298  002E0E  EF0B  F017         	goto	u5930
  8299  002E12                     u5931:
  8300  002E12  EF14  F017         	goto	l6538
  8301  002E16                     u5930:
  8302  002E16                     
  8303                           ; BSR set to: 0
  8304  002E16  6D6E               	negf	___flge@ff1& (0+255),b
  8305  002E18  1F6F               	comf	(___flge@ff1+1)& (0+255),f,b
  8306  002E1A  B0D8               	btfsc	status,0,c
  8307  002E1C  2B6F               	incf	(___flge@ff1+1)& (0+255),f,b
  8308  002E1E  1F70               	comf	(___flge@ff1+2)& (0+255),f,b
  8309  002E20  B0D8               	btfsc	status,0,c
  8310  002E22  2B70               	incf	(___flge@ff1+2)& (0+255),f,b
  8311  002E24  0E80               	movlw	128
  8312  002E26  5771               	subfwb	(___flge@ff1+3)& (0+255),f,b
  8313  002E28                     l6538:
  8314                           
  8315                           ; BSR set to: 0
  8316  002E28  AF75               	btfss	(___flge@ff2+3)& (0+255),7,b
  8317  002E2A  EF19  F017         	goto	u5941
  8318  002E2E  EF1B  F017         	goto	u5940
  8319  002E32                     u5941:
  8320  002E32  EF24  F017         	goto	l1600
  8321  002E36                     u5940:
  8322  002E36                     
  8323                           ; BSR set to: 0
  8324  002E36  6D72               	negf	___flge@ff2& (0+255),b
  8325  002E38  1F73               	comf	(___flge@ff2+1)& (0+255),f,b
  8326  002E3A  B0D8               	btfsc	status,0,c
  8327  002E3C  2B73               	incf	(___flge@ff2+1)& (0+255),f,b
  8328  002E3E  1F74               	comf	(___flge@ff2+2)& (0+255),f,b
  8329  002E40  B0D8               	btfsc	status,0,c
  8330  002E42  2B74               	incf	(___flge@ff2+2)& (0+255),f,b
  8331  002E44  0E80               	movlw	128
  8332  002E46  5775               	subfwb	(___flge@ff2+3)& (0+255),f,b
  8333  002E48                     l1600:
  8334                           
  8335                           ; BSR set to: 0
  8336  002E48  0E00               	movlw	0
  8337  002E4A  1B6E               	xorwf	___flge@ff1& (0+255),f,b
  8338  002E4C  0E00               	movlw	0
  8339  002E4E  1B6F               	xorwf	(___flge@ff1+1)& (0+255),f,b
  8340  002E50  0E00               	movlw	0
  8341  002E52  1B70               	xorwf	(___flge@ff1+2)& (0+255),f,b
  8342  002E54  0E80               	movlw	128
  8343  002E56  1B71               	xorwf	(___flge@ff1+3)& (0+255),f,b
  8344  002E58  0E00               	movlw	0
  8345  002E5A  1B72               	xorwf	___flge@ff2& (0+255),f,b
  8346  002E5C  0E00               	movlw	0
  8347  002E5E  1B73               	xorwf	(___flge@ff2+1)& (0+255),f,b
  8348  002E60  0E00               	movlw	0
  8349  002E62  1B74               	xorwf	(___flge@ff2+2)& (0+255),f,b
  8350  002E64  0E80               	movlw	128
  8351  002E66  1B75               	xorwf	(___flge@ff2+3)& (0+255),f,b
  8352  002E68  5172               	movf	___flge@ff2& (0+255),w,b
  8353  002E6A  5D6E               	subwf	___flge@ff1& (0+255),w,b
  8354  002E6C  5173               	movf	(___flge@ff2+1)& (0+255),w,b
  8355  002E6E  596F               	subwfb	(___flge@ff1+1)& (0+255),w,b
  8356  002E70  5174               	movf	(___flge@ff2+2)& (0+255),w,b
  8357  002E72  5970               	subwfb	(___flge@ff1+2)& (0+255),w,b
  8358  002E74  5175               	movf	(___flge@ff2+3)& (0+255),w,b
  8359  002E76  5971               	subwfb	(___flge@ff1+3)& (0+255),w,b
  8360  002E78  B0D8               	btfsc	status,0,c
  8361  002E7A  EF41  F017         	goto	u5951
  8362  002E7E  EF43  F017         	goto	u5950
  8363  002E82                     u5951:
  8364  002E82  EF46  F017         	goto	l6544
  8365  002E86                     u5950:
  8366  002E86                     
  8367                           ; BSR set to: 0
  8368  002E86  90D8               	bcf	status,0,c
  8369  002E88  EF47  F017         	goto	l1605
  8370  002E8C                     l6544:
  8371                           
  8372                           ; BSR set to: 0
  8373  002E8C  80D8               	bsf	status,0,c
  8374  002E8E                     l1605:
  8375                           
  8376                           ; BSR set to: 0
  8377  002E8E  0012               	return		;funcret
  8378  002E90                     __end_of___flge:
  8379                           	callstack 0
  8380                           
  8381 ;; *************** function _SYSTEM_Initialize *****************
  8382 ;; Defined at:
  8383 ;;		line 50 in file "mcc_generated_files/mcc.c"
  8384 ;; Parameters:    Size  Location     Type
  8385 ;;		None
  8386 ;; Auto vars:     Size  Location     Type
  8387 ;;		None
  8388 ;; Return value:  Size  Location     Type
  8389 ;;                  1    wreg      void 
  8390 ;; Registers used:
  8391 ;;		wreg, status,2, status,0, cstack
  8392 ;; Tracked objects:
  8393 ;;		On entry : 0/0
  8394 ;;		On exit  : 0/0
  8395 ;;		Unchanged: 0/0
  8396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8401 ;;Total ram usage:        0 bytes
  8402 ;; Hardware stack levels used: 1
  8403 ;; Hardware stack levels required when called: 10
  8404 ;; This function calls:
  8405 ;;		_ADCC_Initialize
  8406 ;;		_CCP3_Initialize
  8407 ;;		_CCP4_Initialize
  8408 ;;		_CLC3_Initialize
  8409 ;;		_INTERRUPT_Initialize
  8410 ;;		_OSCILLATOR_Initialize
  8411 ;;		_PIN_MANAGER_Initialize
  8412 ;;		_PMD_Initialize
  8413 ;;		_PWM5_Initialize
  8414 ;;		_PWM6_Initialize
  8415 ;;		_PWM7_Initialize
  8416 ;;		_PWM8_Initialize
  8417 ;;		_SMT1_Initialize
  8418 ;;		_TMR2_Initialize
  8419 ;;		_TMR3_Initialize
  8420 ;;		_TMR4_Initialize
  8421 ;;		_TMR5_Initialize
  8422 ;;		_UART1_Initialize
  8423 ;; This function is called by:
  8424 ;;		_main
  8425 ;; This function uses a non-reentrant model
  8426 ;;
  8427                           
  8428                           	psect	text36
  8429  0038A0                     __ptext36:
  8430                           	callstack 0
  8431  0038A0                     _SYSTEM_Initialize:
  8432                           	callstack 20
  8433  0038A0                     
  8434                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  8435  0038A0  ECDE  F01B         	call	_INTERRUPT_Initialize	;wreg free
  8436                           
  8437                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  8438  0038A4  EC4B  F01F         	call	_PMD_Initialize	;wreg free
  8439                           
  8440                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  8441  0038A8  ECBA  F017         	call	_PIN_MANAGER_Initialize	;wreg free
  8442                           
  8443                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  8444  0038AC  ECCC  F01F         	call	_OSCILLATOR_Initialize	;wreg free
  8445  0038B0                     
  8446                           ;mcc_generated_files/mcc.c: 56:     CCP3_Initialize();
  8447  0038B0  EC89  F01E         	call	_CCP3_Initialize	;wreg free
  8448  0038B4                     
  8449                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
  8450  0038B4  EC0E  F01B         	call	_ADCC_Initialize	;wreg free
  8451                           
  8452                           ;mcc_generated_files/mcc.c: 58:     TMR4_Initialize();
  8453  0038B8  ECB7  F01E         	call	_TMR4_Initialize	;wreg free
  8454  0038BC                     
  8455                           ;mcc_generated_files/mcc.c: 59:     SMT1_Initialize();
  8456  0038BC  EC2A  F01E         	call	_SMT1_Initialize	;wreg free
  8457  0038C0                     
  8458                           ;mcc_generated_files/mcc.c: 60:     PWM8_Initialize();
  8459  0038C0  EC9C  F01F         	call	_PWM8_Initialize	;wreg free
  8460  0038C4                     
  8461                           ;mcc_generated_files/mcc.c: 61:     TMR2_Initialize();
  8462  0038C4  EC8E  F01F         	call	_TMR2_Initialize	;wreg free
  8463  0038C8                     
  8464                           ;mcc_generated_files/mcc.c: 62:     PWM6_Initialize();
  8465  0038C8  ECB4  F01F         	call	_PWM6_Initialize	;wreg free
  8466                           
  8467                           ;mcc_generated_files/mcc.c: 63:     CCP4_Initialize();
  8468  0038CC  EC72  F01E         	call	_CCP4_Initialize	;wreg free
  8469  0038D0                     
  8470                           ;mcc_generated_files/mcc.c: 64:     CLC3_Initialize();
  8471  0038D0  ECCD  F01E         	call	_CLC3_Initialize	;wreg free
  8472  0038D4                     
  8473                           ;mcc_generated_files/mcc.c: 65:     TMR3_Initialize();
  8474  0038D4  EC87  F01D         	call	_TMR3_Initialize	;wreg free
  8475                           
  8476                           ;mcc_generated_files/mcc.c: 66:     PWM5_Initialize();
  8477  0038D8  ECC0  F01F         	call	_PWM5_Initialize	;wreg free
  8478  0038DC                     
  8479                           ;mcc_generated_files/mcc.c: 67:     TMR5_Initialize();
  8480  0038DC  EC75  F01C         	call	_TMR5_Initialize	;wreg free
  8481  0038E0                     
  8482                           ;mcc_generated_files/mcc.c: 68:     PWM7_Initialize();
  8483  0038E0  ECA8  F01F         	call	_PWM7_Initialize	;wreg free
  8484                           
  8485                           ;mcc_generated_files/mcc.c: 69:     UART1_Initialize();
  8486  0038E4  EC46  F019         	call	_UART1_Initialize	;wreg free
  8487  0038E8  0012               	return		;funcret
  8488  0038EA                     __end_of_SYSTEM_Initialize:
  8489                           	callstack 0
  8490                           
  8491 ;; *************** function _UART1_Initialize *****************
  8492 ;; Defined at:
  8493 ;;		line 87 in file "mcc_generated_files/uart1.c"
  8494 ;; Parameters:    Size  Location     Type
  8495 ;;		None
  8496 ;; Auto vars:     Size  Location     Type
  8497 ;;		None
  8498 ;; Return value:  Size  Location     Type
  8499 ;;                  1    wreg      void 
  8500 ;; Registers used:
  8501 ;;		wreg, status,2, status,0, cstack
  8502 ;; Tracked objects:
  8503 ;;		On entry : 0/0
  8504 ;;		On exit  : 0/0
  8505 ;;		Unchanged: 0/0
  8506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8511 ;;Total ram usage:        0 bytes
  8512 ;; Hardware stack levels used: 1
  8513 ;; Hardware stack levels required when called: 9
  8514 ;; This function calls:
  8515 ;;		_UART1_SetErrorHandler
  8516 ;;		_UART1_SetFramingErrorHandler
  8517 ;;		_UART1_SetOverrunErrorHandler
  8518 ;;		_UART1_SetRxInterruptHandler
  8519 ;;		_UART1_SetTxInterruptHandler
  8520 ;; This function is called by:
  8521 ;;		_SYSTEM_Initialize
  8522 ;; This function uses a non-reentrant model
  8523 ;;
  8524                           
  8525                           	psect	text37
  8526  00328C                     __ptext37:
  8527                           	callstack 0
  8528  00328C                     _UART1_Initialize:
  8529                           	callstack 20
  8530  00328C                     
  8531                           ;mcc_generated_files/uart1.c: 90:     PIE3bits.U1RXIE = 0;
  8532  00328C  0139               	movlb	57	; () banked
  8533  00328E  9793               	bcf	147,3,b	;volatile
  8534  003290                     
  8535                           ; BSR set to: 57
  8536                           ;mcc_generated_files/uart1.c: 91:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
  8537  003290  0ECC               	movlw	low _UART1_Receive_ISR
  8538  003292  6E20               	movwf	UART1_SetRxInterruptHandler@InterruptHandler^0,c
  8539  003294  0E31               	movlw	high _UART1_Receive_ISR
  8540  003296  6E21               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)^0,c
  8541  003298  ECE9  F01F         	call	_UART1_SetRxInterruptHandler	;wreg free
  8542  00329C                     
  8543                           ;mcc_generated_files/uart1.c: 92:     PIE3bits.U1TXIE = 0;
  8544  00329C  0139               	movlb	57	; () banked
  8545  00329E  9993               	bcf	147,4,b	;volatile
  8546                           
  8547                           ;mcc_generated_files/uart1.c: 93:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
  8548  0032A0  0E10               	movlw	low _UART1_Transmit_ISR
  8549  0032A2  6E20               	movwf	UART1_SetTxInterruptHandler@InterruptHandler^0,c
  8550  0032A4  0E3A               	movlw	high _UART1_Transmit_ISR
  8551  0032A6  6E21               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)^0,c
  8552  0032A8  ECE4  F01F         	call	_UART1_SetTxInterruptHandler	;wreg free
  8553  0032AC                     
  8554                           ;mcc_generated_files/uart1.c: 98:     U1P1L = 0x00;
  8555  0032AC  0E00               	movlw	0
  8556  0032AE  013D               	movlb	61	; () banked
  8557  0032B0  6FEC               	movwf	236,b	;volatile
  8558  0032B2                     
  8559                           ; BSR set to: 61
  8560                           ;mcc_generated_files/uart1.c: 101:     U1P1H = 0x00;
  8561  0032B2  0E00               	movlw	0
  8562  0032B4  6FED               	movwf	237,b	;volatile
  8563  0032B6                     
  8564                           ; BSR set to: 61
  8565                           ;mcc_generated_files/uart1.c: 104:     U1P2L = 0x00;
  8566  0032B6  0E00               	movlw	0
  8567  0032B8  6FEE               	movwf	238,b	;volatile
  8568  0032BA                     
  8569                           ; BSR set to: 61
  8570                           ;mcc_generated_files/uart1.c: 107:     U1P2H = 0x00;
  8571  0032BA  0E00               	movlw	0
  8572  0032BC  6FEF               	movwf	239,b	;volatile
  8573  0032BE                     
  8574                           ; BSR set to: 61
  8575                           ;mcc_generated_files/uart1.c: 110:     U1P3L = 0x00;
  8576  0032BE  0E00               	movlw	0
  8577  0032C0  6FF0               	movwf	240,b	;volatile
  8578  0032C2                     
  8579                           ; BSR set to: 61
  8580                           ;mcc_generated_files/uart1.c: 113:     U1P3H = 0x00;
  8581  0032C2  0E00               	movlw	0
  8582  0032C4  6FF1               	movwf	241,b	;volatile
  8583  0032C6                     
  8584                           ; BSR set to: 61
  8585                           ;mcc_generated_files/uart1.c: 116:     U1CON0 = 0xB0;
  8586  0032C6  0EB0               	movlw	176
  8587  0032C8  6FF2               	movwf	242,b	;volatile
  8588  0032CA                     
  8589                           ; BSR set to: 61
  8590                           ;mcc_generated_files/uart1.c: 119:     U1CON1 = 0x80;
  8591  0032CA  0E80               	movlw	128
  8592  0032CC  6FF3               	movwf	243,b	;volatile
  8593  0032CE                     
  8594                           ; BSR set to: 61
  8595                           ;mcc_generated_files/uart1.c: 122:     U1CON2 = 0x00;
  8596  0032CE  0E00               	movlw	0
  8597  0032D0  6FF4               	movwf	244,b	;volatile
  8598  0032D2                     
  8599                           ; BSR set to: 61
  8600                           ;mcc_generated_files/uart1.c: 125:     U1BRGL = 0x8A;
  8601  0032D2  0E8A               	movlw	138
  8602  0032D4  6FF5               	movwf	245,b	;volatile
  8603  0032D6                     
  8604                           ; BSR set to: 61
  8605                           ;mcc_generated_files/uart1.c: 128:     U1BRGH = 0x00;
  8606  0032D6  0E00               	movlw	0
  8607  0032D8  6FF6               	movwf	246,b	;volatile
  8608  0032DA                     
  8609                           ; BSR set to: 61
  8610                           ;mcc_generated_files/uart1.c: 131:     U1FIFO = 0x00;
  8611  0032DA  0E00               	movlw	0
  8612  0032DC  6FF7               	movwf	247,b	;volatile
  8613  0032DE                     
  8614                           ; BSR set to: 61
  8615                           ;mcc_generated_files/uart1.c: 134:     U1UIR = 0x00;
  8616  0032DE  0E00               	movlw	0
  8617  0032E0  6FF8               	movwf	248,b	;volatile
  8618  0032E2                     
  8619                           ; BSR set to: 61
  8620                           ;mcc_generated_files/uart1.c: 137:     U1ERRIR = 0x00;
  8621  0032E2  0E00               	movlw	0
  8622  0032E4  6FF9               	movwf	249,b	;volatile
  8623  0032E6                     
  8624                           ; BSR set to: 61
  8625                           ;mcc_generated_files/uart1.c: 140:     U1ERRIE = 0x00;
  8626  0032E6  0E00               	movlw	0
  8627  0032E8  6FFA               	movwf	250,b	;volatile
  8628  0032EA                     
  8629                           ; BSR set to: 61
  8630                           ;mcc_generated_files/uart1.c: 143:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
  8631  0032EA  0E30               	movlw	low _UART1_DefaultFramingErrorHandler
  8632  0032EC  6E20               	movwf	UART1_SetFramingErrorHandler@interruptHandler^0,c
  8633  0032EE  0E40               	movlw	high _UART1_DefaultFramingErrorHandler
  8634  0032F0  6E21               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  8635  0032F2  ECF3  F01F         	call	_UART1_SetFramingErrorHandler	;wreg free
  8636  0032F6                     
  8637                           ;mcc_generated_files/uart1.c: 144:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
  8638  0032F6  0E2E               	movlw	low _UART1_DefaultOverrunErrorHandler
  8639  0032F8  6E20               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^0,c
  8640  0032FA  0E40               	movlw	high _UART1_DefaultOverrunErrorHandler
  8641  0032FC  6E21               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  8642  0032FE  ECEE  F01F         	call	_UART1_SetOverrunErrorHandler	;wreg free
  8643  003302                     
  8644                           ;mcc_generated_files/uart1.c: 145:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
  8645  003302  0E22               	movlw	low _UART1_DefaultErrorHandler
  8646  003304  6E20               	movwf	UART1_SetErrorHandler@interruptHandler^0,c
  8647  003306  0E40               	movlw	high _UART1_DefaultErrorHandler
  8648  003308  6E21               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^0,c
  8649  00330A  ECF8  F01F         	call	_UART1_SetErrorHandler	;wreg free
  8650                           
  8651                           ;mcc_generated_files/uart1.c: 147:     uart1RxLastError.status = 0;
  8652  00330E  0E00               	movlw	0
  8653  003310  6E2E               	movwf	_uart1RxLastError^0,c	;volatile
  8654                           
  8655                           ;mcc_generated_files/uart1.c: 150:     uart1TxHead = 0;
  8656  003312  0E00               	movlw	0
  8657  003314  6E33               	movwf	_uart1TxHead^0,c	;volatile
  8658                           
  8659                           ;mcc_generated_files/uart1.c: 151:     uart1TxTail = 0;
  8660  003316  0E00               	movlw	0
  8661  003318  6E32               	movwf	_uart1TxTail^0,c	;volatile
  8662                           
  8663                           ;mcc_generated_files/uart1.c: 152:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
  8664  00331A  0E08               	movlw	8
  8665  00331C  6E40               	movwf	_uart1TxBufferRemaining^0,c	;volatile
  8666                           
  8667                           ;mcc_generated_files/uart1.c: 153:     uart1RxHead = 0;
  8668  00331E  0E00               	movlw	0
  8669  003320  6E31               	movwf	_uart1RxHead^0,c	;volatile
  8670                           
  8671                           ;mcc_generated_files/uart1.c: 154:     uart1RxTail = 0;
  8672  003322  0E00               	movlw	0
  8673  003324  6E30               	movwf	_uart1RxTail^0,c	;volatile
  8674                           
  8675                           ;mcc_generated_files/uart1.c: 155:     uart1RxCount = 0;
  8676  003326  0E00               	movlw	0
  8677  003328  6E2F               	movwf	_uart1RxCount^0,c	;volatile
  8678  00332A                     
  8679                           ;mcc_generated_files/uart1.c: 158:     PIE3bits.U1RXIE = 1;
  8680  00332A  0139               	movlb	57	; () banked
  8681  00332C  8793               	bsf	147,3,b	;volatile
  8682  00332E                     
  8683                           ; BSR set to: 57
  8684  00332E  0012               	return		;funcret
  8685  003330                     __end_of_UART1_Initialize:
  8686                           	callstack 0
  8687                           
  8688 ;; *************** function _UART1_SetTxInterruptHandler *****************
  8689 ;; Defined at:
  8690 ;;		line 333 in file "mcc_generated_files/uart1.c"
  8691 ;; Parameters:    Size  Location     Type
  8692 ;;  InterruptHan    2   31[COMRAM] PTR FTN()void 
  8693 ;;		 -> UART1_Transmit_ISR(1), 
  8694 ;; Auto vars:     Size  Location     Type
  8695 ;;		None
  8696 ;; Return value:  Size  Location     Type
  8697 ;;                  1    wreg      void 
  8698 ;; Registers used:
  8699 ;;		wreg, status,2, status,0
  8700 ;; Tracked objects:
  8701 ;;		On entry : 0/0
  8702 ;;		On exit  : 0/0
  8703 ;;		Unchanged: 0/0
  8704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8705 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8708 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8709 ;;Total ram usage:        2 bytes
  8710 ;; Hardware stack levels used: 1
  8711 ;; Hardware stack levels required when called: 8
  8712 ;; This function calls:
  8713 ;;		Nothing
  8714 ;; This function is called by:
  8715 ;;		_UART1_Initialize
  8716 ;; This function uses a non-reentrant model
  8717 ;;
  8718                           
  8719                           	psect	text38
  8720  003FC8                     __ptext38:
  8721                           	callstack 0
  8722  003FC8                     _UART1_SetTxInterruptHandler:
  8723                           	callstack 20
  8724  003FC8                     
  8725                           ;mcc_generated_files/uart1.c: 334:     UART1_TxInterruptHandler = InterruptHandler;
  8726  003FC8  C020  F03C         	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
  8727  003FCC  C021  F03D         	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
  8728  003FD0  0012               	return		;funcret
  8729  003FD2                     __end_of_UART1_SetTxInterruptHandler:
  8730                           	callstack 0
  8731                           
  8732 ;; *************** function _UART1_SetRxInterruptHandler *****************
  8733 ;; Defined at:
  8734 ;;		line 329 in file "mcc_generated_files/uart1.c"
  8735 ;; Parameters:    Size  Location     Type
  8736 ;;  InterruptHan    2   31[COMRAM] PTR FTN()void 
  8737 ;;		 -> UART1_Receive_ISR(1), 
  8738 ;; Auto vars:     Size  Location     Type
  8739 ;;		None
  8740 ;; Return value:  Size  Location     Type
  8741 ;;                  1    wreg      void 
  8742 ;; Registers used:
  8743 ;;		wreg, status,2, status,0
  8744 ;; Tracked objects:
  8745 ;;		On entry : 0/0
  8746 ;;		On exit  : 0/0
  8747 ;;		Unchanged: 0/0
  8748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8749 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8752 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8753 ;;Total ram usage:        2 bytes
  8754 ;; Hardware stack levels used: 1
  8755 ;; Hardware stack levels required when called: 8
  8756 ;; This function calls:
  8757 ;;		Nothing
  8758 ;; This function is called by:
  8759 ;;		_UART1_Initialize
  8760 ;; This function uses a non-reentrant model
  8761 ;;
  8762                           
  8763                           	psect	text39
  8764  003FD2                     __ptext39:
  8765                           	callstack 0
  8766  003FD2                     _UART1_SetRxInterruptHandler:
  8767                           	callstack 20
  8768  003FD2                     
  8769                           ;mcc_generated_files/uart1.c: 330:     UART1_RxInterruptHandler = InterruptHandler;
  8770  003FD2  C020  F03E         	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
  8771  003FD6  C021  F03F         	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
  8772  003FDA  0012               	return		;funcret
  8773  003FDC                     __end_of_UART1_SetRxInterruptHandler:
  8774                           	callstack 0
  8775                           
  8776 ;; *************** function _UART1_SetOverrunErrorHandler *****************
  8777 ;; Defined at:
  8778 ;;		line 319 in file "mcc_generated_files/uart1.c"
  8779 ;; Parameters:    Size  Location     Type
  8780 ;;  interruptHan    2   31[COMRAM] PTR FTN()void 
  8781 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
  8782 ;; Auto vars:     Size  Location     Type
  8783 ;;		None
  8784 ;; Return value:  Size  Location     Type
  8785 ;;                  1    wreg      void 
  8786 ;; Registers used:
  8787 ;;		wreg, status,2, status,0
  8788 ;; Tracked objects:
  8789 ;;		On entry : 0/0
  8790 ;;		On exit  : 0/0
  8791 ;;		Unchanged: 0/0
  8792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8793 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8796 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8797 ;;Total ram usage:        2 bytes
  8798 ;; Hardware stack levels used: 1
  8799 ;; Hardware stack levels required when called: 8
  8800 ;; This function calls:
  8801 ;;		Nothing
  8802 ;; This function is called by:
  8803 ;;		_UART1_Initialize
  8804 ;; This function uses a non-reentrant model
  8805 ;;
  8806                           
  8807                           	psect	text40
  8808  003FDC                     __ptext40:
  8809                           	callstack 0
  8810  003FDC                     _UART1_SetOverrunErrorHandler:
  8811                           	callstack 20
  8812  003FDC                     
  8813                           ;mcc_generated_files/uart1.c: 320:     UART1_OverrunErrorHandler = interruptHandler;
  8814  003FDC  C020  F0FC         	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
  8815  003FE0  C021  F0FD         	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
  8816  003FE4  0012               	return		;funcret
  8817  003FE6                     __end_of_UART1_SetOverrunErrorHandler:
  8818                           	callstack 0
  8819                           
  8820 ;; *************** function _UART1_SetFramingErrorHandler *****************
  8821 ;; Defined at:
  8822 ;;		line 315 in file "mcc_generated_files/uart1.c"
  8823 ;; Parameters:    Size  Location     Type
  8824 ;;  interruptHan    2   31[COMRAM] PTR FTN()void 
  8825 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
  8826 ;; Auto vars:     Size  Location     Type
  8827 ;;		None
  8828 ;; Return value:  Size  Location     Type
  8829 ;;                  1    wreg      void 
  8830 ;; Registers used:
  8831 ;;		wreg, status,2, status,0
  8832 ;; Tracked objects:
  8833 ;;		On entry : 0/0
  8834 ;;		On exit  : 0/0
  8835 ;;		Unchanged: 0/0
  8836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8837 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8840 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8841 ;;Total ram usage:        2 bytes
  8842 ;; Hardware stack levels used: 1
  8843 ;; Hardware stack levels required when called: 8
  8844 ;; This function calls:
  8845 ;;		Nothing
  8846 ;; This function is called by:
  8847 ;;		_UART1_Initialize
  8848 ;; This function uses a non-reentrant model
  8849 ;;
  8850                           
  8851                           	psect	text41
  8852  003FE6                     __ptext41:
  8853                           	callstack 0
  8854  003FE6                     _UART1_SetFramingErrorHandler:
  8855                           	callstack 20
  8856  003FE6                     
  8857                           ;mcc_generated_files/uart1.c: 316:     UART1_FramingErrorHandler = interruptHandler;
  8858  003FE6  C020  F0FE         	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
  8859  003FEA  C021  F0FF         	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
  8860  003FEE  0012               	return		;funcret
  8861  003FF0                     __end_of_UART1_SetFramingErrorHandler:
  8862                           	callstack 0
  8863                           
  8864 ;; *************** function _UART1_SetErrorHandler *****************
  8865 ;; Defined at:
  8866 ;;		line 323 in file "mcc_generated_files/uart1.c"
  8867 ;; Parameters:    Size  Location     Type
  8868 ;;  interruptHan    2   31[COMRAM] PTR FTN()void 
  8869 ;;		 -> UART1_DefaultErrorHandler(1), 
  8870 ;; Auto vars:     Size  Location     Type
  8871 ;;		None
  8872 ;; Return value:  Size  Location     Type
  8873 ;;                  1    wreg      void 
  8874 ;; Registers used:
  8875 ;;		wreg, status,2, status,0
  8876 ;; Tracked objects:
  8877 ;;		On entry : 0/0
  8878 ;;		On exit  : 0/0
  8879 ;;		Unchanged: 0/0
  8880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8881 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8884 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8885 ;;Total ram usage:        2 bytes
  8886 ;; Hardware stack levels used: 1
  8887 ;; Hardware stack levels required when called: 8
  8888 ;; This function calls:
  8889 ;;		Nothing
  8890 ;; This function is called by:
  8891 ;;		_UART1_Initialize
  8892 ;; This function uses a non-reentrant model
  8893 ;;
  8894                           
  8895                           	psect	text42
  8896  003FF0                     __ptext42:
  8897                           	callstack 0
  8898  003FF0                     _UART1_SetErrorHandler:
  8899                           	callstack 20
  8900  003FF0                     
  8901                           ;mcc_generated_files/uart1.c: 324:     UART1_ErrorHandler = interruptHandler;
  8902  003FF0  C020  F0FA         	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
  8903  003FF4  C021  F0FB         	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
  8904  003FF8  0012               	return		;funcret
  8905  003FFA                     __end_of_UART1_SetErrorHandler:
  8906                           	callstack 0
  8907                           
  8908 ;; *************** function _TMR5_Initialize *****************
  8909 ;; Defined at:
  8910 ;;		line 67 in file "mcc_generated_files/tmr5.c"
  8911 ;; Parameters:    Size  Location     Type
  8912 ;;		None
  8913 ;; Auto vars:     Size  Location     Type
  8914 ;;		None
  8915 ;; Return value:  Size  Location     Type
  8916 ;;                  1    wreg      void 
  8917 ;; Registers used:
  8918 ;;		wreg, status,2, status,0, cstack
  8919 ;; Tracked objects:
  8920 ;;		On entry : 0/0
  8921 ;;		On exit  : 0/0
  8922 ;;		Unchanged: 0/0
  8923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8926 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8927 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8928 ;;Total ram usage:        2 bytes
  8929 ;; Hardware stack levels used: 1
  8930 ;; Hardware stack levels required when called: 9
  8931 ;; This function calls:
  8932 ;;		_TMR5_SetGateInterruptHandler
  8933 ;; This function is called by:
  8934 ;;		_SYSTEM_Initialize
  8935 ;; This function uses a non-reentrant model
  8936 ;;
  8937                           
  8938                           	psect	text43
  8939  0038EA                     __ptext43:
  8940                           	callstack 0
  8941  0038EA                     _TMR5_Initialize:
  8942                           	callstack 20
  8943  0038EA                     
  8944                           ;mcc_generated_files/tmr5.c: 72:     T5GCON = 0xC0;
  8945  0038EA  0EC0               	movlw	192
  8946  0038EC  6E9B               	movwf	155,c	;volatile
  8947                           
  8948                           ;mcc_generated_files/tmr5.c: 75:     T5GATE = 0x00;
  8949  0038EE  0E00               	movlw	0
  8950  0038F0  6E9C               	movwf	156,c	;volatile
  8951                           
  8952                           ;mcc_generated_files/tmr5.c: 78:     T5CLK = 0x05;
  8953  0038F2  0E05               	movlw	5
  8954  0038F4  6E9D               	movwf	157,c	;volatile
  8955                           
  8956                           ;mcc_generated_files/tmr5.c: 81:     TMR5H = 0x00;
  8957  0038F6  0E00               	movlw	0
  8958  0038F8  6E99               	movwf	153,c	;volatile
  8959                           
  8960                           ;mcc_generated_files/tmr5.c: 84:     TMR5L = 0x00;
  8961  0038FA  0E00               	movlw	0
  8962  0038FC  6E98               	movwf	152,c	;volatile
  8963  0038FE                     
  8964                           ;mcc_generated_files/tmr5.c: 87:     PIR8bits.TMR5IF = 0;
  8965  0038FE  0139               	movlb	57	; () banked
  8966  003900  9DA8               	bcf	168,6,b	;volatile
  8967  003902                     
  8968                           ; BSR set to: 57
  8969                           ;mcc_generated_files/tmr5.c: 90:     timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
  8970  003902  5098               	movf	152,w,c	;volatile
  8971  003904  006F FE64  F060    	movff	16281,??_TMR5_Initialize	;volatile
  8972  00390A  0100               	movlb	0	; () banked
  8973  00390C  6B61               	clrf	(??_TMR5_Initialize+1)& (0+255),b
  8974  00390E  C060  F061         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
  8975  003912  6B60               	clrf	??_TMR5_Initialize& (0+255),b
  8976  003914  1160               	iorwf	??_TMR5_Initialize& (0+255),w,b
  8977  003916  6E3A               	movwf	_timer5ReloadVal^0,c	;volatile
  8978  003918  5161               	movf	(??_TMR5_Initialize+1)& (0+255),w,b
  8979  00391A  6E3B               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
  8980  00391C                     
  8981                           ; BSR set to: 0
  8982                           ;mcc_generated_files/tmr5.c: 93:     PIR8bits.TMR5GIF = 0;
  8983  00391C  0139               	movlb	57	; () banked
  8984  00391E  9FA8               	bcf	168,7,b	;volatile
  8985  003920                     
  8986                           ; BSR set to: 57
  8987                           ;mcc_generated_files/tmr5.c: 96:     PIE8bits.TMR5GIE = 1;
  8988  003920  8F98               	bsf	152,7,b	;volatile
  8989  003922                     
  8990                           ; BSR set to: 57
  8991                           ;mcc_generated_files/tmr5.c: 99:     TMR5_SetGateInterruptHandler(TMR5_DefaultGateInterr
      +                          uptHandler);
  8992  003922  0EFE               	movlw	low _TMR5_DefaultGateInterruptHandler
  8993  003924  6E20               	movwf	TMR5_SetGateInterruptHandler@InterruptHandler^0,c
  8994  003926  0E3E               	movlw	high _TMR5_DefaultGateInterruptHandler
  8995  003928  6E21               	movwf	(TMR5_SetGateInterruptHandler@InterruptHandler+1)^0,c
  8996  00392A  ECFD  F01F         	call	_TMR5_SetGateInterruptHandler	;wreg free
  8997  00392E                     
  8998                           ;mcc_generated_files/tmr5.c: 102:     T5CON = 0x03;
  8999  00392E  0E03               	movlw	3
  9000  003930  6E9A               	movwf	154,c	;volatile
  9001  003932  0012               	return		;funcret
  9002  003934                     __end_of_TMR5_Initialize:
  9003                           	callstack 0
  9004                           
  9005 ;; *************** function _TMR5_SetGateInterruptHandler *****************
  9006 ;; Defined at:
  9007 ;;		line 186 in file "mcc_generated_files/tmr5.c"
  9008 ;; Parameters:    Size  Location     Type
  9009 ;;  InterruptHan    2   31[COMRAM] PTR FTN()void 
  9010 ;;		 -> TMR5_DefaultGateInterruptHandler(1), 
  9011 ;; Auto vars:     Size  Location     Type
  9012 ;;		None
  9013 ;; Return value:  Size  Location     Type
  9014 ;;                  1    wreg      void 
  9015 ;; Registers used:
  9016 ;;		wreg, status,2, status,0
  9017 ;; Tracked objects:
  9018 ;;		On entry : 0/0
  9019 ;;		On exit  : 0/0
  9020 ;;		Unchanged: 0/0
  9021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9022 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9025 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9026 ;;Total ram usage:        2 bytes
  9027 ;; Hardware stack levels used: 1
  9028 ;; Hardware stack levels required when called: 8
  9029 ;; This function calls:
  9030 ;;		Nothing
  9031 ;; This function is called by:
  9032 ;;		_TMR5_Initialize
  9033 ;; This function uses a non-reentrant model
  9034 ;;
  9035                           
  9036                           	psect	text44
  9037  003FFA                     __ptext44:
  9038                           	callstack 0
  9039  003FFA                     _TMR5_SetGateInterruptHandler:
  9040                           	callstack 20
  9041  003FFA                     
  9042                           ;mcc_generated_files/tmr5.c: 187:     TMR5_GateInterruptHandler = InterruptHandler;
  9043  003FFA  C020  F038         	movff	TMR5_SetGateInterruptHandler@InterruptHandler,_TMR5_GateInterruptHandler
  9044  003FFE  C021  F039         	movff	TMR5_SetGateInterruptHandler@InterruptHandler+1,_TMR5_GateInterruptHandler+1
  9045  004002  0012               	return		;funcret
  9046  004004                     __end_of_TMR5_SetGateInterruptHandler:
  9047                           	callstack 0
  9048                           
  9049 ;; *************** function _TMR4_Initialize *****************
  9050 ;; Defined at:
  9051 ;;		line 65 in file "mcc_generated_files/tmr4.c"
  9052 ;; Parameters:    Size  Location     Type
  9053 ;;		None
  9054 ;; Auto vars:     Size  Location     Type
  9055 ;;		None
  9056 ;; Return value:  Size  Location     Type
  9057 ;;                  1    wreg      void 
  9058 ;; Registers used:
  9059 ;;		wreg, status,2, status,0, cstack
  9060 ;; Tracked objects:
  9061 ;;		On entry : 0/0
  9062 ;;		On exit  : 0/0
  9063 ;;		Unchanged: 0/0
  9064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9069 ;;Total ram usage:        0 bytes
  9070 ;; Hardware stack levels used: 1
  9071 ;; Hardware stack levels required when called: 9
  9072 ;; This function calls:
  9073 ;;		_TMR4_SetInterruptHandler
  9074 ;; This function is called by:
  9075 ;;		_SYSTEM_Initialize
  9076 ;; This function uses a non-reentrant model
  9077 ;;
  9078                           
  9079                           	psect	text45
  9080  003D6E                     __ptext45:
  9081                           	callstack 0
  9082  003D6E                     _TMR4_Initialize:
  9083                           	callstack 20
  9084  003D6E                     
  9085                           ;mcc_generated_files/tmr4.c: 70:     T4CLKCON = 0x01;
  9086  003D6E  0E01               	movlw	1
  9087  003D70  6EA2               	movwf	162,c	;volatile
  9088                           
  9089                           ;mcc_generated_files/tmr4.c: 73:     T4HLT = 0x00;
  9090  003D72  0E00               	movlw	0
  9091  003D74  6EA1               	movwf	161,c	;volatile
  9092                           
  9093                           ;mcc_generated_files/tmr4.c: 76:     T4RST = 0x00;
  9094  003D76  0E00               	movlw	0
  9095  003D78  6EA3               	movwf	163,c	;volatile
  9096                           
  9097                           ;mcc_generated_files/tmr4.c: 79:     T4PR = 0xF9;
  9098  003D7A  0EF9               	movlw	249
  9099  003D7C  6E9F               	movwf	159,c	;volatile
  9100                           
  9101                           ;mcc_generated_files/tmr4.c: 82:     T4TMR = 0x00;
  9102  003D7E  0E00               	movlw	0
  9103  003D80  6E9E               	movwf	158,c	;volatile
  9104  003D82                     
  9105                           ;mcc_generated_files/tmr4.c: 85:     PIR7bits.TMR4IF = 0;
  9106  003D82  0139               	movlb	57	; () banked
  9107  003D84  91A7               	bcf	167,0,b	;volatile
  9108  003D86                     
  9109                           ; BSR set to: 57
  9110                           ;mcc_generated_files/tmr4.c: 88:     PIE7bits.TMR4IE = 1;
  9111  003D86  8197               	bsf	151,0,b	;volatile
  9112  003D88                     
  9113                           ; BSR set to: 57
  9114                           ;mcc_generated_files/tmr4.c: 91:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
  9115  003D88  0E32               	movlw	low _TMR4_DefaultInterruptHandler
  9116  003D8A  6E20               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
  9117  003D8C  0E40               	movlw	high _TMR4_DefaultInterruptHandler
  9118  003D8E  6E21               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
  9119  003D90  EC02  F020         	call	_TMR4_SetInterruptHandler	;wreg free
  9120  003D94                     
  9121                           ;mcc_generated_files/tmr4.c: 94:     T4CON = 0xE0;
  9122  003D94  0EE0               	movlw	224
  9123  003D96  6EA0               	movwf	160,c	;volatile
  9124  003D98  0012               	return		;funcret
  9125  003D9A                     __end_of_TMR4_Initialize:
  9126                           	callstack 0
  9127                           
  9128 ;; *************** function _TMR4_SetInterruptHandler *****************
  9129 ;; Defined at:
  9130 ;;		line 194 in file "mcc_generated_files/tmr4.c"
  9131 ;; Parameters:    Size  Location     Type
  9132 ;;  InterruptHan    2   31[COMRAM] PTR FTN()void 
  9133 ;;		 -> TMR4_10msISR(1), TMR4_DefaultInterruptHandler(1), 
  9134 ;; Auto vars:     Size  Location     Type
  9135 ;;		None
  9136 ;; Return value:  Size  Location     Type
  9137 ;;                  1    wreg      void 
  9138 ;; Registers used:
  9139 ;;		wreg, status,2, status,0
  9140 ;; Tracked objects:
  9141 ;;		On entry : 0/0
  9142 ;;		On exit  : 0/0
  9143 ;;		Unchanged: 0/0
  9144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9145 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9148 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9149 ;;Total ram usage:        2 bytes
  9150 ;; Hardware stack levels used: 1
  9151 ;; Hardware stack levels required when called: 8
  9152 ;; This function calls:
  9153 ;;		Nothing
  9154 ;; This function is called by:
  9155 ;;		_TMR4_Initialize
  9156 ;;		_main
  9157 ;; This function uses a non-reentrant model
  9158 ;;
  9159                           
  9160                           	psect	text46
  9161  004004                     __ptext46:
  9162                           	callstack 0
  9163  004004                     _TMR4_SetInterruptHandler:
  9164                           	callstack 22
  9165  004004                     
  9166                           ;mcc_generated_files/tmr4.c: 195:     TMR4_InterruptHandler = InterruptHandler;
  9167  004004  C020  F0F2         	movff	TMR4_SetInterruptHandler@InterruptHandler,_TMR4_InterruptHandler
  9168  004008  C021  F0F3         	movff	TMR4_SetInterruptHandler@InterruptHandler+1,_TMR4_InterruptHandler+1
  9169  00400C  0012               	return		;funcret
  9170  00400E                     __end_of_TMR4_SetInterruptHandler:
  9171                           	callstack 0
  9172                           
  9173 ;; *************** function _TMR3_Initialize *****************
  9174 ;; Defined at:
  9175 ;;		line 63 in file "mcc_generated_files/tmr3.c"
  9176 ;; Parameters:    Size  Location     Type
  9177 ;;		None
  9178 ;; Auto vars:     Size  Location     Type
  9179 ;;		None
  9180 ;; Return value:  Size  Location     Type
  9181 ;;                  1    wreg      void 
  9182 ;; Registers used:
  9183 ;;		wreg, status,2, status,0
  9184 ;; Tracked objects:
  9185 ;;		On entry : 0/0
  9186 ;;		On exit  : 0/0
  9187 ;;		Unchanged: 0/0
  9188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9191 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9192 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9193 ;;Total ram usage:        2 bytes
  9194 ;; Hardware stack levels used: 1
  9195 ;; Hardware stack levels required when called: 8
  9196 ;; This function calls:
  9197 ;;		Nothing
  9198 ;; This function is called by:
  9199 ;;		_SYSTEM_Initialize
  9200 ;; This function uses a non-reentrant model
  9201 ;;
  9202                           
  9203                           	psect	text47
  9204  003B0E                     __ptext47:
  9205                           	callstack 0
  9206  003B0E                     _TMR3_Initialize:
  9207                           	callstack 21
  9208  003B0E                     
  9209                           ;mcc_generated_files/tmr3.c: 68:     T3GCON = 0x00;
  9210  003B0E  0E00               	movlw	0
  9211  003B10  6EA7               	movwf	167,c	;volatile
  9212                           
  9213                           ;mcc_generated_files/tmr3.c: 71:     T3GATE = 0x00;
  9214  003B12  0E00               	movlw	0
  9215  003B14  6EA8               	movwf	168,c	;volatile
  9216                           
  9217                           ;mcc_generated_files/tmr3.c: 74:     T3CLK = 0x05;
  9218  003B16  0E05               	movlw	5
  9219  003B18  6EA9               	movwf	169,c	;volatile
  9220                           
  9221                           ;mcc_generated_files/tmr3.c: 77:     TMR3H = 0x00;
  9222  003B1A  0E00               	movlw	0
  9223  003B1C  6EA5               	movwf	165,c	;volatile
  9224                           
  9225                           ;mcc_generated_files/tmr3.c: 80:     TMR3L = 0x00;
  9226  003B1E  0E00               	movlw	0
  9227  003B20  6EA4               	movwf	164,c	;volatile
  9228  003B22                     
  9229                           ;mcc_generated_files/tmr3.c: 83:     PIR6bits.TMR3IF = 0;
  9230  003B22  0139               	movlb	57	; () banked
  9231  003B24  9DA6               	bcf	166,6,b	;volatile
  9232  003B26                     
  9233                           ; BSR set to: 57
  9234                           ;mcc_generated_files/tmr3.c: 86:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
  9235  003B26  50A4               	movf	164,w,c	;volatile
  9236  003B28  006F FE94  F020    	movff	16293,??_TMR3_Initialize	;volatile
  9237  003B2E  6A21               	clrf	(??_TMR3_Initialize+1)^0,c
  9238  003B30  C020  F021         	movff	??_TMR3_Initialize,??_TMR3_Initialize+1
  9239  003B34  6A20               	clrf	??_TMR3_Initialize^0,c
  9240  003B36  1020               	iorwf	??_TMR3_Initialize^0,w,c
  9241  003B38  0100               	movlb	0	; () banked
  9242  003B3A  6FF4               	movwf	_timer3ReloadVal& (0+255),b	;volatile
  9243  003B3C  5021               	movf	(??_TMR3_Initialize+1)^0,w,c
  9244  003B3E  6FF5               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
  9245  003B40                     
  9246                           ; BSR set to: 0
  9247                           ;mcc_generated_files/tmr3.c: 89:     T3CON = 0x01;
  9248  003B40  0E01               	movlw	1
  9249  003B42  6EA6               	movwf	166,c	;volatile
  9250  003B44                     
  9251                           ; BSR set to: 0
  9252  003B44  0012               	return		;funcret
  9253  003B46                     __end_of_TMR3_Initialize:
  9254                           	callstack 0
  9255                           
  9256 ;; *************** function _TMR2_Initialize *****************
  9257 ;; Defined at:
  9258 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  9259 ;; Parameters:    Size  Location     Type
  9260 ;;		None
  9261 ;; Auto vars:     Size  Location     Type
  9262 ;;		None
  9263 ;; Return value:  Size  Location     Type
  9264 ;;                  1    wreg      void 
  9265 ;; Registers used:
  9266 ;;		wreg, status,2
  9267 ;; Tracked objects:
  9268 ;;		On entry : 0/0
  9269 ;;		On exit  : 0/0
  9270 ;;		Unchanged: 0/0
  9271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9276 ;;Total ram usage:        0 bytes
  9277 ;; Hardware stack levels used: 1
  9278 ;; Hardware stack levels required when called: 8
  9279 ;; This function calls:
  9280 ;;		Nothing
  9281 ;; This function is called by:
  9282 ;;		_SYSTEM_Initialize
  9283 ;; This function uses a non-reentrant model
  9284 ;;
  9285                           
  9286                           	psect	text48
  9287  003F1C                     __ptext48:
  9288                           	callstack 0
  9289  003F1C                     _TMR2_Initialize:
  9290                           	callstack 21
  9291  003F1C                     
  9292                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x05;
  9293  003F1C  0E05               	movlw	5
  9294  003F1E  6EAE               	movwf	174,c	;volatile
  9295                           
  9296                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
  9297  003F20  0E00               	movlw	0
  9298  003F22  6EAD               	movwf	173,c	;volatile
  9299                           
  9300                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
  9301  003F24  0E00               	movlw	0
  9302  003F26  6EAF               	movwf	175,c	;volatile
  9303  003F28                     
  9304                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
  9305  003F28  68AB               	setf	171,c	;volatile
  9306                           
  9307                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
  9308  003F2A  0E00               	movlw	0
  9309  003F2C  6EAA               	movwf	170,c	;volatile
  9310  003F2E                     
  9311                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
  9312  003F2E  0139               	movlb	57	; () banked
  9313  003F30  95A4               	bcf	164,2,b	;volatile
  9314                           
  9315                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xB0;
  9316  003F32  0EB0               	movlw	176
  9317  003F34  6EAC               	movwf	172,c	;volatile
  9318  003F36                     
  9319                           ; BSR set to: 57
  9320  003F36  0012               	return		;funcret
  9321  003F38                     __end_of_TMR2_Initialize:
  9322                           	callstack 0
  9323                           
  9324 ;; *************** function _SMT1_Initialize *****************
  9325 ;; Defined at:
  9326 ;;		line 60 in file "mcc_generated_files/smt1.c"
  9327 ;; Parameters:    Size  Location     Type
  9328 ;;		None
  9329 ;; Auto vars:     Size  Location     Type
  9330 ;;		None
  9331 ;; Return value:  Size  Location     Type
  9332 ;;                  1    wreg      void 
  9333 ;; Registers used:
  9334 ;;		wreg, status,2
  9335 ;; Tracked objects:
  9336 ;;		On entry : 0/0
  9337 ;;		On exit  : 0/0
  9338 ;;		Unchanged: 0/0
  9339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9344 ;;Total ram usage:        0 bytes
  9345 ;; Hardware stack levels used: 1
  9346 ;; Hardware stack levels required when called: 8
  9347 ;; This function calls:
  9348 ;;		Nothing
  9349 ;; This function is called by:
  9350 ;;		_SYSTEM_Initialize
  9351 ;; This function uses a non-reentrant model
  9352 ;;
  9353                           
  9354                           	psect	text49
  9355  003C54                     __ptext49:
  9356                           	callstack 0
  9357  003C54                     _SMT1_Initialize:
  9358                           	callstack 21
  9359  003C54                     
  9360                           ;mcc_generated_files/smt1.c: 63:     SMT1CON0 = 0x80;
  9361  003C54  0E80               	movlw	128
  9362  003C56  013F               	movlb	63	; () banked
  9363  003C58  6F1E               	movwf	30,b	;volatile
  9364                           
  9365                           ;mcc_generated_files/smt1.c: 66:     SMT1CON1 = 0x42;
  9366  003C5A  0E42               	movlw	66
  9367  003C5C  6F1F               	movwf	31,b	;volatile
  9368                           
  9369                           ;mcc_generated_files/smt1.c: 69:     SMT1STAT = 0x00;
  9370  003C5E  0E00               	movlw	0
  9371  003C60  6F20               	movwf	32,b	;volatile
  9372                           
  9373                           ;mcc_generated_files/smt1.c: 72:     SMT1CLK = 0x04;
  9374  003C62  0E04               	movlw	4
  9375  003C64  6F21               	movwf	33,b	;volatile
  9376                           
  9377                           ;mcc_generated_files/smt1.c: 75:     SMT1WIN = 0x00;
  9378  003C66  0E00               	movlw	0
  9379  003C68  6F23               	movwf	35,b	;volatile
  9380                           
  9381                           ;mcc_generated_files/smt1.c: 78:     SMT1SIG = 0x00;
  9382  003C6A  0E00               	movlw	0
  9383  003C6C  6F22               	movwf	34,b	;volatile
  9384                           
  9385                           ;mcc_generated_files/smt1.c: 81:     SMT1PRU = 0x01;
  9386  003C6E  0E01               	movlw	1
  9387  003C70  6F1D               	movwf	29,b	;volatile
  9388  003C72                     
  9389                           ; BSR set to: 63
  9390                           ;mcc_generated_files/smt1.c: 84:     SMT1PRH = 0xFF;
  9391  003C72  691C               	setf	28,b	;volatile
  9392  003C74                     
  9393                           ; BSR set to: 63
  9394                           ;mcc_generated_files/smt1.c: 87:     SMT1PRL = 0xFF;
  9395  003C74  691B               	setf	27,b	;volatile
  9396  003C76                     
  9397                           ; BSR set to: 63
  9398                           ;mcc_generated_files/smt1.c: 90:     PIE1bits.SMT1IE = 1;
  9399  003C76  0139               	movlb	57	; () banked
  9400  003C78  8B91               	bsf	145,5,b	;volatile
  9401  003C7A                     
  9402                           ; BSR set to: 57
  9403                           ;mcc_generated_files/smt1.c: 93:     PIE1bits.SMT1PWAIE = 1;
  9404  003C7A  8F91               	bsf	145,7,b	;volatile
  9405  003C7C                     
  9406                           ; BSR set to: 57
  9407                           ;mcc_generated_files/smt1.c: 96:     PIE1bits.SMT1PRAIE = 1;
  9408  003C7C  8D91               	bsf	145,6,b	;volatile
  9409  003C7E                     
  9410                           ; BSR set to: 57
  9411                           ;mcc_generated_files/smt1.c: 99:     SMT1CON1bits.SMT1GO = 1;
  9412  003C7E  013F               	movlb	63	; () banked
  9413  003C80  8F1F               	bsf	31,7,b	;volatile
  9414  003C82                     
  9415                           ; BSR set to: 63
  9416  003C82  0012               	return		;funcret
  9417  003C84                     __end_of_SMT1_Initialize:
  9418                           	callstack 0
  9419                           
  9420 ;; *************** function _PWM8_Initialize *****************
  9421 ;; Defined at:
  9422 ;;		line 58 in file "mcc_generated_files/pwm8.c"
  9423 ;; Parameters:    Size  Location     Type
  9424 ;;		None
  9425 ;; Auto vars:     Size  Location     Type
  9426 ;;		None
  9427 ;; Return value:  Size  Location     Type
  9428 ;;                  1    wreg      void 
  9429 ;; Registers used:
  9430 ;;		wreg, status,2
  9431 ;; Tracked objects:
  9432 ;;		On entry : 0/0
  9433 ;;		On exit  : 0/0
  9434 ;;		Unchanged: 0/0
  9435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9440 ;;Total ram usage:        0 bytes
  9441 ;; Hardware stack levels used: 1
  9442 ;; Hardware stack levels required when called: 8
  9443 ;; This function calls:
  9444 ;;		Nothing
  9445 ;; This function is called by:
  9446 ;;		_SYSTEM_Initialize
  9447 ;; This function uses a non-reentrant model
  9448 ;;
  9449                           
  9450                           	psect	text50
  9451  003F38                     __ptext50:
  9452                           	callstack 0
  9453  003F38                     _PWM8_Initialize:
  9454                           	callstack 21
  9455  003F38                     
  9456                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
  9457  003F38  0E80               	movlw	128
  9458  003F3A  6E62               	movwf	98,c	;volatile
  9459                           
  9460                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
  9461  003F3C  0E00               	movlw	0
  9462  003F3E  6E61               	movwf	97,c	;volatile
  9463                           
  9464                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x00;
  9465  003F40  0E00               	movlw	0
  9466  003F42  6E60               	movwf	96,c	;volatile
  9467                           
  9468                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 2;
  9469  003F44  013F               	movlb	63	; () banked
  9470  003F46  515F               	movf	95,w,b	;volatile
  9471  003F48  0B3F               	andlw	-193
  9472  003F4A  0980               	iorlw	128
  9473  003F4C  6F5F               	movwf	95,b	;volatile
  9474  003F4E                     
  9475                           ; BSR set to: 63
  9476  003F4E  0012               	return		;funcret
  9477  003F50                     __end_of_PWM8_Initialize:
  9478                           	callstack 0
  9479                           
  9480 ;; *************** function _PWM7_Initialize *****************
  9481 ;; Defined at:
  9482 ;;		line 58 in file "mcc_generated_files/pwm7.c"
  9483 ;; Parameters:    Size  Location     Type
  9484 ;;		None
  9485 ;; Auto vars:     Size  Location     Type
  9486 ;;		None
  9487 ;; Return value:  Size  Location     Type
  9488 ;;                  1    wreg      void 
  9489 ;; Registers used:
  9490 ;;		wreg, status,2
  9491 ;; Tracked objects:
  9492 ;;		On entry : 0/0
  9493 ;;		On exit  : 0/0
  9494 ;;		Unchanged: 0/0
  9495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9500 ;;Total ram usage:        0 bytes
  9501 ;; Hardware stack levels used: 1
  9502 ;; Hardware stack levels required when called: 8
  9503 ;; This function calls:
  9504 ;;		Nothing
  9505 ;; This function is called by:
  9506 ;;		_SYSTEM_Initialize
  9507 ;; This function uses a non-reentrant model
  9508 ;;
  9509                           
  9510                           	psect	text51
  9511  003F50                     __ptext51:
  9512                           	callstack 0
  9513  003F50                     _PWM7_Initialize:
  9514                           	callstack 21
  9515  003F50                     
  9516                           ;mcc_generated_files/pwm7.c: 62:     PWM7CON = 0x80;
  9517  003F50  0E80               	movlw	128
  9518  003F52  6E66               	movwf	102,c	;volatile
  9519                           
  9520                           ;mcc_generated_files/pwm7.c: 65:     PWM7DCH = 0x00;
  9521  003F54  0E00               	movlw	0
  9522  003F56  6E65               	movwf	101,c	;volatile
  9523                           
  9524                           ;mcc_generated_files/pwm7.c: 68:     PWM7DCL = 0x00;
  9525  003F58  0E00               	movlw	0
  9526  003F5A  6E64               	movwf	100,c	;volatile
  9527                           
  9528                           ;mcc_generated_files/pwm7.c: 71:     CCPTMRS1bits.P7TSEL = 2;
  9529  003F5C  013F               	movlb	63	; () banked
  9530  003F5E  515F               	movf	95,w,b	;volatile
  9531  003F60  0BCF               	andlw	-49
  9532  003F62  0920               	iorlw	32
  9533  003F64  6F5F               	movwf	95,b	;volatile
  9534  003F66                     
  9535                           ; BSR set to: 63
  9536  003F66  0012               	return		;funcret
  9537  003F68                     __end_of_PWM7_Initialize:
  9538                           	callstack 0
  9539                           
  9540 ;; *************** function _PWM6_Initialize *****************
  9541 ;; Defined at:
  9542 ;;		line 58 in file "mcc_generated_files/pwm6.c"
  9543 ;; Parameters:    Size  Location     Type
  9544 ;;		None
  9545 ;; Auto vars:     Size  Location     Type
  9546 ;;		None
  9547 ;; Return value:  Size  Location     Type
  9548 ;;                  1    wreg      void 
  9549 ;; Registers used:
  9550 ;;		wreg, status,2
  9551 ;; Tracked objects:
  9552 ;;		On entry : 0/0
  9553 ;;		On exit  : 0/0
  9554 ;;		Unchanged: 0/0
  9555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9560 ;;Total ram usage:        0 bytes
  9561 ;; Hardware stack levels used: 1
  9562 ;; Hardware stack levels required when called: 8
  9563 ;; This function calls:
  9564 ;;		Nothing
  9565 ;; This function is called by:
  9566 ;;		_SYSTEM_Initialize
  9567 ;; This function uses a non-reentrant model
  9568 ;;
  9569                           
  9570                           	psect	text52
  9571  003F68                     __ptext52:
  9572                           	callstack 0
  9573  003F68                     _PWM6_Initialize:
  9574                           	callstack 21
  9575  003F68                     
  9576                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
  9577  003F68  0E80               	movlw	128
  9578  003F6A  6E6A               	movwf	106,c	;volatile
  9579                           
  9580                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x59;
  9581  003F6C  0E59               	movlw	89
  9582  003F6E  6E69               	movwf	105,c	;volatile
  9583                           
  9584                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0x40;
  9585  003F70  0E40               	movlw	64
  9586  003F72  6E68               	movwf	104,c	;volatile
  9587                           
  9588                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
  9589  003F74  013F               	movlb	63	; () banked
  9590  003F76  515F               	movf	95,w,b	;volatile
  9591  003F78  0BF3               	andlw	-13
  9592  003F7A  0904               	iorlw	4
  9593  003F7C  6F5F               	movwf	95,b	;volatile
  9594  003F7E                     
  9595                           ; BSR set to: 63
  9596  003F7E  0012               	return		;funcret
  9597  003F80                     __end_of_PWM6_Initialize:
  9598                           	callstack 0
  9599                           
  9600 ;; *************** function _PWM5_Initialize *****************
  9601 ;; Defined at:
  9602 ;;		line 58 in file "mcc_generated_files/pwm5.c"
  9603 ;; Parameters:    Size  Location     Type
  9604 ;;		None
  9605 ;; Auto vars:     Size  Location     Type
  9606 ;;		None
  9607 ;; Return value:  Size  Location     Type
  9608 ;;                  1    wreg      void 
  9609 ;; Registers used:
  9610 ;;		wreg, status,2
  9611 ;; Tracked objects:
  9612 ;;		On entry : 0/0
  9613 ;;		On exit  : 0/0
  9614 ;;		Unchanged: 0/0
  9615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9620 ;;Total ram usage:        0 bytes
  9621 ;; Hardware stack levels used: 1
  9622 ;; Hardware stack levels required when called: 8
  9623 ;; This function calls:
  9624 ;;		Nothing
  9625 ;; This function is called by:
  9626 ;;		_SYSTEM_Initialize
  9627 ;; This function uses a non-reentrant model
  9628 ;;
  9629                           
  9630                           	psect	text53
  9631  003F80                     __ptext53:
  9632                           	callstack 0
  9633  003F80                     _PWM5_Initialize:
  9634                           	callstack 21
  9635  003F80                     
  9636                           ;mcc_generated_files/pwm5.c: 62:     PWM5CON = 0x80;
  9637  003F80  0E80               	movlw	128
  9638  003F82  6E6E               	movwf	110,c	;volatile
  9639                           
  9640                           ;mcc_generated_files/pwm5.c: 65:     PWM5DCH = 0x59;
  9641  003F84  0E59               	movlw	89
  9642  003F86  6E6D               	movwf	109,c	;volatile
  9643                           
  9644                           ;mcc_generated_files/pwm5.c: 68:     PWM5DCL = 0x40;
  9645  003F88  0E40               	movlw	64
  9646  003F8A  6E6C               	movwf	108,c	;volatile
  9647                           
  9648                           ;mcc_generated_files/pwm5.c: 71:     CCPTMRS1bits.P5TSEL = 1;
  9649  003F8C  013F               	movlb	63	; () banked
  9650  003F8E  515F               	movf	95,w,b	;volatile
  9651  003F90  0BFC               	andlw	-4
  9652  003F92  0901               	iorlw	1
  9653  003F94  6F5F               	movwf	95,b	;volatile
  9654  003F96                     
  9655                           ; BSR set to: 63
  9656  003F96  0012               	return		;funcret
  9657  003F98                     __end_of_PWM5_Initialize:
  9658                           	callstack 0
  9659                           
  9660 ;; *************** function _PMD_Initialize *****************
  9661 ;; Defined at:
  9662 ;;		line 86 in file "mcc_generated_files/mcc.c"
  9663 ;; Parameters:    Size  Location     Type
  9664 ;;		None
  9665 ;; Auto vars:     Size  Location     Type
  9666 ;;		None
  9667 ;; Return value:  Size  Location     Type
  9668 ;;                  1    wreg      void 
  9669 ;; Registers used:
  9670 ;;		wreg, status,2
  9671 ;; Tracked objects:
  9672 ;;		On entry : 0/0
  9673 ;;		On exit  : 0/0
  9674 ;;		Unchanged: 0/0
  9675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9680 ;;Total ram usage:        0 bytes
  9681 ;; Hardware stack levels used: 1
  9682 ;; Hardware stack levels required when called: 8
  9683 ;; This function calls:
  9684 ;;		Nothing
  9685 ;; This function is called by:
  9686 ;;		_SYSTEM_Initialize
  9687 ;; This function uses a non-reentrant model
  9688 ;;
  9689                           
  9690                           	psect	text54
  9691  003E96                     __ptext54:
  9692                           	callstack 0
  9693  003E96                     _PMD_Initialize:
  9694                           	callstack 21
  9695  003E96                     
  9696                           ;mcc_generated_files/mcc.c: 89:     PMD0 = 0x00;
  9697  003E96  0E00               	movlw	0
  9698  003E98  0139               	movlb	57	; () banked
  9699  003E9A  6FC0               	movwf	192,b	;volatile
  9700                           
  9701                           ;mcc_generated_files/mcc.c: 91:     PMD1 = 0x00;
  9702  003E9C  0E00               	movlw	0
  9703  003E9E  6FC1               	movwf	193,b	;volatile
  9704                           
  9705                           ;mcc_generated_files/mcc.c: 93:     PMD2 = 0x00;
  9706  003EA0  0E00               	movlw	0
  9707  003EA2  6FC2               	movwf	194,b	;volatile
  9708                           
  9709                           ;mcc_generated_files/mcc.c: 95:     PMD3 = 0x00;
  9710  003EA4  0E00               	movlw	0
  9711  003EA6  6FC3               	movwf	195,b	;volatile
  9712                           
  9713                           ;mcc_generated_files/mcc.c: 97:     PMD4 = 0x00;
  9714  003EA8  0E00               	movlw	0
  9715  003EAA  6FC4               	movwf	196,b	;volatile
  9716                           
  9717                           ;mcc_generated_files/mcc.c: 99:     PMD5 = 0x00;
  9718  003EAC  0E00               	movlw	0
  9719  003EAE  6FC5               	movwf	197,b	;volatile
  9720                           
  9721                           ;mcc_generated_files/mcc.c: 101:     PMD6 = 0x00;
  9722  003EB0  0E00               	movlw	0
  9723  003EB2  6FC6               	movwf	198,b	;volatile
  9724                           
  9725                           ;mcc_generated_files/mcc.c: 103:     PMD7 = 0x00;
  9726  003EB4  0E00               	movlw	0
  9727  003EB6  6FC7               	movwf	199,b	;volatile
  9728  003EB8                     
  9729                           ; BSR set to: 57
  9730  003EB8  0012               	return		;funcret
  9731  003EBA                     __end_of_PMD_Initialize:
  9732                           	callstack 0
  9733                           
  9734 ;; *************** function _PIN_MANAGER_Initialize *****************
  9735 ;; Defined at:
  9736 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  9737 ;; Parameters:    Size  Location     Type
  9738 ;;		None
  9739 ;; Auto vars:     Size  Location     Type
  9740 ;;		None
  9741 ;; Return value:  Size  Location     Type
  9742 ;;                  1    wreg      void 
  9743 ;; Registers used:
  9744 ;;		wreg, status,2
  9745 ;; Tracked objects:
  9746 ;;		On entry : 0/0
  9747 ;;		On exit  : 0/0
  9748 ;;		Unchanged: 0/0
  9749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9754 ;;Total ram usage:        0 bytes
  9755 ;; Hardware stack levels used: 1
  9756 ;; Hardware stack levels required when called: 8
  9757 ;; This function calls:
  9758 ;;		Nothing
  9759 ;; This function is called by:
  9760 ;;		_SYSTEM_Initialize
  9761 ;; This function uses a non-reentrant model
  9762 ;;
  9763                           
  9764                           	psect	text55
  9765  002F74                     __ptext55:
  9766                           	callstack 0
  9767  002F74                     _PIN_MANAGER_Initialize:
  9768                           	callstack 21
  9769  002F74                     
  9770                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  9771  002F74  0E00               	movlw	0
  9772  002F76  6EBE               	movwf	190,c	;volatile
  9773                           
  9774                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  9775  002F78  0E00               	movlw	0
  9776  002F7A  6EBD               	movwf	189,c	;volatile
  9777                           
  9778                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x24;
  9779  002F7C  0E24               	movlw	36
  9780  002F7E  6EBA               	movwf	186,c	;volatile
  9781                           
  9782                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  9783  002F80  0E00               	movlw	0
  9784  002F82  6EBB               	movwf	187,c	;volatile
  9785                           
  9786                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  9787  002F84  0E00               	movlw	0
  9788  002F86  6EBC               	movwf	188,c	;volatile
  9789                           
  9790                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  9791  002F88  0E07               	movlw	7
  9792  002F8A  6EC6               	movwf	198,c	;volatile
  9793                           
  9794                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xC0;
  9795  002F8C  0EC0               	movlw	192
  9796  002F8E  6EC2               	movwf	194,c	;volatile
  9797                           
  9798                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xF7;
  9799  002F90  0EF7               	movlw	247
  9800  002F92  6EC3               	movwf	195,c	;volatile
  9801  002F94                     
  9802                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
  9803  002F94  68C4               	setf	196,c	;volatile
  9804  002F96                     
  9805                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  9806  002F96  68C5               	setf	197,c	;volatile
  9807                           
  9808                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x1F;
  9809  002F98  0E1F               	movlw	31
  9810  002F9A  013A               	movlb	58	; () banked
  9811  002F9C  6F70               	movwf	112,b	;volatile
  9812  002F9E                     
  9813                           ; BSR set to: 58
  9814                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xFF;
  9815  002F9E  6960               	setf	96,b	;volatile
  9816                           
  9817                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xC0;
  9818  002FA0  0EC0               	movlw	192
  9819  002FA2  6F50               	movwf	80,b	;volatile
  9820                           
  9821                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  9822  002FA4  0E07               	movlw	7
  9823  002FA6  6F80               	movwf	128,b	;volatile
  9824                           
  9825                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x7F;
  9826  002FA8  0E7F               	movlw	127
  9827  002FAA  6F40               	movwf	64,b	;volatile
  9828                           
  9829                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  9830  002FAC  0E00               	movlw	0
  9831  002FAE  6F71               	movwf	113,b	;volatile
  9832                           
  9833                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  9834  002FB0  0E00               	movlw	0
  9835  002FB2  6F81               	movwf	129,b	;volatile
  9836                           
  9837                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  9838  002FB4  0E00               	movlw	0
  9839  002FB6  6F51               	movwf	81,b	;volatile
  9840                           
  9841                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  9842  002FB8  0E00               	movlw	0
  9843  002FBA  6F41               	movwf	65,b	;volatile
  9844                           
  9845                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  9846  002FBC  0E00               	movlw	0
  9847  002FBE  6F61               	movwf	97,b	;volatile
  9848                           
  9849                           ;mcc_generated_files/pin_manager.c: 96:     RB1I2C = 0x00;
  9850  002FC0  0E00               	movlw	0
  9851  002FC2  6F5A               	movwf	90,b	;volatile
  9852                           
  9853                           ;mcc_generated_files/pin_manager.c: 97:     RB2I2C = 0x00;
  9854  002FC4  0E00               	movlw	0
  9855  002FC6  6F5B               	movwf	91,b	;volatile
  9856                           
  9857                           ;mcc_generated_files/pin_manager.c: 98:     RC3I2C = 0x00;
  9858  002FC8  0E00               	movlw	0
  9859  002FCA  6F6A               	movwf	106,b	;volatile
  9860                           
  9861                           ;mcc_generated_files/pin_manager.c: 99:     RC4I2C = 0x00;
  9862  002FCC  0E00               	movlw	0
  9863  002FCE  6F6B               	movwf	107,b	;volatile
  9864                           
  9865                           ;mcc_generated_files/pin_manager.c: 100:     RD0I2C = 0x00;
  9866  002FD0  0E00               	movlw	0
  9867  002FD2  6F7A               	movwf	122,b	;volatile
  9868                           
  9869                           ;mcc_generated_files/pin_manager.c: 101:     RD1I2C = 0x00;
  9870  002FD4  0E00               	movlw	0
  9871  002FD6  6F7B               	movwf	123,b	;volatile
  9872                           
  9873                           ;mcc_generated_files/pin_manager.c: 106:     ODCONE = 0x00;
  9874  002FD8  0E00               	movlw	0
  9875  002FDA  6F82               	movwf	130,b	;volatile
  9876                           
  9877                           ;mcc_generated_files/pin_manager.c: 107:     ODCONA = 0x00;
  9878  002FDC  0E00               	movlw	0
  9879  002FDE  6F42               	movwf	66,b	;volatile
  9880                           
  9881                           ;mcc_generated_files/pin_manager.c: 108:     ODCONB = 0x00;
  9882  002FE0  0E00               	movlw	0
  9883  002FE2  6F52               	movwf	82,b	;volatile
  9884                           
  9885                           ;mcc_generated_files/pin_manager.c: 109:     ODCONC = 0x00;
  9886  002FE4  0E00               	movlw	0
  9887  002FE6  6F62               	movwf	98,b	;volatile
  9888                           
  9889                           ;mcc_generated_files/pin_manager.c: 110:     ODCOND = 0x00;
  9890  002FE8  0E00               	movlw	0
  9891  002FEA  6F72               	movwf	114,b	;volatile
  9892  002FEC                     
  9893                           ; BSR set to: 58
  9894                           ;mcc_generated_files/pin_manager.c: 115:     SLRCONA = 0xFF;
  9895  002FEC  6943               	setf	67,b	;volatile
  9896  002FEE                     
  9897                           ; BSR set to: 58
  9898                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONB = 0xFF;
  9899  002FEE  6953               	setf	83,b	;volatile
  9900  002FF0                     
  9901                           ; BSR set to: 58
  9902                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONC = 0xFF;
  9903  002FF0  6963               	setf	99,b	;volatile
  9904  002FF2                     
  9905                           ; BSR set to: 58
  9906                           ;mcc_generated_files/pin_manager.c: 118:     SLRCOND = 0xFF;
  9907  002FF2  6973               	setf	115,b	;volatile
  9908                           
  9909                           ;mcc_generated_files/pin_manager.c: 119:     SLRCONE = 0x07;
  9910  002FF4  0E07               	movlw	7
  9911  002FF6  6F83               	movwf	131,b	;volatile
  9912  002FF8                     
  9913                           ; BSR set to: 58
  9914                           ;mcc_generated_files/pin_manager.c: 124:     INLVLA = 0xFF;
  9915  002FF8  6944               	setf	68,b	;volatile
  9916  002FFA                     
  9917                           ; BSR set to: 58
  9918                           ;mcc_generated_files/pin_manager.c: 125:     INLVLB = 0xFF;
  9919  002FFA  6954               	setf	84,b	;volatile
  9920  002FFC                     
  9921                           ; BSR set to: 58
  9922                           ;mcc_generated_files/pin_manager.c: 126:     INLVLC = 0xFF;
  9923  002FFC  6964               	setf	100,b	;volatile
  9924  002FFE                     
  9925                           ; BSR set to: 58
  9926                           ;mcc_generated_files/pin_manager.c: 127:     INLVLD = 0xFF;
  9927  002FFE  6974               	setf	116,b	;volatile
  9928                           
  9929                           ;mcc_generated_files/pin_manager.c: 128:     INLVLE = 0x0F;
  9930  003000  0E0F               	movlw	15
  9931  003002  6F84               	movwf	132,b	;volatile
  9932                           
  9933                           ;mcc_generated_files/pin_manager.c: 137:     CCP3PPS = 0x1F;
  9934  003004  0E1F               	movlw	31
  9935  003006  6FCF               	movwf	207,b	;volatile
  9936                           
  9937                           ;mcc_generated_files/pin_manager.c: 138:     CLCIN3PPS = 0x09;
  9938  003008  0E09               	movlw	9
  9939  00300A  6FDC               	movwf	220,b	;volatile
  9940                           
  9941                           ;mcc_generated_files/pin_manager.c: 139:     RA1PPS = 0x0E;
  9942  00300C  0E0E               	movlw	14
  9943  00300E  6F01               	movwf	1,b	;volatile
  9944                           
  9945                           ;mcc_generated_files/pin_manager.c: 140:     U1RXPPS = 0x0A;
  9946  003010  0E0A               	movlw	10
  9947  003012  6FE5               	movwf	229,b	;volatile
  9948                           
  9949                           ;mcc_generated_files/pin_manager.c: 141:     RA0PPS = 0x0D;
  9950  003014  0E0D               	movlw	13
  9951  003016  6F00               	movwf	0,b	;volatile
  9952                           
  9953                           ;mcc_generated_files/pin_manager.c: 142:     T5GPPS = 0x1D;
  9954  003018  0E1D               	movlw	29
  9955  00301A  6FC9               	movwf	201,b	;volatile
  9956                           
  9957                           ;mcc_generated_files/pin_manager.c: 143:     RA4PPS = 0x10;
  9958  00301C  0E10               	movlw	16
  9959  00301E  6F04               	movwf	4,b	;volatile
  9960                           
  9961                           ;mcc_generated_files/pin_manager.c: 144:     CLCIN0PPS = 0x07;
  9962  003020  0E07               	movlw	7
  9963  003022  6FD9               	movwf	217,b	;volatile
  9964                           
  9965                           ;mcc_generated_files/pin_manager.c: 145:     SMT1WINPPS = 0x09;
  9966  003024  0E09               	movlw	9
  9967  003026  6FD1               	movwf	209,b	;volatile
  9968                           
  9969                           ;mcc_generated_files/pin_manager.c: 146:     RA3PPS = 0x0F;
  9970  003028  0E0F               	movlw	15
  9971  00302A  6F03               	movwf	3,b	;volatile
  9972                           
  9973                           ;mcc_generated_files/pin_manager.c: 147:     RB3PPS = 0x13;
  9974  00302C  0E13               	movlw	19
  9975  00302E  6F0B               	movwf	11,b	;volatile
  9976                           
  9977                           ;mcc_generated_files/pin_manager.c: 148:     CLCIN2PPS = 0x08;
  9978  003030  0E08               	movlw	8
  9979  003032  6FDB               	movwf	219,b	;volatile
  9980                           
  9981                           ;mcc_generated_files/pin_manager.c: 149:     SMT1SIGPPS = 0x08;
  9982  003034  0E08               	movlw	8
  9983  003036  6FD2               	movwf	210,b	;volatile
  9984                           
  9985                           ;mcc_generated_files/pin_manager.c: 150:     CCP4PPS = 0x1E;
  9986  003038  0E1E               	movlw	30
  9987  00303A  6FD0               	movwf	208,b	;volatile
  9988  00303C                     
  9989                           ; BSR set to: 58
  9990  00303C  0012               	return		;funcret
  9991  00303E                     __end_of_PIN_MANAGER_Initialize:
  9992                           	callstack 0
  9993                           
  9994 ;; *************** function _OSCILLATOR_Initialize *****************
  9995 ;; Defined at:
  9996 ;;		line 72 in file "mcc_generated_files/mcc.c"
  9997 ;; Parameters:    Size  Location     Type
  9998 ;;		None
  9999 ;; Auto vars:     Size  Location     Type
 10000 ;;		None
 10001 ;; Return value:  Size  Location     Type
 10002 ;;                  1    wreg      void 
 10003 ;; Registers used:
 10004 ;;		wreg, status,2
 10005 ;; Tracked objects:
 10006 ;;		On entry : 0/0
 10007 ;;		On exit  : 0/0
 10008 ;;		Unchanged: 0/0
 10009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10014 ;;Total ram usage:        0 bytes
 10015 ;; Hardware stack levels used: 1
 10016 ;; Hardware stack levels required when called: 8
 10017 ;; This function calls:
 10018 ;;		Nothing
 10019 ;; This function is called by:
 10020 ;;		_SYSTEM_Initialize
 10021 ;; This function uses a non-reentrant model
 10022 ;;
 10023                           
 10024                           	psect	text56
 10025  003F98                     __ptext56:
 10026                           	callstack 0
 10027  003F98                     _OSCILLATOR_Initialize:
 10028                           	callstack 21
 10029  003F98                     
 10030                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x60;
 10031  003F98  0E60               	movlw	96
 10032  003F9A  0139               	movlb	57	; () banked
 10033  003F9C  6FD9               	movwf	217,b	;volatile
 10034                           
 10035                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 10036  003F9E  0E00               	movlw	0
 10037  003FA0  6FDB               	movwf	219,b	;volatile
 10038                           
 10039                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 10040  003FA2  0E00               	movlw	0
 10041  003FA4  6FDD               	movwf	221,b	;volatile
 10042                           
 10043                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x08;
 10044  003FA6  0E08               	movlw	8
 10045  003FA8  6FDF               	movwf	223,b	;volatile
 10046                           
 10047                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 10048  003FAA  0E00               	movlw	0
 10049  003FAC  6FDE               	movwf	222,b	;volatile
 10050  003FAE                     
 10051                           ; BSR set to: 57
 10052  003FAE  0012               	return		;funcret
 10053  003FB0                     __end_of_OSCILLATOR_Initialize:
 10054                           	callstack 0
 10055                           
 10056 ;; *************** function _INTERRUPT_Initialize *****************
 10057 ;; Defined at:
 10058 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 10059 ;; Parameters:    Size  Location     Type
 10060 ;;		None
 10061 ;; Auto vars:     Size  Location     Type
 10062 ;;  state           1   31[COMRAM] _Bool 
 10063 ;; Return value:  Size  Location     Type
 10064 ;;                  1    wreg      void 
 10065 ;; Registers used:
 10066 ;;		wreg, status,2
 10067 ;; Tracked objects:
 10068 ;;		On entry : 0/0
 10069 ;;		On exit  : 0/0
 10070 ;;		Unchanged: 0/0
 10071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10073 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10075 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10076 ;;Total ram usage:        1 bytes
 10077 ;; Hardware stack levels used: 1
 10078 ;; Hardware stack levels required when called: 8
 10079 ;; This function calls:
 10080 ;;		Nothing
 10081 ;; This function is called by:
 10082 ;;		_SYSTEM_Initialize
 10083 ;; This function uses a non-reentrant model
 10084 ;;
 10085                           
 10086                           	psect	text57
 10087  0037BC                     __ptext57:
 10088                           	callstack 0
 10089  0037BC                     _INTERRUPT_Initialize:
 10090                           	callstack 21
 10091  0037BC                     
 10092                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 10093  0037BC  8AD2               	bsf	210,5,c	;volatile
 10094  0037BE                     
 10095                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 10096  0037BE  0E00               	movlw	0
 10097  0037C0  BED2               	btfsc	16338,7,c	;volatile
 10098  0037C2  0E01               	movlw	1
 10099  0037C4  6E20               	movwf	INTERRUPT_Initialize@state^0,c
 10100  0037C6                     
 10101                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 10102  0037C6  9ED2               	bcf	16338,7,c	;volatile
 10103                           
 10104                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 10105  0037C8  0E55               	movlw	85
 10106  0037CA  6ED4               	movwf	212,c	;volatile
 10107                           
 10108                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 10109  0037CC  0EAA               	movlw	170
 10110  0037CE  6ED4               	movwf	212,c	;volatile
 10111  0037D0                     
 10112                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 10113  0037D0  90D4               	bcf	212,0,c	;volatile
 10114                           
 10115                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTBASEU = 0;
 10116  0037D2  0E00               	movlw	0
 10117  0037D4  6ED7               	movwf	215,c	;volatile
 10118                           
 10119                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTBASEH = 0;
 10120  0037D6  0E00               	movlw	0
 10121  0037D8  6ED6               	movwf	214,c	;volatile
 10122                           
 10123                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTBASEL = 8;
 10124  0037DA  0E08               	movlw	8
 10125  0037DC  6ED5               	movwf	213,c	;volatile
 10126                           
 10127                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 10128  0037DE  0E55               	movlw	85
 10129  0037E0  6ED4               	movwf	212,c	;volatile
 10130                           
 10131                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 10132  0037E2  0EAA               	movlw	170
 10133  0037E4  6ED4               	movwf	212,c	;volatile
 10134  0037E6                     
 10135                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 10136  0037E6  80D4               	bsf	212,0,c	;volatile
 10137  0037E8                     
 10138                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 10139  0037E8  B020               	btfsc	INTERRUPT_Initialize@state^0,0,c
 10140  0037EA  D002               	bra	u1525
 10141  0037EC  9ED2               	bcf	16338,7,c	;volatile
 10142  0037EE  D001               	bra	u1526
 10143  0037F0                     u1525:
 10144  0037F0  8ED2               	bsf	16338,7,c	;volatile
 10145  0037F2                     u1526:
 10146  0037F2                     
 10147                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR3bits.U1TXIP = 0;
 10148  0037F2  0139               	movlb	57	; () banked
 10149  0037F4  9983               	bcf	131,4,b	;volatile
 10150  0037F6                     
 10151                           ; BSR set to: 57
 10152                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR3bits.U1RXIP = 0;
 10153  0037F6  9783               	bcf	131,3,b	;volatile
 10154  0037F8                     
 10155                           ; BSR set to: 57
 10156                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR1bits.SMT1PWAIP = 1;
 10157  0037F8  8F81               	bsf	129,7,b	;volatile
 10158  0037FA                     
 10159                           ; BSR set to: 57
 10160                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR1bits.SMT1IP = 1;
 10161  0037FA  8B81               	bsf	129,5,b	;volatile
 10162  0037FC                     
 10163                           ; BSR set to: 57
 10164                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR1bits.SMT1PRAIP = 1;
 10165  0037FC  8D81               	bsf	129,6,b	;volatile
 10166  0037FE                     
 10167                           ; BSR set to: 57
 10168                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR10bits.CCP4IP = 1;
 10169  0037FE  818A               	bsf	138,0,b	;volatile
 10170  003800                     
 10171                           ; BSR set to: 57
 10172                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR8bits.TMR5GIP = 1;
 10173  003800  8F88               	bsf	136,7,b	;volatile
 10174  003802                     
 10175                           ; BSR set to: 57
 10176                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR7bits.TMR4IP = 0;
 10177  003802  9187               	bcf	135,0,b	;volatile
 10178  003804                     
 10179                           ; BSR set to: 57
 10180                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR9bits.CCP3IP = 1;
 10181  003804  8389               	bsf	137,1,b	;volatile
 10182  003806                     
 10183                           ; BSR set to: 57
 10184  003806  0012               	return		;funcret
 10185  003808                     __end_of_INTERRUPT_Initialize:
 10186                           	callstack 0
 10187                           
 10188 ;; *************** function _CLC3_Initialize *****************
 10189 ;; Defined at:
 10190 ;;		line 58 in file "mcc_generated_files/clc3.c"
 10191 ;; Parameters:    Size  Location     Type
 10192 ;;		None
 10193 ;; Auto vars:     Size  Location     Type
 10194 ;;		None
 10195 ;; Return value:  Size  Location     Type
 10196 ;;                  1    wreg      void 
 10197 ;; Registers used:
 10198 ;;		wreg, status,2
 10199 ;; Tracked objects:
 10200 ;;		On entry : 0/0
 10201 ;;		On exit  : 0/0
 10202 ;;		Unchanged: 0/0
 10203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10208 ;;Total ram usage:        0 bytes
 10209 ;; Hardware stack levels used: 1
 10210 ;; Hardware stack levels required when called: 8
 10211 ;; This function calls:
 10212 ;;		Nothing
 10213 ;; This function is called by:
 10214 ;;		_SYSTEM_Initialize
 10215 ;; This function uses a non-reentrant model
 10216 ;;
 10217                           
 10218                           	psect	text58
 10219  003D9A                     __ptext58:
 10220                           	callstack 0
 10221  003D9A                     _CLC3_Initialize:
 10222                           	callstack 21
 10223  003D9A                     
 10224                           ;mcc_generated_files/clc3.c: 63:     CLC3POL = 0x00;
 10225  003D9A  0E00               	movlw	0
 10226  003D9C  013C               	movlb	60	; () banked
 10227  003D9E  6F61               	movwf	97,b	;volatile
 10228                           
 10229                           ;mcc_generated_files/clc3.c: 65:     CLC3SEL0 = 0x03;
 10230  003DA0  0E03               	movlw	3
 10231  003DA2  6F62               	movwf	98,b	;volatile
 10232                           
 10233                           ;mcc_generated_files/clc3.c: 67:     CLC3SEL1 = 0x02;
 10234  003DA4  0E02               	movlw	2
 10235  003DA6  6F63               	movwf	99,b	;volatile
 10236                           
 10237                           ;mcc_generated_files/clc3.c: 69:     CLC3SEL2 = 0x00;
 10238  003DA8  0E00               	movlw	0
 10239  003DAA  6F64               	movwf	100,b	;volatile
 10240                           
 10241                           ;mcc_generated_files/clc3.c: 71:     CLC3SEL3 = 0x00;
 10242  003DAC  0E00               	movlw	0
 10243  003DAE  6F65               	movwf	101,b	;volatile
 10244                           
 10245                           ;mcc_generated_files/clc3.c: 73:     CLC3GLS0 = 0x02;
 10246  003DB0  0E02               	movlw	2
 10247  003DB2  6F66               	movwf	102,b	;volatile
 10248                           
 10249                           ;mcc_generated_files/clc3.c: 75:     CLC3GLS1 = 0x08;
 10250  003DB4  0E08               	movlw	8
 10251  003DB6  6F67               	movwf	103,b	;volatile
 10252                           
 10253                           ;mcc_generated_files/clc3.c: 77:     CLC3GLS2 = 0x00;
 10254  003DB8  0E00               	movlw	0
 10255  003DBA  6F68               	movwf	104,b	;volatile
 10256                           
 10257                           ;mcc_generated_files/clc3.c: 79:     CLC3GLS3 = 0x00;
 10258  003DBC  0E00               	movlw	0
 10259  003DBE  6F69               	movwf	105,b	;volatile
 10260                           
 10261                           ;mcc_generated_files/clc3.c: 81:     CLC3CON = 0x85;
 10262  003DC0  0E85               	movlw	133
 10263  003DC2  6F60               	movwf	96,b	;volatile
 10264  003DC4                     
 10265                           ; BSR set to: 60
 10266  003DC4  0012               	return		;funcret
 10267  003DC6                     __end_of_CLC3_Initialize:
 10268                           	callstack 0
 10269                           
 10270 ;; *************** function _CCP4_Initialize *****************
 10271 ;; Defined at:
 10272 ;;		line 78 in file "mcc_generated_files/ccp4.c"
 10273 ;; Parameters:    Size  Location     Type
 10274 ;;		None
 10275 ;; Auto vars:     Size  Location     Type
 10276 ;;		None
 10277 ;; Return value:  Size  Location     Type
 10278 ;;                  1    wreg      void 
 10279 ;; Registers used:
 10280 ;;		wreg, status,2, status,0, cstack
 10281 ;; Tracked objects:
 10282 ;;		On entry : 0/0
 10283 ;;		On exit  : 0/0
 10284 ;;		Unchanged: 0/0
 10285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10290 ;;Total ram usage:        0 bytes
 10291 ;; Hardware stack levels used: 1
 10292 ;; Hardware stack levels required when called: 9
 10293 ;; This function calls:
 10294 ;;		_CCP4_SetCallBack
 10295 ;; This function is called by:
 10296 ;;		_SYSTEM_Initialize
 10297 ;; This function uses a non-reentrant model
 10298 ;;
 10299                           
 10300                           	psect	text59
 10301  003CE4                     __ptext59:
 10302                           	callstack 0
 10303  003CE4                     _CCP4_Initialize:
 10304                           	callstack 20
 10305  003CE4                     
 10306                           ;mcc_generated_files/ccp4.c: 83:  CCP4CON = 0x83;
 10307  003CE4  0E83               	movlw	131
 10308  003CE6  6E72               	movwf	114,c	;volatile
 10309                           
 10310                           ;mcc_generated_files/ccp4.c: 86:  CCP4CAP = 0x00;
 10311  003CE8  0E00               	movlw	0
 10312  003CEA  6E73               	movwf	115,c	;volatile
 10313                           
 10314                           ;mcc_generated_files/ccp4.c: 89:  CCPR4H = 0x00;
 10315  003CEC  0E00               	movlw	0
 10316  003CEE  6E71               	movwf	113,c	;volatile
 10317                           
 10318                           ;mcc_generated_files/ccp4.c: 92:  CCPR4L = 0x00;
 10319  003CF0  0E00               	movlw	0
 10320  003CF2  6E70               	movwf	112,c	;volatile
 10321  003CF4                     
 10322                           ;mcc_generated_files/ccp4.c: 95:     CCP4_SetCallBack(CCP4_DefaultCallBack);
 10323  003CF4  0EB4               	movlw	low _CCP4_DefaultCallBack
 10324  003CF6  6E20               	movwf	CCP4_SetCallBack@customCallBack^0,c
 10325  003CF8  0E3C               	movlw	high _CCP4_DefaultCallBack
 10326  003CFA  6E21               	movwf	(CCP4_SetCallBack@customCallBack+1)^0,c
 10327  003CFC  EC07  F020         	call	_CCP4_SetCallBack	;wreg free
 10328  003D00                     
 10329                           ;mcc_generated_files/ccp4.c: 98:  CCPTMRS0bits.C4TSEL = 0x2;
 10330  003D00  013F               	movlb	63	; () banked
 10331  003D02  515E               	movf	94,w,b	;volatile
 10332  003D04  0B3F               	andlw	-193
 10333  003D06  0980               	iorlw	128
 10334  003D08  6F5E               	movwf	94,b	;volatile
 10335  003D0A                     
 10336                           ; BSR set to: 63
 10337                           ;mcc_generated_files/ccp4.c: 101:     PIR10bits.CCP4IF = 0;
 10338  003D0A  0139               	movlb	57	; () banked
 10339  003D0C  91AA               	bcf	170,0,b	;volatile
 10340  003D0E                     
 10341                           ; BSR set to: 57
 10342                           ;mcc_generated_files/ccp4.c: 104:     PIE10bits.CCP4IE = 1;
 10343  003D0E  819A               	bsf	154,0,b	;volatile
 10344  003D10                     
 10345                           ; BSR set to: 57
 10346  003D10  0012               	return		;funcret
 10347  003D12                     __end_of_CCP4_Initialize:
 10348                           	callstack 0
 10349                           
 10350 ;; *************** function _CCP4_SetCallBack *****************
 10351 ;; Defined at:
 10352 ;;		line 75 in file "mcc_generated_files/ccp4.c"
 10353 ;; Parameters:    Size  Location     Type
 10354 ;;  customCallBa    2   31[COMRAM] PTR FTN(unsigned short ,
 10355 ;;		 -> CCP4_DefaultCallBack(1), 
 10356 ;; Auto vars:     Size  Location     Type
 10357 ;;		None
 10358 ;; Return value:  Size  Location     Type
 10359 ;;                  1    wreg      void 
 10360 ;; Registers used:
 10361 ;;		wreg, status,2, status,0
 10362 ;; Tracked objects:
 10363 ;;		On entry : 0/0
 10364 ;;		On exit  : 0/0
 10365 ;;		Unchanged: 0/0
 10366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10367 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10370 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10371 ;;Total ram usage:        2 bytes
 10372 ;; Hardware stack levels used: 1
 10373 ;; Hardware stack levels required when called: 8
 10374 ;; This function calls:
 10375 ;;		Nothing
 10376 ;; This function is called by:
 10377 ;;		_CCP4_Initialize
 10378 ;; This function uses a non-reentrant model
 10379 ;;
 10380                           
 10381                           	psect	text60
 10382  00400E                     __ptext60:
 10383                           	callstack 0
 10384  00400E                     _CCP4_SetCallBack:
 10385                           	callstack 20
 10386  00400E                     
 10387                           ;mcc_generated_files/ccp4.c: 76:     CCP4_CallBack = customCallBack;
 10388  00400E  C020  F0F6         	movff	CCP4_SetCallBack@customCallBack,_CCP4_CallBack
 10389  004012  C021  F0F7         	movff	CCP4_SetCallBack@customCallBack+1,_CCP4_CallBack+1
 10390  004016  0012               	return		;funcret
 10391  004018                     __end_of_CCP4_SetCallBack:
 10392                           	callstack 0
 10393                           
 10394 ;; *************** function _CCP3_Initialize *****************
 10395 ;; Defined at:
 10396 ;;		line 75 in file "mcc_generated_files/ccp3.c"
 10397 ;; Parameters:    Size  Location     Type
 10398 ;;		None
 10399 ;; Auto vars:     Size  Location     Type
 10400 ;;		None
 10401 ;; Return value:  Size  Location     Type
 10402 ;;                  1    wreg      void 
 10403 ;; Registers used:
 10404 ;;		wreg, status,2, status,0, cstack
 10405 ;; Tracked objects:
 10406 ;;		On entry : 0/0
 10407 ;;		On exit  : 0/0
 10408 ;;		Unchanged: 0/0
 10409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10414 ;;Total ram usage:        0 bytes
 10415 ;; Hardware stack levels used: 1
 10416 ;; Hardware stack levels required when called: 9
 10417 ;; This function calls:
 10418 ;;		_CCP3_SetCallBack
 10419 ;; This function is called by:
 10420 ;;		_SYSTEM_Initialize
 10421 ;; This function uses a non-reentrant model
 10422 ;;
 10423                           
 10424                           	psect	text61
 10425  003D12                     __ptext61:
 10426                           	callstack 0
 10427  003D12                     _CCP3_Initialize:
 10428                           	callstack 20
 10429  003D12                     
 10430                           ;mcc_generated_files/ccp3.c: 80:  CCP3CON = 0x83;
 10431  003D12  0E83               	movlw	131
 10432  003D14  6E76               	movwf	118,c	;volatile
 10433                           
 10434                           ;mcc_generated_files/ccp3.c: 83:  CCP3CAP = 0x00;
 10435  003D16  0E00               	movlw	0
 10436  003D18  6E77               	movwf	119,c	;volatile
 10437                           
 10438                           ;mcc_generated_files/ccp3.c: 86:  CCPR3H = 0x00;
 10439  003D1A  0E00               	movlw	0
 10440  003D1C  6E75               	movwf	117,c	;volatile
 10441                           
 10442                           ;mcc_generated_files/ccp3.c: 89:  CCPR3L = 0x00;
 10443  003D1E  0E00               	movlw	0
 10444  003D20  6E74               	movwf	116,c	;volatile
 10445  003D22                     
 10446                           ;mcc_generated_files/ccp3.c: 92:     CCP3_SetCallBack(CCP3_DefaultCallBack);
 10447  003D22  0E84               	movlw	low _CCP3_DefaultCallBack
 10448  003D24  6E20               	movwf	CCP3_SetCallBack@customCallBack^0,c
 10449  003D26  0E3C               	movlw	high _CCP3_DefaultCallBack
 10450  003D28  6E21               	movwf	(CCP3_SetCallBack@customCallBack+1)^0,c
 10451  003D2A  EC0C  F020         	call	_CCP3_SetCallBack	;wreg free
 10452  003D2E                     
 10453                           ;mcc_generated_files/ccp3.c: 95:  CCPTMRS0bits.C3TSEL = 0x2;
 10454  003D2E  013F               	movlb	63	; () banked
 10455  003D30  515E               	movf	94,w,b	;volatile
 10456  003D32  0BCF               	andlw	-49
 10457  003D34  0920               	iorlw	32
 10458  003D36  6F5E               	movwf	94,b	;volatile
 10459  003D38                     
 10460                           ; BSR set to: 63
 10461                           ;mcc_generated_files/ccp3.c: 98:     PIR9bits.CCP3IF = 0;
 10462  003D38  0139               	movlb	57	; () banked
 10463  003D3A  93A9               	bcf	169,1,b	;volatile
 10464  003D3C                     
 10465                           ; BSR set to: 57
 10466                           ;mcc_generated_files/ccp3.c: 101:     PIE9bits.CCP3IE = 1;
 10467  003D3C  8399               	bsf	153,1,b	;volatile
 10468  003D3E                     
 10469                           ; BSR set to: 57
 10470  003D3E  0012               	return		;funcret
 10471  003D40                     __end_of_CCP3_Initialize:
 10472                           	callstack 0
 10473                           
 10474 ;; *************** function _CCP3_SetCallBack *****************
 10475 ;; Defined at:
 10476 ;;		line 119 in file "mcc_generated_files/ccp3.c"
 10477 ;; Parameters:    Size  Location     Type
 10478 ;;  customCallBa    2   31[COMRAM] PTR FTN(unsigned short ,
 10479 ;;		 -> CCP3_DefaultCallBack(1), 
 10480 ;; Auto vars:     Size  Location     Type
 10481 ;;		None
 10482 ;; Return value:  Size  Location     Type
 10483 ;;                  1    wreg      void 
 10484 ;; Registers used:
 10485 ;;		wreg, status,2, status,0
 10486 ;; Tracked objects:
 10487 ;;		On entry : 0/0
 10488 ;;		On exit  : 0/0
 10489 ;;		Unchanged: 0/0
 10490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10491 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10494 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10495 ;;Total ram usage:        2 bytes
 10496 ;; Hardware stack levels used: 1
 10497 ;; Hardware stack levels required when called: 8
 10498 ;; This function calls:
 10499 ;;		Nothing
 10500 ;; This function is called by:
 10501 ;;		_CCP3_Initialize
 10502 ;; This function uses a non-reentrant model
 10503 ;;
 10504                           
 10505                           	psect	text62
 10506  004018                     __ptext62:
 10507                           	callstack 0
 10508  004018                     _CCP3_SetCallBack:
 10509                           	callstack 20
 10510  004018                     
 10511                           ;mcc_generated_files/ccp3.c: 120:     CCP3_CallBack = customCallBack;
 10512  004018  C020  F0F8         	movff	CCP3_SetCallBack@customCallBack,_CCP3_CallBack
 10513  00401C  C021  F0F9         	movff	CCP3_SetCallBack@customCallBack+1,_CCP3_CallBack+1
 10514  004020  0012               	return		;funcret
 10515  004022                     __end_of_CCP3_SetCallBack:
 10516                           	callstack 0
 10517                           
 10518 ;; *************** function _ADCC_Initialize *****************
 10519 ;; Defined at:
 10520 ;;		line 62 in file "mcc_generated_files/adcc.c"
 10521 ;; Parameters:    Size  Location     Type
 10522 ;;		None
 10523 ;; Auto vars:     Size  Location     Type
 10524 ;;		None
 10525 ;; Return value:  Size  Location     Type
 10526 ;;                  1    wreg      void 
 10527 ;; Registers used:
 10528 ;;		wreg, status,2
 10529 ;; Tracked objects:
 10530 ;;		On entry : 0/0
 10531 ;;		On exit  : 0/0
 10532 ;;		Unchanged: 0/0
 10533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10538 ;;Total ram usage:        0 bytes
 10539 ;; Hardware stack levels used: 1
 10540 ;; Hardware stack levels required when called: 8
 10541 ;; This function calls:
 10542 ;;		Nothing
 10543 ;; This function is called by:
 10544 ;;		_SYSTEM_Initialize
 10545 ;; This function uses a non-reentrant model
 10546 ;;
 10547                           
 10548                           	psect	text63
 10549  00361C                     __ptext63:
 10550                           	callstack 0
 10551  00361C                     _ADCC_Initialize:
 10552                           	callstack 21
 10553  00361C                     
 10554                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
 10555  00361C  0E00               	movlw	0
 10556  00361E  013E               	movlb	62	; () banked
 10557  003620  6FDE               	movwf	222,b	;volatile
 10558                           
 10559                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
 10560  003622  0E00               	movlw	0
 10561  003624  6FDF               	movwf	223,b	;volatile
 10562                           
 10563                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
 10564  003626  0E00               	movlw	0
 10565  003628  6FE0               	movwf	224,b	;volatile
 10566                           
 10567                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
 10568  00362A  0E00               	movlw	0
 10569  00362C  6FE1               	movwf	225,b	;volatile
 10570                           
 10571                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
 10572  00362E  0E00               	movlw	0
 10573  003630  6FE4               	movwf	228,b	;volatile
 10574                           
 10575                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
 10576  003632  0E00               	movlw	0
 10577  003634  6FE5               	movwf	229,b	;volatile
 10578                           
 10579                           ;mcc_generated_files/adcc.c: 78:     ADACCU = 0x00;
 10580  003636  0E00               	movlw	0
 10581  003638  6FEA               	movwf	234,b	;volatile
 10582                           
 10583                           ;mcc_generated_files/adcc.c: 80:     ADRPT = 0x00;
 10584  00363A  0E00               	movlw	0
 10585  00363C  6FEC               	movwf	236,b	;volatile
 10586                           
 10587                           ;mcc_generated_files/adcc.c: 82:     ADPCH = 0x00;
 10588  00363E  0E00               	movlw	0
 10589  003640  6FF1               	movwf	241,b	;volatile
 10590                           
 10591                           ;mcc_generated_files/adcc.c: 84:     ADACQL = 0x58;
 10592  003642  0E58               	movlw	88
 10593  003644  6FF3               	movwf	243,b	;volatile
 10594                           
 10595                           ;mcc_generated_files/adcc.c: 86:     ADACQH = 0x02;
 10596  003646  0E02               	movlw	2
 10597  003648  6FF4               	movwf	244,b	;volatile
 10598                           
 10599                           ;mcc_generated_files/adcc.c: 88:     ADCAP = 0x00;
 10600  00364A  0E00               	movlw	0
 10601  00364C  6FF5               	movwf	245,b	;volatile
 10602                           
 10603                           ;mcc_generated_files/adcc.c: 90:     ADPREL = 0x00;
 10604  00364E  0E00               	movlw	0
 10605  003650  6FF6               	movwf	246,b	;volatile
 10606                           
 10607                           ;mcc_generated_files/adcc.c: 92:     ADPREH = 0x00;
 10608  003652  0E00               	movlw	0
 10609  003654  6FF7               	movwf	247,b	;volatile
 10610                           
 10611                           ;mcc_generated_files/adcc.c: 94:     ADCON1 = 0x00;
 10612  003656  0E00               	movlw	0
 10613  003658  6FF9               	movwf	249,b	;volatile
 10614                           
 10615                           ;mcc_generated_files/adcc.c: 96:     ADCON2 = 0x00;
 10616  00365A  0E00               	movlw	0
 10617  00365C  6FFA               	movwf	250,b	;volatile
 10618                           
 10619                           ;mcc_generated_files/adcc.c: 98:     ADCON3 = 0x00;
 10620  00365E  0E00               	movlw	0
 10621  003660  6FFB               	movwf	251,b	;volatile
 10622                           
 10623                           ;mcc_generated_files/adcc.c: 100:     ADSTAT = 0x00;
 10624  003662  0E00               	movlw	0
 10625  003664  6FFC               	movwf	252,b	;volatile
 10626                           
 10627                           ;mcc_generated_files/adcc.c: 102:     ADREF = 0x00;
 10628  003666  0E00               	movlw	0
 10629  003668  6FFD               	movwf	253,b	;volatile
 10630                           
 10631                           ;mcc_generated_files/adcc.c: 104:     ADACT = 0x00;
 10632  00366A  0E00               	movlw	0
 10633  00366C  6FFE               	movwf	254,b	;volatile
 10634                           
 10635                           ;mcc_generated_files/adcc.c: 106:     ADCLK = 0x1F;
 10636  00366E  0E1F               	movlw	31
 10637  003670  6FFF               	movwf	255,b	;volatile
 10638                           
 10639                           ;mcc_generated_files/adcc.c: 108:     ADCON0 = 0x84;
 10640  003672  0E84               	movlw	132
 10641  003674  6FF8               	movwf	248,b	;volatile
 10642  003676                     
 10643                           ; BSR set to: 62
 10644  003676  0012               	return		;funcret
 10645  003678                     __end_of_ADCC_Initialize:
 10646                           	callstack 0
 10647                           
 10648 ;; *************** function _UART1_tx_vect_isr *****************
 10649 ;; Defined at:
 10650 ;;		line 235 in file "mcc_generated_files/uart1.c"
 10651 ;; Parameters:    Size  Location     Type
 10652 ;;		None
 10653 ;; Auto vars:     Size  Location     Type
 10654 ;;		None
 10655 ;; Return value:  Size  Location     Type
 10656 ;;                  1    wreg      void 
 10657 ;; Registers used:
 10658 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 10659 ;; Tracked objects:
 10660 ;;		On entry : 0/0
 10661 ;;		On exit  : 0/0
 10662 ;;		Unchanged: 0/0
 10663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10666 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10667 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10668 ;;Total ram usage:        3 bytes
 10669 ;; Hardware stack levels used: 1
 10670 ;; Hardware stack levels required when called: 5
 10671 ;; This function calls:
 10672 ;;		Absolute function
 10673 ;;		_UART1_Transmit_ISR
 10674 ;; This function is called by:
 10675 ;;		Interrupt level 1
 10676 ;; This function uses a non-reentrant model
 10677 ;;
 10678                           
 10679                           	psect	text64
 10680  0036CC                     __ptext64:
 10681                           	callstack 0
 10682  0036CC                     _UART1_tx_vect_isr:
 10683                           	callstack 14
 10684                           
 10685                           ; BSR set to: 62
 10686                           ;incstack = 0
 10687  0036CC  006F FF60  F017    	movff	status,??_UART1_tx_vect_isr
 10688  0036D2  006F FFE8  F018    	movff	pclath,??_UART1_tx_vect_isr+1
 10689  0036D8  006F FFEC  F019    	movff	pclatu,??_UART1_tx_vect_isr+2
 10690  0036DE                     
 10691                           ;mcc_generated_files/uart1.c: 237:     if(UART1_TxInterruptHandler)
 10692  0036DE  503C               	movf	_UART1_TxInterruptHandler^0,w,c
 10693  0036E0  103D               	iorwf	(_UART1_TxInterruptHandler+1)^0,w,c
 10694  0036E2  B4D8               	btfsc	status,2,c
 10695  0036E4  EF76  F01B         	goto	i1u415_21
 10696  0036E8  EF78  F01B         	goto	i1u415_20
 10697  0036EC                     i1u415_21:
 10698  0036EC  EF84  F01B         	goto	i1l324
 10699  0036F0                     i1u415_20:
 10700  0036F0                     
 10701                           ;mcc_generated_files/uart1.c: 238:     {;mcc_generated_files/uart1.c: 239:         UART1
      +                          _TxInterruptHandler();
 10702  0036F0  D802               	call	i1u416_28
 10703  0036F2  EF84  F01B         	goto	i1u416_29
 10704  0036F6                     i1u416_28:
 10705  0036F6  0005               	push	
 10706  0036F8  6EFA               	movwf	pclath,c
 10707  0036FA  503C               	movf	_UART1_TxInterruptHandler^0,w,c
 10708  0036FC  6EFD               	movwf	tosl,c
 10709  0036FE  503D               	movf	(_UART1_TxInterruptHandler+1)^0,w,c
 10710  003700  6EFE               	movwf	tosh,c
 10711  003702  6AFF               	clrf	tosu,c
 10712  003704  50FA               	movf	pclath,w,c
 10713  003706  0012               	return		;indir
 10714  003708                     i1u416_29:
 10715  003708                     i1l324:
 10716  003708  0060  F067  FFFB   	movff	??_UART1_tx_vect_isr+2,pclatu
 10717  00370E  0060  F063  FFFA   	movff	??_UART1_tx_vect_isr+1,pclath
 10718  003714  0060  F05F  FFD8   	movff	??_UART1_tx_vect_isr,status
 10719  00371A  0011               	retfie		f
 10720  00371C                     __end_of_UART1_tx_vect_isr:
 10721                           	callstack 0
 10722                           
 10723 ;; *************** function _UART1_Transmit_ISR *****************
 10724 ;; Defined at:
 10725 ;;		line 253 in file "mcc_generated_files/uart1.c"
 10726 ;; Parameters:    Size  Location     Type
 10727 ;;		None
 10728 ;; Auto vars:     Size  Location     Type
 10729 ;;		None
 10730 ;; Return value:  Size  Location     Type
 10731 ;;                  1    wreg      void 
 10732 ;; Registers used:
 10733 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10734 ;; Tracked objects:
 10735 ;;		On entry : 0/0
 10736 ;;		On exit  : 0/0
 10737 ;;		Unchanged: 0/0
 10738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10743 ;;Total ram usage:        0 bytes
 10744 ;; Hardware stack levels used: 1
 10745 ;; Hardware stack levels required when called: 4
 10746 ;; This function calls:
 10747 ;;		Nothing
 10748 ;; This function is called by:
 10749 ;;		_UART1_Initialize
 10750 ;;		_UART1_tx_vect_isr
 10751 ;; This function uses a non-reentrant model
 10752 ;;
 10753                           
 10754                           	psect	text65
 10755  003A10                     __ptext65:
 10756                           	callstack 0
 10757  003A10                     _UART1_Transmit_ISR:
 10758                           	callstack 14
 10759  003A10                     
 10760                           ;mcc_generated_files/uart1.c: 256:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
 10761  003A10  0E08               	movlw	8
 10762  003A12  6040               	cpfslt	_uart1TxBufferRemaining^0,c	;volatile
 10763  003A14  EF0E  F01D         	goto	i1u400_21
 10764  003A18  EF10  F01D         	goto	i1u400_20
 10765  003A1C                     i1u400_21:
 10766  003A1C  EF27  F01D         	goto	i1l333
 10767  003A20                     i1u400_20:
 10768  003A20                     
 10769                           ;mcc_generated_files/uart1.c: 257:     {;mcc_generated_files/uart1.c: 258:         U1TXB
      +                           = uart1TxBuffer[uart1TxTail++];
 10770  003A20  0EC4               	movlw	low _uart1TxBuffer
 10771  003A22  2432               	addwf	_uart1TxTail^0,w,c	;volatile
 10772  003A24  6ED9               	movwf	fsr2l,c
 10773  003A26  6ADA               	clrf	fsr2h,c
 10774  003A28  0E00               	movlw	high _uart1TxBuffer
 10775  003A2A  22DA               	addwfc	fsr2h,f,c
 10776  003A2C  50DF               	movf	indf2,w,c
 10777  003A2E  013D               	movlb	61	; () banked
 10778  003A30  6FEA               	movwf	234,b	;volatile
 10779  003A32                     
 10780                           ; BSR set to: 61
 10781  003A32  2A32               	incf	_uart1TxTail^0,f,c	;volatile
 10782  003A34                     
 10783                           ; BSR set to: 61
 10784                           ;mcc_generated_files/uart1.c: 259:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
 10785  003A34  0E07               	movlw	7
 10786  003A36  6432               	cpfsgt	_uart1TxTail^0,c	;volatile
 10787  003A38  EF20  F01D         	goto	i1u401_21
 10788  003A3C  EF22  F01D         	goto	i1u401_20
 10789  003A40                     i1u401_21:
 10790  003A40  EF24  F01D         	goto	i1l5272
 10791  003A44                     i1u401_20:
 10792  003A44                     
 10793                           ; BSR set to: 61
 10794                           ;mcc_generated_files/uart1.c: 260:         {;mcc_generated_files/uart1.c: 261:          
      +                             uart1TxTail = 0;
 10795  003A44  0E00               	movlw	0
 10796  003A46  6E32               	movwf	_uart1TxTail^0,c	;volatile
 10797  003A48                     i1l5272:
 10798                           
 10799                           ; BSR set to: 61
 10800                           ;mcc_generated_files/uart1.c: 263:         uart1TxBufferRemaining++;
 10801  003A48  2A40               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 10802                           
 10803                           ;mcc_generated_files/uart1.c: 264:     }
 10804  003A4A  EF29  F01D         	goto	i1l336
 10805  003A4E                     i1l333:
 10806                           
 10807                           ;mcc_generated_files/uart1.c: 266:     {;mcc_generated_files/uart1.c: 267:         PIE3b
      +                          its.U1TXIE = 0;
 10808  003A4E  0139               	movlb	57	; () banked
 10809  003A50  9993               	bcf	147,4,b	;volatile
 10810  003A52                     i1l336:
 10811  003A52  0012               	return		;funcret
 10812  003A54                     __end_of_UART1_Transmit_ISR:
 10813                           	callstack 0
 10814                           
 10815 ;; *************** function _UART1_rx_vect_isr *****************
 10816 ;; Defined at:
 10817 ;;		line 243 in file "mcc_generated_files/uart1.c"
 10818 ;; Parameters:    Size  Location     Type
 10819 ;;		None
 10820 ;; Auto vars:     Size  Location     Type
 10821 ;;		None
 10822 ;; Return value:  Size  Location     Type
 10823 ;;                  1    wreg      void 
 10824 ;; Registers used:
 10825 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 10826 ;; Tracked objects:
 10827 ;;		On entry : 0/0
 10828 ;;		On exit  : 0/0
 10829 ;;		Unchanged: 0/0
 10830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10833 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10834 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10835 ;;Total ram usage:        3 bytes
 10836 ;; Hardware stack levels used: 1
 10837 ;; Hardware stack levels required when called: 7
 10838 ;; This function calls:
 10839 ;;		Absolute function
 10840 ;;		_UART1_Receive_ISR
 10841 ;; This function is called by:
 10842 ;;		Interrupt level 1
 10843 ;; This function uses a non-reentrant model
 10844 ;;
 10845                           
 10846                           	psect	text66
 10847  00371C                     __ptext66:
 10848                           	callstack 0
 10849  00371C                     _UART1_rx_vect_isr:
 10850                           	callstack 12
 10851                           
 10852                           ;incstack = 0
 10853  00371C  006F FF60  F01A    	movff	status,??_UART1_rx_vect_isr
 10854  003722  006F FFE8  F01B    	movff	pclath,??_UART1_rx_vect_isr+1
 10855  003728  006F FFEC  F01C    	movff	pclatu,??_UART1_rx_vect_isr+2
 10856  00372E                     
 10857                           ;mcc_generated_files/uart1.c: 245:     if(UART1_RxInterruptHandler)
 10858  00372E  503E               	movf	_UART1_RxInterruptHandler^0,w,c
 10859  003730  103F               	iorwf	(_UART1_RxInterruptHandler+1)^0,w,c
 10860  003732  B4D8               	btfsc	status,2,c
 10861  003734  EF9E  F01B         	goto	i1u417_21
 10862  003738  EFA0  F01B         	goto	i1u417_20
 10863  00373C                     i1u417_21:
 10864  00373C  EFAC  F01B         	goto	i1l330
 10865  003740                     i1u417_20:
 10866  003740                     
 10867                           ;mcc_generated_files/uart1.c: 246:     {;mcc_generated_files/uart1.c: 247:         UART1
      +                          _RxInterruptHandler();
 10868  003740  D802               	call	i1u418_28
 10869  003742  EFAC  F01B         	goto	i1u418_29
 10870  003746                     i1u418_28:
 10871  003746  0005               	push	
 10872  003748  6EFA               	movwf	pclath,c
 10873  00374A  503E               	movf	_UART1_RxInterruptHandler^0,w,c
 10874  00374C  6EFD               	movwf	tosl,c
 10875  00374E  503F               	movf	(_UART1_RxInterruptHandler+1)^0,w,c
 10876  003750  6EFE               	movwf	tosh,c
 10877  003752  6AFF               	clrf	tosu,c
 10878  003754  50FA               	movf	pclath,w,c
 10879  003756  0012               	return		;indir
 10880  003758                     i1u418_29:
 10881  003758                     i1l330:
 10882  003758  0060  F073  FFFB   	movff	??_UART1_rx_vect_isr+2,pclatu
 10883  00375E  0060  F06F  FFFA   	movff	??_UART1_rx_vect_isr+1,pclath
 10884  003764  0060  F06B  FFD8   	movff	??_UART1_rx_vect_isr,status
 10885  00376A  0011               	retfie		f
 10886  00376C                     __end_of_UART1_rx_vect_isr:
 10887                           	callstack 0
 10888                           
 10889 ;; *************** function _UART1_Receive_ISR *****************
 10890 ;; Defined at:
 10891 ;;		line 273 in file "mcc_generated_files/uart1.c"
 10892 ;; Parameters:    Size  Location     Type
 10893 ;;		None
 10894 ;; Auto vars:     Size  Location     Type
 10895 ;;		None
 10896 ;; Return value:  Size  Location     Type
 10897 ;;                  1    wreg      void 
 10898 ;; Registers used:
 10899 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 10900 ;; Tracked objects:
 10901 ;;		On entry : 0/0
 10902 ;;		On exit  : 0/0
 10903 ;;		Unchanged: 0/0
 10904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10909 ;;Total ram usage:        0 bytes
 10910 ;; Hardware stack levels used: 1
 10911 ;; Hardware stack levels required when called: 6
 10912 ;; This function calls:
 10913 ;;		Absolute function
 10914 ;;		_UART1_DefaultErrorHandler
 10915 ;;		_UART1_DefaultFramingErrorHandler
 10916 ;;		_UART1_DefaultOverrunErrorHandler
 10917 ;;		_UART1_RxDataHandler
 10918 ;; This function is called by:
 10919 ;;		_UART1_Initialize
 10920 ;;		_UART1_rx_vect_isr
 10921 ;; This function uses a non-reentrant model
 10922 ;;
 10923                           
 10924                           	psect	text67
 10925  0031CC                     __ptext67:
 10926                           	callstack 0
 10927  0031CC                     _UART1_Receive_ISR:
 10928                           	callstack 12
 10929  0031CC                     
 10930                           ;mcc_generated_files/uart1.c: 276:     uart1RxStatusBuffer[uart1RxHead].status = 0;
 10931  0031CC  0EB4               	movlw	low _uart1RxStatusBuffer
 10932  0031CE  2431               	addwf	_uart1RxHead^0,w,c	;volatile
 10933  0031D0  6ED9               	movwf	fsr2l,c
 10934  0031D2  6ADA               	clrf	fsr2h,c
 10935  0031D4  0E00               	movlw	high _uart1RxStatusBuffer
 10936  0031D6  22DA               	addwfc	fsr2h,f,c
 10937  0031D8  0E00               	movlw	0
 10938  0031DA  6EDF               	movwf	indf2,c
 10939  0031DC                     
 10940                           ;mcc_generated_files/uart1.c: 278:     if(U1ERRIRbits.FERIF){
 10941  0031DC  013D               	movlb	61	; () banked
 10942  0031DE  A7F9               	btfss	249,3,b	;volatile
 10943  0031E0  EFF4  F018         	goto	i1u402_21
 10944  0031E4  EFF6  F018         	goto	i1u402_20
 10945  0031E8                     i1u402_21:
 10946  0031E8  EF0A  F019         	goto	i1l5282
 10947  0031EC                     i1u402_20:
 10948  0031EC                     
 10949                           ; BSR set to: 61
 10950                           ;mcc_generated_files/uart1.c: 279:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
 10951  0031EC  0EB4               	movlw	low _uart1RxStatusBuffer
 10952  0031EE  2431               	addwf	_uart1RxHead^0,w,c	;volatile
 10953  0031F0  6ED9               	movwf	fsr2l,c
 10954  0031F2  6ADA               	clrf	fsr2h,c
 10955  0031F4  0E00               	movlw	high _uart1RxStatusBuffer
 10956  0031F6  22DA               	addwfc	fsr2h,f,c
 10957  0031F8  0100               	movlb	0	; () banked
 10958  0031FA  82DF               	bsf	indf2,1,c
 10959  0031FC                     
 10960                           ; BSR set to: 0
 10961                           ;mcc_generated_files/uart1.c: 280:         UART1_FramingErrorHandler();
 10962  0031FC  D802               	call	i1u403_28
 10963  0031FE  EF0A  F019         	goto	i1u403_29
 10964  003202                     i1u403_28:
 10965  003202  0005               	push	
 10966  003204  6EFA               	movwf	pclath,c
 10967  003206  51FE               	movf	_UART1_FramingErrorHandler& (0+255),w,b
 10968  003208  6EFD               	movwf	tosl,c
 10969  00320A  51FF               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
 10970  00320C  6EFE               	movwf	tosh,c
 10971  00320E  6AFF               	clrf	tosu,c
 10972  003210  50FA               	movf	pclath,w,c
 10973  003212  0012               	return		;indir
 10974  003214                     i1u403_29:
 10975  003214                     i1l5282:
 10976                           
 10977                           ;mcc_generated_files/uart1.c: 283:     if(U1ERRIRbits.RXFOIF){
 10978  003214  013D               	movlb	61	; () banked
 10979  003216  A3F9               	btfss	249,1,b	;volatile
 10980  003218  EF10  F019         	goto	i1u404_21
 10981  00321C  EF12  F019         	goto	i1u404_20
 10982  003220                     i1u404_21:
 10983  003220  EF26  F019         	goto	i1l5288
 10984  003224                     i1u404_20:
 10985  003224                     
 10986                           ; BSR set to: 61
 10987                           ;mcc_generated_files/uart1.c: 284:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
 10988  003224  0EB4               	movlw	low _uart1RxStatusBuffer
 10989  003226  2431               	addwf	_uart1RxHead^0,w,c	;volatile
 10990  003228  6ED9               	movwf	fsr2l,c
 10991  00322A  6ADA               	clrf	fsr2h,c
 10992  00322C  0E00               	movlw	high _uart1RxStatusBuffer
 10993  00322E  22DA               	addwfc	fsr2h,f,c
 10994  003230  0100               	movlb	0	; () banked
 10995  003232  84DF               	bsf	indf2,2,c
 10996  003234                     
 10997                           ; BSR set to: 0
 10998                           ;mcc_generated_files/uart1.c: 285:         UART1_OverrunErrorHandler();
 10999  003234  D802               	call	i1u405_28
 11000  003236  EF26  F019         	goto	i1u405_29
 11001  00323A                     i1u405_28:
 11002  00323A  0005               	push	
 11003  00323C  6EFA               	movwf	pclath,c
 11004  00323E  51FC               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
 11005  003240  6EFD               	movwf	tosl,c
 11006  003242  51FD               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
 11007  003244  6EFE               	movwf	tosh,c
 11008  003246  6AFF               	clrf	tosu,c
 11009  003248  50FA               	movf	pclath,w,c
 11010  00324A  0012               	return		;indir
 11011  00324C                     i1u405_29:
 11012  00324C                     i1l5288:
 11013                           
 11014                           ;mcc_generated_files/uart1.c: 288:     if(uart1RxStatusBuffer[uart1RxHead].status){
 11015  00324C  0EB4               	movlw	low _uart1RxStatusBuffer
 11016  00324E  2431               	addwf	_uart1RxHead^0,w,c	;volatile
 11017  003250  6ED9               	movwf	fsr2l,c
 11018  003252  6ADA               	clrf	fsr2h,c
 11019  003254  0E00               	movlw	high _uart1RxStatusBuffer
 11020  003256  22DA               	addwfc	fsr2h,f,c
 11021  003258  50DF               	movf	indf2,w,c
 11022  00325A  B4D8               	btfsc	status,2,c
 11023  00325C  EF32  F019         	goto	i1u406_21
 11024  003260  EF34  F019         	goto	i1u406_20
 11025  003264                     i1u406_21:
 11026  003264  EF43  F019         	goto	i1l5292
 11027  003268                     i1u406_20:
 11028  003268                     
 11029                           ;mcc_generated_files/uart1.c: 289:         UART1_ErrorHandler();
 11030  003268  D802               	call	i1u407_28
 11031  00326A  EF41  F019         	goto	i1u407_29
 11032  00326E                     i1u407_28:
 11033  00326E  0005               	push	
 11034  003270  6EFA               	movwf	pclath,c
 11035  003272  0100               	movlb	0	; () banked
 11036  003274  51FA               	movf	_UART1_ErrorHandler& (0+255),w,b
 11037  003276  6EFD               	movwf	tosl,c
 11038  003278  51FB               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
 11039  00327A  6EFE               	movwf	tosh,c
 11040  00327C  6AFF               	clrf	tosu,c
 11041  00327E  50FA               	movf	pclath,w,c
 11042  003280  0012               	return		;indir
 11043  003282                     i1u407_29:
 11044                           
 11045                           ;mcc_generated_files/uart1.c: 290:     } else {
 11046  003282  EF45  F019         	goto	i1l343
 11047  003286                     i1l5292:
 11048                           
 11049                           ;mcc_generated_files/uart1.c: 291:         UART1_RxDataHandler();
 11050  003286  ECE3  F01E         	call	_UART1_RxDataHandler	;wreg free
 11051  00328A                     i1l343:
 11052  00328A  0012               	return		;funcret
 11053  00328C                     __end_of_UART1_Receive_ISR:
 11054                           	callstack 0
 11055                           
 11056 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
 11057 ;; Defined at:
 11058 ;;		line 309 in file "mcc_generated_files/uart1.c"
 11059 ;; Parameters:    Size  Location     Type
 11060 ;;		None
 11061 ;; Auto vars:     Size  Location     Type
 11062 ;;		None
 11063 ;; Return value:  Size  Location     Type
 11064 ;;                  1    wreg      void 
 11065 ;; Registers used:
 11066 ;;		None
 11067 ;; Tracked objects:
 11068 ;;		On entry : 0/0
 11069 ;;		On exit  : 0/0
 11070 ;;		Unchanged: 0/0
 11071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11076 ;;Total ram usage:        0 bytes
 11077 ;; Hardware stack levels used: 1
 11078 ;; Hardware stack levels required when called: 4
 11079 ;; This function calls:
 11080 ;;		Nothing
 11081 ;; This function is called by:
 11082 ;;		_UART1_Initialize
 11083 ;;		_UART1_Receive_ISR
 11084 ;; This function uses a non-reentrant model
 11085 ;;
 11086                           
 11087                           	psect	text68
 11088  00402E                     __ptext68:
 11089                           	callstack 0
 11090  00402E                     _UART1_DefaultOverrunErrorHandler:
 11091                           	callstack 13
 11092  00402E  0012               	return		;funcret
 11093  004030                     __end_of_UART1_DefaultOverrunErrorHandler:
 11094                           	callstack 0
 11095                           
 11096 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
 11097 ;; Defined at:
 11098 ;;		line 307 in file "mcc_generated_files/uart1.c"
 11099 ;; Parameters:    Size  Location     Type
 11100 ;;		None
 11101 ;; Auto vars:     Size  Location     Type
 11102 ;;		None
 11103 ;; Return value:  Size  Location     Type
 11104 ;;                  1    wreg      void 
 11105 ;; Registers used:
 11106 ;;		None
 11107 ;; Tracked objects:
 11108 ;;		On entry : 0/0
 11109 ;;		On exit  : 0/0
 11110 ;;		Unchanged: 0/0
 11111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11116 ;;Total ram usage:        0 bytes
 11117 ;; Hardware stack levels used: 1
 11118 ;; Hardware stack levels required when called: 4
 11119 ;; This function calls:
 11120 ;;		Nothing
 11121 ;; This function is called by:
 11122 ;;		_UART1_Initialize
 11123 ;;		_UART1_Receive_ISR
 11124 ;; This function uses a non-reentrant model
 11125 ;;
 11126                           
 11127                           	psect	text69
 11128  004030                     __ptext69:
 11129                           	callstack 0
 11130  004030                     _UART1_DefaultFramingErrorHandler:
 11131                           	callstack 13
 11132  004030  0012               	return		;funcret
 11133  004032                     __end_of_UART1_DefaultFramingErrorHandler:
 11134                           	callstack 0
 11135                           
 11136 ;; *************** function _UART1_DefaultErrorHandler *****************
 11137 ;; Defined at:
 11138 ;;		line 311 in file "mcc_generated_files/uart1.c"
 11139 ;; Parameters:    Size  Location     Type
 11140 ;;		None
 11141 ;; Auto vars:     Size  Location     Type
 11142 ;;		None
 11143 ;; Return value:  Size  Location     Type
 11144 ;;                  1    wreg      void 
 11145 ;; Registers used:
 11146 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11147 ;; Tracked objects:
 11148 ;;		On entry : 0/0
 11149 ;;		On exit  : 0/0
 11150 ;;		Unchanged: 0/0
 11151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11156 ;;Total ram usage:        0 bytes
 11157 ;; Hardware stack levels used: 1
 11158 ;; Hardware stack levels required when called: 5
 11159 ;; This function calls:
 11160 ;;		_UART1_RxDataHandler
 11161 ;; This function is called by:
 11162 ;;		_UART1_Initialize
 11163 ;;		_UART1_Receive_ISR
 11164 ;; This function uses a non-reentrant model
 11165 ;;
 11166                           
 11167                           	psect	text70
 11168  004022                     __ptext70:
 11169                           	callstack 0
 11170  004022                     _UART1_DefaultErrorHandler:
 11171                           	callstack 12
 11172  004022                     
 11173                           ;mcc_generated_files/uart1.c: 312:     UART1_RxDataHandler();
 11174  004022  ECE3  F01E         	call	_UART1_RxDataHandler	;wreg free
 11175  004026  0012               	return		;funcret
 11176  004028                     __end_of_UART1_DefaultErrorHandler:
 11177                           	callstack 0
 11178                           
 11179 ;; *************** function _UART1_RxDataHandler *****************
 11180 ;; Defined at:
 11181 ;;		line 297 in file "mcc_generated_files/uart1.c"
 11182 ;; Parameters:    Size  Location     Type
 11183 ;;		None
 11184 ;; Auto vars:     Size  Location     Type
 11185 ;;		None
 11186 ;; Return value:  Size  Location     Type
 11187 ;;                  1    wreg      void 
 11188 ;; Registers used:
 11189 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11190 ;; Tracked objects:
 11191 ;;		On entry : 0/0
 11192 ;;		On exit  : 0/0
 11193 ;;		Unchanged: 0/0
 11194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11199 ;;Total ram usage:        0 bytes
 11200 ;; Hardware stack levels used: 1
 11201 ;; Hardware stack levels required when called: 4
 11202 ;; This function calls:
 11203 ;;		Nothing
 11204 ;; This function is called by:
 11205 ;;		_UART1_Receive_ISR
 11206 ;;		_UART1_DefaultErrorHandler
 11207 ;; This function uses a non-reentrant model
 11208 ;;
 11209                           
 11210                           	psect	text71
 11211  003DC6                     __ptext71:
 11212                           	callstack 0
 11213  003DC6                     _UART1_RxDataHandler:
 11214                           	callstack 13
 11215  003DC6                     
 11216                           ;mcc_generated_files/uart1.c: 299:     uart1RxBuffer[uart1RxHead++] = U1RXB;
 11217  003DC6  0EBC               	movlw	low _uart1RxBuffer
 11218  003DC8  2431               	addwf	_uart1RxHead^0,w,c	;volatile
 11219  003DCA  6ED9               	movwf	fsr2l,c
 11220  003DCC  6ADA               	clrf	fsr2h,c
 11221  003DCE  0E00               	movlw	high _uart1RxBuffer
 11222  003DD0  22DA               	addwfc	fsr2h,f,c
 11223  003DD2  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 11224  003DD8  2A31               	incf	_uart1RxHead^0,f,c	;volatile
 11225  003DDA                     
 11226                           ;mcc_generated_files/uart1.c: 300:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 11227  003DDA  0E07               	movlw	7
 11228  003DDC  6431               	cpfsgt	_uart1RxHead^0,c	;volatile
 11229  003DDE  EFF3  F01E         	goto	i1u278_21
 11230  003DE2  EFF5  F01E         	goto	i1u278_20
 11231  003DE6                     i1u278_21:
 11232  003DE6  EFF7  F01E         	goto	i1l4358
 11233  003DEA                     i1u278_20:
 11234  003DEA                     
 11235                           ;mcc_generated_files/uart1.c: 301:     {;mcc_generated_files/uart1.c: 302:         uart1
      +                          RxHead = 0;
 11236  003DEA  0E00               	movlw	0
 11237  003DEC  6E31               	movwf	_uart1RxHead^0,c	;volatile
 11238  003DEE                     i1l4358:
 11239                           
 11240                           ;mcc_generated_files/uart1.c: 304:     uart1RxCount++;
 11241  003DEE  2A2F               	incf	_uart1RxCount^0,f,c	;volatile
 11242  003DF0  0012               	return		;funcret
 11243  003DF2                     __end_of_UART1_RxDataHandler:
 11244                           	callstack 0
 11245                           
 11246 ;; *************** function _TMR4_ISR *****************
 11247 ;; Defined at:
 11248 ;;		line 166 in file "mcc_generated_files/tmr4.c"
 11249 ;; Parameters:    Size  Location     Type
 11250 ;;		None
 11251 ;; Auto vars:     Size  Location     Type
 11252 ;;		None
 11253 ;; Return value:  Size  Location     Type
 11254 ;;                  1    wreg      void 
 11255 ;; Registers used:
 11256 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 11257 ;; Tracked objects:
 11258 ;;		On entry : 0/0
 11259 ;;		On exit  : 0/0
 11260 ;;		Unchanged: 0/0
 11261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11264 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11265 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11266 ;;Total ram usage:        3 bytes
 11267 ;; Hardware stack levels used: 1
 11268 ;; Hardware stack levels required when called: 6
 11269 ;; This function calls:
 11270 ;;		_TMR4_CallBack
 11271 ;; This function is called by:
 11272 ;;		Interrupt level 1
 11273 ;; This function uses a non-reentrant model
 11274 ;;
 11275                           
 11276                           	psect	text72
 11277  00376C                     __ptext72:
 11278                           	callstack 0
 11279  00376C                     _TMR4_ISR:
 11280                           	callstack 13
 11281                           
 11282                           ;incstack = 0
 11283  00376C  006F FF60  F01D    	movff	status,??_TMR4_ISR
 11284  003772  006F FFE8  F01E    	movff	pclath,??_TMR4_ISR+1
 11285  003778  006F FFEC  F01F    	movff	pclatu,??_TMR4_ISR+2
 11286  00377E                     
 11287                           ;mcc_generated_files/tmr4.c: 168:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr4.c: 171:     PIR7bits.TMR4IF = 0;
 11288  00377E  0139               	movlb	57	; () banked
 11289  003780  91A7               	bcf	167,0,b	;volatile
 11290  003782                     
 11291                           ; BSR set to: 57
 11292                           ;mcc_generated_files/tmr4.c: 174:     if (++CountCallBack >= 10)
 11293  003782  4A27               	infsnz	TMR4_ISR@CountCallBack^0,f,c	;volatile
 11294  003784  2A28               	incf	(TMR4_ISR@CountCallBack+1)^0,f,c	;volatile
 11295  003786  5028               	movf	(TMR4_ISR@CountCallBack+1)^0,w,c	;volatile
 11296  003788  E109               	bnz	i1u423_20
 11297  00378A  0E0A               	movlw	10
 11298  00378C  5C27               	subwf	TMR4_ISR@CountCallBack^0,w,c	;volatile
 11299  00378E  A0D8               	btfss	status,0,c
 11300  003790  EFCC  F01B         	goto	i1u423_21
 11301  003794  EFCE  F01B         	goto	i1u423_20
 11302  003798                     i1u423_21:
 11303  003798  EFD4  F01B         	goto	i1l688
 11304  00379C                     i1u423_20:
 11305  00379C                     
 11306                           ; BSR set to: 57
 11307                           ;mcc_generated_files/tmr4.c: 175:     {;mcc_generated_files/tmr4.c: 177:         TMR4_Ca
      +                          llBack();
 11308  00379C  ECA0  F01E         	call	_TMR4_CallBack	;wreg free
 11309  0037A0                     
 11310                           ;mcc_generated_files/tmr4.c: 180:         CountCallBack = 0;
 11311  0037A0  0E00               	movlw	0
 11312  0037A2  6E28               	movwf	(TMR4_ISR@CountCallBack+1)^0,c	;volatile
 11313  0037A4  0E00               	movlw	0
 11314  0037A6  6E27               	movwf	TMR4_ISR@CountCallBack^0,c	;volatile
 11315  0037A8                     i1l688:
 11316  0037A8  0060  F07F  FFFB   	movff	??_TMR4_ISR+2,pclatu
 11317  0037AE  0060  F07B  FFFA   	movff	??_TMR4_ISR+1,pclath
 11318  0037B4  0060  F077  FFD8   	movff	??_TMR4_ISR,status
 11319  0037BA  0011               	retfie		f
 11320  0037BC                     __end_of_TMR4_ISR:
 11321                           	callstack 0
 11322                           
 11323 ;; *************** function _TMR4_CallBack *****************
 11324 ;; Defined at:
 11325 ;;		line 184 in file "mcc_generated_files/tmr4.c"
 11326 ;; Parameters:    Size  Location     Type
 11327 ;;		None
 11328 ;; Auto vars:     Size  Location     Type
 11329 ;;		None
 11330 ;; Return value:  Size  Location     Type
 11331 ;;                  1    wreg      void 
 11332 ;; Registers used:
 11333 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 11334 ;; Tracked objects:
 11335 ;;		On entry : 0/0
 11336 ;;		On exit  : 0/0
 11337 ;;		Unchanged: 0/0
 11338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11343 ;;Total ram usage:        0 bytes
 11344 ;; Hardware stack levels used: 1
 11345 ;; Hardware stack levels required when called: 5
 11346 ;; This function calls:
 11347 ;;		Absolute function
 11348 ;;		_TMR4_10msISR
 11349 ;;		_TMR4_DefaultInterruptHandler
 11350 ;; This function is called by:
 11351 ;;		_TMR4_ISR
 11352 ;; This function uses a non-reentrant model
 11353 ;;
 11354                           
 11355                           	psect	text73
 11356  003D40                     __ptext73:
 11357                           	callstack 0
 11358  003D40                     _TMR4_CallBack:
 11359                           	callstack 13
 11360  003D40                     
 11361                           ;mcc_generated_files/tmr4.c: 188:     if(TMR4_InterruptHandler)
 11362  003D40  0100               	movlb	0	; () banked
 11363  003D42  51F2               	movf	_TMR4_InterruptHandler& (0+255),w,b
 11364  003D44  11F3               	iorwf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 11365  003D46  B4D8               	btfsc	status,2,c
 11366  003D48  EFA8  F01E         	goto	i1u411_21
 11367  003D4C  EFAA  F01E         	goto	i1u411_20
 11368  003D50                     i1u411_21:
 11369  003D50  EFB6  F01E         	goto	i1l692
 11370  003D54                     i1u411_20:
 11371  003D54                     
 11372                           ; BSR set to: 0
 11373                           ;mcc_generated_files/tmr4.c: 189:     {;mcc_generated_files/tmr4.c: 190:         TMR4_In
      +                          terruptHandler();
 11374  003D54  D802               	call	i1u412_28
 11375  003D56  EFB6  F01E         	goto	i1u412_29
 11376  003D5A                     i1u412_28:
 11377  003D5A  0005               	push	
 11378  003D5C  6EFA               	movwf	pclath,c
 11379  003D5E  51F2               	movf	_TMR4_InterruptHandler& (0+255),w,b
 11380  003D60  6EFD               	movwf	tosl,c
 11381  003D62  51F3               	movf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 11382  003D64  6EFE               	movwf	tosh,c
 11383  003D66  6AFF               	clrf	tosu,c
 11384  003D68  50FA               	movf	pclath,w,c
 11385  003D6A  0012               	return		;indir
 11386  003D6C                     i1u412_29:
 11387  003D6C                     i1l692:
 11388  003D6C  0012               	return		;funcret
 11389  003D6E                     __end_of_TMR4_CallBack:
 11390                           	callstack 0
 11391                           
 11392 ;; *************** function _TMR4_10msISR *****************
 11393 ;; Defined at:
 11394 ;;		line 58 in file "main.c"
 11395 ;; Parameters:    Size  Location     Type
 11396 ;;		None
 11397 ;; Auto vars:     Size  Location     Type
 11398 ;;		None
 11399 ;; Return value:  Size  Location     Type
 11400 ;;                  1    wreg      void 
 11401 ;; Registers used:
 11402 ;;		status,2, status,0
 11403 ;; Tracked objects:
 11404 ;;		On entry : 0/0
 11405 ;;		On exit  : 0/0
 11406 ;;		Unchanged: 0/0
 11407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11411 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11412 ;;Total ram usage:        0 bytes
 11413 ;; Hardware stack levels used: 1
 11414 ;; Hardware stack levels required when called: 4
 11415 ;; This function calls:
 11416 ;;		Nothing
 11417 ;; This function is called by:
 11418 ;;		_main
 11419 ;;		_TMR4_CallBack
 11420 ;; This function uses a non-reentrant model
 11421 ;;
 11422                           
 11423                           	psect	text74
 11424  004028                     __ptext74:
 11425                           	callstack 0
 11426  004028                     _TMR4_10msISR:
 11427                           	callstack 13
 11428  004028                     
 11429                           ;main.c: 59:     ++cycle10ms;
 11430  004028  0100               	movlb	0	; () banked
 11431  00402A  2BEB               	incf	_cycle10ms& (0+255),f,b
 11432  00402C                     
 11433                           ; BSR set to: 0
 11434  00402C  0012               	return		;funcret
 11435  00402E                     __end_of_TMR4_10msISR:
 11436                           	callstack 0
 11437                           
 11438 ;; *************** function _TMR4_DefaultInterruptHandler *****************
 11439 ;; Defined at:
 11440 ;;		line 198 in file "mcc_generated_files/tmr4.c"
 11441 ;; Parameters:    Size  Location     Type
 11442 ;;		None
 11443 ;; Auto vars:     Size  Location     Type
 11444 ;;		None
 11445 ;; Return value:  Size  Location     Type
 11446 ;;                  1    wreg      void 
 11447 ;; Registers used:
 11448 ;;		None
 11449 ;; Tracked objects:
 11450 ;;		On entry : 0/0
 11451 ;;		On exit  : 0/0
 11452 ;;		Unchanged: 0/0
 11453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11458 ;;Total ram usage:        0 bytes
 11459 ;; Hardware stack levels used: 1
 11460 ;; Hardware stack levels required when called: 4
 11461 ;; This function calls:
 11462 ;;		Nothing
 11463 ;; This function is called by:
 11464 ;;		_TMR4_Initialize
 11465 ;;		_TMR4_CallBack
 11466 ;; This function uses a non-reentrant model
 11467 ;;
 11468                           
 11469                           	psect	text75
 11470  004032                     __ptext75:
 11471                           	callstack 0
 11472  004032                     _TMR4_DefaultInterruptHandler:
 11473                           	callstack 13
 11474  004032  0012               	return		;funcret
 11475  004034                     __end_of_TMR4_DefaultInterruptHandler:
 11476                           	callstack 0
 11477                           
 11478 ;; *************** function _Default_ISR *****************
 11479 ;; Defined at:
 11480 ;;		line 83 in file "mcc_generated_files/interrupt_manager.c"
 11481 ;; Parameters:    Size  Location     Type
 11482 ;;		None
 11483 ;; Auto vars:     Size  Location     Type
 11484 ;;		None
 11485 ;; Return value:  Size  Location     Type
 11486 ;;                  1    wreg      void 
 11487 ;; Registers used:
 11488 ;;		None
 11489 ;; Tracked objects:
 11490 ;;		On entry : 0/0
 11491 ;;		On exit  : 0/0
 11492 ;;		Unchanged: 0/0
 11493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11498 ;;Total ram usage:        0 bytes
 11499 ;; Hardware stack levels used: 1
 11500 ;; This function calls:
 11501 ;;		Nothing
 11502 ;; This function is called by:
 11503 ;;		Interrupt level 2
 11504 ;; This function uses a non-reentrant model
 11505 ;;
 11506                           
 11507                           	psect	text76
 11508  004034                     __ptext76:
 11509                           	callstack 0
 11510  004034                     _Default_ISR:
 11511                           	callstack 15
 11512  004034  0011               	retfie		f
 11513  004036                     __end_of_Default_ISR:
 11514                           	callstack 0
 11515                           
 11516 ;; *************** function _CCP3_CaptureISR *****************
 11517 ;; Defined at:
 11518 ;;		line 104 in file "mcc_generated_files/ccp3.c"
 11519 ;; Parameters:    Size  Location     Type
 11520 ;;		None
 11521 ;; Auto vars:     Size  Location     Type
 11522 ;;  module          2    4[COMRAM] struct CCPR3Reg_tag
 11523 ;; Return value:  Size  Location     Type
 11524 ;;                  1    wreg      void 
 11525 ;; Registers used:
 11526 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 11527 ;; Tracked objects:
 11528 ;;		On entry : 0/0
 11529 ;;		On exit  : 0/0
 11530 ;;		Unchanged: 0/0
 11531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11533 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11534 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11535 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11536 ;;Total ram usage:        4 bytes
 11537 ;; Hardware stack levels used: 1
 11538 ;; Hardware stack levels required when called: 1
 11539 ;; This function calls:
 11540 ;;		Absolute function
 11541 ;;		_CCP3_DefaultCallBack
 11542 ;; This function is called by:
 11543 ;;		Interrupt level 2
 11544 ;; This function uses a non-reentrant model
 11545 ;;
 11546                           
 11547                           	psect	text77
 11548  003808                     __ptext77:
 11549                           	callstack 0
 11550  003808                     _CCP3_CaptureISR:
 11551                           	callstack 14
 11552                           
 11553                           ;incstack = 0
 11554  003808  006F FFE8  F003    	movff	pclath,??_CCP3_CaptureISR
 11555  00380E  006F FFEC  F004    	movff	pclatu,??_CCP3_CaptureISR+1
 11556  003814                     
 11557                           ;mcc_generated_files/ccp3.c: 106:     CCP3_PERIOD_REG_T module;;mcc_generated_files/ccp3
      +                          .c: 109:     PIR9bits.CCP3IF = 0;
 11558  003814  0139               	movlb	57	; () banked
 11559  003816  93A9               	bcf	169,1,b	;volatile
 11560                           
 11561                           ;mcc_generated_files/ccp3.c: 112:     module.ccpr3l = CCPR3L;
 11562  003818  006F FDD0  F005    	movff	16244,CCP3_CaptureISR@module	;volatile
 11563                           
 11564                           ;mcc_generated_files/ccp3.c: 113:     module.ccpr3h = CCPR3H;
 11565  00381E  006F FDD4  F006    	movff	16245,CCP3_CaptureISR@module+1	;volatile
 11566  003824                     
 11567                           ; BSR set to: 57
 11568                           ;mcc_generated_files/ccp3.c: 116:     CCP3_CallBack(module.ccpr3_16Bit);
 11569  003824  C005  F001         	movff	CCP3_CaptureISR@module,CCP3_DefaultCallBack@capturedValue
 11570  003828  C006  F002         	movff	CCP3_CaptureISR@module+1,CCP3_DefaultCallBack@capturedValue+1
 11571  00382C  D802               	call	i2u419_48
 11572  00382E  EF23  F01C         	goto	i2u419_49
 11573  003832                     i2u419_48:
 11574  003832  0005               	push	
 11575  003834  6EFA               	movwf	pclath,c
 11576  003836  0100               	movlb	0	; () banked
 11577  003838  51F8               	movf	_CCP3_CallBack& (0+255),w,b
 11578  00383A  6EFD               	movwf	tosl,c
 11579  00383C  51F9               	movf	(_CCP3_CallBack+1)& (0+255),w,b
 11580  00383E  6EFE               	movwf	tosh,c
 11581  003840  6AFF               	clrf	tosu,c
 11582  003842  50FA               	movf	pclath,w,c
 11583  003844  0012               	return		;indir
 11584  003846                     i2u419_49:
 11585  003846  0060  F013  FFFB   	movff	??_CCP3_CaptureISR+1,pclatu
 11586  00384C  0060  F00F  FFFA   	movff	??_CCP3_CaptureISR,pclath
 11587  003852  0011               	retfie		f
 11588  003854                     __end_of_CCP3_CaptureISR:
 11589                           	callstack 0
 11590                           
 11591 ;; *************** function _CCP3_DefaultCallBack *****************
 11592 ;; Defined at:
 11593 ;;		line 64 in file "mcc_generated_files/ccp3.c"
 11594 ;; Parameters:    Size  Location     Type
 11595 ;;  capturedValu    2    0[COMRAM] unsigned short 
 11596 ;; Auto vars:     Size  Location     Type
 11597 ;;		None
 11598 ;; Return value:  Size  Location     Type
 11599 ;;                  1    wreg      void 
 11600 ;; Registers used:
 11601 ;;		wreg, status,2, status,0
 11602 ;; Tracked objects:
 11603 ;;		On entry : 0/0
 11604 ;;		On exit  : 0/0
 11605 ;;		Unchanged: 0/0
 11606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11607 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11610 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11611 ;;Total ram usage:        2 bytes
 11612 ;; Hardware stack levels used: 1
 11613 ;; This function calls:
 11614 ;;		Nothing
 11615 ;; This function is called by:
 11616 ;;		_CCP3_Initialize
 11617 ;;		_CCP3_CaptureISR
 11618 ;; This function uses a non-reentrant model
 11619 ;;
 11620                           
 11621                           	psect	text78
 11622  003C84                     __ptext78:
 11623                           	callstack 0
 11624  003C84                     _CCP3_DefaultCallBack:
 11625                           	callstack 14
 11626  003C84                     
 11627                           ;mcc_generated_files/ccp3.c: 64: static void CCP3_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp3.c: 65: {;mcc_generated_files/ccp3.c: 67:     if(PORTDbits.RD7
      +                          ) {
 11628  003C84  AECD               	btfss	205,7,c	;volatile
 11629  003C86  EF47  F01E         	goto	i2u408_41
 11630  003C8A  EF49  F01E         	goto	i2u408_40
 11631  003C8E                     i2u408_41:
 11632  003C8E  EF4F  F01E         	goto	i2l5298
 11633  003C92                     i2u408_40:
 11634  003C92                     
 11635                           ;mcc_generated_files/ccp3.c: 68:         distLeftM = capturedValue;
 11636  003C92  C001  F02B         	movff	CCP3_DefaultCallBack@capturedValue,_distLeftM
 11637  003C96  C002  F02C         	movff	CCP3_DefaultCallBack@capturedValue+1,_distLeftM+1
 11638                           
 11639                           ;mcc_generated_files/ccp3.c: 69:     } else {
 11640  003C9A  EF59  F01E         	goto	i2l438
 11641  003C9E                     i2l5298:
 11642                           
 11643                           ;mcc_generated_files/ccp3.c: 70:         distLeft = capturedValue - distLeftM;
 11644  003C9E  502B               	movf	_distLeftM^0,w,c
 11645  003CA0  5C01               	subwf	CCP3_DefaultCallBack@capturedValue^0,w,c
 11646  003CA2  0100               	movlb	0	; () banked
 11647  003CA4  6FE8               	movwf	_distLeft& (0+255),b	;volatile
 11648  003CA6  502C               	movf	(_distLeftM+1)^0,w,c
 11649  003CA8  5802               	subwfb	(CCP3_DefaultCallBack@capturedValue+1)^0,w,c
 11650  003CAA  6FE9               	movwf	(_distLeft+1)& (0+255),b	;volatile
 11651  003CAC                     
 11652                           ; BSR set to: 0
 11653                           ;mcc_generated_files/ccp3.c: 71:         distLeft >>= 1;
 11654  003CAC  90D8               	bcf	status,0,c
 11655  003CAE  33E9               	rrcf	(_distLeft+1)& (0+255),f,b	;volatile
 11656  003CB0  33E8               	rrcf	_distLeft& (0+255),f,b	;volatile
 11657  003CB2                     i2l438:
 11658  003CB2  0012               	return		;funcret
 11659  003CB4                     __end_of_CCP3_DefaultCallBack:
 11660                           	callstack 0
 11661                           
 11662 ;; *************** function _CCP4_CaptureISR *****************
 11663 ;; Defined at:
 11664 ;;		line 107 in file "mcc_generated_files/ccp4.c"
 11665 ;; Parameters:    Size  Location     Type
 11666 ;;		None
 11667 ;; Auto vars:     Size  Location     Type
 11668 ;;  module          2   10[COMRAM] struct CCPR4Reg_tag
 11669 ;; Return value:  Size  Location     Type
 11670 ;;                  1    wreg      void 
 11671 ;; Registers used:
 11672 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 11673 ;; Tracked objects:
 11674 ;;		On entry : 0/0
 11675 ;;		On exit  : 0/0
 11676 ;;		Unchanged: 0/0
 11677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11679 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11680 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11681 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11682 ;;Total ram usage:        4 bytes
 11683 ;; Hardware stack levels used: 1
 11684 ;; Hardware stack levels required when called: 1
 11685 ;; This function calls:
 11686 ;;		Absolute function
 11687 ;;		_CCP4_DefaultCallBack
 11688 ;; This function is called by:
 11689 ;;		Interrupt level 2
 11690 ;; This function uses a non-reentrant model
 11691 ;;
 11692                           
 11693                           	psect	text79
 11694  003854                     __ptext79:
 11695                           	callstack 0
 11696  003854                     _CCP4_CaptureISR:
 11697                           	callstack 14
 11698                           
 11699                           ;incstack = 0
 11700  003854  006F FFE8  F009    	movff	pclath,??_CCP4_CaptureISR
 11701  00385A  006F FFEC  F00A    	movff	pclatu,??_CCP4_CaptureISR+1
 11702  003860                     
 11703                           ;mcc_generated_files/ccp4.c: 109:     CCP4_PERIOD_REG_T module;;mcc_generated_files/ccp4
      +                          .c: 112:     PIR10bits.CCP4IF = 0;
 11704  003860  0139               	movlb	57	; () banked
 11705  003862  91AA               	bcf	170,0,b	;volatile
 11706                           
 11707                           ;mcc_generated_files/ccp4.c: 115:     module.ccpr4l = CCPR4L;
 11708  003864  006F FDC0  F00B    	movff	16240,CCP4_CaptureISR@module	;volatile
 11709                           
 11710                           ;mcc_generated_files/ccp4.c: 116:     module.ccpr4h = CCPR4H;
 11711  00386A  006F FDC4  F00C    	movff	16241,CCP4_CaptureISR@module+1	;volatile
 11712  003870                     
 11713                           ; BSR set to: 57
 11714                           ;mcc_generated_files/ccp4.c: 119:     CCP4_CallBack(module.ccpr4_16Bit);
 11715  003870  C00B  F007         	movff	CCP4_CaptureISR@module,CCP4_DefaultCallBack@capturedValue
 11716  003874  C00C  F008         	movff	CCP4_CaptureISR@module+1,CCP4_DefaultCallBack@capturedValue+1
 11717  003878  D802               	call	i2u420_48
 11718  00387A  EF49  F01C         	goto	i2u420_49
 11719  00387E                     i2u420_48:
 11720  00387E  0005               	push	
 11721  003880  6EFA               	movwf	pclath,c
 11722  003882  0100               	movlb	0	; () banked
 11723  003884  51F6               	movf	_CCP4_CallBack& (0+255),w,b
 11724  003886  6EFD               	movwf	tosl,c
 11725  003888  51F7               	movf	(_CCP4_CallBack+1)& (0+255),w,b
 11726  00388A  6EFE               	movwf	tosh,c
 11727  00388C  6AFF               	clrf	tosu,c
 11728  00388E  50FA               	movf	pclath,w,c
 11729  003890  0012               	return		;indir
 11730  003892                     i2u420_49:
 11731  003892  0060  F02B  FFFB   	movff	??_CCP4_CaptureISR+1,pclatu
 11732  003898  0060  F027  FFFA   	movff	??_CCP4_CaptureISR,pclath
 11733  00389E  0011               	retfie		f
 11734  0038A0                     __end_of_CCP4_CaptureISR:
 11735                           	callstack 0
 11736                           
 11737 ;; *************** function _CCP4_DefaultCallBack *****************
 11738 ;; Defined at:
 11739 ;;		line 64 in file "mcc_generated_files/ccp4.c"
 11740 ;; Parameters:    Size  Location     Type
 11741 ;;  capturedValu    2    6[COMRAM] unsigned short 
 11742 ;; Auto vars:     Size  Location     Type
 11743 ;;		None
 11744 ;; Return value:  Size  Location     Type
 11745 ;;                  1    wreg      void 
 11746 ;; Registers used:
 11747 ;;		wreg, status,2, status,0
 11748 ;; Tracked objects:
 11749 ;;		On entry : 0/0
 11750 ;;		On exit  : 0/0
 11751 ;;		Unchanged: 0/0
 11752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11753 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11756 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11757 ;;Total ram usage:        2 bytes
 11758 ;; Hardware stack levels used: 1
 11759 ;; This function calls:
 11760 ;;		Nothing
 11761 ;; This function is called by:
 11762 ;;		_CCP4_Initialize
 11763 ;;		_CCP4_CaptureISR
 11764 ;; This function uses a non-reentrant model
 11765 ;;
 11766                           
 11767                           	psect	text80
 11768  003CB4                     __ptext80:
 11769                           	callstack 0
 11770  003CB4                     _CCP4_DefaultCallBack:
 11771                           	callstack 14
 11772  003CB4                     
 11773                           ;mcc_generated_files/ccp4.c: 64: static void CCP4_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp4.c: 65: {;mcc_generated_files/ccp4.c: 67:     if(PORTDbits.RD6
      +                          ) {
 11774  003CB4  ACCD               	btfss	205,6,c	;volatile
 11775  003CB6  EF5F  F01E         	goto	i2u409_41
 11776  003CBA  EF61  F01E         	goto	i2u409_40
 11777  003CBE                     i2u409_41:
 11778  003CBE  EF67  F01E         	goto	i2l5306
 11779  003CC2                     i2u409_40:
 11780  003CC2                     
 11781                           ;mcc_generated_files/ccp4.c: 68:         distRightM = capturedValue;
 11782  003CC2  C007  F029         	movff	CCP4_DefaultCallBack@capturedValue,_distRightM
 11783  003CC6  C008  F02A         	movff	CCP4_DefaultCallBack@capturedValue+1,_distRightM+1
 11784                           
 11785                           ;mcc_generated_files/ccp4.c: 70:     } else {
 11786  003CCA  EF71  F01E         	goto	i2l476
 11787  003CCE                     i2l5306:
 11788                           
 11789                           ;mcc_generated_files/ccp4.c: 71:         distRight = capturedValue - distRightM;
 11790  003CCE  5029               	movf	_distRightM^0,w,c
 11791  003CD0  5C07               	subwf	CCP4_DefaultCallBack@capturedValue^0,w,c
 11792  003CD2  0100               	movlb	0	; () banked
 11793  003CD4  6FE6               	movwf	_distRight& (0+255),b	;volatile
 11794  003CD6  502A               	movf	(_distRightM+1)^0,w,c
 11795  003CD8  5808               	subwfb	(CCP4_DefaultCallBack@capturedValue+1)^0,w,c
 11796  003CDA  6FE7               	movwf	(_distRight+1)& (0+255),b	;volatile
 11797  003CDC                     
 11798                           ; BSR set to: 0
 11799                           ;mcc_generated_files/ccp4.c: 72:         distRight >>= 1;
 11800  003CDC  90D8               	bcf	status,0,c
 11801  003CDE  33E7               	rrcf	(_distRight+1)& (0+255),f,b	;volatile
 11802  003CE0  33E6               	rrcf	_distRight& (0+255),f,b	;volatile
 11803  003CE2                     i2l476:
 11804  003CE2  0012               	return		;funcret
 11805  003CE4                     __end_of_CCP4_DefaultCallBack:
 11806                           	callstack 0
 11807                           
 11808 ;; *************** function _TMR5_GATE_ISR *****************
 11809 ;; Defined at:
 11810 ;;		line 175 in file "mcc_generated_files/tmr5.c"
 11811 ;; Parameters:    Size  Location     Type
 11812 ;;		None
 11813 ;; Auto vars:     Size  Location     Type
 11814 ;;		None
 11815 ;; Return value:  Size  Location     Type
 11816 ;;                  1    wreg      void 
 11817 ;; Registers used:
 11818 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 11819 ;; Tracked objects:
 11820 ;;		On entry : 0/0
 11821 ;;		On exit  : 0/0
 11822 ;;		Unchanged: 0/0
 11823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11826 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11827 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11828 ;;Total ram usage:        2 bytes
 11829 ;; Hardware stack levels used: 1
 11830 ;; Hardware stack levels required when called: 3
 11831 ;; This function calls:
 11832 ;;		Absolute function
 11833 ;;		_TMR5_DefaultGateInterruptHandler
 11834 ;; This function is called by:
 11835 ;;		Interrupt level 2
 11836 ;; This function uses a non-reentrant model
 11837 ;;
 11838                           
 11839                           	psect	text81
 11840  0039C8                     __ptext81:
 11841                           	callstack 0
 11842  0039C8                     _TMR5_GATE_ISR:
 11843                           	callstack 12
 11844                           
 11845                           ;incstack = 0
 11846  0039C8  006F FFE8  F015    	movff	pclath,??_TMR5_GATE_ISR
 11847  0039CE  006F FFEC  F016    	movff	pclatu,??_TMR5_GATE_ISR+1
 11848  0039D4                     
 11849                           ;mcc_generated_files/tmr5.c: 178:     PIR8bits.TMR5GIF = 0;
 11850  0039D4  0139               	movlb	57	; () banked
 11851  0039D6  9FA8               	bcf	168,7,b	;volatile
 11852  0039D8                     
 11853                           ; BSR set to: 57
 11854                           ;mcc_generated_files/tmr5.c: 180:     if(TMR5_GateInterruptHandler)
 11855  0039D8  5038               	movf	_TMR5_GateInterruptHandler^0,w,c
 11856  0039DA  1039               	iorwf	(_TMR5_GateInterruptHandler+1)^0,w,c
 11857  0039DC  B4D8               	btfsc	status,2,c
 11858  0039DE  EFF3  F01C         	goto	i2u421_41
 11859  0039E2  EFF5  F01C         	goto	i2u421_40
 11860  0039E6                     i2u421_41:
 11861  0039E6  EF01  F01D         	goto	i2l552
 11862  0039EA                     i2u421_40:
 11863  0039EA                     
 11864                           ; BSR set to: 57
 11865                           ;mcc_generated_files/tmr5.c: 181:     {;mcc_generated_files/tmr5.c: 182:         TMR5_Ga
      +                          teInterruptHandler();
 11866  0039EA  D802               	call	i2u422_48
 11867  0039EC  EF01  F01D         	goto	i2u422_49
 11868  0039F0                     i2u422_48:
 11869  0039F0  0005               	push	
 11870  0039F2  6EFA               	movwf	pclath,c
 11871  0039F4  5038               	movf	_TMR5_GateInterruptHandler^0,w,c
 11872  0039F6  6EFD               	movwf	tosl,c
 11873  0039F8  5039               	movf	(_TMR5_GateInterruptHandler+1)^0,w,c
 11874  0039FA  6EFE               	movwf	tosh,c
 11875  0039FC  6AFF               	clrf	tosu,c
 11876  0039FE  50FA               	movf	pclath,w,c
 11877  003A00  0012               	return		;indir
 11878  003A02                     i2u422_49:
 11879  003A02                     i2l552:
 11880  003A02  0060  F05B  FFFB   	movff	??_TMR5_GATE_ISR+1,pclatu
 11881  003A08  0060  F057  FFFA   	movff	??_TMR5_GATE_ISR,pclath
 11882  003A0E  0011               	retfie		f
 11883  003A10                     __end_of_TMR5_GATE_ISR:
 11884                           	callstack 0
 11885                           
 11886 ;; *************** function _TMR5_DefaultGateInterruptHandler *****************
 11887 ;; Defined at:
 11888 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 11889 ;; Parameters:    Size  Location     Type
 11890 ;;		None
 11891 ;; Auto vars:     Size  Location     Type
 11892 ;;		None
 11893 ;; Return value:  Size  Location     Type
 11894 ;;                  1    wreg      void 
 11895 ;; Registers used:
 11896 ;;		wreg, status,2, status,0, cstack
 11897 ;; Tracked objects:
 11898 ;;		On entry : 0/0
 11899 ;;		On exit  : 0/0
 11900 ;;		Unchanged: 0/0
 11901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11905 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11906 ;;Total ram usage:        0 bytes
 11907 ;; Hardware stack levels used: 1
 11908 ;; Hardware stack levels required when called: 2
 11909 ;; This function calls:
 11910 ;;		_TMR5_ReadTimer
 11911 ;;		_TMR5_Reload
 11912 ;; This function is called by:
 11913 ;;		_TMR5_Initialize
 11914 ;;		_TMR5_GATE_ISR
 11915 ;; This function uses a non-reentrant model
 11916 ;;
 11917                           
 11918                           	psect	text82
 11919  003EFE                     __ptext82:
 11920                           	callstack 0
 11921  003EFE                     _TMR5_DefaultGateInterruptHandler:
 11922                           	callstack 12
 11923  003EFE                     
 11924                           ;mcc_generated_files/tmr5.c: 194:     distFront = TMR5_ReadTimer();
 11925  003EFE  EC5D  F01F         	call	_TMR5_ReadTimer	;wreg free
 11926  003F02  C00D  F0EE         	movff	?_TMR5_ReadTimer,_distFront	;volatile
 11927  003F06  C00E  F0EF         	movff	?_TMR5_ReadTimer+1,_distFront+1	;volatile
 11928  003F0A                     
 11929                           ;mcc_generated_files/tmr5.c: 195:     distFront >>= 1;
 11930  003F0A  0100               	movlb	0	; () banked
 11931  003F0C  90D8               	bcf	status,0,c
 11932  003F0E  33EF               	rrcf	(_distFront+1)& (0+255),f,b	;volatile
 11933  003F10  33EE               	rrcf	_distFront& (0+255),f,b	;volatile
 11934  003F12                     
 11935                           ; BSR set to: 0
 11936                           ;mcc_generated_files/tmr5.c: 196:     TMR5_Reload();
 11937  003F12  ECD8  F01F         	call	_TMR5_Reload	;wreg free
 11938  003F16                     
 11939                           ;mcc_generated_files/tmr5.c: 197:     PIR8bits.TMR5GIF = 0;
 11940  003F16  0139               	movlb	57	; () banked
 11941  003F18  9FA8               	bcf	168,7,b	;volatile
 11942  003F1A                     
 11943                           ; BSR set to: 57
 11944  003F1A  0012               	return		;funcret
 11945  003F1C                     __end_of_TMR5_DefaultGateInterruptHandler:
 11946                           	callstack 0
 11947                           
 11948 ;; *************** function _TMR5_Reload *****************
 11949 ;; Defined at:
 11950 ;;		line 155 in file "mcc_generated_files/tmr5.c"
 11951 ;; Parameters:    Size  Location     Type
 11952 ;;		None
 11953 ;; Auto vars:     Size  Location     Type
 11954 ;;		None
 11955 ;; Return value:  Size  Location     Type
 11956 ;;                  1    wreg      void 
 11957 ;; Registers used:
 11958 ;;		wreg, status,2, cstack
 11959 ;; Tracked objects:
 11960 ;;		On entry : 0/0
 11961 ;;		On exit  : 0/0
 11962 ;;		Unchanged: 0/0
 11963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11968 ;;Total ram usage:        0 bytes
 11969 ;; Hardware stack levels used: 1
 11970 ;; Hardware stack levels required when called: 1
 11971 ;; This function calls:
 11972 ;;		_TMR5_WriteTimer
 11973 ;; This function is called by:
 11974 ;;		_TMR5_DefaultGateInterruptHandler
 11975 ;; This function uses a non-reentrant model
 11976 ;;
 11977                           
 11978                           	psect	text83
 11979  003FB0                     __ptext83:
 11980                           	callstack 0
 11981  003FB0                     _TMR5_Reload:
 11982                           	callstack 12
 11983  003FB0                     
 11984                           ;mcc_generated_files/tmr5.c: 157:     TMR5_WriteTimer(timer5ReloadVal);
 11985  003FB0  C03A  F00D         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 11986  003FB4  C03B  F00E         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 11987  003FB8  ECF9  F01E         	call	_TMR5_WriteTimer	;wreg free
 11988  003FBC  0012               	return		;funcret
 11989  003FBE                     __end_of_TMR5_Reload:
 11990                           	callstack 0
 11991                           
 11992 ;; *************** function _TMR5_WriteTimer *****************
 11993 ;; Defined at:
 11994 ;;		line 133 in file "mcc_generated_files/tmr5.c"
 11995 ;; Parameters:    Size  Location     Type
 11996 ;;  timerVal        2   12[COMRAM] unsigned short 
 11997 ;; Auto vars:     Size  Location     Type
 11998 ;;		None
 11999 ;; Return value:  Size  Location     Type
 12000 ;;                  1    wreg      void 
 12001 ;; Registers used:
 12002 ;;		wreg, status,2
 12003 ;; Tracked objects:
 12004 ;;		On entry : 0/0
 12005 ;;		On exit  : 0/0
 12006 ;;		Unchanged: 0/0
 12007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12008 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12011 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12012 ;;Total ram usage:        2 bytes
 12013 ;; Hardware stack levels used: 1
 12014 ;; This function calls:
 12015 ;;		Nothing
 12016 ;; This function is called by:
 12017 ;;		_TMR5_Reload
 12018 ;; This function uses a non-reentrant model
 12019 ;;
 12020                           
 12021                           	psect	text84
 12022  003DF2                     __ptext84:
 12023                           	callstack 0
 12024  003DF2                     _TMR5_WriteTimer:
 12025                           	callstack 12
 12026  003DF2                     
 12027                           ;mcc_generated_files/tmr5.c: 133: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 134: {;mcc_generated_files/tmr5.c: 135:     if (T5CONbits.NOT_SYNC == 1)
 12028  003DF2  A49A               	btfss	154,2,c	;volatile
 12029  003DF4  EFFE  F01E         	goto	i2u279_41
 12030  003DF8  EF00  F01F         	goto	i2u279_40
 12031  003DFC                     i2u279_41:
 12032  003DFC  EF09  F01F         	goto	i2l4376
 12033  003E00                     i2u279_40:
 12034  003E00                     
 12035                           ;mcc_generated_files/tmr5.c: 136:     {;mcc_generated_files/tmr5.c: 138:         T5CONbi
      +                          ts.TMR5ON = 0;
 12036  003E00  909A               	bcf	154,0,c	;volatile
 12037  003E02                     
 12038                           ;mcc_generated_files/tmr5.c: 141:         TMR5H = (uint8_t)(timerVal >> 8);
 12039  003E02  500E               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
 12040  003E04  6E99               	movwf	153,c	;volatile
 12041  003E06                     
 12042                           ;mcc_generated_files/tmr5.c: 142:         TMR5L = (uint8_t)timerVal;
 12043  003E06  0060  F037  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 12044  003E0C                     
 12045                           ;mcc_generated_files/tmr5.c: 145:         T5CONbits.TMR5ON =1;
 12046  003E0C  809A               	bsf	154,0,c	;volatile
 12047                           
 12048                           ;mcc_generated_files/tmr5.c: 146:     }
 12049  003E0E  EF0E  F01F         	goto	i2l534
 12050  003E12                     i2l4376:
 12051                           
 12052                           ;mcc_generated_files/tmr5.c: 148:     {;mcc_generated_files/tmr5.c: 150:         TMR5H =
      +                           (uint8_t)(timerVal >> 8);
 12053  003E12  500E               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
 12054  003E14  6E99               	movwf	153,c	;volatile
 12055  003E16                     
 12056                           ;mcc_generated_files/tmr5.c: 151:         TMR5L = (uint8_t)timerVal;
 12057  003E16  0060  F037  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 12058  003E1C                     i2l534:
 12059  003E1C  0012               	return		;funcret
 12060  003E1E                     __end_of_TMR5_WriteTimer:
 12061                           	callstack 0
 12062                           
 12063 ;; *************** function _TMR5_ReadTimer *****************
 12064 ;; Defined at:
 12065 ;;		line 117 in file "mcc_generated_files/tmr5.c"
 12066 ;; Parameters:    Size  Location     Type
 12067 ;;		None
 12068 ;; Auto vars:     Size  Location     Type
 12069 ;;  readVal         2   16[COMRAM] unsigned short 
 12070 ;;  readValLow      1   19[COMRAM] unsigned char 
 12071 ;;  readValHigh     1   18[COMRAM] unsigned char 
 12072 ;; Return value:  Size  Location     Type
 12073 ;;                  2   12[COMRAM] unsigned short 
 12074 ;; Registers used:
 12075 ;;		wreg, status,2
 12076 ;; Tracked objects:
 12077 ;;		On entry : 0/0
 12078 ;;		On exit  : 0/0
 12079 ;;		Unchanged: 0/0
 12080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12081 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12082 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12083 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12084 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12085 ;;Total ram usage:        8 bytes
 12086 ;; Hardware stack levels used: 1
 12087 ;; This function calls:
 12088 ;;		Nothing
 12089 ;; This function is called by:
 12090 ;;		_TMR5_DefaultGateInterruptHandler
 12091 ;; This function uses a non-reentrant model
 12092 ;;
 12093                           
 12094                           	psect	text85
 12095  003EBA                     __ptext85:
 12096                           	callstack 0
 12097  003EBA                     _TMR5_ReadTimer:
 12098                           	callstack 13
 12099  003EBA                     
 12100                           ;mcc_generated_files/tmr5.c: 119:     uint16_t readVal;;mcc_generated_files/tmr5.c: 120:
      +                               uint8_t readValHigh;;mcc_generated_files/tmr5.c: 121:     uint8_t readValLow;;mcc_g
      +                          enerated_files/tmr5.c: 123:     T5CONbits.T5RD16 = 1;
 12101  003EBA  829A               	bsf	154,1,c	;volatile
 12102                           
 12103                           ;mcc_generated_files/tmr5.c: 125:     readValLow = TMR5L;
 12104  003EBC  006F FE60  F014    	movff	16280,TMR5_ReadTimer@readValLow	;volatile
 12105                           
 12106                           ;mcc_generated_files/tmr5.c: 126:     readValHigh = TMR5H;
 12107  003EC2  006F FE64  F013    	movff	16281,TMR5_ReadTimer@readValHigh	;volatile
 12108  003EC8                     
 12109                           ;mcc_generated_files/tmr5.c: 128:     readVal = ((uint16_t)readValHigh << 8) | readValLo
      +                          w;
 12110  003EC8  5013               	movf	TMR5_ReadTimer@readValHigh^0,w,c
 12111  003ECA  6E0F               	movwf	??_TMR5_ReadTimer^0,c
 12112  003ECC  5014               	movf	TMR5_ReadTimer@readValLow^0,w,c
 12113  003ECE  6E11               	movwf	TMR5_ReadTimer@readVal^0,c
 12114  003ED0  C00F  F012         	movff	??_TMR5_ReadTimer,TMR5_ReadTimer@readVal+1
 12115  003ED4                     
 12116                           ;mcc_generated_files/tmr5.c: 130:     return readVal;
 12117  003ED4  C011  F00D         	movff	TMR5_ReadTimer@readVal,?_TMR5_ReadTimer
 12118  003ED8  C012  F00E         	movff	TMR5_ReadTimer@readVal+1,?_TMR5_ReadTimer+1
 12119  003EDC  0012               	return		;funcret
 12120  003EDE                     __end_of_TMR5_ReadTimer:
 12121                           	callstack 0
 12122                           
 12123 ;; *************** function _SMT1_PR_ACQ_ISR *****************
 12124 ;; Defined at:
 12125 ;;		line 192 in file "mcc_generated_files/smt1.c"
 12126 ;; Parameters:    Size  Location     Type
 12127 ;;		None
 12128 ;; Auto vars:     Size  Location     Type
 12129 ;;		None
 12130 ;; Return value:  Size  Location     Type
 12131 ;;                  1    wreg      void 
 12132 ;; Registers used:
 12133 ;;		wreg, status,2, status,0
 12134 ;; Tracked objects:
 12135 ;;		On entry : 0/0
 12136 ;;		On exit  : 0/0
 12137 ;;		Unchanged: 0/0
 12138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12142 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12143 ;;Total ram usage:        0 bytes
 12144 ;; Hardware stack levels used: 1
 12145 ;; This function calls:
 12146 ;;		Nothing
 12147 ;; This function is called by:
 12148 ;;		Interrupt level 2
 12149 ;; This function uses a non-reentrant model
 12150 ;;
 12151                           
 12152                           	psect	text86
 12153  003934                     __ptext86:
 12154                           	callstack 0
 12155  003934                     _SMT1_PR_ACQ_ISR:
 12156                           	callstack 15
 12157  003934                     
 12158                           ;mcc_generated_files/smt1.c: 196:     PIR1bits.SMT1PRAIF = 0;
 12159  003934  0139               	movlb	57	; () banked
 12160  003936  9DA1               	bcf	161,6,b	;volatile
 12161  003938                     
 12162                           ; BSR set to: 57
 12163                           ;mcc_generated_files/smt1.c: 197:     smtPeriod = SMT1CPR;
 12164  003938  013F               	movlb	63	; () banked
 12165  00393A  5115               	movf	21,w,b	;volatile
 12166  00393C  6E34               	movwf	_smtPeriod^0,c	;volatile
 12167  00393E  5116               	movf	22,w,b	;volatile
 12168  003940  6E35               	movwf	(_smtPeriod+1)^0,c	;volatile
 12169  003942  5117               	movf	23,w,b	;volatile
 12170  003944  6E36               	movwf	(_smtPeriod+2)^0,c	;volatile
 12171  003946  6A37               	clrf	(_smtPeriod+3)^0,c	;volatile
 12172  003948                     
 12173                           ; BSR set to: 63
 12174                           ;mcc_generated_files/smt1.c: 198:     if(CLC3CONbits.LC3OUT) smtWay++;
 12175  003948  013C               	movlb	60	; () banked
 12176  00394A  AB60               	btfss	96,5,b	;volatile
 12177  00394C  EFAA  F01C         	goto	i2u424_41
 12178  003950  EFAC  F01C         	goto	i2u424_40
 12179  003954                     i2u424_41:
 12180  003954  EFB5  F01C         	goto	i2l5398
 12181  003958                     i2u424_40:
 12182  003958                     
 12183                           ; BSR set to: 60
 12184  003958  0E01               	movlw	1
 12185  00395A  0100               	movlb	0	; () banked
 12186  00395C  27CC               	addwf	_smtWay& (0+255),f,b	;volatile
 12187  00395E  0E00               	movlw	0
 12188  003960  23CD               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 12189  003962  23CE               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 12190  003964  23CF               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 12191  003966  EFBE  F01C         	goto	i2l856
 12192  00396A                     i2l5398:
 12193                           
 12194                           ; BSR set to: 60
 12195  00396A  0EFF               	movlw	255
 12196  00396C  0100               	movlb	0	; () banked
 12197  00396E  27CC               	addwf	_smtWay& (0+255),f,b	;volatile
 12198  003970  0EFF               	movlw	255
 12199  003972  23CD               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 12200  003974  0EFF               	movlw	255
 12201  003976  23CE               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 12202  003978  0EFF               	movlw	255
 12203  00397A  23CF               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 12204  00397C                     i2l856:
 12205                           
 12206                           ; BSR set to: 0
 12207  00397C  0011               	retfie		f
 12208  00397E                     __end_of_SMT1_PR_ACQ_ISR:
 12209                           	callstack 0
 12210                           
 12211 ;; *************** function _SMT1_PW_ACQ_ISR *****************
 12212 ;; Defined at:
 12213 ;;		line 203 in file "mcc_generated_files/smt1.c"
 12214 ;; Parameters:    Size  Location     Type
 12215 ;;		None
 12216 ;; Auto vars:     Size  Location     Type
 12217 ;;		None
 12218 ;; Return value:  Size  Location     Type
 12219 ;;                  1    wreg      void 
 12220 ;; Registers used:
 12221 ;;		wreg, status,2, status,0
 12222 ;; Tracked objects:
 12223 ;;		On entry : 0/0
 12224 ;;		On exit  : 0/0
 12225 ;;		Unchanged: 0/0
 12226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12230 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12231 ;;Total ram usage:        0 bytes
 12232 ;; Hardware stack levels used: 1
 12233 ;; This function calls:
 12234 ;;		Nothing
 12235 ;; This function is called by:
 12236 ;;		Interrupt level 2
 12237 ;; This function uses a non-reentrant model
 12238 ;;
 12239                           
 12240                           	psect	text87
 12241  003678                     __ptext87:
 12242                           	callstack 0
 12243  003678                     _SMT1_PW_ACQ_ISR:
 12244                           	callstack 15
 12245  003678                     
 12246                           ;mcc_generated_files/smt1.c: 207:     PIR1bits.SMT1PWAIF = 0;
 12247  003678  0139               	movlb	57	; () banked
 12248  00367A  9FA1               	bcf	161,7,b	;volatile
 12249  00367C                     
 12250                           ; BSR set to: 57
 12251                           ;mcc_generated_files/smt1.c: 208:     smtDuty = SMT1CPW;
 12252  00367C  013F               	movlb	63	; () banked
 12253  00367E  5118               	movf	24,w,b	;volatile
 12254  003680  0100               	movlb	0	; () banked
 12255  003682  6FD0               	movwf	_smtDuty& (0+255),b	;volatile
 12256  003684  013F               	movlb	63	; () banked
 12257  003686  5119               	movf	25,w,b	;volatile
 12258  003688  0100               	movlb	0	; () banked
 12259  00368A  6FD1               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 12260  00368C  013F               	movlb	63	; () banked
 12261  00368E  511A               	movf	26,w,b	;volatile
 12262  003690  0100               	movlb	0	; () banked
 12263  003692  6FD2               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 12264  003694  6BD3               	clrf	(_smtDuty+3)& (0+255),b	;volatile
 12265  003696                     
 12266                           ; BSR set to: 0
 12267                           ;mcc_generated_files/smt1.c: 209:     if(CLC3CONbits.LC3OUT) smtWay++;
 12268  003696  013C               	movlb	60	; () banked
 12269  003698  AB60               	btfss	96,5,b	;volatile
 12270  00369A  EF51  F01B         	goto	i2u425_41
 12271  00369E  EF53  F01B         	goto	i2u425_40
 12272  0036A2                     i2u425_41:
 12273  0036A2  EF5C  F01B         	goto	i2l5408
 12274  0036A6                     i2u425_40:
 12275  0036A6                     
 12276                           ; BSR set to: 60
 12277  0036A6  0E01               	movlw	1
 12278  0036A8  0100               	movlb	0	; () banked
 12279  0036AA  27CC               	addwf	_smtWay& (0+255),f,b	;volatile
 12280  0036AC  0E00               	movlw	0
 12281  0036AE  23CD               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 12282  0036B0  23CE               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 12283  0036B2  23CF               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 12284  0036B4  EF65  F01B         	goto	i2l863
 12285  0036B8                     i2l5408:
 12286                           
 12287                           ; BSR set to: 60
 12288  0036B8  0EFF               	movlw	255
 12289  0036BA  0100               	movlb	0	; () banked
 12290  0036BC  27CC               	addwf	_smtWay& (0+255),f,b	;volatile
 12291  0036BE  0EFF               	movlw	255
 12292  0036C0  23CD               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 12293  0036C2  0EFF               	movlw	255
 12294  0036C4  23CE               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 12295  0036C6  0EFF               	movlw	255
 12296  0036C8  23CF               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 12297  0036CA                     i2l863:
 12298                           
 12299                           ; BSR set to: 0
 12300  0036CA  0011               	retfie		f
 12301  0036CC                     __end_of_SMT1_PW_ACQ_ISR:
 12302                           	callstack 0
 12303                           
 12304 ;; *************** function _SMT1_Overflow_ISR *****************
 12305 ;; Defined at:
 12306 ;;		line 213 in file "mcc_generated_files/smt1.c"
 12307 ;; Parameters:    Size  Location     Type
 12308 ;;		None
 12309 ;; Auto vars:     Size  Location     Type
 12310 ;;		None
 12311 ;; Return value:  Size  Location     Type
 12312 ;;                  1    wreg      void 
 12313 ;; Registers used:
 12314 ;;		wreg, status,2
 12315 ;; Tracked objects:
 12316 ;;		On entry : 0/0
 12317 ;;		On exit  : 0/0
 12318 ;;		Unchanged: 0/0
 12319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12324 ;;Total ram usage:        0 bytes
 12325 ;; Hardware stack levels used: 1
 12326 ;; This function calls:
 12327 ;;		Nothing
 12328 ;; This function is called by:
 12329 ;;		Interrupt level 2
 12330 ;; This function uses a non-reentrant model
 12331 ;;
 12332                           
 12333                           	psect	text88
 12334  003E48                     __ptext88:
 12335                           	callstack 0
 12336  003E48                     _SMT1_Overflow_ISR:
 12337                           	callstack 15
 12338  003E48                     
 12339                           ;mcc_generated_files/smt1.c: 217:     PIR1bits.SMT1IF = 0;
 12340  003E48  0139               	movlb	57	; () banked
 12341  003E4A  9BA1               	bcf	161,5,b	;volatile
 12342  003E4C                     
 12343                           ; BSR set to: 57
 12344                           ;mcc_generated_files/smt1.c: 218:     smtPeriod = 0;
 12345  003E4C  0E00               	movlw	0
 12346  003E4E  6E34               	movwf	_smtPeriod^0,c	;volatile
 12347  003E50  0E00               	movlw	0
 12348  003E52  6E35               	movwf	(_smtPeriod+1)^0,c	;volatile
 12349  003E54  0E00               	movlw	0
 12350  003E56  6E36               	movwf	(_smtPeriod+2)^0,c	;volatile
 12351  003E58  0E00               	movlw	0
 12352  003E5A  6E37               	movwf	(_smtPeriod+3)^0,c	;volatile
 12353                           
 12354                           ;mcc_generated_files/smt1.c: 219:     smtDuty = 0;
 12355  003E5C  0E00               	movlw	0
 12356  003E5E  0100               	movlb	0	; () banked
 12357  003E60  6FD0               	movwf	_smtDuty& (0+255),b	;volatile
 12358  003E62  0E00               	movlw	0
 12359  003E64  6FD1               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 12360  003E66  0E00               	movlw	0
 12361  003E68  6FD2               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 12362  003E6A  0E00               	movlw	0
 12363  003E6C  6FD3               	movwf	(_smtDuty+3)& (0+255),b	;volatile
 12364  003E6E                     
 12365                           ; BSR set to: 0
 12366  003E6E  0011               	retfie		f
 12367  003E70                     __end_of_SMT1_Overflow_ISR:
 12368                           	callstack 0
 12369                           
 12370                           ;
 12371                           ; Interrupt Vector Table @ 0x8
 12372                           ;
 12373                           
 12374                           	psect	ivt0x8
 12375  000008                     __pivt0x8:
 12376                           	callstack 0
 12377  000008                     ivt0x8_base:
 12378                           	callstack 0
 12379                           
 12380                           ; Vector 0 : SWINT
 12381  000008  100D               	dw	_Default_ISR shr (0+2)
 12382                           
 12383                           ; Vector 1 : HLVD
 12384  00000A  100D               	dw	_Default_ISR shr (0+2)
 12385                           
 12386                           ; Vector 2 : OSF
 12387  00000C  100D               	dw	_Default_ISR shr (0+2)
 12388                           
 12389                           ; Vector 3 : CSW
 12390  00000E  100D               	dw	_Default_ISR shr (0+2)
 12391                           
 12392                           ; Vector 4 : NVM
 12393  000010  100D               	dw	_Default_ISR shr (0+2)
 12394                           
 12395                           ; Vector 5 : SCAN
 12396  000012  100D               	dw	_Default_ISR shr (0+2)
 12397                           
 12398                           ; Vector 6 : CRC
 12399  000014  100D               	dw	_Default_ISR shr (0+2)
 12400                           
 12401                           ; Vector 7 : IOC
 12402  000016  100D               	dw	_Default_ISR shr (0+2)
 12403                           
 12404                           ; Vector 8 : INT0
 12405  000018  100D               	dw	_Default_ISR shr (0+2)
 12406                           
 12407                           ; Vector 9 : ZCD
 12408  00001A  100D               	dw	_Default_ISR shr (0+2)
 12409                           
 12410                           ; Vector 10 : AD
 12411  00001C  100D               	dw	_Default_ISR shr (0+2)
 12412                           
 12413                           ; Vector 11 : ADT
 12414  00001E  100D               	dw	_Default_ISR shr (0+2)
 12415                           
 12416                           ; Vector 12 : CMP1
 12417  000020  100D               	dw	_Default_ISR shr (0+2)
 12418                           
 12419                           ; Vector 13 : SMT1
 12420  000022  0F92               	dw	_SMT1_Overflow_ISR shr (0+2)
 12421                           
 12422                           ; Vector 14 : SMT1PRA
 12423  000024  0E4D               	dw	_SMT1_PR_ACQ_ISR shr (0+2)
 12424                           
 12425                           ; Vector 15 : SMT1PRW
 12426  000026  0D9E               	dw	_SMT1_PW_ACQ_ISR shr (0+2)
 12427                           
 12428                           ; Vector 16 : DMA1SCNT
 12429  000028  100D               	dw	_Default_ISR shr (0+2)
 12430                           
 12431                           ; Vector 17 : DMA1DCNT
 12432  00002A  100D               	dw	_Default_ISR shr (0+2)
 12433                           
 12434                           ; Vector 18 : DMA1OR
 12435  00002C  100D               	dw	_Default_ISR shr (0+2)
 12436                           
 12437                           ; Vector 19 : DMA1A
 12438  00002E  100D               	dw	_Default_ISR shr (0+2)
 12439                           
 12440                           ; Vector 20 : SPI1RX
 12441  000030  100D               	dw	_Default_ISR shr (0+2)
 12442                           
 12443                           ; Vector 21 : SPI1TX
 12444  000032  100D               	dw	_Default_ISR shr (0+2)
 12445                           
 12446                           ; Vector 22 : SPI1
 12447  000034  100D               	dw	_Default_ISR shr (0+2)
 12448                           
 12449                           ; Vector 23 : I2C1RX
 12450  000036  100D               	dw	_Default_ISR shr (0+2)
 12451                           
 12452                           ; Vector 24 : I2C1TX
 12453  000038  100D               	dw	_Default_ISR shr (0+2)
 12454                           
 12455                           ; Vector 25 : I2C1
 12456  00003A  100D               	dw	_Default_ISR shr (0+2)
 12457                           
 12458                           ; Vector 26 : I2C1E
 12459  00003C  100D               	dw	_Default_ISR shr (0+2)
 12460                           
 12461                           ; Vector 27 : U1RX
 12462  00003E  0DC7               	dw	_UART1_rx_vect_isr shr (0+2)
 12463                           
 12464                           ; Vector 28 : U1TX
 12465  000040  0DB3               	dw	_UART1_tx_vect_isr shr (0+2)
 12466                           
 12467                           ; Vector 29 : U1E
 12468  000042  100D               	dw	_Default_ISR shr (0+2)
 12469                           
 12470                           ; Vector 30 : U1
 12471  000044  100D               	dw	_Default_ISR shr (0+2)
 12472                           
 12473                           ; Vector 31 : TMR0
 12474  000046  100D               	dw	_Default_ISR shr (0+2)
 12475                           
 12476                           ; Vector 32 : TMR1
 12477  000048  100D               	dw	_Default_ISR shr (0+2)
 12478                           
 12479                           ; Vector 33 : TMR1G
 12480  00004A  100D               	dw	_Default_ISR shr (0+2)
 12481                           
 12482                           ; Vector 34 : TMR2
 12483  00004C  100D               	dw	_Default_ISR shr (0+2)
 12484                           
 12485                           ; Vector 35 : CCP1
 12486  00004E  100D               	dw	_Default_ISR shr (0+2)
 12487                           
 12488                           ; Vector 36 : Undefined
 12489  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 12490                           
 12491                           ; Vector 37 : NCO1
 12492  000052  100D               	dw	_Default_ISR shr (0+2)
 12493                           
 12494                           ; Vector 38 : CWG1
 12495  000054  100D               	dw	_Default_ISR shr (0+2)
 12496                           
 12497                           ; Vector 39 : CLC1
 12498  000056  100D               	dw	_Default_ISR shr (0+2)
 12499                           
 12500                           ; Vector 40 : INT1
 12501  000058  100D               	dw	_Default_ISR shr (0+2)
 12502                           
 12503                           ; Vector 41 : CMP2
 12504  00005A  100D               	dw	_Default_ISR shr (0+2)
 12505                           
 12506                           ; Vector 42 : DMA2SCNT
 12507  00005C  100D               	dw	_Default_ISR shr (0+2)
 12508                           
 12509                           ; Vector 43 : DMA2DCNT
 12510  00005E  100D               	dw	_Default_ISR shr (0+2)
 12511                           
 12512                           ; Vector 44 : DMA2OR
 12513  000060  100D               	dw	_Default_ISR shr (0+2)
 12514                           
 12515                           ; Vector 45 : DMA2A
 12516  000062  100D               	dw	_Default_ISR shr (0+2)
 12517                           
 12518                           ; Vector 46 : I2C2RX
 12519  000064  100D               	dw	_Default_ISR shr (0+2)
 12520                           
 12521                           ; Vector 47 : I2C2TX
 12522  000066  100D               	dw	_Default_ISR shr (0+2)
 12523                           
 12524                           ; Vector 48 : I2C2
 12525  000068  100D               	dw	_Default_ISR shr (0+2)
 12526                           
 12527                           ; Vector 49 : I2C2E
 12528  00006A  100D               	dw	_Default_ISR shr (0+2)
 12529                           
 12530                           ; Vector 50 : U2RX
 12531  00006C  100D               	dw	_Default_ISR shr (0+2)
 12532                           
 12533                           ; Vector 51 : U2TX
 12534  00006E  100D               	dw	_Default_ISR shr (0+2)
 12535                           
 12536                           ; Vector 52 : U2E
 12537  000070  100D               	dw	_Default_ISR shr (0+2)
 12538                           
 12539                           ; Vector 53 : U2
 12540  000072  100D               	dw	_Default_ISR shr (0+2)
 12541                           
 12542                           ; Vector 54 : TMR3
 12543  000074  100D               	dw	_Default_ISR shr (0+2)
 12544                           
 12545                           ; Vector 55 : TMR3G
 12546  000076  100D               	dw	_Default_ISR shr (0+2)
 12547                           
 12548                           ; Vector 56 : TMR4
 12549  000078  0DDB               	dw	_TMR4_ISR shr (0+2)
 12550                           
 12551                           ; Vector 57 : CCP2
 12552  00007A  100D               	dw	_Default_ISR shr (0+2)
 12553                           
 12554                           ; Vector 58 : Undefined
 12555  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 12556                           
 12557                           ; Vector 59 : CWG2
 12558  00007E  100D               	dw	_Default_ISR shr (0+2)
 12559                           
 12560                           ; Vector 60 : CLC2
 12561  000080  100D               	dw	_Default_ISR shr (0+2)
 12562                           
 12563                           ; Vector 61 : INT2
 12564  000082  100D               	dw	_Default_ISR shr (0+2)
 12565                           
 12566                           ; Vector 62 : Undefined
 12567  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 12568                           
 12569                           ; Vector 63 : Undefined
 12570  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 12571                           
 12572                           ; Vector 64 : Undefined
 12573  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 12574                           
 12575                           ; Vector 65 : Undefined
 12576  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 12577                           
 12578                           ; Vector 66 : Undefined
 12579  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 12580                           
 12581                           ; Vector 67 : Undefined
 12582  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 12583                           
 12584                           ; Vector 68 : Undefined
 12585  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 12586                           
 12587                           ; Vector 69 : Undefined
 12588  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 12589                           
 12590                           ; Vector 70 : TMR5
 12591  000094  100D               	dw	_Default_ISR shr (0+2)
 12592                           
 12593                           ; Vector 71 : TMR5G
 12594  000096  0E72               	dw	_TMR5_GATE_ISR shr (0+2)
 12595                           
 12596                           ; Vector 72 : TMR6
 12597  000098  100D               	dw	_Default_ISR shr (0+2)
 12598                           
 12599                           ; Vector 73 : CCP3
 12600  00009A  0E02               	dw	_CCP3_CaptureISR shr (0+2)
 12601                           
 12602                           ; Vector 74 : CWG3
 12603  00009C  100D               	dw	_Default_ISR shr (0+2)
 12604                           
 12605                           ; Vector 75 : CLC3
 12606  00009E  100D               	dw	_Default_ISR shr (0+2)
 12607                           
 12608                           ; Vector 76 : Undefined
 12609  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 12610                           
 12611                           ; Vector 77 : Undefined
 12612  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 12613                           
 12614                           ; Vector 78 : Undefined
 12615  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 12616                           
 12617                           ; Vector 79 : Undefined
 12618  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 12619                           
 12620                           ; Vector 80 : CCP4
 12621  0000A8  0E15               	dw	_CCP4_CaptureISR shr (0+2)
 12622                           
 12623                           ; Vector 81 : CLC4
 12624  0000AA  100D               	dw	_Default_ISR shr (0+2)
 12625  0000AC                     ivt0x8_undefint:
 12626                           	callstack 0
 12627  0000AC  00FF               	reset	
 12628                           
 12629                           	psect	text89
 12630  000000                     __ptext89:
 12631                           	callstack 0
 12632  000000                     
 12633                           	psect	rparam
 12634  0000                     
 12635                           	psect	idloc
 12636                           
 12637                           ;Config register IDLOC0 @ 0x200000
 12638                           ;	unspecified, using default values
 12639  200000                     	org	2097152
 12640  200000  0FFF               	dw	4095
 12641                           
 12642                           ;Config register IDLOC1 @ 0x200002
 12643                           ;	unspecified, using default values
 12644  200002                     	org	2097154
 12645  200002  0FFF               	dw	4095
 12646                           
 12647                           ;Config register IDLOC2 @ 0x200004
 12648                           ;	unspecified, using default values
 12649  200004                     	org	2097156
 12650  200004  0FFF               	dw	4095
 12651                           
 12652                           ;Config register IDLOC3 @ 0x200006
 12653                           ;	unspecified, using default values
 12654  200006                     	org	2097158
 12655  200006  0FFF               	dw	4095
 12656                           
 12657                           ;Config register IDLOC4 @ 0x200008
 12658                           ;	unspecified, using default values
 12659  200008                     	org	2097160
 12660  200008  0FFF               	dw	4095
 12661                           
 12662                           ;Config register IDLOC5 @ 0x20000A
 12663                           ;	unspecified, using default values
 12664  20000A                     	org	2097162
 12665  20000A  0FFF               	dw	4095
 12666                           
 12667                           ;Config register IDLOC6 @ 0x20000C
 12668                           ;	unspecified, using default values
 12669  20000C                     	org	2097164
 12670  20000C  0FFF               	dw	4095
 12671                           
 12672                           ;Config register IDLOC7 @ 0x20000E
 12673                           ;	unspecified, using default values
 12674  20000E                     	org	2097166
 12675  20000E  0FFF               	dw	4095
 12676                           
 12677                           	psect	config
 12678                           
 12679                           ;Config register CONFIG1L @ 0x300000
 12680                           ;	External Oscillator Selection
 12681                           ;	FEXTOSC = OFF, Oscillator not enabled
 12682                           ;	Reset Oscillator Selection
 12683                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 12684  300000                     	org	3145728
 12685  300000  8C                 	db	140
 12686                           
 12687                           ;Config register CONFIG1H @ 0x300001
 12688                           ;	Clock out Enable bit
 12689                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 12690                           ;	PRLOCKED One-Way Set Enable bit
 12691                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
 12692                           ;	Clock Switch Enable bit
 12693                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 12694                           ;	Fail-Safe Clock Monitor Enable bit
 12695                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 12696  300001                     	org	3145729
 12697  300001  FF                 	db	255
 12698                           
 12699                           ;Config register CONFIG2L @ 0x300002
 12700                           ;	MCLR Enable bit
 12701                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 12702                           ;	Power-up timer selection bits
 12703                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 12704                           ;	Multi-vector enable bit
 12705                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 12706                           ;	IVTLOCK bit One-way set enable bit
 12707                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
 12708                           ;	Low Power BOR Enable bit
 12709                           ;	LPBOREN = OFF, ULPBOR disabled
 12710                           ;	Brown-out Reset Enable bits
 12711                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 12712  300002                     	org	3145730
 12713  300002  FF                 	db	255
 12714                           
 12715                           ;Config register CONFIG2H @ 0x300003
 12716                           ;	Brown-out Reset Voltage Selection bits
 12717                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 12718                           ;	ZCD Disable bit
 12719                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 12720                           ;	PPSLOCK bit One-Way Set Enable bit
 12721                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 12722                           ;	Stack Full/Underflow Reset Enable bit
 12723                           ;	STVREN = ON, Stack full/underflow will cause Reset
 12724                           ;	Debugger Enable bit
 12725                           ;	DEBUG = OFF, Background debugger disabled
 12726                           ;	Extended Instruction Set Enable bit
 12727                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 12728  300003                     	org	3145731
 12729  300003  FF                 	db	255
 12730                           
 12731                           ;Config register CONFIG3L @ 0x300004
 12732                           ;	WDT Period selection bits
 12733                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 12734                           ;	WDT operating mode
 12735                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 12736  300004                     	org	3145732
 12737  300004  9F                 	db	159
 12738                           
 12739                           ;Config register CONFIG3H @ 0x300005
 12740                           ;	WDT Window Select bits
 12741                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 12742                           ;	WDT input clock selector
 12743                           ;	WDTCCS = SC, Software Control
 12744  300005                     	org	3145733
 12745  300005  FF                 	db	255
 12746                           
 12747                           ;Config register CONFIG4L @ 0x300006
 12748                           ;	Boot Block Size selection bits
 12749                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 12750                           ;	Boot Block enable bit
 12751                           ;	BBEN = OFF, Boot block disabled
 12752                           ;	Storage Area Flash enable bit
 12753                           ;	SAFEN = OFF, SAF disabled
 12754                           ;	Application Block write protection bit
 12755                           ;	WRTAPP = OFF, Application Block not write protected
 12756  300006                     	org	3145734
 12757  300006  FF                 	db	255
 12758                           
 12759                           ;Config register CONFIG4H @ 0x300007
 12760                           ;	Configuration Register Write Protection bit
 12761                           ;	WRTB = OFF, Configuration registers (300000-30000Bh) not write-protected
 12762                           ;	Boot Block Write Protection bit
 12763                           ;	WRTC = OFF, Boot Block (000000-0007FFh) not write-protected
 12764                           ;	Data EEPROM Write Protection bit
 12765                           ;	WRTD = OFF, Data EEPROM not write-protected
 12766                           ;	SAF Write protection bit
 12767                           ;	WRTSAF = OFF, SAF not Write Protected
 12768                           ;	Low Voltage Programming Enable bit
 12769                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 12770  300007                     	org	3145735
 12771  300007  FF                 	db	255
 12772                           
 12773                           ;Config register CONFIG5L @ 0x300008
 12774                           ;	PFM and Data EEPROM Code Protection bit
 12775                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 12776  300008                     	org	3145736
 12777  300008  FF                 	db	255
 12778                           
 12779                           ;Config register CONFIG5H @ 0x300009
 12780                           ;	unspecified, using default values
 12781  300009                     	org	3145737
 12782  300009  FF                 	db	255
 12783                           tosu	equ	0x3FFF
 12784                           tosh	equ	0x3FFE
 12785                           tosl	equ	0x3FFD
 12786                           stkptr	equ	0x3FFC
 12787                           pclatu	equ	0x3FFB
 12788                           pclath	equ	0x3FFA
 12789                           pcl	equ	0x3FF9
 12790                           tblptru	equ	0x3FF8
 12791                           tblptrh	equ	0x3FF7
 12792                           tblptrl	equ	0x3FF6
 12793                           tablat	equ	0x3FF5
 12794                           prodh	equ	0x3FF4
 12795                           prodl	equ	0x3FF3
 12796                           indf0	equ	0x3FEF
 12797                           postinc0	equ	0x3FEE
 12798                           postdec0	equ	0x3FED
 12799                           preinc0	equ	0x3FEC
 12800                           plusw0	equ	0x3FEB
 12801                           fsr0h	equ	0x3FEA
 12802                           fsr0l	equ	0x3FE9
 12803                           wreg	equ	0x3FE8
 12804                           indf1	equ	0x3FE7
 12805                           postinc1	equ	0x3FE6
 12806                           postdec1	equ	0x3FE5
 12807                           preinc1	equ	0x3FE4
 12808                           plusw1	equ	0x3FE3
 12809                           fsr1h	equ	0x3FE2
 12810                           fsr1l	equ	0x3FE1
 12811                           bsr	equ	0x3FE0
 12812                           indf2	equ	0x3FDF
 12813                           postinc2	equ	0x3FDE
 12814                           postdec2	equ	0x3FDD
 12815                           preinc2	equ	0x3FDC
 12816                           plusw2	equ	0x3FDB
 12817                           fsr2h	equ	0x3FDA
 12818                           fsr2l	equ	0x3FD9
 12819                           status	equ	0x3FD8

Data Sizes:
    Strings     113
    Constant    0
    Data        0
    BSS         113
    Persistent  25
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     34      64
    BANK0           160     84     160
    BANK1           256     16      48
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S3384$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S3384$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_10(CODE[10]), STR_9(CODE[12]), STR_8(CODE[11]), STR_7(CODE[11]), 
		 -> STR_6(CODE[9]), STR_5(CODE[14]), STR_4(CODE[22]), STR_3(CODE[13]), 
		 -> STR_2(CODE[22]), STR_1(CODE[11]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 22
		 -> STR_10(CODE[10]), STR_9(CODE[12]), STR_8(CODE[11]), STR_7(CODE[11]), 
		 -> STR_6(CODE[9]), STR_5(CODE[14]), STR_4(CODE[22]), STR_3(CODE[13]), 
		 -> STR_2(CODE[22]), STR_1(CODE[11]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_10(CODE[10]), STR_9(CODE[12]), STR_8(CODE[11]), STR_7(CODE[11]), 
		 -> STR_6(CODE[9]), STR_5(CODE[14]), STR_4(CODE[22]), STR_3(CODE[13]), 
		 -> STR_2(CODE[22]), STR_1(CODE[11]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), Absolute function(), 

    TMR5_SetGateInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), 

    TMR5_GateInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), Absolute function(), 

    CCP4_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), 

    CCP4_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), Absolute function(), 

    CCP3_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), 

    CCP3_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), Absolute function(), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultErrorHandler(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultOverrunErrorHandler(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultFramingErrorHandler(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Receive_ISR(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _getBatteryVoltage->_ADCC_GetSingleConversion
    _dtoa->_pad
    _pad->_strlen
    _fputc->_putch
    _putch->_UART1_Write
    _abs->___aomod
    _setSteering->_PWM5_LoadDutyValue
    _setSteering->_PWM6_LoadDutyValue
    _calcSpeed->___fltol
    _calcMotorPow->___fltol
    _calcMotorPow->_actSpeed
    _setMotor->_PWM7_LoadDutyValue
    _setMotor->_PWM8_LoadDutyValue
    _SYSTEM_Initialize->_TMR3_Initialize
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR5_Initialize->_TMR5_SetGateInterruptHandler
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _CCP4_Initialize->_CCP4_SetCallBack
    _CCP3_Initialize->_CCP3_SetCallBack

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR4_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _CCP3_CaptureISR in COMRAM

    _CCP3_CaptureISR->_CCP3_DefaultCallBack

Critical Paths under _CCP4_CaptureISR in COMRAM

    _CCP4_CaptureISR->_CCP4_DefaultCallBack

Critical Paths under _TMR5_GATE_ISR in COMRAM

    _TMR5_DefaultGateInterruptHandler->_TMR5_ReadTimer
    _TMR5_Reload->_TMR5_WriteTimer

Critical Paths under _SMT1_PR_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_Overflow_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _calcSteering->_setSteering
    _setSteering->___awdiv
    _calcSpeed->___fltol
    ___fladd->___flmul
    _calcMotorPow->___fltol
    _setMotor->_PWM7_LoadDutyValue
    _setMotor->_PWM8_LoadDutyValue
    _actSpeed->___aldiv
    ___fltol->___fladd
    ___flmul->___xxtofl
    ___flge->___xxtofl
    _SYSTEM_Initialize->_TMR5_Initialize

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR4_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _CCP3_CaptureISR in BANK0

    None.

Critical Paths under _CCP4_CaptureISR in BANK0

    None.

Critical Paths under _TMR5_GATE_ISR in BANK0

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _loop->_getCurve
    _getCurve->_printf
    _getBatteryVoltage->_printf
    _printf->_vfprintf

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR4_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _CCP3_CaptureISR in BANK1

    None.

Critical Paths under _CCP4_CaptureISR in BANK1

    None.

Critical Paths under _TMR5_GATE_ISR in BANK1

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR4_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _CCP3_CaptureISR in BANK2

    None.

Critical Paths under _CCP4_CaptureISR in BANK2

    None.

Critical Paths under _TMR5_GATE_ISR in BANK2

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR4_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _CCP3_CaptureISR in BANK3

    None.

Critical Paths under _CCP4_CaptureISR in BANK3

    None.

Critical Paths under _TMR5_GATE_ISR in BANK3

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR4_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _CCP3_CaptureISR in BANK4

    None.

Critical Paths under _CCP4_CaptureISR in BANK4

    None.

Critical Paths under _TMR5_GATE_ISR in BANK4

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR4_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _CCP3_CaptureISR in BANK5

    None.

Critical Paths under _CCP4_CaptureISR in BANK5

    None.

Critical Paths under _TMR5_GATE_ISR in BANK5

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR4_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _CCP3_CaptureISR in BANK6

    None.

Critical Paths under _CCP4_CaptureISR in BANK6

    None.

Critical Paths under _TMR5_GATE_ISR in BANK6

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR4_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _CCP3_CaptureISR in BANK7

    None.

Critical Paths under _CCP4_CaptureISR in BANK7

    None.

Critical Paths under _TMR5_GATE_ISR in BANK7

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR4_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _CCP3_CaptureISR in BANK8

    None.

Critical Paths under _CCP4_CaptureISR in BANK8

    None.

Critical Paths under _TMR5_GATE_ISR in BANK8

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR4_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _CCP3_CaptureISR in BANK9

    None.

Critical Paths under _CCP4_CaptureISR in BANK9

    None.

Critical Paths under _TMR5_GATE_ISR in BANK9

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR4_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _CCP3_CaptureISR in BANK10

    None.

Critical Paths under _CCP4_CaptureISR in BANK10

    None.

Critical Paths under _TMR5_GATE_ISR in BANK10

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR4_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _CCP3_CaptureISR in BANK11

    None.

Critical Paths under _CCP4_CaptureISR in BANK11

    None.

Critical Paths under _TMR5_GATE_ISR in BANK11

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR4_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _CCP3_CaptureISR in BANK12

    None.

Critical Paths under _CCP4_CaptureISR in BANK12

    None.

Critical Paths under _TMR5_GATE_ISR in BANK12

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR4_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _CCP3_CaptureISR in BANK13

    None.

Critical Paths under _CCP4_CaptureISR in BANK13

    None.

Critical Paths under _TMR5_GATE_ISR in BANK13

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR4_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _CCP3_CaptureISR in BANK14

    None.

Critical Paths under _CCP4_CaptureISR in BANK14

    None.

Critical Paths under _TMR5_GATE_ISR in BANK14

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR4_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _CCP3_CaptureISR in BANK15

    None.

Critical Paths under _CCP4_CaptureISR in BANK15

    None.

Critical Paths under _TMR5_GATE_ISR in BANK15

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   37540
                  _SYSTEM_Initialize
           _TMR4_SetInterruptHandler
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0   36393
                             ___flge
                           ___xxtofl
                       _calcMotorPow
                          _calcSpeed
                       _calcSteering
                  _getBatteryVoltage
                           _getCurve
                         _getReverse
 ---------------------------------------------------------------------------------
 (2) _getReverse                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getCurve                                             6     6      0    9104
                                             10 BANK1      6     6      0
                             _printf
 ---------------------------------------------------------------------------------
 (2) _getBatteryVoltage                                    0     0      0    8943
           _ADCC_GetSingleConversion
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              10     4      6    8912
                                              2 BANK1      8     2      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6    7931
                                             78 BANK0      6     0      6
                                              0 BANK1      2     2      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           42    36      6    7458
                                             62 BANK0     16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    5683
                                             26 BANK0     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    3417
                                             33 COMRAM     1     1      0
                                             16 BANK0     10     4      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     220
                                             31 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1537
                                              9 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4    1037
                                              0 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0      93
                                             32 COMRAM     1     1      0
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (8) _UART1_Write                                          1     1      0      62
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     183
                                             16 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     613
                                             31 COMRAM     2     2      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     625
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (3) _ADCC_GetSingleConversion                             5     3      2      31
                                             31 COMRAM     3     1      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _calcSteering                                         4     4      0    4022
                                             17 BANK0      4     4      0
                            ___awdiv
                        _setSteering
 ---------------------------------------------------------------------------------
 (3) _setSteering                                          9     6      3    3056
                                              8 BANK0      9     6      3
                 _PWM5_LoadDutyValue
                 _PWM6_LoadDutyValue
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     805
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (4) _PWM6_LoadDutyValue                                   4     2      2     152
                                             31 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _PWM5_LoadDutyValue                                   4     2      2     152
                                             31 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _calcSpeed                                            4     4      0    7348
                                             63 BANK0      4     4      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    3402
                                             39 BANK0     16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _calcMotorPow                                         7     7      0    5784
                                             63 BANK0      7     7      0
                            ___flmul
                            ___fltol
                           ___xxtofl
                           _actSpeed
                           _setMotor
 ---------------------------------------------------------------------------------
 (3) _setMotor                                             4     2      2     946
                                              2 BANK0      4     2      2
                 _PWM7_LoadDutyValue
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (4) _PWM8_LoadDutyValue                                   4     2      2     332
                                             31 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _PWM7_LoadDutyValue                                   4     2      2     332
                                             31 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _actSpeed                                             4     2      2     845
                                             31 COMRAM     2     0      2
                                             14 BANK0      2     2      0
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     805
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     746
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     381
                                             31 COMRAM     2     2      0
                                             55 BANK0      8     4      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2693
                                             14 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     446
                                             14 BANK0     12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     973
                    _ADCC_Initialize
                    _CCP3_Initialize
                    _CCP4_Initialize
                    _CLC3_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM5_Initialize
                    _PWM6_Initialize
                    _PWM7_Initialize
                    _PWM8_Initialize
                    _SMT1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR4_Initialize
                    _TMR5_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     490
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          2     0      2      98
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          2     0      2      98
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         2     0      2      98
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         2     0      2      98
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                2     0      2      98
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0      98
                                              0 BANK0      2     2      0
       _TMR5_SetGateInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetGateInterruptHandler                         2     0      2      98
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     174
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             2     0      2     174
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      2     2      0       0
                                             31 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMT1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM7_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      15
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CLC3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP4_Initialize                                      0     0      0      98
                   _CCP4_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP4_SetCallBack                                     2     0      2      98
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CCP3_Initialize                                      0     0      0      98
                   _CCP3_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP3_SetCallBack                                     2     0      2      98
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_tx_vect_isr                                   3     3      0       0
                                             22 COMRAM     3     3      0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_rx_vect_isr                                   3     3      0       0
                                             25 COMRAM     3     3      0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultErrorHandler                           0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _UART1_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR4_ISR                                            3     3      0       0
                                             28 COMRAM     3     3      0
                      _TMR4_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR4_CallBack                                       0     0      0       0
                   Absolute function *
                       _TMR4_10msISR *
       _TMR4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR4_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _TMR4_10msISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _CCP3_CaptureISR                                     4     4      0     144
                                              2 COMRAM     4     4      0
                   Absolute function *
               _CCP3_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (17) _CCP3_DefaultCallBack                                2     0      2      97
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _CCP4_CaptureISR                                     4     4      0     144
                                              8 COMRAM     4     4      0
                   Absolute function *
               _CCP4_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (17) _CCP4_DefaultCallBack                                2     0      2      97
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _TMR5_GATE_ISR                                       2     2      0     233
                                             20 COMRAM     2     2      0
                   Absolute function *
   _TMR5_DefaultGateInterruptHandler *
 ---------------------------------------------------------------------------------
 (17) _TMR5_DefaultGateInterruptHandler                    0     0      0     233
                     _TMR5_ReadTimer
                        _TMR5_Reload
 ---------------------------------------------------------------------------------
 (18) _TMR5_Reload                                         0     0      0     164
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (19) _TMR5_WriteTimer                                     2     0      2     164
                                             12 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) _TMR5_ReadTimer                                      8     6      2      69
                                             12 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _SMT1_PR_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _SMT1_PW_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _SMT1_Overflow_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
     _CCP3_Initialize
       _CCP3_SetCallBack
     _CCP4_Initialize
       _CCP4_SetCallBack
     _CLC3_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM5_Initialize
     _PWM6_Initialize
     _PWM7_Initialize
     _PWM8_Initialize
     _SMT1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetGateInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
   _TMR4_SetInterruptHandler
   _loop
     ___flge
       ___xxtofl (ARG)
     ___xxtofl
     _calcMotorPow
       ___flmul
         ___xxtofl (ARG)
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _actSpeed
         ___aldiv
       _setMotor
         _PWM7_LoadDutyValue
         _PWM8_LoadDutyValue
     _calcSpeed
       ___fladd
       ___flmul
       ___fltol
       ___xxtofl
     _calcSteering
       ___awdiv
       _setSteering
         _PWM5_LoadDutyValue
         _PWM6_LoadDutyValue
         ___awdiv
     _getBatteryVoltage
       _ADCC_GetSingleConversion
       _printf
         _vfprintf
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                 _strlen
             _fputc
     _getCurve
       _printf
     _getReverse

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *

 _TMR4_ISR (ROOT)
   _TMR4_CallBack
     Absolute function(Fake) *
     _TMR4_10msISR *
     _TMR4_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _CCP3_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP3_DefaultCallBack *

 _CCP4_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP4_DefaultCallBack *

 _TMR5_GATE_ISR (ROOT)
   Absolute function(Fake) *
   _TMR5_DefaultGateInterruptHandler *
     _TMR5_ReadTimer
     _TMR5_Reload
       _TMR5_WriteTimer

 _SMT1_PR_ACQ_ISR (ROOT)

 _SMT1_PW_ACQ_ISR (ROOT)

 _SMT1_Overflow_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      85        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRlllll     181      0       0      83        0.0%
BITBIGSFRhhhhll    17E      0       0      53        0.0%
BITBIGSFRhhhhll    17A      0       0      54        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     10      30       7       18.8%
BITBIGSFRhhhhll     E3      0       0      50        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     54      A0       5      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     22      40       1       67.4%
BITBIGSFRhhhhll     44      0       0      59        0.0%
BITBIGSFRhhhhll     3A      0       0      47        0.0%
BITBIGSFRhhhhll     34      0       0      67        0.0%
BITBIGSFRhhhhhh     28      0       0      36        0.0%
BITBIGSFRhhhhll     20      0       0      42        0.0%
BITBIGSFRhhhhll     20      0       0      70        0.0%
BITBIGSFRllhh       15      0       0      74        0.0%
BITBIGSFRhhhhll     12      0       0      48        0.0%
BITBIGSFRlh         11      0       0      73        0.0%
BITBIGSFRhhhhll      B      0       0      66        0.0%
BITBIGSFRhhhhll      A      0       0      41        0.0%
BITBIGSFRhhhhll      8      0       0      55        0.0%
BITBIGSFRllhlhl      6      0       0      77        0.0%
BITBIGSFRlllhhl      6      0       0      80        0.0%
BITBIGSFRhhhhll      6      0       0      57        0.0%
BITBIGSFRhhhhll      6      0       0      68        0.0%
BITBIGSFRhhhhhh      6      0       0      39        0.0%
BITBIGSFRhhhhll      5      0       0      58        0.0%
BITBIGSFRhhhhll      5      0       0      65        0.0%
BITBIGSFRhhhhll      5      0       0      63        0.0%
BITBIGSFRhhhhll      5      0       0      61        0.0%
BITBIGSFRhhhhhh      4      0       0      38        0.0%
BITBIGSFRhhhhll      4      0       0      60        0.0%
BITBIGSFRhhhhll      4      0       0      62        0.0%
BITBIGSFRhhhhll      4      0       0      64        0.0%
BITBIGSFRlllhll      3      0       0      81        0.0%
BITBIGSFRllhll       3      0       0      78        0.0%
BITBIGSFRhhhhhl      3      0       0      40        0.0%
BITBIGSFRllhlhl      2      0       0      76        0.0%
BITBIGSFRhhhhll      1      0       0      49        0.0%
BITBIGSFRllhlhl      1      0       0      75        0.0%
BITBIGSFRlllhhh      1      0       0      79        0.0%
BITBIGSFRhhhhll      1      0       0      44        0.0%
BITBIGSFRhhhhll      1      0       0      43        0.0%
BITBIGSFRhhhhll      1      0       0      46        0.0%
BITBIGSFRhhhhll      1      0       0      45        0.0%
BITBIGSFRllllh       1      0       0      82        0.0%
BITBIGSFRhhhhhh      1      0       0      37        0.0%
BITBIGSFRhhhhll      1      0       0      52        0.0%
BITBIGSFRhhhhll      1      0       0      51        0.0%
BITBIGSFRhhhhll      1      0       0      56        0.0%
BITBIGSFRhhhhll      1      0       0      69        0.0%
BITBIGSFRhhl         1      0       0      71        0.0%
BITBIGSFRhl          1      0       0      72        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     110      84        0.0%
DATA                 0      0     110       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Jan 23 17:29:14 2024

                             _CCP4_Initialize 3CE4                        ??_CCP3_DefaultCallBack 0003  
                                          l72 3FAE                                            l75 3EB8  
                                          l69 38E8                                  ___awdiv@sign 0065  
                           ??_TMR5_WriteTimer 000F                                           l312 361A  
                                         l404 3806                                           l308 35D2  
                                         l309 35EC                                           l318 3FC6  
                                         l520 3932                                           l441 3D3E  
                                         l362 3FE4                                           l371 3FD0  
                                         l188 303C                                           l284 332E  
                                         l365 3FF8                                           l359 3FEE  
                                         l368 3FDA                                           l712 3C52  
                                         l449 4020                                           l482 3D10  
                                         l723 3F4E                                           l555 4002  
                                         l644 3D98                                           l740 3BE6  
                                         l709 3F66                                           l581 3B44  
                                         l726 3C1C                                           l479 4016  
                                         l751 3F7E                                           l737 3F96  
                                         l754 3BB0                                           l923 3F36  
                                         l695 400C                                           l795 3C82  
                                         l893 3DC4                                           _GIE 01FE97  
                                         _PR2 003FAB                                           _PR4 003F9F  
                                         _abs 3A54                                           _pad 303E  
                             _TMR2_Initialize 3F1C                CCP4_SetCallBack@customCallBack 0020  
                                         tosl 003FFD                                           wreg 003FE8  
                            _CCP4_SetCallBack 400E                                  ___flmul@aexp 007B  
                                ___flmul@bexp 0080                            _UART1_Transmit_ISR 3A10  
                                ___flmul@sign 007A                                  ___flmul@temp 0085  
                                ___flmul@prod 0081                       __end_of_CCP4_CaptureISR 38A0  
                                ___fltol@exp1 0021                                          l1042 3676  
                                        ?_abs 0070                                          l2004 25C4  
                                        l1212 3462                                          l2013 3E46  
                                        l1213 34B0                                          l1054 3AE2  
                                        l2104 3460                                          l2112 39C4  
                                        l2040 3084                                          l1232 3E94  
                                        l1240 1E9A                                          l1057 3B0C  
                                        l1314 2474                                          l1323 2A4C  
                                        l2043 30C8                                          l2051 1A26  
                                        l1332 2F72                                          l1229 33C8  
                                        l2045 3104                                          l2053 1A2E  
                                        l1414 2C80                                          l2118 3AD0  
                                        l2071 1C6A                                          l3104 361C  
                                        l3040 37C6                                          l3120 3C74  
                                        l1600 2E48                                          l1280 2B72  
                                        l1256 1EAA                                          l1264 3556  
                                        l3050 37F6                                          l3042 37D0  
                                        l3130 3F38                                          l3122 3C76  
                             _timer3ReloadVal 00F4                                          l3060 3800  
                                        l3052 37F8                                          l3044 37E6  
                                        l3036 37BC                                          l3124 3C7A  
                                        l3116 3C54                                          l3132 3F1C  
                                        l1284 20D0                                          l2092 3A94  
                                        l2084 35B6                                          l1605 2E8E  
                                        l2085 35BE                                          l3150 3D9A  
                                        l3062 3802                                          l3054 37FA  
                                        l3046 37E8                                          l3038 37BE  
                                        l3070 2F94                                          l3126 3C7C  
                                        l3118 3C72                                          l3134 3F28  
                                        l1286 20F4                                          l1462 291C  
                                        l2078 20B8                                          l1287 2128  
                                        l3064 3804                                          l3056 37FC  
                                        l3048 37F2                                          l3080 2FF0  
                                        l3072 2F96                                          l3160 3F80  
                                        l3128 3C7E                                          l3136 3F2E  
                                        l1632 2D88                                          l1288 2160  
                                        l1297 229E                                          l1289 217C  
                                        l1449 27B6                                          l2089 3A8C  
                                        l3058 37FE                                          l3090 2FFE  
                                        l3082 2FF2                                          l3074 2F9E  
                                        l3066 3E96                                          l3138 3F68  
                                        l3092 3F98                                          l3084 2FF8  
                                        l3076 2FEC                                          l3068 2F74  
                                        l3086 2FFA                                          l3078 2FEE  
                                        l1566 31CA                                          l3088 2FFC  
                                        l3176 3F50                                          l6000 1176  
                                        l6010 118A                                          l6002 117A  
                                        l4340 3FD2                                          l6100 13D0  
                                        l6020 119E                                          l6012 118E  
                                        l6004 117E                                          l4342 3FC8  
                                        l6110 13FC                                          l6102 13D2  
                                        l6030 11B2                                          l6022 11A2  
                                        l6014 1192                                          l6006 1182  
                                        l5070 3520                                          l1863 1264  
                                        l4360 4018                                          l4344 3FE6  
                                        l6200 164A                                          l6120 1434  
                                        l6104 13E0                                          l6112 13FE  
                                        l1880 137E                                          l1872 1534  
                                        l6040 1210                                          l1864 1252  
                                        l6024 11A6                                          l6016 1196  
                                        l6008 1186                                          l6032 11B6  
                                        l5072 3524                                          l5064 34F0  
                                        l1953 1984                                          l1865 1218  
                                        l4362 400E                                          l4346 3FDC  
                                        l6210 16A4                                          l6202 1664  
                                        l6130 14B2                                          l1890 143C  
                                        l6106 13E8                                          l6114 140C  
                                        l6050 1246                                          l6042 1226  
                                        l6034 11BA                                          l6026 11AA  
                                        l6018 119A                                          l5074 3534  
                                        l5066 3508                                          l4380 4004  
                                        l4364 3FFA                                          l4348 3FF0  
                                        l1956 1816                                          l6220 16F2  
                                        l6212 16B2                                          l6204 1670  
                                        l6300 2512                                          l6140 14F8  
                                        l6124 145E                                          l6132 14B4  
                                        l6116 1410                                          l6108 13EC  
                                        l6060 1296                                          l6052 1250  
                                        l6044 1232                                          l6036 11E4  
                                        l6028 11AE                                          l5076 3538  
                                        l5068 350E                                          l1949 15FC  
                                        l1966 1946                                          l1958 188E  
                                        l6230 1770                                          l6222 1710  
                                        l6214 16C2                                          l6206 168C  
                                        l6310 259A                                          l6302 251E  
                                        l1990 24D0                                          l6150 1522  
                                        l6142 1506                                          l6134 14C4  
                                        l6126 146A                                          l6118 141E  
                                        l6070 12D2                                          l6062 12A6  
                                        l6054 1272                                          l6046 1236  
                                        l6038 1200                                          l5510 3600  
                                        l5502 35C2                                          l5078 354E  
                                        ?_pad 0070                                          l1959 187C  
                                        l6240 1806                                          l6232 179A  
                                        l6224 1720                                          l6216 16D2  
                                        l6208 1698                                          l6160 1552  
                                        l4800 2C82                                          l6320 25D8  
                                        l6312 25A6                                          l6304 2550  
                                        l6152 1524                                          l6144 150C  
                                        l6136 14D4                                          l6128 1478  
                                        l6080 1318                                          l6072 12E0  
                                        l6064 12B4                                          l6056 1282  
                                        l6048 1244                                          l5600 27BC  
                                        l5512 3602                                          l5504 35C2  
                                        l5520 3FC0                                          l6400 1E4A  
                                        l1993 262C                                          l1889 144E  
                                        l6250 1846                                          l6242 1814  
                                        l6234 17D0                                          l6226 1740  
                                        l6218 16E2                                          l6170 158A  
                                        l6162 1554                                          l4810 2CDA  
                                        l4802 2C9A                                          l6322 25FC  
                                        l6314 25B4                                          l6306 2552  
                                        l6146 150E                                          l6138 14F4  
                                        l6090 1394                                          l6082 134C  
                                        l6074 12E2                                          l6066 12C2  
                                        l5610 281E                                          l5602 27CC  
                                        l5514 3612                                          l5506 35E2  
                                        l5530 3418                                          l5522 33CA  
                                        l4900 3D6E                                          l6340 3920  
                                        l6332 38EA                                          l6260 18B8  
                                        l6252 1874                                          l6244 1826  
                                        l6236 17DE                                          l6228 1750  
                                        l6180 15B6                                          l6172 159A  
                                        l6164 1564                                          l6156 1536  
                                        l4812 2CEA                                          l6324 260C  
                                        l6316 25D2                                          l6308 255E  
                                        l6500 2938                                          l6148 1514  
                                        l6092 13A4                                          l6084 134E  
                                        l6076 12EC                                          l6068 12CE  
                                        l6420 2AA4                                          l6412 2A4E  
                                        l5620 2894                                          l5612 283C  
                                        l5604 27EC                                          l5516 3616  
                                        l5508 35EE                                          l5532 344E  
                                        l5524 33DE                                          l5540 399E  
                                        l5700 1BBC                                          l1997 2568  
                                        l4910 3CE4                                          l4902 3D82  
                                        l6342 3922                                          l6334 38FE  
                                        l6270 192E                                          l6262 18E2  
                                        l6246 1834                                          l6238 17FC  
                                        l6190 160C                                          l6182 15C6  
                                        l6174 15A0                                          l6166 1574  
                                        l6158 1544                                          l4822 2D14  
                                        l4814 2CEE                                          l4806 2CAE  
                                        l6326 261A                                          l6318 25D4  
                                        l6510 29D8                                          l6502 2944  
                                        l6086 135E                                          l6078 12F2  
                                        l6422 2ABA                                          l6414 2A5C  
                                        l5630 28FC                                          l5622 28B4  
                                        l5614 2844                                          l5606 27F0  
                                        l5518 3618                                          l5526 33F0  
                                        l5542 39A4                                          l5550 3AC2  
                                        l5710 1C0A                                          l5702 1BD6  
                                        l6406 1E5C                                          l6350 1C6C  
                                        l4912 3CF4                                          l4920 3B0E  
                                        l4904 3D86                                          l6344 392E  
                                        l6336 3902                                          l6272 194A  
                                        l6280 1970                                          l6256 189E  
                                        l6264 18E6                                          l6248 1838  
                                        l6192 161C                                          l6184 15D6  
                                        l6176 15A6                                          l6168 1584  
                                        l4840 2D78                                          l4832 2D3C  
                                        l4824 2D1E                                          l4816 2CFC  
                                        l4808 2CD8                                          l6328 261C  
                                        l5800 2C2E                                          l6520 2A30  
                                        l6512 29DC                                          l6504 29A8  
                                        l6096 13B8                                          l6088 136E  
                                        l6432 2B08                                          l6424 2ACE  
                                        l6416 2A7C                                          l6440 2B2E  
                                        l5560 2662                                          l5624 28C6  
                                        l5616 2858                                          l5608 27FE  
                                        l5528 33FA                                          l5536 397E  
                                        l5544 3A96                                          l5640 3070  
                                        l5712 1C1C                                          l5704 1BE4  
                                        l6360 1CF2                                          l6352 1C70  
                                        l4914 3D00                                          l4922 3B22  
                                        l4906 3D88                                          l6338 391C  
                                        l6530 2DCA                                          l6282 1974  
                                        l6274 195A                                          l6266 1900  
                                        l6258 18AA                                          l6186 15E6  
                                        l6178 15B4                                          l4834 2D48  
                                        l4826 2D28                                          l6290 249A  
                                        l5810 2C60                                          l5802 2C3E  
                                        l6522 2A38                                          l6514 29EC  
                                        l6506 29BC                                          l6098 13C2  
                                        l6450 22C4                                          l6434 2B1A  
                                        l6426 2AE2                                          l6418 2A90  
                                        l5570 26A4                                          l5562 2666  
                                        l5554 262E                                          l5618 2866  
                                        l5626 28CC                                          l5538 398C  
                                        l5546 3AA2                                          l5650 30D6  
                                        l5642 307C                                          l5634 303E  
                                        l5714 1C28                                          l5706 1BF6  
                                        l5730 1F02                                          l5722 1EAC  
                                        l6346 3E70                                          l6370 1D5E  
                                        l6362 1D0E                                          l6354 1CB4  
                                        l4916 3D0A                                          l4924 3B26  
                                        l4908 3D94                                          l6540 2E36  
                                        l6532 2DF8                                          l6276 1968  
                                        l6268 1914                                          l6196 1630  
                                        l6188 15EC                                          l4836 2D58  
                                        l6292 24E0                                          l5812 2C70  
                                        l5804 2C40                                          l6524 2A44  
                                        l6516 2A08                                          l6508 29C4  
                                        l6460 230A                                          l6452 22C8  
                                        l5820 311A                                          l5900 20BA  
                                        l6428 2AF4                                          l5580 26FE  
                                        l5572 26C2                                          l5564 2674  
                                        l5556 2634                                          l5628 28DC  
                                        l5548 3AA6                                          l5652 30EA  
                                        l5644 3090                                          l5636 304C  
                                        l5716 1C30                                          l5708 1C04  
                                        l5660 1986                                          l5740 1FF2  
                                        l5732 1F30                                          l5724 1EDA  
                                        l6348 3E7E                                          l6380 1DA2  
                                        l6372 1D66                                          l6364 1D1C  
                                        l6356 1CC2                                          l4918 3D0E  
                                        l4926 3B40                                          l4950 32B2  
                                        l4942 328C                                          l6550 38B0  
                                        l6542 2E86                                          l6534 2E08  
                                        l6526 2D8A                                          l6278 196A  
                                        l6198 1640                                          l4838 2D68  
                                        l6294 24F6                                          l6286 247A  
                                        l5806 2C4A                                          l6518 2A14  
                                        l6470 234E                                          l6462 2320  
                                        l6454 22DE                                          l6446 22A0  
                                        l5830 3140                                          l5822 3122  
                                        l5910 21F8                                          l5902 2140  
                                        l5582 272C                                          l5574 26CA  
                                        l5590 2766                                          l5566 2694  
                                        l5558 2642                                          l5646 30A4  
                                        l5638 3060                                          l5718 1C42  
                                        l5670 1A00                                          l5662 19A6  
                                        l5742 2020                                          l5750 2054  
                                        l5734 1F5E                                          l5726 1EEC  
                                        l6390 1E12                                          l6382 1DBC  
                                        l6374 1D78                                          l6366 1D3A  
                                        l6358 1CE0                                          l4960 32C6  
                                        l4952 32B6                                          l4944 3290  
                                        l6560 38C8                                          l6552 38B4  
                                        l6544 2E8C                                          l6536 2E16  
                                        l6528 2DBA                                          l6288 248C  
                                        l5808 2C50                                          l6472 23C8  
                                        l6464 2328                                          l6456 22F8  
                                        l6448 22AE                                          l6480 23E0  
                                        l5840 3178                                          l5832 3148  
                                        l5824 3126                                          l5816 3106  
                                        l5920 2250                                          l5912 2204  
                                        l5592 2776                                          l5584 274C  
                                        l5576 26DE                                          l5568 2698  
                                        l5656 3A54                                          l5648 30AA  
                                        l5680 1A5C                                          l5672 1A1A  
                                        l5664 19D0                                          l5752 2066  
                                        l5744 2032                                          l5736 1FBA  
                                        l5728 1EFE                                          l6392 1E1E  
                                        l6384 1DCE                                          l6376 1D7E  
                                        l6368 1D4C                                          l4890 3D12  
                                        l4970 32DA                                          l4962 32CA  
                                        l4954 32BA                                          l4946 329C  
                                        l6562 38D0                                          l6554 38BC  
                                        l6538 2E28                                          l6298 250A  
                                        l6490 246C                                          l6474 23D4  
                                        l6466 2334                                          l6482 2422  
                                        l6458 2300                                          l5770 3B7C  
                                        l5850 31A4                                          l5842 317E  
                                        l5834 315A                                          l5826 3134  
                                        l5818 310C                                          l5922 226C  
                                        l5914 2220                                          l5906 2198  
                                        l5594 2796                                          l5586 274E  
                                        l5578 26EC                                          l5658 3A70  
                                        l5690 1AFE                                          l5682 1A64  
                                        l5674 1A36                                          l5666 19F0  
                                        l5746 2046                                          l6386 1DE4  
                                        l6378 1D90                                          l6570 3462  
                                        l4892 3D22                                          l4980 32F6  
                                        l4972 32DE                                          l4964 32CE  
                                        l4956 32BE                                          l4948 32AC  
                                        l6564 38D4                                          l6556 38C0  
                                        l6548 38A0                                          l5780 2B9C  
                                        l5772 2B74                                          l5764 3C1E  
                                        l5940 2EDE                                          l5932 2E90  
                                        l6484 2440                                          l6468 234A  
                                        l5844 3194                                          l5836 3162  
                                        l5852 31AA                                          l5828 313C  
                                        l5924 2274                                          l5916 2228  
                                        l5908 21DA                                          l5588 2760  
                                        l5692 1B04                                          l5684 1A6E  
                                        l5676 1A48                                          l5668 19FE  
                                        l5756 2072                                          l5860 3558  
                                        l6396 1E30                                          l6388 1DFC  
                                        l6580 34DA                                          l6572 3466  
                                        l4894 3D2E                                          l4982 3302  
                                        l4974 32E2                                          l4966 32D2  
                                        l4958 32C2                                          l6566 38DC  
                                        l6558 38C4                                          l5790 2BE4  
                                        l5782 2BAA                                          l5774 2B7A  
                                        l5766 3BE8                                          l5950 2F38  
                                        l5934 2EAE                                          l5942 2EEE  
                                        l6486 2448                                          l5854 31BA  
                                        l5846 319C                                          l5838 316A  
                                        l5926 2288                                          l5918 2244  
                                        l5870 3ADA                                          l5598 27B8  
                                        l5686 1A74                                          l5694 1B68  
                                        l5678 1A56                                          l5758 20A2  
                                        l5862 3560                                          l6398 1E42  
                                        l6582 34DE                                          l6574 34C0  
                                        l6590 3EE2                                          l4896 3D38  
                                        l4984 332A                                          l4976 32E6  
                                        l4968 32D6                                          l6568 38E0  
                                        l5792 2BEC                                          l5784 2BBA  
                                        l5776 2B88                                          l5880 3330  
                                        l5944 2F08                                          l5952 2F5A  
                                        l5936 2ECA                                          l6496 291E  
                                        l5960 1092                                          l6488 2464  
                                        l5768 3BB2                                          l5856 31C2  
                                        l5848 319E                                          l6680 21AC  
                                        l5872 3ADE                                          l5696 1B84  
                                        l5688 1AF8                                          l5864 356E  
                                        l6584 34E2                                          l6576 34D2  
                                        l6592 3EE4                                          l4898 3D3C  
                                        l4978 32EA                                          l5794 2BF8  
                                        l5786 2BBE                                          l5778 2B98  
                                        l5890 33C0                                          l5882 333A  
                                        l5946 2F24                                          l5938 2ED2  
                                        l6498 2938                                          l5962 10A2  
                                        l5970 10CC                                          l5954 1074  
                                        l6682 23F4                                          l5874 3AE0  
                                        l5698 1BA2                                          l5866 3594  
                                        l6586 34E6                                          l6578 34D6  
                                        l6594 3EF2                                          l5796 2C06  
                                        l5788 2BCE                                          l5884 3350  
                                        l5948 2F2C                                          l5980 10FC  
                                        l5972 10DC                                          l5964 10B2  
                                        l5956 1082                                          l5876 3AF0  
                                        l5868 3AD4                                          l6676 1E74  
                                        l6588 3EDE                                          l5798 2C10  
                                        l5886 3360                                          l5990 113C  
                                        l5982 110A                                          l5974 10E2  
                                        l5966 10C2                                          l5958 1090  
                                        l6678 2B44                                          l5894 3E1E  
                                        l5888 3392                                          l5992 113E  
                                        l5984 110C                                          l5976 10F4  
                                        l5968 10C4                                          l5896 3E28  
                                        l5986 111C                                          l5994 1146  
                                        l5978 10F6                                          l5996 1156  
                                        l5988 112C                                          l5998 1168  
                                        STR_1 103E                                          STR_2 1001  
                                        STR_3 1025                                          STR_4 1001  
                                        STR_5 1017                                          STR_6 1069  
                                        STR_7 1049                                          STR_8 1054  
                                        STR_9 1032                                          _LATA 003FBA  
                                        _LATB 003FBB                                          _LATC 003FBC  
                                        _LATD 003FBD                                          _LATE 003FBE  
                                        u1525 37F0                                          u1526 37F2  
                                        u5000 1090                                          u5001 108C  
                                        u5010 10A2                                          _T2PR 003FAB  
                                        u5011 109E                                          u3500 2CCE  
                                        u5100 11FC                                          u5020 10B2  
                                        u4300 33F0                                          u5101 11F6  
                                        u5021 10AE                                          u4301 33EC  
                                        u3510 2CFC                                          u5110 11FE  
                                        u5030 10F4                                          u4310 3418  
                                        u3511 2CF8                                          u5031 10F0  
                                        u4311 3414                                          u3520 2D10  
                                        u5200 1318                                          u5120 1226  
                                        u5040 110A                                          u4400 272C  
                                        u4320 344E                                          u3521 2D0C  
                                        u3505 2CC4                                          u5201 1314  
                                        u5121 1222                                          u5041 1106  
                                        u4401 2728                                          u4321 344A  
                                        u3530 2D38                                          u5210 135E  
                                        u5130 1244                                          u5050 111C  
                                        u4410 2776                                          u4330 39C4  
                                        _T4PR 003F9F                                          u3531 2D34  
                                        u5211 135A                                          u5131 1240  
                                        u5051 1118                                          u4411 2772  
                                        u4331 39C0                                          u3540 2D58  
                                        u5300 144A                                          u5220 1394  
                                        u5140 1264                                          u5060 112C  
                                        u4420 27CC                                          u4260 35D2  
                                        u4340 3AC2                                          u4500 30C8  
                                        u3541 2D54                                          u5301 1446  
                                        u5221 1390                                          u5141 1260  
                                        u5061 1128                                          u4421 27C8  
                                        u4261 35CE                                          u4341 3ABE  
                                        u4501 30C4                                          u3550 2D68  
                                        u5310 145E                                          u5230 13A4  
                                        u5150 1272                                          u5070 1168  
                                        u4350 2642                                          u4430 27FE  
                                        u4270 35E2                                          u4510 30D6  
                                        u3551 2D64                                          u5311 145A  
                                        u5231 13A0                                          u5151 126E  
                                        u5071 1164                                          u4351 263E  
                                        u4431 27FA                                          u4271 35DE  
                                        u4511 30D2                                          u5400 1564  
                                        u5320 1478                                          u5240 13D0  
                                        u5160 1282                                          u5080 1176  
                                        u4360 2674                                          u4440 283C  
                                        u4520 3A70                                          u4280 3612  
                                        u4600 1B84                                          u5401 1560  
                                        u5321 1474                                          u5241 13CC  
                                        u5161 127E                                          u5081 1172  
                                        u4361 2670                                          u4441 2838  
                                        u4521 3A6C                                          u4281 360E  
                                        u4601 1B80                                          u5410 1574  
                                        u3490 2C9A                                          u5330 14B2  
                                        u5250 13E0                                          u5170 12B4  
                                        u5090 11E4                                          u4450 2866  
                                        u4290 33DE                                          u4610 1BA2  
                                        u4530 19B8                                          u5411 1570  
                                        u3491 2C96                                          u5331 14AE  
                                        u5251 13DC                                          u5171 12B0  
                                        u5091 11E0                                          u4371 269E  
                                        u4451 2862                                          u4291 33DA  
                                        u4611 1B9E                                          u4531 19B2  
                                        u5500 1846                                          u5420 15B4  
                                        u5340 14C4                                          u5260 13FC  
                                        u5180 12C2                                          u4380 26C2  
                                        u4460 2894                                          u4620 1BBC  
                                        u4540 19BA                                          u4700 1F5E  
                                        _PMD0 0039C0                                          u5501 1842  
                                        u5421 15B0                                          u5341 14C0  
                                        u5261 13F8                                          u5181 12BE  
                                        u4381 26BE                                          u4461 2890  
                                        u4621 1BB8                                          u4701 1F5A  
                                        _PMD1 0039C1                                          u5510 1874  
                                        u5430 15C6                                          u5350 14D4  
                                        u5270 140C                                          u5190 12E0  
                                        u4390 26EC                                          u4470 28DC  
                                        u4630 1BD6                                          u4550 19D0  
                                        u4710 2020                                          u3750 3508  
                                        _PMD2 0039C2                                          u5511 1870  
                                        u5431 15C2                                          u5351 14D0  
                                        u5271 1408                                          u5191 12DC  
                                        u4391 26E8                                          u4471 28D8  
                                        u4631 1BD2                                          u4551 19CC  
                                        u4711 201C                                          u3751 3504  
                                        _PMD3 0039C3                                          u5520 188A  
                                        u5440 15D6                                          u5600 24F6  
                                        u4800 2C2E                                          u5360 14F4  
                                        u5280 141E                                          u4480 304C  
                                        u4640 1BE4                                          u4560 19FE  
                                        u3760 3520                                          _PMD4 0039C4  
                                        u5521 1886                                          u5441 15D2  
                                        u5601 24F2                                          u4801 2C2A  
                                        u5361 14F0                                          u5281 141A  
                                        u4481 3048                                          u4641 1BE0  
                                        u4561 19FA                                          u3761 351C  
                                        _PMD5 0039C5                                          u5530 189E  
                                        u5450 160C                                          u5610 254C  
                                        u4810 2C60                                          u5370 1506  
                                        u5290 1434                                          u4490 3070  
                                        u4650 1BF6                                          u4570 1A1A  
                                        u3770 3534                                          _PMD6 0039C6  
                                        u5531 189A                                          u5451 1608  
                                        u5611 2548                                          u4811 2C5C  
                                        u5371 1502                                          u5291 1430  
                                        u4491 306C                                          u4651 1BF2  
                                        u4571 1A16                                          u3771 3530  
                                        _PMD7 0039C7                                          u5540 18B8  
                                        u5460 161C                                          u5620 2596  
                                        u4900 3350                                          u5380 1522  
                                        u4820 311A                                          u4660 1C04  
                                        u4580 1A48                                          u5700 1D5E  
                                        u3780 354E                                          u5541 18B4  
                                        u5461 1618                                          u5621 2592  
                                        u4901 334C                                          u4725 3C44  
                                        u5381 151E                                          u4821 3116  
                                        u4661 1C00                                          u4581 1A44  
                                        u5701 1D5A                                          u3781 354A  
                                        u5550 1900                                          u5470 17BA  
                                        u5390 1552                                          u5630 25B4  
                                        u4910 3360                                          u4830 3134  
                                        u4670 1C1C                                          u4590 1A56  
                                        u5710 1D90                                          u5551 18FC  
                                        u5391 154E                                          u5631 25B0  
                                        u4911 335C                                          u4735 3C0E  
                                        u4831 3130                                          u4671 1C18  
                                        u4591 1A52                                          u5711 1D8C  
                                        u5560 192E                                          u5480 1814  
                                        u5640 25C4                                          u4760 2B88  
                                        u5800 22C4                                          u4840 315A  
                                        u4920 21F8                                          u4680 1EDA  
                                        u5720 1DA2                                          u5561 192A  
                                        u5481 1810                                          u5641 25C0  
                                        u4761 2B84                                          u5801 22C0  
                                        u4745 3BD8                                          u4841 3156  
                                        u4921 21F4                                          u4681 1ED6  
                                        u5721 1D9E                                          u5570 1968  
                                        u5490 1834                                          u5650 25D2  
                                        u4770 2BAA                                          u5810 22DE  
                                        u4850 3178                                          u4930 2220  
                                        u4690 1F30                                          u5730 1DCE  
                                        u5571 1964                                          u5491 1830  
                                        u5475 17B0                                          u5651 25CE  
                                        u4771 2BA6                                          u5811 22DA  
                                        u4755 3BA2                                          u4851 3174  
                                        u4931 221C                                          u4691 1F2C  
                                        u5731 1DCA                                          u5660 260C  
                                        u5580 248C                                          u4780 2BE4  
                                        u5900 2A30                                          u5820 22F8  
                                        u4860 3194                                          u4940 2244  
                                        u5740 1DFC                                          u5661 2608  
                                        u5581 2488                                          u4781 2BE0  
                                        u5901 2A2C                                          u5821 22F4  
                                        u4861 3190                                          u4941 2240  
                                        u5741 1DF8                                          u5910 2DBA  
                                        u5670 261A                                          u5590 249A  
                                        u4790 2C06                                          u5830 2320  
                                        u4870 31BA                                          u4950 226C  
                                        u5750 1E12                                          u5911 2DB6  
                                        u5671 2616                                          u5591 2496  
                                        u4791 2C02                                          u5831 231C  
                                        u4871 31B6                                          u4951 2268  
                                        u5751 1E0E                                          u5920 2DF8  
                                        u4960 2EAE                                          u5840 234A  
                                        u4880 35B6                                          u5760 1E42  
                                        u5680 1CB4                                          u5921 2DF4  
                                        u4961 2EAA                                          u5841 2346  
                                        u4881 35B2                                          u5761 1E3E  
                                        u5681 1CB0                                          u5930 2E16  
                                        u4970 2ECA                                          u5850 2440  
                                        u5770 2ABA                                          u4890 3AF0  
                                        u5690 1D0E                                          u5931 2E12  
                                        u4971 2EC6                                          u5851 243C  
                                        u5771 2AB6                                          u4891 3AEC  
                                        u5691 1D0A                                          u5940 2E36  
                                        u4980 2F08                                          u5860 2464  
                                        u5780 2AF4                                          u5941 2E32  
                                        u4981 2F04                                          u5861 2460  
                                        u5781 2AF0                                          u5950 2E86  
                                        u4990 2F24                                          u5870 29BC  
                                        u5790 2B1A                                          u5951 2E82  
                                        u4991 2F20                                          u5871 29B8  
                                        u5791 2B16                                          u5880 29D8  
                                        u5960 34B0                                          u5881 29D4  
                                        u5961 34AC                                          u5890 2A08  
                                        u5970 34D2                                          u5891 2A04  
                                        u5971 34CE                                          _TMR2 003FAA  
                                        _TMR4 003F9E                                          _WPUA 003A41  
                                        _WPUB 003A51                                          _WPUC 003A61  
                                        _WPUD 003A71                                          _WPUE 003A81  
                         ?_UART1_Transmit_ISR 0001                                          abs@a 0070  
                                        _dbuf 0100                                          _main 3EDE  
                                        _dtoa 1986                                          _loop 3462  
                                        _prec 00D8                                          _nout 00D4  
                                        pad@i 0076                                          pad@p 0074  
                                        fsr1h 003FE2                                          fsr2h 003FDA  
                                        indf2 003FDF                                          fsr1l 003FE1  
                                        pad@w 0078                                          fsr2l 003FD9  
                                        prodh 003FF4                                          prodl 003FF3  
                                        start 00AE                               _timer5ReloadVal 003A  
                             _TMR3_Initialize 3B0E                               _PWM5_Initialize 3F80  
                           ??_CLC3_Initialize 0020                 ??_UART1_SetTxInterruptHandler 0022  
                  ??_TMR4_SetInterruptHandler 0022                             _UART1_rx_vect_isr 371C  
                                ___param_bank 000000                    __end_of_PWM5_LoadDutyValue 3BE8  
                          ?_UART1_rx_vect_isr 0001                                         ??_abs 0072  
                                       ??_pad 0022                          ??_UART1_Transmit_ISR 0017  
               __end_of_OSCILLATOR_Initialize 3FB0                                 ___fltol@sign1 0020  
                             __end_of___aldiv 2C82                               __end_of___aodiv 27B8  
                                       _ADACT 003EFE                                         _ADCAP 003EF5  
                     __end_of_CCP3_Initialize 3D40                               __end_of___fladd 1536  
                                       ?_main 0001                                         ?_dtoa 007A  
                                       _ADCLK 003EFF                               __end_of___aomod 291E  
                                       _ADCNT 003EEB                                         _ADPCH 003EF1  
                                       _ADREF 003EFD                               __end_of___awdiv 31CC  
                                       ?_loop 0001                                         STR_10 105F  
                                       _ADRPT 003EEC                        ??_CCP4_DefaultCallBack 0009  
                             __end_of___flmul 1986                      TMR5_ReadTimer@readValLow 0014  
                             __end_of___fltol 2D8A                               ___awdiv@divisor 0062  
                                       _U1P1H 003DED                                         _U1P2H 003DEF  
                                       _U1P3H 003DF1                                         _U1P1L 003DEC  
                                       _T3CLK 003FA9                                         _U1P2L 003DEE  
                                       _T2CON 003FAC                                         _U1P3L 003DF0  
                                       _T3CON 003FA6                                         _T5CLK 003F9D  
                                       _T4CON 003FA0                                         _T2HLT 003FAD  
                                       _T5CON 003F9A                                         _T4HLT 003FA1  
                                       _T2TMR 003FAA                                         _U1UIR 003DF8  
                                       i1l330 3758                                         _T2RST 003FAF  
                                       _U1RXB 003DE8                                         i1l324 3708  
                                       i1l333 3A4E                                         i1l350 4030  
                                       i1l343 328A                                         i1l336 3A52  
                                       i1l353 402E                                         _U1TXB 003DEA  
                                       i1l347 3DF0                                         i1l356 4026  
                                       _T4TMR 003F9E                                         _T4RST 003FA3  
                                       i2l409 4034                                         i1l692 3D6C  
                                       i2l534 3E1C                                         i2l438 3CB2  
                                       i2l446 3846                                         i2l552 3A02  
                                       i1l688 37A8                                         i2l529 3EDC  
                                       i2l537 3FBC                                         i1l698 4032  
                                       i2l476 3CE2                                         i2l558 3F1A  
                                       i2l487 3892                           ??_UART1_rx_vect_isr 001A  
                                       i2l863 36CA                                         i2l856 397C  
                                       i2l868 3E6E                               ___awdiv@counter 0064  
                                       _OSCEN 0039DD                                  vfpfcnvrt@fmt 00A0  
                                       _TMR3H 003FA5                                         _TMR5H 003F99  
                                       _TMR3L 003FA4                                         _TMR5L 003F98  
                                       _TRISA 003FC2                                         _TRISB 003FC3  
                                       _TRISC 003FC4                                         _TRISD 003FC5  
                                       _TRISE 003FC6                                   _Default_ISR 4034  
                             _TMR4_Initialize 3D6E                               _PWM6_Initialize 3F68  
                           _UART1_tx_vect_isr 36CC                              __end_of_TMR4_ISR 37BC  
                     setSteering@steeringMode 006A                                         _delay 00EA  
                                       _flags 0023                                         _fputc 33CA  
                                       _fputs 397E                            ?_UART1_tx_vect_isr 0001  
                                       pad@fp 0070                                         _width 00D6  
                                       _putch 3FBE                                         dtoa@d 007C  
                                       dtoa@i 009C                                         dtoa@n 0094  
                                       dtoa@p 008E                                         dtoa@s 0092  
                                       dtoa@w 0090                              ?_SMT1_Initialize 0001  
                                       pclath 003FFA                                         pclatu 003FFB  
                                       tablat 003FF5                                   _BatteryVolt 00F0  
                                       status 003FD8           __end_of_UART1_SetRxInterruptHandler 3FDC  
                 _UART1_SetRxInterruptHandler 3FD2                       __end_of_CCP4_Initialize 3D12  
         fp__UART1_DefaultFramingErrorHandler 0000      __end_of_UART1_DefaultFramingErrorHandler 4032  
          ??_UART1_DefaultFramingErrorHandler 001A             ?_UART1_DefaultFramingErrorHandler 0001  
            _UART1_DefaultFramingErrorHandler 4030                           ??_UART1_tx_vect_isr 0017  
                   __end_of_UART1_rx_vect_isr 376C                               _TMR5_Initialize 38EA  
                             _PWM7_Initialize 3F50                               __initialization 3B46  
                       TMR5_ReadTimer@readVal 0011                              ?_CCP3_CaptureISR 0001  
                                __end_of_main 3EFE                                  __end_of_dtoa 1C6C  
                                __end_of_loop 34F0                   ??_UART1_DefaultErrorHandler 001A  
                     __end_of_TMR2_Initialize 3F38                                  ?_UART1_Write 0001  
                                      ??_main 0023                                        ??_dtoa 0084  
                                      ??_loop 0023                                 __activetblptr 000003  
                                _calcMotorPow 291E                     __end_of_UART1_tx_vect_isr 371C  
                             _PWM8_Initialize 3F38                              _UART1_Initialize 328C  
                                _calcSteering 2A4E                              ?_CCP4_CaptureISR 0001  
                                      _ADACCH 003EE9                                        _ADACCL 003EE8  
                                      _ADACCU 003EEA                                        _ADACQH 003EF4  
                                      _ADACQL 003EF3                                        _ADCON0 003EF8  
                                      _ADCON1 003EF9                                        _ADCON2 003EFA  
                                      _ADCON3 003EFB                                        _ADERRH 003EE3  
                                      _ADERRL 003EE2                                        ?_fputc 0060  
                                      _ADLTHH 003EDF                                        _ADLTHL 003EDE  
                                      ?_fputs 0069                                        _ADRESH 003EF0  
                                      _ADRESL 003EEF                                        _ADPREH 003EF7  
                                      _ADPREL 003EF6                                        _CCPR3H 003F75  
                                      _CCPR4H 003F71                                        _CCPR3L 003F74  
                                      _CCPR4L 003F70                                        _ADSTAT 003EFC  
                                      _ADUTHH 003EE1                              ___awdiv@dividend 0060  
                                      _ADUTHL 003EE0                            _PWM8_LoadDutyValue 3BE8  
                                      _ANSELA 003A40                                        ?_putch 0001  
                                      _ANSELB 003A50                                        _ANSELC 003A60  
                                      _ANSELD 003A70                                        _ANSELE 003A80  
                                      _RB1I2C 003A5A                                        _RB2I2C 003A5B  
                                      _RD0I2C 003A7A                                        _U1CON0 003DF2  
                                      _U1CON1 003DF3                                        _U1CON2 003DF4  
                                      _RD1I2C 003A7B                                        _RC3I2C 003A6A  
                                      _T3GATE 003FA8                                        _RC4I2C 003A6B  
                                      _U1BRGH 003DF6                                        _U1FIFO 003DF7  
                                      _T3GCON 003FA7                                        _U1BRGL 003DF5  
                                      _T5GATE 003F9C                                        _T5GCON 003F9B  
                                      _RA0PPS 003A00                                        _RA1PPS 003A01  
                                      _RA3PPS 003A03                                        _RA4PPS 003A04  
                                      _RB3PPS 003A0B                                        _T5GPPS 003AC9  
                                      i1l1223 402C                                        _ODCONA 003A42  
                                      _ODCONB 003A52                                        _ODCONC 003A62  
                                      _ODCOND 003A72                                        _ODCONE 003A82  
                     __end_of_PWM5_Initialize 3F98                       __end_of_TMR3_Initialize 3B46  
                                      i1l4350 3DC6                                        i1l4352 3DD8  
                                      i1l4354 3DDA                                        i1l5332 3D40  
                                      i1l4356 3DEA                                        i1l5334 3D54  
                                      i1l4358 3DEE                                        i1l5270 3A44  
                                      i1l5262 3A10                                        i1l5280 31FC  
                                      i1l5272 3A48                                        i1l5264 3A20  
                                      i1l5360 36F0                                        i1l5194 4028  
                                      i1l5290 3268                                        i1l5282 3214  
                                      i1l5274 31CC                                        i1l5362 372E  
                                      i1l5266 3A32                                        i1l5292 3286  
                                      i1l5284 3224                                        i1l5276 31DC  
                                      i1l5364 3740                                        i1l5268 3A34  
                                      i1l5382 377E                                        i1l5286 3234  
                                      i1l5278 31EC                                        i1l5358 36DE  
                                      i1l5384 3782                                        i1l5288 324C  
                                      i1l5386 379C                                        i1l5388 37A0  
                                      i2l5300 3CAC                                        i2l5310 3EFE  
                                      i2l5302 3CB4                                        i2l5400 3678  
                                      i2l5312 3F0A                                        i2l5304 3CC2  
                                      i2l5410 3E48                                        i2l5402 367C  
                                      i2l4370 3E02                                        i2l5314 3F12  
                                      i2l5306 3CCE                                        i1l4986 4022  
                                      i2l5412 3E4C                                        i2l5404 3696  
                                      i2l4372 3E06                                        i2l5316 3F16  
                                      i2l5308 3CDC                                        i2l5406 36A6  
                                      i2l4374 3E0C                                        i2l4366 3DF2  
                                      i2l5408 36B8                                        i2l4368 3E00  
                                      i2l4376 3E12                                        _INLVLA 003A44  
                                      i2l4378 3E16                                        i2l5370 3860  
                                      _INLVLB 003A54                                        _INLVLC 003A64  
                                      i2l5372 3870                                        _INLVLD 003A74  
                                      _INLVLE 003A84                                        i2l5390 3934  
                                      i2l5374 39D4                                        i2l5294 3C84  
                                      i2l5366 3814                                        i2l5392 3938  
                                      i2l5376 39D8                                        i2l5296 3C92  
                                      i2l5368 3824                                        i2l5394 3948  
                                      i2l5378 39EA                                        i2l5298 3C9E  
                                      i2l5396 3958                                        i2l5398 396A  
                                      i2l4990 3EC8                                        i2l4992 3ED4  
                                      i2l4988 3EBA                                        i2l4996 3FB0  
                                ?_setSteering 0068                                        _OSCFRQ 0039DF  
                            __end_of_actSpeed 33CA                                        _SMT1PR 003F1B  
                       _UART1_SetErrorHandler 3FF0                              __end_of___xxtofl 262E  
                         ?_PWM8_LoadDutyValue 0020                              __end_of_getCurve 1EAC  
                    __end_of_CCP3_SetCallBack 4022                                  _CCPTMRS0bits 003F5E  
                                _CCPTMRS1bits 003F5F                                  vfprintf@cfmt 0120  
                                      ___flge 2D8A                                     ??___aldiv 0020  
                                   ??___aodiv 0020                                     ??___fladd 008F  
                                   ??___aomod 0020                                     ??___awdiv 0020  
                                   ??___flmul 0076                                     ??___fltol 009B  
                               _CCP3_CallBack 00F8                                  ?_TMR5_Reload 0001  
                     __end_of_PWM6_Initialize 3F80                       __end_of_TMR4_Initialize 3D9A  
                                      clear_0 3B4C                                        clear_1 3B58  
                                      clear_2 3B64                              ___awdiv@quotient 0066  
                                      _motPow 0025                       fp__CCP3_DefaultCallBack 0000  
                                      isa$std 000001                                 _CCP4_CallBack 00F6  
                                      _smtWay 00CC                                        _printf 3E1E  
                                      pad@buf 0072                                        dtoa@fp 007A  
                            ?_CCP3_Initialize 0001                                        _strlen 3A96  
                        ??_PWM8_LoadDutyValue 0060                              __end_of_setMotor 2F74  
                             _ADCC_Initialize 361C          __end_of_TMR4_DefaultInterruptHandler 4034  
                _TMR4_DefaultInterruptHandler 4032                                        fputc@c 0060  
                              _PMD_Initialize 3E96                                        fputs@c 006D  
                                      fputs@i 006E                                        fputs@s 0069  
                                __mediumconst 0000                         __end_of_TMR5_GATE_ISR 3A10  
                                      tblptrh 003FF7                                        tblptrl 003FF6  
                                      tblptru 003FF8                              __end_of_vfprintf 35C0  
                   ?_ADCC_GetSingleConversion 0020      TMR4_SetInterruptHandler@InterruptHandler 0020  
TMR5_SetGateInterruptHandler@InterruptHandler 0020   UART1_SetTxInterruptHandler@InterruptHandler 0020  
 UART1_SetRxInterruptHandler@InterruptHandler 0020          __end_of_UART1_SetOverrunErrorHandler 3FE6  
                _UART1_SetOverrunErrorHandler 3FDC                     _UART1_DefaultErrorHandler 4022  
                           getCurve@deltaLeft 012C                                    ___flge@ff1 006E  
                                  ___flge@ff2 0072                       __end_of_PWM7_Initialize 3F68  
                     __end_of_TMR5_Initialize 3934                                  ___xxtofl@arg 006A  
                                ___xxtofl@exp 0069                             _SYSTEM_Initialize 38A0  
                                ___xxtofl@val 0060                                    __accesstop 0060  
                     __end_of__initialization 3B76                              ?_CCP4_Initialize 0001  
                         setSteering@steering 0068                            ?_SYSTEM_Initialize 0001  
                               ___rparam_used 000001                                    ___fltol@f1 0097  
                             _TMR5_WriteTimer 3DF2                     calcMotorPow@setSpeedDelta 00A1  
                    __end_of_CCP4_SetCallBack 4018                                __pcstackCOMRAM 0001  
                       __end_of_TMR4_CallBack 3D6E                           ??_SYSTEM_Initialize 0022  
                                   ?_TMR4_ISR 0001                                ivt0x8_undefint 00AC  
                               __end_of_fputc 3462                                 __end_of_fputs 39C6  
                             fp__TMR4_10msISR 0000                                 __end_of_putch 3FC8  
                            ?_TMR2_Initialize 0001                       __end_of_PWM8_Initialize 3F50  
                      __end_of_PMD_Initialize 3EBA                         CCP3_CaptureISR@module 0005  
              CCP3_SetCallBack@customCallBack 0020                     _UART1_FramingErrorHandler 00FE  
             fp__TMR4_DefaultInterruptHandler 0000                 ?_TMR4_DefaultInterruptHandler 0001  
                     fp__CCP4_DefaultCallBack 0000                                       ??_fputc 0064  
                   __end_of_SYSTEM_Initialize 38EA                                       ??_fputs 0022  
                             _CLC3_Initialize 3D9A                                       ??_putch 0021  
                 PWM7_LoadDutyValue@dutyValue 0020                                    __pbssBANK0 00B4  
                                  __pbssBANK1 0100                 ?_UART1_SetOverrunErrorHandler 0020  
                      ?_UART1_SetErrorHandler 0020                              ?_PWM5_Initialize 0001  
                            ?_TMR3_Initialize 0001                                    __pnvCOMRAM 0038  
                       _TMR4_InterruptHandler 00F2                                       IVTBASEH 003FD6  
                                     IVTBASEL 003FD5                                       IVTBASEU 003FD7  
                                     ?___flge 006E                                    ??_TMR4_ISR 001D  
                     __end_of_ADCC_Initialize 3678                    __end_of_PWM6_LoadDutyValue 3BB2  
        __end_of_TMR5_SetGateInterruptHandler 4004                  _TMR5_SetGateInterruptHandler 3FFA  
                                     _CCP3CAP 003F77                                       _CCP4CAP 003F73  
                                     _CCP3CON 003F76                                       _CCP4CON 003F72  
                                     _ADFLTRH 003EE7                                       _ADFLTRL 003EE6  
                                     _CCP3PPS 003ACF                                       _CCP4PPS 003AD0  
                                     _CLC3CON 003C60                                       _CLC3POL 003C61  
                                     _ADPREVH 003EEE                                       _ADPREVL 003EED  
                            ?_PWM6_Initialize 0001                              ?_TMR4_Initialize 0001  
                                     _ADSTPTH 003EE5                                       _ADSTPTL 003EE4  
                                     ?_printf 0122                               ?_PMD_Initialize 0001  
                           _UART1_Receive_ISR 31CC                                    _getReverse 34F0  
                                     ?_strlen 0020                                       _U1ERRIE 003DFA  
                                   ?_actSpeed 0020                                       _U1ERRIR 003DF9  
                               ?_TMR4_10msISR 0001                                  ?_Default_ISR 0001  
                          ?_UART1_Receive_ISR 0001                                       _U1RXPPS 003AE5  
                                   ?___xxtofl 0060                            _PWM5_LoadDutyValue 3BB2  
                                  _distRightM 0029                                       _OSCCON1 0039D9  
                                     _OSCCON3 0039DB                             __end_of_calcSpeed 2476  
                                     _IVTLOCK 003FD4                                       _SMT1CLK 003F21  
                                     _OSCTUNE 0039DE                                       _SMT1CPR 003F15  
                                     _SMT1CPW 003F18                                       _PWM5DCH 003F6D  
                                     _PWM5DCL 003F6C                                       _PWM6DCH 003F69  
                                     _PWM6DCL 003F68                                       _PWM7DCH 003F65  
                                     _PWM7DCL 003F64                                       _SMT1SIG 003F22  
                                     _PWM8DCH 003F61                                       _PWM5CON 003F6E  
                                     _PWM8DCL 003F60                                       _SMT1PRH 003F1C  
                                     _PWM6CON 003F6A                                       _SMT1PRL 003F1B  
                                     _PWM7CON 003F66                                       _SMT1PRU 003F1D  
                                   ?_getCurve 0001                                       _SMT1TMR 003F12  
                                     _SMT1WIN 003F23                                       _PWM8CON 003F62  
                                     _SLRCONA 003A43                                       _SLRCONB 003A53  
                                     _SLRCONC 003A63                                       _SLRCOND 003A73  
                                     _SLRCONE 003A83                           ??_UART1_Receive_ISR 001A  
                     __end_of_TMR5_WriteTimer 3E1E                           ?_PWM5_LoadDutyValue 0020  
                            ?_PWM7_Initialize 0001                              ?_TMR5_Initialize 0001  
                   INTERRUPT_Initialize@state 0020                                     _CLCIN0PPS 003AD9  
                                   _CLCIN2PPS 003ADB                                     _CLCIN3PPS 003ADC  
                                     __Hparam 0000                                     ?_setMotor 0062  
                                     __Lparam 0000                      __end_of_UART1_Initialize 3330  
                                     ___aldiv 2B74                                       ___aodiv 262E  
                                     ___fladd 1074                                       ___aomod 27B8  
                                     ___awdiv 3106                                       ___flmul 1536  
                                     ___fltol 2C82                     __end_of_UART1_Receive_ISR 328C  
                                   ?_vfprintf 00AE                          ??_PWM5_LoadDutyValue 0060  
                                __psmallconst 1000                                       __pcinit 3B46  
                   _TMR5_GateInterruptHandler 0038                              ?_PWM8_Initialize 0001  
                                     __ramtop 1000                 ?_TMR5_SetGateInterruptHandler 0020  
                                     __ptext0 3EDE                                       __ptext1 3462  
                                     __ptext2 34F0                                       __ptext3 1C6C  
                                     __ptext4 3E70                                       __ptext5 3E1E  
                                     __ptext6 3558                                       __ptext7 1EAC  
                                     __ptext8 1986                                       __ptext9 303E  
                              ??_TMR4_10msISR 001D                                    ??_actSpeed 0022  
                     __end_of_CLC3_Initialize 3DC6                         _OSCILLATOR_Initialize 3F98  
                                   _T2CONbits 003FAC                                    ??___xxtofl 0064  
                                   _T3CONbits 003FA6                              ___aldiv@dividend 0060  
                                   _T4CONbits 003FA0                      ??_PIN_MANAGER_Initialize 0020  
                                   _T2HLTbits 003FAD                                     _T5CONbits 003F9A  
                   ?_TMR4_SetInterruptHandler 0020                                     _IPR10bits 00398A  
                                     _smtDuty 00D0                                     _T4HLTbits 003FA1  
                                  ??_getCurve 012A                                     _PIE10bits 00399A  
                        end_of_initialization 3B76                                     _T2RSTbits 003FAF  
              ??_TMR4_DefaultInterruptHandler 001D                                     _PIR10bits 0039AA  
                                   _T4RSTbits 003FA3                                       fputc@fp 0062  
                           ??_SMT1_PR_ACQ_ISR 0017           __end_of_UART1_SetTxInterruptHandler 3FD2  
                 _UART1_SetTxInterruptHandler 3FC8                                       fputs@fp 006B  
              ??_UART1_SetOverrunErrorHandler 0022                                    ??_setMotor 0064  
                           __end_of_vfpfcnvrt 20BA                             ?_CCP3_SetCallBack 0020  
                            ___aldiv@quotient 006A                                       postdec2 003FDD  
                           ??_SMT1_PW_ACQ_ISR 0017                                       postinc0 003FEE  
                                     postinc1 003FE6                                       postinc2 003FDE  
                            ?_ADCC_Initialize 0001                            ??_CCP3_SetCallBack 0022  
                                  ??_vfprintf 0023              __end_of_ADCC_GetSingleConversion 3B0E  
                           UART1_Write@txData 0020                           _UART1_RxDataHandler 3DC6  
                                     strlen@a 0060                                       strlen@s 0020  
                                 ?_getReverse 0001                                     _PORTDbits 003FCD  
                                 ___fladd@grs 0096                            getCurve@deltaRight 012E  
                               ___xxtofl@sign 0068                          ?_UART1_RxDataHandler 0001  
                            ?_TMR5_WriteTimer 000D                          setSteering@steeringB 006F  
                        setSteering@steeringF 006D                       TMR5_WriteTimer@timerVal 000D  
                                 ___flmul@grs 007C             CCP4_DefaultCallBack@capturedValue 0007  
                           ?_CCP4_SetCallBack 0020                  __end_of_INTERRUPT_Initialize 3808  
                              __end_of___flge 2E90                            ??_CCP4_SetCallBack 0022  
                                 _CLC3CONbits 003C60                                   vfpfcnvrt@ap 00A2  
                                 vfpfcnvrt@fp 009E                                   vfpfcnvrt@ll 00A6  
                      ?_OSCILLATOR_Initialize 0001                                __end_of_printf 3E48  
                            ?_CLC3_Initialize 0001                                __end_of_strlen 3AD2  
                              _TMR5_ReadTimer 3EBA                           start_initialization 3B46  
              ??_TMR5_SetGateInterruptHandler 0022                                   __end_of_abs 3A96  
                                 __end_of_pad 3106                       ??_UART1_SetErrorHandler 0022  
                       ??_UART1_RxDataHandler 001A                                   putch@txData 0021  
                                  ivt0x8_base 0008                                 _uart1RxBuffer 00BC  
                                 _actMotorPow 00DA                                 _uart1TxBuffer 00C4  
                        __end_of_TMR4_10msISR 402E                                   vfprintf@fmt 00B0  
                                    ??___flge 0076                              ??_PMD_Initialize 0020  
                                _oldDistRight 00E2                    __end_of_PWM7_LoadDutyValue 3C54  
                           ??_SMT1_Initialize 0020                                      ??_printf 0023  
                                    ??_strlen 0022                        __end_of_TMR5_ReadTimer 3EDE  
                       CCP4_CaptureISR@module 000B                                     ___fladd@a 008B  
                                   ___fladd@b 0087                           calcMotorPow@addMPow 00A5  
                    _ADCC_GetSingleConversion 3AD2                   PWM5_LoadDutyValue@dutyValue 0020  
                       TMR4_ISR@CountCallBack 0027                                     ___flmul@a 0072  
                                   ___flmul@b 006E                                   __pbssCOMRAM 0023  
                          _UART1_ErrorHandler 00FA                                 __pcstackBANK0 0060  
                               __pcstackBANK1 0120                              ___aodiv@dividend 0060  
                          _PWM6_LoadDutyValue 3B7C                      _UART1_RxInterruptHandler 003E  
                           ??_CCP3_CaptureISR 0003                  __end_of_CCP3_DefaultCallBack 3CB4  
                                   _calcSpeed 22A0                           ?_PWM6_LoadDutyValue 0020  
                 PWM8_LoadDutyValue@dutyValue 0020                  fp__UART1_DefaultErrorHandler 0000  
                                _currentSpeed 00DE                  ?_UART1_SetRxInterruptHandler 0020  
                                   __pnvBANK0 00F0                            setMotor@motorPower 0062  
                      _PIN_MANAGER_Initialize 2F74                                     _dtoa$3453 008C  
                           ?_UART1_Initialize 0001          __end_of_UART1_SetFramingErrorHandler 3FF0  
                _UART1_SetFramingErrorHandler 3FE6                                      ?___aldiv 0060  
             ADCC_GetSingleConversion@channel 0022                                      ?___aodiv 0060  
                                    ?___fladd 0087                                      ?___aomod 0060  
            __end_of_TMR4_SetInterruptHandler 400E                                      ?___awdiv 0060  
                            ___aodiv@quotient 0072             CCP3_DefaultCallBack@capturedValue 0001  
                           ??_CCP4_CaptureISR 0009                                      ?___flmul 006E  
                                    ?___fltol 0097                            ??_UART1_Initialize 0022  
                                   _distLeftM 002B                                     _distFront 00EE  
                            _uart1RxLastError 002E                                 ??_UART1_Write 0020  
                                   _distRight 00E6                          ??_PWM6_LoadDutyValue 0060  
                                   _cycle10ms 00EB                               ?_TMR5_ReadTimer 000D  
                               ?_calcMotorPow 0001                                   __smallconst 1000  
                                    _CLC3GLS0 003C66                                      _CLC3GLS1 003C67  
                                    _CLC3GLS2 003C68                                      _CLC3GLS3 003C69  
                                   _driveMode 00ED           fp__UART1_DefaultOverrunErrorHandler 0000  
    __end_of_UART1_DefaultOverrunErrorHandler 4030            ??_UART1_DefaultOverrunErrorHandler 001A  
           ?_UART1_DefaultOverrunErrorHandler 0001              _UART1_DefaultOverrunErrorHandler 402E  
                                    _CLC3SEL0 003C62                                      _CLC3SEL1 003C63  
                                    _CLC3SEL2 003C64                                      _CLC3SEL3 003C65  
                             _SMT1_PR_ACQ_ISR 3934                                 ?_calcSteering 0001  
                               _TMR5_GATE_ISR 39C8                                     _curveMode 00EC  
                                    _T2CLKCON 003FAE                                   _U1ERRIRbits 003DF9  
                                    _T4CLKCON 003FA2                                    ?_calcSpeed 0001  
                        _INTERRUPT_Initialize 37BC                                 ??_setSteering 006B  
                             ___aldiv@divisor 0064                               _SMT1_PW_ACQ_ISR 3678  
                             ___aldiv@counter 0068         UART1_SetErrorHandler@interruptHandler 0020  
                                    _IPR1bits 003981                  __end_of_CCP4_DefaultCallBack 3CE4  
                           ??_CCP3_Initialize 0022                                      _PIE1bits 003991  
                                    _IPR3bits 003983                                      _PIE3bits 003993  
                                    _IPR7bits 003987                                      _IPR8bits 003988  
                                    _PIE7bits 003997                                      _IPR9bits 003989  
                                    _PIE8bits 003998                                      _PIE9bits 003999  
                                    _IVTBASEH 003FD6                                      _IVTBASEL 003FD5  
                                    i1u400_20 3A20                                      i1u400_21 3A1C  
                                    _IVTBASEU 003FD7                                      i1u401_20 3A44  
                                    i1u401_21 3A40                                      i1u402_20 31EC  
                                    i1u402_21 31E8                                      i1u411_20 3D54  
                                    i1u411_21 3D50                                      i1u404_20 3224  
                                    i1u403_28 3202                                      i1u404_21 3220  
                                    i1u403_29 3214                                      i1u412_28 3D5A  
                                    i1u412_29 3D6C                                      i1u406_20 3268  
                                    i1u405_28 323A                                      i1u406_21 3264  
                                    i1u405_29 324C                                      i1u423_20 379C  
                                    i1u415_20 36F0                                      i1u423_21 3798  
                                    i1u415_21 36EC                                      i1u407_28 326E  
                                    i1u407_29 3282                                      i1u417_20 3740  
                                    i1u416_28 36F6                                      i1u417_21 373C  
                                    i1u416_29 3708                                      i1u418_28 3746  
                                    i1u418_29 3758                 ??_UART1_SetRxInterruptHandler 0022  
                                    i1u278_20 3DEA                                      i1u278_21 3DE6  
                                    i2u421_40 39EA                                      i2u420_48 387E  
                                    i2u421_41 39E6                                      i2u420_49 3892  
                                    i2u422_48 39F0                                      i2u422_49 3A02  
                                    i2u424_40 3958                                      i2u408_40 3C92  
                                    i2u424_41 3954                                      i2u408_41 3C8E  
                                    i2u425_40 36A6                                      i2u409_40 3CC2  
                                    i2u425_41 36A2                                      i2u409_41 3CBE  
                                    _PIR1bits 0039A1                                      i2u419_48 3832  
                                    i2u419_49 3846                                      i2u279_40 3E00  
                                    i2u279_41 3DFC                                      _PIR4bits 0039A4  
                                    _PIR6bits 0039A6                                      _PIR7bits 0039A7  
                                    _PIR8bits 0039A8                                      _PIR9bits 0039A9  
                                    _SMT1CON0 003F1E                                      _SMT1CON1 003F1F  
                                    _SMT1STAT 003F20                             _SMT1_Overflow_ISR 3E48  
                                    _TMR4_ISR 376C                    __end_of_UART1_Transmit_ISR 3A54  
                               _TMR4_CallBack 3D40                                     _smtPeriod 0034  
               ?_UART1_SetFramingErrorHandler 0020                                 ??_TMR5_Reload 000F  
                                   _vfpfcnvrt 1EAC                            ?_SMT1_Overflow_ISR 0001  
                           _getBatteryVoltage 3E70                                  ??_getReverse 0020  
                              ??_calcMotorPow 009F                                    _ADCON0bits 003EF8  
                                  _ADCON1bits 003EF9                                    _ADCON2bits 003EFA  
                                  _ADCON3bits 003EFB                            ?_getBatteryVoltage 0001  
                           ??_CCP4_Initialize 0022                                ??_calcSteering 0071  
                         ??_SMT1_Overflow_ISR 0017                     TMR5_ReadTimer@readValHigh 0013  
                              ?_TMR5_GATE_ISR 0001                           __end_of_UART1_Write 361C  
                                _SMT1CON0bits 003F1E                                  _SMT1CON1bits 003F1F  
                         ??_getBatteryVoltage 0023                                   _INTCON0bits 003FD2  
                       ?_INTERRUPT_Initialize 0001                          fp__UART1_Receive_ISR 0000  
                      _uart1TxBufferRemaining 0040                             ??_TMR2_Initialize 0020  
                                _uart1RxCount 002F                            __end_of_getReverse 3558  
                                  _ADSTATbits 003EFC                                      __Hrparam 0000  
                   __end_of_SMT1_Overflow_ISR 3E70                           __end_of_setSteering 22A0  
                                  vfprintf@ap 00B2                                      __Lrparam 0000  
                                  vfprintf@fp 00AE                                   _oldDistLeft 00E4  
                              ?_TMR4_CallBack 0001                                calcSpeed@speed 00A1  
                   __end_of_getBatteryVoltage 3E96                       ??_OSCILLATOR_Initialize 0020  
                                _SMT1STATbits 003F20                          _CCP3_DefaultCallBack 3C84  
                     __end_of_SMT1_PR_ACQ_ISR 397E                                    ?_vfpfcnvrt 009E  
                             ___aodiv@divisor 0068                             ??_PWM5_Initialize 0020  
                           ??_TMR3_Initialize 0020                               ___aodiv@counter 0070  
                    _TMR4_SetInterruptHandler 4004                                      _actSpeed 3330  
                                _TMR4_10msISR 4028                                      ___xxtofl 2476  
                         __end_of_TMR5_Reload 3FBE                                      __pivt0x8 0008  
                     __end_of_SMT1_PW_ACQ_ISR 36CC                                      _getCurve 1C6C  
                                    __ptext10 3A96                                      __ptext11 397E  
                                    __ptext20 20BA                                      __ptext12 33CA  
                                    __ptext21 3106                                      __ptext13 3FBE  
                                    __ptext30 3330                                      __ptext22 3B7C  
                                    __ptext14 35C0                                      __ptext31 2B74  
                                    __ptext23 3BB2                                      __ptext15 3A54  
                                    __ptext40 3FDC                                      __ptext32 2476  
                                    __ptext24 22A0                                      __ptext16 27B8  
                                    __ptext41 3FE6                                      __ptext33 2C82  
                                    __ptext25 1074                                      __ptext17 262E  
                                    __ptext50 3F38                                      __ptext42 3FF0  
                                    __ptext34 1536                                      __ptext26 291E  
                                    __ptext18 3AD2                                      __ptext51 3F50  
                                    __ptext43 38EA                                      __ptext35 2D8A  
                                    __ptext27 2E90                                      __ptext19 2A4E  
                                    __ptext60 400E                                      __ptext52 3F68  
                                    __ptext44 3FFA                                      __ptext36 38A0  
                                    __ptext28 3BE8                                      __ptext61 3D12  
                                    __ptext53 3F80                                      __ptext45 3D6E  
                                    __ptext37 328C                                      __ptext29 3C1E  
                                    __ptext70 4022                                      __ptext62 4018  
                                    __ptext54 3E96                                      __ptext46 4004  
                                    __ptext38 3FC8                                      __ptext71 3DC6  
                                    __ptext63 361C                                      __ptext55 2F74  
                                    __ptext47 3B0E                                      __ptext39 3FD2  
                                    __ptext80 3CB4                                      __ptext72 376C  
                                    __ptext64 36CC                                      __ptext56 3F98  
                                    __ptext48 3F1C                                      __ptext81 39C8  
                                    __ptext73 3D40                                      __ptext65 3A10  
                                    __ptext57 37BC                                      __ptext49 3C54  
                                    __ptext82 3EFE                                      __ptext74 4028  
                                    __ptext66 371C                                      __ptext58 3D9A  
                                    __ptext83 3FB0                                      __ptext75 4032  
                                    __ptext67 31CC                                      __ptext59 3CE4  
                                    __ptext84 3DF2                                      __ptext76 4034  
                                    __ptext68 402E                                      __ptext85 3EBA  
                                    __ptext77 3808                                      __ptext69 4030  
                                    __ptext86 3934                                      __ptext78 3C84  
                                    __ptext87 3678                                      __ptext79 3854  
                                    __ptext88 3E48                                      __ptext89 0000  
                                    _distLeft 00E8                                   ??_calcSpeed 009F  
               __end_of_UART1_SetErrorHandler 3FFA                                    _T3GCONbits 003FA7  
                           ??_TMR4_Initialize 0022                             ??_PWM6_Initialize 0020  
                                    _oldSpeed 00DC                                    _T5GCONbits 003F9B  
                             _SMT1_Initialize 3C54                                   _IVTLOCKbits 003FD4  
                                    _setMotor 2E90                                      _setSpeed 00E0  
                   _UART1_OverrunErrorHandler 00FC  UART1_SetOverrunErrorHandler@interruptHandler 0020  
                                    isa$xinst 000000                    ??_ADCC_GetSingleConversion 0060  
                  ?_UART1_DefaultErrorHandler 0001                         ?_CCP3_DefaultCallBack 0001  
                                    _vfprintf 3558                                     printf@fmt 0122  
                  __end_of_PWM8_LoadDutyValue 3C1E                               _CCP3_CaptureISR 3808  
                                 _UART1_Write 35C0                         fp__UART1_Transmit_ISR 0000  
                           ??_PWM7_Initialize 0020                             ??_TMR5_Initialize 0060  
         fp__TMR5_DefaultGateInterruptHandler 0000      __end_of_TMR5_DefaultGateInterruptHandler 3F1C  
          ??_TMR5_DefaultGateInterruptHandler 0015             ?_TMR5_DefaultGateInterruptHandler 0001  
            _TMR5_DefaultGateInterruptHandler 3EFE                              ___aomod@dividend 0060  
                               ??_Default_ISR 0001                ??_UART1_SetFramingErrorHandler 0022  
                                _reverseCount 002D                               ??_TMR5_GATE_ISR 0015  
                 __end_of_UART1_RxDataHandler 3DF2                                   _uart1RxHead 0031  
                        _CCP4_DefaultCallBack 3CB4                                   _uart1TxHead 0033  
                                 _uart1RxTail 0030                                   _uart1TxTail 0032  
                      ??_INTERRUPT_Initialize 0020                            _PWM7_LoadDutyValue 3C1E  
                                    intlevel1 0000                                      intlevel2 0000  
                                 _setSteering 20BA                               _CCP4_CaptureISR 3854  
                     ?_PIN_MANAGER_Initialize 0001                             ??_PWM8_Initialize 0020  
                         ?_PWM7_LoadDutyValue 0020                          __end_of_calcMotorPow 2A4E  
                             ??_TMR4_CallBack 001D                          __end_of_calcSteering 2B74  
                         _uart1RxStatusBuffer 00B4                                      printf@ap 0128  
                            ??_TMR5_ReadTimer 000F  UART1_SetFramingErrorHandler@interruptHandler 0020  
           __end_of_UART1_DefaultErrorHandler 4028                               ___aomod@divisor 0068  
                                 ??_vfpfcnvrt 00A4                               ___aomod@counter 0020  
                            ?_SMT1_PR_ACQ_ISR 0001                                   _TMR5_Reload 3FB0  
                                  _SMT1SIGPPS 003AD2                                    _SMT1WINPPS 003AD1  
                        ??_PWM7_LoadDutyValue 0060                                 actSpeed@speed 006E  
                       ?_CCP4_DefaultCallBack 0007                     calcMotorPow@oldSpeedDelta 00A3  
                            _CCP3_SetCallBack 4018                                  ___aldiv@sign 0069  
                            ?_SMT1_PW_ACQ_ISR 0001                               _CCP3_Initialize 3D12  
                 PWM6_LoadDutyValue@dutyValue 0020                             calcSteering@delta 0073  
                    _UART1_TxInterruptHandler 003C                                 ___fladd@signs 0093  
                         __end_of_Default_ISR 4036                       __end_of_SMT1_Initialize 3C84  
                                ___aodiv@sign 0071                __end_of_PIN_MANAGER_Initialize 303E  
                           ??_ADCC_Initialize 0020                                  ___fladd@aexp 0094  
                                ___fladd@bexp 0095                  ?_UART1_SetTxInterruptHandler 0020  
                                ___aomod@sign 0021                       __end_of_CCP3_CaptureISR 3854  
